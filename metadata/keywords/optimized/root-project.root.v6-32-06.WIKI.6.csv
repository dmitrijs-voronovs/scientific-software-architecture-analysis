quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability,2.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.08,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95985,error,error,95985,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,2.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1116 | 2.82496 2.31503 0.0201083 0.00181922 43742 0; : 1117 | 2.74168 2.90157 0.0200454 0.00175765 43745.2 1; : 1118 | 2.51176 4.00704 0.0201409 0.00176812 43542.7 2; : 1119 | 3.03618 2.55498 0.0202517 0.00178949 43331.7 3; : 1120 | 2.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:120007,error,error,120007,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"2/2]. void TGraphMultiErrors::SetPointError ; (; Int_t ; i, . Int_t ; ne, . Double_t ; exL, . Double_t ; exH, . const Double_t * ; eyL, . const Double_t * ; eyH . ). virtual . Set ex and ey values for point i. ; Definition at line 1834 of file TGraphMultiErrors.cxx. ◆ SetPointEX(). void TGraphMultiErrors::SetPointEX ; (; Int_t ; i, . Double_t ; exL, . Double_t ; exH . ). virtual . Set ex values for point i. ; Definition at line 1844 of file TGraphMultiErrors.cxx. ◆ SetPointEXhigh(). void TGraphMultiErrors::SetPointEXhigh ; (; Int_t ; i, . Double_t ; exH . ). virtual . Set exH value for point i. ; Definition at line 1869 of file TGraphMultiErrors.cxx. ◆ SetPointEXlow(). void TGraphMultiErrors::SetPointEXlow ; (; Int_t ; i, . Double_t ; exL . ). virtual . Set exL value for point i. ; Definition at line 1853 of file TGraphMultiErrors.cxx. ◆ SetPointEY() [1/2]. void TGraphMultiErrors::SetPointEY ; (; Int_t ; i, . Int_t ; e, . Double_t ; eyL, . Double_t ; eyH . ). virtual . Set error e ey values for point i. ; Definition at line 1920 of file TGraphMultiErrors.cxx. ◆ SetPointEY() [2/2]. void TGraphMultiErrors::SetPointEY ; (; Int_t ; i, . Int_t ; ne, . const Double_t * ; eyL, . const Double_t * ; eyH . ). virtual . Set ey values for point i. ; Definition at line 1885 of file TGraphMultiErrors.cxx. ◆ SetPointEYhigh() [1/2]. void TGraphMultiErrors::SetPointEYhigh ; (; Int_t ; i, . Int_t ; e, . Double_t ; eyH . ). virtual . Set error e eyH value for point i. ; Definition at line 1951 of file TGraphMultiErrors.cxx. ◆ SetPointEYhigh() [2/2]. void TGraphMultiErrors::SetPointEYhigh ; (; Int_t ; i, . Int_t ; ne, . const Double_t * ; eyH . ). virtual . Set eyH values for point i. ; Definition at line 1907 of file TGraphMultiErrors.cxx. ◆ SetPointEYlow() [1/2]. void TGraphMultiErrors::SetPointEYlow ; (; Int_t ; i, . Int_t ; e, . Double_t ; eyL . ). virtual . Set error e eyL value for point i. ; Definition at line 1929 of file TGraphMultiErrors.cxx. ◆ SetPointEYlow() [2/2]. void TGra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:75275,error,error,75275,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['error']
Availability,"2/3 of the marker size. |; 228| ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; 229| \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; 230| ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; 231| ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; 232| ""2"" | Error rectangles are drawn. |; 233| ""3"" | A filled area is drawn through the end points of the vertical error bars. |; 234| ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; 235| ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |; 236 ; 237 ; 238`gStyle->SetErrorX(dx)` controls the size of the error along x.; 239`dx = 0` removes the error along x.; 240 ; 241`gStyle->SetEndErrorSize(np)` controls the size of the lines; 242at the end of the error bars (when option 1 is used).; 243By default `np=1`. (np represents the number of pixels).; 244 ; 245\anchor GrP3a; 246#### TGraphErrors; 247 ; 248A `TGraphErrors` is a `TGraph` with error bars. The errors are; 249defined along X and Y and are symmetric: The left and right errors are the same; 250along X and the bottom and up errors are the same along Y.; 251 ; 252Begin_Macro(source); 253{; 254 auto c4 = new TCanvas(""c4"",""c4"",200,10,600,4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:9397,error,error,9397,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['error'],['error']
Availability,20 | 2.66116 2.61177 0.0204165 0.00176394 42889.5 4; : 1121 | 3.00965 2.56116 0.0204562 0.00180217 42886.2 5; : 1122 | 3.0625 3.75816 0.0204635 0.00176149 42776.2 6; : 1123 | 2.88666 2.6576 0.0204265 0.00178135 42906.6 7; : 1124 | 2.54231 2.73598 0.020225 0.00176346 43333.4 8; : 1125 | 2.44231 2.73459 0.0201498 0.00175906 43500.1 9; : 1126 | 2.45201 2.82465 0.0200726 0.00175651 43677.5 10; : 1127 | 2.54248 2.42056 0.0201867 0.00176633 43430.3 11; : 1128 | 2.47016 2.53962 0.0206089 0.00182988 42600.8 12; : 1129 | 2.38268 2.44496 0.0204067 0.00176828 42922.1 13; : 1130 | 2.59925 2.55821 0.0200531 0.00176378 43741.4 14; : 1131 | 2.55367 2.59723 0.0200573 0.00177202 43751.1 15; : 1132 | 2.73554 2.74944 0.020135 0.00176885 43558.3 16; : 1133 | 2.68556 2.54814 0.0200421 0.00176557 43772.1 17; : 1134 | 2.52258 2.47147 0.0200724 0.0017645 43696.9 18; : 1135 | 2.54757 2.67188 0.0200351 0.00176104 43778 19; : 1136 | 2.63764 2.78828 0.0200363 0.0017639 43781.8 20; : 1137 Minimum Test error found - save the configuration ; : 1137 | 2.5743 2.19951 0.0201074 0.00183887 43791.1 0; : 1138 | 2.48438 2.23196 0.0200456 0.00175699 43743.1 1; : 1139 | 2.50812 2.26597 0.0200665 0.00175755 43694.4 2; : 1140 | 2.3988 2.24899 0.0200386 0.00175805 43762.4 3; : 1141 | 2.7672 3.06409 0.0200539 0.00176427 43740.6 4; : 1142 | 2.49905 2.42566 0.0200843 0.00176461 43669 5; : 1143 | 2.42701 2.41776 0.0200668 0.00178464 43758.5 6; : 1144 | 2.26582 2.24235 0.0200333 0.00176428 43790 7; : 1145 | 2.32819 2.25052 0.0200451 0.00176354 43759.9 8; : 1146 | 2.38829 2.61112 0.0201128 0.00176481 43601.4 9; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:122001,error,error,122001,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"20, Option_t *option=""same"")This function calculates the background spectrum in this histogram.Definition TH1.cxx:9287; TH1::FillNvirtual void FillN(Int_t, const Double_t *, const Double_t *, const Double_t *, Int_t)Definition TH1.h:224; TH1::SameLimitsAndNBinsstatic Bool_t SameLimitsAndNBins(const TAxis &axis1, const TAxis &axis2)Same limits and bins.Definition TH1.cxx:5898; TH1::Addvirtual Bool_t Add(TF1 *h1, Double_t c1=1, Option_t *option="""")Performs the operation: this = this + c1*f1 if errors are defined (see TH1::Sumw2),...Definition TH1.cxx:826; TH1::fMaximumDouble_t fMaximumMaximum value for plotting.Definition TH1.h:100; TH1::fBufferSizeInt_t fBufferSizefBuffer sizeDefinition TH1.h:107; TH1::RetrieveBinContentvirtual Double_t RetrieveBinContent(Int_t bin) constRaw retrieval of bin content on internal data structure see convention for numbering bins in TH1::Get...Definition TH1.cxx:9439; TH1::IntegralAndErrorvirtual Double_t IntegralAndError(Int_t binx1, Int_t binx2, Double_t &err, Option_t *option="""") constReturn integral of bin contents in range [binx1,binx2] and its error.Definition TH1.cxx:7968; TH1::fDimensionInt_t fDimension! Histogram dimension (1, 2 or 3 dim)Definition TH1.h:110; TH1::SetBinErrorvirtual void SetBinError(Int_t bin, Double_t error)Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empt...Definition TH1.cxx:9206; TH1::fBinStatErrOptEBinErrorOpt fBinStatErrOptOption for bin statistical errors.Definition TH1.h:113; TH1::fgBufferSizestatic Int_t fgBufferSize! Default buffer size for automatic histogramsDefinition TH1.h:115; TH1::SetBinsLengthvirtual void SetBinsLength(Int_t=-1)Definition TH1.h:380; TH1::fNormFactorDouble_t fNormFactorNormalization factor.Definition TH1.h:102; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; TH1::GetYaxisTAxis * GetYaxis()Definition TH1.h:325; TH1::fContourTArrayD fContourArray to display contour levels.Definitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8h_source.html:66704,error,error,66704,doc/master/TH1_8h_source.html,https://root.cern,https://root.cern/doc/master/TH1_8h_source.html,1,['error'],['error']
Availability,"202 bool NormalizeErrors() const { return fNormErrors; }; 203 ; 204 ///do analysis for parabolic errors; 205 bool ParabErrors() const { return fParabErrors; }; 206 ; 207 ///do minos errors analysis on the parameters; 208 bool MinosErrors() const { return fMinosErrors; }; 209 ; 210 ///Update configuration after a fit using the FitResult; 211 bool UpdateAfterFit() const { return fUpdateAfterFit; }; 212 ; 213 ///Apply Weight correction for error matrix computation; 214 bool UseWeightCorrection() const { return fWeightCorr; }; 215 ; 216 ; 217 /// return vector of parameter indices for which the Minos Error will be computed; 218 const std::vector<unsigned int> & MinosParams() const { return fMinosParams; }; 219 ; 220 /**; 221 set the option to normalize the error on the result according to chi2/ndf; 222 */; 223 void SetNormErrors(bool on = true) { fNormErrors= on; }; 224 ; 225 ///set parabolic errors; 226 void SetParabErrors(bool on = true) { fParabErrors = on; }; 227 ; 228 ///set Minos errors computation to be performed after fitting; 229 void SetMinosErrors(bool on = true) { fMinosErrors = on; }; 230 ; 231 ///apply the weight correction for error matrix computation; 232 void SetWeightCorrection(bool on = true) { fWeightCorr = on; }; 233 ; 234 /// set parameter indices for running Minos; 235 /// this can be used for running Minos on a subset of parameters - otherwise is run on all of them; 236 /// if MinosErrors() is set; 237 void SetMinosErrors(const std::vector<unsigned int> & paramInd ) {; 238 fMinosErrors = true;; 239 fMinosParams = paramInd;; 240 }; 241 ; 242 ///Update configuration after a fit using the FitResult; 243 void SetUpdateAfterFit(bool on = true) { fUpdateAfterFit = on; }; 244 ; 245 ; 246 /**; 247 static function to control default minimizer type and algorithm; 248 */; 249 static void SetDefaultMinimizer(const char *type, const char *algo = nullptr);; 250 ; 251 ; 252 ; 253 ; 254protected:; 255 ; 256 ; 257private:; 258 ; 259 bool fNormErrors; ///< flag for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:6663,error,errors,6663,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['error'],['errors']
Availability,"2046}; a#define a(i)Definition RSha256.hxx:99; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Version_tshort Version_tDefinition RtypesCore.h:65; Float_tfloat Float_tDefinition RtypesCore.h:57; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Long64_tlong long Long64_tDefinition RtypesCore.h:69; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassImp#define ClassImp(name)Definition Rtypes.h:382; TBuffer.h; TClass.h; TError.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; Fatalvoid Fatal(const char *location, const char *msgfmt,...)Use this function in case of a fatal error. It will abort the program.Definition TError.cxx:244; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; namechar name[80]Definition TGX11.cxx:110; THLimitsFinder.h; xminfloat xminDefinition THbookFile.cxx:95; yminfloat yminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; ymaxfloat ymaxDefinition THbookFile.cxx:95; TMath.h; TProfile2D.h; TProfileHelper.h; EErrorTypeEErrorTypeDefinition TProfile.h:28; kERRORSPREAD@ kERRORSPREADDefinition TProfile.h:28; kERRORSPREADG@ kERRORSPREADGDefinition TProfile.h:28; kERRORSPREADI@ kERRORSPREADIDefinition TProfile.h:28; gDebugInt_t gDebugDefinition TROOT.cxx:597; TArrayDArray of doubles (64 bits per element).Definition TArrayD.h:27; TArrayD::fArrayDouble_t * fArrayDefinition TArrayD.h:30; TArrayD::Streamervoid Streamer(TBuffer &) overrideStream a TArrayD object.Definition TArrayD.cxx:149; TArrayD::Copyvoid Copy(TArrayD &array) constDef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:75744,error,error,75744,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['error'],['error']
Availability,207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96429,error,error,96429,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"2095 iercr = 3;; 2096// in any case; 2097L1000:; 2098 if (ldebug) {; 2099 itoohi = 0;; 2100 for (i = 1; i <= ipt; ++i) {; 2101 if (fYpt[i-1] > aim + fUp) {; 2102 fYpt[i-1] = aim + fUp;; 2103 fChpt[i-1] = '+';; 2104 itoohi = 1;; 2105 }; 2106 }; 2107 fChpt[ipt] = 0;; 2108 chsign = ""POSI"";; 2109 if (fXdircr < 0) chsign = ""NEGA"";; 2110 if (fKe2cr == 0) {; 2111 Printf("" %sTIVE MINOS ERROR, PARAMETER %3d"",chsign,fKe1cr);; 2112 }; 2113 if (itoohi == 1) {; 2114 Printf(""POINTS LABELLED '+' WERE TOO HIGH TO PLOT."");; 2115 }; 2116 if (iercr == 1) {; 2117 Printf(""RIGHTMOST POINT IS UP AGAINST LIMIT."");; 2118 }; 2119 mnplot(fXpt, fYpt, fChpt, ipt, fNpagwd, fNpagln);; 2120 }; 2121}; 2122 ; 2123////////////////////////////////////////////////////////////////////////////////; 2124/// Makes sure that the current point is a local minimum; 2125///; 2126/// Makes sure that the current point is a local; 2127/// minimum and that the error matrix exists,; 2128/// or at least something good enough for MINOS and MNCONT; 2129 ; 2130void TMinuit::mncuve(); 2131{; 2132 /* Local variables */; 2133 Double_t dxdi, wint;; 2134 Int_t ndex, iext, i, j;; 2135 ; 2136 if (fISW[3] < 1) {; 2137 Printf("" FUNCTION MUST BE MINIMIZED BEFORE CALLING %s"",(const char*)fCfrom);; 2138 fApsi = fEpsi;; 2139 mnmigr();; 2140 }; 2141 if (fISW[1] < 3) {; 2142 mnhess();; 2143 if (fISW[1] < 1) {; 2144 mnwarn(""W"", fCfrom, ""NO ERROR MATRIX. WILL IMPROVISE."");; 2145 for (i = 1; i <= fNpar; ++i) {; 2146 ndex = i*(i-1) / 2;; 2147 for (j = 1; j <= i-1; ++j) {; 2148 ++ndex;; 2149 fVhmat[ndex-1] = 0;; 2150 }; 2151 ++ndex;; 2152 if (fG2[i-1] <= 0) {; 2153 wint = fWerr[i-1];; 2154 iext = fNexofi[i-1];; 2155 if (fNvarl[iext-1] > 1) {; 2156 mndxdi(fX[i-1], i-1, dxdi);; 2157 if (TMath::Abs(dxdi) < .001) wint = .01;; 2158 else wint /= TMath::Abs(dxdi);; 2159 }; 2160 fG2[i-1] = fUp / (wint*wint);; 2161 }; 2162 fVhmat[ndex-1] = 2 / fG2[i-1];; 2163 }; 2164 fISW[1] = 1;; 2165 fDcovar = 1;; 2166 } else mnwerr();; 2167 }; 2168}; 2169 ; 2170",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:71143,error,error,71143,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['error']
Availability,"21 return;; 7822 }; 7823 ; 7824// 'SHO WARnings', ask if any suppressed mess in buffer; 7825 if (copt == ""W"") {; 7826 ityp = 1;; 7827 ctyp = ""WARNING"";; 7828 } else {; 7829 ityp = 2;; 7830 ctyp = ""*DEBUG*"";; 7831 }; 7832 if (fNwrmes[ityp-1] > 0) {; 7833 englsh = "" WAS SUPPRESSED. "";; 7834 if (fNwrmes[ityp-1] > 1) englsh = ""S WERE SUPPRESSED."";; 7835 Printf("" %5d MINUIT %s MESSAGE%s"",fNwrmes[ityp-1]; 7836 ,(const char*)ctyp,(const char*)englsh);; 7837 nm = fNwrmes[ityp-1];; 7838 ic = 0;; 7839 if (nm > kMAXMES) {; 7840 Printf("" ONLY THE MOST RECENT 10 WILL BE LISTED BELOW."");; 7841 nm = kMAXMES;; 7842 ic = fIcirc[ityp-1];; 7843 }; 7844 Printf("" CALLS ORIGIN MESSAGE"");; 7845 for (i = 1; i <= nm; ++i) {; 7846 ++ic;; 7847 if (ic > kMAXMES) ic = 1;; 7848 Printf("" %6d %s %s"", fNfcwar[ic],fOrigin[ic].Data(),fWarmes[ic].Data());; 7849 }; 7850 fNwrmes[ityp-1] = 0;; 7851 Printf("" "");; 7852 }; 7853}; 7854 ; 7855////////////////////////////////////////////////////////////////////////////////; 7856/// Calculates the WERR, external parameter errors; 7857///; 7858/// and the global correlation coefficients, to be called; 7859/// whenever a new covariance matrix is available.; 7860 ; 7861void TMinuit::mnwerr(); 7862{; 7863 Double_t denom, ba, al, dx, du1, du2;; 7864 Int_t ndex, ierr, i, j, k, l, ndiag, k1, iin;; 7865 ; 7866// calculate external error if v exists; 7867 if (fISW[1] >= 1) {; 7868 for (l = 1; l <= fNpar; ++l) {; 7869 ndex = l*(l + 1) / 2;; 7870 dx = TMath::Sqrt(TMath::Abs(fVhmat[ndex-1]*fUp));; 7871 i = fNexofi[l-1];; 7872 if (fNvarl[i-1] > 1) {; 7873 al = fAlim[i-1];; 7874 ba = fBlim[i-1] - al;; 7875 du1 = al + 0.5*(TMath::Sin(fX[l-1] + dx) + 1)*ba - fU[i-1];; 7876 du2 = al + 0.5*(TMath::Sin(fX[l-1] - dx) + 1)*ba - fU[i-1];; 7877 if (dx > 1) du1 = ba;; 7878 dx = 0.5*(TMath::Abs(du1) + TMath::Abs(du2));; 7879 }; 7880 fWerr[l-1] = dx;; 7881 }; 7882 }; 7883// global correlation coefficients; 7884 if (fISW[1] >= 1) {; 7885 for (i = 1; i <= fNpar; ++i) {; 7886 fGlobcc[i-1] ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:251048,error,errors,251048,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,2,"['avail', 'error']","['available', 'errors']"
Availability,"212 ; 1213////////////////////////////////////////////////////////////////////////////////; 1214/// Stream an object of class TAxis.; 1215 ; 1216void TAxis::Streamer(TBuffer &R__b); 1217{; 1218 if (R__b.IsReading()) {; 1219 UInt_t R__s, R__c;; 1220 Version_t R__v = R__b.ReadVersion(&R__s, &R__c);; 1221 if (R__v > 5) {; 1222 R__b.ReadClassBuffer(TAxis::Class(), this, R__v, R__s, R__c);; 1223 return;; 1224 }; 1225 //====process old versions before automatic schema evolution; 1226 TNamed::Streamer(R__b);; 1227 TAttAxis::Streamer(R__b);; 1228 R__b >> fNbins;; 1229 if (R__v < 5) {; 1230 Float_t xmin,xmax;; 1231 R__b >> xmin; fXmin = xmin;; 1232 R__b >> xmax; fXmax = xmax;; 1233 Float_t *xbins = nullptr;; 1234 Int_t n = R__b.ReadArray(xbins);; 1235 fXbins.Set(n);; 1236 for (Int_t i=0;i<n;i++) fXbins.fArray[i] = xbins[i];; 1237 delete [] xbins;; 1238 } else {; 1239 R__b >> fXmin;; 1240 R__b >> fXmax;; 1241 fXbins.Streamer(R__b);; 1242 }; 1243 if (R__v > 2) {; 1244 R__b >> fFirst;; 1245 R__b >> fLast;; 1246 // following lines required to repair for a bug in Root version 1.03; 1247 if (fFirst < 0 || fFirst > fNbins) fFirst = 0;; 1248 if (fLast < 0 || fLast > fNbins) fLast = 0;; 1249 if (fLast < fFirst) { fFirst = 0; fLast = 0;}; 1250 if (fFirst ==0 && fLast == 0) SetBit(kAxisRange,false);; 1251 }; 1252 if (R__v > 3) {; 1253 R__b >> fTimeDisplay;; 1254 fTimeFormat.Streamer(R__b);; 1255 } else {; 1256 SetTimeFormat();; 1257 }; 1258 R__b.CheckByteCount(R__s, R__c, TAxis::IsA());; 1259 //====end of old versions; 1260 ; 1261 } else {; 1262 R__b.WriteClassBuffer(TAxis::Class(),this);; 1263 }; 1264}; 1265 ; 1266////////////////////////////////////////////////////////////////////////////////; 1267/// Reset first & last bin to the full range; 1268 ; 1269void TAxis::UnZoom(); 1270{; 1271 if (!gPad) {; 1272 Warning(""TAxis::UnZoom"",""Cannot UnZoom if gPad does not exist. Did you mean to draw the TAxis first?"");; 1273 return;; 1274 }; 1275 gPad->SetView();; 1276 ; 1277 //unzoom object owni",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:42275,repair,repair,42275,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['repair'],['repair']
Availability,"212 return 0;; 8213 }; 8214 }; 8215 ; 8216 Bool_t afunc1 = kFALSE;; 8217 Bool_t afunc2 = kFALSE;; 8218 Double_t sum1 = 0, sum2 = 0;; 8219 Double_t ew1, ew2, w1 = 0, w2 = 0;; 8220 Int_t bin;; 8221 Int_t ifirst = 1;; 8222 Int_t ilast = ncx1;; 8223 // integral of all bins (use underflow/overflow if option); 8224 if (opt.Contains(""U"")) ifirst = 0;; 8225 if (opt.Contains(""O"")) ilast = ncx1 +1;; 8226 for (bin = ifirst; bin <= ilast; bin++) {; 8227 sum1 += h1->RetrieveBinContent(bin);; 8228 sum2 += h2->RetrieveBinContent(bin);; 8229 ew1 = h1->GetBinError(bin);; 8230 ew2 = h2->GetBinError(bin);; 8231 w1 += ew1*ew1;; 8232 w2 += ew2*ew2;; 8233 }; 8234 if (sum1 == 0) {; 8235 Error(""KolmogorovTest"",""Histogram1 %s integral is zero\n"",h1->GetName());; 8236 return 0;; 8237 }; 8238 if (sum2 == 0) {; 8239 Error(""KolmogorovTest"",""Histogram2 %s integral is zero\n"",h2->GetName());; 8240 return 0;; 8241 }; 8242 ; 8243 // calculate the effective entries.; 8244 // the case when errors are zero (w1 == 0 or w2 ==0) are equivalent to; 8245 // compare to a function. In that case the rescaling is done only on sqrt(esum2) or sqrt(esum1); 8246 Double_t esum1 = 0, esum2 = 0;; 8247 if (w1 > 0); 8248 esum1 = sum1 * sum1 / w1;; 8249 else; 8250 afunc1 = kTRUE; // use later for calculating z; 8251 ; 8252 if (w2 > 0); 8253 esum2 = sum2 * sum2 / w2;; 8254 else; 8255 afunc2 = kTRUE; // use later for calculating z; 8256 ; 8257 if (afunc2 && afunc1) {; 8258 Error(""KolmogorovTest"",""Errors are zero for both histograms\n"");; 8259 return 0;; 8260 }; 8261 ; 8262 ; 8263 Double_t s1 = 1/sum1;; 8264 Double_t s2 = 1/sum2;; 8265 ; 8266 // Find largest difference for Kolmogorov Test; 8267 Double_t dfmax =0, rsum1 = 0, rsum2 = 0;; 8268 ; 8269 for (bin=ifirst;bin<=ilast;bin++) {; 8270 rsum1 += s1*h1->RetrieveBinContent(bin);; 8271 rsum2 += s2*h2->RetrieveBinContent(bin);; 8272 dfmax = TMath::Max(dfmax,TMath::Abs(rsum1-rsum2));; 8273 }; 8274 ; 8275 // Get Kolmogorov probability; 8276 Double_t z, prb1=0, prb2=0, prb3=0;; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:324096,error,errors,324096,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"213 Int_t GetMore() const final;; 214 TClass *GenerateTClass(const char *classname, Bool_t emulation, Bool_t silent = kFALSE) final;; 215 TClass *GenerateTClass(ClassInfo_t *classinfo, Bool_t silent = kFALSE) final;; 216 Int_t GenerateDictionary(const char* classes, const char* includes = """", const char* options = nullptr) final;; 217 char* GetPrompt() final { return fPrompt; }; 218 const char* GetSharedLibs() final;; 219 const char* GetClassSharedLibs(const char* cls, bool skipCore = true) final;; 220 const char* GetSharedLibDeps(const char* lib, bool tryDyld = false) final;; 221 const char* GetIncludePath() final;; 222 virtual const char* GetSTLIncludePath() const final;; 223 TObjArray* GetRootMapFiles() const final { return fRootmapFiles; }; 224 unsigned long long GetInterpreterStateMarker() const final { return fTransactionCount;}; 225 virtual void Initialize() final;; 226 virtual void ShutDown() final;; 227 void InspectMembers(TMemberInspector&, const void* obj, const TClass* cl, Bool_t isTransient) final;; 228 Bool_t IsLoaded(const char* filename) const final;; 229 Bool_t IsLibraryLoaded(const char* libname) const final;; 230 Bool_t HasPCMForLibrary(const char *libname) const final;; 231 Int_t Load(const char* filenam, Bool_t system = kFALSE) final;; 232 void LoadMacro(const char* filename, EErrorCode* error = nullptr) final;; 233 Int_t LoadLibraryMap(const char* rootmapfile = nullptr) final;; 234 Int_t RescanLibraryMap() final;; 235 Int_t ReloadAllSharedLibraryMaps() final;; 236 Int_t UnloadAllSharedLibraryMaps() final;; 237 Int_t UnloadLibraryMap(const char* library) final;; 238 Longptr_t ProcessLine(const char* line, EErrorCode* error = nullptr) final;; 239 Longptr_t ProcessLineAsynch(const char* line, EErrorCode* error = nullptr);; 240 Longptr_t ProcessLineSynch(const char* line, EErrorCode* error = nullptr) final;; 241 void PrintIntro() final;; 242 bool RegisterPrebuiltModulePath(const std::string& FullPath,; 243 const std::string& ModuleMapName = ""module.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8h_source.html:10043,error,error,10043,doc/master/TCling_8h_source.html,https://root.cern,https://root.cern/doc/master/TCling_8h_source.html,4,['error'],['error']
Availability,"216 ; 3217 return cachedRDF;; 3218 }; 3219 ; 3220 template <bool IsSingleColumn, typename F>; 3221 RInterface<Proxied, DS_t>; 3222 VaryImpl(const std::vector<std::string> &colNames, F &&expression, const ColumnNames_t &inputColumns,; 3223 const std::vector<std::string> &variationTags, std::string_view variationName); 3224 {; 3225 using F_t = std::decay_t<F>;; 3226 using ColTypes_t = typename TTraits::CallableTraits<F_t>::arg_types;; 3227 using RetType = typename TTraits::CallableTraits<F_t>::ret_type;; 3228 constexpr auto nColumns = ColTypes_t::list_size;; 3229 ; 3230 SanityChecksForVary<RetType>(colNames, variationTags, variationName);; 3231 ; 3232 const auto validColumnNames = GetValidatedColumnNames(nColumns, inputColumns);; 3233 CheckAndFillDSColumns(validColumnNames, ColTypes_t{});; 3234 ; 3235 auto retTypeName = RDFInternal::TypeID2TypeName(typeid(RetType));; 3236 if (retTypeName.empty()) {; 3237 // The type is not known to the interpreter, but we don't want to error out; 3238 // here, rather if/when this column is used in jitted code, so we inject a broken but telling type name.; 3239 const auto demangledType = RDFInternal::DemangleTypeIdName(typeid(RetType));; 3240 retTypeName = ""CLING_UNKNOWN_TYPE_"" + demangledType;; 3241 }; 3242 ; 3243 auto variation = std::make_shared<RDFInternal::RVariation<F_t, IsSingleColumn>>(; 3244 colNames, variationName, std::forward<F>(expression), variationTags, retTypeName, fColRegister, *fLoopManager,; 3245 validColumnNames);; 3246 ; 3247 RDFInternal::RColumnRegister newCols(fColRegister);; 3248 newCols.AddVariation(std::move(variation));; 3249 ; 3250 RInterface<Proxied> newInterface(fProxiedPtr, *fLoopManager, std::move(newCols));; 3251 ; 3252 return newInterface;; 3253 }; 3254 ; 3255 RInterface<Proxied, DS_t> JittedVaryImpl(const std::vector<std::string> &colNames, std::string_view expression,; 3256 const std::vector<std::string> &variationTags,; 3257 std::string_view variationName, bool isSingleColumn); 3258 {; 3259 R__ASSERT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:184128,error,error,184128,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['error'],['error']
Availability,"216 b = ((i + 1) >= src_len) ? 0 : src[i + 1];; 7217 c = ((i + 2) >= src_len) ? 0 : src[i + 2];; 7218 ; 7219 dst[j++] = b64[a >> 2];; 7220 dst[j++] = b64[((a & 3) << 4) | (b >> 4)];; 7221 if (i + 1 < src_len) {; 7222 dst[j++] = b64[(b & 15) << 2 | (c >> 6)];; 7223 }; 7224 if (i + 2 < src_len) {; 7225 dst[j++] = b64[c & 63];; 7226 }; 7227 }; 7228 while (j % 4 != 0) {; 7229 dst[j++] = '=';; 7230 }; 7231 dst[j++] = '\0';; 7232}; 7233#endif; 7234 ; 7235 ; 7236#if defined(USE_LUA); 7237static unsigned char; 7238b64reverse(char letter); 7239{; 7240 if ((letter >= 'A') && (letter <= 'Z')) {; 7241 return letter - 'A';; 7242 }; 7243 if ((letter >= 'a') && (letter <= 'z')) {; 7244 return letter - 'a' + 26;; 7245 }; 7246 if ((letter >= '0') && (letter <= '9')) {; 7247 return letter - '0' + 52;; 7248 }; 7249 if (letter == '+') {; 7250 return 62;; 7251 }; 7252 if (letter == '/') {; 7253 return 63;; 7254 }; 7255 if (letter == '=') {; 7256 return 255; /* normal end */; 7257 }; 7258 return 254; /* error */; 7259}; 7260 ; 7261 ; 7262static int; 7263base64_decode(const unsigned char *src, int src_len, char *dst, size_t *dst_len); 7264{; 7265 int i;; 7266 unsigned char a, b, c, d;; 7267 ; 7268 *dst_len = 0;; 7269 ; 7270 for (i = 0; i < src_len; i += 4) {; 7271 a = b64reverse(src[i]);; 7272 if (a >= 254) {; 7273 return i;; 7274 }; 7275 ; 7276 b = b64reverse(((i + 1) >= src_len) ? 0 : src[i + 1]);; 7277 if (b >= 254) {; 7278 return i + 1;; 7279 }; 7280 ; 7281 c = b64reverse(((i + 2) >= src_len) ? 0 : src[i + 2]);; 7282 if (c == 254) {; 7283 return i + 2;; 7284 }; 7285 ; 7286 d = b64reverse(((i + 3) >= src_len) ? 0 : src[i + 3]);; 7287 if (d == 254) {; 7288 return i + 3;; 7289 }; 7290 ; 7291 dst[(*dst_len)++] = (a << 2) + (b >> 4);; 7292 if (c != 255) {; 7293 dst[(*dst_len)++] = (b << 4) + (c >> 2);; 7294 if (d != 255) {; 7295 dst[(*dst_len)++] = (c << 6) + d;; 7296 }; 7297 }; 7298 }; 7299 return -1;; 7300}; 7301#endif; 7302 ; 7303 ; 7304static int; 7305is_put_or_delete_method(const stru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:208461,error,error,208461,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"217 b = ((i + 1) >= src_len) ? 0 : src[i + 1];; 7218 c = ((i + 2) >= src_len) ? 0 : src[i + 2];; 7219 ; 7220 dst[j++] = b64[a >> 2];; 7221 dst[j++] = b64[((a & 3) << 4) | (b >> 4)];; 7222 if (i + 1 < src_len) {; 7223 dst[j++] = b64[(b & 15) << 2 | (c >> 6)];; 7224 }; 7225 if (i + 2 < src_len) {; 7226 dst[j++] = b64[c & 63];; 7227 }; 7228 }; 7229 while (j % 4 != 0) {; 7230 dst[j++] = '=';; 7231 }; 7232 dst[j++] = '\0';; 7233}; 7234#endif; 7235 ; 7236 ; 7237#if defined(USE_LUA); 7238static unsigned char; 7239b64reverse(char letter); 7240{; 7241 if ((letter >= 'A') && (letter <= 'Z')) {; 7242 return letter - 'A';; 7243 }; 7244 if ((letter >= 'a') && (letter <= 'z')) {; 7245 return letter - 'a' + 26;; 7246 }; 7247 if ((letter >= '0') && (letter <= '9')) {; 7248 return letter - '0' + 52;; 7249 }; 7250 if (letter == '+') {; 7251 return 62;; 7252 }; 7253 if (letter == '/') {; 7254 return 63;; 7255 }; 7256 if (letter == '=') {; 7257 return 255; /* normal end */; 7258 }; 7259 return 254; /* error */; 7260}; 7261 ; 7262 ; 7263static int; 7264base64_decode(const unsigned char *src, int src_len, char *dst, size_t *dst_len); 7265{; 7266 int i;; 7267 unsigned char a, b, c, d;; 7268 ; 7269 *dst_len = 0;; 7270 ; 7271 for (i = 0; i < src_len; i += 4) {; 7272 a = b64reverse(src[i]);; 7273 if (a >= 254) {; 7274 return i;; 7275 }; 7276 ; 7277 b = b64reverse(((i + 1) >= src_len) ? 0 : src[i + 1]);; 7278 if (b >= 254) {; 7279 return i + 1;; 7280 }; 7281 ; 7282 c = b64reverse(((i + 2) >= src_len) ? 0 : src[i + 2]);; 7283 if (c == 254) {; 7284 return i + 2;; 7285 }; 7286 ; 7287 d = b64reverse(((i + 3) >= src_len) ? 0 : src[i + 3]);; 7288 if (d == 254) {; 7289 return i + 3;; 7290 }; 7291 ; 7292 dst[(*dst_len)++] = (a << 2) + (b >> 4);; 7293 if (c != 255) {; 7294 dst[(*dst_len)++] = (b << 4) + (c >> 2);; 7295 if (d != 255) {; 7296 dst[(*dst_len)++] = (c << 6) + d;; 7297 }; 7298 }; 7299 }; 7300 return -1;; 7301}; 7302#endif; 7303 ; 7304 ; 7305static int; 7306is_put_or_delete_method(const stru",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:208493,error,error,208493,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); ; # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method; model.plotOn(frame2, VisualizeError=(r, {m, m2}, 2), FillColor=""c""); model.plotOn(frame2, Components=""bkg"", VisualizeError=(r, {m, m2}, 2), FillColor=""c""); ; model.plotOn(frame2); model.plotOn(frame2, Components=""bkg"", LineStyle=""--""); frame2.SetMinimum(0); ; # Make plot frame; frame3 = x.frame(Bins=40, Title=""Visualization of 2-sigma partial error from (s,s2)""); ; # Propagate partial error due to yield parameter using linear and sampling; # method; model.plotOn(frame3, VisualizeError=(r, {s, s2}, 2), FillColor=""g""); model.plotOn(frame3, Components=""bkg"", VisualizeError=(r, {fsig}, 2), FillColor=""g""); ; model.plotOn(frame3); model.plotOn(frame3, Components=""bkg"", LineStyle=""--""); frame3.SetMinimum(0); ; # Make plot frame; frame4 = x.frame(Bins=40, Title=""Visualization of 2-sigma partial error from fsig""); ; # Propagate partial error due to yield parameter using linear and sampling; # method; model.plotOn(frame4, VisualizeError=(r, {fsig}, 2), FillColor=""m""); model.plotOn(frame4, Components=""bkg"", VisualizeError=(r, {fsig}, 2), FillColor=""m""); ; model.plotOn(frame4); model.plotOn(frame4, Components=""bkg"", LineStyle=""--""); frame4.SetMinimum(0); ; c = ROOT.TCanvas(""rf610_visualerror"", ""rf610_visualerror"", 800, 800); c.Divide(2, 2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame2.GetYaxis().SetTitleOffset(1.6); frame2.Draw(); c.cd(3); ROOT.gPad.SetLeftMargin(0.15); frame3.GetYaxis().SetTitleOffset(1.6); frame3.Draw(); c.cd(4); ROOT.gPad.SetLeftMargin(0.15); frame4.GetYaxis().SetTitleOffset(1.6); frame4.Draw(); ; c.SaveAs(""rf610_visualerror.png""); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf610__visualerror_8py.html:5032,error,error,5032,doc/master/rf610__visualerror_8py.html,https://root.cern,https://root.cern/doc/master/rf610__visualerror_8py.html,2,['error'],['error']
Availability,"22; TMarker::DrawMarkervirtual TMarker * DrawMarker(Double_t x, Double_t y)Draw this marker with new coordinates.Definition TMarker.cxx:208; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4; ttauto * ttDefinition textangle.C:16; t1auto * t1Definition textangle.C:20; . Text Color; The text color is a color index (integer) pointing in the ROOT color table. The text color of any class inheriting from TAttText can be changed using the method SetTextColor and retrieved using the method GetTextColor. The following table shows the first 50 default colors. Color transparency; SetTextColorAlpha(), allows to set a transparent color. In the following example the text color of the text text is set to blue with an opacity of 35% (i.e. a transparency of 65%). (The color kBlue itself is internally stored as fully opaque.); text->SetTextColorAlpha(kBlue, 0.35);; textOption_t Option_t TPoint TPoint const char textDefinition TGWin32VirtualXProxy.cxx:68; The transparency is available on all platforms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript.; Alternatively, you can call at the top of your script gSytle->SetCanvasPreferGL();. Or if you prefer to activate GL for a single canvas c, then use c->SetSupportGL(true);. Text Size; If the text precision (see next paragraph) is smaller than 3, the text size (textsize) is a fraction of the current pad size. Therefore the same textsize value can generate text outputs with different absolute sizes in two different pads. The text size in pixels (charheight) is computed the following way:; pad_width = gPad->XtoPixel(gPad->GetX2());; pad_height = gPad->YtoPixel(gPad->GetY1());; if (pad_width < pad_height) charheight = textsize*pad_width;; else charheight = textsize*pad_height;; textsizeOption_t Option_t textsizeDefinition TGWin32VirtualXProxy.cxx:58; gPad#define gPadDefin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttText.html:6182,avail,available,6182,doc/master/classTAttText.html,https://root.cern,https://root.cern/doc/master/classTAttText.html,1,['avail'],['available']
Availability,22=1 p_ph_sig2_gamma_bin_23=1 p_ph_sig2_gamma_bin_24=7.28945 p_ph_sig2_gamma_bin_3=1 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=1 Asig=1 p_ph_sig2_gamma_bin_0=1 p_ph_sig2_gamma_bin_1=1 p_ph_sig2_gamma_bin_10=1 p_ph_sig2_gamma_bin_11=1 p_ph_sig2_gamma_bin_12=1 p_ph_sig2_gamma_bin_13=1 p_ph_sig2_gamma_bin_14=1 p_ph_sig2_gamma_bin_15=1 p_ph_sig2_gamma_bin_16=1 p_ph_sig2_gamma_bin_17=1 p_ph_sig2_gamma_bin_18=1 p_ph_sig2_gamma_bin_19=1 p_ph_sig2_gamma_bin_2=1 p_ph_sig2_gamma_bin_20=1 p_ph_sig2_gamma_bin_21=1 p_ph_sig2_gamma_bin_22=1 p_ph_sig2_gamma_bin_23=1 p_ph_sig2_gamma_bin_24=1 p_ph_sig2_gamma_bin_3=7.28945 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=1 Asig=1 p_ph_sig2_gamma_bin_0=1 p_ph_sig2_gamma_bin_1=1 p_ph_sig2_gamma_bin_10=1 p_ph_sig2_gamma_bin_11=1 p_ph_sig2_gamma_bin_12=1 p_ph_sig2_gamma_bin_13=1 p_ph_sig2_gamma_bin_14=1 p_ph_sig2_gamma_bin_15=1 p_ph_sig2_gamma_bin_16=1 p_ph_sig2_gamma_bin_17=1 p_ph_sig2_gamma_bin_18=1 p_ph_sig2_gamma_bin_19=1 p_ph_sig2_gamma_bin_2=1 p_ph_sig2_gamma_bin_20=1 p_ph_sig2_gamma_bin_21=1 p_ph_sig2_gamma_bin_22=1 p_ph_sig2_gamma_bin_23=1 p_ph_sig2_gamma_bin_24=1 p_ph_sig2_gamma_bin_3=1 p_ph_sig2_gamma_bin_4=7.28945 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this re,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html:31508,error,error,31508,doc/master/rf709__BarlowBeeston_8C.html,https://root.cern,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html,2,['error'],['error']
Availability,"234 ; 235for h, color in zip([h_other, h_zz, h_higgs], [ROOT.kViolet - 9, ROOT.kAzure - 9, ROOT.kRed + 2]):; 236 h.SetLineWidth(1); 237 h.SetLineColor(1); 238 h.SetFillColor(color); 239 stack.Add(h); 240 ; 241stack.Draw(""HIST""); 242stack.GetXaxis().SetLabelSize(0.04); 243stack.GetXaxis().SetTitleSize(0.045); 244stack.GetXaxis().SetTitleOffset(1.3); 245stack.GetXaxis().SetTitle(""m_{4l}^{H#rightarrow ZZ} [GeV]""); 246stack.GetYaxis().SetLabelSize(0.04); 247stack.GetYaxis().SetTitleSize(0.045); 248stack.GetYaxis().SetTitle(""Events""); 249stack.SetMaximum(35); 250stack.GetYaxis().ChangeLabel(1, -1, 0); 251 ; 252# Draw MC scale factor and variations; 253histos_mc[""nominal""].SetFillColor(ROOT.kBlack); 254histos_mc[""nominal""].SetFillStyle(3254); 255h_nominal = histos_mc[""nominal""].DrawClone(""E2 same""); 256histos_mc[""weight:up""].SetLineColor(ROOT.kGreen + 2); 257h_weight_up = histos_mc[""weight:up""].DrawClone(""HIST SAME""); 258histos_mc[""weight:down""].SetLineColor(ROOT.kBlue + 2); 259h_weight_down = histos_mc[""weight:down""].DrawClone(""HIST SAME""); 260 ; 261# Draw data histogram; 262h_data.SetMarkerStyle(20); 263h_data.SetMarkerSize(1.2); 264h_data.SetLineWidth(2); 265h_data.SetLineColor(ROOT.kBlack); 266h_data.Draw(""E SAME"") # Draw raw data with errorbars; 267 ; 268# Add legend; 269legend = ROOT.TLegend(0.57, 0.65, 0.94, 0.94); 270legend.SetTextFont(42); 271legend.SetFillStyle(0); 272legend.SetBorderSize(0); 273legend.SetTextSize(0.025); 274legend.SetTextAlign(32); 275legend.AddEntry(h_data, ""Data"", ""lep""); 276legend.AddEntry(h_higgs, ""Higgs MC"", ""f""); 277legend.AddEntry(h_zz, ""ZZ MC"", ""f""); 278legend.AddEntry(h_other, ""Other MC"", ""f""); 279legend.AddEntry(h_weight_down, ""Total MC Variations Down"", ""l""); 280legend.AddEntry(h_weight_up, ""Total MC Variations Up"", ""l""); 281legend.AddEntry(h_nominal, ""Total MC Uncertainty"", ""f""); 282legend.Draw(); 283 ; 284text = ROOT.TLatex(); 285text.SetTextFont(72); 286text.SetTextSize(0.04); 287text.DrawLatexNDC(0.19, 0.85, ""ATLAS""); 288text.Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html:11596,down,down,11596,doc/master/df106__HiggsToFourLeptons_8py_source.html,https://root.cern,https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html,1,['down'],['down']
Availability,"237 ; 238////////////////////////////////////////////////////////////////////////////////; 239/// Copy constructor (necessary to hold unique_ptr as member variable).; 240 ; 241TF1Convolution::TF1Convolution(const TF1Convolution &conv); 242{; 243 conv.TF1Convolution::Copy(*this);; 244}; 245 ; 246////////////////////////////////////////////////////////////////////////////////; 247/// Operator =; 248 ; 249TF1Convolution &TF1Convolution::operator=(const TF1Convolution &rhs); 250{; 251 if (this != &rhs); 252 rhs.TF1Convolution::Copy(*this);; 253 return *this;; 254}; 255 ; 256////////////////////////////////////////////////////////////////////////////////; 257/// Perform the FFT of the two functions.; 258 ; 259void TF1Convolution::MakeFFTConv(); 260{; 261 if (gDebug); 262 Info(""MakeFFTConv"",""Making FFT convolution using %d points in range [%g,%g]"",fNofPoints,fXmin,fXmax);; 263 ; 264 std::vector < Double_t > x (fNofPoints);; 265 std::vector < Double_t > in1(fNofPoints);; 266 std::vector < Double_t > in2(fNofPoints);; 267 ; 268 TVirtualFFT *fft1 = TVirtualFFT::FFT(1, &fNofPoints, ""R2C K"");; 269 TVirtualFFT *fft2 = TVirtualFFT::FFT(1, &fNofPoints, ""R2C K"");; 270 if (fft1 == nullptr || fft2 == nullptr) {; 271 Warning(""MakeFFTConv"",""Cannot use FFT, probably FFTW package is not available. Switch to numerical convolution"");; 272 fFlagFFT = false;; 273 return;; 274 }; 275 ; 276 // apply a shift in order to have the second function centered around middle of the range of the convolution; 277 Double_t shift2 = 0.5*(fXmin+fXmax);; 278 Double_t x2;; 279 for (int i=0; i<fNofPoints; i++); 280 {; 281 x[i] = fXmin + (fXmax-fXmin)/(fNofPoints-1)*i;; 282 x2 = x[i] - shift2;; 283 in1[i] = fFunction1 -> EvalPar( &x[i], nullptr);; 284 in2[i] = fFunction2 -> EvalPar( &x2, nullptr);; 285 fft1 -> SetPoint(i, in1[i]);; 286 fft2 -> SetPoint(i, in2[i]);; 287 }; 288 fft1 -> Transform();; 289 fft2 -> Transform();; 290 ; 291 //inverse transformation of the product; 292 ; 293 TVirtualFFT *fftinverse = T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1Convolution_8cxx_source.html:10293,avail,available,10293,doc/master/TF1Convolution_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1Convolution_8cxx_source.html,1,['avail'],['available']
Availability,"24);; 5308 procinfo->fMemResident = rss * (getpagesize() / 1024);; 5309 }; 5310}; 5311#endif; 5312 ; 5313////////////////////////////////////////////////////////////////////////////////; 5314/// Returns static system info, like OS type, CPU type, number of CPUs; 5315/// RAM size, etc into the SysInfo_t structure. Returns -1 in case of error,; 5316/// 0 otherwise.; 5317 ; 5318int TUnixSystem::GetSysInfo(SysInfo_t *info) const; 5319{; 5320 if (!info) return -1;; 5321 ; 5322 static SysInfo_t sysinfo;; 5323 ; 5324 if (!sysinfo.fCpus) {; 5325#if defined(R__MACOSX); 5326 GetDarwinSysInfo(&sysinfo);; 5327#elif defined(R__LINUX); 5328 GetLinuxSysInfo(&sysinfo);; 5329#elif defined(R__FBSD); 5330 GetFreeBSDSysInfo(&sysinfo);; 5331#endif; 5332 }; 5333 ; 5334 *info = sysinfo;; 5335 ; 5336 return 0;; 5337}; 5338 ; 5339////////////////////////////////////////////////////////////////////////////////; 5340/// Returns cpu load average and load info into the CpuInfo_t structure.; 5341/// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; 5342/// interval over which the CPU load will be measured, in ms (default 1000).; 5343 ; 5344int TUnixSystem::GetCpuInfo(CpuInfo_t *info, Int_t sampleTime) const; 5345{; 5346 if (!info) return -1;; 5347 ; 5348#if defined(R__MACOSX); 5349 GetDarwinCpuInfo(info, sampleTime);; 5350#elif defined(R__LINUX); 5351 GetLinuxCpuInfo(info, sampleTime);; 5352#elif defined(R__FBSD); 5353 GetFreeBSDCpuInfo(info, sampleTime);; 5354#endif; 5355 ; 5356 return 0;; 5357}; 5358 ; 5359////////////////////////////////////////////////////////////////////////////////; 5360/// Returns ram and swap memory usage info into the MemInfo_t structure.; 5361/// Returns -1 in case of error, 0 otherwise.; 5362 ; 5363int TUnixSystem::GetMemInfo(MemInfo_t *info) const; 5364{; 5365 if (!info) return -1;; 5366 ; 5367#if defined(R__MACOSX); 5368 GetDarwinMemInfo(info);; 5369#elif defined(R__LINUX); 5370 GetLinuxMemInfo(info);; 5371#endif; 5372 ; 5373 return 0;; 5374}; 5375",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:173323,error,error,173323,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,24.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84175,error,error,84175,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"24/// the histogram.; 7525///; 7526/// IMPORTANT NOTE: The returned value depends on how the histogram statistics; 7527/// are calculated. By default, if no range has been set, the returned mean is; 7528/// the (unbinned) one calculated at fill time. If a range has been set, however,; 7529/// the mean is calculated using the bins in range, as described above; THIS; 7530/// IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset; 7531/// the range. To ensure that the returned mean (and all other statistics) is; 7532/// always that of the binned data stored in the histogram, call TH1::ResetStats.; 7533/// See TH1::GetStats.; 7534///; 7535/// Return mean value of this histogram along the X axis.; 7536 ; 7537Double_t TH1::GetMean(Int_t axis) const; 7538{; 7539 if (axis<1 || (axis>3 && axis<11) || axis>13) return 0;; 7540 Double_t stats[kNstat];; 7541 for (Int_t i=4;i<kNstat;i++) stats[i] = 0;; 7542 GetStats(stats);; 7543 if (stats[0] == 0) return 0;; 7544 if (axis<4){; 7545 Int_t ax[3] = {2,4,7};; 7546 return stats[ax[axis-1]]/stats[0];; 7547 } else {; 7548 // mean error = StdDev / sqrt( Neff ); 7549 Double_t stddev = GetStdDev(axis-10);; 7550 Double_t neff = GetEffectiveEntries();; 7551 return ( neff > 0 ? stddev/TMath::Sqrt(neff) : 0. );; 7552 }; 7553}; 7554 ; 7555////////////////////////////////////////////////////////////////////////////////; 7556/// Return standard error of mean of this histogram along the X axis.; 7557///; 7558/// Note that the mean value/StdDev is computed using the bins in the currently; 7559/// defined range (see TAxis::SetRange). By default the range includes; 7560/// all bins from 1 to nbins included, excluding underflows and overflows.; 7561/// To force the underflows and overflows in the computation, one must; 7562/// call the static function TH1::StatOverflows(kTRUE) before filling; 7563/// the histogram.; 7564///; 7565/// Also note, that although the definition of standard error doesn't include the; 7566/// assumpti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:294236,error,error,294236,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability,"242////////////////////////////////////////////////////////////////////////////////; 5243/// Reduce the number of bins for the axis passed in the option to the number of bins having a label.; 5244/// The method will remove only the extra bins existing after the last ""labeled"" bin.; 5245/// Note that if there are ""un-labeled"" bins present between ""labeled"" bins they will not be removed; 5246 ; 5247void TH1::LabelsDeflate(Option_t *ax); 5248{; 5249 Int_t iaxis = AxisChoice(ax);; 5250 TAxis *axis = nullptr;; 5251 if (iaxis == 1) axis = GetXaxis();; 5252 if (iaxis == 2) axis = GetYaxis();; 5253 if (iaxis == 3) axis = GetZaxis();; 5254 if (!axis) {; 5255 Error(""LabelsDeflate"",""Invalid axis option %s"",ax);; 5256 return;; 5257 }; 5258 if (!axis->GetLabels()) return;; 5259 ; 5260 // find bin with last labels; 5261 // bin number is object ID in list of labels; 5262 // therefore max bin number is number of bins of the deflated histograms; 5263 TIter next(axis->GetLabels());; 5264 TObject *obj;; 5265 Int_t nbins = 0;; 5266 while ((obj = next())) {; 5267 Int_t ibin = obj->GetUniqueID();; 5268 if (ibin > nbins) nbins = ibin;; 5269 }; 5270 if (nbins < 1) nbins = 1;; 5271 ; 5272 // Do nothing in case it was the last bin; 5273 if (nbins==axis->GetNbins()) return;; 5274 ; 5275 TH1 *hold = (TH1*)IsA()->New();; 5276 R__ASSERT(hold);; 5277 hold->SetDirectory(nullptr);; 5278 Copy(*hold);; 5279 ; 5280 Bool_t timedisp = axis->GetTimeDisplay();; 5281 Double_t xmin = axis->GetXmin();; 5282 Double_t xmax = axis->GetBinUpEdge(nbins);; 5283 if (xmax <= xmin) xmax = xmin +nbins;; 5284 axis->SetRange(0,0);; 5285 axis->Set(nbins,xmin,xmax);; 5286 SetBinsLength(-1); // reset the number of cells; 5287 Int_t errors = fSumw2.fN;; 5288 if (errors) fSumw2.Set(fNcells);; 5289 axis->SetTimeDisplay(timedisp);; 5290 // reset histogram content; 5291 Reset(""ICE"");; 5292 ; 5293 //now loop on all bins and refill; 5294 // NOTE that if the bins without labels have content; 5295 // it will be put in the underflow/",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:212831,error,errors,212831,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"2426 unsigned char *buf = (unsigned char *)conn->buf + conn->request_len;; 12427 int n, error, exit_by_callback;; 12428 int ret;; 12429 ; 12430 /* body_len is the length of the entire queue in bytes; 12431 * len is the length of the current message; 12432 * data_len is the length of the current message's data payload; 12433 * header_len is the length of the current message's header */; 12434 size_t i, len, mask_len = 0, header_len, body_len;; 12435 uint64_t data_len = 0;; 12436 ; 12437 /* ""The masking key is a 32-bit value chosen at random by the client.""; 12438 * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17#section-5; 12439 */; 12440 unsigned char mask[4];; 12441 ; 12442 /* data points to the place where the message is stored when passed to; 12443 * the websocket_data callback. This is either mem on the stack, or a; 12444 * dynamically allocated buffer if it is too large. */; 12445 unsigned char mem[4096];; 12446 unsigned char mop; /* mask flag and opcode */; 12447 ; 12448 ; 12449 /* Variables used for connection monitoring */; 12450 double timeout = -1.0;; 12451 int enable_ping_pong = 0;; 12452 int ping_count = 0;; 12453 ; 12454 if (conn->dom_ctx->config[ENABLE_WEBSOCKET_PING_PONG]) {; 12455 enable_ping_pong =; 12456 !mg_strcasecmp(conn->dom_ctx->config[ENABLE_WEBSOCKET_PING_PONG],; 12457 ""yes"");; 12458 }; 12459 ; 12460 if (conn->dom_ctx->config[WEBSOCKET_TIMEOUT]) {; 12461 timeout = atoi(conn->dom_ctx->config[WEBSOCKET_TIMEOUT]) / 1000.0;; 12462 }; 12463 if ((timeout <= 0.0) && (conn->dom_ctx->config[REQUEST_TIMEOUT])) {; 12464 timeout = atoi(conn->dom_ctx->config[REQUEST_TIMEOUT]) / 1000.0;; 12465 }; 12466 if (timeout <= 0.0) {; 12467 timeout = atof(config_options[REQUEST_TIMEOUT].default_value) / 1000.0;; 12468 }; 12469 ; 12470 /* Enter data processing loop */; 12471 DEBUG_TRACE(""Websocket connection %s:%u start data processing loop"",; 12472 conn->request_info.remote_addr,; 12473 conn->request_info.remote_port);; 12474 conn->in_websocket_h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:360858,mask,mask,360858,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['mask'],['mask']
Availability,"2427 unsigned char *buf = (unsigned char *)conn->buf + conn->request_len;; 12428 int n, error, exit_by_callback;; 12429 int ret;; 12430 ; 12431 /* body_len is the length of the entire queue in bytes; 12432 * len is the length of the current message; 12433 * data_len is the length of the current message's data payload; 12434 * header_len is the length of the current message's header */; 12435 size_t i, len, mask_len = 0, header_len, body_len;; 12436 uint64_t data_len = 0;; 12437 ; 12438 /* ""The masking key is a 32-bit value chosen at random by the client.""; 12439 * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17#section-5; 12440 */; 12441 unsigned char mask[4];; 12442 ; 12443 /* data points to the place where the message is stored when passed to; 12444 * the websocket_data callback. This is either mem on the stack, or a; 12445 * dynamically allocated buffer if it is too large. */; 12446 unsigned char mem[4096];; 12447 unsigned char mop; /* mask flag and opcode */; 12448 ; 12449 ; 12450 /* Variables used for connection monitoring */; 12451 double timeout = -1.0;; 12452 int enable_ping_pong = 0;; 12453 int ping_count = 0;; 12454 ; 12455 if (conn->dom_ctx->config[ENABLE_WEBSOCKET_PING_PONG]) {; 12456 enable_ping_pong =; 12457 !mg_strcasecmp(conn->dom_ctx->config[ENABLE_WEBSOCKET_PING_PONG],; 12458 ""yes"");; 12459 }; 12460 ; 12461 if (conn->dom_ctx->config[WEBSOCKET_TIMEOUT]) {; 12462 timeout = atoi(conn->dom_ctx->config[WEBSOCKET_TIMEOUT]) / 1000.0;; 12463 }; 12464 if ((timeout <= 0.0) && (conn->dom_ctx->config[REQUEST_TIMEOUT])) {; 12465 timeout = atoi(conn->dom_ctx->config[REQUEST_TIMEOUT]) / 1000.0;; 12466 }; 12467 if (timeout <= 0.0) {; 12468 timeout = atof(config_options[REQUEST_TIMEOUT].default_value) / 1000.0;; 12469 }; 12470 ; 12471 /* Enter data processing loop */; 12472 DEBUG_TRACE(""Websocket connection %s:%u start data processing loop"",; 12473 conn->request_info.remote_addr,; 12474 conn->request_info.remote_port);; 12475 conn->in_websocket_h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:360891,mask,mask,360891,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['mask'],['mask']
Availability,"245 fMvaEventErrorUpper( 0 ),; 246 fLogger ( 0 ); 247{; 248 fDataSetManager = new DataSetManager( fDataInputHandler );; 249 fDataSetManager->AddDataSetInfo(fDataSetInfo);; 250 fLogger = new MsgLogger(this);; 251 SetConfigName( GetName() );; 252 DeclareOptions();; 253 ParseOptions();; 254 ; 255 // arguments: names of input variables given in form: ""name1:name2:name3""; 256 // verbose flag; 257 DecodeVarNames(varNames);; 258 Init();; 259}; 260 ; 261////////////////////////////////////////////////////////////////////////////////; 262/// declaration of configuration options; 263 ; 264void TMVA::Reader::DeclareOptions(); 265{; 266 if (gTools().CheckForSilentOption( GetOptions() )) Log().InhibitOutput(); // make sure is silent if wanted to; 267 ; 268 DeclareOptionRef( fVerbose, ""V"", ""Verbose flag"" );; 269 DeclareOptionRef( fColor, ""Color"", ""Color flag (default True)"" );; 270 DeclareOptionRef( fSilent, ""Silent"", ""Boolean silent flag (default False)"" );; 271 DeclareOptionRef( fCalculateError, ""Error"", ""Calculates errors (default False)"" );; 272}; 273 ; 274////////////////////////////////////////////////////////////////////////////////; 275/// destructor; 276 ; 277TMVA::Reader::~Reader( void ); 278{; 279 delete fDataSetManager; // DSMTEST; 280 ; 281 delete fLogger;; 282 ; 283 for (auto it=fMethodMap.begin(); it!=fMethodMap.end(); it++){; 284 MethodBase * kl = dynamic_cast<TMVA::MethodBase*>(it->second);; 285 delete kl;; 286 }; 287}; 288 ; 289////////////////////////////////////////////////////////////////////////////////; 290/// default initialisation (no member variables); 291 ; 292void TMVA::Reader::Init( void ); 293{; 294 if (Verbose()) fLogger->SetMinType( kVERBOSE );; 295 ; 296 gConfig().SetUseColor( fColor );; 297 gConfig().SetSilent ( fSilent );; 298}; 299 ; 300////////////////////////////////////////////////////////////////////////////////; 301/// Add a float variable or expression to the reader; 302 ; 303void TMVA::Reader::AddVariable( const TString& expression, Float",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:9298,error,errors,9298,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['error'],['errors']
Availability,"2457/// if option ""o"" original axis range of the target axes will be; 2458/// kept, but only bins inside the selected range will be filled.; 2459///; 2460/// Using a TCutG object, it is possible to select a sub-range of a 2-D histogram.; 2461/// One must create a graphical cut (mouse or C++) and specify the name; 2462/// of the cut between [] in the option.; 2463/// For example, with a TCutG named ""cutg"", one can call:; 2464/// myhist->ProjectionY("" "",firstxbin,lastxbin,""[cutg]"");; 2465/// To invert the cut, it is enough to put a ""-"" in front of its name:; 2466/// myhist->ProjectionY("" "",firstxbin,lastxbin,""[-cutg]"");; 2467/// It is possible to apply several cuts:; 2468/// myhist->ProjectionY("" "",firstxbin,lastxbin,""[cutg1,cutg2]"");; 2469///; 2470/// NOTE that if a TH1D named ""name"" exists in the current directory or pad and having; 2471/// a compatible axis, the histogram is reset and filled again with the projected contents of the TH2.; 2472/// In the case of axis incompatibility, an error is reported and a NULL pointer is returned.; 2473///; 2474/// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection.; 2475 ; 2476TH1D *TH2::ProjectionY(const char *name, Int_t firstxbin, Int_t lastxbin, Option_t *option) const; 2477{; 2478 return DoProjection(false, name, firstxbin, lastxbin, option);; 2479}; 2480 ; 2481 ; 2482////////////////////////////////////////////////////////////////////////////////; 2483/// Replace current statistics with the values in array stats; 2484 ; 2485void TH2::PutStats(Double_t *stats); 2486{; 2487 TH1::PutStats(stats);; 2488 fTsumwy = stats[4];; 2489 fTsumwy2 = stats[5];; 2490 fTsumwxy = stats[6];; 2491}; 2492 ; 2493 ; 2494////////////////////////////////////////////////////////////////////////////////; 2495/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the medi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:101433,error,error,101433,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['error'],['error']
Availability,"2493<b>WARNING:</b> The palette axis is always drawn vertically.; 2494 ; 2495 ; 2496\anchor HP23; 2497### Setting the color palette; 2498 ; 2499 ; 2500To change the color palette `TStyle::SetPalette` should be used, eg:; 2501 ; 2502 gStyle->SetPalette(ncolors,colors);; 2503 ; 2504For example the option `COL` draws a 2D histogram with cells; 2505represented by a box filled with a color index which is a function; 2506of the cell content.; 2507If the cell content is N, the color index used will be the color number; 2508in `colors[N]`, etc. If the maximum cell content is greater than; 2509`ncolors`, all cell contents are scaled to `ncolors`.; 2510 ; 2511If ` ncolors <= 0`, a default palette (see below) of 50 colors is; 2512defined. This palette is recommended for pads, labels ...; 2513 ; 2514`if ncolors == 1 && colors == 0`, then a Pretty Palette with a; 2515Spectrum Violet->Red is created with 50 colors. That's the default rain bow; 2516palette.; 2517 ; 2518Other pre-defined palettes with 255 colors are available when `colors == 0`.; 2519The following value of `ncolors` give access to:; 2520 ; 2521 ; 2522 if ncolors = 51 and colors=0, a Deep Sea palette is used.; 2523 if ncolors = 52 and colors=0, a Grey Scale palette is used.; 2524 if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; 2525 if ncolors = 54 and colors=0, a two-color hue palette palette is used.(dark blue through neutral gray to bright yellow); 2526 if ncolors = 55 and colors=0, a Rain Bow palette is used.; 2527 if ncolors = 56 and colors=0, an inverted Dark Body Radiator palette is used.; 2528 ; 2529 ; 2530If `ncolors > 0 && colors == 0`, the default palette is used with a maximum of ncolors.; 2531 ; 2532The default palette defines:; 2533 ; 2534- index 0 to 9 : shades of grey; 2535- index 10 to 19 : shades of brown; 2536- index 20 to 29 : shades of blue; 2537- index 30 to 39 : shades of red; 2538- index 40 to 49 : basic colors; 2539 ; 2540The color numbers specified in the palette can be v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:102216,avail,available,102216,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['avail'],['available']
Availability,"25, -10, 10); for i in range(100):; hh.Fill(ROOT.gRandom.Gaus(0, 3)); return hh; ; ; def makeTTree():; # Create ROOT ROOT.TTree filled with a Gaussian distribution in x and a; # uniform distribution in y; ; tree = ROOT.TTree(""tree"", ""tree""); px = array(""d"", [0]); py = array(""d"", [0]); tree.Branch(""x"", px, ""x/D""); tree.Branch(""y"", py, ""y/D""); for i in range(100):; px[0] = ROOT.gRandom.Gaus(0, 3); py[0] = ROOT.gRandom.Uniform() * 30 - 15; tree.Fill(); return tree; ; ; ############################; # Importing ROOT histograms; ############################; # Import ROOT TH1 into a RooDataHist; # ---------------------------------------------------------; # Create a ROOT TH1 histogram; hh = makeTH1(); ; # Declare observable x; x = ROOT.RooRealVar(""x"", ""x"", -10, 10); ; # Create a binned dataset that imports contents of ROOT.TH1 and associates; # its contents to observable 'x'; dh = ROOT.RooDataHist(""dh"", ""dh"", [x], Import=hh); ; # Plot and fit a RooDataHist; # ---------------------------------------------------; # Make plot of binned dataset showing Poisson error bars (RooFit default); frame = x.frame(Title=""Imported ROOT.TH1 with Poisson error bars""); dh.plotOn(frame); ; # Fit a Gaussian p.d.f to the data; mean = ROOT.RooRealVar(""mean"", ""mean"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); gauss.fitTo(dh, PrintLevel=-1); gauss.plotOn(frame); ; # Plot and fit a RooDataHist with internal errors; # ---------------------------------------------------------------------------------------------; ; # If histogram has custom error (i.e. its contents is does not originate from a Poisson process; # but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; # (same error bars as shown by ROOT); frame2 = x.frame(Title=""Imported ROOT.TH1 with internal errors""); dh.plotOn(frame2, DataError=""SumW2""); gauss.plotOn(frame2); ; # Please note that error bars shown (Poisson ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf102__dataimport_8py.html:1562,error,error,1562,doc/master/rf102__dataimport_8py.html,https://root.cern,https://root.cern/doc/master/rf102__dataimport_8py.html,1,['error'],['error']
Availability,"25/// Note that to get the TFitResult, te fit should be done using the fit option `S`.; 2726/// Example:; 2727/// ~~~~{.cpp}; 2728/// TFitResultPtr r = histo2d->Fit(func2, ""S"");; 2729/// func2->IntegralError(a,b,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; 2730/// ~~~~; 2731///; 2732/// IMPORTANT NOTE1:; 2733///; 2734/// A null pointer to the parameter values vector and to the covariance matrix can be passed.; 2735/// In this case, when the parameter values pointer is null, the parameter values stored in this; 2736/// TF1 function object are used in the integral error computation.; 2737/// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; 2738/// from a global fitter instance when it exists. Note that the global fitter instance; 2739/// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; 2740/// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; 2741/// returned.; 2742///; 2743///; 2744/// IMPORTANT NOTE2:; 2745///; 2746/// When no covariance matrix is passed and in the meantime a fit is done; 2747/// using another function, the routine will signal an error and it will return zero only; 2748/// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; 2749/// In the case that npar is the same, an incorrect result is returned.; 2750///; 2751/// IMPORTANT NOTE3:; 2752///; 2753/// The user must pass a pointer to the elements of the full covariance matrix; 2754/// dimensioned with the right size (npar*npar), where npar is the total number of parameters (TF1::GetNpar()),; 2755/// including also the fixed parameters. The covariance matrix must be retrieved from the TFitResult class as; 2756/// shown above and not from TVirtualFitter::GetCovarianceMatrix() function.; 2757 ; 2758Double_t TF1::IntegralError(Int_t n, const Double_t *a, const Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:103607,error,error,103607,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['error'],['error']
Availability,"2509 out << "" // parse all voxelized volumes"" << std::endl;; 2510 TGeoVolume *vol = nullptr;; 2511 Bool_t cyltype;; 2512 TIter next(fVolumes);; 2513 while ((vol = (TGeoVolume *)next())) {; 2514 if (!vol->GetVoxels()); 2515 continue;; 2516 out << "" vol = gGeoManager->GetVolume(\"""" << vol->GetName() << ""\"");"" << std::endl;; 2517 cyltype = vol->OptimizeVoxels();; 2518 if (cyltype) {; 2519 out << "" vol->SetCylVoxels();"" << std::endl;; 2520 } else {; 2521 out << "" vol->SetCylVoxels(kFALSE);"" << std::endl;; 2522 }; 2523 }; 2524 out << ""}"" << std::endl;; 2525 out.close();; 2526}; 2527////////////////////////////////////////////////////////////////////////////////; 2528/// Parse a string boolean expression and do a syntax check. Find top; 2529/// level boolean operator and returns its type. Fill the two; 2530/// substrings to which this operator applies. The returned integer is :; 2531/// - -1 : parse error; 2532/// - 0 : no boolean operator; 2533/// - 1 : union - represented as '+' in expression; 2534/// - 2 : difference (subtraction) - represented as '-' in expression; 2535/// - 3 : intersection - represented as '*' in expression.; 2536/// Parentheses should be used to avoid ambiguities. For instance :; 2537/// - A+B-C will be interpreted as (A+B)-C which is not the same as A+(B-C); 2538/// eliminate not needed parentheses; 2539 ; 2540Int_t TGeoManager::Parse(const char *expr, TString &expr1, TString &expr2, TString &expr3); 2541{; 2542 TString startstr(expr);; 2543 Int_t len = startstr.Length();; 2544 Int_t i;; 2545 TString e0 = """";; 2546 expr3 = """";; 2547 // eliminate blanks; 2548 for (i = 0; i < len; i++) {; 2549 if (startstr(i) == ' '); 2550 continue;; 2551 e0 += startstr(i, 1);; 2552 }; 2553 Int_t level = 0;; 2554 Int_t levmin = 999;; 2555 Int_t boolop = 0;; 2556 Int_t indop = 0;; 2557 Int_t iloop = 1;; 2558 Int_t lastop = 0;; 2559 Int_t lastdp = 0;; 2560 Int_t lastpp = 0;; 2561 Bool_t foundmat = kFALSE;; 2562 // check/eliminate parentheses; 2563 while (iloop == 1) {",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:90551,error,error,90551,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['error'],['error']
Availability,254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.13,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97052,error,error,97052,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"2545 }; 2546 return quantile;; 2547}; 2548 ; 2549////////////////////////////////////////////////////////////////////////////////; 2550/// Simple recursive algorithm to find the permutations of; 2551/// n natural numbers, not necessarily all distinct; 2552/// adapted from CERNLIB routine PERMU.; 2553/// The input array has to be initialised with a non descending; 2554/// sequence. The method returns kFALSE when; 2555/// all combinations are exhausted.; 2556 ; 2557Bool_t TMath::Permute(Int_t n, Int_t *a); 2558{; 2559 Int_t i,itmp;; 2560 Int_t i1=-1;; 2561 ; 2562 // find rightmost upward transition; 2563 for(i=n-2; i>-1; i--) {; 2564 if(a[i]<a[i+1]) {; 2565 i1=i;; 2566 break;; 2567 }; 2568 }; 2569 // no more upward transitions, end of the story; 2570 if(i1==-1) return kFALSE;; 2571 else {; 2572 // find lower right element higher than the lower; 2573 // element of the upward transition; 2574 for(i=n-1;i>i1;i--) {; 2575 if(a[i] > a[i1]) {; 2576 // swap the two; 2577 itmp=a[i1];; 2578 a[i1]=a[i];; 2579 a[i]=itmp;; 2580 break;; 2581 }; 2582 }; 2583 // order the rest, in fact just invert, as there; 2584 // are only downward transitions from here on; 2585 for(i=0;i<(n-i1-1)/2;i++) {; 2586 itmp=a[i1+i+1];; 2587 a[i1+i+1]=a[n-i-1];; 2588 a[n-i-1]=itmp;; 2589 }; 2590 }; 2591 return kTRUE;; 2592}; 2593 ; 2594////////////////////////////////////////////////////////////////////////////////; 2595/// Computes density function for Student's t- distribution; 2596/// (the probability function (integral of density) is computed in StudentI).; 2597///; 2598/// First parameter stands for x - the actual variable of the; 2599/// density function p(x) and the point at which the density is calculated.; 2600/// Second parameter stands for number of degrees of freedom.; 2601///; 2602/// About Student distribution:; 2603/// Student's t-distribution is used for many significance tests, for example,; 2604/// for the Student's t-tests for the statistical significance of difference; 2605/// between t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:88413,down,downward,88413,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['down'],['downward']
Availability,"254; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::Streamervirtual void Streamer(TBuffer &)Stream an object of class TObject.Definition TObject.cxx:894; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::AppendPadvirtual void AppendPad(Option_t *option="""")Append graphics object to current pad.Definition TObject.cxx:190; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Copyvirtual void Copy(TObject &object) constCopy this to obj.Definition TObject.cxx:146; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TPolyLineDefined by an array on N points in a 2-D space.Definition TPolyLine.h:23; TPolyLine::fOptionTString fOptionoptionsDefinition TPolyLine.h:30; TPolyLine::Sizevirtual Int_t Size() constDefinition TPolyLine.h:71; TPolyLine::fLastPointInt_t fLastPointThe index of the last filled point.Definition TPolyLine.h:27; TPolyLine::Mergevirtual Int_t Merge(TCollection *list)Merge polylines in the collection in this polyline.Definition TPolyLine.cxx:479; TPolyLine::PaintPolyLineNDCvirtual void PaintPolyLineNDC(Int_t n, Double_t *x, Double_t *y, Option_t *option="""")Draw this polyline with new coordinates in NDC.Definition TPolyLine.cxx:560; TPolyLine::Copyvoid Copy(TObject &polyline) const overrideCopy this polyline to polyline.Definition TPolyLine.cxx:140; TPolyLine::DistancetoPrimitiveInt_t Distanc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPolyLine_8cxx_source.html:28596,error,error,28596,doc/master/TPolyLine_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPolyLine_8cxx_source.html,1,['error'],['error']
Availability,"258 cHl3=4.96668 cHq3=0.0273884; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; ... (remaining 14 messages suppressed); ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=-3.35967 cHl3=-9.58704 cHq3=-6.27461; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=486.968, deno",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:13479,recover,recover,13479,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,2,['recover'],['recover']
Availability,"258 if (!axis->GetLabels()) return;; 5259 ; 5260 // find bin with last labels; 5261 // bin number is object ID in list of labels; 5262 // therefore max bin number is number of bins of the deflated histograms; 5263 TIter next(axis->GetLabels());; 5264 TObject *obj;; 5265 Int_t nbins = 0;; 5266 while ((obj = next())) {; 5267 Int_t ibin = obj->GetUniqueID();; 5268 if (ibin > nbins) nbins = ibin;; 5269 }; 5270 if (nbins < 1) nbins = 1;; 5271 ; 5272 // Do nothing in case it was the last bin; 5273 if (nbins==axis->GetNbins()) return;; 5274 ; 5275 TH1 *hold = (TH1*)IsA()->New();; 5276 R__ASSERT(hold);; 5277 hold->SetDirectory(nullptr);; 5278 Copy(*hold);; 5279 ; 5280 Bool_t timedisp = axis->GetTimeDisplay();; 5281 Double_t xmin = axis->GetXmin();; 5282 Double_t xmax = axis->GetBinUpEdge(nbins);; 5283 if (xmax <= xmin) xmax = xmin +nbins;; 5284 axis->SetRange(0,0);; 5285 axis->Set(nbins,xmin,xmax);; 5286 SetBinsLength(-1); // reset the number of cells; 5287 Int_t errors = fSumw2.fN;; 5288 if (errors) fSumw2.Set(fNcells);; 5289 axis->SetTimeDisplay(timedisp);; 5290 // reset histogram content; 5291 Reset(""ICE"");; 5292 ; 5293 //now loop on all bins and refill; 5294 // NOTE that if the bins without labels have content; 5295 // it will be put in the underflow/overflow.; 5296 // For this reason we use AddBinContent method; 5297 Double_t oldEntries = fEntries;; 5298 Int_t bin,binx,biny,binz;; 5299 for (bin=0; bin < hold->fNcells; ++bin) {; 5300 hold->GetBinXYZ(bin,binx,biny,binz);; 5301 Int_t ibin = GetBin(binx,biny,binz);; 5302 Double_t cu = hold->RetrieveBinContent(bin);; 5303 AddBinContent(ibin,cu);; 5304 if (errors) {; 5305 fSumw2.fArray[ibin] += hold->fSumw2.fArray[bin];; 5306 }; 5307 }; 5308 fEntries = oldEntries;; 5309 delete hold;; 5310}; 5311 ; 5312////////////////////////////////////////////////////////////////////////////////; 5313/// Double the number of bins for axis.; 5314/// Refill histogram.; 5315/// This function is called by TAxis::FindBin(const char *label); 5316",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:212861,error,errors,212861,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"25; ROOT::Math::Minimizer::MinimizerMinimizer(Minimizer &&)=delete; ROOT::Math::Minimizer::fStatusint fStatusstatus of minimizerDefinition Minimizer.h:371; ROOT::Math::Minimizer::SetVariableValuevirtual bool SetVariableValue(unsigned int ivar, double value)set the value of an already existing variableDefinition Minimizer.cxx:53; ROOT::Math::Minimizer::SetFunctionvirtual void SetFunction(const ROOT::Math::IMultiGenFunction &func)=0set the function to minimize; ROOT::Math::Minimizer::Scanvirtual bool Scan(unsigned int ivar, unsigned int &nstep, double *x, double *y, double xmin=0, double xmax=0)scan function minimum for variable i.Definition Minimizer.cxx:195; ROOT::Math::Minimizer::MaxIterationsunsigned int MaxIterations() constmax iterationsDefinition Minimizer.h:297; ROOT::Math::Minimizer::SetDefaultOptionsvoid SetDefaultOptions()reset the default options (defined in MinimizerOptions)Definition Minimizer.h:361; ROOT::Math::Minimizer::fValidErrorbool fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit)Definition Minimizer.h:369; ROOT::Math::Minimizer::MinosStatusvirtual int MinosStatus() conststatus code of Minos (to be re-implemented by the minimizers supporting Minos)Definition Minimizer.h:313; ROOT::Math::Minimizer::SetVariableLimitsvirtual bool SetVariableLimits(unsigned int ivar, double lower, double upper)set the limits of an already existing variableDefinition Minimizer.h:199; ROOT::Math::Minimizer::SetTolerancevoid SetTolerance(double tol)set the toleranceDefinition Minimizer.h:337; ROOT::Math::Minimizer::MinimizerMinimizer(Minimizer const &)=delete; ROOT::Math::Minimizer::CovMatrixStatusvirtual int CovMatrixStatus() constreturn status of covariance matrix using Minuit convention {0 not calculated 1 approximated 2 made po...Definition Minimizer.h:256; ROOT::Math::Minimizer::Minimizevirtual bool Minimize()=0method to perform the minimization; ROOT::Math::Minimizer::Statusint Status() conststatus code of minimizerDefi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:24921,error,errors,24921,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['error'],['errors']
Availability,"26 of file TPSocket.cxx. ◆ RecvRaw(). Int_t TPSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). overridevirtual . Send a raw buffer of specified length. ; Returns the number of bytes sent or -1 in case of error. ; Reimplemented from TSocket.; Definition at line 679 of file TPSocket.cxx. ◆ Send() [1/4]. Int_t TPSocket::Send ; (; const char * ; str, . Int_t ; kind = kMESS_STRING . ). inlineoverridevirtual . Send a character string buffer. ; Use kind to set the TMessage ""what"" field. Returns the number of bytes in the string str that were sent and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 71 of file TPSocket.h. ◆ Send() [2/4]. Int_t TPSocket::Send ; (; const TMessage & ; mess). overridevirtual . Send a TMessage object. ; Returns the number of bytes in the TMessage that were sent and -1 in case of error. In case the TMessage::What has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. ; Reimplemented from TSocket.; Definition at line 483 of file TPSocket.cxx. ◆ Send() [3/4]. Int_t TPSocket::Send ; (; Int_t ; kind). inlineoverridevirtual . Send a single message opcode. ; Use kind (opcode) to set the TMessage ""what"" field. Returns the number of bytes that were sent (always sizeof(Int_t)) and -1 in case of error. In case the kind has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending process synchronous. ; Reimplemented from TSocket.; Definition at line 69 of file TPSocket.h. ◆ Send() [4/4]. Int_t TPSocket::Send ; (; Int_t ; status, . Int_t ; kind . ). inlineoverridevirtual . Send a status and a single message opcode. ; Use kind (opcode) to set ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPSocket.html:28792,error,error,28792,doc/master/classTPSocket.html,https://root.cern,https://root.cern/doc/master/classTPSocket.html,1,['error'],['error']
Availability,"2675/// Note that to get the TFitResult, te fit should be done using the fit option `S`.; 2676/// Example:; 2677/// ~~~~{.cpp}; 2678/// TFitResultPtr r = histo->Fit(func, ""S"");; 2679/// func->IntegralError(x1,x2,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; 2680/// ~~~~; 2681///; 2682/// IMPORTANT NOTE1:; 2683///; 2684/// A null pointer to the parameter values vector and to the covariance matrix can be passed.; 2685/// In this case, when the parameter values pointer is null, the parameter values stored in this; 2686/// TF1 function object are used in the integral error computation.; 2687/// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; 2688/// from a global fitter instance when it exists. Note that the global fitter instance; 2689/// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; 2690/// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; 2691/// returned.; 2692///; 2693///; 2694/// IMPORTANT NOTE2:; 2695///; 2696/// When no covariance matrix is passed and in the meantime a fit is done; 2697/// using another function, the routine will signal an error and it will return zero only; 2698/// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; 2699/// In the case that npar is the same, an incorrect result is returned.; 2700///; 2701/// IMPORTANT NOTE3:; 2702///; 2703/// The user must pass a pointer to the elements of the full covariance matrix; 2704/// dimensioned with the right size (npar*npar), where npar is the total number of parameters (TF1::GetNpar()),; 2705/// including also the fixed parameters. The covariance matrix must be retrieved from the TFitResult class as; 2706/// shown above and not from TVirtualFitter::GetCovarianceMatrix() function.; 2707 ; 2708Double_t TF1::IntegralError(Double_t a, Double_t b, const Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:100700,error,error,100700,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['error'],['error']
Availability,"27 TStreamerLoop *eloop = (TStreamerLoop*)element;; 2828 if (fName == eloop->GetCountClass()) {; 2829 eloop->SetCountClass(newname);; 2830 eloop->Init();; 2831 }; 2832 } else if (element->IsA() == TStreamerBasicPointer::Class()) {; 2833 TStreamerBasicPointer *eptr = (TStreamerBasicPointer*)element;; 2834 if (fName == eptr->GetCountClass()) {; 2835 eptr->SetCountClass(newname);; 2836 eptr->Init();; 2837 }; 2838 }; 2839 }; 2840 }; 2841 ++fgCount;; 2842 newinfo->fNumber = fgCount;; 2843 return newinfo;; 2844}; 2845 ; 2846////////////////////////////////////////////////////////////////////////////////; 2847/// Return True if the current StreamerInfo in cl or info is equivalent to this TStreamerInfo.; 2848///; 2849/// In this context 'Equivalent' means the same number of persistent data member which the same actual C++ type and; 2850/// the same name.; 2851/// If 'warn' is true, Warning message are printed to explicit the differences.; 2852/// If 'complete' is false, stop at the first error, otherwise continue until all members have been checked.; 2853 ; 2854Bool_t TStreamerInfo::CompareContent(TClass *cl, TVirtualStreamerInfo *info, Bool_t warn, Bool_t complete, TFile *file); 2855{; 2856 Bool_t result = kTRUE;; 2857 R__ASSERT( (cl==0 || info==0) && (cl!=0 || info!=0) /* must compare to only one thing! */);; 2858 ; 2859 TString name;; 2860 TString type;; 2861 TStreamerElement *el;; 2862 TStreamerElement *infoel = 0;; 2863 ; 2864 TIter next(GetElements());; 2865 TIter infonext((TList*)0);; 2866 TIter basenext((TList*)0);; 2867 TIter membernext((TList*)0);; 2868 if (info) {; 2869 infonext = info->GetElements();; 2870 }; 2871 if (cl) {; 2872 TList *tlb = cl->GetListOfBases();; 2873 if (tlb) { // Loop over bases; 2874 basenext = tlb;; 2875 }; 2876 tlb = cl->GetListOfDataMembers();; 2877 if (tlb) {; 2878 membernext = tlb;; 2879 }; 2880 }; 2881 ; 2882 // First let's compare base classes; 2883 Bool_t done = kFALSE;; 2884 TString localClass;; 2885 TString otherClass;; 2886 while",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:113436,error,error,113436,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['error'],['error']
Availability,"2735 if ((mop & 0xf) == MG_WEBSOCKET_OPCODE_CONNECTION_CLOSE) {; 12736 /* Opcode == 8, connection close */; 12737 DEBUG_TRACE(""Message requests to close connection from %s:%u"",; 12738 conn->request_info.remote_addr,; 12739 conn->request_info.remote_port);; 12740 break;; 12741 }; 12742 ; 12743 /* Not breaking the loop, process next websocket frame. */; 12744 } else {; 12745 /* Read from the socket into the next available location in the; 12746 * message queue. */; 12747 n = pull_inner(NULL,; 12748 conn,; 12749 conn->buf + conn->data_len,; 12750 conn->buf_size - conn->data_len,; 12751 timeout);; 12752 if (n <= -2) {; 12753 /* Error, no bytes read */; 12754 DEBUG_TRACE(""PULL from %s:%u failed"",; 12755 conn->request_info.remote_addr,; 12756 conn->request_info.remote_port);; 12757 break;; 12758 }; 12759 if (n > 0) {; 12760 conn->data_len += n;; 12761 /* Reset open PING count */; 12762 ping_count = 0;; 12763 } else {; 12764 if (STOP_FLAG_IS_ZERO(&conn->phys_ctx->stop_flag); 12765 && (!conn->must_close)) {; 12766 if (ping_count > MG_MAX_UNANSWERED_PING) {; 12767 /* Stop sending PING */; 12768 DEBUG_TRACE(""Too many (%i) unanswered ping from %s:%u ""; 12769 ""- closing connection"",; 12770 ping_count,; 12771 conn->request_info.remote_addr,; 12772 conn->request_info.remote_port);; 12773 break;; 12774 }; 12775 if (enable_ping_pong) {; 12776 /* Send Websocket PING message */; 12777 DEBUG_TRACE(""PING to %s:%u"",; 12778 conn->request_info.remote_addr,; 12779 conn->request_info.remote_port);; 12780 ret = mg_websocket_write(conn,; 12781 MG_WEBSOCKET_OPCODE_PING,; 12782 NULL,; 12783 0);; 12784 ; 12785 if (ret <= 0) {; 12786 /* Error: send failed */; 12787 DEBUG_TRACE(""Send PING failed (%i)"", ret);; 12788 break;; 12789 }; 12790 ping_count++;; 12791 }; 12792 }; 12793 /* Timeout: should retry */; 12794 /* TODO: get timeout def */; 12795 }; 12796 }; 12797 }; 12798 ; 12799 /* Leave data processing loop */; 12800 mg_set_thread_name(""worker"");; 12801 conn->in_websocket_handling = 0;; 12802 DEBU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:371138,ping,ping,371138,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['ping'],['ping']
Availability,"2736 if ((mop & 0xf) == MG_WEBSOCKET_OPCODE_CONNECTION_CLOSE) {; 12737 /* Opcode == 8, connection close */; 12738 DEBUG_TRACE(""Message requests to close connection from %s:%u"",; 12739 conn->request_info.remote_addr,; 12740 conn->request_info.remote_port);; 12741 break;; 12742 }; 12743 ; 12744 /* Not breaking the loop, process next websocket frame. */; 12745 } else {; 12746 /* Read from the socket into the next available location in the; 12747 * message queue. */; 12748 n = pull_inner(NULL,; 12749 conn,; 12750 conn->buf + conn->data_len,; 12751 conn->buf_size - conn->data_len,; 12752 timeout);; 12753 if (n <= -2) {; 12754 /* Error, no bytes read */; 12755 DEBUG_TRACE(""PULL from %s:%u failed"",; 12756 conn->request_info.remote_addr,; 12757 conn->request_info.remote_port);; 12758 break;; 12759 }; 12760 if (n > 0) {; 12761 conn->data_len += n;; 12762 /* Reset open PING count */; 12763 ping_count = 0;; 12764 } else {; 12765 if (STOP_FLAG_IS_ZERO(&conn->phys_ctx->stop_flag); 12766 && (!conn->must_close)) {; 12767 if (ping_count > MG_MAX_UNANSWERED_PING) {; 12768 /* Stop sending PING */; 12769 DEBUG_TRACE(""Too many (%i) unanswered ping from %s:%u ""; 12770 ""- closing connection"",; 12771 ping_count,; 12772 conn->request_info.remote_addr,; 12773 conn->request_info.remote_port);; 12774 break;; 12775 }; 12776 if (enable_ping_pong) {; 12777 /* Send Websocket PING message */; 12778 DEBUG_TRACE(""PING to %s:%u"",; 12779 conn->request_info.remote_addr,; 12780 conn->request_info.remote_port);; 12781 ret = mg_websocket_write(conn,; 12782 MG_WEBSOCKET_OPCODE_PING,; 12783 NULL,; 12784 0);; 12785 ; 12786 if (ret <= 0) {; 12787 /* Error: send failed */; 12788 DEBUG_TRACE(""Send PING failed (%i)"", ret);; 12789 break;; 12790 }; 12791 ping_count++;; 12792 }; 12793 }; 12794 /* Timeout: should retry */; 12795 /* TODO: get timeout def */; 12796 }; 12797 }; 12798 }; 12799 ; 12800 /* Leave data processing loop */; 12801 mg_set_thread_name(""worker"");; 12802 conn->in_websocket_handling = 0;; 12803 DEBU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:371171,ping,ping,371171,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['ping'],['ping']
Availability,"2776 for (j=jfirst; j<=jlast; j++){; 2777 bin = GetBin(i,j);; 2778 buf[bin] = RetrieveBinContent(bin);; 2779 if (ebuf) ebuf[bin]=GetBinError(bin);; 2780 }; 2781 }; 2782 ; 2783 // Kernel tail sizes (kernel sizes must be odd for this to work!); 2784 Int_t x_push = (ksize_x-1)/2;; 2785 Int_t y_push = (ksize_y-1)/2;; 2786 ; 2787 // main work loop; 2788 for (i=ifirst; i<=ilast; i++){; 2789 for (j=jfirst; j<=jlast; j++) {; 2790 Double_t content = 0.0;; 2791 Double_t error = 0.0;; 2792 Double_t norm = 0.0;; 2793 ; 2794 for (Int_t n=0; n<ksize_x; n++) {; 2795 for (Int_t m=0; m<ksize_y; m++) {; 2796 Int_t xb = i+(n-x_push);; 2797 Int_t yb = j+(m-y_push);; 2798 if ( (xb >= 1) && (xb <= nx) && (yb >= 1) && (yb <= ny) ) {; 2799 bin = GetBin(xb,yb);; 2800 Double_t k = kernel[n*ksize_y +m];; 2801 //if ( (k != 0.0 ) && (buf[bin] != 0.0) ) { // General version probably does not want the second condition; 2802 if ( k != 0.0 ) {; 2803 norm += k;; 2804 content += k*buf[bin];; 2805 if (ebuf) error += k*k*ebuf[bin]*ebuf[bin];; 2806 }; 2807 }; 2808 }; 2809 }; 2810 ; 2811 if ( norm != 0.0 ) {; 2812 SetBinContent(i,j,content/norm);; 2813 if (ebuf) {; 2814 error /= (norm*norm);; 2815 SetBinError(i,j,sqrt(error));; 2816 }; 2817 }; 2818 }; 2819 }; 2820 fEntries = nentries;; 2821 ; 2822 delete [] buf;; 2823 delete [] ebuf;; 2824}; 2825 ; 2826 ; 2827////////////////////////////////////////////////////////////////////////////////; 2828/// Stream an object of class TH2.; 2829 ; 2830void TH2::Streamer(TBuffer &R__b); 2831{; 2832 if (R__b.IsReading()) {; 2833 UInt_t R__s, R__c;; 2834 Version_t R__v = R__b.ReadVersion(&R__s, &R__c);; 2835 if (R__v > 2) {; 2836 R__b.ReadClassBuffer(TH2::Class(), this, R__v, R__s, R__c);; 2837 return;; 2838 }; 2839 //====process old versions before automatic schema evolution; 2840 TH1::Streamer(R__b);; 2841 R__b >> fScalefactor;; 2842 R__b >> fTsumwy;; 2843 R__b >> fTsumwy2;; 2844 R__b >> fTsumwxy;; 2845 //====end of old versions; 2846 ; 2847 } else {; 2848 R__b.Write",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:114509,error,error,114509,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['error'],['error']
Availability,"278 latex.DrawLatex(.3,.6,""K^{*0}"");; 279 latex.DrawLatex(.2,.5,longstring);; 280 ; 281 latex.SetTextAlign(11); //default bottom alignment; 282 latex.DrawLatex(.2,.4,""K_{S}"");; 283 latex.DrawLatex(.3,.4,""K^{*0}"");; 284 latex.DrawLatex(.2,.3,longstring);; 285 ; 286 latex.SetTextAlign(10); //special bottom alignment; 287 latex.DrawLatex(.2,.2,""K_{S}"");; 288 latex.DrawLatex(.3,.2,""K^{*0}"");; 289 latex.DrawLatex(.2,.1,longstring);; 290 ; 291 latex.SetTextAlign(12);; 292 latex.SetTextFont(72);; 293 latex.DrawLatex(.1,.80,""13"");; 294 latex.DrawLatex(.1,.55,""12"");; 295 latex.DrawLatex(.1,.35,""11"");; 296 latex.DrawLatex(.1,.18,""10"");; 297 return Tlva;; 298}; 299End_Macro; 300 ; 301 ; 302\anchor L11; 303## Character Adjustment; 304 ; 305The two commands `#kern` and `#lower` enable a better control; 306over character placement. The command `#kern[(Float_t)dx]{text}` moves; 307the output string horizontally by the fraction `dx` of its length.; 308Similarly, `#lower[(Float_t)dy]{text}` shifts the text up or down by; 309the fraction `dy` of its height.; 310 ; 311Examples:; 312 ; 313Begin_Macro; 314{; 315 TCanvas *cl = new TCanvas(""cl"",""cl"",10,10,900,300);; 316 TLatex Tl; Tl.SetTextFont(43); Tl.SetTextSize(20);; 317 TLatex Tt; Tt.SetTextFont(43); Tt.SetTextSize(16);; 318 Double_t dy = 1./7.;; 319 Tl.DrawLatex(.5, dy, ""Positive k#kern[0.3]{e}#kern[0.3]{r}#kern[0.3]{n}#kern[0.3]{i}#kern[0.3]{n}#kern[0.3]{g}"");; 320 Tt.DrawText(.01, 2*dy, ""Positive k#kern[0.3]{e}#kern[0.3]{r}#kern[0.3]{n}#kern[0.3]{i}#kern[0.3]{n}#kern[0.3]{g} :"");; 321 Tl.DrawLatex(.5, 3*dy, ""Negative k#kern[-0.3]{e}#kern[-0.3]{r}#kern[-0.3]{n}#kern[-0.3]{i}#kern[-0.3]{n}#kern[-0.3]{g}"");; 322 Tt.DrawText(.01, 4*dy, ""Negative k#kern[-0.3]{e}#kern[-0.3]{r}#kern[-0.3]{n}#kern[-0.3]{i}#kern[-0.3]{n}#kern[-0.3]{g} :"");; 323 Tl.DrawLatex(.5, 5*dy, ""Vertical a#lower[0.2]{d}#lower[0.4]{j}#lower[0.1]{u}#lower[-0.1]{s}#lower[-0.3]{t}#lower[-0.4]{m}#lower[-0.2]{e}#lower[0.1]{n}t"");; 324 Tt.DrawText(.01, 6*dy, ""Vertical a#low",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLatex_8cxx_source.html:11170,down,down,11170,doc/master/TLatex_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLatex_8cxx_source.html,1,['down'],['down']
Availability,28 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81007,error,error,81007,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"280 return nullptr;; 4281 TClass *cl = TClass::GetClass(h->GetClass());; 4282 if (cl && cl->InheritsFrom(""TNetFile"")); 4283 f = (TFile*) h->ExecPlugin(5, name.Data(), option, ftitle, compress, netopt);; 4284 else; 4285 f = (TFile*) h->ExecPlugin(4, name.Data(), option, ftitle, compress);; 4286 } else {; 4287 // Just try to open it locally but via TFile::Open, so that we pick-up the correct; 4288 // plug-in in the case file name contains information about a special backend (e.g.); 4289 if (strcmp(name, urlname.GetFileAndOptions()) != 0); 4290 f = TFile::Open(urlname.GetFileAndOptions(), option, ftitle, compress);; 4291 }; 4292 }; 4293 }; 4294 ; 4295 if (f && f->IsZombie()) {; 4296 TString newUrl = f->GetNewUrl();; 4297 delete f;; 4298 if( newUrl.Length() && (newUrl != name) && gEnv->GetValue(""TFile.CrossProtocolRedirects"", 1) ); 4299 f = TFile::Open( newUrl, option, ftitle, compress );; 4300 else; 4301 f = nullptr;; 4302 }; 4303 }; 4304 ; 4305 if (rediroutput) {; 4306 // Restore output to stdout; 4307 gSystem->RedirectOutput(0, """", &rh);; 4308 // If we failed print error messages; 4309 if (!f); 4310 gSystem->ShowOutput(&rh);; 4311 // Remove the file; 4312 gSystem->Unlink(rh.fFile);; 4313 }; 4314 ; 4315 // if the file is writable, non local, and not opened in raw mode; 4316 // we create a default write cache of 512 KBytes; 4317 if (type != kLocal && type != kFile &&; 4318 f && f->IsWritable() && !f->IsRaw()) {; 4319 new TFileCacheWrite(f, 1);; 4320 }; 4321 ; 4322 return f;; 4323}; 4324 ; 4325////////////////////////////////////////////////////////////////////////////////; 4326/// Submit an asynchronous open request.; 4327 ; 4328/// See TFile::Open(const char *, ...) for an; 4329/// explanation of the arguments. A handler is returned which is to be passed; 4330/// to TFile::Open(TFileOpenHandle *) to get the real TFile instance once; 4331/// the file is open.; 4332/// This call never blocks and it is provided to allow parallel submission; 4333/// of file opening operati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:157564,error,error,157564,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['error'],['error']
Availability,"2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; ROOT::Minuit2::ModularFunctionMinimizerModularFunctionMinimizer(); ROOT::Minuit2::ModularFunctionMinimizerModularFunctionMinimizer(const ROOT::Minuit2::ModularFunctionMinimizer&); ROOT::Minuit2::ModularFunctionMinimizer&operator=(const ROOT::Minuit2::ModularFunctionMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~ModularFunctionMinimizer(); {}. FunctionMinimum Minimize(const FCNBase&, const std::vector<double>&, const std::vector<double>&, unsigned int stra=1, unsigned int maxfcn = 0, double toler = 0.1); inherited interface. FunctionMinimum Minimize(const FCNGradientBase&, const std::vector<double>&, const std::vector<double>&, unsigned int stra=1, unsigned int maxfcn = 0, double toler = 0.1). FunctionMinimum",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__ModularFunctionMinimizer.html:3611,toler,toler,3611,root/html602/ROOT__Minuit2__ModularFunctionMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__ModularFunctionMinimizer.html,2,['toler'],['toler']
Availability,"2; TGraph2DErrors TGraph2DErrors, TH2; TH2 TGraph2DErrors, TH2; TH3 TH3. Double_t* GetCovarianceMatrix() const; Returns covariance matrix. void GetCovarianceMatrix(TMatrixD& matr); Returns covariance matrix. void GetDesignMatrix(TMatrixD& matr); Returns the internal design matrix. void GetErrors(TVectorD& vpar); Returns parameter errors. void GetParameters(TVectorD& vpar); Returns parameter values. Int_t GetParameter(Int_t ipar, char* name, Double_t& value, Double_t& , Double_t& , Double_t& ) const; Returns the value and the name of the parameter #ipar; NB: In the calling function he argument name must be set large enough. Double_t GetParError(Int_t ipar) const; Returns the error of parameter #ipar. const char * GetParName(Int_t ipar) const; Returns name of parameter #ipar. Double_t GetParTValue(Int_t ipar); Returns the t-value for parameter #ipar. Double_t GetParSignificance(Int_t ipar); Returns the significance of parameter #ipar. void GetFitSample(TBits& bits); For robust lts fitting, returns the sample, on which the best fit was based. Int_t Merge(TCollection* list); Merge objects in list. void SetBasisFunctions(TObjArray* functions); set the basis functions in case the fitting function is not; set directly; The TLinearFitter will manage and delete the functions contained in the list. void SetDim(Int_t n); set the number of dimensions. void SetFormula(const char* formula); Additive parts should be separated by ""++"".; Examples (ai are parameters to fit):; 1.fitting function: a0*x0 + a1*x1 + a2*x2; input formula ""x[0]++x[1]++x[2]""; 2.TMath functions can be used:; fitting function: a0*TMath::Gaus(x, 0, 1) + a1*y; input formula: ""TMath::Gaus(x, 0, 1)++y""; fills the array of functions. void SetFormula(TFormula* function); Set the fitting function. Bool_t UpdateMatrix(); Update the design matrix after the formula has been changed. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); To use in TGraph::Fit and TH1::Fit(). void PrintResults(Int_t level,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLinearFitter.html:25639,robust,robust,25639,root/html528/TLinearFitter.html,https://root.cern,https://root.cern/root/html528/TLinearFitter.html,4,['robust'],['robust']
Availability,"2; TGraphDelaunay::fXNDouble_t * fXN! fGraph2D vectors normalized of size fNpointsDefinition TGraphDelaunay.h:45; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; bool; double; int; Interpolate#define Interpolate(a, x, b, y)Definition geom.c:179; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; f1TF1 * f1Definition legend1.C:11; c2return c2Definition legend2.C:14; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::IsInsideBool_t IsInside(T xp, T yp, Int_t np, T *x, T *y)Function which returns kTRUE if point xp,yp lies inside the polygon defined by the np points in array...Definition TMath.h:1233; TMath::ATan2Double_t ATan2(Double_t y, Double_t x)Returns the principal value of the arc tangent of y/x, expressed in radians.Definition TMath.h:646; TMath::SqrtDouble_t Sqrt(Double_t x)Returns the square root of x.Definition TMath.h:662; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37; TMath::Sortvoid Sort(Index n, const Element *a, Index *index, Bool_t down=kTRUE)Sort the n elements of the array a of generic templated type Element.Definition TMathBase.h:431; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; TMath::TwoPiconstexpr Double_t TwoPi()Definition TMath.h:44; v@ vDefinition rootcling_impl.cxx:3699; mTMarker mDefinition textangle.C:8; lTLine lDefinition textangle.C:4; t1auto * t1Definition textangle.C:20. histhistsrcTGraphDelaunay.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:33 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html:41094,down,down,41094,doc/master/TGraphDelaunay_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html,1,['down'],['down']
Availability,"2; kUShort_t@ kUShort_tDefinition TDataType.h:29; kDouble_t@ kDouble_tDefinition TDataType.h:31; kCharStar@ kCharStarDefinition TDataType.h:34; kChar_t@ kChar_tDefinition TDataType.h:29; kUChar_t@ kUChar_tDefinition TDataType.h:29; kUInt_t@ kUInt_tDefinition TDataType.h:30; kFloat16_t@ kFloat16_tDefinition TDataType.h:33; kOther_t@ kOther_tDefinition TDataType.h:32; operator!=Bool_t operator!=(const TDatime &d1, const TDatime &d2)Definition TDatime.h:104; kIsUnionMember@ kIsUnionMemberDefinition TDictionary.h:74; kIsAbstract@ kIsAbstractDefinition TDictionary.h:71; kIsStatic@ kIsStaticDefinition TDictionary.h:80; kMaxLenconst Int_t kMaxLenDefinition TDirectory.cxx:34; gDirectory#define gDirectoryDefinition TDirectory.h:384; TEnum.h; TError.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; kErrorconstexpr Int_t kErrorDefinition TError.h:47; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; gErrorIgnoreLevelInt_t gErrorIgnoreLevelError handling routines.Definition TError.cxx:31; TFile.h; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void inputDefinition TGWin32VirtualXProxy.cxx:142; cindexOption_t Option_t cindexDefinition TGWin32VirtualXProxy.cxx:50; filenameOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:237953,error,error,237953,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['error'],['error']
Availability,"2; }. unsigned int Ndf() const; Number of degree of freedom. { return fNdf; }. double Prob() const; p value of the fit (chi2 probability). const std::vector<double> & Errors() const; parameter errors (return st::vector). { return fErrors; }. const double * GetErrors() const; parameter errors (return const pointer). { return (fErrors.empty()) ? 0 : &fErrors.front(); }. const std::vector<double> & Parameters() const; parameter values (return std::vector). { return fParams; }. const double * GetParams() const; parameter values (return const pointer). { return &fParams.front(); }. double Value(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Parameter(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Error(unsigned int i) const; parameter error by index; (NOTE: this due to conflict with TObject::Error cannot used in derived class which; inherits from TObject. Use instead ParError (or Errors()[i] ). double ParError(unsigned int i) const; parameter error by index. std::string ParName(unsigned int i) const; name of the parameter. void SetMinosError(unsigned int i, double elow, double eup); set the Minos errors for parameter i (called by the Fitter class when running Minos). bool HasMinosError(unsigned int i) const; query if parameter i has the Minos error. double LowerError(unsigned int i) const; lower Minos error. If Minos has not run for parameter i return the parabolic error. double UpperError(unsigned int i) const; upper Minos error. If Minos has not run for parameter i return the parabolic error. double GlobalCC(unsigned int i) const; parameter global correlation coefficient. double CovMatrix(unsigned int i, unsigned int j) const; retrieve covariance matrix element. double Correlation(unsigned int i, unsigned int j) const; retrieve correlation elements. void GetConfidenceIntervals(unsigned int n, unsigned int stride1, unsigned int stride2, const double* x, double* ci, double cl = 0.94999999999999996, bool nor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__FitResult.html:8504,error,error,8504,root/html602/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__FitResult.html,2,['error'],['error']
Availability,"2; }. unsigned int Ndf() const; Number of degree of freedom. { return fNdf; }. double Prob() const; p value of the fit (chi2 probability). const std::vector<double> & Errors() const; parameter errors (return st::vector). { return fErrors; }. const double * GetErrors() const; parameter errors (return const pointer). { return (fErrors.empty()) ? 0 : &fErrors.front(); }. const std::vector<double> & Parameters() const; parameter values (return std::vector). { return fParams; }. const double * GetParams() const; parameter values (return const pointer). { return &fParams.front(); }. double Value(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Parameter(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Error(unsigned int i) const; parameter error by index; (NOTE: this due to conflict with TObject::Error cannot used in derived class which; inherits from TObject. Use instead ParError (or Errors()[i] ). double ParError(unsigned int i) const; parameter error by index. std::string ParName(unsigned int i) const; name of the parameter. void SetMinosError(unsigned int i, double elow, double eup); set the Minos errors for parameter i (called by the Fitter class when running Minos). bool HasMinosError(unsigned int i) const; query if parameter i has the Minos error. double LowerError(unsigned int i) const; lower Minos error. If Minos has not run for parameter i return the parabolic error. double UpperError(unsigned int i) const; upper Minos error. If Minos has not run for parameter i return the parabolic error. double GlobalCC(unsigned int i) const; parameter global correlation coefficient. double CovMatrix(unsigned int i, unsigned int j) const; retrieve covariance matrix element. double Correlation(unsigned int i, unsigned int j) const; retrieve correlation elements. void GetCovarianceMatrix(TMatrixTSym<double>& mat) const; fill covariance matrix elements using a generic matrix class implementing operator(i,j); the matrix ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Fit__FitResult.html:8106,error,error,8106,root/html530/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html530/ROOT__Fit__FitResult.html,3,['error'],['error']
Availability,"2; }. unsigned int Ndf() const; Number of degree of freedom. { return fNdf; }. double Prob() const; p value of the fit (chi2 probability). const std::vector<double> & Errors() const; parameter errors (return st::vector). { return fErrors; }. const double * GetErrors() const; parameter errors (return const pointer). { return (fErrors.empty()) ? 0 : &fErrors.front(); }. const std::vector<double> & Parameters() const; parameter values (return std::vector). { return fParams; }. const double * GetParams() const; parameter values (return const pointer). { return &fParams.front(); }. double Value(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Parameter(unsigned int i) const; parameter value by index. { return fParams[i]; }. double Error(unsigned int i) const; parameter error by index; (NOTE: this due to conflict with TObject::Error cannot used in derived class which; inherits from TObject. Use instead ParError (or Errors()[i] ). double ParError(unsigned int i) const; parameter error by index. std::string ParName(unsigned int i) const; name of the parameter. void SetMinosError(unsigned int i, double elow, double eup); set the Minos errors for parameter i (called by the Fitter class when running Minos). double LowerError(unsigned int i) const; lower Minos error. If Minos has not run for parameter i return the parabolic error. double UpperError(unsigned int i) const; upper Minos error. If Minos has not run for parameter i return the parabolic error. double GlobalCC(unsigned int i) const; parameter global correlation coefficient. double CovMatrix(unsigned int i, unsigned int j) const; retrieve covariance matrix element. double Correlation(unsigned int i, unsigned int j) const; retrieve correlation elements. void GetCovarianceMatrix(TMatrixTSym<double>& mat) const; fill covariance matrix elements using a generic matrix class implementing operator(i,j); the matrix must be previously allocates with right size (npar * npar). void GetCorrelationMatri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Fit__FitResult.html:7870,error,error,7870,root/html528/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html528/ROOT__Fit__FitResult.html,1,['error'],['error']
Availability,"2; » ROOT::Minuit2::FumiliMinimizer. class ROOT::Minuit2::FumiliMinimizer: public ROOT::Minuit2::ModularFunctionMinimizer. Instantiates the seed generator and Minimum builder for the; Fumili minimization method. Produces the Minimum via the; Minimize methods inherited from ModularFunctionMinimizer. @author Andras Zsenei and Lorenzo Moneta, Creation date: 28 Sep 2004. @ingroup Minuit. Function Members (Methods); public:. virtual~FumiliMinimizer(); virtual const ROOT::Minuit2::FumiliBuilder&Builder() const; virtual ROOT::Minuit2::FumiliBuilder&Builder(); ROOT::Minuit2::FumiliMinimizerFumiliMinimizer(); ROOT::Minuit2::FumiliMinimizerFumiliMinimizer(const ROOT::Minuit2::FumiliMinimizer&); virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::MnUserParameters& par, const ROOT::Minuit2::MnStrategy& stra, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNGradientBase& fcn, const ROOT::Minuit2::MnUserParameters& par, const ROOT::Minuit2::MnStrategy& stra, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNBase& fcn, const vector<double>& par, const vector<double>& err, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumMinimize(const ROOT::Minuit2::FCNGradientBase& fcn, const vector<double>& par, const vector<double>& err, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__FumiliMinimizer.html:1337,toler,toler,1337,root/html534/ROOT__Minuit2__FumiliMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__FumiliMinimizer.html,1,['toler'],['toler']
Availability,"2D ; (; Int_t ; n). Graph2D constructor. ; The arrays fX, fY and fZ should be filled via calls to SetPoint ; Definition at line 382 of file TGraph2D.cxx. ◆ TGraph2D() [3/9]. TGraph2D::TGraph2D ; (; Int_t ; n, . Int_t * ; x, . Int_t * ; y, . Int_t * ; z . ). Graph2D constructor with three vectors of ints as input. ; Definition at line 264 of file TGraph2D.cxx. ◆ TGraph2D() [4/9]. TGraph2D::TGraph2D ; (; Int_t ; n, . Float_t * ; x, . Float_t * ; y, . Float_t * ; z . ). Graph2D constructor with three vectors of floats as input. ; Definition at line 281 of file TGraph2D.cxx. ◆ TGraph2D() [5/9]. TGraph2D::TGraph2D ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Double_t * ; z . ). Graph2D constructor with three vectors of doubles as input. ; Definition at line 298 of file TGraph2D.cxx. ◆ TGraph2D() [6/9]. TGraph2D::TGraph2D ; (; TH2 * ; h2). Graph2D constructor with a TH2 (h2) as input. ; Only the h2's bins within the X and Y axis ranges are used. Empty bins, recognized when both content and errors are zero, are excluded. ; Definition at line 317 of file TGraph2D.cxx. ◆ TGraph2D() [7/9]. TGraph2D::TGraph2D ; (; const char * ; name, . const char * ; title, . Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Double_t * ; z . ). Graph2D constructor with name, title and three vectors of doubles as input. ; name : name of 2D graph (avoid blanks) title : 2D graph title if title is of the form ""stringt;stringx;stringy;stringz"" the 2D graph title is set to stringt, the x axis title to stringx, the y axis title to stringy,etc ; Definition at line 363 of file TGraph2D.cxx. ◆ TGraph2D() [8/9]. TGraph2D::TGraph2D ; (; const char * ; filename, . const char * ; format = ""%lg %lg %lg"", . Option_t * ; option = """" . ). Graph2D constructor reading input from filename filename is assumed to contain at least three columns of numbers. ; For files separated by a specific delimiter different from ' ' and '\t' (e.g. ';' in csv files) you can avoid using %*s to bypass this delimiter by expl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:36154,error,errors,36154,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,1,['error'],['errors']
Availability,"2D, and TProfile3D.; Definition at line 6111 of file TH1.cxx. ◆ Multiply() [2/3]. Bool_t TH1::Multiply ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1, . Option_t * ; option = """" . ). virtual . Replace contents of this histogram by multiplication of h1 by h2. ; this = (c1*h1)*(c2*h2); If errors of this are available (TH1::Sumw2), errors are recalculated. Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this if not already set.; IMPORTANT NOTE: If you intend to use the errors of this histogram later you should call Sumw2 before making this operation. This is particularly important if you fit the histogram after TH1::Multiply; The function return kFALSE if the Multiply operation failed ; Reimplemented in TProfile, TProfile2D, and TProfile3D.; Definition at line 6160 of file TH1.cxx. ◆ Multiply() [3/3]. Bool_t TH1::Multiply ; (; TF1 * ; f1, . Double_t ; c1 = 1 . ). virtual . Performs the operation: ; this = this*c1*f1; If errors are defined (see TH1::Sumw2), errors are also recalculated.; Only bins inside the function range are recomputed. IMPORTANT NOTE: If you intend to use the errors of this histogram later you should call Sumw2 before making this operation. This is particularly important if you fit the histogram after TH1::Multiply; The function return kFALSE if the Multiply operation failed ; Reimplemented in TH2Poly, TProfile, TProfile2D, and TProfile3D.; Definition at line 6049 of file TH1.cxx. ◆ operator=(). TH1 & TH1::operator= ; (; const TH1 & ; ). privatedelete . ◆ Paint(). void TH1::Paint ; (; Option_t * ; option = """"). overridevirtual . Control routine to paint any kind of histograms. ; This function is automatically called by TCanvas::Update. (see TH1::Draw for the list of options) ; Reimplemented from TObject.; Definition at line 6206 of file TH1.cxx. ◆ Print(). void TH1::Print ; (; Option_t * ; option = """"); const. overridevirtual . Print some global quantities for this histogram. ; Parameters. [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:192256,error,errors,192256,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,2,['error'],['errors']
Availability,"2D::fNpyNumber of bins along Y in fHistogram; TVirtualHistPainter*TGraph2D::fPainter!pointer to histogram painter; Int_tTGraph2D::fSize!Real size of fX, fY and fZ; TStringTNamed::fTitleobject title; Double_t*TGraph2D::fX[fNpoints]; Double_t*TGraph2D::fY[fNpoints] Data set to be plotted; Double_t*TGraph2D::fZ[fNpoints]; Double_tTGraph2D::fZoutfHistogram bin height for points lying outside the interpolated area. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph2DErrors(); TGraph2DErrors default constructor. TGraph2DErrors(Int_t n); TGraph2DErrors normal constructor; the arrays are preset to zero. TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); TGraph2DErrors constructor with doubles vectors as input. ~TGraph2DErrors(); TGraph2DErrors destructor. Double_t GetErrorX(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorZ(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetXmaxE() const; Returns the X maximum with errors. Double_t GetXminE() const; Returns the X minimum with errors. Double_t GetYmaxE() const; Returns the Y maximum with errors. Double_t GetYminE() const; Returns the Y minimum with errors. Double_t GetZmaxE() const; Returns the Z maximum with errors. Double_t GetZminE() const; Returns the Z minimum with errors. void Set(Int_t n); Set number of points in the 2D graph.; Existing coordinates are preserved.; New coordinates above fNpoints are preset to 0. void SetPoint(Int_t i, Double_t x, Double_t y, Double_t z); Set x, y and z values for point number i. void SetPointError(Int_t i, Double_t ex, Double_t ey, Double_t ez); Set ex, ey and ez values for point numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraph2DErrors.html:12856,error,error,12856,root/html530/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html530/TGraph2DErrors.html,2,['error'],['error']
Availability,"2Double_t TGraphAsymmErrors::GetErrorXlow(Int_t i) const; 1163{; 1164 if (i<0 || i>fNpoints) return -1;; 1165 if (fEXlow) return fEXlow[i];; 1166 return -1;; 1167}; 1168 ; 1169 ; 1170////////////////////////////////////////////////////////////////////////////////; 1171/// Get high error on Y.; 1172 ; 1173Double_t TGraphAsymmErrors::GetErrorYhigh(Int_t i) const; 1174{; 1175 if (i<0 || i>fNpoints) return -1;; 1176 if (fEYhigh) return fEYhigh[i];; 1177 return -1;; 1178}; 1179 ; 1180 ; 1181////////////////////////////////////////////////////////////////////////////////; 1182/// Get low error on Y.; 1183 ; 1184Double_t TGraphAsymmErrors::GetErrorYlow(Int_t i) const; 1185{; 1186 if (i<0 || i>fNpoints) return -1;; 1187 if (fEYlow) return fEYlow[i];; 1188 return -1;; 1189}; 1190 ; 1191 ; 1192////////////////////////////////////////////////////////////////////////////////; 1193/// Adds all graphs with asymmetric errors from the collection to this graph.; 1194/// Returns the total number of points in the result or -1 in case of an error.; 1195 ; 1196Int_t TGraphAsymmErrors::Merge(TCollection* li); 1197{; 1198 TIter next(li);; 1199 while (TObject* o = next()) {; 1200 TGraph *g = dynamic_cast<TGraph*>(o);; 1201 if (!g) {; 1202 Error(""Merge"",; 1203 ""Cannot merge - an object which doesn't inherit from TGraph found in the list"");; 1204 return -1;; 1205 }; 1206 int n0 = GetN();; 1207 int n1 = n0+g->GetN();; 1208 Set(n1);; 1209 Double_t * x = g->GetX();; 1210 Double_t * y = g->GetY();; 1211 Double_t * exlow = g->GetEXlow();; 1212 Double_t * exhigh = g->GetEXhigh();; 1213 Double_t * eylow = g->GetEYlow();; 1214 Double_t * eyhigh = g->GetEYhigh();; 1215 for (Int_t i = 0 ; i < g->GetN(); i++) {; 1216 SetPoint(n0+i, x[i], y[i]);; 1217 if (exlow) fEXlow[n0+i] = exlow[i];; 1218 if (exhigh) fEXhigh[n0+i] = exhigh[i];; 1219 if (eylow) fEYlow[n0+i] = eylow[i];; 1220 if (eyhigh) fEYhigh[n0+i] = eyhigh[i];; 1221 }; 1222 }; 1223 return GetN();; 1224}; 1225 ; 1226/////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:41315,error,error,41315,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['error'],['error']
Availability,"2PolyBin(TObject* poly, Int_t bin_number); virtual~TH2PolyBin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidClearContent(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFill(Double_t w); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetArea(); Int_tGetBinNumber() const; Bool_tGetChanged() const; Double_tGetContent() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TObject*GetPolygon() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetXMax(); Double_tGetXMin(); Double_tGetYMax(); Double_tGetYMin()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2PolyBin.html:1390,error,error,1390,root/html528/TH2PolyBin.html,https://root.cern,https://root.cern/root/html528/TH2PolyBin.html,4,['error'],['error']
Availability,"2VirtualXProxy, TGX11, and TGCocoa.; Definition at line 2300 of file TVirtualX.cxx. ◆ QueryColor(). void TVirtualX::QueryColor ; (; Colormap_t ; cmap, . ColorStruct_t & ; color . ). virtual . Returns the current RGB value for the pixel in the ""color"" structure. ; The color components are set to default.; Parameters. [in]cmapthe colormap ; [in]colorspecifies and returns the RGB values for the pixel specified in the structure . Reimplemented in TGCocoa, TGWin32, TGWin32VirtualXProxy, and TGX11.; Definition at line 128 of file TVirtualX.cxx. ◆ QueryPointer() [1/2]. void TVirtualX::QueryPointer ; (; Int_t & ; ix, . Int_t & ; iy . ). virtual . Returns the pointer position. ; Reimplemented in TGWin32, TGWin32VirtualXProxy, TGX11, and TGCocoa.; Definition at line 598 of file TVirtualX.cxx. ◆ QueryPointer() [2/2]. void TVirtualX::QueryPointer ; (; Window_t ; id, . Window_t & ; rootw, . Window_t & ; childw, . Int_t & ; root_x, . Int_t & ; root_y, . Int_t & ; win_x, . Int_t & ; win_y, . UInt_t & ; mask . ). virtual . Returns the root window the pointer is logically on and the pointer coordinates relative to the root window's origin. ; Parameters. [in]idspecifies the window ; [in]rootwthe root window that the pointer is in ; [in]childwthe child window that the pointer is located in, if any ; [in]root_x,root_ythe pointer coordinates relative to the root window's origin ; [in]win_x,win_ythe pointer coordinates relative to the specified window ""id"" ; [in]maskthe current state of the modifier keys and pointer buttons . Reimplemented in TGWin32, TGWin32VirtualXProxy, TGX11, and TGCocoa.; Definition at line 2087 of file TVirtualX.cxx. ◆ RaiseWindow(). void TVirtualX::RaiseWindow ; (; Window_t ; id). virtual . Raises the specified window to the top of the stack so that no sibling window obscures it. ; Reimplemented in TGWin32, TGWin32VirtualXProxy, TGX11, and TGCocoa.; Definition at line 1052 of file TVirtualX.cxx. ◆ ReadGIF(). Pixmap_t TVirtualX::ReadGIF ; (; Int_t ; x0, . Int_t ; y",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:110253,mask,mask,110253,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,1,['mask'],['mask']
Availability,"2] - Range not considered when computing integral of RooParamHistFunc; [#7547] - [DF] Crash in lazy jitted Snapshot; [#7010] - fifo in $CWD causes TCanvas to hang on macOS; [#7676] - hadd reverses order of object cycles; [#6343] - Problem with using namespace std in generated dictionary files; [#7657] - New dictionary-related crash in 6.24.00-patches; [#7718] - PyROOT in root 6.24 branch hangs while loading CMSSW library; [#7090] - Apple M1: bug in jitting argument of type short; [#6802] - Allow to pass Bearer token authentication header to Davix client; [#7345] - Issue building built-in libafterimage; [#6812] - root REPL problem with unsigned num assigned to a not declared item; [#7292] - compilation fails on xrootd: _STAT_VER was not declared; [#7481] - String parse error in RooSimPdfBuilder.cxx; [#7433] - Segmentation fault after quitting Cling in CUDA mode; [#7239] - [RF] Use integral of PDF curves for pull plots and residuals; [#7390] - Must not forward declare template specialization with enumerator as template arg; [#7454] - [RF][Docs] Breaking changes of batch computation interface not documented in release notes; [#7558] - AfterImage compilation broken with binutils 2.36; [#7507] - [tree] Possible error in TLeaf::GetLeafCounter; [#7361] - RooFit backend library: force to specific architecture; [#7362] - Incremental build problems; [#7319] - [Hist] Wrong computation in TH3::GetCovariance for diagonal elements; [#7206] - Unable to build with builtin_cling=OFF for LLVM 9; [#7157] - RooFFTConvPdf doesn’t work with RooProdPdf; [#7076] - RNTuple, parallel unzip tear down race condition; [#7021] - cling depends on exact macOS SDK headers; [#6953] - Missing documentation for ROOT.RDF.MakeNumpyDataFrame; [#6421] - Proposal to unify logging in Minuit2; [#7302] - TGraph copy constructor error; [#7212] - TMathText does not display with high value coordinates; [#6997] - Fill attribute is not fully reflected in THStack; [#6360] - [Docs] Missing figures in RDF tutorials 10",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/release-notes.html:45551,fault,fault,45551,doc/v624/release-notes.html,https://root.cern,https://root.cern/doc/v624/release-notes.html,1,['fault'],['fault']
Availability,"2]. Double_t TMVA::RuleFitParams::Risk ; (; UInt_t ; ind1, . UInt_t ; ind2, . Double_t ; neff . ); const. risk assessment ; Definition at line 314 of file RuleFitParams.cxx. ◆ Risk() [2/2]. Double_t TMVA::RuleFitParams::Risk ; (; UInt_t ; ind1, . UInt_t ; ind2, . Double_t ; neff, . UInt_t ; itau . ); const. risk assessment for tau model <itau> ; Definition at line 334 of file RuleFitParams.cxx. ◆ RiskPath(). Double_t TMVA::RuleFitParams::RiskPath ; (; ); const. inline . Definition at line 108 of file RuleFitParams.h. ◆ RiskPerf() [1/2]. Double_t TMVA::RuleFitParams::RiskPerf ; (; ); const. inline . Definition at line 109 of file RuleFitParams.h. ◆ RiskPerf() [2/2]. Double_t TMVA::RuleFitParams::RiskPerf ; (; UInt_t ; itau); const. inline . Definition at line 110 of file RuleFitParams.h. ◆ RiskPerfTst(). UInt_t TMVA::RuleFitParams::RiskPerfTst ; (; ). Estimates the error rate with the current set of parameters. ; using the <Perf> subsample. Return the tau index giving the lowest error ; Definition at line 1201 of file RuleFitParams.cxx. ◆ SetGDErrScale(). void TMVA::RuleFitParams::SetGDErrScale ; (; Double_t ; s). inline . Definition at line 85 of file RuleFitParams.h. ◆ SetGDNPathSteps(). void TMVA::RuleFitParams::SetGDNPathSteps ; (; Int_t ; np). inline . Definition at line 65 of file RuleFitParams.h. ◆ SetGDPathStep(). void TMVA::RuleFitParams::SetGDPathStep ; (; Double_t ; s). inline . Definition at line 68 of file RuleFitParams.h. ◆ SetGDTau(). void TMVA::RuleFitParams::SetGDTau ; (; Double_t ; t). inline . Definition at line 82 of file RuleFitParams.h. ◆ SetGDTauPrec(). void TMVA::RuleFitParams::SetGDTauPrec ; (; Double_t ; p). inline . Definition at line 86 of file RuleFitParams.h. ◆ SetGDTauRange(). void TMVA::RuleFitParams::SetGDTauRange ; (; Double_t ; t0, . Double_t ; t1 . ). inline . Definition at line 71 of file RuleFitParams.h. ◆ SetGDTauScan(). void TMVA::RuleFitParams::SetGDTauScan ; (; UInt_t ; n). inline . Definition at line 79 of file RuleFitParams",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html:17454,error,error,17454,doc/master/classTMVA_1_1RuleFitParams.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html,1,['error'],['error']
Availability,2_gamma_bin_21=7.28945 p_ph_sig2_gamma_bin_22=1 p_ph_sig2_gamma_bin_23=1 p_ph_sig2_gamma_bin_24=1 p_ph_sig2_gamma_bin_3=1 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=1 Asig=1 p_ph_sig2_gamma_bin_0=1 p_ph_sig2_gamma_bin_1=1 p_ph_sig2_gamma_bin_10=1 p_ph_sig2_gamma_bin_11=1 p_ph_sig2_gamma_bin_12=1 p_ph_sig2_gamma_bin_13=1 p_ph_sig2_gamma_bin_14=1 p_ph_sig2_gamma_bin_15=1 p_ph_sig2_gamma_bin_16=1 p_ph_sig2_gamma_bin_17=1 p_ph_sig2_gamma_bin_18=1 p_ph_sig2_gamma_bin_19=1 p_ph_sig2_gamma_bin_2=1 p_ph_sig2_gamma_bin_20=1 p_ph_sig2_gamma_bin_21=1 p_ph_sig2_gamma_bin_22=7.28945 p_ph_sig2_gamma_bin_23=1 p_ph_sig2_gamma_bin_24=1 p_ph_sig2_gamma_bin_3=1 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=1 Asig=1 p_ph_sig2_gamma_bin_0=1 p_ph_sig2_gamma_bin_1=1 p_ph_sig2_gamma_bin_10=1 p_ph_sig2_gamma_bin_11=1 p_ph_sig2_gamma_bin_12=1 p_ph_sig2_gamma_bin_13=1 p_ph_sig2_gamma_bin_14=1 p_ph_sig2_gamma_bin_15=1 p_ph_sig2_gamma_bin_16=1 p_ph_sig2_gamma_bin_17=1 p_ph_sig2_gamma_bin_18=1 p_ph_sig2_gamma_bin_19=1 p_ph_sig2_gamma_bin_2=1 p_ph_sig2_gamma_bin_20=1 p_ph_sig2_gamma_bin_21=1 p_ph_sig2_gamma_bin_22=1 p_ph_sig2_gamma_bin_23=7.28945 p_ph_sig2_gamma_bin_24=1 p_ph_sig2_gamma_bin_3=1 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) t,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html:29057,error,error,29057,doc/master/rf709__BarlowBeeston_8C.html,https://root.cern,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html,2,['error'],['error']
Availability,2_gamma_bin_22=1 p_ph_sig2_gamma_bin_23=7.28945 p_ph_sig2_gamma_bin_24=1 p_ph_sig2_gamma_bin_3=1 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=1 Asig=1 p_ph_sig2_gamma_bin_0=1 p_ph_sig2_gamma_bin_1=1 p_ph_sig2_gamma_bin_10=1 p_ph_sig2_gamma_bin_11=1 p_ph_sig2_gamma_bin_12=1 p_ph_sig2_gamma_bin_13=1 p_ph_sig2_gamma_bin_14=1 p_ph_sig2_gamma_bin_15=1 p_ph_sig2_gamma_bin_16=1 p_ph_sig2_gamma_bin_17=1 p_ph_sig2_gamma_bin_18=1 p_ph_sig2_gamma_bin_19=1 p_ph_sig2_gamma_bin_2=1 p_ph_sig2_gamma_bin_20=1 p_ph_sig2_gamma_bin_21=1 p_ph_sig2_gamma_bin_22=1 p_ph_sig2_gamma_bin_23=1 p_ph_sig2_gamma_bin_24=7.28945 p_ph_sig2_gamma_bin_3=1 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=1 Asig=1 p_ph_sig2_gamma_bin_0=1 p_ph_sig2_gamma_bin_1=1 p_ph_sig2_gamma_bin_10=1 p_ph_sig2_gamma_bin_11=1 p_ph_sig2_gamma_bin_12=1 p_ph_sig2_gamma_bin_13=1 p_ph_sig2_gamma_bin_14=1 p_ph_sig2_gamma_bin_15=1 p_ph_sig2_gamma_bin_16=1 p_ph_sig2_gamma_bin_17=1 p_ph_sig2_gamma_bin_18=1 p_ph_sig2_gamma_bin_19=1 p_ph_sig2_gamma_bin_2=1 p_ph_sig2_gamma_bin_20=1 p_ph_sig2_gamma_bin_21=1 p_ph_sig2_gamma_bin_22=1 p_ph_sig2_gamma_bin_23=1 p_ph_sig2_gamma_bin_24=1 p_ph_sig2_gamma_bin_3=7.28945 p_ph_sig2_gamma_bin_4=1 p_ph_sig2_gamma_bin_5=1 p_ph_sig2_gamma_bin_6=1 p_ph_sig2_gamma_bin_7=1 p_ph_sig2_gamma_bin_8=1 p_ph_sig2_gamma_bin_9=1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back ou,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html:30691,error,error,30691,doc/master/rf709__BarlowBeeston_8C.html,https://root.cern,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html,2,['error'],['error']
Availability,"2f"", h1->GetMean(), h1->GetRMS()), ""l"");; l3->Draw();; ; c1->cd(4);; hChisquared->Draw(""HIST"");; }; ; int main() {; TestBinomial();; }; BinData.h; HFitInterface.h; IntegratorOptions.h; mainint main()Definition Prototype.cxx:12; h#define h(i)Definition RSha256.hxx:106; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TBinomialEfficiencyFitter.h; TCanvas.h; TF1.h; TFitResult.h; plotwinID h TVirtualViewer3D TVirtualGLPainter char TVirtualGLPainter plotDefinition TGWin32VirtualGLProxy.cxx:53; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; TGraphErrors.h; TH1.h; xminfloat xminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; TLegend.h; TObjArray.h; TPaveStats.h; TRandom3.h; Formchar * Form(const char *fmt,...)Formats a string in a circular formatting buffer.Definition TString.cxx:2489; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; TVirtualFitter.h; ROOT::Fit::BinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y ...Definition BinData.h:52; ROOT::Fit::FitResult::GetConfidenceIntervalsvoid GetConfidenceIntervals(unsigned int n, unsigned int stride1, unsigned int stride2, const double *x, double *ci, double cl=0.95, bool norm=false) constget confidence intervals for an array of n points x.Definition FitResult.cxx:506; ROOT::Math::IntegratorOneDimOptions::SetDefaultIntegratorstatic void SetDefaultIntegrator(const char *name)Definition IntegratorOptions.cxx:222; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttMarker::SetMarkerStylevirtual void SetMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TestBinomial_8C.html:56434,error,error,56434,doc/master/TestBinomial_8C.html,https://root.cern,https://root.cern/doc/master/TestBinomial_8C.html,1,['error'],['error']
Availability,"2{; 833 return cl->InheritsFrom(base);; 834}; SafeDelete#define SafeDelete(p)Definition RConfig.hxx:525; b#define b(i)Definition RSha256.hxx:100; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; kMaxIntconstexpr Int_t kMaxIntDefinition RtypesCore.h:105; Version_tshort Version_tDefinition RtypesCore.h:65; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kNPOSconstexpr Ssiz_t kNPOSDefinition RtypesCore.h:117; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassImp#define ClassImp(name)Definition Rtypes.h:382; TBrowser.h; TBuffer.h; TClass.h; gCollectionMutexTVirtualMutex * gCollectionMutexDefinition TCollection.cxx:52; TCollection.h; gCollectionMutexR__EXTERN TVirtualMutex * gCollectionMutexDefinition TCollection.h:45; R__FOR_EACH#define R__FOR_EACH(type, proc)Definition TCollection.h:373; TError.h; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; namechar name[80]Definition TGX11.cxx:110; TObjArray.h; TObjectTable.h; TPRegexp.h; TROOT.h; TRegexp.h; TSpinLockGuard.h; TSystem.h; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TVirtualMutex.h; R__LOCKGUARD2#define R__LOCKGUARD2(mutex)Definition TVirtualMutex.h:96; Varargs.h; va_#define va_(arg)Definition Varargs.h:35; ROOT::Internal::TSpinLockGuardA spin mutex-as-code-guard class.Definition TSpinLockGuard.h:35; TBrowserUsing a TBrowser one can browse all ROOT objects.Definition TBrowser.h:37; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TClassTClass instances represent cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCollection_8cxx_source.html:28649,error,error,28649,doc/master/TCollection_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCollection_8cxx_source.html,1,['error'],['error']
Availability,"2}; 203 ; 204////////////////////////////////////////////////////////////////////////////////; 205/// Use this function in case an error occurred.; 206 ; 207void Break(const char *location, const char *fmt, ...); 208{; 209 std::va_list ap;; 210 va_start(ap, fmt);; 211 ErrorHandler(kBreak, location, fmt, ap);; 212 va_end(ap);; 213}; 214 ; 215////////////////////////////////////////////////////////////////////////////////; 216/// Use this function for informational messages.; 217 ; 218void Info(const char *location, const char *fmt, ...); 219{; 220 std::va_list ap;; 221 va_start(ap, fmt);; 222 ErrorHandler(kInfo, location, fmt, ap);; 223 va_end(ap);; 224}; 225 ; 226////////////////////////////////////////////////////////////////////////////////; 227/// Use this function in warning situations.; 228 ; 229void Warning(const char *location, const char *fmt, ...); 230{; 231 std::va_list ap;; 232 va_start(ap, fmt);; 233 ErrorHandler(kWarning, location, fmt, ap);; 234 va_end(ap);; 235}; 236 ; 237////////////////////////////////////////////////////////////////////////////////; 238/// Use this function in case of a fatal error. It will abort the program.; 239 ; 240/// @warning Fatal() *will* not abort the program if `gErrorIgnoreLevel > kFatal`; 241/// - but for all reasonable settings it *will* abort.; 242// So let's be reasonable wrt Coverity:; 243// coverity[+kill]; 244void Fatal(const char *location, const char *fmt, ...); 245{; 246 std::va_list ap;; 247 va_start(ap, fmt);; 248 ErrorHandler(kFatal, location, fmt, ap);; 249 va_end(ap);; 250}; h#define h(i)Definition RSha256.hxx:106; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; gErrorAbortLevelInt_t gErrorAbortLevelDefinition TError.cxx:32; kAssertMsgconst char * kAssertMsgDefinition TError.cxx:35; Errorvoid Error(const char *location, const char *fmt,...)Use this function i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8cxx_source.html:8001,error,error,8001,doc/master/TError_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TError_8cxx_source.html,1,['error'],['error']
Availability,"2};; if (randomSeed >= 0) {; TRandom2 r(randomSeed);; variable[0] = r.Uniform(-20,20);; variable[1] = r.Uniform(-20,20);; }; ; minimum->SetFunction(f);; ; // Set the free variables to be minimized !; minimum->SetVariable(0,""x"",variable[0], step[0]);; minimum->SetVariable(1,""y"",variable[1], step[1]);; ; // do the minimization; minimum->Minimize();; ; const double *xs = minimum->X();; std::cout << ""Minimum: f("" << xs[0] << "","" << xs[1] << ""): ""; << minimum->MinValue() << std::endl;; ; // expected minimum is 0; if ( minimum->MinValue() < 1.E-4 ); std::cout << ""Minimizer "" << minName << "" - "" << algoName; << "" converged to the right minimum"" << std::endl;; else {; std::cout << ""Minimizer "" << minName << "" - "" << algoName; << "" failed to converge !!!"" << std::endl;; Error(""NumericalMinimization"",""fail to converge"");; }; ; return 0;; }; Functor.h; Minimizer.h; f#define f(i)Definition RSha256.hxx:104; TError.h; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRandom2.h; ROOT::Math::Factory::CreateMinimizerstatic ROOT::Math::Minimizer * CreateMinimizer(const std::string &minimizerType="""", const std::string &algoType="""")static method to create the corresponding Minimizer given the string Supported Minimizers types are: ...Definition Factory.cxx:63; ROOT::Math::FunctorDocumentation for class Functor class.Definition Functor.h:47; ROOT::Math::MinimizerAbstract Minimizer class, defining the interface for the various minimizer (like Minuit2,...Definition Minimizer.h:119; ROOT::Math::Minimizer::Xvirtual const double * X() const =0return pointer to X values at the minimum; ROOT::Math::Minimizer::SetMaxIterationsvoid SetMaxIterations(unsigned int maxite",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NumericalMinimization_8C.html:2954,error,error,2954,doc/master/NumericalMinimization_8C.html,https://root.cern,https://root.cern/doc/master/NumericalMinimization_8C.html,1,['error'],['error']
Availability,"2 . ). overridevirtual . Draws a line. ; Parameters. [in]x1,y1begin of line ; [in]x2,y2end of line . Reimplemented from TVirtualX. ◆ DrawPolyLine(). void TGWin32VirtualXProxy::DrawPolyLine ; (; Int_t ; n, . TPoint * ; xy . ). overridevirtual . Draws a line through all points in the list. ; Parameters. [in]nnumber of points ; [in]xylist of points . Reimplemented from TVirtualX. ◆ DrawPolyMarker(). void TGWin32VirtualXProxy::DrawPolyMarker ; (; Int_t ; n, . TPoint * ; xy . ). overridevirtual . Draws ""n"" markers with the current attributes at position [x,y]. ; Parameters. [in]nnumber of markers to draw ; [in]xyan array of x,y marker coordinates . Reimplemented from TVirtualX. ◆ DrawRectangle(). void TGWin32VirtualXProxy::DrawRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Draws rectangle outlines of [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, dash-list. (see also the GCValues_t structure) ; Reimplemented from TVirtualX. ◆ DrawSegments(). void TGWin32VirtualXProxy::DrawSegments ; (; Drawable_t ; id, . GContext_t ; gc, . Segment_t * ; seg, . Int_t ; nseg . ). overridevirtual . Draws multiple line segments. ; Each line is specified by a pair of points.; Parameters. [in]idDrawable identifier ; [in]gcgraphics context ; [in]*segspecifies an array of segments ; [in]nsegspecifies the number of segments in the array. GC components in use: function, plane-mask, line-width, line-style, cap-style, join-style, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask.; GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, tile-stipple-y-origin, dash-offset, and dash-list. (see also t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:71304,mask,mask,71304,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,2,['mask'],['mask']
Availability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TGraphMultiErrors ();  TGraphMultiErrors default constructor. ;  ;  TGraphMultiErrors (const Char_t *name, const Char_t *title);  TGraphMultiErrors default constructor with name and title. ;  ;  TGraphMultiErrors (const Char_t *name, const Char_t *title, Int_t np, const Double_t *x, const Double_t *y, const Double_t *exL=nullptr, const Double_t *exH=nullptr, const Double_t *eyL=nullptr, const Double_t *eyH=nullptr, Int_t m=kOnlyFirst);  TGraphMultiErrors normal constructor with name, title, np points and a single y-error. ;  ;  TGraphMultiErrors (const Char_t *name, const Char_t *title, Int_t np, const Float_t *x, const Float_t *y, const Float_t *exL=nullptr, const Float_t *exH=nullptr, const Float_t *eyL=nullptr, const Float_t *eyH=nullptr, Int_t m=kOnlyFirst);  TGraphMultiErrors normal constructor with name, title, np points and a single y-error. ;  ;  TGraphMultiErrors (const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Double_t *x, const Double_t *y, const Double_t *exL, const Double_t *exH, std::vector< std::vector< Double_t > > eyL, std::vector< std::vector< Double_t > > eyH, Int_t m=kOnlyFirst);  TGraphMultiErrors normal constructor with name, title, np points and ne y-errors. ;  ;  TGraphMultiErrors (const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Double_t *x, const Double_t *y, const Double_t *exL, const Double_t *exH, std::vector< TArrayD > eyL, std::vector< TArrayD > eyH, Int_t m=kOnlyFirst);  TGraphMultiErrors normal constructor with name, title, np points and ne y-errors. ;  ;  TGraphMultiErrors (const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Float_t *x, const Float_t *y, const Float_t *exL, const F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:4408,error,error,4408,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['error']
Availability,"3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TGFrame; enum  { kDeleteWindowCalled = (1ULL << ( 15 )); };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLWidget.html:29203,mask,mask,29203,doc/master/classTGLWidget.html,https://root.cern,https://root.cern/doc/master/classTGLWidget.html,1,['mask'],['mask']
Availability,"3 ; 2464////////////////////////////////////////////////////////////////////////////////; 2465/// Returns cpu load average and load info into the CpuInfo_t structure.; 2466/// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; 2467/// interval over which the CPU load will be measured, in ms (default 1000).; 2468 ; 2469int TSystem::GetCpuInfo(CpuInfo_t *, Int_t) const; 2470{; 2471 AbstractMethod(""GetCpuInfo"");; 2472 return -1;; 2473}; 2474 ; 2475////////////////////////////////////////////////////////////////////////////////; 2476/// Returns ram and swap memory usage info into the MemInfo_t structure.; 2477/// Returns -1 in case of error, 0 otherwise.; 2478 ; 2479int TSystem::GetMemInfo(MemInfo_t *) const; 2480{; 2481 AbstractMethod(""GetMemInfo"");; 2482 return -1;; 2483}; 2484 ; 2485////////////////////////////////////////////////////////////////////////////////; 2486/// Returns cpu and memory used by this process into the ProcInfo_t structure.; 2487/// Returns -1 in case of error, 0 otherwise.; 2488 ; 2489int TSystem::GetProcInfo(ProcInfo_t *) const; 2490{; 2491 AbstractMethod(""GetProcInfo"");; 2492 return -1;; 2493}; 2494 ; 2495//---- Script Compiler ---------------------------------------------------------; 2496 ; 2497void AssignAndDelete(TString& target, char *tobedeleted); 2498{; 2499 // Assign the char* value to the TString and then delete it.; 2500 ; 2501 target = tobedeleted;; 2502 delete [] tobedeleted;; 2503}; 2504 ; 2505#ifdef WIN32; 2506 ; 2507static TString R__Exec(const char *cmd); 2508{; 2509 // Execute a command and return the stdout in a string.; 2510 ; 2511 FILE * f = gSystem->OpenPipe(cmd,""r"");; 2512 if (!f) {; 2513 return """";; 2514 }; 2515 TString result;; 2516 ; 2517 char x;; 2518 while ((x = fgetc(f))!=EOF ) {; 2519 if (x=='\n' || x=='\r') break;; 2520 result += x;; 2521 }; 2522 ; 2523 fclose(f);; 2524 return result;; 2525}; 2526 ; 2527static void R__FixLink(TString &cmd); 2528{; 2529 // Replace the call to 'link' by a full path ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:80321,error,error,80321,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['error'],['error']
Availability,"3 ; 3094const TString& TROOT::GetMacroDir() {; 3095#ifdef ROOTMACRODIR; 3096 if (IgnorePrefix()) {; 3097#endif; 3098 static TString rootmacrodir;; 3099 if (rootmacrodir.IsNull()) {; 3100 rootmacrodir = ""macros"";; 3101 gSystem->PrependPathName(GetRootSys(), rootmacrodir);; 3102 }; 3103 return rootmacrodir;; 3104#ifdef ROOTMACRODIR; 3105 } else {; 3106 const static TString rootmacrodir = ROOTMACRODIR;; 3107 return rootmacrodir;; 3108 }; 3109#endif; 3110}; 3111 ; 3112////////////////////////////////////////////////////////////////////////////////; 3113/// Get the tutorials directory in the installation. Static utility function.; 3114 ; 3115const TString& TROOT::GetTutorialDir() {; 3116#ifdef ROOTTUTDIR; 3117 if (IgnorePrefix()) {; 3118#endif; 3119 static TString roottutdir;; 3120 if (roottutdir.IsNull()) {; 3121 roottutdir = ""tutorials"";; 3122 gSystem->PrependPathName(GetRootSys(), roottutdir);; 3123 }; 3124 return roottutdir;; 3125#ifdef ROOTTUTDIR; 3126 } else {; 3127 const static TString roottutdir = ROOTTUTDIR;; 3128 return roottutdir;; 3129 }; 3130#endif; 3131}; 3132 ; 3133////////////////////////////////////////////////////////////////////////////////; 3134/// Shut down ROOT.; 3135 ; 3136void TROOT::ShutDown(); 3137{; 3138 if (gROOT); 3139 gROOT->EndOfProcessCleanups();; 3140 else if (gInterpreter); 3141 gInterpreter->ShutDown();; 3142}; 3143 ; 3144////////////////////////////////////////////////////////////////////////////////; 3145/// Get the source directory in the installation. Static utility function.; 3146 ; 3147const TString& TROOT::GetSourceDir() {; 3148#ifdef ROOTSRCDIR; 3149 if (IgnorePrefix()) {; 3150#endif; 3151 static TString rootsrcdir;; 3152 if (rootsrcdir.IsNull()) {; 3153 rootsrcdir = ""src"";; 3154 gSystem->PrependPathName(GetRootSys(), rootsrcdir);; 3155 }; 3156 return rootsrcdir;; 3157#ifdef ROOTSRCDIR; 3158 } else {; 3159 const static TString rootsrcdir = ROOTSRCDIR;; 3160 return rootsrcdir;; 3161 }; 3162#endif; 3163}; 3164 ; 3165//////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8cxx_source.html:118400,down,down,118400,doc/v632/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8cxx_source.html,1,['down'],['down']
Availability,"3 const RDFInternal::RColumnRegister &colRegister); 3314 : RInterfaceBase(lm, colRegister), fProxiedPtr(proxied); 3315 {; 3316 }; 3317 ; 3318 const std::shared_ptr<Proxied> &GetProxiedPtr() const { return fProxiedPtr; }; 3319};; 3320 ; 3321} // namespace RDF; 3322 ; 3323} // namespace ROOT; 3324 ; 3325#endif // ROOT_RDF_INTERFACE; ActionHelpers.hxx; HistoModels.hxx; InterfaceUtils.hxx; RColumnRegister.hxx; RDFDescription.hxx; RDataSource.hxx; RDefaultValueFor.hxx; RDefinePerSample.hxx; RDefine.hxx; RFilterWithMissingValues.hxx; RFilter.hxx; RInterfaceBase.hxx; RLazyDSImpl.hxx; RLoopManager.hxx; RRange.hxx; RResultPtr.hxx; f#define f(i)Definition RSha256.hxx:104; h#define h(i)Definition RSha256.hxx:106; RSnapshotOptions.hxx; RVariation.hxx; RVariationsDescription.hxx; RVec.hxx; RtypesCore.h; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; X#define X(type, name); TDirectory.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; kErrorconstexpr Int_t kErrorDefinition TError.h:47; filenameOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char filenameDefinition TGWin32VirtualXProxy.cxx:232; valueOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void valueDefinition TGWin32VirtualXProxy.cxx:142; typeOp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:188752,error,error,188752,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['error'],['error']
Availability,"3 if (error) {; 12564 mg_cry_internal(; 12565 conn,; 12566 ""%s"",; 12567 ""Websocket pull failed; closing connection"");; 12568 if (data != mem) {; 12569 mg_free(data);; 12570 }; 12571 break;; 12572 }; 12573 ; 12574 conn->data_len = conn->request_len;; 12575 ; 12576 } else {; 12577 ; 12578 mop = buf[0]; /* current mask and opcode, overwritten by; 12579 * memmove() */; 12580 ; 12581 /* Length of the message being read at the front of the; 12582 * queue. Cast to 31 bit is OK, since we limited; 12583 * data_len before. */; 12584 len = (size_t)data_len + header_len;; 12585 ; 12586 /* Copy the data payload into the data pointer for the; 12587 * callback. Cast to 31 bit is OK, since we; 12588 * limited data_len */; 12589 memcpy(data, buf + header_len, (size_t)data_len);; 12590 ; 12591 /* Move the queue forward len bytes */; 12592 memmove(buf, buf + len, body_len - len);; 12593 ; 12594 /* Mark the queue as advanced */; 12595 conn->data_len -= (int)len;; 12596 }; 12597 ; 12598 /* Apply mask if necessary */; 12599 if (mask_len > 0) {; 12600 for (i = 0; i < (size_t)data_len; i++) {; 12601 data[i] ^= mask[i & 3];; 12602 }; 12603 }; 12604 ; 12605 exit_by_callback = 0;; 12606 if (enable_ping_pong && ((mop & 0xF) == MG_WEBSOCKET_OPCODE_PONG)) {; 12607 /* filter PONG messages */; 12608 DEBUG_TRACE(""PONG from %s:%u"",; 12609 conn->request_info.remote_addr,; 12610 conn->request_info.remote_port);; 12611 /* No unanwered PINGs left */; 12612 ping_count = 0;; 12613 } else if (enable_ping_pong; 12614 && ((mop & 0xF) == MG_WEBSOCKET_OPCODE_PING)) {; 12615 /* reply PING messages */; 12616 DEBUG_TRACE(""Reply PING from %s:%u"",; 12617 conn->request_info.remote_addr,; 12618 conn->request_info.remote_port);; 12619 ret = mg_websocket_write(conn,; 12620 MG_WEBSOCKET_OPCODE_PONG,; 12621 (char *)data,; 12622 (size_t)data_len);; 12623 if (ret <= 0) {; 12624 /* Error: send failed */; 12625 DEBUG_TRACE(""Reply PONG failed (%i)"", ret);; 12626 break;; 12627 }; 12628 ; 12629 ; 12630 } else {; 12631 /* Exit t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:365846,mask,mask,365846,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['mask'],['mask']
Availability,"3 iter != end;; 4374 ++iter); 4375 {; 4376 iter->fConfiguration->Print();; 4377 if (strstr(opt,""func"")) {; 4378 printf(""StreamerInfoAction func: %s\n"",R__GetSymbolName((voidfunc)iter->fAction));; 4379 }; 4380 }; 4381}; 4382 ; 4383 ; b#define b(i)Definition RSha256.hxx:100; UShort_tunsigned short UShort_tDefinition RtypesCore.h:40; Int_tint Int_tDefinition RtypesCore.h:45; kMaxIntconstexpr Int_t kMaxIntDefinition RtypesCore.h:105; Version_tshort Version_tDefinition RtypesCore.h:65; Long_tlong Long_tDefinition RtypesCore.h:54; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Option_tconst char Option_tDefinition RtypesCore.h:66; TBufferFile.h; TBufferText.h; TClassEdit.h; TError.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; Fatalvoid Fatal(const char *location, const char *msgfmt,...)Use this function in case of a fatal error. It will abort the program.Definition TError.cxx:244; TFile.h; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:206212,error,error,206212,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['error'],['error']
Availability,"3 l.Add((TObject*)&arg5) ; l.Add((TObject*)&arg6) ;; 4284 l.Add((TObject*)&arg7) ; l.Add((TObject*)&arg8) ;; 4285 return createChi2(data,l) ;; 4286}; 4287 ; 4288 ; 4289////////////////////////////////////////////////////////////////////////////////; 4290/// See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&); 4291 ; 4292RooFit::OwningPtr<RooAbsReal> RooAbsReal::createChi2(RooDataSet &data, const RooLinkedList &cmdList); 4293{; 4294 return RooFit::makeOwningPtr(RooFit::FitHelpers::createChi2(*this, data, cmdList));; 4295}; 4296 ; 4297 ; 4298 ; 4299////////////////////////////////////////////////////////////////////////////////; 4300/// Return current evaluation error logging mode.; 4301 ; 4302RooAbsReal::ErrorLoggingMode RooAbsReal::evalErrorLoggingMode(); 4303{; 4304 return evalErrorData().mode ;; 4305}; 4306 ; 4307////////////////////////////////////////////////////////////////////////////////; 4308/// Set evaluation error logging mode. Options are; 4309///; 4310/// PrintErrors - Print each error through RooMsgService() as it occurs; 4311/// CollectErrors - Accumulate errors, but do not print them. A subsequent call; 4312/// to printEvalErrors() will print a summary; 4313/// CountErrors - Accumulate error count, but do not print them.; 4314///; 4315 ; 4316void RooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); 4317{; 4318 evalErrorData().mode = m;; 4319}; 4320 ; 4321 ; 4322////////////////////////////////////////////////////////////////////////////////; 4323 ; 4324void RooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); 4325{; 4326 std::string plist ;; 4327 for (auto const* arg : paramVars) {; 4328 if (!dependsOnValue(*arg)) {; 4329 coutW(InputArguments) << ""RooAbsReal::setParameterizeIntegral("" << GetName(); 4330 << "") function does not depend on listed parameter "" << arg->GetName() << "", ignoring"" << std::endl ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:190361,error,error,190361,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['error']
Availability,"3 return kFALSE;; 454}; 455 ; 456////////////////////////////////////////////////////////////////////////////////; 457/// Evaluate a python expression (e.g. ""ROOT.TBrowser()"").; 458///; 459/// Caution: do not hold on to the return value: either store it in a builtin; 460/// type (implicit casting will work), or in a pointer to a ROOT object (explicit; 461/// casting to a void* is required).; 462///; 463/// \deprecated Use TPython::Exec() with an std::any output parameter instead.; 464 ; 465const TPyReturn TPython::Eval(const char *expr); 466{; 467 // setup; 468 if (!Initialize()); 469 return TPyReturn();; 470 ; 471 PyGILRAII gilRaii;; 472 ; 473 // evaluate the expression; 474 PyObject *result = PyRun_String(const_cast<char *>(expr), Py_eval_input, gMainDict, gMainDict);; 475 ; 476 // report errors as appropriate; return void; 477 if (!result) {; 478 PyErr_Print();; 479 return TPyReturn();; 480 }; 481 ; 482 // results that require no conversion; 483 if (result == Py_None || CPyCppyy::Instance_Check(result) || PyBytes_Check(result) || PyFloat_Check(result) ||; 484 PyLong_Check(result)); 485 return TPyReturn(result);; 486 ; 487 // explicit conversion for python type required; 488 PyObject *pyclass = PyObject_GetAttrString(result, const_cast<char *>(""__class__""));; 489 if (pyclass != 0) {; 490 CachedPyString moduleStr{""__module__""};; 491 CachedPyString nameStr{""__name__""};; 492 ; 493 // retrieve class name and the module in which it resides; 494 PyObject *name = PyObject_GetAttr(pyclass, nameStr.obj());; 495 PyObject *module = PyObject_GetAttr(pyclass, moduleStr.obj());; 496 ; 497 // concat name; 498 std::string qname = std::string(PyUnicode_AsUTF8(module)) + '.' + PyUnicode_AsUTF8(name);; 499 Py_DECREF(module);; 500 Py_DECREF(name);; 501 Py_DECREF(pyclass);; 502 ; 503 // locate ROOT style class with this name; 504 TClass *klass = TClass::GetClass(qname.c_str());; 505 ; 506 // construct general ROOT python object that pretends to be of class 'klass'; 507 if (klass != 0);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:15997,error,errors,15997,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['error'],['errors']
Availability,"3"". Here ALIC is the top most; or master volume which has only 1 instance of. Of all of the daughter; volumes of ALICE, DDIP volume copy #1 is indicated. Similarly for; the daughter volume of DDIP is S05I copy #2 and so on.; Inputs:; TString& volumePath The volume path to the specific volume; for which you want the matrix. Volume name; hierarchy is separated by ""/"" while the; copy number is appended using a ""_"".; Outputs:; TGeoHMatrix &mat A matrix with its values set to those; appropriate to the Local to Master transformation; Return:; A logical value if kFALSE then an error occurred and no change to; mat was made. Bool_t GetShape(const TString& volumePath, TString& shapeType, TArrayD& par); Returns the shape and its parameters for the volume specified; by volumeName.; Inputs:; TString& volumeName The volume name; Outputs:; TString &shapeType Shape type; TArrayD &par A TArrayD of parameters with all of the; parameters of the specified shape.; Return:; A logical indicating whether there was an error in getting this; information. Bool_t GetMaterial(const TString& volumeName, TString& name, Int_t& imat, Double_t& a, Double_t& z, Double_t& density, Double_t& radl, Double_t& inter, TArrayD& par); Returns the Material and its parameters for the volume specified; by volumeName.; Note, Geant3 stores and uses mixtures as an element with an effective; Z and A. Consequently, if the parameter Z is not integer, then; this material represents some sort of mixture.; Inputs:; TString& volumeName The volume name; Outputs:; TSrting &name Material name; Int_t &imat Material index number; Double_t &a Average Atomic mass of material; Double_t &z Average Atomic number of material; Double_t &dens Density of material [g/cm^3]; Double_t &radl Average radiation length of material [cm]; Double_t &inter Average interaction length of material [cm]; TArrayD &par A TArrayD of user defined parameters.; Return:; kTRUE if no errors. Bool_t GetMedium(const TString& volumeName, TString& name, Int_t& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoMCGeometry.html:19780,error,error,19780,root/html528/TGeoMCGeometry.html,https://root.cern,https://root.cern/root/html528/TGeoMCGeometry.html,6,['error'],['error']
Availability,"3.2 Getting the right parameter errors with limits; [answer:right-errors]; In the best case, where the minimum is far from any limits, M will correctly transform the error matrix, and the parameter errors it reports should be accurate and very close to those you would have got without limits. In other cases (which should be more common, since otherwise you wouldn’t need limits), the very meaning of parameter errors becomes problematic. Mathematically, since the limit is an absolute constraint on the parameter, a parameter at its limit has no error, at least in one direction. The error matrix, which can assign only symmetric errors, then becomes essentially meaningless. On the other hand, the \(\mbox{MINOS}\) analysis is still meaningful, at least in principle, as long as \(\mbox{MIGRAD}\) (which is called internally by \(\mbox{MINOS}\)) does not get blocked at a limit. Unfortunately, the user has no control over this aspect of the \(\mbox{MINOS}\) calculation, although it is possible to get enough printout from the \(\mbox{MINOS}\) result to be able to determine whether the results are reliable or not.; 6.4 Fixing and releasing parameters; When M needs to be guided to the “right” minimum, often the best way to do this is with the methods e.g. MnMigrad::fix(…) and MnMigrad::release(…). That is, suppose you have a problem with ten free parameters, and when you minimize with respect to all at once, M goes to an unphysical solution characterized by an unphysical or unwanted value of parameter number four. One way to avoid this is to fix parameter four at a “good” value (not necessarily the best, since you presumably don’t know that yet), and minimize with respect to the others. Then release parameter four and minimize again. If the problem admits a “good” physical solution, you will normally find it this way. If it doesn’t work, you may see what is wrong by the following sequence (where \(\mbox{xxx}\) is the expected physical value for parameter four):; MnMigrad migrad(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:71550,reliab,reliable,71550,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,2,['reliab'],['reliable']
Availability,3.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88084,error,error,88084,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,3.916) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.877959 a1=-0.428367 mean=4.99746 nbkg=167.444 nsig=157.288 sig1frac=0.424997; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 860; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 850; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 840; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 830; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-970.563) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.867793 a1=-0.296045 mean=5.10353 nbkg=164.822 nsig=173.566 sig1frac=0.899431; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 820; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 810; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 800; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 790; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 780; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 770; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 760; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-915.472) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.807508 a1=-0.34963 mean=5.09438 nbkg=142.436 nsig=172.312 sig1frac=0.886183; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 750; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-885.867) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.7962 a1=-0.414289 mean=5.07605 nbkg=135.514 nsig=167.164 sig1frac=0.927781; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:13158,error,errors,13158,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability,"3.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; Formchar * Form(const char *fmt,...)Formats a string in a circular formatting buffer.Definition TString.cxx:2489; TSystem.h; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TUUID.h; TDirectoryDescribe directory structure in memory.Definition TDirectory.h:45; TDirectory::WriteTObjectvirtual Int_t WriteTObject(const TObject *obj, const char *name=nullptr, Option_t *="""", Int_t=0)Write an object with proper type checking.Definition TDirectory.cxx:1400; TDirectory::GetFilevirtual TFile * GetFile() constDefinition TDirectory.h:220; TDirectory::ReadTObjectvirtual Int_t ReadTObject(TObject *, const char *)Definition TDirectory.h:249; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from the standard Normal (Gaussian) Distribution with the given mean and sigm...Definition TRandom.cxx:275; TRandom::RndmArrayvirtual void RndmArray(Int_t n, Float_t *array)Return an array of n random numbers uniformly distributed in ]0,1].Definition TRandom.cxx:595; TRandom::SetSeedvirtual void SetSeed(ULong_t seed=0)Set the random generator seed.Definition TRandom.cxx:615; TRandom::WriteRandomvirtual void WriteRandom(const char *filename) constWrites random generator status to filename.Definition TRandom.cxx:700; TRandom::RndmDouble_t Rndm() overrideMachine independent random number generator.Definition TRandom.cxx:559; TRandom::fSeedUInt_t fSeedDefinition TRandom.h:30; TRandom::Rannorvirtual void Rannor(Float_t &a, Float_t &b)Return 2 numbers distributed follo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:31702,error,error,31702,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['error'],['error']
Availability,"3/// \f[; 1214/// D(h) = \frac{f(x+2h) - 2f(x+h) + 2f(x-h) - f(x-2h)}{2h^{3}}; 1215/// \f]; 1216/// the final estimate; 1217/// \f[; 1218/// D = \frac{4D(h/2) - D(h)}{3}; 1219/// \f]; 1220/// ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition""; 1221///; 1222/// if the argument params is null, the current function parameters are used,; 1223/// otherwise the parameters in params are used.; 1224///; 1225/// the argument eps may be specified to control the step size (precision).; 1226/// the step size is taken as eps*(xmax-xmin).; 1227/// the default value (0.001) should be good enough for the vast majority; 1228/// of functions. Give a smaller value if your function has many changes; 1229/// of the second derivative in the function range.; 1230///; 1231/// Getting the error via TF1::DerivativeError:; 1232/// (total error = roundoff error + interpolation error); 1233/// the estimate of the roundoff error is taken as follows:; 1234/// \f[; 1235/// err = k\sqrt{f(x)^{2} + x^{2}deriv^{2}}\sqrt{\sum ai^{2}},; 1236/// \f]; 1237/// where k is the double precision, ai are coefficients used in; 1238/// central difference formulas; 1239/// interpolation error is decreased by making the step size h smaller.; 1240///; 1241/// \author Anna Kreshuk; 1242 ; 1243Double_t TF1::Derivative3(Double_t x, Double_t *params, Double_t eps) const; 1244{; 1245 if (GetNdim() > 1) {; 1246 Warning(""Derivative3"", ""Function dimension is larger than one"");; 1247 }; 1248 ; 1249 ROOT::Math::RichardsonDerivator rd;; 1250 double xmin, xmax;; 1251 GetRange(xmin, xmax);; 1252 // this is not optimal (should be used the average x instead of the range); 1253 double h = eps * std::abs(xmax - xmin);; 1254 if (h <= 0) h = 0.001;; 1255 double der = 0;; 1256 if (params) {; 1257 ROOT::Math::WrappedTF1 wtf(*(const_cast<TF1 *>(this)));; 1258 wtf.SetParameters(params);; 1259 der = rd.Derivative3(wtf, x, h);; 1260 } else {; 1261 // no need to set parameters used a non-parametric wrapper to avoid all",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:44396,error,error,44396,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,6,['error'],['error']
Availability,"3/2015 - 21:49 Permalink . Re: Other Python bindings . Hi Bram, Axel,; let me add to that (and point out that none of the mentioned tools are intrusive, btw.). The biggest problem with boost.python (with pyste; standalone it is a non-starter) and SWIG is that you need to run a separate tool to create and compile bindings. On top, these bindings are compiled against a specific version of Python, making for a distribution headache (just see the non-pickup of Python3 because of this problem). Compare: dictionaries are already available for all the most important classes in experiments, the EDM, because they are generated for I/O needs. They also do not depend on Python, and thus not on any specific version (only PyROOT does). Besides the obvious ease of use, there is also the benefit of lower memory footprints by not replicating structures. (For that matter, PyROOT creates bindings lazily, the others do not.); Other problems we've had, are that boost.python is very, very slow and only in ""keeping alive"" mode since 2004 or so. Pyste is based on gccxml, so no C++11 there, and has seen no major updates since 2005. SWIG is much, much better in both regards, but not up to snuff: it plain and simply can not parse our header files. The way around that, is to write .i files, but as you can imagine, that duplication is not nice for maintenance. Worse, the developers of individual packages need to do this work, and not every C++ developer has Python, let alone SWIG, experience.; Then there's PyPy. All existing binding generator tools (including PyROOT) rely on CPython internals, or at least on the Python C-API. That does not jive with PyPy as it has for example a garbage collector instead of reference counting. Through some heroics, it does expose a Python C-API, but it's slow as it interferes (blocks, really) the just-in-time compiler. Therefore, within PyPy, there are two new approaches: cffi for C and cppyy for C++. Both are part of the standard PyPy releases. There is also a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html:7544,alive,alive,7544,d/blog/do-we-need-yet-another-custom-c-interpreter.html,https://root.cern,https://root.cern/d/blog/do-we-need-yet-another-custom-c-interpreter.html,1,['alive'],['alive']
Availability,"30 BufferEmpty();; 1331 delete [] fBuffer;; 1332 fBuffer = nullptr;; 1333 }; 1334 if (buffersize <= 0) {; 1335 fBufferSize = 0;; 1336 return;; 1337 }; 1338 if (buffersize < 100) buffersize = 100;; 1339 fBufferSize = 1 + 5*buffersize;; 1340 fBuffer = new Double_t[fBufferSize];; 1341 memset(fBuffer,0,sizeof(Double_t)*fBufferSize);; 1342}; 1343 ; 1344////////////////////////////////////////////////////////////////////////////////; 1345/// Set option to compute profile3D errors.; 1346///; 1347/// The computation of the bin errors is based on the parameter option:; 1348/// - ' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (T),; 1349/// i.e. the standard error of the bin contents.; 1350/// Note that if TProfile3D::Approximate() is called, an approximation is used when; 1351/// the spread in T is 0 and the number of bin entries is > 0; 1352/// - 's' The bin errors are the standard deviations of the T bin values; 1353/// Note that if TProfile3D::Approximate() is called, an approximation is used when; 1354/// the spread in T is 0 and the number of bin entries is > 0; 1355/// - 'i' Errors are as in default case (standard errors of the bin contents); 1356/// The only difference is for the case when the spread in T is zero.; 1357/// In this case for N > 0 the error is 1./SQRT(12.*N); 1358/// - 'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0.; 1359/// W is the sum in the bin of the weights of the profile.; 1360/// This option is for combining measurements t +/- dt,; 1361/// and the profile is filled with values t and weights w = 1/dt**2; 1362///; 1363/// See TProfile::BuildOptions for explanation of all options; 1364 ; 1365void TProfile3D::SetErrorOption(Option_t *option); 1366{; 1367 TProfileHelper::SetErrorOption(this, option);; 1368}; 1369 ; 1370////////////////////////////////////////////////////////////////////////////////; 1371/// Create/Delete structure to store sum of squares of weights per bin; 1372/// This is ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:51114,error,errors,51114,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,2,['error'],['errors']
Availability,"30,-55,55);; TRandom r;; for (Int_t i=0;i<10000;i++) {; h1->Fill(r.Gaus(-55,10));; h2->Fill(r.Gaus(55,10));; h3->Fill(r.Gaus(0,10));; }; ; TList *list = new TList;; list->Add(h1);; list->Add(h2);; list->Add(h3);; TH1F *h = (TH1F*)h1->Clone(""h"");; h->Reset();; h->Merge(list);; h->Draw();; }; TListA doubly linked list.Definition TList.h:38; TList::Addvoid Add(TObject *obj) overrideDefinition TList.h:83; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27. Definition at line 6022 of file TH1.cxx. ◆ Multiply() [1/3]. Bool_t TH1::Multiply ; (; const TH1 * ; h1). virtual . Multiply this histogram by h1. ; this = this*h1; If errors of this are available (TH1::Sumw2), errors are recalculated. Note that if h1 has Sumw2 set, Sumw2 is automatically called for this if not already set.; IMPORTANT NOTE: If you intend to use the errors of this histogram later you should call Sumw2 before making this operation. This is particularly important if you fit the histogram after TH1::Multiply; The function return kFALSE if the Multiply operation failed ; Reimplemented in TProfile, TProfile2D, and TProfile3D.; Definition at line 6111 of file TH1.cxx. ◆ Multiply() [2/3]. Bool_t TH1::Multiply ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1, . Option_t * ; option = """" . ). virtual . Replace contents of this histogram by multiplication of h1 by h2. ; this = (c1*h1)*(c2*h2); If errors of this are available (TH1::Sumw2), errors are recalculated. Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this if not already set.; IMPORTANT NOTE: If you intend to use the errors of this histogram later you should call Sumw2 before making this operation. This is particularly important if you fit the histogram after TH1::Multiply; The function return kFALSE if the Multiply operation failed ; Reimpleme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:191007,error,errors,191007,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['errors']
Availability,"30/// ~~~ {.cpp}; 631/// TVirtualFitter::Fitter(mygraph)->SetFCN(MyFittingFunction); 632/// ~~~; 633/// where MyFittingFunction is of type:; 634/// ~~~ {.cpp}; 635/// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; 636/// ~~~; 637///; 638/// ### Access to the fit result; 639///; 640/// The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; 641/// By default the TFitResultPtr contains only the status of the fit and it converts; 642/// automatically to an integer. If the option ""S"" is instead used, TFitResultPtr contains; 643/// the TFitResult and behaves as a smart pointer to it. For example one can do:; 644/// ~~~ {.cpp}; 645/// TFitResultPtr r = graph->Fit(""myFunc"",""S"");; 646/// TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; 647/// Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; 648/// Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; 649/// r->Print(""V""); // print full information of fit including covariance matrix; 650/// r->Write(); // store the result in a file; 651/// ~~~; 652///; 653/// The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; 654/// from the fitted function.; 655///; 656/// ### Associated functions; 657///; 658/// One or more object (typically a TF1*) can be added to the list; 659/// of functions (fFunctions) associated to each graph.; 660/// When TGraph::Fit is invoked, the fitted function is added to this list.; 661/// Given a graph gr, one can retrieve an associated function; 662/// with:; 663/// ~~~ {.cpp}; 664/// TF1 *myfunc = gr->GetFunction(""myfunc"");; 665/// ~~~; 666///; 667/// If the graph is made persistent, the list of; 668/// associated functions is also persistent. Given a pointer (see above); 669/// to an associated function myfunc, one can retrieve the function/fit; 670/// parameters with calls such as:; 671/// ~~~ {.cpp}; 672/// Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMultiGraph_8cxx_source.html:20934,error,error,20934,doc/master/TMultiGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMultiGraph_8cxx_source.html,2,['error'],['error']
Availability,"300 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 256 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.805395; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.725372 0.686272 0.190597 0.0152439 14599.1 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.695636 0.683324 0.189128 0.015082 14708.8 0; : 3 | 0.691864 0.689576 0.189646 0.0148842 14648.6 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.689168 0.677551 0.190642 0.015026 14577.3 0; : 5 | 0.686885 0.678678 0.189865 0.0148775 14629.7 1; : 6 | 0.68905 0.681357 0.189104 0.014885 14694.1 2; : 7 | 0.687138 0.683485 0.19023 0.0152893 14633.6 3; : 8 | 0.686429 0.685529 0.189996 0.0147979 14612 4; : 9 | 0.685179 0.683467 0.190317 0.0152552 14623.4 5; : 10 Minimum Test error found - save the configuration ; : 10 | 0.684262 0.673795 0.18992 0.0153518 14664.7 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.682907 0.671521 0.194162 0.0155002 14328.7 0; : 12 | 0.693473 0.677553 0.188937 0.0147664 14698.2 1; : 13 | 0.695581 0.671789 0.190501 0.0149406 14581.9 2; : 14 | 0.68024 0.680521 0.188432 0.0146998 14735.3 3; : 15 | 0.68435 0.688062 0.189615 0.0147881 14643.1 4; : 16 | 0.686476 0.675588 0.190015 0.0152195 14645.7 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:18497,error,error,18497,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['error'],['error']
Availability,"300 TVirtualCollectionProxy* proxy = GetCollectionProxy();; 4301 TVirtualCollectionProxy::TPushPop helper(proxy, fObject);; 4302 void* alternate = proxy->Allocate(fNdata, true);; 4303 if(fSTLtype != ROOT::kSTLvector && proxy->HasPointers() && fSplitLevel > TTree::kSplitCollectionOfPointers ) {; 4304 fPtrIterators->CreateIterators(alternate, proxy);; 4305 } else {; 4306 fIterators->CreateIterators(alternate, proxy);; 4307 }; 4308 ; 4309 Int_t nbranches = fBranches.GetEntriesFast();; 4310 switch (fSTLtype) {; 4311 case ROOT::kSTLset:; 4312 case ROOT::kSTLunorderedset:; 4313 case ROOT::kSTLunorderedmultiset:; 4314 case ROOT::kSTLmultiset:; 4315 case ROOT::kSTLmap:; 4316 case ROOT::kSTLmultimap:; 4317 case ROOT::kSTLunorderedmap:; 4318 case ROOT::kSTLunorderedmultimap:; 4319 for (Int_t i = 0; i < nbranches; ++i) {; 4320 TBranch *branch = (TBranch*) fBranches[i];; 4321 Int_t nb = branch->GetEntry(GetReadEntry(), 1);; 4322 if (nb < 0) {; 4323 // Give up on i/o failure.; 4324 // FIXME: We need an error message here.; 4325 break;; 4326 }; 4327 }; 4328 break;; 4329 default:; 4330 break;; 4331 }; 4332 //------------------------------------------------------------------------; 4333 // We have split this stuff, so we need to create the pointers; 4334 /////////////////////////////////////////////////////////////////////////////; 4335 ; 4336 if( proxy->HasPointers() && fSplitLevel > TTree::kSplitCollectionOfPointers ); 4337 {; 4338 TClass *elClass = proxy->GetValueClass();; 4339 ; 4340 //--------------------------------------------------------------------; 4341 // The allocation is done in this strange way because ReadLeaves; 4342 // is being called many times by TTreeFormula!!!; 4343 //////////////////////////////////////////////////////////////////////////; 4344 ; 4345 Int_t i = 0;; 4346 // coverity[returned_null] the fNdata is check enough to prevent the use of null value of At(0); 4347 if( !fNdata || *(void**)proxy->At( 0 ) != nullptr ); 4348 i = fNdata;; 4349 ; 4350 for( ; i ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:159970,error,error,159970,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['error'],['error']
Availability,"302 double s = std::sqrt(fChi2/fNdf);; 303 for (unsigned int i = 0; i < fErrors.size() ; ++i); 304 fErrors[i] *= s;; 305 for (unsigned int i = 0; i < fCovMatrix.size() ; ++i); 306 fCovMatrix[i] *= s2;; 307 ; 308 fNormalized = true;; 309}; 310 ; 311void FitResult::SetChi2AndNdf(double chi2, unsigned int npoints) {; 312 if (chi2 >= 0); 313 fChi2 = chi2;; 314 if (npoints > fNFree ); 315 fNdf = npoints - fNFree;; 316 else; 317 fNdf = 0;; 318}; 319 ; 320double FitResult::Prob() const {; 321 // fit probability; 322 return ROOT::Math::chisquared_cdf_c(fChi2, static_cast<double>(fNdf) );; 323}; 324 ; 325bool FitResult::HasMinosError(unsigned int i) const {; 326 // query if the parameter i has the Minos error; 327 std::map<unsigned int, std::pair<double,double> >::const_iterator itr = fMinosErrors.find(i);; 328 return (itr != fMinosErrors.end() );; 329}; 330 ; 331 ; 332double FitResult::LowerError(unsigned int i) const {; 333 // return lower Minos error for parameter i; 334 // return the parabolic error if Minos error has not been calculated for the parameter i; 335 std::map<unsigned int, std::pair<double,double> >::const_iterator itr = fMinosErrors.find(i);; 336 return ( itr != fMinosErrors.end() ) ? itr->second.first : Error(i) ;; 337}; 338 ; 339double FitResult::UpperError(unsigned int i) const {; 340 // return upper Minos error for parameter i; 341 // return the parabolic error if Minos error has not been calculated for the parameter i; 342 std::map<unsigned int, std::pair<double,double> >::const_iterator itr = fMinosErrors.find(i);; 343 return ( itr != fMinosErrors.end() ) ? itr->second.second : Error(i) ;; 344}; 345 ; 346void FitResult::SetMinosError(unsigned int i, double elow, double eup) {; 347 // set the Minos error for parameter i; 348 fMinosErrors[i] = std::make_pair(elow,eup);; 349}; 350 ; 351int FitResult::Index(const std::string & name) const {; 352 // find index for given parameter name; 353 if (! fFitFunc) return -1;; 354 unsigned int npar = fParams.size();; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8cxx_source.html:11066,error,error,11066,doc/master/FitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8cxx_source.html,3,['error'],['error']
Availability,"304 TH1::LabelsDeflate(axis) with axis = ""X"", ""Y"" or ""Z""; 305~~~; 306 This operation is automatic when using TTree::Draw.; 307 Once bin labels have been created, they become persistent if the histogram; 308 is written to a file or when generating the C++ code via SavePrimitive.; 309 ; 310\anchor auto-bin; 311### Histograms with automatic bins; 312 ; 313 When a histogram is created with an axis lower limit greater or equal; 314 to its upper limit, the SetBuffer is automatically called with an; 315 argument fBufferSize equal to fgBufferSize (default value=1000).; 316 fgBufferSize may be reset via the static function TH1::SetDefaultBufferSize.; 317 The axis limits will be automatically computed when the buffer will; 318 be full or when the function BufferEmpty is called.; 319 ; 320\anchor rebinning; 321### Rebinning; 322 ; 323 At any time, a histogram can be rebinned via TH1::Rebin. This function; 324 returns a new histogram with the rebinned contents.; 325 If bin errors were stored, they are recomputed during the rebinning.; 326 ; 327 ; 328\anchor filling-histograms; 329## Filling histograms; 330 ; 331 A histogram is typically filled with statements like:; 332~~~ {.cpp}; 333 h1->Fill(x);; 334 h1->Fill(x, w); //fill with weight; 335 h2->Fill(x, y); 336 h2->Fill(x, y, w); 337 h3->Fill(x, y, z); 338 h3->Fill(x, y, z, w); 339~~~; 340 or via one of the Fill functions accepting names described above.; 341 The Fill functions compute the bin number corresponding to the given; 342 x, y or z argument and increment this bin by the given weight.; 343 The Fill functions return the bin number for 1-D histograms or global; 344 bin number for 2-D and 3-D histograms.; 345 If TH1::Sumw2 has been called before filling, the sum of squares of; 346 weights is also stored.; 347 One can also increment directly a bin number via TH1::AddBinContent; 348 or replace the existing content via TH1::SetBinContent. Passing an; 349 out-of-range bin to TH1::AddBinContent leads to undefined behavior.; 35",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:14328,error,errors,14328,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"305 Info(""Chi2TestX"",""There is a bin in h1 with less than 1 event.\n"");; 2306 }; 2307 if (n) {; 2308 igood += 2;; 2309 Info(""Chi2TestX"",""There is a bin in h2 with less than 1 event.\n"");; 2310 }; 2311 ; 2312 Double_t prob = TMath::Prob(chi2,ndf);; 2313 return prob;; 2314 ; 2315 }; 2316 ; 2317 // unweighted - weighted comparison; 2318 // case of error = 0 and content not zero is treated without problems by excluding second chi2 sum; 2319 // and can be considered as a data-theory comparison; 2320 if ( comparisonUW ) {; 2321 for (Int_t i = i_start; i <= i_end; ++i) {; 2322 for (Int_t j = j_start; j <= j_end; ++j) {; 2323 for (Int_t k = k_start; k <= k_end; ++k) {; 2324 ; 2325 Int_t bin = GetBin(i, j, k);; 2326 ; 2327 Double_t cnt1 = RetrieveBinContent(bin);; 2328 Double_t cnt2 = h2->RetrieveBinContent(bin);; 2329 Double_t e2sq = h2->GetBinErrorSqUnchecked(bin);; 2330 ; 2331 // case both histogram have zero bin contents; 2332 if (cnt1 * cnt1 == 0 && cnt2 * cnt2 == 0) {; 2333 --ndf; //no data means one degree of freedom less; 2334 continue;; 2335 }; 2336 ; 2337 // case weighted histogram has zero bin content and error; 2338 if (cnt2 * cnt2 == 0 && e2sq == 0) {; 2339 if (sumw2 > 0) {; 2340 // use as approximated error as 1 scaled by a scaling ratio; 2341 // estimated from the total sum weight and sum weight squared; 2342 e2sq = sumw2 / sum2;; 2343 }; 2344 else {; 2345 // return error because infinite discrepancy here:; 2346 // bin1 != 0 and bin2 =0 in a histogram with all errors zero; 2347 Error(""Chi2TestX"",""Hist2 has in bin (%d,%d,%d) zero content and zero errors\n"", i, j, k);; 2348 chi2 = 0; return 0;; 2349 }; 2350 }; 2351 ; 2352 if (cnt1 < 1) m++;; 2353 if (e2sq > 0 && cnt2 * cnt2 / e2sq < 10) n++;; 2354 ; 2355 Double_t var1 = sum2 * cnt2 - sum1 * e2sq;; 2356 Double_t var2 = var1 * var1 + 4. * sum2 * sum2 * cnt1 * e2sq;; 2357 ; 2358 // if cnt1 is zero and cnt2 = 1 and sum1 = sum2 var1 = 0 && var2 == 0; 2359 // approximate by incrementing cnt1; 2360 // LM (this need to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:92870,error,error,92870,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,6,['error'],"['error', 'errors']"
Availability,"32 bits per element).Definition TArrayI.h:27; TArrayI::fArrayInt_t * fArrayDefinition TArrayI.h:30; TArrayI::Resetvoid Reset()Definition TArrayI.h:47; TArrayL64Array of long64s (64 bits per element).Definition TArrayL64.h:27; TArrayL64::fArrayLong64_t * fArrayDefinition TArrayL64.h:30; TArrayL64::Resetvoid Reset()Definition TArrayL64.h:47; TArraySArray of shorts (16 bits per element).Definition TArrayS.h:27; TArrayS::Resetvoid Reset()Definition TArrayS.h:47; TArrayS::fArrayShort_t * fArrayDefinition TArrayS.h:30; TF11-Dim function classDefinition TF1.h:233; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::IntegralAndErrorvirtual Double_t IntegralAndError(Int_t binx1, Int_t binx2, Double_t &err, Option_t *option="""") constReturn integral of bin contents in range [binx1,binx2] and its error.Definition TH1.cxx:7968; TH1::GetBinErrorLowvirtual Double_t GetBinErrorLow(Int_t bin) constReturn lower error associated to bin number bin.Definition TH1.cxx:9079; TH1::Integralvirtual Double_t Integral(Option_t *option="""") constReturn integral of bin contents.Definition TH1.cxx:7941; TH1::GetBinContentvirtual Double_t GetBinContent(Int_t bin) constReturn content of bin number bin.Definition TH1.cxx:5061; TH1::GetBinErrorUpvirtual Double_t GetBinErrorUp(Int_t bin) constReturn upper error associated to bin number bin.Definition TH1.cxx:9110; TH2C2-D histogram with a byte per channel (see TH1 documentation)Definition TH2.h:139; TH2C::operator*friend TH2C operator*(TH2C const &h1, Float_t c1)Definition TH2.h:166; TH2C::Resetvoid Reset(Option_t *option="""") overrideReset this histogram: contents, errors, etc.Definition TH2.cxx:2990; TH2C::AddBinContentvoid AddBinContent(Int_t binx, Int_t biny, Double_t w) overrideIncrement 2D bin content by a weight w.Definition TH2.h:159; TH2C::operator+friend TH2C operator+(TH2C const &h1, TH2C const &h2)Operator +.Definition TH2.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h_source.html:23133,error,error,23133,doc/master/TH2_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2_8h_source.html,1,['error'],['error']
Availability,"328 token_str.ReplaceAll(""\t"", """") ;; 329 if (!token_str.IsFloat()) {; 330 isLineToBeSkipped = kTRUE ;; 331 break ;; 332 } else {; 333 value[value_idx] = token_str.Atof() ;; 334 value_idx++ ;; 335 }; 336 }; 337 token = R__STRTOK_R(nullptr, option, &rest); // next token; 338 token_idx++ ;; 339 }; 340 if (!isLineToBeSkipped && value_idx > 1) { //i.e. 2,3 or 4; 341 x = value[0];; 342 y = value[1];; 343 ex = value[2];; 344 ey = value[3];; 345 SetPoint(np, x, y);; 346 SetPointError(np, ex, ey);; 347 np++ ;; 348 }; 349 }; 350 isLineToBeSkipped = kFALSE;; 351 token = nullptr;; 352 token_idx = 0;; 353 value_idx = 0;; 354 }; 355 Set(np) ;; 356 ; 357 // Cleaning; 358 delete [] isTokenToBeSaved;; 359 delete token;; 360 }; 361 infile.close();; 362}; 363 ; 364 ; 365////////////////////////////////////////////////////////////////////////////////; 366/// TGraphErrors default destructor.; 367 ; 368TGraphErrors::~TGraphErrors(); 369{; 370 delete [] fEX;; 371 delete [] fEY;; 372}; 373 ; 374////////////////////////////////////////////////////////////////////////////////; 375/// Add a point with errorbars to the graph.; 376 ; 377void TGraphErrors::AddPointError(Double_t x, Double_t y, Double_t ex, Double_t ey); 378{; 379 AddPoint(x, y); // fNpoints will increase automatically; 380 SetPointError(fNpoints - 1, ex, ey);; 381}; 382 ; 383////////////////////////////////////////////////////////////////////////////////; 384/// Apply function to all the data points \f$ y = f(x,y) \f$.; 385///; 386/// The error is calculated as \f$ ey=(f(x,y+ey)-f(x,y-ey))/2 \f$.; 387/// This is the same as \f$ error(fy) = df/dy * ey \f$ for small errors.; 388///; 389/// For generic functions the symmetric errors might become non-symmetric; 390/// and are averaged here. Use TGraphAsymmErrors if desired.; 391///; 392/// Error on \f$ x \f$ doesn't change.; 393///; 394/// function suggested/implemented by Miroslav Helbich <helbich@mail.desy.de>; 395 ; 396void TGraphErrors::Apply(TF1 *f); 397{; 398 Double_t x, y, e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:12428,error,errorbars,12428,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['errorbars']
Availability,32 ; kInt16 ; kUInt16 ; kInt8 ; kUInt8 ; kSplitIndex64 ; kSplitIndex32 ; kSplitReal64 ; kSplitReal32 ; kSplitInt64 ; kSplitUInt64 ; kSplitInt32 ; kSplitUInt32 ; kSplitInt16 ; kSplitUInt16 ; kReal32Trunc ; kReal32Quant ; kMax . Definition at line 72 of file RNTupleUtil.hxx. ◆ EExtraTypeInfoIds. enum class ROOT::Experimental::EExtraTypeInfoIds. strong . Used in RExtraTypeInfoDescriptor. . EnumeratorkInvalid ; kStreamerInfo . Definition at line 467 of file RNTupleDescriptor.hxx. ◆ EIOFeatures. enum class ROOT::Experimental::EIOFeatures. strong . EnumeratorkGenerateOffsetMap ; kSupported . Definition at line 52 of file TIOFeatures.hxx. ◆ EIOUnsupportedFeatures. enum class ROOT::Experimental::EIOUnsupportedFeatures. strong . EnumeratorkUnsupported . Definition at line 61 of file TIOFeatures.hxx. ◆ ELogLevel. enum class ROOT::Experimental::ELogLevel : unsigned char. strong . Kinds of diagnostics. . EnumeratorkUnset ; kFatal An error which causes further processing to be unreliable. . kError An error. . kWarning Warnings about likely unexpected behavior. . kInfo Informational messages; used for instance for tracing. . kDebug Debug information; only useful for developers; can have added verbosity up to 255-kDebug. . Definition at line 36 of file RLogger.hxx. ◆ ENTupleInfo. enum class ROOT::Experimental::ENTupleInfo. strong . Listing of the different options that can be printed by RNTupleReader::GetInfo() . EnumeratorkSummary ; kStorageDetails ; kMetrics . Definition at line 43 of file RNTupleReader.hxx. ◆ ENTupleInspectorHist. enum class ROOT::Experimental::ENTupleInspectorHist. strong . EnumeratorkCount ; kNElems ; kCompressedSize ; kUncompressedSize . Definition at line 43 of file RNTupleInspector.hxx. ◆ ENTupleInspectorPrintFormat. enum class ROOT::Experimental::ENTupleInspectorPrintFormat. strong . EnumeratorkTable ; kCSV . Definition at line 42 of file RNTupleInspector.hxx. ◆ ENTupleStructure. enum ROOT::Experimental::ENTupleStructure : std::uint16_t. The fields in the ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html:42048,error,error,42048,doc/master/namespaceROOT_1_1Experimental.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Experimental.html,1,['error'],['error']
Availability,"33 else if (special == 200) ROOT::Fit::InitExpo (*fitdata, f1); // exponential; 234 ; 235 }; 236 ; 237 ; 238 // set the fit function; 239 // if option grad is specified use gradient; 240 if ( (linear || fitOption.Gradient) ); 241 fitter->SetFunction(ROOT::Math::WrappedMultiTF1(*f1));; 242#ifdef R__HAS_VECCORE; 243 else if(f1->IsVectorized()); 244 fitter->SetFunction(static_cast<const ROOT::Math::IParamMultiFunctionTempl<ROOT::Double_v> &>(ROOT::Math::WrappedMultiTF1Templ<ROOT::Double_v>(*f1)));; 245#endif; 246 else; 247 fitter->SetFunction(static_cast<const ROOT::Math::IParamMultiFunction &>(ROOT::Math::WrappedMultiTF1(*f1) ) );; 248 ; 249 // error normalization in case of zero error in the data; 250 if (fitdata->GetErrorType() == ROOT::Fit::BinData::kNoError) fitConfig.SetNormErrors(true);; 251 // error normalization also in case of W or WW options (weights = 1); 252 if (fitdata->Opt().fErrors1) fitConfig.SetNormErrors(true);; 253 // normalize errors also in case you are fitting a Ndim histo with a N-1 function; 254 if (int(fitdata->NDim()) == hdim -1 ) fitConfig.SetNormErrors(true);; 255 ; 256 ; 257 // here need to get some static extra information (like max iterations, error def, etc...); 258 ; 259 ; 260 // parameter settings and transfer the parameters values, names and limits from the functions; 261 // is done automatically in the Fitter.cxx; 262 for (int i = 0; i < npar; ++i) {; 263 ROOT::Fit::ParameterSettings & parSettings = fitConfig.ParSettings(i);; 264 ; 265 // check limits; 266 double plow,pup;; 267 f1->GetParLimits(i,plow,pup);; 268 if (plow*pup != 0 && plow >= pup) { // this is a limitation - cannot fix a parameter to zero value; 269 parSettings.Fix();; 270 }; 271 else if (plow < pup ) {; 272 if (!TMath::Finite(pup) && TMath::Finite(plow) ); 273 parSettings.SetLowerLimit(plow);; 274 else if (!TMath::Finite(plow) && TMath::Finite(pup) ); 275 parSettings.SetUpperLimit(pup);; 276 else; 277 parSettings.SetLimits(plow,pup);; 278 }; 279 ; 280 // set the param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:9800,error,errors,9800,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['error'],['errors']
Availability,33 if (fEZ) return fEZ[i];; 234 return -1;; 235}; 236 ; 237 ; 238////////////////////////////////////////////////////////////////////////////////; 239/// Returns the X maximum with errors.; 240 ; 241Double_t TGraph2DErrors::GetXmaxE() const; 242{; 243 Double_t v = fX[0]+fEX[0];; 244 for (Int_t i=1; i<fNpoints; i++) if (fX[i]+fEX[i]>v) v=fX[i]+fEX[i];; 245 return v;; 246}; 247 ; 248 ; 249////////////////////////////////////////////////////////////////////////////////; 250/// Returns the X minimum with errors.; 251 ; 252Double_t TGraph2DErrors::GetXminE() const; 253{; 254 Double_t v = fX[0]-fEX[0];; 255 for (Int_t i=1; i<fNpoints; i++) if (fX[i]-fEX[i]<v) v=fX[i]-fEX[i];; 256 return v;; 257}; 258 ; 259 ; 260////////////////////////////////////////////////////////////////////////////////; 261/// Returns the Y maximum with errors.; 262 ; 263Double_t TGraph2DErrors::GetYmaxE() const; 264{; 265 Double_t v = fY[0]+fEY[0];; 266 for (Int_t i=1; i<fNpoints; i++) if (fY[i]+fEY[i]>v) v=fY[i]+fEY[i];; 267 return v;; 268}; 269 ; 270 ; 271////////////////////////////////////////////////////////////////////////////////; 272/// Returns the Y minimum with errors.; 273 ; 274Double_t TGraph2DErrors::GetYminE() const; 275{; 276 Double_t v = fY[0]-fEY[0];; 277 for (Int_t i=1; i<fNpoints; i++) if (fY[i]-fEY[i]<v) v=fY[i]-fEY[i];; 278 return v;; 279}; 280 ; 281 ; 282////////////////////////////////////////////////////////////////////////////////; 283/// Returns the Z maximum with errors.; 284 ; 285Double_t TGraph2DErrors::GetZmaxE() const; 286{; 287 Double_t v = fZ[0]+fEZ[0];; 288 for (Int_t i=1; i<fNpoints; i++) if (fZ[i]+fEZ[i]>v) v=fZ[i]+fEZ[i];; 289 return v;; 290}; 291 ; 292 ; 293////////////////////////////////////////////////////////////////////////////////; 294/// Returns the Z minimum with errors.; 295 ; 296Double_t TGraph2DErrors::GetZminE() const; 297{; 298 Double_t v = fZ[0]-fEZ[0];; 299 for (Int_t i=1; i<fNpoints; i++) if (fZ[i]-fEZ[i]<v) v=fZ[i]-fEZ[i];; 300 return v;; 301}; 3,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:7961,error,errors,7961,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['error'],['errors']
Availability,34 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91352,error,error,91352,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"34 DEBUG_TRACE_FUNC(__func__, __LINE__, fmt, __VA_ARGS__); 235 ; 236#define NEED_DEBUG_TRACE_FUNC; 237#if !defined(DEBUG_TRACE_STREAM); 238#define DEBUG_TRACE_STREAM stdout; 239#endif; 240 ; 241#else; 242#define DEBUG_TRACE(fmt, ...) \; 243 do { \; 244 } while (0); 245#endif /* DEBUG */; 246#endif /* DEBUG_TRACE */; 247 ; 248 ; 249#if !defined(DEBUG_ASSERT); 250#if defined(DEBUG); 251#include <stdlib.h>; 252#define DEBUG_ASSERT(cond) \; 253 do { \; 254 if (!(cond)) { \; 255 DEBUG_TRACE(""ASSERTION FAILED: %s"", #cond); \; 256 exit(2); /* Exit with error */ \; 257 } \; 258 } while (0); 259#else; 260#define DEBUG_ASSERT(cond); 261#endif /* DEBUG */; 262#endif; 263 ; 264 ; 265#if defined(__GNUC__) && defined(GCC_INSTRUMENTATION); 266void __cyg_profile_func_enter(void *this_fn, void *call_site); 267 __attribute__((no_instrument_function));; 268 ; 269void __cyg_profile_func_exit(void *this_fn, void *call_site); 270 __attribute__((no_instrument_function));; 271 ; 272void; 273__cyg_profile_func_enter(void *this_fn, void *call_site); 274{; 275 if ((void *)this_fn != (void *)printf) {; 276 printf(""E %p %p\n"", this_fn, call_site);; 277 }; 278}; 279 ; 280void; 281__cyg_profile_func_exit(void *this_fn, void *call_site); 282{; 283 if ((void *)this_fn != (void *)printf) {; 284 printf(""X %p %p\n"", this_fn, call_site);; 285 }; 286}; 287#endif; 288 ; 289 ; 290#if !defined(IGNORE_UNUSED_RESULT); 291#define IGNORE_UNUSED_RESULT(a) ((void)((a) && 1)); 292#endif; 293 ; 294 ; 295#if defined(__GNUC__) || defined(__MINGW32__); 296 ; 297/* GCC unused function attribute seems fundamentally broken.; 298 * Several attempts to tell the compiler ""THIS FUNCTION MAY BE USED; 299 * OR UNUSED"" for individual functions failed.; 300 * Either the compiler creates an ""unused-function"" warning if a; 301 * function is not marked with __attribute__((unused)).; 302 * On the other hand, if the function is marked with this attribute,; 303 * but is used, the compiler raises a completely idiotic; 304 * ""used-but-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:9745,error,error,9745,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['error'],['error']
Availability,"34),1234)\n"");; 3433 fprintf(fmk, ""ifeq ($(MACOSX_MINOR),4)\n"");; 3434 fprintf(fmk, ""\t\tln -sf $@ $(subst .$(DllSuf),.so,$@)\n"");; 3435 fprintf(fmk, ""else\n"");; 3436 fprintf(fmk, ""\t\t$(LD) -bundle -undefined $(UNDEFOPT) $(LDFLAGS) $^ \\\n"");; 3437 fprintf(fmk, ""\t\t $(OutPutOpt) $(subst .$(DllSuf),.so,$@)\n"");; 3438 fprintf(fmk, ""endif\n"");; 3439 fprintf(fmk, ""endif\n"");; 3440 fprintf(fmk, ""else\n"");; 3441 fprintf(fmk, ""ifeq ($(PLATFORM),win32)\n"");; 3442 fprintf(fmk, ""\t\tbindexplib $* $^ > $*.def\n"");; 3443 fprintf(fmk, ""\t\tlib -nologo -MACHINE:IX86 $^ -def:$*.def \\\n"");; 3444 fprintf(fmk, ""\t\t $(OutPutOpt)$(PACKLIB)\n"");; 3445 fprintf(fmk, ""\t\t$(LD) $(SOFLAGS) $(LDFLAGS) $^ $*.exp $(LIBS) \\\n"");; 3446 fprintf(fmk, ""\t\t $(OutPutOpt)$@\n"");; 3447 fprintf(fmk, ""else\n"");; 3448 fprintf(fmk, ""\t\t$(LD) $(SOFLAGS) $(LDFLAGS) $^ $(OutPutOpt) $@ $(LIBS) $(EXPLLINKLIBS)\n"");; 3449 fprintf(fmk, ""endif\n"");; 3450 fprintf(fmk, ""endif\n"");; 3451 fprintf(fmk, ""endif\n"");; 3452 fprintf(fmk, ""endif\n"");; 3453 fprintf(fmk, ""\t\t@echo \""$@ done\""\n"");; 3454 fprintf(fmk, ""\n"");; 3455 fprintf(fmk, ""clean:\n"");; 3456 fprintf(fmk, ""\t\t@rm -f $(OBJS) core\n"");; 3457 fprintf(fmk, ""\n"");; 3458 fprintf(fmk, ""distclean: clean\n"");; 3459 fprintf(fmk, ""\t\t@rm -f $(PROGRAMS) $(PACKSO) $(PACKLIB) *Dict.* *.def *.exp \\\n"");; 3460 fprintf(fmk, ""\t\t *.so *.lib *.dll *.d *.log .def so_locations\n"");; 3461 fprintf(fmk, ""\t\t@rm -rf cxx_repository\n"");; 3462 fprintf(fmk, ""\n"");; 3463 fprintf(fmk, ""# Dependencies\n"");; 3464 fprintf(fmk, ""\n"");; 3465 fprintf(fmk, ""%sProjectSource.$(ObjSuf): %sProjectHeaders.h %sLinkDef.h %sProjectDict.$(SrcSuf)\n"", pack, pack, pack, pack);; 3466 fprintf(fmk, ""\n"");; 3467 fprintf(fmk, ""%sProjectDict.$(SrcSuf): %sProjectHeaders.h %sLinkDef.h\n"", pack, pack, pack);; 3468 fprintf(fmk, ""\t\t@echo \""Generating dictionary $@...\""\n"");; 3469 fprintf(fmk, ""\t\t@rootcint -f $@ $^\n"");; 3470 fprintf(fmk, ""\n"");; 3471 fprintf(fmk, "".$(SrcSuf).$(ObjSuf):\n"");; 3472 fpri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:125349,echo,echo,125349,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['echo'],['echo']
Availability,"3444 ; 3445 inLogEvalError = false ;; 3446}; 3447 ; 3448 ; 3449 ; 3450////////////////////////////////////////////////////////////////////////////////; 3451/// Log evaluation error message. Evaluation errors may be routed through a different; 3452/// protocol than generic RooFit warning message (which go straight through RooMsgService); 3453/// because evaluation errors can occur in very large numbers in the use of likelihood; 3454/// evaluations. In logEvalError mode, controlled by global method enableEvalErrorLogging(); 3455/// messages reported through this function are not printed but all stored in a list,; 3456/// along with server values at the time of reporting. Error messages logged in this; 3457/// way can be printed in a structured way, eliminating duplicates and with the ability; 3458/// to truncate the list by printEvalErrors. This is the standard mode of error logging; 3459/// during MINUIT operations. If enableEvalErrorLogging() is false, all errors; 3460/// reported through this method are passed for immediate printing through RooMsgService.; 3461/// A string with server names and values is constructed automatically for error logging; 3462/// purposes, unless a custom string with similar information is passed as argument.; 3463 ; 3464void RooAbsReal::logEvalError(const char* message, const char* serverValueString) const; 3465{; 3466 if (evalErrorData().mode == Ignore) {; 3467 return ;; 3468 }; 3469 ; 3470 if (evalErrorData().mode == CountErrors) {; 3471 evalErrorData().count++ ;; 3472 return ;; 3473 }; 3474 ; 3475 static bool inLogEvalError = false ;; 3476 ; 3477 if (inLogEvalError) {; 3478 return ;; 3479 }; 3480 inLogEvalError = true ;; 3481 ; 3482 EvalError ee ;; 3483 ee.setMessage(message) ;; 3484 ; 3485 if (serverValueString) {; 3486 ee.setServerValues(serverValueString) ;; 3487 } else {; 3488 std::string srvval ;; 3489 std::ostringstream oss ;; 3490 bool first(true) ;; 3491 for (Int_t i=0 ; i<numProxies() ; i++) {; 3492 RooAbsProxy* p = getProxy(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:148472,error,errors,148472,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['errors']
Availability,"3528 else {; 3529 // For the non system libs, we'd like to be able to unload them.; 3530 // FIXME: Here we lose the information about kLoadLibAlreadyLoaded case.; 3531 cling::Interpreter::CompilationResult compRes;; 3532 HandleInterpreterException(GetMetaProcessorImpl(), Form("".L %s"", canonLib.c_str()), compRes, /*cling::Value*/nullptr);; 3533 if (compRes == cling::Interpreter::kSuccess); 3534 res = cling::DynamicLibraryManager::kLoadLibSuccess;; 3535 }; 3536 }; 3537 ; 3538 if (res == cling::DynamicLibraryManager::kLoadLibSuccess) {; 3539 UpdateListOfLoadedSharedLibraries();; 3540 }; 3541 switch (res) {; 3542 case cling::DynamicLibraryManager::kLoadLibSuccess: return 0;; 3543 case cling::DynamicLibraryManager::kLoadLibAlreadyLoaded: return 1;; 3544 default: break;; 3545 };; 3546 return -1;; 3547}; 3548 ; 3549////////////////////////////////////////////////////////////////////////////////; 3550/// Load a macro file in cling's memory.; 3551 ; 3552void TCling::LoadMacro(const char* filename, EErrorCode* error); 3553{; 3554 ProcessLine(Form("".L %s"", filename), error);; 3555}; 3556 ; 3557////////////////////////////////////////////////////////////////////////////////; 3558/// Let cling process a command line asynch.; 3559 ; 3560Longptr_t TCling::ProcessLineAsynch(const char* line, EErrorCode* error); 3561{; 3562 return ProcessLine(line, error);; 3563}; 3564 ; 3565////////////////////////////////////////////////////////////////////////////////; 3566/// Let cling process a command line synchronously, i.e we are waiting; 3567/// it will be finished.; 3568 ; 3569Longptr_t TCling::ProcessLineSynch(const char* line, EErrorCode* error); 3570{; 3571 R__LOCKGUARD_CLING(fLockProcessLine ? gInterpreterMutex : nullptr);; 3572 if (gApplication) {; 3573 if (gApplication->IsCmdThread()) {; 3574 return ProcessLine(line, error);; 3575 }; 3576 return 0;; 3577 }; 3578 return ProcessLine(line, error);; 3579}; 3580 ; 3581////////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:138241,error,error,138241,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['error'],['error']
Availability,"356 va_list ap;; 4357 int has_body;; 4358 ; 4359#if !defined(NO_FILESYSTEMS); 4360 char path_buf[UTF8_PATH_MAX];; 4361 int len, i, page_handler_found, scope, truncated;; 4362 const char *error_handler = NULL;; 4363 struct mg_file error_page_file = STRUCT_FILE_INITIALIZER;; 4364 const char *error_page_file_ext, *tstr;; 4365#endif /* NO_FILESYSTEMS */; 4366 int handled_by_callback = 0;; 4367 ; 4368 if ((conn == NULL) || (fmt == NULL)) {; 4369 return -2;; 4370 }; 4371 ; 4372 /* Set status (for log) */; 4373 conn->status_code = status;; 4374 ; 4375 /* Errors 1xx, 204 and 304 MUST NOT send a body */; 4376 has_body = ((status > 199) && (status != 204) && (status != 304));; 4377 ; 4378 /* Prepare message in buf, if required */; 4379 if (has_body; 4380 || (!conn->in_error_handler; 4381 && (conn->phys_ctx->callbacks.http_error != NULL))) {; 4382 /* Store error message in errmsg_buf */; 4383 va_copy(ap, args);; 4384 mg_vsnprintf(conn, NULL, errmsg_buf, sizeof(errmsg_buf), fmt, ap);; 4385 va_end(ap);; 4386 /* In a debug build, print all html errors */; 4387 DEBUG_TRACE(""Error %i - [%s]"", status, errmsg_buf);; 4388 }; 4389 ; 4390 /* If there is a http_error callback, call it.; 4391 * But don't do it recursively, if callback calls mg_send_http_error again.; 4392 */; 4393 if (!conn->in_error_handler; 4394 && (conn->phys_ctx->callbacks.http_error != NULL)) {; 4395 /* Mark in_error_handler to avoid recursion and call user callback. */; 4396 conn->in_error_handler = 1;; 4397 handled_by_callback =; 4398 (conn->phys_ctx->callbacks.http_error(conn, status, errmsg_buf); 4399 == 0);; 4400 conn->in_error_handler = 0;; 4401 }; 4402 ; 4403 if (!handled_by_callback) {; 4404 /* Check for recursion */; 4405 if (conn->in_error_handler) {; 4406 DEBUG_TRACE(; 4407 ""Recursion when handling error %u - fall back to default"",; 4408 status);; 4409#if !defined(NO_FILESYSTEMS); 4410 } else {; 4411 /* Send user defined error pages, if defined */; 4412 error_handler = conn->dom_ctx->config[ERROR_PAGES];; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:130867,error,error,130867,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['error'],"['error', 'errors']"
Availability,"357 va_list ap;; 4358 int has_body;; 4359 ; 4360#if !defined(NO_FILESYSTEMS); 4361 char path_buf[UTF8_PATH_MAX];; 4362 int len, i, page_handler_found, scope, truncated;; 4363 const char *error_handler = NULL;; 4364 struct mg_file error_page_file = STRUCT_FILE_INITIALIZER;; 4365 const char *error_page_file_ext, *tstr;; 4366#endif /* NO_FILESYSTEMS */; 4367 int handled_by_callback = 0;; 4368 ; 4369 if ((conn == NULL) || (fmt == NULL)) {; 4370 return -2;; 4371 }; 4372 ; 4373 /* Set status (for log) */; 4374 conn->status_code = status;; 4375 ; 4376 /* Errors 1xx, 204 and 304 MUST NOT send a body */; 4377 has_body = ((status > 199) && (status != 204) && (status != 304));; 4378 ; 4379 /* Prepare message in buf, if required */; 4380 if (has_body; 4381 || (!conn->in_error_handler; 4382 && (conn->phys_ctx->callbacks.http_error != NULL))) {; 4383 /* Store error message in errmsg_buf */; 4384 va_copy(ap, args);; 4385 mg_vsnprintf(conn, NULL, errmsg_buf, sizeof(errmsg_buf), fmt, ap);; 4386 va_end(ap);; 4387 /* In a debug build, print all html errors */; 4388 DEBUG_TRACE(""Error %i - [%s]"", status, errmsg_buf);; 4389 }; 4390 ; 4391 /* If there is a http_error callback, call it.; 4392 * But don't do it recursively, if callback calls mg_send_http_error again.; 4393 */; 4394 if (!conn->in_error_handler; 4395 && (conn->phys_ctx->callbacks.http_error != NULL)) {; 4396 /* Mark in_error_handler to avoid recursion and call user callback. */; 4397 conn->in_error_handler = 1;; 4398 handled_by_callback =; 4399 (conn->phys_ctx->callbacks.http_error(conn, status, errmsg_buf); 4400 == 0);; 4401 conn->in_error_handler = 0;; 4402 }; 4403 ; 4404 if (!handled_by_callback) {; 4405 /* Check for recursion */; 4406 if (conn->in_error_handler) {; 4407 DEBUG_TRACE(; 4408 ""Recursion when handling error %u - fall back to default"",; 4409 status);; 4410#if !defined(NO_FILESYSTEMS); 4411 } else {; 4412 /* Send user defined error pages, if defined */; 4413 error_handler = conn->dom_ctx->config[ERROR_PAGES];; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:130899,error,error,130899,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['error'],"['error', 'errors']"
Availability,"359 delete token;; 360 }; 361 infile.close();; 362}; 363 ; 364 ; 365////////////////////////////////////////////////////////////////////////////////; 366/// TGraphErrors default destructor.; 367 ; 368TGraphErrors::~TGraphErrors(); 369{; 370 delete [] fEX;; 371 delete [] fEY;; 372}; 373 ; 374////////////////////////////////////////////////////////////////////////////////; 375/// Add a point with errorbars to the graph.; 376 ; 377void TGraphErrors::AddPointError(Double_t x, Double_t y, Double_t ex, Double_t ey); 378{; 379 AddPoint(x, y); // fNpoints will increase automatically; 380 SetPointError(fNpoints - 1, ex, ey);; 381}; 382 ; 383////////////////////////////////////////////////////////////////////////////////; 384/// Apply function to all the data points \f$ y = f(x,y) \f$.; 385///; 386/// The error is calculated as \f$ ey=(f(x,y+ey)-f(x,y-ey))/2 \f$.; 387/// This is the same as \f$ error(fy) = df/dy * ey \f$ for small errors.; 388///; 389/// For generic functions the symmetric errors might become non-symmetric; 390/// and are averaged here. Use TGraphAsymmErrors if desired.; 391///; 392/// Error on \f$ x \f$ doesn't change.; 393///; 394/// function suggested/implemented by Miroslav Helbich <helbich@mail.desy.de>; 395 ; 396void TGraphErrors::Apply(TF1 *f); 397{; 398 Double_t x, y, ex, ey;; 399 ; 400 if (fHistogram) {; 401 delete fHistogram;; 402 fHistogram = nullptr;; 403 }; 404 for (Int_t i = 0; i < GetN(); i++) {; 405 GetPoint(i, x, y);; 406 ex = GetErrorX(i);; 407 ey = GetErrorY(i);; 408 ; 409 SetPoint(i, x, f->Eval(x, y));; 410 SetPointError(i, ex, TMath::Abs(f->Eval(x, y + ey) - f->Eval(x, y - ey)) / 2.);; 411 }; 412 if (gPad) gPad->Modified();; 413}; 414 ; 415////////////////////////////////////////////////////////////////////////////////; 416/// Apply function to all the data points \f$ x = f(x,y) \f$.; 417///; 418/// The error is calculated as \f$ ex=(f(x+ex,y)-f(x-ex,y))/2 \f$.; 419/// This is the same as \f$ error(fx) = df/dx * ex \f$ for small errors.; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:13025,error,errors,13025,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['errors']
Availability,"36 gSystem->Exec(""chmod +x MAKEP"");; 3337 int res = !gSystem->Exec(""./MAKEP"");; 3338#else; 3339 // not really needed for Windows but it would work both both Unix and NT; 3340 chmod(""makep.cmd"",00700);; 3341 int res = !gSystem->Exec(""MAKEP"");; 3342#endif; 3343 gSystem->ChangeDirectory(path);; 3344 path.Form(""%s/%s.%s"",clean_dirname.Data(),subdirname.Data(),gSystem->GetSoExt());; 3345 if (res) printf(""Shared lib %s has been generated\n"",path.Data());; 3346 ; 3347 //dynamically link the generated shared lib; 3348 if (opt.Contains(""++"")) {; 3349 res = !gSystem->Load(path);; 3350 if (res) printf(""Shared lib %s has been dynamically linked\n"",path.Data());; 3351 }; 3352 }; 3353 ; 3354 delete list;; 3355 filelist->Delete();; 3356 delete filelist;; 3357}; 3358 ; 3359////////////////////////////////////////////////////////////////////////////////; 3360/// Create makefile at 'filemake' for PAR package 'pack'.; 3361///; 3362/// Called by MakeProject when option 'par' is given.; 3363/// Return 0 on success, -1 on error.; 3364 ; 3365Int_t TFile::MakeProjectParMake(const char *pack, const char *filemake); 3366{; 3367 // Output file path must be defined; 3368 if (!filemake || (filemake && strlen(filemake) <= 0)) {; 3369 Error(""MakeProjectParMake"", ""path for output file undefined!"");; 3370 return -1;; 3371 }; 3372 ; 3373 // Package name must be defined; 3374 if (!pack || (pack && strlen(pack) <= 0)) {; 3375 Error(""MakeProjectParMake"", ""package name undefined!"");; 3376 return -1;; 3377 }; 3378 ; 3379#ifdef R__WINGCC; 3380 FILE *fmk = fopen(filemake, ""wb"");; 3381#else; 3382 FILE *fmk = fopen(filemake, ""w"");; 3383#endif; 3384 if (!fmk) {; 3385 Error(""MakeProjectParMake"", ""cannot create file '%s' (errno: %d)"", filemake, TSystem::GetErrno());; 3386 return -1;; 3387 }; 3388 ; 3389 // Fill the file now; 3390 fprintf(fmk, ""# Makefile for the ROOT test programs.\n"");; 3391 fprintf(fmk, ""# This Makefile shows how to compile and link applications\n"");; 3392 fprintf(fmk, ""# using the ROOT librar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:121283,error,error,121283,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['error'],['error']
Availability,"360 if (m == 1) {; 361 p1 = pa;; 362 p2 = na;; 363 p3 = ma;; 364 } else if (m == 2) {; 365 p1 = pa;; 366 p2 = ma;; 367 p3 = na;; 368 } else if (m == 3) {; 369 p1 = na;; 370 p2 = ma;; 371 p3 = pa;; 372 }; 373 // get the coordinates of the centre of this side; 374 xm = (fXN[p1]+fXN[p2])/2.;; 375 ym = (fYN[p1]+fYN[p2])/2.;; 376 // we want to add a little to these coordinates to get a point just; 377 // outside the triangle; (sx,sy) will be the vector that represents; 378 // the side; 379 sx = fXN[p1]-fXN[p2];; 380 sy = fYN[p1]-fYN[p2];; 381 // (nx,ny) will be the normal to the side, but don't know if it's; 382 // pointing in or out yet; 383 nx = sy;; 384 ny = -sx;; 385 nn = TMath::Sqrt(nx*nx+ny*ny);; 386 nx = nx/nn;; 387 ny = ny/nn;; 388 mx = fXN[p3]-xm;; 389 my = fYN[p3]-ym;; 390 mdotn = mx*nx+my*ny;; 391 if (mdotn > 0) {; 392 // (nx,ny) is pointing in, we want it pointing out; 393 nx = -nx;; 394 ny = -ny;; 395 }; 396 // increase/decrease xm and ym a little to produce a point; 397 // just outside the triangle (ensuring that the amount added will; 398 // be large enough such that it won't be lost in rounding errors); 399 a = TMath::Abs(TMath::Max(alittlebit*xm,alittlebit*ym));; 400 xx = xm+nx*a;; 401 yy = ym+ny*a;; 402 // try and find a new Delaunay triangle for this point; 403 Interpolate(xx,yy);; 404 ; 405 // this side of t1 should now, hopefully, if it's not part of the; 406 // hull, be shared with a new Delaunay triangle just calculated by Interpolate; 407 }; 408 }; 409 t1++;; 410 }; 411}; 412 ; 413 ; 414////////////////////////////////////////////////////////////////////////////////; 415/// Finds those points which make up the convex hull of the set. If the xy; 416/// plane were a sheet of wood, and the points were nails hammered into it; 417/// at the respective coordinates, then if an elastic band were stretched; 418/// over all the nails it would form the shape of the convex hull. Those; 419/// nails in contact with it are the points that make up the hull.; 420",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html:13482,error,errors,13482,doc/master/TGraphDelaunay_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphDelaunay_8cxx_source.html,1,['error'],['errors']
Availability,"369 : TGraph(np, x, y), fNYErrors(ne), fSumErrorsMode(m); 370{; 371 if (!CtorAllocate()); 372 return;; 373 ; 374 Int_t n = fNpoints * sizeof(Double_t);; 375 ; 376 if (exL); 377 memcpy(fExL, exL, n);; 378 else; 379 memset(fExL, 0, n);; 380 if (exH); 381 memcpy(fExH, exH, n);; 382 else; 383 memset(fExH, 0, n);; 384 ; 385 for (Int_t i = 0; i < fNpoints; i++) {; 386 for (Int_t j = 0; j < fNYErrors; j++) {; 387 if (Int_t(eyL.size()) > j && eyL[j].GetSize() > i); 388 fEyL[j][i] = eyL[j][i];; 389 else; 390 fEyL[j][i] = 0.;; 391 if (Int_t(eyH.size()) > j && eyH[j].GetSize() > i); 392 fEyH[j][i] = eyH[j][i];; 393 else; 394 fEyH[j][i] = 0.;; 395 }; 396 }; 397 ; 398 CalcYErrorsSum();; 399}; 400 ; 401////////////////////////////////////////////////////////////////////////////////; 402/// TGraphMultiErrors normal constructor with `name`, `title`, `np` points and `ne` y-errors.; 403///; 404/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 405/// The multiple y-errors are passed as std::vectors of TArrayD objects.; 406 ; 407TGraphMultiErrors::TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Double_t *x,; 408 const Double_t *y, const Double_t *exL, const Double_t *exH,; 409 std::vector<TArrayD> eyL, std::vector<TArrayD> eyH, Int_t m); 410 : TGraphMultiErrors(np, ne, x, y, exL, exH, eyL, eyH, m); 411{; 412 SetNameTitle(name, title);; 413}; 414 ; 415////////////////////////////////////////////////////////////////////////////////; 416/// Constructor with six vectors of floats in input and a single y error dimension.; 417/// The signature of this constructor is equal to the corresponding constructor of TGraphAsymmErrors.; 418/// A grapherrors is built with the X coordinates taken from `tvX` the Y coordinates from `tvY`; 419/// and the errors from vectors `tvExL`, `tvExH` and `tvEyL`, `tvEyH`.; 420/// The number of points in the graph is the minimum of number of points; 421/// in `tvX` and `tvY`.; 422 ; 423TGraphMultiErrors::TG",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:14453,error,errors,14453,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['errors']
Availability,"37 of file TH1.cxx. ◆ SavePrimitiveHelp(). void TH1::SavePrimitiveHelp ; (; std::ostream & ; out, . const char * ; hname, . Option_t * ; option = """" . ). protectedvirtual . Helper function for the SavePrimitive functions from TH1 or classes derived from TH1, eg TProfile, TProfile2D. ; Definition at line 7379 of file TH1.cxx. ◆ Scale(). void TH1::Scale ; (; Double_t ; c1 = 1, . Option_t * ; option = """" . ). virtual . Multiply this histogram by a constant c1. ; this = c1*this; Note that both contents and errors (if any) are scaled. This function uses the services of TH1::Add; IMPORTANT NOTE: Sumw2() is called automatically when scaling. If you are not interested in the histogram statistics you can call Sumw2(kFALSE) or use the option ""nosw2""; One can scale a histogram such that the bins integral is equal to the normalization parameter via TH1::Scale(Double_t norm), where norm is the desired normalization divided by the integral of the histogram.; If option contains ""width"" the bin contents and errors are divided by the bin width. ; Reimplemented in TH2Poly, TProfile, TProfile2D, and TProfile3D.; Definition at line 6604 of file TH1.cxx. ◆ SetAxisColor(). void TH1::SetAxisColor ; (; Color_t ; color = 1, . Option_t * ; axis = ""X"" . ). virtual . Set color to draw the axis line and tick marks. ; axis specifies which axis (""x"",""y"",""z""), default = ""x"" if axis=""xyz"" set all 3 axes ; Definition at line 187 of file Haxis.cxx. ◆ SetAxisRange(). void TH1::SetAxisRange ; (; Double_t ; xmin, . Double_t ; xmax, . Option_t * ; axis = ""X"" . ). virtual . Set the ""axis"" range. ; Definition at line 201 of file Haxis.cxx. ◆ SetBarOffset(). void TH1::SetBarOffset ; (; Float_t ; offset = 0.25). inlinevirtual . Set the bar offset as fraction of the bin width for drawing mode ""B"". ; This shifts bars to the right on the x axis, and helps to draw bars next to each other. See alsoTHistPainter, SetBarWidth() ; Definition at line 364 of file TH1.h. ◆ SetBarWidth(). void TH1::SetBarWidth ; (; Float",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:201460,error,errors,201460,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['errors']
Availability,"37///Return integral of bin contents. Only bins in the bins range are considered.; 7938///; 7939/// By default the integral is computed as the sum of bin contents in the range.; 7940/// if option ""width"" is specified, the integral is the sum of; 7941/// the bin contents multiplied by the bin width in x.; 7942 ; 7943Double_t TH1::Integral(Option_t *option) const; 7944{; 7945 return Integral(fXaxis.GetFirst(),fXaxis.GetLast(),option);; 7946}; 7947 ; 7948////////////////////////////////////////////////////////////////////////////////; 7949/// Return integral of bin contents in range [binx1,binx2].; 7950///; 7951/// By default the integral is computed as the sum of bin contents in the range.; 7952/// if option ""width"" is specified, the integral is the sum of; 7953/// the bin contents multiplied by the bin width in x.; 7954 ; 7955Double_t TH1::Integral(Int_t binx1, Int_t binx2, Option_t *option) const; 7956{; 7957 double err = 0;; 7958 return DoIntegral(binx1,binx2,0,-1,0,-1,err,option);; 7959}; 7960 ; 7961////////////////////////////////////////////////////////////////////////////////; 7962/// Return integral of bin contents in range [binx1,binx2] and its error.; 7963///; 7964/// By default the integral is computed as the sum of bin contents in the range.; 7965/// if option ""width"" is specified, the integral is the sum of; 7966/// the bin contents multiplied by the bin width in x.; 7967/// the error is computed using error propagation from the bin errors assuming that; 7968/// all the bins are uncorrelated; 7969 ; 7970Double_t TH1::IntegralAndError(Int_t binx1, Int_t binx2, Double_t & error, Option_t *option) const; 7971{; 7972 return DoIntegral(binx1,binx2,0,-1,0,-1,error,option,kTRUE);; 7973}; 7974 ; 7975////////////////////////////////////////////////////////////////////////////////; 7976/// Internal function compute integral and optionally the error between the limits; 7977/// specified by the bin number values working for all histograms (1D, 2D and 3D); 7978 ; 7979",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:312236,error,error,312236,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability,3720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91465,error,error,91465,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,3726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92819,error,error,92819,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,3730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92933,error,error,92933,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"38 ; 539 The following statements create a ROOT file and store a histogram; 540 on the file. Because TH1 derives from TNamed, the key identifier on; 541 the file is the histogram name:; 542~~~ {.cpp}; 543 TFile f(""histos.root"", ""new"");; 544 TH1F h1(""hgaus"", ""histo from a gaussian"", 100, -3, 3);; 545 h1.FillRandom(""gaus"", 10000);; 546 h1->Write();; 547~~~; 548 To read this histogram in another Root session, do:; 549~~~ {.cpp}; 550 TFile f(""histos.root"");; 551 TH1F *h = (TH1F*)f.Get(""hgaus"");; 552~~~; 553 One can save all histograms in memory to the file by:; 554~~~ {.cpp}; 555 file->Write();; 556~~~; 557 ; 558 ; 559\anchor misc; 560## Miscellaneous operations; 561 ; 562~~~ {.cpp}; 563 TH1::KolmogorovTest(): statistical test of compatibility in shape; 564 between two histograms; 565 TH1::Smooth() smooths the bin contents of a 1-d histogram; 566 TH1::Integral() returns the integral of bin contents in a given bin range; 567 TH1::GetMean(int axis) returns the mean value along axis; 568 TH1::GetStdDev(int axis) returns the sigma distribution along axis; 569 TH1::GetEntries() returns the number of entries; 570 TH1::Reset() resets the bin contents and errors of a histogram; 571~~~; 572 IMPORTANT NOTE: The returned values for GetMean and GetStdDev depend on how the; 573 histogram statistics are calculated. By default, if no range has been set, the; 574 returned values are the (unbinned) ones calculated at fill time. If a range has been; 575 set, however, the values are calculated using the bins in range; THIS IS TRUE EVEN; 576 IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset the range.; 577 To ensure that the returned values are always those of the binned data stored in the; 578 histogram, call TH1::ResetStats. See TH1::GetStats.; 579*/; 580 ; 581TF1 *gF1=nullptr; //left for back compatibility (use TVirtualFitter::GetUserFunc instead); 582 ; 583Int_t TH1::fgBufferSize = 1000;; 584Bool_t TH1::fgAddDirectory = kTRUE;; 585Bool_t TH1::fgDefaultSumw2 = kFALSE;; 5",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:24541,error,errors,24541,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,38.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1116 | 2.82496 2.31503 0.0201083 0.00181922 43742 0; : 1117 | 2.74168 2.90157 0.0200454 0.00175765 43745.2 1; : 1118 | 2.51176 4.00704 0.0201409 0.00176812 43542.7 2; : 1119 | 3.03618 2.55498 0.0202517 0.00178949 43331.7 3; : 1120 | 2.66116 2.61177 0.0204165 0.00176394 42889.5 4; : 1121 | 3.00965 2.56116 0.0204562 0.00180217 42886.2 5; : 1122 | 3.0625 3.75816 0.0204635 0.00176149 42776.2 6; : 1123 | 2.88666 2.6576 0.0204265 0.00178135 42906.6 7; : 1124 | 2.54231 2.73598 0.020225 0.00176346 43333.4 8; : 1125 | 2.44231 2.73459 0.0201498 0.00175906 43500.1 9; : 1126 | 2.45201 2.82465 0.0200726 0.00175651 43677.5 10; : 1127 | 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:120403,error,error,120403,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"3807 // case of writing; 3808 b.WriteClassBuffer(TFormula::Class(), this);; 3809 // std::cout << ""writing npar = "" << GetNpar() << std::endl;; 3810 }; 3811}; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Version_tshort Version_tDefinition RtypesCore.h:65; Double_tdouble Double_tDefinition RtypesCore.h:59; kNPOSconstexpr Ssiz_t kNPOSDefinition RtypesCore.h:117; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassImp#define ClassImp(name)Definition Rtypes.h:382; StringUtils.hxx; TBenchmark.h; TBuffer.h; TError.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; TF1.h; GetParametersvoid GetParameters(TFitEditor::FuncParams_t &pars, TF1 *func)Stores the parameters of the given function into pars.Definition TFitEditor.cxx:256; gClingFunctionsstatic std::unordered_map< std::string, void * > gClingFunctionsDefinition TFormula.cxx:264; IncludeCladRuntimestatic void IncludeCladRuntime(Bool_t &IsCladRuntimeIncluded)Definition TFormula.cxx:3127; TFormulaUpdater_tvoid(*)(Int_t nobjects, TObject **from, TObject **to) TFormulaUpdater_tDefinition TFormula.cxx:280; gNamePrefixstatic const TString gNamePrefixDefinition TFormula.cxx:260; CallCladFunctionstatic void CallCladFunction(TInterpreter::CallFuncIFacePtr_t::Generic_t FuncPtr, const Double_t *vars, const Double_t *pars, Double_t *result, const Int_t)Definition TFormula.cxx:3159; prepareMethodstatic std::unique_ptr< TMethodCall > prepareMethod(bool HasParameters, bool HasVariables, const char *FuncName, bool IsVectorized, bool AddCladArrayRef=false)Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:145504,error,error,145504,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['error'],['error']
Availability,"3818 if (!keep) k->SetBit(kMustCleanup);; 3819 fCompiled->Add(k);; 3820 ; 3821 if (needLoadMap) {; 3822 gInterpreter->LoadLibraryMap(libmapfilename);; 3823 }; 3824 if (verboseLevel>3 && withInfo) ::Info(""ACLiC"",""loading the shared library"");; 3825 if (loadLib); 3826 result = LoadLibrary(library);; 3827 else; 3828 result = kTRUE;; 3829 ; 3830 if ( !result ) {; 3831 if (verboseLevel>3 && withInfo) {; 3832 ::Info(""ACLiC"",""testing for missing symbols:"");; 3833 if (verboseLevel>4) ::Info(""ACLiC"", ""%s"", testcmd.Data());; 3834 }; 3835 gSystem->Exec(testcmd);; 3836 gSystem->Unlink( exec );; 3837 }; 3838 ; 3839 };; 3840 ; 3841 if (verboseLevel<=5 && !internalDebug) {; 3842 gSystem->Unlink( dict );; 3843 gSystem->Unlink( dicth );; 3844 gSystem->Unlink( dictObj );; 3845 gSystem->Unlink( linkdef );; 3846 gSystem->Unlink( mapfilein );; 3847 gSystem->Unlink( mapfileout );; 3848 gSystem->Unlink( fakeMain );; 3849 gSystem->Unlink( exec );; 3850 }; 3851 if (verboseLevel>6) {; 3852 rcling.Prepend(""echo "");; 3853 cmd.Prepend(""echo \"" "").Append("" \"" "");; 3854 testcmd.Prepend(""echo \"" "").Append("" \"" "");; 3855 gSystem->Exec(rcling);; 3856 gSystem->Exec( cmd );; 3857 gSystem->Exec(testcmd);; 3858 }; 3859 ; 3860 return result;; 3861}; 3862 ; 3863////////////////////////////////////////////////////////////////////////////////; 3864/// Return the ACLiC properties field. See EAclicProperties for details; 3865/// on the semantic of each bit.; 3866 ; 3867Int_t TSystem::GetAclicProperties() const; 3868{; 3869 return fAclicProperties;; 3870}; 3871 ; 3872////////////////////////////////////////////////////////////////////////////////; 3873/// Return the build architecture.; 3874 ; 3875const char *TSystem::GetBuildArch() const; 3876{; 3877 return fBuildArch;; 3878}; 3879 ; 3880////////////////////////////////////////////////////////////////////////////////; 3881/// Return the build compiler; 3882 ; 3883const char *TSystem::GetBuildCompiler() const; 3884{; 3885 return fBuildCompiler;; 3886}; 3887 ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:130843,echo,echo,130843,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['echo'],['echo']
Availability,"382 double sumOfSquares (ItOutput itOutputBegin, ItOutput itOutputEnd, ItTruth itTruthBegin, ItTruth /*itTruthEnd*/, ItDelta itDelta, ItDelta itDeltaEnd, InvFnc invFnc, double patternWeight); 383 {; 384 double errorSum = 0.0;; 385 ; 386 // output - truth; 387 ItTruth itTruth = itTruthBegin;; 388 bool hasDeltas = (itDelta != itDeltaEnd);; 389 for (ItOutput itOutput = itOutputBegin; itOutput != itOutputEnd; ++itOutput, ++itTruth); 390 {; 391// assert (itTruth != itTruthEnd);; 392 double output = (*itOutput);; 393 double error = output - (*itTruth);; 394 if (hasDeltas); 395 {; 396 (*itDelta) = (*invFnc.get ()) (output) * error * patternWeight;; 397 ++itDelta;; 398 }; 399 errorSum += error*error * patternWeight;; 400 }; 401 ; 402 return 0.5*errorSum;; 403 }; 404 ; 405 ; 406 ; 407/*! \brief cross entropy error function; 408 *; 409 *; 410 */; 411 template <typename ItProbability, typename ItTruth, typename ItDelta, typename ItInvActFnc>; 412 double crossEntropy (ItProbability itProbabilityBegin, ItProbability itProbabilityEnd, ItTruth itTruthBegin, ItTruth /*itTruthEnd*/, ItDelta itDelta, ItDelta itDeltaEnd, ItInvActFnc /*itInvActFnc*/, double patternWeight); 413 {; 414 bool hasDeltas = (itDelta != itDeltaEnd);; 415 ; 416 double errorSum = 0.0;; 417 for (ItProbability itProbability = itProbabilityBegin; itProbability != itProbabilityEnd; ++itProbability); 418 {; 419 double probability = *itProbability;; 420 double truth = *itTruthBegin;; 421 /* truth = truth < 0.1 ? 0.1 : truth; */; 422 /* truth = truth > 0.9 ? 0.9 : truth; */; 423 truth = truth < 0.5 ? 0.1 : 0.9;; 424 if (hasDeltas); 425 {; 426 double delta = probability - truth;; 427 (*itDelta) = delta*patternWeight;; 428// (*itDelta) = (*itInvActFnc)(probability) * delta * patternWeight;; 429 ++itDelta;; 430 }; 431 double error (0);; 432 if (probability == 0) // protection against log (0); 433 {; 434 if (truth >= 0.5); 435 error += 1.0;; 436 }; 437 else if (probability == 1); 438 {; 439 if (truth < 0.5); 440 error += 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:11730,error,errorSum,11730,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,3,['error'],"['error', 'errorSum']"
Availability,"3821 if (needLoadMap) {; 3822 gInterpreter->LoadLibraryMap(libmapfilename);; 3823 }; 3824 if (verboseLevel>3 && withInfo) ::Info(""ACLiC"",""loading the shared library"");; 3825 if (loadLib); 3826 result = LoadLibrary(library);; 3827 else; 3828 result = kTRUE;; 3829 ; 3830 if ( !result ) {; 3831 if (verboseLevel>3 && withInfo) {; 3832 ::Info(""ACLiC"",""testing for missing symbols:"");; 3833 if (verboseLevel>4) ::Info(""ACLiC"", ""%s"", testcmd.Data());; 3834 }; 3835 gSystem->Exec(testcmd);; 3836 gSystem->Unlink( exec );; 3837 }; 3838 ; 3839 };; 3840 ; 3841 if (verboseLevel<=5 && !internalDebug) {; 3842 gSystem->Unlink( dict );; 3843 gSystem->Unlink( dicth );; 3844 gSystem->Unlink( dictObj );; 3845 gSystem->Unlink( linkdef );; 3846 gSystem->Unlink( mapfilein );; 3847 gSystem->Unlink( mapfileout );; 3848 gSystem->Unlink( fakeMain );; 3849 gSystem->Unlink( exec );; 3850 }; 3851 if (verboseLevel>6) {; 3852 rcling.Prepend(""echo "");; 3853 cmd.Prepend(""echo \"" "").Append("" \"" "");; 3854 testcmd.Prepend(""echo \"" "").Append("" \"" "");; 3855 gSystem->Exec(rcling);; 3856 gSystem->Exec( cmd );; 3857 gSystem->Exec(testcmd);; 3858 }; 3859 ; 3860 return result;; 3861}; 3862 ; 3863////////////////////////////////////////////////////////////////////////////////; 3864/// Return the ACLiC properties field. See EAclicProperties for details; 3865/// on the semantic of each bit.; 3866 ; 3867Int_t TSystem::GetAclicProperties() const; 3868{; 3869 return fAclicProperties;; 3870}; 3871 ; 3872////////////////////////////////////////////////////////////////////////////////; 3873/// Return the build architecture.; 3874 ; 3875const char *TSystem::GetBuildArch() const; 3876{; 3877 return fBuildArch;; 3878}; 3879 ; 3880////////////////////////////////////////////////////////////////////////////////; 3881/// Return the build compiler; 3882 ; 3883const char *TSystem::GetBuildCompiler() const; 3884{; 3885 return fBuildCompiler;; 3886}; 3887 ; 3888//////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:130921,echo,echo,130921,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['echo'],['echo']
Availability,"384 ; 385 for (Int_t i = 0; i < fNpoints; i++) {; 386 for (Int_t j = 0; j < fNYErrors; j++) {; 387 if (Int_t(eyL.size()) > j && eyL[j].GetSize() > i); 388 fEyL[j][i] = eyL[j][i];; 389 else; 390 fEyL[j][i] = 0.;; 391 if (Int_t(eyH.size()) > j && eyH[j].GetSize() > i); 392 fEyH[j][i] = eyH[j][i];; 393 else; 394 fEyH[j][i] = 0.;; 395 }; 396 }; 397 ; 398 CalcYErrorsSum();; 399}; 400 ; 401////////////////////////////////////////////////////////////////////////////////; 402/// TGraphMultiErrors normal constructor with `name`, `title`, `np` points and `ne` y-errors.; 403///; 404/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 405/// The multiple y-errors are passed as std::vectors of TArrayD objects.; 406 ; 407TGraphMultiErrors::TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Double_t *x,; 408 const Double_t *y, const Double_t *exL, const Double_t *exH,; 409 std::vector<TArrayD> eyL, std::vector<TArrayD> eyH, Int_t m); 410 : TGraphMultiErrors(np, ne, x, y, exL, exH, eyL, eyH, m); 411{; 412 SetNameTitle(name, title);; 413}; 414 ; 415////////////////////////////////////////////////////////////////////////////////; 416/// Constructor with six vectors of floats in input and a single y error dimension.; 417/// The signature of this constructor is equal to the corresponding constructor of TGraphAsymmErrors.; 418/// A grapherrors is built with the X coordinates taken from `tvX` the Y coordinates from `tvY`; 419/// and the errors from vectors `tvExL`, `tvExH` and `tvEyL`, `tvEyH`.; 420/// The number of points in the graph is the minimum of number of points; 421/// in `tvX` and `tvY`.; 422 ; 423TGraphMultiErrors::TGraphMultiErrors(const TVectorF &tvX, const TVectorF &tvY, const TVectorF &tvExL,; 424 const TVectorF &tvExH, const TVectorF &tvEyL, const TVectorF &tvEyH, Int_t m); 425 : fNYErrors(1), fSumErrorsMode(m); 426{; 427 fNpoints = TMath::Min(tvX.GetNrows(), tvY.GetNrows());; 428 ; 429 if (!TGraph::CtorAllocate()); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:15034,error,error,15034,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability,"386 return res;; 387}; 388 ; 389////////////////////////////////////////////////////////////////////////////////; 390/// Generates a random integer N according to a Poisson law.; 391/// Prob(N) = exp(-mean)*mean^N/Factorial(N); 392///; 393/// Use a different procedure according to the mean value.; 394/// The algorithm is the same used by CLHEP.; 395/// For lower value (mean < 25) use the rejection method based on; 396/// the exponential.; 397/// For higher values use a rejection method comparing with a Lorentzian; 398/// distribution, as suggested by several authors.; 399/// This routine returns now an unsigned 64 bit integer; 400/// For large values, larger than 1.84e+19, we print an error message; 401/// advising to use the Trandom::PoissonD for such large values,; 402/// and return the max value UINT64_MAX; 403 ; 404ULong64_t TRandom::Poisson(Double_t mean); 405{; 406 ULong64_t n;; 407 if (mean <= 0) return 0;; 408 if (mean < 25) {; 409 Double_t expmean = TMath::Exp(-mean);; 410 Double_t pir = 1;; 411 n = -1;; 412 while(true) {; 413 n++;; 414 pir *= Rndm();; 415 if (pir <= expmean) break;; 416 }; 417 return n;; 418 }; 419 // for large value we use inversion method; 420 else if (mean < 1E9) {; 421 Double_t em, t, y;; 422 Double_t sq, alxm, g;; 423 Double_t pi = TMath::Pi();; 424 ; 425 sq = TMath::Sqrt(2.0*mean);; 426 alxm = TMath::Log(mean);; 427 g = mean*alxm - TMath::LnGamma(mean + 1.0);; 428 ; 429 do {; 430 do {; 431 y = TMath::Tan(pi*Rndm());; 432 em = sq*y + mean;; 433 } while( em < 0.0 );; 434 ; 435 em = TMath::Floor(em);; 436 t = 0.9*(1.0 + y*y)* TMath::Exp(em*alxm - TMath::LnGamma(em + 1.0) - g);; 437 } while( Rndm() > t );; 438 ; 439 return static_cast<ULong64_t>(em);; 440 ; 441 }; 442 else {; 443 // use Gaussian approximation for very large values; 444 Double_t x = Gaus(0, 1) * TMath::Sqrt(mean) + mean + 0.5;; 445 if (x > TMath::Limits<ULong64_t>::Max()) {; 446 Error(""Poisson"", ""Overflow in return value. Use PoissonD instead."");; 447 return TMath::Limits<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:18073,error,error,18073,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['error'],['error']
Availability,39 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84062,error,error,84062,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"39 of file TTabCom.cxx. ◆ IsA(). virtual TClass * TTabCom::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Definition at line 226 of file TTabCom.h. ◆ IsDirectory(). Bool_t TTabCom::IsDirectory ; (; const char ; fileName[]). static . [static utility function]///////////////////////////// ; calls TSystem::GetPathInfo() to see if ""fileName"" is a system directory. ; Definition at line 1029 of file TTabCom.cxx. ◆ MakeClassFromClassName(). TClass * TTabCom::MakeClassFromClassName ; (; const char ; className[]); const. private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a class. ; user must delete. returns 0 in case of error. ; Definition at line 2206 of file TTabCom.cxx. ◆ MakeClassFromVarName(). TClass * TTabCom::MakeClassFromVarName ; (; const char ; varName[], . EContext_t & ; context, . int ; iter = 0 . ). private . [private] (does some specific error handling that makes the function unsuitable for general use.) returns a new'd TClass given the name of a variable. ; user must delete. returns 0 in case of error. if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf. context sensitive behavior. ; Definition at line 2255 of file TTabCom.cxx. ◆ NewListOfFilesInPath(). TSeqCollection * TTabCom::NewListOfFilesInPath ; (; const char ; path1[]). static . [static utility function]///////////////////////////// ; creates a list containing the full path name for each file in the (colon separated) string ""path1""; memory is allocated with ""new"", so whoever calls this function takes responsibility for deleting it. ; Definition at line 1049 of file TTabCom.cxx. ◆ NoMsg(). void TTabCom::NoMsg ; (; Int_t ; errorLevel). static . [static utility function]///////////////////////////// ; calling ""NoMsg( errorLevel )"", sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that all errors with ""level < errorLevel"" will be ignored.; calling t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTabCom.html:15717,error,error,15717,doc/master/classTTabCom.html,https://root.cern,https://root.cern/doc/master/classTTabCom.html,1,['error'],['error']
Availability,"39 return 0;; 2640 }; 2641 evhdl = *(int *)eventhdl;; 2642 ; 2643 s = (int)write(evhdl, &u, sizeof(u));; 2644 if (s != sizeof(u)) {; 2645 /* error */; 2646 return 0;; 2647 }; 2648 return 1;; 2649}; 2650 ; 2651 ; 2652static void; 2653event_destroy(void *eventhdl); 2654{; 2655 int evhdl;; 2656 ; 2657 if (!eventhdl) {; 2658 /* error */; 2659 return;; 2660 }; 2661 evhdl = *(int *)eventhdl;; 2662 ; 2663 close(evhdl);; 2664 mg_free(eventhdl);; 2665}; 2666 ; 2667 ; 2668#endif; 2669 ; 2670#endif; 2671 ; 2672 ; 2673#if !defined(__linux__) && !defined(_WIN32) && defined(ALTERNATIVE_QUEUE); 2674 ; 2675struct posix_event {; 2676 pthread_mutex_t mutex;; 2677 pthread_cond_t cond;; 2678 int signaled;; 2679};; 2680 ; 2681 ; 2682static void *; 2683event_create(void); 2684{; 2685 struct posix_event *ret = mg_malloc(sizeof(struct posix_event));; 2686 if (ret == 0) {; 2687 /* out of memory */; 2688 return 0;; 2689 }; 2690 if (0 != pthread_mutex_init(&(ret->mutex), NULL)) {; 2691 /* pthread mutex not available */; 2692 mg_free(ret);; 2693 return 0;; 2694 }; 2695 if (0 != pthread_cond_init(&(ret->cond), NULL)) {; 2696 /* pthread cond not available */; 2697 pthread_mutex_destroy(&(ret->mutex));; 2698 mg_free(ret);; 2699 return 0;; 2700 }; 2701 ret->signaled = 0;; 2702 return (void *)ret;; 2703}; 2704 ; 2705 ; 2706static int; 2707event_wait(void *eventhdl); 2708{; 2709 struct posix_event *ev = (struct posix_event *)eventhdl;; 2710 pthread_mutex_lock(&(ev->mutex));; 2711 while (!ev->signaled) {; 2712 pthread_cond_wait(&(ev->cond), &(ev->mutex));; 2713 }; 2714 ev->signaled = 0;; 2715 pthread_mutex_unlock(&(ev->mutex));; 2716 return 1;; 2717}; 2718 ; 2719 ; 2720static int; 2721event_signal(void *eventhdl); 2722{; 2723 struct posix_event *ev = (struct posix_event *)eventhdl;; 2724 pthread_mutex_lock(&(ev->mutex));; 2725 pthread_cond_signal(&(ev->cond));; 2726 ev->signaled = 1;; 2727 pthread_mutex_unlock(&(ev->mutex));; 2728 return 1;; 2729}; 2730 ; 2731 ; 2732static void; 2733event_destroy(voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:83135,avail,available,83135,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['avail'],['available']
Availability,39.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minimum Test error found - save the configuration ; : 1062 | 3.14929 3.19749 0.0201067 0.00181963 43746.8 0; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 | 3.05672 2.86026 0.0203982 0.00182711 43077.7 0; : 1068 | 3.10603 3.29637 0.020205 0.00184144 43564.6 1; : 1069 | 2.88449 4.01918 0.0203768 0.00179741 43058.4 2; : 1070 | 2.97807 3.34364 0.0200746 0.00174903 43654.8 3; : 1071 | 3.12106 3.50221 0.0203054 0.0017782 43179.8 4; : 1072 | 2.87393 2.91962 0.020149 0.001768 43523.2 5; : 1073 | 2.90826 3.29161 0.0202848 0.00180763 43296.8 6; : 1074 | 3.06053 3.26664 0.0201588 0.00175733 43474.8 7; : 1075 Minimum Test error found - save the configuration ; : 1075 | 2.97935 2.76485 0.0202008 0.00187279 43649.1 0; : 1076 | 2.74949 3.00321 0.0203478 0.00181324 43162.6 1; : 1077 | 2.76284 3.75591 0.0207943 0.00180912 42138.1 2; : 1078 Minimum Test error found - save the configuration ; : 1078 | 3.00913 2.73577 0.0203661 0.0018517 43209.6 0; : 1079 | 2.90364 3.01716 0.0202612 0.00175591 43230.9 1; : 1080 | 2.84249 3.41706 0.0201644 0.00176658 43483.3 2; : 1081 | 2.8573 3.42383 0.0204284 0.00175777 42848.1 3; :,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:117512,error,error,117512,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"3918 of file TGCocoa.mm. ◆ SetDoubleBuffer(). void TGCocoa::SetDoubleBuffer ; (; Int_t ; wid, . Int_t ; mode . ). overridevirtual . Sets the double buffer on/off on the window ""wid"". ; Parameters. [in]widwindow identifier.; 999 means all opened windows. . [in]modethe on/off switch; mode = 1 double buffer is on; mode = 0 double buffer is off . Reimplemented from TVirtualX.; Definition at line 3441 of file TGCocoa.mm. ◆ SetDoubleBufferOFF(). void TGCocoa::SetDoubleBufferOFF ; (; ). overridevirtual . Turns double buffer mode off. ; Reimplemented from TVirtualX.; Definition at line 3456 of file TGCocoa.mm. ◆ SetDoubleBufferON(). void TGCocoa::SetDoubleBufferON ; (; ). overridevirtual . Turns double buffer mode on. ; Reimplemented from TVirtualX.; Definition at line 3462 of file TGCocoa.mm. ◆ SetDrawMode(). void TGCocoa::SetDrawMode ; (; EDrawMode ; mode). overridevirtual . Sets the drawing mode. ; Parameters. [in]modedrawing mode.; mode = 1 copy; mode = 2 xor; mode = 3 invert; mode = 4 set the suitable mode for cursor echo according to the vendor . Reimplemented from TVirtualX.; Definition at line 3495 of file TGCocoa.mm. ◆ SetForeground(). void TGCocoa::SetForeground ; (; GContext_t ; gc, . ULong_t ; foreground . ). overridevirtual . Sets the foreground color for the specified GC (shortcut for ChangeGC with only foreground mask set). ; Parameters. [in]gcspecifies the GC ; [in]foregroundthe foreground you want to set. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 2995 of file TGCocoa.mm. ◆ SetIconName(). void TGCocoa::SetIconName ; (; Window_t ; id, . char * ; name . ). overridevirtual . Sets the window icon name. ; Reimplemented from TVirtualX.; Definition at line 1533 of file TGCocoa.mm. ◆ SetIconPixmap(). void TGCocoa::SetIconPixmap ; (; Window_t ; id, . Pixmap_t ; pix . ). overridevirtual . Sets the icon name pixmap. ; Reimplemented from TVirtualX.; Definition at line 1539 of file TGCocoa.mm. ◆ SetInputFocus(). void TGCocoa:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:116624,echo,echo,116624,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['echo'],['echo']
Availability,"394 of file TGCocoa.mm. ◆ GetFontHandle(). FontH_t TGCocoa::GetFontHandle ; (; FontStruct_t ; fs). overridevirtual . Returns the font handle of the specified font structure ""fs"". ; Reimplemented from TVirtualX.; Definition at line 2829 of file TGCocoa.mm. ◆ GetFontProperties(). void TGCocoa::GetFontProperties ; (; FontStruct_t ; font, . Int_t & ; max_ascent, . Int_t & ; max_descent . ). overridevirtual . Returns the font properties. ; Reimplemented from TVirtualX.; Definition at line 2856 of file TGCocoa.mm. ◆ GetFontStruct(). FontStruct_t TGCocoa::GetFontStruct ; (; FontH_t ; fh). overridevirtual . Retrieves the associated font structure of the font specified font handle ""fh"". ; Free returned FontStruct_t using FreeFontStruct(). ; Reimplemented from TVirtualX.; Definition at line 2863 of file TGCocoa.mm. ◆ GetGCValues(). void TGCocoa::GetGCValues ; (; GContext_t ; gc, . GCValues_t & ; gval . ). overridevirtual . Returns the components specified by the mask in ""gval"" for the specified GC ""gc"" (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 3090 of file TGCocoa.mm. ◆ GetGeometry(). void TGCocoa::GetGeometry ; (; Int_t ; wid, . Int_t & ; x, . Int_t & ; y, . UInt_t & ; w, . UInt_t & ; h . ). overridevirtual . Returns position and size of window ""wid"". ; Parameters. [in]widwindow identifier if wid < 0 the size of the display is returned ; [in]x,yreturned window position ; [in]w,hreturned window size . Reimplemented from TVirtualX.; Definition at line 707 of file TGCocoa.mm. ◆ GetImageSize(). void TGCocoa::GetImageSize ; (; Drawable_t ; id, . UInt_t & ; width, . UInt_t & ; height . ). overridevirtual . Returns the width and height of the image id. ; Reimplemented from TVirtualX.; Definition at line 2589 of file TGCocoa.mm. ◆ GetInputFocus(). Window_t TGCocoa::GetInputFocus ; (; ). overridevirtual . Returns the window id of the window having the input focus. ; Reimplemented from TVirtualX.; Definition at line 2768 of file TGCocoa.mm.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:84656,mask,mask,84656,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['mask'],['mask']
Availability,"396 conn->in_error_handler = 1;; 4397 handled_by_callback =; 4398 (conn->phys_ctx->callbacks.http_error(conn, status, errmsg_buf); 4399 == 0);; 4400 conn->in_error_handler = 0;; 4401 }; 4402 ; 4403 if (!handled_by_callback) {; 4404 /* Check for recursion */; 4405 if (conn->in_error_handler) {; 4406 DEBUG_TRACE(; 4407 ""Recursion when handling error %u - fall back to default"",; 4408 status);; 4409#if !defined(NO_FILESYSTEMS); 4410 } else {; 4411 /* Send user defined error pages, if defined */; 4412 error_handler = conn->dom_ctx->config[ERROR_PAGES];; 4413 error_page_file_ext = conn->dom_ctx->config[INDEX_FILES];; 4414 page_handler_found = 0;; 4415 ; 4416 if (error_handler != NULL) {; 4417 for (scope = 1; (scope <= 3) && !page_handler_found; scope++) {; 4418 switch (scope) {; 4419 case 1: /* Handler for specific error, e.g. 404 error */; 4420 mg_snprintf(conn,; 4421 &truncated,; 4422 path_buf,; 4423 sizeof(path_buf) - 32,; 4424 ""%serror%03u."",; 4425 error_handler,; 4426 status);; 4427 break;; 4428 case 2: /* Handler for error group, e.g., 5xx error; 4429 * handler; 4430 * for all server errors (500-599) */; 4431 mg_snprintf(conn,; 4432 &truncated,; 4433 path_buf,; 4434 sizeof(path_buf) - 32,; 4435 ""%serror%01uxx."",; 4436 error_handler,; 4437 status / 100);; 4438 break;; 4439 default: /* Handler for all errors */; 4440 mg_snprintf(conn,; 4441 &truncated,; 4442 path_buf,; 4443 sizeof(path_buf) - 32,; 4444 ""%serror."",; 4445 error_handler);; 4446 break;; 4447 }; 4448 ; 4449 /* String truncation in buf may only occur if; 4450 * error_handler is too long. This string is; 4451 * from the config, not from a client. */; 4452 (void)truncated;; 4453 ; 4454 /* The following code is redundant, but it should avoid; 4455 * false positives in static source code analyzers and; 4456 * vulnerability scanners.; 4457 */; 4458 path_buf[sizeof(path_buf) - 32] = 0;; 4459 len = (int)strlen(path_buf);; 4460 if (len > (int)sizeof(path_buf) - 32) {; 4461 len = (int)sizeof(path_buf) - 32;; 4462 };",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:132487,error,error,132487,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"397 conn->in_error_handler = 1;; 4398 handled_by_callback =; 4399 (conn->phys_ctx->callbacks.http_error(conn, status, errmsg_buf); 4400 == 0);; 4401 conn->in_error_handler = 0;; 4402 }; 4403 ; 4404 if (!handled_by_callback) {; 4405 /* Check for recursion */; 4406 if (conn->in_error_handler) {; 4407 DEBUG_TRACE(; 4408 ""Recursion when handling error %u - fall back to default"",; 4409 status);; 4410#if !defined(NO_FILESYSTEMS); 4411 } else {; 4412 /* Send user defined error pages, if defined */; 4413 error_handler = conn->dom_ctx->config[ERROR_PAGES];; 4414 error_page_file_ext = conn->dom_ctx->config[INDEX_FILES];; 4415 page_handler_found = 0;; 4416 ; 4417 if (error_handler != NULL) {; 4418 for (scope = 1; (scope <= 3) && !page_handler_found; scope++) {; 4419 switch (scope) {; 4420 case 1: /* Handler for specific error, e.g. 404 error */; 4421 mg_snprintf(conn,; 4422 &truncated,; 4423 path_buf,; 4424 sizeof(path_buf) - 32,; 4425 ""%serror%03u."",; 4426 error_handler,; 4427 status);; 4428 break;; 4429 case 2: /* Handler for error group, e.g., 5xx error; 4430 * handler; 4431 * for all server errors (500-599) */; 4432 mg_snprintf(conn,; 4433 &truncated,; 4434 path_buf,; 4435 sizeof(path_buf) - 32,; 4436 ""%serror%01uxx."",; 4437 error_handler,; 4438 status / 100);; 4439 break;; 4440 default: /* Handler for all errors */; 4441 mg_snprintf(conn,; 4442 &truncated,; 4443 path_buf,; 4444 sizeof(path_buf) - 32,; 4445 ""%serror."",; 4446 error_handler);; 4447 break;; 4448 }; 4449 ; 4450 /* String truncation in buf may only occur if; 4451 * error_handler is too long. This string is; 4452 * from the config, not from a client. */; 4453 (void)truncated;; 4454 ; 4455 /* The following code is redundant, but it should avoid; 4456 * false positives in static source code analyzers and; 4457 * vulnerability scanners.; 4458 */; 4459 path_buf[sizeof(path_buf) - 32] = 0;; 4460 len = (int)strlen(path_buf);; 4461 if (len > (int)sizeof(path_buf) - 32) {; 4462 len = (int)sizeof(path_buf) - 32;; 4463 };",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:132519,error,error,132519,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"397 return SSL_TLSEXT_ERR_OK;; 16398 }; 16399 }; 16400 }; 16401 ; 16402 /* Nothing found */; 16403 return SSL_TLSEXT_ERR_NOACK;; 16404}; 16405 ; 16406 ; 16407static int; 16408next_protos_advertised_cb(SSL *ssl,; 16409 const unsigned char **data,; 16410 unsigned int *len,; 16411 void *arg); 16412{; 16413 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16414 *data = (const unsigned char *)alpn_proto_list;; 16415 *len = (unsigned int)strlen((const char *)data);; 16416 ; 16417 (void)ssl;; 16418 (void)dom_ctx;; 16419 ; 16420 return SSL_TLSEXT_ERR_OK;; 16421}; 16422 ; 16423 ; 16424static int; 16425init_alpn(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 16426{; 16427 unsigned int alpn_len = (unsigned int)strlen((char *)alpn_proto_list);; 16428 int ret = SSL_CTX_set_alpn_protos(dom_ctx->ssl_ctx,; 16429 (const unsigned char *)alpn_proto_list,; 16430 alpn_len);; 16431 if (ret != 0) {; 16432 mg_cry_ctx_internal(phys_ctx,; 16433 ""SSL_CTX_set_alpn_protos error: %s"",; 16434 ssl_error());; 16435 }; 16436 ; 16437 SSL_CTX_set_alpn_select_cb(dom_ctx->ssl_ctx,; 16438 alpn_select_cb,; 16439 (void *)dom_ctx);; 16440 ; 16441 SSL_CTX_set_next_protos_advertised_cb(dom_ctx->ssl_ctx,; 16442 next_protos_advertised_cb,; 16443 (void *)dom_ctx);; 16444 ; 16445 return ret;; 16446}; 16447#endif; 16448 ; 16449 ; 16450/* Setup SSL CTX as required by CivetWeb */; 16451static int; 16452init_ssl_ctx_impl(struct mg_context *phys_ctx,; 16453 struct mg_domain_context *dom_ctx,; 16454 const char *pem,; 16455 const char *chain); 16456{; 16457 int callback_ret;; 16458 int should_verify_peer;; 16459 int peer_certificate_optional;; 16460 const char *ca_path;; 16461 const char *ca_file;; 16462 int use_default_verify_paths;; 16463 int verify_depth;; 16464 struct timespec now_mt;; 16465 md5_byte_t ssl_context_id[16];; 16466 md5_state_t md5state;; 16467 int protocol_ver;; 16468 int ssl_cache_timeout;; 16469 ; 16470#if (defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0)) \",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:486021,error,error,486021,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"398 return SSL_TLSEXT_ERR_OK;; 16399 }; 16400 }; 16401 }; 16402 ; 16403 /* Nothing found */; 16404 return SSL_TLSEXT_ERR_NOACK;; 16405}; 16406 ; 16407 ; 16408static int; 16409next_protos_advertised_cb(SSL *ssl,; 16410 const unsigned char **data,; 16411 unsigned int *len,; 16412 void *arg); 16413{; 16414 struct mg_domain_context *dom_ctx = (struct mg_domain_context *)arg;; 16415 *data = (const unsigned char *)alpn_proto_list;; 16416 *len = (unsigned int)strlen((const char *)data);; 16417 ; 16418 (void)ssl;; 16419 (void)dom_ctx;; 16420 ; 16421 return SSL_TLSEXT_ERR_OK;; 16422}; 16423 ; 16424 ; 16425static int; 16426init_alpn(struct mg_context *phys_ctx, struct mg_domain_context *dom_ctx); 16427{; 16428 unsigned int alpn_len = (unsigned int)strlen((char *)alpn_proto_list);; 16429 int ret = SSL_CTX_set_alpn_protos(dom_ctx->ssl_ctx,; 16430 (const unsigned char *)alpn_proto_list,; 16431 alpn_len);; 16432 if (ret != 0) {; 16433 mg_cry_ctx_internal(phys_ctx,; 16434 ""SSL_CTX_set_alpn_protos error: %s"",; 16435 ssl_error());; 16436 }; 16437 ; 16438 SSL_CTX_set_alpn_select_cb(dom_ctx->ssl_ctx,; 16439 alpn_select_cb,; 16440 (void *)dom_ctx);; 16441 ; 16442 SSL_CTX_set_next_protos_advertised_cb(dom_ctx->ssl_ctx,; 16443 next_protos_advertised_cb,; 16444 (void *)dom_ctx);; 16445 ; 16446 return ret;; 16447}; 16448#endif; 16449 ; 16450 ; 16451/* Setup SSL CTX as required by CivetWeb */; 16452static int; 16453init_ssl_ctx_impl(struct mg_context *phys_ctx,; 16454 struct mg_domain_context *dom_ctx,; 16455 const char *pem,; 16456 const char *chain); 16457{; 16458 int callback_ret;; 16459 int should_verify_peer;; 16460 int peer_certificate_optional;; 16461 const char *ca_path;; 16462 const char *ca_file;; 16463 int use_default_verify_paths;; 16464 int verify_depth;; 16465 struct timespec now_mt;; 16466 md5_byte_t ssl_context_id[16];; 16467 md5_state_t md5state;; 16468 int protocol_ver;; 16469 int ssl_cache_timeout;; 16470 ; 16471#if (defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0)) \",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:486054,error,error,486054,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"3997 while (iter != theEnd) {; 3998 alternateTuple << "" "" << *iter << "" _"" << nMember << "";\n"";; 3999 ++iter;; 4000 ++nMember;; 4001 }; 4002 break;; 4003 }; 4004 case ETupleOrdering::kDescending: {; 4005 unsigned int nMember = tupleContent.fElements.size() - 3;; 4006 auto iter = tupleContent.fElements.rbegin() + 1; // skip the 'stars'.; 4007 auto theEnd = tupleContent.fElements.rend() - 1; // Skip the template name (tuple).; 4008 while (iter != theEnd) {; 4009 alternateTuple << "" "" << *iter << "" _"" << nMember << "";\n"";; 4010 ++iter;; 4011 --nMember;; 4012 }; 4013 break;; 4014 }; 4015 case ETupleOrdering::kUnexpected: {; 4016 Fatal(""TCling::SetClassInfo::AlternateTuple"",; 4017 ""Layout of std::tuple on this platform is unexpected."");; 4018 break;; 4019 }; 4020 }; 4021 ; 4022 alternateTuple << ""};\n"";; 4023 alternateTuple << ""}}\n"";; 4024 alternateTuple << ""#endif\n"";; 4025 if (!gCling->Declare(alternateTuple.str().c_str())); 4026 {; 4027 // Declare is not silent (yet?), so add an explicit error message; 4028 // to indicate the consequence of the syntax errors.; 4029 Error(""Load"",""Could not declare %s"",alternateName.c_str());; 4030 return """";; 4031 }; 4032 alternateName = ""ROOT::Internal::"" + alternateName;; 4033 return alternateName;; 4034}; 4035 ; 4036////////////////////////////////////////////////////////////////////////////////; 4037/// Set pointer to the TClingClassInfo in TClass.; 4038/// If 'reload' is true, (attempt to) generate a new ClassInfo even if we; 4039/// already have one.; 4040 ; 4041void TCling::SetClassInfo(TClass* cl, Bool_t reload, Bool_t silent); 4042{; 4043 // We are shutting down, there is no point in reloading, it only triggers; 4044 // redundant deserializations.; 4045 if (fIsShuttingDown) {; 4046 // Remove the decl_id from the DeclIdToTClass map; 4047 if (cl->fClassInfo) {; 4048 R__LOCKGUARD(gInterpreterMutex);; 4049 TClingClassInfo* TClinginfo = (TClingClassInfo*) cl->fClassInfo;; 4050 // Test again as another thread may have set fClassInf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:155646,error,error,155646,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,"3::PutStats(stats);; 1178 fTsumwt = stats[11];; 1179 fTsumwt2 = stats[12];; 1180}; 1181 ; 1182////////////////////////////////////////////////////////////////////////////////; 1183/// Reset contents of a Profile3D histogram.; 1184 ; 1185void TProfile3D::Reset(Option_t *option); 1186{; 1187 TH3D::Reset(option);; 1188 fBinSumw2.Reset();; 1189 fBinEntries.Reset();; 1190 TString opt = option;; 1191 opt.ToUpper();; 1192 if (opt.Contains(""ICE"") && !opt.Contains(""S"")) return;; 1193 fTsumwt = fTsumwt2 = 0;; 1194}; 1195 ; 1196////////////////////////////////////////////////////////////////////////////////; 1197/// Profile histogram is resized along axis such that x is in the axis range.; 1198/// The new axis limits are recomputed by doubling iteratively; 1199/// the current axis range until the specified value x is within the limits.; 1200/// The algorithm makes a copy of the histogram, then loops on all bins; 1201/// of the old histogram to fill the rebinned histogram.; 1202/// Takes into account errors (Sumw2) if any.; 1203/// The axis must be rebinnable before invoking this function.; 1204/// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`; 1205 ; 1206void TProfile3D::ExtendAxis(Double_t x, TAxis *axis); 1207{; 1208 TProfile3D* hold = TProfileHelper::ExtendAxis(this, x, axis);; 1209 if ( hold ) {; 1210 fTsumwt = hold->fTsumwt;; 1211 fTsumwt2 = hold->fTsumwt2;; 1212 delete hold;; 1213 }; 1214}; 1215 ; 1216////////////////////////////////////////////////////////////////////////////////; 1217/// Save primitive as a C++ statement(s) on output stream out.; 1218///; 1219/// Note the following restrictions in the code generated:; 1220/// - variable bin size not implemented; 1221/// - SetErrorOption not implemented; 1222 ; 1223void TProfile3D::SavePrimitive(std::ostream &out, Option_t *option /*= """"*/); 1224{; 1225 char quote = '""';; 1226 out <<"" ""<<std::endl;; 1227 out <<"" ""<<ClassName()<<"" *"";; 1228 ; 1229 out << GetName() << "" = new "" << ClassName() << ""("" << quote; 1230 << GetName() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:45809,error,errors,45809,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['error'],['errors']
Availability,3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97394,error,error,97394,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"3; ROOT::Fit::EChisquareType::kPLikeRatio@ kPLikeRatio; ROOT::Fit::EChisquareType::kNeyman@ kNeyman; ROOT::Fit::EChisquareType::kPearson@ kPearson; ROOT::gCoreMutexR__EXTERN TVirtualRWMutex * gCoreMutexDefinition TVirtualRWMutex.h:37; TMath::IsNaNBool_t IsNaN(Double_t x)Definition TMath.h:892; TMath::NintInt_t Nint(T x)Round to nearest integer. Rounds half integers to the nearest even integer.Definition TMath.h:693; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::ProbDouble_t Prob(Double_t chi2, Int_t ndf)Computation of the probability for a certain Chi-squared (chi2) and number of degrees of freedom (ndf...Definition TMath.cxx:637; TMath::MedianDouble_t Median(Long64_t n, const T *a, const Double_t *w=nullptr, Long64_t *work=nullptr)Same as RMS.Definition TMath.h:1272; TMath::QuietNaNDouble_t QuietNaN()Returns a quiet NaN as defined by IEEE 754.Definition TMath.h:902; TMath::FloorDouble_t Floor(Double_t x)Rounds x downward, returning the largest integral value that is not greater than x.Definition TMath.h:680; TMath::ATanDouble_t ATan(Double_t)Returns the principal value of the arc tangent of x, expressed in radians.Definition TMath.h:640; TMath::CeilDouble_t Ceil(Double_t x)Rounds x upward, returning the smallest integral value that is not less than x.Definition TMath.h:668; TMath::MinElementT MinElement(Long64_t n, const T *a)Returns minimum of array a of length n.Definition TMath.h:960; TMath::LogDouble_t Log(Double_t x)Returns the natural logarithm of x.Definition TMath.h:756; TMath::SqrtDouble_t Sqrt(Double_t x)Returns the square root of x.Definition TMath.h:662; TMath::PowerLongDouble_t Power(LongDouble_t x, LongDouble_t y)Returns x raised to the power y.Definition TMath.h:721; TMath::MinShort_t Min(Short_t a, Short_t b)Returns the smallest of a and b.Definition TMathBase.h:198; TMath::Piconstexpr Double_t Pi()Definition TMath.h:37; TMath::AreEqualRelBool_t AreEqualRel(Double_t af, Double_t bf, Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:476165,down,downward,476165,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['down'],['downward']
Availability,"3D histogram. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Scale (Double_t c1=1, Option_t *option="""") override;  Multiply this profile2D by a constant c1. ;  ; virtual void SetBinEntries (Int_t bin, Double_t w);  Set the number of entries in bin. ;  ; void SetBins (Int_t nbinsx, Double_t xmin, Double_t xmax, Int_t nbinsy, Double_t ymin, Double_t ymax, Int_t nbinsz, Double_t zmin, Double_t zmax) override;  Redefine x, y and z axis parameters. ;  ; void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins) override;  Redefine x, y and z axis parameters with variable bin sizes. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow. ;  ; void SetBuffer (Int_t buffersize, Option_t *opt="""") override;  Set the buffer size in units of 8 bytes (double). ;  ; virtual void SetErrorOption (Option_t *option="""");  Set option to compute profile3D errors. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH3D. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Sumw2 (Bool_t flag=kTRUE) override;  Create/Delete structure to store sum of squares of weights per bin This is needed to compute the correct statistical quantities of a profile filled with weights. ;  ;  Public Member Functions inherited from TH3D;  TH3D ();  Constructor. ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, const Double_t *xbins, Int_t nbinsy, const Double_t *ybins, Int_t nbinsz, const Double_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const char *name, const char *title, Int_t nbinsx, const Float_t *xbins, Int_t nbinsy, const Float_t *ybins, Int_t nbinsz, const Float_t *zbins);  Constructor for variable bin size 3-D histograms (see TH3::TH3 for explanation of parameters) ;  ;  TH3D (const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:8431,error,errors,8431,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['error'],['errors']
Availability,"3D.cxx:1288; TProfile3D::BuildOptionsvoid BuildOptions(Double_t tmin, Double_t tmax, Option_t *option)Set Profile3D histogram structure and options.Definition TProfile3D.cxx:141; TProfile3D::Classstatic TClass * Class(); TProfile3D::FillInt_t Fill(const Double_t *v)Definition TProfile3D.h:53; TProfile3D::fBinSumw2TArrayD fBinSumw2Array of sum of squares of weights per bin.Definition TProfile3D.h:41; TProfile3D::GetBDouble_t * GetB()Definition TProfile3D.h:73; TProfile3D::BufferEmptyInt_t BufferEmpty(Int_t action=0) overrideFill histogram with all entries in the buffer.Definition TProfile3D.cxx:246; TProfile3D::SetBuffervoid SetBuffer(Int_t buffersize, Option_t *opt="""") overrideSet the buffer size in units of 8 bytes (double).Definition TProfile3D.cxx:1327; TProfile3D::SavePrimitivevoid SavePrimitive(std::ostream &out, Option_t *option="""") overrideSave primitive as a C++ statement(s) on output stream out.Definition TProfile3D.cxx:1223; TProfile3D::SetErrorOptionvirtual void SetErrorOption(Option_t *option="""")Set option to compute profile3D errors.Definition TProfile3D.cxx:1365; TProfile3D::ProjectionXYZvirtual TH3D * ProjectionXYZ(const char *name=""_pxyz"", Option_t *option=""e"") constProject this profile3D into a 3-D histogram along X,Y,Z.Definition TProfile3D.cxx:961; TProfile3D::AddBool_t Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overridePerforms the operation: this = this + c1*f1 .Definition TProfile3D.cxx:172; TProfile3D::GetBinContentDouble_t GetBinContent(Int_t bin) const overrideReturn bin content of a Profile3D histogram.Definition TProfile3D.cxx:691; TProfile3D::fErrorModeEErrorType fErrorModeOption to compute errors.Definition TProfile3D.h:35; TProfile3D::SetBinsLengthvoid SetBinsLength(Int_t n=-1) overrideSet total number of bins including under/overflow.Definition TProfile3D.cxx:1318; TProfile3D::GetBinEntriesvirtual Double_t GetBinEntries(Int_t bin) constReturn bin entries of a Profile3D histogram.Definition TProfile3D.cxx:704; TProfile3D::GetW2Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:67614,error,errors,67614,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['error'],['errors']
Availability,"3\anchor C03; 184## Bright and dark colors; 185Dark and bright colors are used to add 3D effects to graphical objects like; 186TWbox, TPave, TPaveText, TPaveLabel, etc. and in colored lego plots.; 187 ; 188Two static functions are available that return the bright or dark color number corresponding; 189to a given color index. If these variants don't already exist, they are created as needed:; 190~~~ {.cpp}; 191 Int_t dark = TColor::GetColorDark(color_index);; 192 Int_t bright = TColor::GetColorBright(color_index);; 193~~~; 194 ; 195\anchor C031; 196## Accessible Color Schemes; 197Choosing an appropriate color scheme is essential for making results easy to understand and; 198interpret. Factors like colorblindness and converting colors to grayscale for publications; 199can impact accessibility. Furthermore, results should be aesthetically pleasing. The following; 200three color schemes, recommended by M. Petroff in [arXiv:2107.02270v2](https://arxiv.org/pdf/2107.02270); 201and available on [GitHub](https://github.com/mpetroff/accessible-color-cycles); 202under the MIT License, meet these criteria.; 203 ; 204These three color schemes are available as color sets with 6, 8, and 10 colors, named; 205`kP[6, 8, 10]ColorName`. For example, `kP6Red` represents the red color within the P6 color scheme; 206(`P` for Petroff or Preferred).; 207 ; 208Begin_Macro; 209../../../tutorials/graphics/accessiblecolorschemes.C; 210End_Macro; 211 ; 212The example thstackcolorscheme.C illustrates how to use these color schemes in THStack drawings.; 213It also demonstrates that they are effective in grayscale.; 214 ; 215\anchor C04; 216## Grayscale view of of canvas with colors; 217One can toggle between a grayscale preview and the regular colored mode using; 218`TCanvas::SetGrayscale()`. Note that in grayscale mode, access via RGB; 219will return grayscale values according to ITU standards (and close to b&w; 220printer gray-scales), while access via HLS returns de-saturated gray-scales. The; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColor_8cxx_source.html:7153,avail,available,7153,doc/master/TColor_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TColor_8cxx_source.html,1,['avail'],['available']
Availability,"3]. TPServerSocket::TPServerSocket ; (; const TPServerSocket & ; ). privatedelete . ◆ TPServerSocket() [2/3]. TPServerSocket::TPServerSocket ; (; Int_t ; port, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object on a specified port. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 = no error (socket is valid) -1 = low level socket() call failed -2 = low level bind() call failed -3 = low level listen() call failed Every valid server socket is added to the TROOT sockets list which will make sure that any open sockets are properly closed on program termination. ; Definition at line 49 of file TPServerSocket.cxx. ◆ TPServerSocket() [3/3]. TPServerSocket::TPServerSocket ; (; const char * ; service, . Bool_t ; reuse = kFALSE, . Int_t ; backlog = kDefaultBacklog, . Int_t ; tcpwindowsize = -1 . ). Create a parallel server socket object for a named service. ; Set reuse to true to force reuse of the server socket (i.e. do not wait for the time out to pass). Using backlog one can set the desirable queue length for pending connections. Use tcpwindowsize to specify the size of the receive buffer, it has to be specified here to make sure the window scale option is set (for tcpwindowsize > 65KB and for platforms supporting window scaling). Use IsValid() to check the validity of the server socket. In case server socket is not valid use GetErrorCode() to obtain the specific error value. These values are: 0 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPServerSocket.html:20514,error,error,20514,doc/master/classTPServerSocket.html,https://root.cern,https://root.cern/doc/master/classTPServerSocket.html,1,['error'],['error']
Availability,"3]. virtual void TH1::SetBinContent ; (; Int_t ; bin, . Int_t ; , . Int_t ; , . Double_t ; content . ). inlinevirtual . Reimplemented in TH3, TH2, and TH2Poly.; Definition at line 368 of file TH1.h. ◆ SetBinError() [1/3]. void TH1::SetBinError ; (; Int_t ; bin, . Double_t ; error . ). virtual . Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ; Note that in case the user sets after calling SetBinError explicitly a new bin content (e.g. using SetBinContent) he needs then to provide also the corresponding bin error (using SetBinError) since the bin error will not be recalculated after setting the content and a default error = 0 will be used for those bins.; See convention for numbering bins in TH1::GetBin ; Reimplemented in TH2Poly.; Definition at line 9206 of file TH1.cxx. ◆ SetBinError() [2/3]. void TH1::SetBinError ; (; Int_t ; binx, . Int_t ; biny, . Double_t ; error . ). virtual . See convention for numbering bins in TH1::GetBin. ; Reimplemented in TH2Poly.; Definition at line 9241 of file TH1.cxx. ◆ SetBinError() [3/3]. void TH1::SetBinError ; (; Int_t ; binx, . Int_t ; biny, . Int_t ; binz, . Double_t ; error . ). virtual . See convention for numbering bins in TH1::GetBin. ; Reimplemented in TH2Poly.; Definition at line 9251 of file TH1.cxx. ◆ SetBinErrorOption(). virtual void TH1::SetBinErrorOption ; (; EBinErrorOpt ; type). inlinevirtual . Definition at line 381 of file TH1.h. ◆ SetBins() [1/6]. void TH1::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins . ). virtual . Redefine x axis parameters with variable bin sizes. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1 ; Reimplemented in TProfile, TProfile2D, and TProfile3D.; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:204442,error,error,204442,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['error']
Availability,"4 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.868652; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.659892 0.620582 0.589558 0.0469541 20523.3 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.604286 0.594787 0.586926 0.0471912 20632.4 0; : 3 | 0.58117 0.603906 0.587335 0.047007 20609.7 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.57382 0.588714 0.592175 0.0469679 20425.3 0; : 5 | 0.569519 0.59535 0.590168 0.0468081 20494.7 1; : 6 | 0.567869 0.590023 0.589038 0.0469022 20541 2; : 7 Minimum Test error found - save the configuration ; : 7 | 0.561012 0.586993 0.590467 0.0471223 20495.3 0; : 8 | 0.559195 0.590522 0.590271 0.0471869 20505.1 1; : 9 | 0.558998 0.588766 0.598449 0.0469787 20193.3 2; : 10 | 0.555383 0.590075 0.591595 0.0470733 20451 3; : 11 Minimum Test error found - save the configuration ; : 11 | 0.555591 0.582449 0.595129 0.047292 20327.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.550993 0.581236 0.592181 0.0472746 20436.5 0; : 13 | 0.548186 0.58351 0.592876 0.0471057 20404.2 1; : 14 | 0.547427 0.581875 0.592374 0.0471592 20425 2; : 15 Minimum Test error found - save the configuratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:24371,error,error,24371,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['error'],['error']
Availability,"4 gInterpreter->SetClassInfo(this, kFALSE, silent); // sets fClassInfo pointer; 1585 if (fClassInfo) {; 1586 // This should be moved out of GetCheckSum itself however the last time; 1587 // we tried this cause problem, in particular in the end-of-process operation.; 1588 // fCheckSum = GetCheckSum(kLatestCheckSum);; 1589 } else {; 1590 if (!fClassInfo) {; 1591 if (IsZombie()) {; 1592 TClass::RemoveClass(this);; 1593 return;; 1594 }; 1595 }; 1596 }; 1597 }; 1598 }; 1599 if (!silent && (!fClassInfo && !fCanLoadClassInfo) && !isStl && !TClassEdit::IsArtificial(fName) &&; 1600 !TClassEdit::IsInterpreterDetail(fName.Data()) ) {; 1601 if (fState == kHasTClassInit) {; 1602 if (fImplFileLine == -1 && fClassVersion == 0) {; 1603 // We have a 'transient' class with a ClassDefInline and apparently no interpreter; 1604 // information. Since it is transient, it is more than likely that the lack; 1605 // will be harmles.; 1606 } else {; 1607 ::Error(""TClass::Init"", ""no interpreter information for class %s is available even though it has a TClass ""; 1608 ""initialization routine."",; 1609 fName.Data());; 1610 }; 1611 } else {; 1612 const bool ispairbase = TClassEdit::IsStdPairBase(fName.Data()) && !IsFromRootCling();; 1613 if (!ispairbase); 1614 ::Warning(""TClass::Init"", ""no dictionary for class %s is available"", fName.Data());; 1615 }; 1616 }; 1617 ; 1618 fgClassCount++;; 1619 SetUniqueID(fgClassCount);; 1620 ; 1621 // Make the typedef-expanded -> original hash table entries.; 1622 // There may be several entries for any given key.; 1623 // We only make entries if the typedef-expanded name; 1624 // is different from the original name.; 1625 TString resolvedThis;; 1626 if (!givenInfo && strchr (name, '<')) {; 1627 if ( fName != name) {; 1628 if (!fgClassTypedefHash) {; 1629 fgClassTypedefHash = new THashTable (100, 5);; 1630 fgClassTypedefHash->SetOwner (kTRUE);; 1631 }; 1632 ; 1633 fgClassTypedefHash->Add (new TNameMapNode (name, fName));; 1634 SetBit (kHasNameMapNode);; 1635 ; 163",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:62428,avail,available,62428,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['avail'],['available']
Availability,"4 if (!format_.IsDigit()) {; 285 Error(""TGraphErrors"", ""Incorrect input format! Allowed format tags are {\""%%lg\"",\""%%*lg\"" or \""%%*s\""}"");; 286 return ;; 287 }; 288 Int_t ntokens = format_.Length() ;; 289 if (ntokens < 2) {; 290 Error(""TGraphErrors"", ""Incorrect input format! Only %d tag(s) in format whereas at least 2 \""%%lg\"" tags are expected!"", ntokens);; 291 return ;; 292 }; 293 Int_t ntokensToBeSaved = 0 ;; 294 Bool_t * isTokenToBeSaved = new Bool_t [ntokens] ;; 295 for (Int_t idx = 0; idx < ntokens; idx++) {; 296 isTokenToBeSaved[idx] = TString::Format(""%c"", format_[idx]).Atoi() ; //atoi(&format_[idx]) does not work for some reason...; 297 if (isTokenToBeSaved[idx] == 1) {; 298 ntokensToBeSaved++ ;; 299 }; 300 }; 301 if (ntokens >= 2 && (ntokensToBeSaved < 2 || ntokensToBeSaved > 4)) { //first condition not to repeat the previous error message; 302 Error(""TGraphErrors"", ""Incorrect input format! There are %d \""%%lg\"" tag(s) in format whereas 2,3 or 4 are expected!"", ntokensToBeSaved);; 303 delete [] isTokenToBeSaved ;; 304 return ;; 305 }; 306 ; 307 // Initializing loop variables; 308 Bool_t isLineToBeSkipped = kFALSE; //empty and ill-formed lines; 309 char *token = nullptr;; 310 TString token_str = """";; 311 Int_t token_idx = 0;; 312 Double_t value[4]; //x,y,ex,ey buffers; 313 for (Int_t k = 0; k < 4; k++); 314 value[k] = 0.;; 315 Int_t value_idx = 0;; 316 ; 317 // Looping; 318 char *rest;; 319 while (std::getline(infile, line, '\n')) {; 320 if (!line.empty()) {; 321 if (line[line.size() - 1] == char(13)) { // removing DOS CR character; 322 line.erase(line.end() - 1, line.end()) ;; 323 }; 324 token = R__STRTOK_R(const_cast<char *>(line.c_str()), option, &rest);; 325 while (token != nullptr && value_idx < ntokensToBeSaved) {; 326 if (isTokenToBeSaved[token_idx]) {; 327 token_str = TString(token) ;; 328 token_str.ReplaceAll(""\t"", """") ;; 329 if (!token_str.IsFloat()) {; 330 isLineToBeSkipped = kTRUE ;; 331 break ;; 332 } else {; 333 value[value_idx] = token_str.At",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:10349,error,error,10349,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['error']
Availability,"4 if (error) {; 12565 mg_cry_internal(; 12566 conn,; 12567 ""%s"",; 12568 ""Websocket pull failed; closing connection"");; 12569 if (data != mem) {; 12570 mg_free(data);; 12571 }; 12572 break;; 12573 }; 12574 ; 12575 conn->data_len = conn->request_len;; 12576 ; 12577 } else {; 12578 ; 12579 mop = buf[0]; /* current mask and opcode, overwritten by; 12580 * memmove() */; 12581 ; 12582 /* Length of the message being read at the front of the; 12583 * queue. Cast to 31 bit is OK, since we limited; 12584 * data_len before. */; 12585 len = (size_t)data_len + header_len;; 12586 ; 12587 /* Copy the data payload into the data pointer for the; 12588 * callback. Cast to 31 bit is OK, since we; 12589 * limited data_len */; 12590 memcpy(data, buf + header_len, (size_t)data_len);; 12591 ; 12592 /* Move the queue forward len bytes */; 12593 memmove(buf, buf + len, body_len - len);; 12594 ; 12595 /* Mark the queue as advanced */; 12596 conn->data_len -= (int)len;; 12597 }; 12598 ; 12599 /* Apply mask if necessary */; 12600 if (mask_len > 0) {; 12601 for (i = 0; i < (size_t)data_len; i++) {; 12602 data[i] ^= mask[i & 3];; 12603 }; 12604 }; 12605 ; 12606 exit_by_callback = 0;; 12607 if (enable_ping_pong && ((mop & 0xF) == MG_WEBSOCKET_OPCODE_PONG)) {; 12608 /* filter PONG messages */; 12609 DEBUG_TRACE(""PONG from %s:%u"",; 12610 conn->request_info.remote_addr,; 12611 conn->request_info.remote_port);; 12612 /* No unanwered PINGs left */; 12613 ping_count = 0;; 12614 } else if (enable_ping_pong; 12615 && ((mop & 0xF) == MG_WEBSOCKET_OPCODE_PING)) {; 12616 /* reply PING messages */; 12617 DEBUG_TRACE(""Reply PING from %s:%u"",; 12618 conn->request_info.remote_addr,; 12619 conn->request_info.remote_port);; 12620 ret = mg_websocket_write(conn,; 12621 MG_WEBSOCKET_OPCODE_PONG,; 12622 (char *)data,; 12623 (size_t)data_len);; 12624 if (ret <= 0) {; 12625 /* Error: send failed */; 12626 DEBUG_TRACE(""Reply PONG failed (%i)"", ret);; 12627 break;; 12628 }; 12629 ; 12630 ; 12631 } else {; 12632 /* Exit t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:365879,mask,mask,365879,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['mask'],['mask']
Availability,"4 int once = 0;; 4515 if (flag == -1) {; 4516 flag = 0;; 4517 once = 1;; 4518 }; 4519 if (flag == MSG_PEEK); 4520 once = 1;; 4521 ; 4522 int n, nrecv = 0;; 4523 char *buf = (char *)buffer;; 4524 ; 4525 for (n = 0; n < length; n += nrecv) {; 4526 if ((nrecv = recv(sock, buf+n, length-n, flag)) <= 0) {; 4527 if (nrecv == 0); 4528 break; // EOF; 4529 if (flag == MSG_OOB) {; 4530 if (GetErrno() == EWOULDBLOCK); 4531 return -2;; 4532 else if (GetErrno() == EINVAL); 4533 return -3;; 4534 }; 4535 if (GetErrno() == EWOULDBLOCK); 4536 return -4;; 4537 else {; 4538 if (GetErrno() != EINTR); 4539 ::SysError(""TUnixSystem::UnixRecv"", ""recv"");; 4540 if (GetErrno() == EPIPE || GetErrno() == ECONNRESET); 4541 return -5;; 4542 else; 4543 return -1;; 4544 }; 4545 }; 4546 if (once); 4547 return nrecv;; 4548 }; 4549 return n;; 4550}; 4551 ; 4552////////////////////////////////////////////////////////////////////////////////; 4553/// Send exactly length bytes from buffer. Returns -1 in case of error,; 4554/// otherwise number of sent bytes. Returns -4 in case of kNoBlock and; 4555/// errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer; 4556/// (EPIPE || ECONNRESET).; 4557 ; 4558int TUnixSystem::UnixSend(int sock, const void *buffer, int length, int flag); 4559{; 4560 if (sock < 0) return -1;; 4561 ; 4562 int once = 0;; 4563 if (flag == -1) {; 4564 flag = 0;; 4565 once = 1;; 4566 }; 4567 ; 4568 int n, nsent = 0;; 4569 const char *buf = (const char *)buffer;; 4570 ; 4571 for (n = 0; n < length; n += nsent) {; 4572 if ((nsent = send(sock, buf+n, length-n, flag)) <= 0) {; 4573 if (nsent == 0); 4574 break;; 4575 if (GetErrno() == EWOULDBLOCK); 4576 return -4;; 4577 else {; 4578 if (GetErrno() != EINTR); 4579 ::SysError(""TUnixSystem::UnixSend"", ""send"");; 4580 if (GetErrno() == EPIPE || GetErrno() == ECONNRESET); 4581 return -5;; 4582 else; 4583 return -1;; 4584 }; 4585 }; 4586 if (once); 4587 return nsent;; 4588 }; 4589 return n;; 4590}; 4591 ; 4592//---- Dynamic Loading --------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:145817,error,error,145817,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,"4 of file TListOfFunctions.cxx. ◆ MakeIterator(). TIterator * TListOfFunctions::MakeIterator ; (; Bool_t ; dir = kIterForward); const. overridevirtual . Return a list iterator. ; Reimplemented from TList.; Definition at line 451 of file TListOfFunctions.cxx. ◆ MapObject(). void TListOfFunctions::MapObject ; (; TObject * ; obj). private . Add pair<id, object> to the map of functions and their ids. ; Definition at line 51 of file TListOfFunctions.cxx. ◆ operator=(). TListOfFunctions & TListOfFunctions::operator= ; (; const TListOfFunctions & ; ). privatedelete . ◆ RecursiveRemove(). void TListOfFunctions::RecursiveRemove ; (; TObject * ; obj). overridevirtual . Remove object from this collection and recursively remove the object from all other objects (and collections). ; This function overrides TCollection::RecursiveRemove that calls the Remove function. THashList::Remove cannot be called because it uses the hash value of the hash table. This hash value is not available anymore when RecursiveRemove is called from the TObject destructor. ; Reimplemented from THashList.; Definition at line 328 of file TListOfFunctions.cxx. ◆ Remove() [1/2]. TObject * TListOfFunctions::Remove ; (; TObject * ; obj). overridevirtual . Remove object from the list. ; Reimplemented from THashList.; Definition at line 341 of file TListOfFunctions.cxx. ◆ Remove() [2/2]. TObject * TListOfFunctions::Remove ; (; TObjLink * ; lnk). overridevirtual . Remove object via its objlink from the list. ; Reimplemented from THashList.; Definition at line 357 of file TListOfFunctions.cxx. ◆ Streamer(). void TListOfFunctions::Streamer ; (; TBuffer & ; b). overridevirtual . Stream all objects in the collection to or from the I/O buffer. ; Reimplemented from THashList. ◆ StreamerNVirtual(). void TListOfFunctions::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 102 of file TListOfFunctions.h. ◆ Unload() [1/2]. void TListOfFunctions::Unload ; (; ). Mark 'all func' as bei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTListOfFunctions.html:33178,avail,available,33178,doc/master/classTListOfFunctions.html,https://root.cern,https://root.cern/doc/master/classTListOfFunctions.html,1,['avail'],['available']
Availability,"4 out->write(&buffer.front(), buffer.size());; 2025 ; 2026 // Make sure it hits disk now.; 2027 out->flush();; 2028 ; 2029 return true;; 2030}; 2031 ; 2032////////////////////////////////////////////////////////////////////////////////; 2033/// Generates a PCH from the given ModuleGenerator and CompilerInstance.; 2034/// Returns true iff the PCH was successfully generated.; 2035static bool GenerateAllDict(TModuleGenerator &modGen, clang::CompilerInstance *compilerInstance,; 2036 const std::string &currentDirectory); 2037{; 2038 assert(modGen.IsPCH() && ""modGen must be in PCH mode"");; 2039 ; 2040 std::string iSysRoot(""/DUMMY_SYSROOT/include/"");; 2041 if (gBuildingROOT) iSysRoot = (currentDirectory + ""/"");; 2042 return WriteAST(modGen.GetModuleFileName(), compilerInstance, iSysRoot);; 2043}; 2044 ; 2045////////////////////////////////////////////////////////////////////////////////; 2046/// Includes all given headers in the interpreter. Returns true when we could; 2047/// include the headers and otherwise false on an error when including.; 2048static bool IncludeHeaders(const std::vector<std::string> &headers, cling::Interpreter &interpreter); 2049{; 2050 // If no headers are given, this is a no-op.; 2051 if (headers.empty()); 2052 return true;; 2053 ; 2054 // Turn every header name into an include and parse it in the interpreter.; 2055 std::stringstream includes;; 2056 for (const std::string &header : headers) {; 2057 includes << ""#include \"""" << header << ""\""\n"";; 2058 }; 2059 std::string includeListStr = includes.str();; 2060 auto result = interpreter.declare(includeListStr);; 2061 return result == cling::Interpreter::CompilationResult::kSuccess;; 2062}; 2063 ; 2064 ; 2065////////////////////////////////////////////////////////////////////////////////; 2066 ; 2067void AddPlatformDefines(std::vector<std::string> &clingArgs); 2068{; 2069 char platformDefines[64] = {0};; 2070#ifdef __INTEL_COMPILER; 2071 snprintf(platformDefines, 64, ""-DG__INTEL_COMPILER=%ld"", (long)_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:81131,error,error,81131,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['error'],['error']
Availability,"4#include ""TMultiGraph.h""; 35#include ""TList.h""; 36#include ""TError.h""; 37 ; 38 ; 39//#define DEBUG; 40#ifdef DEBUG; 41#include ""TClass.h""; 42#include <iostream>; 43#endif; 44 ; 45 ; 46namespace ROOT {; 47 ; 48namespace Fit {; 49 ; 50// add a namespace to distinguish from the Graph functions; 51namespace HFitInterface {; 52 ; 53 ; 54bool IsPointOutOfRange(const TF1 * func, const double * x) {; 55 // function to check if a point is outside range; 56 if (func ==nullptr) return false;; 57 return !func->IsInside(x);; 58}; 59 ; 60bool AdjustError(const DataOptions & option, double & error, double value = 1) {; 61 // adjust the given error according to the option; 62 // return false when point must be skipped.; 63 // When point error = 0, the point is kept if the option UseEmpty is set or if; 64 // fErrors1 is set and the point value is not zero.; 65 // The value should be used only for points representing counts (histograms), not for the graph.; 66 // In the graph points with zero errors are by default skipped indepentently of the value.; 67 // If one wants to keep the points, the option fUseEmpty must be set; 68 ; 69 if (error <= 0) {; 70 if (option.fUseEmpty || (option.fErrors1 && std::abs(value) > 0 ) ); 71 error = 1.; // set error to 1; 72 else; 73 return false; // skip bins with zero errors or empty; 74 } else if (option.fErrors1); 75 error = 1; // set all error to 1 for non-empty bins; 76 return true;; 77}; 78 ; 79void ExamineRange(const TAxis * axis, std::pair<double,double> range,int &hxfirst,int &hxlast) {; 80 // examine the range given with the pair on the given histogram axis; 81 // correct in case the bin values hxfirst hxlast; 82 double xlow = range.first;; 83 double xhigh = range.second;; 84#ifdef DEBUG; 85 std::cout << ""xlow "" << xlow << "" xhigh = "" << xhigh << std::endl;; 86#endif; 87 // ignore ranges specified outside histogram range; 88 int ilow = axis->FindFixBin(xlow);; 89 int ihigh = axis->FindFixBin(xhigh);; 90 if (ilow > hxlast || ihigh < hxfirst) {",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:2030,error,errors,2030,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,1,['error'],['errors']
Availability,"4, 3.0, 6.0);; RooGaussian g2(""g2"", ""g2"", x, mean, sigma_g2);; ; RooRealVar frac(""frac"", ""frac"", 0.5, 0.0, 1.0);; RooAddPdf model(""model"", ""model"", RooArgList(g1, g2), frac);; ; // Generate 1000 events; std::unique_ptr<RooDataSet> data{model.generate(x, 1000)};; ; // Construct unbinned likelihood of model w.r.t. data; std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};; ; // I n t e r a c t i v e m i n i m i z a t i o n , e r r o r a n a l y s i s; // -------------------------------------------------------------------------------; ; // Create MINUIT interface object; RooMinimizer m(*nll);; ; // Activate verbose logging of MINUIT parameter space stepping; m.setVerbose(true);; ; // Call MIGRAD to minimize the likelihood; m.migrad();; ; // Print values of all parameters, that reflect values (and error estimates); // that are back propagated from MINUIT; std::unique_ptr<RooArgSet>{model.getParameters(x)}->Print(""s"");; ; // Disable verbose logging; m.setVerbose(false);; ; // Run HESSE to calculate errors from d2L/dp2; m.hesse();; ; // Print value (and error) of sigma_g2 parameter, that reflects; // value and error back propagated from MINUIT; sigma_g2.Print();; ; // Run MINOS on sigma_g2 parameter only; m.minos(sigma_g2);; ; // Print value (and error) of sigma_g2 parameter, that reflects; // value and error back propagated from MINUIT; sigma_g2.Print();; ; // S a v i n g r e s u l t s , c o n t o u r p l o t s; // ---------------------------------------------------------; ; // Save a snapshot of the fit result. This object contains the initial; // fit parameters, the final fit parameters, the complete correlation; // matrix, the EDM, the minimized FCN , the last MINUIT status code and; // the number of times the RooFit function object has indicated evaluation; // problems (e.g. zero probabilities during likelihood evaluation); std::unique_ptr<RooFitResult> fitResult{m.save()};; ; // Make contour plot of mx vs sx at 1,2,3 sigma; RooPlot *frame = m.contour(frac, sigma_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf601__intminuit_8C.html:2016,error,errors,2016,doc/master/rf601__intminuit_8C.html,https://root.cern,https://root.cern/doc/master/rf601__intminuit_8C.html,1,['error'],['errors']
Availability,"4, p5, p6, p7, p8;; 198 Double_t px2, py2;; 199 p2 = p3 = p4 = p5 = p6 = p7 = p8 = kFALSE;; 200 if (!gPad->IsEditable()) return;; 201 switch (event) {; 202 case kMouseMotion:; 203 px1 = gPad->XtoAbsPixel(TMath::Cos(GetAngle()));; 204 py1 = gPad->YtoAbsPixel(TMath::Sin(GetAngle()));; 205 d1 = TMath::Abs(px1 - px) + TMath::Abs(py1-py); //simply take sum of pixels differences; 206 p1 = kFALSE;; 207 px2 = gPad->XtoAbsPixel(-1);; 208 py2 = gPad->YtoAbsPixel(1);; 209 d2 = (Int_t)(TMath::Abs(px2 - px) + TMath::Abs(py2 - py)) ;; 210 px3 = gPad->XtoAbsPixel(-1);; 211 py3 = gPad->YtoAbsPixel(-1);; 212 d3 = TMath::Abs(px3 - px) + TMath::Abs(py3 - py) ; //simply take sum of pixels differences; 213 // check if point is close to the radial axis; 214 if (d1 < kMaxDiff) {; 215 gPad->SetCursor(kMove);; 216 p1 = kTRUE;; 217 }; 218 // check if point is close to the left high axis; 219 if ( d2 < kMaxDiff) {; 220 gPad->SetCursor(kHand);; 221 p7 = kTRUE;; 222 }; 223 // check if point is close to the left down axis; 224 if ( d3 < kMaxDiff) {; 225 gPad->SetCursor(kHand);; 226 p8 = kTRUE;; 227 }; 228 // check if point is close to a main circle; 229 if (!p1 && !p7 ) {; 230 p6 = kTRUE;; 231 gPad->SetCursor(kHand);; 232 }; 233 break;; 234 ; 235 case kButton1Down:; 236 // Record initial coordinates; 237 //px4 = px;; 238 //py4 = py;; 239 ; 240 case kButton1Motion:; 241 if (p1) {; 242 px2 = gPad->AbsPixeltoX(px);; 243 py2 = gPad->AbsPixeltoY(py);; 244 if ( px2 < 0 && py2 < 0) {p2 = kTRUE;};; 245 if ( px2 < 0 && py2 > 0 ) {p3 = kTRUE;};; 246 if ( px2 > 0 && py2 > 0 ) {p4 = kTRUE;};; 247 if ( px2 > 0 && py2 < 0 ) {p5 = kTRUE;};; 248 px2 = TMath::ACos(TMath::Abs(px2));; 249 py2 = TMath::ASin(TMath::Abs(py2));; 250 if (p2) {; 251 fAxisAngle = TMath::Pi()+(px2+py2)/2;; 252 p2 = kFALSE;; 253 };; 254 if (p3) {; 255 fAxisAngle = TMath::Pi()-(px2+py2)/2;; 256 p3 = kFALSE;; 257 };; 258 if (p4) {; 259 fAxisAngle = (px2+py2)/2;; 260 p4 = kFALSE;; 261 };; 262 if (p5) {; 263 fAxisAngle = -(px2+py2)/2;; 264 p5 =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html:7037,down,down,7037,doc/master/TGraphPolargram_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolargram_8cxx_source.html,1,['down'],['down']
Availability,"4. starts with an environment variable (""$ROOTSYS/bin""). void NoMsg(Int_t errorLevel); [static utility function]. calling ""NoMsg( errorLevel )"",; sets ""gErrorIgnoreLevel"" to ""errorLevel+1"" so that; all errors with ""level < errorLevel"" will be ignored. calling the function with a negative argument; (e.g., ""NoMsg( -1 )""); resets gErrorIgnoreLevel to its previous value. Int_t Complete(const TRegexp& re, const TSeqCollection* pListOfCandidates, const char* appendage, ostream& out, TString::ECaseCompare cmp = TString::kExact); [private]. void CopyMatch(char* dest, const char* localName, const char* appendage = 0, const char* fullName = 0) const; [private]. TString DeterminePath(const TString& fileName, const char* defaultPath) const; [private]. TString ExtendPath(const char* originalPath, TString newBase) const; [private]. Int_t Hook(char* buf, int* pLoc, ostream& out); [private]. void InitPatterns(); [private]. TClass * MakeClassFromClassName(const char* className) const; [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a class.; user must delete.; returns 0 in case of error. TClass * TryMakeClassFromClassName(const char* className) const; Same as above but does not print the error message. TClass * MakeClassFromVarName(const char* varName, TTabCom::EContext_t& context, int iter = 0); [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a variable.; user must delete.; returns 0 in case of error.; if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; context sensitive behavior. void SetPattern(TTabCom::EContext_t handle, const char* regexp); [private]. int ParseReverse(const char* var_str, int start). Returns the place in the string where to put the \0, starting the search; from ""start"". TTabCom(). TTabCom& operator=(const TTabCom& ). EContext_t DetermineCon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTabCom.html:11809,error,error,11809,root/html530/TTabCom.html,https://root.cern,https://root.cern/root/html530/TTabCom.html,3,['error'],['error']
Availability,4.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80214,error,error,80214,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,4.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.34,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:87123,error,error,87123,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"4.7 setUpperLimit(…); [api:setupperlimits] setUpperLimit(unsigned int n, double up) or setUpperLimit(const char* name, double up) sets the upper bound of parameter \(\mbox{n}\) or with name \(\mbox{name}\). The parameters does not have a lower limit.; 5.14.8 setLowerLimit(…); [api:setlowerlimits] setLowerLimit(unsigned int n, double low) or setLowerLimit(const char* name, double low) sets the lower bound of parameter \(\mbox{n}\) or with name \(\mbox{name}\). The parameters does not have an upper limit.; 5.14.9 removeLimits(…); [api:removelimits] removeLimits(unsigned int n) or removeLimits(const char* name) removes all possible limits on parameter \(\mbox{n}\) or with name \(\mbox{name}\). The parameter can then vary in both directions without any bounds.; 5.14.10 value(…); value(unsigned int n) or value(const char* name) return the current value of parameter \(\mbox{n}\) or with name \(\mbox{name}\).; 5.14.11 error(…); error(unsigned int n) or error(const char* name) return the current uncertainty (error) of parameter \(\mbox{n}\) or with name \(\mbox{ name}\).; 5.14.12 index(…); index(const char* name) returns the index (current position) of the parameter with name \(\mbox{ name}\) in the list of defined parameters. The index is the same as for the calculation of the function value in the user’s FCN (FCNBase::operator()).; 5.14.13 name(…); name(unsigned int n) returns the name of the parameter with index \(n\).; 5.15 MnUserParameterState; [api:state] The class MnUserParameterState contains the MnUserParameters and the MnUserCovariance. It can be created on input by the user, or by M itself as user representable format of the result of the minimization.; 5.15.1 MnUserParameterState(const std::vector\(<\)double\(>\)&,. const std::vector\(<\)double\(>\)&) ###; Construct a state from starting values specified via std::vector\(<\)double\(>\). No covariance is available.; 5.15.2 MnUserParameterState(const MnUserParameters&); Construct a state from starting values specif",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:57368,error,error,57368,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,4,['error'],['error']
Availability,"4.7 setUpperLimit(…); [api:setupperlimits] setUpperLimit(unsigned int n, double up) or setUpperLimit(const char* name, double up) sets the upper bound of parameter \(\mbox{n}\) or with name \(\mbox{name}\). The parameters does not have a lower limit.; 5.14.8 setLowerLimit(…); [api:setlowerlimits] setLowerLimit(unsigned int n, double low) or setLowerLimit(const char* name, double low) sets the lower bound of parameter \(\mbox{n}\) or with name \(\mbox{name}\). The parameters does not have an upper limit.; 5.14.9 removeLimits(…); [api:removelimits] removeLimits(unsigned int n) or removeLimits(const char* name) removes all possible limits on parameter \(\mbox{n}\) or with name \(\mbox{name}\). The parameter can then vary in both directions without any bounds.; 5.14.10 value(…); value(unsigned int n) or value(const char* name) return the current value of parameter \(\mbox{n}\) or with name \(\mbox{name}\).; 5.14.11 error(…); error(unsigned int n) or error(const char* name) return the current uncertainty (error) of parameter \(\mbox{n}\) or with name \(\mbox{ name}\).; 5.14.12 index(…); index(const char* name) returns the index (current position) of the parameter with name \(\mbox{ name}\) in the list of defined parameters. The index is the same as for the calculation of the function value in the user’s FCN (FCNBase::operator()).; 5.14.13 name(…); name(unsigned int n) returns the name of the parameter with index \(n\).; 5.15 MnUserParameterState; [api:state] The class MnUserParameterState contains the MnUserParameters and the MnUserCovariance. It can be created on input by the user, or by M itself as user representable format of the result of the minimization.; 5.15.1 MnUserParameterState(const std::vector\(<\)double\(>\)&,; const std::vector\(<\)double\(>\)&); Construct a state from starting values specified via std::vector\(<\)double\(>\). No covariance is available.; 5.15.2 MnUserParameterState(const MnUserParameters&); Construct a state from starting values specified ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:61360,error,error,61360,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,4,['error'],['error']
Availability,"4//////////////////////////////////////////////////////////////////////////; 295/// To resolve problem with storing of shared pointers; 296/// Call this method when reading canvas from the file; 297/// Can be called many times - after reinitialization of shared pointers no changes will be performed; 298 ; 299void ROOT::Experimental::RCanvas::ResolveSharedPtrs(); 300{; 301 Internal::RIOSharedVector_t vect;; 302 ; 303 CollectShared(vect);; 304 ; 305 for (unsigned n = 0; n < vect.size(); ++n) {; 306 if (vect[n]->HasShared() || !vect[n]->GetIOPtr()) continue;; 307 ; 308 auto shrd_ptr = vect[n]->MakeShared();; 309 ; 310 for (auto n2 = n+1; n2 < vect.size(); ++n2) {; 311 if (vect[n2]->GetIOPtr() == vect[n]->GetIOPtr()) {; 312 if (vect[n2]->HasShared()); 313 R__LOG_ERROR(GPadLog()) << ""FATAL Shared pointer for same IO ptr already exists"";; 314 else; 315 vect[n2]->SetShared(shrd_ptr);; 316 }; 317 }; 318 ; 319 }; 320}; 321 ; 322 ; 323/////////////////////////////////////////////////////////////////////////////////////////////////; 324/// Apply attributes changes to the drawable; 325/// Return mask with actions which were really applied; 326 ; 327std::unique_ptr<ROOT::Experimental::RDrawableReply> ROOT::Experimental::RChangeAttrRequest::Process(); 328{; 329 // suppress all changes coming from non-main connection; 330 if (!GetContext().IsMainConn()); 331 return nullptr;; 332 ; 333 auto canv = const_cast<ROOT::Experimental::RCanvas *>(GetContext().GetCanvas());; 334 if (!canv) return nullptr;; 335 ; 336 if ((ids.size() != names.size()) || (ids.size() != values.size())) {; 337 R__LOG_ERROR(GPadLog()) << ""Mismatch of arrays size in RChangeAttrRequest"";; 338 return nullptr;; 339 }; 340 ; 341 Version_t vers = 0;; 342 ; 343 for(int indx = 0; indx < (int) ids.size(); indx++) {; 344 if (ids[indx] == ""canvas"") {; 345 if (canv->GetAttrMap().Change(names[indx], values[indx].get())) {; 346 if (!vers) vers = canv->IncModified();; 347 canv->SetDrawableVersion(vers);; 348 }; 349 } else {; 35",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RCanvas_8cxx_source.html:10678,mask,mask,10678,doc/master/RCanvas_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RCanvas_8cxx_source.html,1,['mask'],['mask']
Availability,"40 return 0;; 2641 }; 2642 evhdl = *(int *)eventhdl;; 2643 ; 2644 s = (int)write(evhdl, &u, sizeof(u));; 2645 if (s != sizeof(u)) {; 2646 /* error */; 2647 return 0;; 2648 }; 2649 return 1;; 2650}; 2651 ; 2652 ; 2653static void; 2654event_destroy(void *eventhdl); 2655{; 2656 int evhdl;; 2657 ; 2658 if (!eventhdl) {; 2659 /* error */; 2660 return;; 2661 }; 2662 evhdl = *(int *)eventhdl;; 2663 ; 2664 close(evhdl);; 2665 mg_free(eventhdl);; 2666}; 2667 ; 2668 ; 2669#endif; 2670 ; 2671#endif; 2672 ; 2673 ; 2674#if !defined(__linux__) && !defined(_WIN32) && defined(ALTERNATIVE_QUEUE); 2675 ; 2676struct posix_event {; 2677 pthread_mutex_t mutex;; 2678 pthread_cond_t cond;; 2679 int signaled;; 2680};; 2681 ; 2682 ; 2683static void *; 2684event_create(void); 2685{; 2686 struct posix_event *ret = mg_malloc(sizeof(struct posix_event));; 2687 if (ret == 0) {; 2688 /* out of memory */; 2689 return 0;; 2690 }; 2691 if (0 != pthread_mutex_init(&(ret->mutex), NULL)) {; 2692 /* pthread mutex not available */; 2693 mg_free(ret);; 2694 return 0;; 2695 }; 2696 if (0 != pthread_cond_init(&(ret->cond), NULL)) {; 2697 /* pthread cond not available */; 2698 pthread_mutex_destroy(&(ret->mutex));; 2699 mg_free(ret);; 2700 return 0;; 2701 }; 2702 ret->signaled = 0;; 2703 return (void *)ret;; 2704}; 2705 ; 2706 ; 2707static int; 2708event_wait(void *eventhdl); 2709{; 2710 struct posix_event *ev = (struct posix_event *)eventhdl;; 2711 pthread_mutex_lock(&(ev->mutex));; 2712 while (!ev->signaled) {; 2713 pthread_cond_wait(&(ev->cond), &(ev->mutex));; 2714 }; 2715 ev->signaled = 0;; 2716 pthread_mutex_unlock(&(ev->mutex));; 2717 return 1;; 2718}; 2719 ; 2720 ; 2721static int; 2722event_signal(void *eventhdl); 2723{; 2724 struct posix_event *ev = (struct posix_event *)eventhdl;; 2725 pthread_mutex_lock(&(ev->mutex));; 2726 pthread_cond_signal(&(ev->cond));; 2727 ev->signaled = 1;; 2728 pthread_mutex_unlock(&(ev->mutex));; 2729 return 1;; 2730}; 2731 ; 2732 ; 2733static void; 2734event_destroy(voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:83167,avail,available,83167,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['avail'],['available']
Availability,"40 });; 341 m_prevGradients.clear ();; 342 }; 343 else; 344 {; 345 auto itW = std::begin (weights);; 346 std::for_each (std::begin (m_localGradients), std::end (m_localGradients), [&itW](double& g); 347 {; 348 *itW += g;; 349 ++itW;; 350 });; 351 }; 352 ; 353 ++currentRepetition;; 354 }; 355 return E;; 356 }; 357 ; 358 ; 359 ; 360 ; 361 ; 362 ; 363 ; 364 ; 365 ; 366 ; 367 ; 368 ; 369 ; 370 ; 371 ; 372 ; 373 ; 374 ; 375 ; 376 ; 377/*! \brief sum of squares error function; 378 *; 379 *; 380 */; 381 template <typename ItOutput, typename ItTruth, typename ItDelta, typename InvFnc>; 382 double sumOfSquares (ItOutput itOutputBegin, ItOutput itOutputEnd, ItTruth itTruthBegin, ItTruth /*itTruthEnd*/, ItDelta itDelta, ItDelta itDeltaEnd, InvFnc invFnc, double patternWeight); 383 {; 384 double errorSum = 0.0;; 385 ; 386 // output - truth; 387 ItTruth itTruth = itTruthBegin;; 388 bool hasDeltas = (itDelta != itDeltaEnd);; 389 for (ItOutput itOutput = itOutputBegin; itOutput != itOutputEnd; ++itOutput, ++itTruth); 390 {; 391// assert (itTruth != itTruthEnd);; 392 double output = (*itOutput);; 393 double error = output - (*itTruth);; 394 if (hasDeltas); 395 {; 396 (*itDelta) = (*invFnc.get ()) (output) * error * patternWeight;; 397 ++itDelta;; 398 }; 399 errorSum += error*error * patternWeight;; 400 }; 401 ; 402 return 0.5*errorSum;; 403 }; 404 ; 405 ; 406 ; 407/*! \brief cross entropy error function; 408 *; 409 *; 410 */; 411 template <typename ItProbability, typename ItTruth, typename ItDelta, typename ItInvActFnc>; 412 double crossEntropy (ItProbability itProbabilityBegin, ItProbability itProbabilityEnd, ItTruth itTruthBegin, ItTruth /*itTruthEnd*/, ItDelta itDelta, ItDelta itDeltaEnd, ItInvActFnc /*itInvActFnc*/, double patternWeight); 413 {; 414 bool hasDeltas = (itDelta != itDeltaEnd);; 415 ; 416 double errorSum = 0.0;; 417 for (ItProbability itProbability = itProbabilityBegin; itProbability != itProbabilityEnd; ++itProbability); 418 {; 419 double probability = *itProbabil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:11507,error,error,11507,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['error'],['error']
Availability,41 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.21813 0.0200213 0.00174992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.3584,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:106544,error,error,106544,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"41 assert( fDataErrorHigh.empty() && fDataErrorLow.empty() );; 342 assert( fDataError.empty() || &fDataError.front() == fDataErrorPtr );; 343 ; 344 double eval = fDataErrorPtr[ ipoint ];; 345 ; 346 // in case of wrapped data the pointer stores the error and; 347 // not the inverse; 348 if (fWrapped); 349 return 1.0 / eval;; 350 else; 351 return (eval != 0.0) ? eval : 0.0;; 352 }; 353 ; 354 if ( fErrorType == kAsymError ) {; 355 // return inverse of 1/2(el + eh); 356 assert( !fDataErrorPtr && fDataErrorHighPtr && fDataErrorLowPtr );; 357 assert( fDataError.empty() );; 358 assert( fDataErrorHigh.empty() || &fDataErrorHigh.front() == fDataErrorHighPtr );; 359 assert( fDataErrorLow.empty() || &fDataErrorLow.front() == fDataErrorLowPtr );; 360 assert( fDataErrorLow.empty() == fDataErrorHigh.empty() );; 361 ; 362 double eh = fDataErrorHighPtr[ ipoint ];; 363 double el = fDataErrorLowPtr[ ipoint ];; 364 ; 365 return 2.0 / (el+eh);; 366 }; 367 ; 368 assert( fErrorType == kCoordError );; 369 // for coordinate error we store the error and not the inverse; 370 return 1.0 / fDataErrorPtr[ ipoint ];; 371 }; 372 ; 373 ; 374 /**; 375 retrieve at the same time a pointer to the coordinate data and the fit value; 376 More efficient than calling Coords(i) and Value(i); 377 */; 378 // not threadsafe, to be replaced with never constructs!; 379 // for example: just return std::array or std::vector, there's; 380 // is going to be only minor overhead in c++11.; 381 const double * GetPoint( unsigned int ipoint, double & value ) const; 382 {; 383 assert( ipoint < fMaxPoints );; 384 value = Value( ipoint );; 385 ; 386 return Coords( ipoint );; 387 }; 388 ; 389 /**; 390 returns a single coordinate error component of a point.; 391 This function is threadsafe in contrast to Coords(...); 392 and can easily get vectorized by the compiler in loops; 393 running over the ipoint-index.; 394 */; 395 double GetCoordErrorComponent( unsigned int ipoint, unsigned int icoord ) const; 396 {; 397 assert( ipoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:12959,error,error,12959,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,2,['error'],['error']
Availability,"41/// Add a user-defined property. Returns true if added, false if existing.; 642 ; 643Bool_t TGeoManager::AddProperty(const char *property, Double_t value); 644{; 645 auto pos = fProperties.insert(ConstPropMap_t::value_type(property, value));; 646 if (!pos.second) {; 647 Warning(""AddProperty"", ""Property \""%s\"" already exists with value %g"", property, (pos.first)->second);; 648 return false;; 649 }; 650 return true;; 651}; 652 ; 653////////////////////////////////////////////////////////////////////////////////; 654/// Get a user-defined property; 655 ; 656Double_t TGeoManager::GetProperty(const char *property, Bool_t *error) const; 657{; 658 auto pos = fProperties.find(property);; 659 if (pos == fProperties.end()) {; 660 if (error); 661 *error = kTRUE;; 662 return 0.;; 663 }; 664 if (error); 665 *error = kFALSE;; 666 return pos->second;; 667}; 668 ; 669////////////////////////////////////////////////////////////////////////////////; 670/// Get a user-defined property from a given index; 671 ; 672Double_t TGeoManager::GetProperty(size_t i, TString &name, Bool_t *error) const; 673{; 674 // This is a quite inefficient way to access map elements, but needed for the GDML writer to; 675 if (i >= fProperties.size()) {; 676 if (error); 677 *error = kTRUE;; 678 return 0.;; 679 }; 680 size_t pos = 0;; 681 auto it = fProperties.begin();; 682 while (pos < i) {; 683 ++it;; 684 ++pos;; 685 }; 686 if (error); 687 *error = kFALSE;; 688 name = (*it).first;; 689 return (*it).second;; 690}; 691 ; 692////////////////////////////////////////////////////////////////////////////////; 693/// Add a matrix to the list. Returns index of the matrix in list.; 694 ; 695Int_t TGeoManager::AddTransformation(const TGeoMatrix *matrix); 696{; 697 return TGeoBuilder::Instance(this)->AddTransformation((TGeoMatrix *)matrix);; 698}; 699 ; 700////////////////////////////////////////////////////////////////////////////////; 701/// Add a shape to the list. Returns index of the shape in list.; 702 ; 703Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:25230,error,error,25230,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,3,['error'],['error']
Availability,"41{; 2042 if (e == -1); 2043 SetFillColor(fcolor);; 2044 else if (e >= 0 && e < fNYErrors); 2045 fAttFill[e].SetFillColor(fcolor);; 2046}; 2047 ; 2048////////////////////////////////////////////////////////////////////////////////; 2049/// Set Fill Color and Alpha of error e (-1 = Global and x errors).; 2050 ; 2051void TGraphMultiErrors::SetFillColorAlpha(Int_t e, Color_t fcolor, Float_t falpha); 2052{; 2053 if (e == -1); 2054 SetFillColorAlpha(fcolor, falpha);; 2055 else if (e >= 0 && e < fNYErrors); 2056 fAttFill[e].SetFillColorAlpha(fcolor, falpha);; 2057}; 2058 ; 2059////////////////////////////////////////////////////////////////////////////////; 2060/// Set Fill Style of error e (-1 = Global and x errors).; 2061 ; 2062void TGraphMultiErrors::SetFillStyle(Int_t e, Style_t fstyle); 2063{; 2064 if (e == -1); 2065 SetFillStyle(fstyle);; 2066 else if (e >= 0 && e < fNYErrors); 2067 fAttFill[e].SetFillStyle(fstyle);; 2068}; 2069 ; 2070////////////////////////////////////////////////////////////////////////////////; 2071/// Set Line Color of error e (-1 = Global and x errors).; 2072 ; 2073void TGraphMultiErrors::SetLineColor(Int_t e, Color_t lcolor); 2074{; 2075 if (e == -1); 2076 SetLineColor(lcolor);; 2077 else if (e >= 0 && e < fNYErrors); 2078 fAttLine[e].SetLineColor(lcolor);; 2079}; 2080 ; 2081////////////////////////////////////////////////////////////////////////////////; 2082/// Set Line Color and Alpha of error e (-1 = Global and x errors).; 2083 ; 2084void TGraphMultiErrors::SetLineColorAlpha(Int_t e, Color_t lcolor, Float_t lalpha); 2085{; 2086 if (e == -1); 2087 SetLineColorAlpha(lcolor, lalpha);; 2088 else if (e >= 0 && e < fNYErrors); 2089 fAttLine[e].SetLineColorAlpha(lcolor, lalpha);; 2090}; 2091 ; 2092////////////////////////////////////////////////////////////////////////////////; 2093/// Set Line Style of error e (-1 = Global and x errors).; 2094 ; 2095void TGraphMultiErrors::SetLineStyle(Int_t e, Style_t lstyle); 2096{; 2097 if (e == -1); 2098 Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:69752,error,error,69752,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,"42.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=0.403042, denominator=wrap_pdf_Int[pTV]=242.998; ... (remaining 14 messages suppressed); ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=-3.35967 cHl3=-9.58704 cHq3=-6.27461; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.154263 cHl3=2.95902 cHq3=-2.78828; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=59.1285, denominator=wrap_pdf_Int[pTV]=200921; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.338546 cHl3=0.879879 cHq3=-1.35856; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:14551,recover,recover,14551,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,2,['recover'],['recover']
Availability,"42343 0.99744 [ -3.2803 5.7307 ]; : m_wwbb: 0.0046014 0.99948 [ -3.2802 5.7307 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 5 Input = ( 1, 1, 7 ) Batch size = 128 Loss function = C; Layer 0 DENSE Layer: ( Input = 7 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.868652; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.659892 0.620582 0.589558 0.0469541 20523.3 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.604286 0.594787 0.586926 0.0471912 20632.4 0; : 3 | 0.58117 0.603906 0.587335 0.047007 20609.7 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.57382 0.588714 0.592175 0.0469679 20425.3 0; : 5 | 0.569519 0.59535 0.590168 0.0468081 20494.7 1; : 6 | 0.567869 0.590023 0.589038 0.0469022 20541 2; : 7 Minimum Test error found - save the configuration ; : 7 | 0.561012 0.586993 0.590467 0.0471223 20495.3 0; : 8 | 0.559195 0.590522 0.590271 0.0471869 20505.1 1; : 9 | 0.558998 0.588766 0.598449 0.0469787 20193.3 2; : 10 | 0.555383 0.590075 0.591595",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:23990,error,error,23990,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['error'],['error']
Availability,"42343 0.99744 [ -3.2803 5.7307 ]; : m_wwbb: 0.0046014 0.99948 [ -3.2802 5.7307 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 5 Input = ( 1, 1, 7 ) Batch size = 128 Loss function = C; Layer 0 DENSE Layer: ( Input = 7 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 1.171; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.66619 0.628056 0.587341 0.0468945 20605.2 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.605139 0.593298 0.586597 0.0468674 20632.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.581823 0.587355 0.586416 0.0468644 20639.4 0; : 4 | 0.575813 0.593823 0.586862 0.0466947 20615.8 1; : 5 Minimum Test error found - save the configuration ; : 5 | 0.572257 0.578309 0.587324 0.0469531 20608.1 0; : 6 | 0.567347 0.582461 0.586969 0.0467966 20615.6 1; : 7 Minimum Test error found - save the configuration ; : 7 | 0.564553 0.577241 0.588162 0.0470086 20578.3 0; : 8 | 0.56278 0.582039 0.588324 0.0468355 20565.5 1; : 9 | 0.559377 0.582454 0.5886",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:24053,error,error,24053,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['error'],['error']
Availability,"423{; 3424 TString comd = command;; 3425 mnhelp(comd);; 3426}; 3427 ; 3428////////////////////////////////////////////////////////////////////////////////; 3429/// HELP routine for MINUIT interactive commands; 3430///; 3431/// - COMD ='*' or """" prints a global help for all commands; 3432/// - COMD =Command_name: print detailed help for one command.; 3433/// Note that at least 3 characters must be given for the command; 3434/// name.; 3435///; 3436/// Author: Rene Brun; 3437/// comments extracted from the MINUIT documentation file.; 3438 ; 3439void TMinuit::mnhelp(TString comd); 3440{; 3441//______________________________________________________________________________; 3442//; 3443// Global HELP: Summary of all commands; 3444//; 3445 comd.ToUpper();; 3446 if( comd.Length() == 0 || comd[0] == '*' || comd[0] == '?' || comd[0] == 0 || comd==""HELP"" ) {; 3447 Printf("" ==>List of MINUIT Interactive commands:"");; 3448 Printf("" CLEar Reset all parameter names and values undefined"");; 3449 Printf("" CONtour Make contour map of the user function"");; 3450 Printf("" EXIT Exit from Interactive Minuit"");; 3451 Printf("" FIX Cause parameter(s) to remain constant"");; 3452 Printf("" HESse Calculate the Hessian or error matrix."");; 3453 Printf("" IMPROVE Search for a new minimum around current minimum"");; 3454 Printf("" MIGrad Minimize by the method of Migrad"");; 3455 Printf("" MINImize MIGRAD + SIMPLEX method if Migrad fails"");; 3456 Printf("" MINOs Exact (non-linear) parameter error analysis"");; 3457 Printf("" MNContour Calculate one MINOS function contour"");; 3458 Printf("" PARameter Define or redefine new parameters and values"");; 3459 Printf("" RELease Make previously FIXed parameters variable again"");; 3460 Printf("" REStore Release last parameter fixed"");; 3461 Printf("" SAVe Save current parameter values on a file"");; 3462 Printf("" SCAn Scan the user function by varying parameters"");; 3463 Printf("" SEEk Minimize by the method of Monte Carlo"");; 3464 Printf("" SET Set various MINUIT constan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:108603,error,error,108603,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['error']
Availability,"424 /**; 425 add one dim data with no error in the coordinate (x); 426 in this case store the inverse of the error in the value (y); 427 */; 428 void BinData::Add( double x, double y, double ey ); 429 {; 430 assert( kValueError == fErrorType );; 431 assert( !fData.empty() && fDataPtr );; 432 assert( fDataErrorHigh.empty() && !fDataErrorHighPtr );; 433 assert( fDataErrorLow.empty() && !fDataErrorLowPtr );; 434 assert( !fDataError.empty() && fDataErrorPtr );; 435 assert( fCoordErrors.empty() && fCoordErrorsPtr.empty() );; 436 ; 437 fData[ fNPoints ] = y;; 438 fDataError[ fNPoints ] = (ey != 0.0) ? 1.0/ey : 0.0;; 439 ; 440 FitData::Add( x );; 441 fSumContent += y;; 442 if (y != 0 || ey != 1.0) fSumError2 += ey*ey;; 443 // set the weight flag checking if error^2 != y; 444 if (!fIsWeighted); 445 if (y != 0 && std::abs( ey*ey/y - 1.0) > 1.E-12) fIsWeighted = true;; 446 }; 447 ; 448 /**; 449 add one dim data with error in the coordinate (x); 450 in this case store the value (y) error and not the inverse; 451 */; 452 void BinData::Add( double x, double y, double ex, double ey ); 453 {; 454 assert( kCoordError == fErrorType );; 455 assert( !fData.empty() && fDataPtr );; 456 assert( !fDataError.empty() && fDataErrorPtr );; 457 assert( fDataErrorHigh.empty() && !fDataErrorHighPtr );; 458 assert( fDataErrorLow.empty() && !fDataErrorLowPtr );; 459 assert( !fCoordErrors.empty() && fCoordErrors.size() == 1 );; 460 assert( !fCoordErrorsPtr.empty() && fCoordErrorsPtr.size() == 1 && fCoordErrorsPtr[0] );; 461 assert( &fCoordErrors[0].front() == fCoordErrorsPtr[0] );; 462 ; 463 fData[ fNPoints ] = y;; 464 fCoordErrors[0][ fNPoints ] = ex;; 465 fDataError[ fNPoints ] = ey;; 466 ; 467 FitData::Add( x );; 468 fSumContent += y;; 469 if (y != 0 || ey != 1.0) fSumError2 += ey*ey;; 470 // set the weight flag checking if error^2 != y; 471 if (!fIsWeighted); 472 if (y != 0 && std::abs( ey*ey/y - 1.0) > 1.E-12) fIsWeighted = true;; 473 }; 474 ; 475 /**; 476 add one dim data with error in the coo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:13152,error,error,13152,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,2,['error'],['error']
Availability,"424 SetTextFont(font);; 425 SetTextSize(tsize);; 426 ; 427 SetLabelFont(font,""x"");; 428 SetTitleFont(font,""x"");; 429 SetLabelFont(font,""y"");; 430 SetTitleFont(font,""y"");; 431 SetLabelFont(font,""z"");; 432 SetTitleFont(font,""z"");; 433 ; 434 SetLabelSize(tsize,""x"");; 435 SetTitleSize(.065,""x"");; 436 SetLabelSize(tsize,""y"");; 437 SetTitleSize(.065,""y"");; 438 SetLabelSize(tsize,""z"");; 439 SetTitleSize(.065,""z"");; 440 ; 441 SetTitleOffset(1.1,""x"");; 442 SetTitleOffset(1.1,""y"");; 443 SetTitleOffset(1.1,""z"");; 444 ; 445 SetLabelOffset(0.015,""x"");; 446 SetLabelOffset(0.015,""y"");; 447 SetLabelOffset(0.015,""z"");; 448 ; 449 SetTickLength(0.03,""x"");; 450 SetTickLength(0.02,""y""); // This way we slightly achieve equal length ticks for x and y; 451 ; 452 // use bold lines and markers; 453 SetMarkerStyle(20);; 454 SetMarkerSize(0.9);; 455 SetHistLineWidth(2);; 456 SetLineStyleString(2,""[12 12]""); // postscript dashes; 457 ; 458 // get rid of X error bars; 459 SetErrorX(0.001);; 460 // get rid of error bar caps; 461 SetEndErrorSize(0.);; 462 ; 463 // do not display any of the standard histogram decorations; 464 SetOptTitle(0);; 465 SetOptStat(0);; 466 SetOptFit(0);; 467 ; 468 // put tick marks on top and RHS of plots; 469 SetPadTickX(0);; 470 SetPadTickY(0);; 471 ; 472 SetFrameLineWidth(2);; 473 }; 474}; 475 ; 476////////////////////////////////////////////////////////////////////////////////; 477/// Destructor.; 478 ; 479TStyle::~TStyle(); 480{; 481 R__LOCKGUARD(gROOTMutex);; 482 gROOT->GetListOfStyles()->Remove(this);; 483 if (gStyle == this) gStyle = (TStyle*)gROOT->GetListOfStyles()->Last();; 484}; 485 ; 486////////////////////////////////////////////////////////////////////////////////; 487/// Copy constructor; 488 ; 489TStyle::TStyle(const TStyle &style) : TNamed(style), TAttLine(style), TAttFill(style), TAttMarker(style), TAttText(style); 490{; 491 style.TStyle::Copy(*this);; 492}; 493 ; 494////////////////////////////////////////////////////////////////////////////////; 495///",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStyle_8cxx_source.html:13564,error,error,13564,doc/master/TStyle_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStyle_8cxx_source.html,1,['error'],['error']
Availability,"4244 l.Add((TObject*)&arg7) ; l.Add((TObject*)&arg8) ;; 4245 return chi2FitTo(xydata,l) ;; 4246}; 4247 ; 4248 ; 4249 ; 4250 ; 4251////////////////////////////////////////////////////////////////////////////////; 4252/// \copydoc RooAbsReal::chi2FitTo(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&); 4253 ; 4254RooFit::OwningPtr<RooFitResult> RooAbsReal::chi2FitTo(RooDataSet &xydata, const RooLinkedList &cmdList); 4255{; 4256 return RooFit::makeOwningPtr(RooFit::FitHelpers::fitTo(*this, xydata, cmdList, true));; 4257}; 4258 ; 4259 ; 4260 ; 4261 ; 4262////////////////////////////////////////////////////////////////////////////////; 4263/// Create a \f$ \chi^2 \f$ from a series of x and y values stored in a dataset.; 4264/// The y values can either be the event weights (default), or can be another column designated; 4265/// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; 4266/// be well defined.; 4267///; 4268/// The following named arguments are supported; 4269///; 4270/// | | Options to control construction of the \f$ \chi^2 \f$; 4271/// |-|-----------------------------------------; 4272/// | `YVar(RooRealVar& yvar)` | Designate given column in dataset as Y value; 4273/// | `Integrate(bool flag)` | Integrate function over range specified by X errors rather than take value at bin center.; 4274///; 4275 ; 4276RooFit::OwningPtr<RooAbsReal> RooAbsReal::createChi2(RooDataSet& data, const RooCmdArg& arg1, const RooCmdArg& arg2,; 4277 const RooCmdArg& arg3, const RooCmdArg& arg4, const RooCmdArg& arg5,; 4278 const RooCmdArg& arg6, const RooCmdArg& arg7, const RooCmdArg& arg8); 4279{; 4280 RooLinkedList l ;; 4281 l.Add((TObject*)&arg1) ; l.Add((TObject*)&arg2) ;; 4282 l.Add((TObject*)&arg3) ; l.Add((TObject*)&arg4) ;; 4283 l.Add((TObject*)&arg5) ; l.Add((TObject*)&arg6) ;; 4284 l.Add((TObject*)&arg7) ; l.Add((TObject*)&arg8) ;; 4285 retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:188402,error,errors,188402,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['errors']
Availability,42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.8202,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:104359,error,error,104359,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"4284/// ~~~; 4285/// MakeProxy can then be used indirectly via the TTree::Draw interface; 4286/// as follow:; 4287/// ~~~ {.cpp}; 4288/// new TFile(""hsimple.root""); 4289/// ntuple->Draw(""hsimple.cxx"");; 4290/// ~~~; 4291/// A more complete example is available in the tutorials directory:; 4292/// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; 4293/// which reimplement the selector found in `h1analysis.C`; 4294///; 4295/// The main features of this facility are:; 4296///; 4297/// * on-demand loading of branches; 4298/// * ability to use the 'branchname' as if it was a data member; 4299/// * protection against array out-of-bound; 4300/// * ability to use the branch data as object (when the user code is available); 4301///; 4302/// See TTree::MakeProxy for more details.; 4303///; 4304/// ### Making a Profile histogram; 4305///; 4306/// In case of a 2-Dim expression, one can generate a TProfile histogram; 4307/// instead of a TH2F histogram by specifying option=prof or option=profs; 4308/// or option=profi or option=profg ; the trailing letter select the way; 4309/// the bin error are computed, See TProfile2D::SetErrorOption for; 4310/// details on the differences.; 4311/// The option=prof is automatically selected in case of y:x>>pf; 4312/// where pf is an existing TProfile histogram.; 4313///; 4314/// ### Making a 2D Profile histogram; 4315///; 4316/// In case of a 3-Dim expression, one can generate a TProfile2D histogram; 4317/// instead of a TH3F histogram by specifying option=prof or option=profs.; 4318/// or option=profi or option=profg ; the trailing letter select the way; 4319/// the bin error are computed, See TProfile2D::SetErrorOption for; 4320/// details on the differences.; 4321/// The option=prof is automatically selected in case of z:y:x>>pf; 4322/// where pf is an existing TProfile2D histogram.; 4323///; 4324/// ### Making a 5D plot using GL; 4325///; 4326/// If option GL5D is specified together with 5 variables, a 5D plot is drawn;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:173493,error,error,173493,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['error'],['error']
Availability,"4288 ; 4289////////////////////////////////////////////////////////////////////////////////; 4290/// See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&); 4291 ; 4292RooFit::OwningPtr<RooAbsReal> RooAbsReal::createChi2(RooDataSet &data, const RooLinkedList &cmdList); 4293{; 4294 return RooFit::makeOwningPtr(RooFit::FitHelpers::createChi2(*this, data, cmdList));; 4295}; 4296 ; 4297 ; 4298 ; 4299////////////////////////////////////////////////////////////////////////////////; 4300/// Return current evaluation error logging mode.; 4301 ; 4302RooAbsReal::ErrorLoggingMode RooAbsReal::evalErrorLoggingMode(); 4303{; 4304 return evalErrorData().mode ;; 4305}; 4306 ; 4307////////////////////////////////////////////////////////////////////////////////; 4308/// Set evaluation error logging mode. Options are; 4309///; 4310/// PrintErrors - Print each error through RooMsgService() as it occurs; 4311/// CollectErrors - Accumulate errors, but do not print them. A subsequent call; 4312/// to printEvalErrors() will print a summary; 4313/// CountErrors - Accumulate error count, but do not print them.; 4314///; 4315 ; 4316void RooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); 4317{; 4318 evalErrorData().mode = m;; 4319}; 4320 ; 4321 ; 4322////////////////////////////////////////////////////////////////////////////////; 4323 ; 4324void RooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); 4325{; 4326 std::string plist ;; 4327 for (auto const* arg : paramVars) {; 4328 if (!dependsOnValue(*arg)) {; 4329 coutW(InputArguments) << ""RooAbsReal::setParameterizeIntegral("" << GetName(); 4330 << "") function does not depend on listed parameter "" << arg->GetName() << "", ignoring"" << std::endl ;; 4331 continue ;; 4332 }; 4333 if (!plist.empty()) plist += "":"" ;; 4334 plist += arg->GetName() ;; 4335 }; 4336 setStringAttribute(""CACHEPARAMINT"",plist.c_s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:190436,error,error,190436,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,"43 ; 15044 /* Set reuse option, but don't abort on errors. */; 15045 mg_cry_ctx_internal(; 15046 phys_ctx,; 15047 ""cannot set socket option SO_EXCLUSIVEADDRUSE (entry %i)"",; 15048 portsTotal);; 15049 }; 15050#else; 15051 if (setsockopt(so.sock,; 15052 SOL_SOCKET,; 15053 SO_REUSEADDR,; 15054 (SOCK_OPT_TYPE)&on,; 15055 sizeof(on)); 15056 != 0) {; 15057 ; 15058 /* Set reuse option, but don't abort on errors. */; 15059 mg_cry_ctx_internal(; 15060 phys_ctx,; 15061 ""cannot set socket option SO_REUSEADDR (entry %i)"",; 15062 portsTotal);; 15063 }; 15064#endif; 15065 ; 15066#if defined(USE_X_DOM_SOCKET); 15067 if (ip_version == 99) {; 15068 /* Unix domain socket */; 15069 } else; 15070#endif; 15071 ; 15072 if (ip_version > 4) {; 15073 /* Could be 6 for IPv6 onlyor 10 (4+6) for IPv4+IPv6 */; 15074#if defined(USE_IPV6); 15075 if (ip_version > 6) {; 15076 if (so.lsa.sa.sa_family == AF_INET6; 15077 && setsockopt(so.sock,; 15078 IPPROTO_IPV6,; 15079 IPV6_V6ONLY,; 15080 (void *)&off,; 15081 sizeof(off)); 15082 != 0) {; 15083 ; 15084 /* Set IPv6 only option, but don't abort on errors. */; 15085 mg_cry_ctx_internal(phys_ctx,; 15086 ""cannot set socket option ""; 15087 ""IPV6_V6ONLY=off (entry %i)"",; 15088 portsTotal);; 15089 }; 15090 } else {; 15091 if (so.lsa.sa.sa_family == AF_INET6; 15092 && setsockopt(so.sock,; 15093 IPPROTO_IPV6,; 15094 IPV6_V6ONLY,; 15095 (void *)&on,; 15096 sizeof(on)); 15097 != 0) {; 15098 ; 15099 /* Set IPv6 only option, but don't abort on errors. */; 15100 mg_cry_ctx_internal(phys_ctx,; 15101 ""cannot set socket option ""; 15102 ""IPV6_V6ONLY=on (entry %i)"",; 15103 portsTotal);; 15104 }; 15105 }; 15106#else; 15107 mg_cry_ctx_internal(phys_ctx, ""%s"", ""IPv6 not available"");; 15108 closesocket(so.sock);; 15109 so.sock = INVALID_SOCKET;; 15110 continue;; 15111#endif; 15112 }; 15113 ; 15114 if (so.lsa.sa.sa_family == AF_INET) {; 15115 ; 15116 len = sizeof(so.lsa.sin);; 15117 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15118 mg_cry_ctx_internal(phys_ctx,; 15119 ""cannot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:446310,error,errors,446310,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['errors']
Availability,"43 TClass__GetCallingNewRAII callingNew(defConstructor);; 5144 p = fCollectionProxy->NewObject(arena);; 5145 }; 5146 } else if (!HasInterpreterInfo() && !fCollectionProxy) {; 5147 // There is no dictionary at all and we do not have; 5148 // the services of a collection proxy available, so; 5149 // use the streamer info to approximate calling a; 5150 // constructor (basically we just make sure that the; 5151 // pointer data members are null, unless they are marked; 5152 // as preallocated with the ""->"" comment, in which case; 5153 // we default-construct an object to point at).; 5154 ; 5155 // ???BUG??? ???WHY???; 5156 // Do not register any TObject's that we create; 5157 // as a result of creating this object.; 5158 Bool_t statsave = GetObjectStat();; 5159 if(statsave) {; 5160 SetObjectStat(kFALSE);; 5161 }; 5162 ; 5163 TVirtualStreamerInfo* sinfo = GetStreamerInfo();; 5164 if (!sinfo) {; 5165 Error(""New with placement"", ""Cannot construct class '%s' version %d at address %p, no streamer info available!"", GetName(), fClassVersion, arena);; 5166 return nullptr;; 5167 }; 5168 ; 5169 {; 5170 TClass__GetCallingNewRAII callingNew(defConstructor);; 5171 p = { sinfo->New(arena), sinfo };; 5172 }; 5173 ; 5174 // ???BUG???; 5175 // Allow TObject's to be registered again.; 5176 if(statsave) {; 5177 SetObjectStat(statsave);; 5178 }; 5179 ; 5180 } else {; 5181 Error(""New with placement"", ""This cannot happen!"");; 5182 }; 5183 ; 5184 return p;; 5185}; 5186 ; 5187////////////////////////////////////////////////////////////////////////////////; 5188/// Return a pointer to a newly allocated array of objects; 5189/// of this class.; 5190/// The class must have a default constructor. For meaning of; 5191/// defConstructor, see TClass::IsCallingNew().; 5192 ; 5193void *TClass::NewArray(Long_t nElements, ENewType defConstructor) const; 5194{; 5195 auto obj = NewObjectArray(nElements, defConstructor);; 5196 if (obj.GetPtr() && obj.GetAllocator()) {; 5197 // Register the object for special",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:197297,avail,available,197297,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['avail'],['available']
Availability,"43 x = r*TMath::Cos(phi);; 244 y = r*TMath::Sin(phi);; 245}; 246 ; 247////////////////////////////////////////////////////////////////////////////////; 248/// Returns an exponential deviate.; 249///; 250/// exp( -t/tau ); 251 ; 252Double_t TRandom::Exp(Double_t tau); 253{; 254 Double_t x = Rndm(); // uniform on ] 0, 1 ]; 255 Double_t t = -tau * TMath::Log( x ); // convert to exponential distribution; 256 return t;; 257}; 258 ; 259////////////////////////////////////////////////////////////////////////////////; 260/// Samples a random number from the standard Normal (Gaussian) Distribution; 261/// with the given mean and sigma.; 262/// Uses the Acceptance-complement ratio from W. Hoermann and G. Derflinger; 263/// This is one of the fastest existing method for generating normal random variables.; 264/// It is a factor 2/3 faster than the polar (Box-Muller) method used in the previous; 265/// version of TRandom::Gaus. The speed is comparable to the Ziggurat method (from Marsaglia); 266/// implemented for example in GSL and available in the MathMore library.; 267///; 268/// REFERENCE: - W. Hoermann and G. Derflinger (1990):; 269/// The ACR Method for generating normal random variables,; 270/// OR Spektrum 12 (1990), 181-185.; 271///; 272/// Implementation taken from; 273/// UNURAN (c) 2000 W. Hoermann & J. Leydold, Institut f. Statistik, WU Wien; 274 ; 275Double_t TRandom::Gaus(Double_t mean, Double_t sigma); 276{; 277 const Double_t kC1 = 1.448242853;; 278 const Double_t kC2 = 3.307147487;; 279 const Double_t kC3 = 1.46754004;; 280 const Double_t kD1 = 1.036467755;; 281 const Double_t kD2 = 5.295844968;; 282 const Double_t kD3 = 3.631288474;; 283 const Double_t kHm = 0.483941449;; 284 const Double_t kZm = 0.107981933;; 285 const Double_t kHp = 4.132731354;; 286 const Double_t kZp = 18.52161694;; 287 const Double_t kPhln = 0.4515827053;; 288 const Double_t kHm1 = 0.516058551;; 289 const Double_t kHp1 = 3.132731354;; 290 const Double_t kHzm = 0.375959516;; 291 const Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRandom_8cxx_source.html:13657,avail,available,13657,doc/master/TRandom_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRandom_8cxx_source.html,1,['avail'],['available']
Availability,43.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80893,error,error,80893,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"436 virtual Bool_t ExpandPathName(TString &path);; 437 virtual char *ExpandPathName(const char *path);; 438 virtual Bool_t AccessPathName(const char *path, EAccessMode mode = kFileExists);; 439 virtual Bool_t IsPathLocal(const char *path);; 440 virtual int CopyFile(const char *from, const char *to, Bool_t overwrite = kFALSE);; 441 virtual int Rename(const char *from, const char *to);; 442 virtual int Link(const char *from, const char *to);; 443 virtual int Symlink(const char *from, const char *to);; 444 virtual int Unlink(const char *name);; 445 int GetPathInfo(const char *path, Long_t *id, Long_t *size, Long_t *flags, Long_t *modtime);; 446 int GetPathInfo(const char *path, Long_t *id, Long64_t *size, Long_t *flags, Long_t *modtime);; 447 virtual int GetPathInfo(const char *path, FileStat_t &buf);; 448 virtual int GetFsInfo(const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);; 449 virtual int Chmod(const char *file, UInt_t mode);; 450 virtual int Umask(Int_t mask);; 451 virtual int Utime(const char *file, Long_t modtime, Long_t actime);; 452 virtual const char *UnixPathName(const char *unixpathname);; 453 virtual const char *FindFile(const char *search, TString& file, EAccessMode mode = kFileExists);; 454 virtual char *Which(const char *search, const char *file, EAccessMode mode = kFileExists);; 455 virtual TList *GetVolumes(Option_t *) const { return nullptr; }; 456 ; 457 //---- Users & Groups; 458 virtual Int_t GetUid(const char *user = nullptr);; 459 virtual Int_t GetGid(const char *group = nullptr);; 460 virtual Int_t GetEffectiveUid();; 461 virtual Int_t GetEffectiveGid();; 462 virtual UserGroup_t *GetUserInfo(Int_t uid);; 463 virtual UserGroup_t *GetUserInfo(const char *user = nullptr);; 464 virtual UserGroup_t *GetGroupInfo(Int_t gid);; 465 virtual UserGroup_t *GetGroupInfo(const char *group = nullptr);; 466 ; 467 //---- Environment Manipulation; 468 virtual void Setenv(const char *name, const char *value);; 469 virtual void Unsetenv(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:19761,mask,mask,19761,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['mask'],['mask']
Availability,43603.6 4; : 989 | 3.88349 5.24185 0.0200475 0.00175499 43733.8 5; : 990 | 4.0647 4.52576 0.020036 0.00175545 43762.3 6; : 991 | 3.77396 5.32769 0.0200783 0.00175786 43667.1 7; : 992 | 3.45322 4.61211 0.0200841 0.00175232 43640 8; : 993 | 3.32586 4.54016 0.0200585 0.00176018 43719.9 9; : 994 | 3.54317 4.65875 0.0201539 0.00181263 43617.4 10; : 995 | 3.38008 5.03795 0.0206532 0.00179392 42419.4 11; : 996 | 3.40103 4.41295 0.0204644 0.00176564 42783.5 12; : 997 | 3.23461 4.8031 0.0203306 0.00176616 43093.1 13; : 998 | 3.41797 4.46788 0.0203618 0.00175568 42996.7 14; : 999 Minimum Test error found - save the configuration ; : 999 | 3.31412 4.14973 0.0202938 0.00187677 43438 0; : 1000 | 3.20867 4.17264 0.0201802 0.00179416 43511.4 1; : 1001 | 3.31742 4.17699 0.020287 0.00175118 43159.8 2; : 1002 | 3.35839 4.8143 0.0207434 0.00177731 42180.6 3; : 1003 Minimum Test error found - save the configuration ; : 1003 | 3.42381 4.04915 0.0202591 0.00184351 43441.4 0; : 1004 Minimum Test error found - save the configuration ; : 1004 | 3.27488 4.0384 0.0205262 0.00189376 42935.9 0; : 1005 | 3.09776 4.19224 0.0200956 0.00176781 43649.6 1; : 1006 Minimum Test error found - save the configuration ; : 1006 | 3.1757 3.91876 0.0201134 0.00183093 43757.7 0; : 1007 | 3.17471 4.33126 0.0203423 0.00178093 43100.3 1; : 1008 | 3.23752 4.46797 0.0204556 0.0017847 42847.4 2; : 1009 | 3.5099 4.04664 0.0203963 0.00177013 42950.3 3; : 1010 | 3.39993 4.32216 0.0201011 0.00176915 43639.8 4; : 1011 | 3.28002 4.35065 0.020045 0.00175269 43734.2 5; : 1012 | 3.24301 4.1309 0.0202482 0.00178612 43332 6; : 1013 | 3.47685 4.13785 0.0205714 0.00178247 42578.3 7; : 1014 | 3.38367 4.59532 0.0203076 0.00178189 43183.2 8; : 1015 Minimum Test error found - save the configuration ; : 1015 | 3.15343 3.81668 0.0204522 0.00185272 43011.9 0; : 1016 | 2.99441 4.01707 0.0202697 0.00183758 43402.5 1; : 1017 | 3.3956 4.54944 0.0201133 0.00176644 43604.1 2; : 1018 | 3.2792 3.85661 0.0202747 0.00181943 43348.2 3; : 1019 | 3.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:113429,error,error,113429,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimum Test error found - save the configuration ; : 585 | 145.457 91.5459 0.020121 0.00181177 43693.8 0; : 586 Minimum Test error found - save the configuration ; : 586 | 143.954 90.9958 0.02013 0.00181326 43675.8 0; : 587 Minimum Test error found - save the configuration ; : 587 | 142.242 89.8853 0.0201892 0.0018256 43564.4 0; : 588 Minimum Test error found - save the configuration ; : 588 | 140.475 88.3998 0.0202535 0.0018437 43455.2 0; : 589 M,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76538,error,error,76538,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:104078,error,error,104078,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103964,error,error,103964,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92705,error,error,92705,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 9.00589 0.0202045 0.00176006 43373.5 2; : 877 | 5.64383 8.64736 0.0203248 0.00179972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103794,error,error,103794,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,4394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 320,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16628,error,error,16628,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability,"44 ; 15045 /* Set reuse option, but don't abort on errors. */; 15046 mg_cry_ctx_internal(; 15047 phys_ctx,; 15048 ""cannot set socket option SO_EXCLUSIVEADDRUSE (entry %i)"",; 15049 portsTotal);; 15050 }; 15051#else; 15052 if (setsockopt(so.sock,; 15053 SOL_SOCKET,; 15054 SO_REUSEADDR,; 15055 (SOCK_OPT_TYPE)&on,; 15056 sizeof(on)); 15057 != 0) {; 15058 ; 15059 /* Set reuse option, but don't abort on errors. */; 15060 mg_cry_ctx_internal(; 15061 phys_ctx,; 15062 ""cannot set socket option SO_REUSEADDR (entry %i)"",; 15063 portsTotal);; 15064 }; 15065#endif; 15066 ; 15067#if defined(USE_X_DOM_SOCKET); 15068 if (ip_version == 99) {; 15069 /* Unix domain socket */; 15070 } else; 15071#endif; 15072 ; 15073 if (ip_version > 4) {; 15074 /* Could be 6 for IPv6 onlyor 10 (4+6) for IPv4+IPv6 */; 15075#if defined(USE_IPV6); 15076 if (ip_version > 6) {; 15077 if (so.lsa.sa.sa_family == AF_INET6; 15078 && setsockopt(so.sock,; 15079 IPPROTO_IPV6,; 15080 IPV6_V6ONLY,; 15081 (void *)&off,; 15082 sizeof(off)); 15083 != 0) {; 15084 ; 15085 /* Set IPv6 only option, but don't abort on errors. */; 15086 mg_cry_ctx_internal(phys_ctx,; 15087 ""cannot set socket option ""; 15088 ""IPV6_V6ONLY=off (entry %i)"",; 15089 portsTotal);; 15090 }; 15091 } else {; 15092 if (so.lsa.sa.sa_family == AF_INET6; 15093 && setsockopt(so.sock,; 15094 IPPROTO_IPV6,; 15095 IPV6_V6ONLY,; 15096 (void *)&on,; 15097 sizeof(on)); 15098 != 0) {; 15099 ; 15100 /* Set IPv6 only option, but don't abort on errors. */; 15101 mg_cry_ctx_internal(phys_ctx,; 15102 ""cannot set socket option ""; 15103 ""IPV6_V6ONLY=on (entry %i)"",; 15104 portsTotal);; 15105 }; 15106 }; 15107#else; 15108 mg_cry_ctx_internal(phys_ctx, ""%s"", ""IPv6 not available"");; 15109 closesocket(so.sock);; 15110 so.sock = INVALID_SOCKET;; 15111 continue;; 15112#endif; 15113 }; 15114 ; 15115 if (so.lsa.sa.sa_family == AF_INET) {; 15116 ; 15117 len = sizeof(so.lsa.sin);; 15118 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15119 mg_cry_ctx_internal(phys_ctx,; 15120 ""cannot",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:446343,error,errors,446343,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['errors']
Availability,"444; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::GetUniqueIDvirtual UInt_t GetUniqueID() constReturn the unique object id.Definition TObject.cxx:462; TObject::SysErrorvirtual void SysError(const char *method, const char *msgfmt,...) constIssue system error message.Definition TObject.cxx:1007; TObject::IsOnHeapR__ALWAYS_INLINE Bool_t IsOnHeap() constDefinition TObject.h:152; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::IsZombieR__ALWAYS_INLINE Bool_t IsZombie() constDefinition TObject.h:153; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::SetUniqueIDvirtual void SetUniqueID(UInt_t uid)Set the unique object id.Definition TObject.cxx:797; TObject::GetTitlevirtual const char * GetTitle() constReturns title of object.Definition TObject.cxx:488; TObject::MakeZombievoid MakeZombie()Definition TObject.h:53; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TObject::Infovirtual void Info(const char *method, const char *msgfmt,...) constIssue info message.Definition TObject.cxx:967; TPMERegexpWrapper for PCRE library (Perl Compatible Regular Expressions).Definition TPRegexp.h:97; TPMERegexp::MatchInt_t Match(const TString &s, UInt_t start=0)Runs a match on s against the regex 'this' was created with.Definition TPRegexp.cxx:797; TPluginHandle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:238531,error,error,238531,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['error'],['error']
Availability,"445 of file TUDPSocket.cxx. ◆ SendObject(). Int_t TUDPSocket::SendObject ; (; const TObject * ; obj, . Int_t ; kind = kMESS_OBJECT . ). virtual . Send an object. ; Returns the number of bytes sent and -1 in case of error. In case the ""kind"" has been or'ed with kMESS_ACK, the call will only return after having received an acknowledgement, making the sending synchronous. ; Definition at line 566 of file TUDPSocket.cxx. ◆ SendProcessIDs(). void TUDPSocket::SendProcessIDs ; (; const TMessage & ; mess). protected . Check if TProcessIDs must be sent. ; The list of TProcessIDs in the object in the message is found by looking in the TMessage bits. We send only the TProcessIDs not yet send on this socket. ; Definition at line 651 of file TUDPSocket.cxx. ◆ SendRaw(). Int_t TUDPSocket::SendRaw ; (; const void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). virtual . Send a raw buffer of specified length. ; Using option kOob one can send OOB data. Returns the number of bytes sent or -1 in case of error. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET). ; Definition at line 586 of file TUDPSocket.cxx. ◆ SendStreamerInfos(). void TUDPSocket::SendStreamerInfos ; (; const TMessage & ; mess). protected . Check if TStreamerInfo must be sent. ; The list of TStreamerInfo of classes in the object in the message is in the fInfos list of the message. We send only the TStreamerInfos not yet sent on this socket. ; Definition at line 616 of file TUDPSocket.cxx. ◆ SetCompressionAlgorithm(). void TUDPSocket::SetCompressionAlgorithm ; (; Int_t ; algorithm = ROOT::RCompressionSetting::EAlgorithm::kUseGlobal). See comments for function SetCompressionSettings. ; Definition at line 1016 of file TUDPSocket.cxx. ◆ SetCompressionLevel(). void TUDPSocket::SetCompressionLevel ; (; Int_t ; level = ROOT::RCompressionSetting::ELevel::kUseMin). See comments for function SetCompressionSettings. ; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUDPSocket.html:32343,error,error,32343,doc/master/classTUDPSocket.html,https://root.cern,https://root.cern/doc/master/classTUDPSocket.html,1,['error'],['error']
Availability,"454 fEY[i] = ey;; 455 fEZ[i] = ez;; 456}; 457 ; 458 ; 459////////////////////////////////////////////////////////////////////////////////; 460/// Stream an object of class TGraph2DErrors.; 461 ; 462void TGraph2DErrors::Streamer(TBuffer &b); 463{; 464 if (b.IsReading()) {; 465 UInt_t R__s, R__c;; 466 Version_t R__v = b.ReadVersion(&R__s, &R__c);; 467 b.ReadClassBuffer(TGraph2DErrors::Class(), this, R__v, R__s, R__c);; 468 } else {; 469 b.WriteClassBuffer(TGraph2DErrors::Class(),this);; 470 }; 471}; b#define b(i)Definition RSha256.hxx:100; g#define g(i)Definition RSha256.hxx:105; Version_tshort Version_tDefinition RtypesCore.h:65; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassImp#define ClassImp(name)Definition Rtypes.h:382; TBuffer.h; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; TGraph2DErrors.h; TH2.h; THLimitsFinder.h; TVirtualFitter.h; TVirtualPad.h; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TGraph2DErrorsGraph 2D class with errors.Definition TGraph2DErrors.h:26; TGraph2DErrors::Streamervoid Streamer(TBuffer &) overrideStream an object of class TGraph2DErrors.Definition TGraph2DErrors.cxx:462; TGraph2DErrors::GetErrorZDouble_t GetErrorZ(Int_t bin) const overrideThis function is called by Graph2DFitChisquare.Definition TGraph2DErrors.cxx:230; TGraph2DErrors::~TGraph2DErrors~TGraph2DErrors() overrideTGraph2DErrors destructor.Definition TGraph2DErrors.cxx:137; TGraph2DErrors::GetYminEDouble_t GetYminE() const overrideReturns the Y minimum with errors.Definition TGraph2DErrors.cxx:274; TGraph2DErrors::GetXminEDouble_t GetXminE() const overrideReturns the X minimum with errors.Definition TGraph2DErrors.cxx:252; TGraph2DErrors::GetEZDouble_t * GetEZ() const overrideDefinition TGraph2DErrors.h:47; TGraph2DErrors::fEYDouble_t * fEY[fNpoints] array of Y errorsDefinition TGraph2DErrors.h:30; TGraph2DErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraph2DErrors.h:46; TGraph2DErrors::SetPoint",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:14427,error,errors,14427,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['error'],['errors']
Availability,"456 */; 457 template <typename ItOutput, typename ItTruth, typename ItDelta, typename ItInvActFnc>; 458 double softMaxCrossEntropy (ItOutput itProbabilityBegin, ItOutput itProbabilityEnd, ItTruth itTruthBegin, ItTruth /*itTruthEnd*/, ItDelta itDelta, ItDelta itDeltaEnd, ItInvActFnc /*itInvActFnc*/, double patternWeight); 459 {; 460 double errorSum = 0.0;; 461 ; 462 bool hasDeltas = (itDelta != itDeltaEnd);; 463 // output - truth; 464 ItTruth itTruth = itTruthBegin;; 465 for (auto itProbability = itProbabilityBegin; itProbability != itProbabilityEnd; ++itProbability, ++itTruth); 466 {; 467// assert (itTruth != itTruthEnd);; 468 double probability = (*itProbability);; 469 double truth = (*itTruth);; 470 if (hasDeltas); 471 {; 472 (*itDelta) = probability - truth;; 473// (*itDelta) = (*itInvActFnc)(sm) * delta * patternWeight;; 474 ++itDelta; //++itInvActFnc;; 475 }; 476 double error (0);; 477 ; 478 error += truth * log (probability);; 479 errorSum += error;; 480 }; 481 ; 482 return -errorSum * patternWeight;; 483 }; 484 ; 485 ; 486 ; 487 ; 488 ; 489 ; 490 ; 491 ; 492 ; 493/*! \brief compute the weight decay for regularization (L1 or L2); 494 *; 495 *; 496 */; 497 template <typename ItWeight>; 498 double weightDecay (double error, ItWeight itWeight, ItWeight itWeightEnd, double factorWeightDecay, EnumRegularization eRegularization); 499 {; 500 if (eRegularization == EnumRegularization::L1); 501 {; 502 // weight decay (regularization); 503 double w = 0;; 504 size_t n = 0;; 505 for (; itWeight != itWeightEnd; ++itWeight, ++n); 506 {; 507 double weight = (*itWeight);; 508 w += std::fabs (weight);; 509 }; 510 return error + 0.5 * w * factorWeightDecay / n;; 511 }; 512 else if (eRegularization == EnumRegularization::L2); 513 {; 514 // weight decay (regularization); 515 double w = 0;; 516 size_t n = 0;; 517 for (; itWeight != itWeightEnd; ++itWeight, ++n); 518 {; 519 double weight = (*itWeight);; 520 w += weight*weight;; 521 }; 522 return error + 0.5 * w * factorWeightDecay /",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:14212,error,error,14212,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,7,['error'],"['error', 'errorSum']"
Availability,"46 if (fWrapped); 447 invError = e;; 448 else; 449 invError = ( e != 0.0 ) ? 1.0/e : 1.0;; 450 ; 451 return GetPoint( ipoint, value );; 452 }; 453 ; 454 /**; 455 Retrieve the errors on the point (coordinate and value) for the given fit point; 456 It must be called only when the coordinate errors are stored otherwise it will produce an; 457 assert.; 458 */; 459 // not threadsafe, to be replaced with never constructs!; 460 // for example: just return std::array or std::vector, there's; 461 // is going to be only minor overhead in c++11.; 462 const double* GetPointError(unsigned int ipoint, double & errvalue) const; 463 {; 464 assert( ipoint < fMaxPoints );; 465 assert( fErrorType == kCoordError || fErrorType == kAsymError );; 466 ; 467 errvalue = Error( ipoint );; 468 return CoordErrors( ipoint );; 469 }; 470 ; 471 /**; 472 Get errors on the point (coordinate errors and asymmetric value errors) for the; 473 given fit point.; 474 It must be called only when the coordinate errors and asymmetric errors are stored; 475 otherwise it will produce an assert.; 476 */; 477 // not threadsafe, to be replaced with never constructs!; 478 // for example: just return std::array or std::vector, there's; 479 // is going to be only minor overhead in c++11.; 480 const double* GetPointError(unsigned int ipoint, double & errlow, double & errhigh) const; 481 {; 482 assert( ipoint < fMaxPoints );; 483 assert( fErrorType == kAsymError );; 484 assert( !fDataErrorPtr && fDataErrorHighPtr && fDataErrorLowPtr );; 485 assert( fDataError.empty() );; 486 assert( fDataErrorHigh.empty() || &fDataErrorHigh.front() == fDataErrorHighPtr );; 487 assert( fDataErrorLow.empty() || &fDataErrorLow.front() == fDataErrorLowPtr );; 488 assert( fDataErrorLow.empty() == fDataErrorHigh.empty() );; 489 ; 490 errhigh = fDataErrorHighPtr[ ipoint ];; 491 errlow = fDataErrorLowPtr[ ipoint ];; 492 ; 493 return CoordErrors( ipoint );; 494 }; 495 ; 496 /**; 497 returns a single coordinate error component of a point.; 498 T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:16716,error,errors,16716,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,2,['error'],['errors']
Availability,"461; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=486.968, denominator=wrap_pdf_Int[pTV]=829530; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.154263 cHl3=2.95902 cHq3=-2.78828; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=59.1285, denominator=wrap_pdf_Int[pTV]=200921; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.338546 cHl3=0.879879 cHq3=-1.35856; RooAbsPdf::wrap_pdf_over_wrap_pdf_Int[pTV][ numerator=wrap_pdf denominator=wrap_pdf_Int[pTV] ]; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; p.d.f value is less than zero, trying to recover @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; getLogVal() top-level p.d.f evaluates to NaN @ numerator=wrap_pdf=14.3535, denominator=wrap_pdf_Int[pTV]=34082.1; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (86348.3) to force MIGRAD to back out of this region. Error log follows.; Parameter values: cHDD=0.372361 cHl3=0.491134 cHq3=-0.886807",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html:15330,error,error,15330,doc/master/rf712__lagrangianmorphfit_8C.html,https://root.cern,https://root.cern/doc/master/rf712__lagrangianmorphfit_8C.html,2,['error'],['error']
Availability,"464 const char *name5, const char *name6, const char *name7, const char *name8, const char *name9, const char *name10); 3465{; 3466 // Note: this is not made a variadic template method because it would; 3467 // presumably break the context menu in the TBrowser. Also, probably this; 3468 // method should not be virtual, because if the user wants to change; 3469 // parameter name setting behavior, the SetParName() method can be; 3470 // overridden.; 3471 if (fFormula); 3472 fFormula->SetParNames(name0, name1, name2, name3, name4, name5, name6, name7, name8, name9, name10);; 3473 else; 3474 fParams->SetParNames(name0, name1, name2, name3, name4, name5, name6, name7, name8, name9, name10);; 3475}; 3476////////////////////////////////////////////////////////////////////////////////; 3477/// Set error for parameter number ipar; 3478 ; 3479void TF1::SetParError(Int_t ipar, Double_t error); 3480{; 3481 if (ipar < 0 || ipar > GetNpar() - 1) return;; 3482 fParErrors[ipar] = error;; 3483}; 3484 ; 3485 ; 3486////////////////////////////////////////////////////////////////////////////////; 3487/// Set errors for all active parameters; 3488/// when calling this function, the array errors must have at least fNpar values; 3489 ; 3490void TF1::SetParErrors(const Double_t *errors); 3491{; 3492 if (!errors) return;; 3493 for (Int_t i = 0; i < GetNpar(); i++) fParErrors[i] = errors[i];; 3494}; 3495 ; 3496 ; 3497////////////////////////////////////////////////////////////////////////////////; 3498/// Set lower and upper limits for parameter ipar.; 3499/// The specified limits will be used in a fit operation.; 3500/// Note that when this function is a pre-defined function (e.g. gaus); 3501/// one needs to use the fit option ""B"" to have the limits used in the fit.; 3502/// See TH1::Fit(TF1*, Option_t *, Option_t *, Double_t, Double_t) for the fitting documentation; 3503/// and the [fitting options](\ref HFitOpt); 3504///; 3505/// To fix a parameter, use TF1::FixParameter; 3506 ; 3507void T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:133009,error,error,133009,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,8,['error'],"['error', 'errors']"
Availability,469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96938,error,error,96938,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,48 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.97436 0.0200851 0.00180832 43771.4 0; : 961 | 3.60053 5.18492 0.0200347 0.00175376 43761.4 1; : 962 | 4.06747 4.98756 0.0202606 0.00194113 43669.3 2; : 963 | 3.72111 5.2317 0.020058 0.00176556 43733.9 3; : 964 | 3.60317 5.20936 0.020113 0.00175786 43584.5 4; : 965 | 3.63413 5.37485 0.0201057 0.00175921 43605 5; : 966 | 3.74764 5.16986 0.0200985 0.00180899 43741 6; : 967 | 3.64317 5.0911 0.0200896 0.00175556 43634.6 7; : 968 Minimum Test error found - save the configuration ; : 968 | 3.75704 4.83525 0.0200988 0.00182012 43766.9 0; : 969 | 3.53402 4.87481 0.020433 0.0017954 42924.1 1; : 970 | 3.39152 4.92875 0.0207012 0.00184125 42417.9 2; : 971 | 3.38481 4.91243 0.0205923 0.00181714 42609.4 3; : 972 | 3.49443 4.93416 0.0204303 0.00180084 42942.7 4; : 973 | 3.50169 4.88411 0.0201535 0.00176496 43505.4 5; : 974 | 3.70493 4.95915 0.0200555 0.00176513 43738.9 6; : 975 Minimum Test error found - save the configuration ; : 975 | 3.52504 4.65912 0.0202218 0.00185299 43552 0; : 976 | 3.7346 5.23443 0.0200603 0.00176255 43721.2 1; : 977 | 3.73856 4.9727 0.0200443 0.00176151 43757 2; : 978 | 3.60727 4.99113 0.0200479 0.00175633 43736 3; : 979 | 3.40672 4.84357 0.0200357 0.00175685 43766.5 4; : 980 | 3.44899 4.83288 0.0200548 0.0017499 43704.2 5; : 981 | 3.46445 4.72048 0.0203135 0.00176046 43119.7 6; : 982 Minimum Test error found - save the configuration ; : 982 | 3.46604 4.64127 0.0202116 0.00183381 43530.8 0; : 983 Minimum Test error found - save the configuration ; : 983 | 3.37896 4.59559 0.0201715 0.00182642 43608.5 0; : 984 Minimum Test error found - save the configuration ; : 984 | 3.36213 4.34126 0.0202597 0.00185498 43467.1 0; : 985 | 3.39032 4.51659 0.0201503 0.00185184 43719.5 1; : 986 | 3.5234 4.95577 0.0201762 0.0017578 43434.8 2; : 987 | 3.50466 4.60061 0.0201538 0.00175522 43481.6 3; : 988 | 3.61316 4.68965 0.0201071 0.00176 43603.6 4; : 989 | 3.88349 5.24185 0.0200,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:111469,error,error,111469,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"48 assert( kCoordError == fErrorType );; 549 assert( !fData.empty() && fDataPtr );; 550 assert( !fDataError.empty() && fDataErrorPtr );; 551 assert( fDataErrorHigh.empty() && !fDataErrorHighPtr );; 552 assert( fDataErrorLow.empty() && !fDataErrorLowPtr );; 553 assert( fCoordErrors.size() == fDim );; 554 assert( fCoordErrorsPtr.size() == fDim );; 555 ; 556 fData[ fNPoints ] = val;; 557 ; 558 for( unsigned int i=0; i<fDim; i++ ); 559 {; 560 assert( &fCoordErrors[i].front() == fCoordErrorsPtr[i] );; 561 ; 562 fCoordErrors[i][ fNPoints ] = ex[i];; 563 }; 564 // in this case we store the y error and not the inverse; 565 fDataError[ fNPoints ] = eval;; 566 ; 567 FitData::Add( x );; 568 fSumContent += val;; 569 if (val != 0 || eval != 1.0) fSumError2 += eval*eval;; 570 if (!fIsWeighted); 571 if (val != 0 && std::abs( eval*eval/val - 1.0) > 1.E-12) fIsWeighted = true;; 572 }; 573 ; 574 /**; 575 add multi-dim coordinate data with both error in coordinates and value; 576 */; 577 void BinData::Add( const double* x, double val, const double* ex, double elval, double ehval ); 578 {; 579 assert( kAsymError == fErrorType );; 580 ; 581 assert( !fData.empty() && fDataPtr );; 582 assert( !fDataErrorHigh.empty() && fDataErrorHighPtr );; 583 assert( !fDataErrorLow.empty() && fDataErrorLowPtr );; 584 assert( fDataError.empty() && !fDataErrorPtr );; 585 assert( fCoordErrors.size() == fDim );; 586 assert( fCoordErrorsPtr.size() == fDim );; 587 ; 588 fData[ fNPoints ] = val;; 589 ; 590 for( unsigned int i=0; i<fDim; i++ ); 591 {; 592 assert( &fCoordErrors[i].front() == fCoordErrorsPtr[i] );; 593 ; 594 fCoordErrors[i][ fNPoints ] = ex[i];; 595 }; 596 ; 597 fDataErrorLow[ fNPoints ] = elval;; 598 fDataErrorHigh[ fNPoints ] = ehval;; 599 ; 600 FitData::Add( x );; 601 fSumContent += val;; 602 if (val != 0 || elval != 1.0 || ehval != 1.0 ); 603 fSumError2 += (elval+ehval)*(elval+ehval)/4;; 604 }; 605 ; 606 ; 607 /**; 608 add the bin width data, a pointer to an array with the bin upper edge info",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:17779,error,error,17779,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,1,['error'],['error']
Availability,"485; TTreeA TTree represents a columnar dataset.Definition TTree.h:79; TTree::SetBranchStatusvirtual void SetBranchStatus(const char *bname, bool status=true, UInt_t *found=nullptr)Set branch status to Process or DoNotProcess.Definition TTree.cxx:8534; TTree::GetEntryvirtual Int_t GetEntry(Long64_t entry, Int_t getall=0)Read all branches of entry and return total number of bytes read.Definition TTree.cxx:5638; TTree::GetCurrentFileTFile * GetCurrentFile() constReturn pointer to the current file.Definition TTree.cxx:5479; TTree::GetDirectoryTDirectory * GetDirectory() constDefinition TTree.h:462; TTree::GetEntriesvirtual Long64_t GetEntries() constDefinition TTree.h:463; TTree::GetTreevirtual TTree * GetTree() constDefinition TTree.h:557; TTree::LoadTreevirtual Long64_t LoadTree(Long64_t entry)Set current entry.Definition TTree.cxx:6473; TTree::ResetBranchAddressesvirtual void ResetBranchAddresses()Tell all of our branches to drop their current objects and allocate new ones.Definition TTree.cxx:8075; TVectorT< Double_t >; bool; double; int; unsigned int; TMVAcreate variable transformationsDefinition GeneticMinimizer.h:22; TMVA::LargestCommonDividerInt_t LargestCommonDivider(Int_t a, Int_t b)Definition DataSetFactory.cxx:80; TMVA::EndlMsgLogger & Endl(MsgLogger &ml)Definition MsgLogger.h:148; TMath::IsNaNBool_t IsNaN(Double_t x)Definition TMath.h:892; TMath::MaxShort_t Max(Short_t a, Short_t b)Returns the largest of a and b.Definition TMathBase.h:250; TMath::FiniteInt_t Finite(Double_t x)Check if it is finite with a mask in order to be consistent in presence of fast math.Definition TMath.h:770; TMath::AbsShort_t Abs(Short_t d)Returns the absolute value of parameter Short_t d.Definition TMathBase.h:123; v@ vDefinition rootcling_impl.cxx:3699; whatstatic const char * whatDefinition stlLoader.cc:5; vecDefinition civetweb.c:1855; Types.h. tmvatmvasrcDataSetFactory.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:59 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:96504,mask,mask,96504,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['mask'],['mask']
Availability,4867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:107667,error,error,107667,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100420,error,error,100420,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"48; TGraphMultiErrors::SavePrimitivevoid SavePrimitive(std::ostream &out, Option_t *option="""") overrideSave primitive as a C++ statement(s) on output stream out.Definition TGraphMultiErrors.cxx:1729; TGraphMultiErrors::fSumErrorsModeInt_t fSumErrorsModeHow y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum = Absolute Addition.Definition TGraphMultiErrors.h:33; TGraphMultiErrors::GetLineWidthvirtual Width_t GetLineWidth() constReturn the line width.Definition TAttLine.h:35; TGraphMultiErrors::GetEXhighDouble_t * GetEXhigh() const overrideDefinition TGraphMultiErrors.h:142; TGraphMultiErrors::kAbsSum@ kAbsSumCalculate the absolute sum of all errors.Definition TGraphMultiErrors.h:60; TGraphMultiErrors::kSquareSum@ kSquareSumCalculate the square sum of all errors.Definition TGraphMultiErrors.h:59; TGraphMultiErrors::kOnlyFirst@ kOnlyFirstOnly take errors from first dimension.Definition TGraphMultiErrors.h:58; TGraphMultiErrors::GetAttFillvirtual TAttFill * GetAttFill(Int_t e)Get AttFill pointer for specified error dimension.Definition TGraphMultiErrors.cxx:1621; TGraphMultiErrors::SetLineStylevirtual void SetLineStyle(Int_t e, Style_t lstyle)Set Line Style of error e (-1 = Global and x errors).Definition TGraphMultiErrors.cxx:2095; TGraphMultiErrors::CopyPointsBool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy errors from fE*** to arrays[***] or to f*** Copy points.Definition TGraphMultiErrors.cxx:777; TGraphMultiErrors::SetPointEXhighvirtual void SetPointEXhigh(Int_t i, Double_t exH)Set exH value for point i.Definition TGraphMultiErrors.cxx:1869; TGraphMultiErrors::fExLDouble_t * fExL[fNpoints] array of X low errorsDefinition TGraphMultiErrors.h:35; TGraphMultiErrors::FillZerovoid FillZero(Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) overrideSet zero values for point arrays in the range [begin, end].Definition TGraphMultiErrors.cxx:802; TGraphMultiErrors::SetLineWidthvirtual void SetLineWidth(Int_t e, W",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:81342,error,error,81342,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability,"49 of file TSpectrumFit.h. ◆ fSigmaCalc. Double_t TSpectrumFit::fSigmaCalc. protected . calculated value of sigma parameter ; Definition at line 39 of file TSpectrumFit.h. ◆ fSigmaErr. Double_t TSpectrumFit::fSigmaErr. protected . error value of sigma parameter ; Definition at line 40 of file TSpectrumFit.h. ◆ fSigmaInit. Double_t TSpectrumFit::fSigmaInit. protected . initial value of sigma parameter ; Definition at line 38 of file TSpectrumFit.h. ◆ fSInit. Double_t TSpectrumFit::fSInit. protected . initial value of s parameter (relative amplitude of step), for details see html manual and references ; Definition at line 47 of file TSpectrumFit.h. ◆ fStatisticType. Int_t TSpectrumFit::fStatisticType. protected . type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood ; Definition at line 24 of file TSpectrumFit.h. ◆ fTCalc. Double_t TSpectrumFit::fTCalc. protected . calculated value of t parameter ; Definition at line 42 of file TSpectrumFit.h. ◆ fTErr. Double_t TSpectrumFit::fTErr. protected . error value of t parameter ; Definition at line 43 of file TSpectrumFit.h. ◆ fTInit. Double_t TSpectrumFit::fTInit. protected . initial value of t parameter (relative amplitude of tail), for details see html manual and references ; Definition at line 41 of file TSpectrumFit.h. ◆ fXmax. Int_t TSpectrumFit::fXmax. protected . last fitted channel ; Definition at line 23 of file TSpectrumFit.h. ◆ fXmin. Int_t TSpectrumFit::fXmin. protected . first fitted channel ; Definition at line 22 of file TSpectrumFit.h. Libraries for TSpectrumFit:. [legend]; The documentation for this class was generated from the following files:; hist/spectrum/inc/TSpectrumFit.h; hist/spectrum/src/TSpectrumFit.cxx. TSpectrumFit. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:44:29 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:57193,error,error,57193,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,1,['error'],['error']
Availability,4963 mean=5.09438 nbkg=142.436 nsig=172.312 sig1frac=0.886183; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 750; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-885.867) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.7962 a1=-0.414289 mean=5.07605 nbkg=135.514 nsig=167.164 sig1frac=0.927781; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-848.597) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.577138 a1=-0.518554 mean=5.09299 nbkg=144.203 nsig=156.938 sig1frac=0.54541; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 740; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 730; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 720; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 710; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 700; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-814.549) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.848973 a1=-0.489149 mean=5.08811 nbkg=132.911 nsig=150.647 sig1frac=0.826731; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 690; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 680; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 670; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-809.662) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.713661 a1=-0.606754 mean=5.02862 nbkg=142.583 nsig=145.399 sig1frac=0.623944; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 error,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:14627,error,errors,14627,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability,"49; Foption_t::Nochisqint NochisqDefinition Foption.h:45; Foption_t::Robustint RobustDefinition Foption.h:48; Foption_t::hRobustdouble hRobustDefinition Foption.h:51; Foption_t::Plusint PlusDefinition Foption.h:43; Foption_t::Integralint IntegralDefinition Foption.h:44; Foption_t::Boundint BoundDefinition Foption.h:31; Foption_t::Nostoreint NostoreDefinition Foption.h:41; Foption_t::Moreint MoreDefinition Foption.h:38; Foption_t::PChi2int PChi2Definition Foption.h:33; Foption_t::Chi2int Chi2Definition Foption.h:32; Foption_t::Minuitint MinuitDefinition Foption.h:46; Foption_t::Errorsint ErrorsDefinition Foption.h:37; Foption_t::NoErrXint NoErrXDefinition Foption.h:47; Foption_t::Verboseint VerboseDefinition Foption.h:30; Foption_t::Userint UserDefinition Foption.h:35; Foption_t::BinVolumeint BinVolumeDefinition Foption.h:50; ROOT::Fit::DataOptionsDataOptions : simple structure holding the options on how the data are filled.Definition DataOptions.h:28; ROOT::Fit::DataOptions::fErrors1bool fErrors1use all errors equal to 1, i.e. fit without errors (default is false)Definition DataOptions.h:52; ROOT::Fit::DataOptions::fNormBinVolumebool fNormBinVolumenormalize data by a normalized the bin volume (bin volume divided by a reference value)Definition DataOptions.h:49; ROOT::Fit::DataOptions::fUseRangebool fUseRangeuse the function range when creating the fit data (default is false)Definition DataOptions.h:51; ROOT::Fit::DataOptions::fUseEmptybool fUseEmptyuse empty bins (default is false) with a fixed error of 1Definition DataOptions.h:50; ROOT::Fit::DataOptions::fIntegralbool fIntegraluse integral of bin content instead of bin center (default is false)Definition DataOptions.h:47; ROOT::Fit::DataOptions::fExpErrorsbool fExpErrorsuse expected errors from the function and not from the dataDefinition DataOptions.h:53; ROOT::Fit::DataOptions::fBinVolumebool fBinVolumenormalize data by the bin volume (it is used in the Poisson likelihood fits)Definition DataOptions.h:48; ROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:64753,error,errors,64753,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['error'],['errors']
Availability,4; : 1131 | 2.55367 2.59723 0.0200573 0.00177202 43751.1 15; : 1132 | 2.73554 2.74944 0.020135 0.00176885 43558.3 16; : 1133 | 2.68556 2.54814 0.0200421 0.00176557 43772.1 17; : 1134 | 2.52258 2.47147 0.0200724 0.0017645 43696.9 18; : 1135 | 2.54757 2.67188 0.0200351 0.00176104 43778 19; : 1136 | 2.63764 2.78828 0.0200363 0.0017639 43781.8 20; : 1137 Minimum Test error found - save the configuration ; : 1137 | 2.5743 2.19951 0.0201074 0.00183887 43791.1 0; : 1138 | 2.48438 2.23196 0.0200456 0.00175699 43743.1 1; : 1139 | 2.50812 2.26597 0.0200665 0.00175755 43694.4 2; : 1140 | 2.3988 2.24899 0.0200386 0.00175805 43762.4 3; : 1141 | 2.7672 3.06409 0.0200539 0.00176427 43740.6 4; : 1142 | 2.49905 2.42566 0.0200843 0.00176461 43669 5; : 1143 | 2.42701 2.41776 0.0200668 0.00178464 43758.5 6; : 1144 | 2.26582 2.24235 0.0200333 0.00176428 43790 7; : 1145 | 2.32819 2.25052 0.0200451 0.00176354 43759.9 8; : 1146 | 2.38829 2.61112 0.0201128 0.00176481 43601.4 9; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2.28835 2.14929 0.0200647 0.00175706 43697.6 6; : 1154 Minimum Test error found - save the configuration ; : 1154 | 2.32858 2.0616 0.0201066 0.00182104 43750.5 0; : 1155 | 2.28245 2.19923 0.0201625 0.00180627 43581.8 1; : 1156 | 2.38727 2.77806 0.0202008 0.00175311 43365.8 2; : 1157 | 2.61021 2.4986 0.0209687 0.00176336 41655.1 3; : 1158 | 2.53941 2.59597 0.020405 0.00180555 43012.1 4; : 1159 | 2.53249 2.63389 0.0200503 0.0017649 43750.8 5; : 1160 | 2.39348 2.24444 0.0200488 0.00176513 43755 6; : 1161 | 2.30038 2.13197 0.0204918 0.00181558 42835.3 7; : 1162 Minimum Test error found - save the configuration ; : 1162 |,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:122623,error,error,122623,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"4_t size); Receive a file, either sent by a client or a master server.; If bin is true it is a binary file, other wise it is an ASCII; file and we need to check for Windows \r tokens. Returns -1 in; case of error, 0 otherwise. void Run(Bool_t retrn = kFALSE); Main server eventloop. void SendLogFile(Int_t status = 0, Int_t start = -1, Int_t end = -1); Send log file to master.; If start > -1 send only bytes in the range from start to end,; if end <= start send everything from start. void SendStatistics(); Send statistics of slave server to master or client. void SendParallel(Bool_t async = kFALSE); Send number of parallel nodes to master or client. Int_t UnloadPackage(const char* package); Removes link to package in working directory,; removes entry from include path,; removes entry from enabled package list,; does not currently remove entry from interpreter include path.; Returns -1 in case of error, 0 otherwise. Int_t UnloadPackages(); Unloads all enabled packages. Returns -1 in case of error, 0 otherwise. Int_t Setup(); Print the ProofServ logo on standard output.; Return 0 on success, -1 on failure. Int_t SetupCommon(); Common part (between TProofServ and TXProofServ) of the setup phase.; Return 0 on success, -1 on error. void Terminate(Int_t status); Terminate the proof server. Bool_t UnlinkDataDir(const char* path); Scan recursively the datadir and unlink it if empty; Return kTRUE if it can be unlinked, kFALSE otherwise. Bool_t IsActive(); Static function that returns kTRUE in case we are a PROOF server. TProofServ * This(); Static function returning pointer to global object gProofServ.; Mainly for use via CINT, where the gProofServ symbol might be; deleted from the symbol table. Int_t OldAuthSetup(TString& wconf); Setup authentication related stuff for old versions.; Provided for backward compatibility. TProofQueryResult * MakeQueryResult(Long64_t nentries, const char* opt, TList* inl, Long64_t first, TDSet* dset, const char* selec, TObject* elist); Create a TP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofServ.html:24128,error,error,24128,root/html528/TProofServ.html,https://root.cern,https://root.cern/root/html528/TProofServ.html,6,['error'],['error']
Availability,5 0; : 564 Minimum Test error found - save the configuration ; : 564 | 186.85 112.339 0.0201831 0.00181479 43553.4 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75743,error,error,75743,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80555,error,error,80555,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82760,error,error,82760,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"5 ; 606 const std::string title = std::string(""Integral of "") + GetTitle();; 607 const std::string name = std::string(GetName()) + integralNameSuffix(iset,nset,rangeName).Data();; 608 ; 609 auto out = std::make_unique<RooRealIntegral>(name.c_str(), title.c_str(), *this, iset, nset, cfg, rangeName);; 610 return RooFit::makeOwningPtr<RooAbsReal>(std::move(out));; 611 }; 612 ; 613 // Process integration over remaining integration variables; 614 while(!iset.empty()) {; 615 ; 616 ; 617 // Find largest set of observables that can be integrated in one go; 618 RooArgSet innerSet ;; 619 findInnerMostIntegration(iset,innerSet,rangeName) ;; 620 ; 621 // If largest set of observables that can be integrated is empty set, problem was ill defined; 622 // Postpone error messaging and handling to end of function, exit loop here; 623 if (innerSet.empty()) {; 624 error = true ;; 625 break ;; 626 }; 627 ; 628 // Prepare name and title of integral to be created; 629 const std::string title = std::string(""Integral of "") + integrand->GetTitle();; 630 const std::string name = std::string(integrand->GetName()) + integrand->integralNameSuffix(innerSet,nset,rangeName).Data();; 631 ; 632 std::unique_ptr<RooAbsReal> innerIntegral = std::move(integral);; 633 ; 634 // Construct innermost integral; 635 integral = std::make_unique<RooRealIntegral>(name.c_str(),title.c_str(),*integrand,innerSet,nset,cfg,rangeName);; 636 ; 637 // Integral of integral takes ownership of innermost integral; 638 if (innerIntegral) {; 639 integral->addOwnedComponents(std::move(innerIntegral));; 640 }; 641 ; 642 // Remove already integrated observables from to-do list; 643 iset.remove(innerSet) ;; 644 ; 645 // Send info message on recursion if needed; 646 if (integrand == this && !iset.empty()) {; 647 coutI(Integration) << GetName() << "" : multidimensional integration over observables with parameterized ranges in terms of other integrated observables detected, using recursive integration strategy to construct final integra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:23666,error,error,23666,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['error']
Availability,"5 Double_t w = wx*wy*wz;; 1196 UpdateBinContent(bin, c1 * h1->RetrieveBinContent(bin) / w);; 1197 if (fSumw2.fN) {; 1198 Double_t e1 = h1->GetBinError(bin)/w;; 1199 fSumw2.fArray[bin] = c1*c1*e1*e1;; 1200 }; 1201 }; 1202 }; 1203 }; 1204 } else if (h1->TestBit(kIsAverage) && h2->TestBit(kIsAverage)) {; 1205 for (Int_t i = 0; i < fNcells; ++i) { // loop on cells (bins including underflow / overflow); 1206 // special case where histograms have the kIsAverage bit set; 1207 Double_t y1 = h1->RetrieveBinContent(i);; 1208 Double_t y2 = h2->RetrieveBinContent(i);; 1209 Double_t e1sq = h1->GetBinErrorSqUnchecked(i);; 1210 Double_t e2sq = h2->GetBinErrorSqUnchecked(i);; 1211 Double_t w1 = 1., w2 = 1.;; 1212 ; 1213 // consider all special cases when bin errors are zero; 1214 // see http://root-forum.cern.ch/viewtopic.php?f=3&t=13299; 1215 if (e1sq) w1 = 1./ e1sq;; 1216 else if (h1->fSumw2.fN) {; 1217 w1 = 1.E200; // use an arbitrary huge value; 1218 if (y1 == 0 ) { // use an estimated error from the global histogram scale; 1219 double sf = (s1[0] != 0) ? s1[1]/s1[0] : 1;; 1220 w1 = 1./(sf*sf);; 1221 }; 1222 }; 1223 if (e2sq) w2 = 1./ e2sq;; 1224 else if (h2->fSumw2.fN) {; 1225 w2 = 1.E200; // use an arbitrary huge value; 1226 if (y2 == 0) { // use an estimated error from the global histogram scale; 1227 double sf = (s2[0] != 0) ? s2[1]/s2[0] : 1;; 1228 w2 = 1./(sf*sf);; 1229 }; 1230 }; 1231 ; 1232 double y = (w1*y1 + w2*y2)/(w1 + w2);; 1233 UpdateBinContent(i, y);; 1234 if (fSumw2.fN) {; 1235 double err2 = 1./(w1 + w2);; 1236 if (err2 < 1.E-200) err2 = 0; // to remove arbitrary value when e1=0 AND e2=0; 1237 fSumw2.fArray[i] = err2;; 1238 }; 1239 }; 1240 } else { // case of simple histogram addition; 1241 Double_t c1sq = c1 * c1;; 1242 Double_t c2sq = c2 * c2;; 1243 for (Int_t i = 0; i < fNcells; ++i) { // Loop on cells (bins including underflows/overflows); 1244 UpdateBinContent(i, c1 * h1->RetrieveBinContent(i) + c2 * h2->RetrieveBinContent(i));; 1245 if (fSumw2.fN) {; 1246 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:48559,error,error,48559,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability,"5 accelerator keys. This is identical to the command "".x macro.C"" in the root prompt command line.; Compiling Macros; The currently loaded macro can be compiled with ACLiC if you select Tools menu / Compile Macro; by clicking on the corresponding toolbar button, or by using Ctrl+F7 accelerator keys. This is identical to the command "".L macro.C++"" in the root prompt command line.; Interrupting a Running Macro; You can interrupt a running macro by selecting the Tools menu / Interrupt; by clicking on the corresponding toolbar button, or by using Shift+F5 accelerator keys.; Interface to CINT Interpreter; Any command entered in the Command combo box will be passed to the CINT interpreter. This combo box will keep the commands history and will allow you to re-execute the same commands during an editor session.; Keyboard Bindings; The following table lists the keyboard shortcuts and accelerator keys. Key: Action . Up Move cursor up. . Shift+Up Move cursor up and extend selection. . Down Move cursor down. . Shift+Down Move cursor down and extend selection. . Left Move cursor left. . Shift+Left Move cursor left and extend selection. . Right Move cursor right. . Shift+Right Move cursor right and extend selection. . Home Move cursor to begin of line. . Shift+Home Move cursor to begin of line and extend selection. . Ctrl+Home Move cursor to top of page. . End Move cursor to end of line. . Shift+End Move cursor to end of line and extend selection. . Ctrl+End Move cursor to end of page. . PgUp Move cursor up one page. . Shift+PgUp Move cursor up one page and extend selection. . PgDn Move cursor down one page. . Shift+PgDn Move cursor down one page and extend selection. . Delete Delete character after cursor, or text selection. . BackSpace Delete character before cursor, or text selection. . Ctrl+B Move cursor left. . Ctrl+D Delete character after cursor, or text selection. . Ctrl+E Move cursor to end of line. . Ctrl+H Delete character before cursor, or text selection. . Ctrl+K Del",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditor.html:3602,down,down,3602,doc/master/classTGTextEditor.html,https://root.cern,https://root.cern/doc/master/classTGTextEditor.html,1,['down'],['down']
Availability,"5 if (fX[i] - fEX[i] < xmin) {; 486 if (gPad && gPad->GetLogx()) {; 487 if (fEX[i] < fX[i]) xmin = fX[i] - fEX[i];; 488 else xmin = TMath::Min(xmin, fX[i] / 3);; 489 } else {; 490 xmin = fX[i] - fEX[i];; 491 }; 492 }; 493 if (fX[i] + fEX[i] > xmax) xmax = fX[i] + fEX[i];; 494 if (fY[i] - fEY[i] < ymin) {; 495 if (gPad && gPad->GetLogy()) {; 496 if (fEY[i] < fY[i]) ymin = fY[i] - fEY[i];; 497 else ymin = TMath::Min(ymin, fY[i] / 3);; 498 } else {; 499 ymin = fY[i] - fEY[i];; 500 }; 501 }; 502 if (fY[i] + fEY[i] > ymax) ymax = fY[i] + fEY[i];; 503 }; 504}; 505 ; 506 ; 507////////////////////////////////////////////////////////////////////////////////; 508/// Copy and release.; 509 ; 510void TGraphErrors::CopyAndRelease(Double_t **newarrays,; 511 Int_t ibegin, Int_t iend, Int_t obegin); 512{; 513 CopyPoints(newarrays, ibegin, iend, obegin);; 514 if (newarrays) {; 515 delete[] fX;; 516 fX = newarrays[2];; 517 delete[] fY;; 518 fY = newarrays[3];; 519 delete[] fEX;; 520 fEX = newarrays[0];; 521 delete[] fEY;; 522 fEY = newarrays[1];; 523 delete[] newarrays;; 524 }; 525}; 526 ; 527 ; 528////////////////////////////////////////////////////////////////////////////////; 529/// Copy errors from `fEX` and `fEY` to `arrays[0]` and `arrays[1]`; 530/// or to `fEX` and `fEY` if `arrays == 0` and `ibegin != iend`.; 531 ; 532Bool_t TGraphErrors::CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend,; 533 Int_t obegin); 534{; 535 if (TGraph::CopyPoints(arrays ? arrays + 2 : nullptr, ibegin, iend, obegin)) {; 536 Int_t n = (iend - ibegin) * sizeof(Double_t);; 537 if (arrays) {; 538 memmove(&arrays[0][obegin], &fEX[ibegin], n);; 539 memmove(&arrays[1][obegin], &fEY[ibegin], n);; 540 } else {; 541 memmove(&fEX[obegin], &fEX[ibegin], n);; 542 memmove(&fEY[obegin], &fEY[ibegin], n);; 543 }; 544 return kTRUE;; 545 } else {; 546 return kFALSE;; 547 }; 548}; 549 ; 550 ; 551////////////////////////////////////////////////////////////////////////////////; 552/// Constructor allocate.; 553///; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:17046,error,errors,17046,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['errors']
Availability,"5 of file TProfile3D.cxx. ◆ GetBinError() [2/3]. Double_t TProfile3D::GetBinError ; (; Int_t ; binx, . Int_t ; biny, . Int_t ; binz . ); const. inlineoverridevirtual . Reimplemented from TH1.; Definition at line 117 of file TProfile3D.h. ◆ GetBinError() [3/3]. Double_t TProfile3D::GetBinError ; (; Int_t ; , . Int_t ;  . ); const. inlineoverridevirtual . Reimplemented from TH1.; Definition at line 115 of file TProfile3D.h. ◆ GetBinErrorSqUnchecked(). Double_t TProfile3D::GetBinErrorSqUnchecked ; (; Int_t ; bin); const. inlineoverrideprotectedvirtual . Reimplemented from TH1.; Definition at line 67 of file TProfile3D.h. ◆ GetBinSumw2() [1/2]. virtual TArrayD * TProfile3D::GetBinSumw2 ; (; ). inlinevirtual . Definition at line 120 of file TProfile3D.h. ◆ GetBinSumw2() [2/2]. virtual const TArrayD * TProfile3D::GetBinSumw2 ; (; ); const. inlinevirtual . Definition at line 121 of file TProfile3D.h. ◆ GetErrorOption(). Option_t * TProfile3D::GetErrorOption ; (; ); const. Return option to compute profile2D errors. ; Definition at line 753 of file TProfile3D.cxx. ◆ GetStats(). void TProfile3D::GetStats ; (; Double_t * ; stats); const. overridevirtual . fill the array stats from the contents of this profile. ; The array stats must be correctly dimensioned in the calling program. stats[0] = sumw; stats[1] = sumw2; stats[2] = sumwx; stats[3] = sumwx2; stats[4] = sumwy; stats[5] = sumwy2; stats[6] = sumwxy; stats[7] = sumwz; stats[8] = sumwz2; stats[9] = sumwxz; stats[10]= sumwyz; stats[11]= sumwt; stats[12]= sumwt2. If no axis-subrange is specified (via TAxis::SetRange), the array stats is simply a copy of the statistics quantities computed at filling time. If a sub-range is specified, the function recomputes these quantities from the bin contents in the current axis range. ; Reimplemented from TH3.; Definition at line 785 of file TProfile3D.cxx. ◆ GetTmax(). virtual Double_t TProfile3D::GetTmax ; (; ); const. inlinevirtual . Definition at line 125 of file TProfile3D.h. ◆ GetTm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:90574,error,errors,90574,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['error'],['errors']
Availability,"5 {; 1046 return Vary(std::vector<std::string>(colNames), std::forward<F>(expression), inputColumns, nVariations, variationName);; 1047 }; 1048 ; 1049 /// \brief Register systematic variations for a single existing column using custom variation tags.; 1050 /// \param[in] colName name of the column for which varied values are provided.; 1051 /// \param[in] expression a string containing valid C++ code that evaluates to an RVec containing the varied; 1052 /// values for the specified column.; 1053 /// \param[in] variationTags names for each of the varied values, e.g. `""up""` and `""down""`.; 1054 /// \param[in] variationName a generic name for this set of varied values, e.g. `""ptvariation""`.; 1055 /// colName is used if none is provided.; 1056 ///; 1057 /// This overload adds the possibility for the expression used to evaluate the varied values to be just-in-time; 1058 /// compiled. The example below shows how Vary() is used while dealing with a single column. The variation tags are; 1059 /// defined as `{""down"", ""up""}`.; 1060 /// ~~~{.cpp}; 1061 /// auto nominal_hx =; 1062 /// df.Vary(""pt"", ""ROOT::RVecD{pt*0.9, pt*1.1}"", {""down"", ""up""}); 1063 /// .Filter(""pt > k""); 1064 /// .Define(""x"", someFunc, {""pt""}); 1065 /// .Histo1D(""x"");; 1066 ///; 1067 /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; 1068 /// hx[""nominal""].Draw();; 1069 /// hx[""pt:down""].Draw(""SAME"");; 1070 /// hx[""pt:up""].Draw(""SAME"");; 1071 /// ~~~; 1072 ///; 1073 /// \sa This Vary() overload for more information.; 1074 RInterface<Proxied, DS_t> Vary(std::string_view colName, std::string_view expression,; 1075 const std::vector<std::string> &variationTags, std::string_view variationName = """"); 1076 {; 1077 std::vector<std::string> colNames{{std::string(colName)}};; 1078 const std::string theVariationName{variationName.empty() ? colName : variationName};; 1079 ; 1080 return JittedVaryImpl(colNames, expression, variationTags, theVariationName, /*isSingleColumn=*/true);; 1081 }; 1082 ; 1083 ///",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:58116,down,down,58116,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['down'],['down']
Availability,5.036) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.824344 a1=-0.338546 mean=5.06339 nbkg=161.705 nsig=169.087 sig1frac=0.910016; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 360; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 350; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 340; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 330; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 320; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 310; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-831.776) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.823781 a1=-0.287947 mean=4.96347 nbkg=133.185 nsig=155.535 sig1frac=0.887106; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 300; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 290; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 280; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-867.974) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.806741 a1=-0.376486 mean=4.95962 nbkg=143.191 nsig=160.421 sig1frac=0.787531; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 270; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-810.184) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.701119 a1=-0.376392 mean=4.96099 nbkg=126.85 nsig=153.527 sig1frac=0.880449; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-845.198) to force MIGRAD to back out of this region. Error log follows.; Param,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:21536,error,errors,21536,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability,5.1 2; : 1030 | 3.28552 3.92634 0.0200717 0.0017618 43692.2 3; : 1031 | 3.09879 3.64842 0.0200603 0.0017557 43704.9 4; : 1032 | 3.23242 4.45782 0.0201318 0.0017893 43614.6 5; : 1033 Minimum Test error found - save the configuration ; : 1033 | 3.57665 3.43738 0.0206178 0.00193324 42816.1 0; : 1034 | 3.26951 3.4755 0.0201231 0.00175901 43563.3 1; : 1035 | 3.0748 4.32816 0.0202002 0.00180771 43496 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904 3.46339 0.0200395 0.00176046 43765.9 10; : 1044 | 3.08383 3.85222 0.0200574 0.0017582 43717.6 11; : 1045 | 3.00904 3.46043 0.0200555 0.00175872 43723.6 12; : 1046 Minimum Test error found - save the configuration ; : 1046 | 2.89922 3.28968 0.0204754 0.00188349 43029.5 0; : 1047 | 3.06628 3.80261 0.0206565 0.00177157 42361.9 1; : 1048 | 3.0482 4.21427 0.0203272 0.00175981 43086.2 2; : 1049 | 3.02565 3.406 0.0200479 0.00175462 43732 3; : 1050 | 3.16008 3.99499 0.0202749 0.00175016 43185.5 4; : 1051 | 3.00714 3.41105 0.0202798 0.00177822 43239.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:116150,error,error,116150,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"5/// effectively optimized away from the computation graph.; 116///; 117/// Note that SaveGraph is not thread-safe and must not be called concurrently from different threads.; 118// clang-format on; 119template <typename NodeType>; 120std::string SaveGraph(NodeType node); 121{; 122 ROOT::Internal::RDF::GraphDrawing::GraphCreatorHelper helper;; 123 return helper.RepresentGraph(node);; 124}; 125 ; 126// clang-format off; 127/// Create a graphviz representation of the dataframe computation graph, write it to the specified file.; 128/// \param[in] node any node of the graph. Called on the head (first) node, it prints the entire graph. Otherwise, only the branch the node belongs to.; 129/// \param[in] outputFile file where to save the representation.; 130///; 131/// The output can be displayed with a command akin to `dot -Tpng output.dot > output.png && open output.png`.; 132///; 133/// Note that ""hanging"" Defines, i.e. Defines without downstream nodes, will not be displayed by SaveGraph as they are; 134/// effectively optimized away from the computation graph.; 135///; 136/// Note that SaveGraph is not thread-safe and must not be called concurrently from different threads.; 137// clang-format on; 138template <typename NodeType>; 139void SaveGraph(NodeType node, const std::string &outputFile); 140{; 141 ROOT::Internal::RDF::GraphDrawing::GraphCreatorHelper helper;; 142 std::string dotGraph = helper.RepresentGraph(node);; 143 ; 144 std::ofstream out(outputFile);; 145 if (!out.is_open()) {; 146 throw std::runtime_error(""Could not open output file \"""" + outputFile + ""\""for reading"");; 147 }; 148 ; 149 out << dotGraph;; 150 out.close();; 151}; 152 ; 153// clang-format off; 154/// Cast a RDataFrame node to the common type ROOT::RDF::RNode; 155/// \param[in] node Any node of a RDataFrame graph; 156// clang-format on; 157template <typename NodeType>; 158RNode AsRNode(NodeType node); 159{; 160 return node;; 161}; 162 ; 163// clang-format off; 164/// Trigger the event loop of mul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFHelpers_8hxx_source.html:6072,down,downstream,6072,doc/master/RDFHelpers_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDFHelpers_8hxx_source.html,1,['down'],['downstream']
Availability,50.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82421,error,error,82421,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"50443 At:407678 N=86 FreeSegments; 20010404/150443 At:407764 N=1 END. void Paint(Option_t* option = """"); Paint all objects in the file. void Print(Option_t* option = """") const; Print all objects in the file. Bool_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Read a buffer from the file at the offset 'pos' in the file.; Returns kTRUE in case of failure.; Compared to ReadBuffer(char*, Int_t), this routine does _not_; change the cursor on the physical file representation (fD); if the data is in this TFile's cache. Bool_t ReadBuffer(char* buf, Int_t len); Read a buffer from the file. This is the basic low level read operation.; Returns kTRUE in case of failure. Bool_t ReadBuffers(char* buf, Long64_t* pos, Int_t* len, Int_t nbuf); Read the nbuf blocks described in arrays pos and len,; where pos[i] is the seek position of block i of length len[i].; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer.; This function is overloaded by TNetFile, TWebFile, etc.; Returns kTRUE in case of failure. Int_t ReadBufferViaCache(char* buf, Int_t len); Read buffer via cache. Returns 0 if the requested block is; not in the cache, 1 in case read via cache was successful,; 2 in case read via cache failed. void ReadFree(); Read the FREE linked list.; Every file has a linked list (fFree) of free segments.; This linked list has been written on the file via WriteFree; as a single data record. TProcessID * ReadProcessID(UShort_t pidf); The TProcessID with number pidf is read from this file.; If the object is not already entered in the gROOT list, it is added. Int_t Recover(); Attempt to recover file if not correctly closed.; The function returns the number of keys that have been recovered.; If no keys can be recovered, the file will be declared Zombie by; the calling function. This function is automatically called when; opening a file. If the file is open in read only mode, the file is not modified.; If open in update mode and the function finds something to recover,; a new di",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:33920,failure,failure,33920,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,6,['failure'],['failure']
Availability,"505 file->Close();; 506 delete file;; 507 file = nullptr;; 508 }; 509 }; 510 ; 511 fTree = nullptr;; 512 fDirectory = nullptr;; 513 ; 514 if (fTransientBuffer) {; 515 delete fTransientBuffer;; 516 fTransientBuffer = nullptr;; 517 }; 518}; 519 ; 520////////////////////////////////////////////////////////////////////////////////; 521/// Returns the transient buffer currently used by this TBranch for reading/writing baskets.; 522 ; 523TBuffer* TBranch::GetTransientBuffer(Int_t size); 524{; 525 if (fTransientBuffer) {; 526 if (fTransientBuffer->BufferSize() < size) {; 527 fTransientBuffer->Expand(size);; 528 }; 529 return fTransientBuffer;; 530 }; 531 fTransientBuffer = new TBufferFile(TBuffer::kRead, size);; 532 return fTransientBuffer;; 533}; 534 ; 535////////////////////////////////////////////////////////////////////////////////; 536/// Add the basket to this branch.; 537///; 538/// Warning: if the basket are not 'flushed/copied' in the same; 539/// order as they were created, this will induce a slow down in; 540/// the insert (since we'll need to move all the record that are; 541/// entere 'too early').; 542/// Warning we also assume that the __current__ write basket is; 543/// not present (aka has been removed) or is empty (no entries).; 544 ; 545void TBranch::AddBasket(TBasket& b, bool ondisk, Long64_t startEntry); 546{; 547 TBasket *basket = &b;; 548 ; 549 basket->SetBranch(this);; 550 ; 551 if (fWriteBasket >= fMaxBaskets) {; 552 ExpandBasketArrays();; 553 }; 554 Int_t where = fWriteBasket;; 555 ; 556 if (where && startEntry < fBasketEntry[where-1]) {; 557 // Need to find the right location and move the possible baskets; 558 ; 559 if (!ondisk) {; 560 Warning(""AddBasket"",""The assumption that out-of-order basket only comes from disk based ntuple is false."");; 561 }; 562 ; 563 if (startEntry < fBasketEntry[0]) {; 564 where = 0;; 565 } else {; 566 for(Int_t i=fWriteBasket-1; i>=0; --i) {; 567 if (fBasketEntry[i] < startEntry) {; 568 where = i+1;; 569 break;; 570 } ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:18830,down,down,18830,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['down'],['down']
Availability,"51 ; 2452 if (gBfree == nullptr) {; 2453 gBfree = gFormbuf;; 2454 gEndbuf = &gFormbuf[cb_size-1];; 2455 }; 2456 char *buf = gBfree;; 2457 ; 2458 if (buf+fld_size > gEndbuf); 2459 buf = gFormbuf;; 2460 ; 2461 va_list sap;; 2462 R__VA_COPY(sap, ap);; 2463 ; 2464 int n = vsnprintf(buf, fld_size, format, ap);; 2465 // old vsnprintf's return -1 if string is truncated new ones return; 2466 // total number of characters that would have been written; 2467 if (n == -1 || n >= fld_size) {; 2468 va_end(ap);; 2469 R__VA_COPY(ap, sap);; 2470 buf = SlowFormat(format, ap, n);; 2471 va_end(sap);; 2472 va_end(ap);; 2473 return buf;; 2474 }; 2475 ; 2476 va_end(sap);; 2477 ; 2478 gBfree = buf+n+1;; 2479 return buf;; 2480}; 2481 ; 2482////////////////////////////////////////////////////////////////////////////////; 2483/// Formats a string in a circular formatting buffer. Removes the need to; 2484/// create and delete short lived strings. Don't pass Form() pointers; 2485/// from user code down to ROOT functions as the circular buffer may; 2486/// be overwritten downstream. Use Form() results immediately or use; 2487/// TString::Format() instead.; 2488 ; 2489char *Form(const char *va_(fmt), ...); 2490{; 2491 va_list ap;; 2492 va_start(ap,va_(fmt));; 2493 char *b = Format(va_(fmt), ap);; 2494 va_end(ap);; 2495 return b;; 2496}; 2497 ; 2498////////////////////////////////////////////////////////////////////////////////; 2499/// Formats a string in a circular formatting buffer and prints the string.; 2500/// Appends a newline. If gPrintViaErrorHandler is true it will print via the; 2501/// currently active ROOT error handler.; 2502 ; 2503void Printf(const char *va_(fmt), ...); 2504{; 2505 va_list ap;; 2506 va_start(ap,va_(fmt));; 2507 if (gPrintViaErrorHandler); 2508 ErrorHandler(kPrint, nullptr, va_(fmt), ap);; 2509 else {; 2510 char *b = Format(va_(fmt), ap);; 2511 printf(""%s\n"", b);; 2512 fflush(stdout);; 2513 }; 2514 va_end(ap);; 2515}; 2516 ; 2517///////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:79884,down,down,79884,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,2,['down'],"['down', 'downstream']"
Availability,"512 of file TMinuit.cxx. ◆ Class(). static TClass * TMinuit::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMinuit::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMinuit::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 268 of file TMinuit.h. ◆ Clone(). TObject * TMinuit::Clone ; (; const char * ; newname = """"); const. overridevirtual . Make a clone of an object using the Streamer facility. ; Function pointer is copied to Clone ; Reimplemented from TObject.; Definition at line 596 of file TMinuit.cxx. ◆ Command(). Int_t TMinuit::Command ; (; const char * ; command). virtual . Execute a Minuit command. ; Equivalent to MNEXCM except that the command is given as a character string. See TMinuit::mnhelp for the full list of available commands See also the complete documentation of all the available commands; Returns the status of the execution:; 0: command executed normally; 1: command is blank, ignored; 2: command line unreadable, ignored; 3: unknown command, ignored; 4: abnormal termination (e.g., MIGRAD not converged); 5: command is a request to read PARAMETER definitions; 6: 'SET INPUT' command; 7: 'SET TITLE' command; 8: 'SET COVAR' command; 9: reserved; 10: END command; 11: EXIT or STOP command; 12: RETURN command . Definition at line 626 of file TMinuit.cxx. ◆ Contour(). TObject * TMinuit::Contour ; (; Int_t ; npoints = 10, . Int_t ; pa1 = 0, . Int_t ; pa2 = 1 . ). virtual . Creates a TGraph object describing the n-sigma contour of a TMinuit fit. ; The contour of the parameters pa1 and pa2 is calculated using npoints (>=4) points. The TMinuit status will be; 0 on success and; -1 if errors in the calling sequence (pa1, pa2 not variable); 1 if less than four points can be found; 2 if npoints<4; n>3 if only n points can be found (n < npoints) The status can be obtained via TMinuit::GetStatus(). To get the n-sigma con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:38566,avail,available,38566,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,2,['avail'],['available']
Availability,"513 of file TGCocoa.mm. ◆ SetCharacterUp(). void TGCocoa::SetCharacterUp ; (; Float_t ; chupx, . Float_t ; chupy . ). overridevirtual . Sets character up vector. ; Reimplemented from TVirtualX.; Definition at line 4096 of file TGCocoa.mm. ◆ SetClassHints(). void TGCocoa::SetClassHints ; (; Window_t ; id, . char * ; className, . char * ; resourceName . ). overridevirtual . Sets the windows class and resource name. ; Reimplemented from TVirtualX.; Definition at line 1545 of file TGCocoa.mm. ◆ SetClipOFF(). void TGCocoa::SetClipOFF ; (; Int_t ; wid). overridevirtual . Turns off the clipping for the window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 4102 of file TGCocoa.mm. ◆ SetClipRectangles(). void TGCocoa::SetClipRectangles ; (; GContext_t ; gc, . Int_t ; x, . Int_t ; y, . Rectangle_t * ; recs, . Int_t ; n . ). overridevirtual . Sets clipping rectangles in graphics context. ; [x,y] specify the origin of the rectangles. ""recs"" specifies an array of rectangles that define the clipping mask and ""n"" is the number of rectangles. (see also the GCValues_t structure) ; Reimplemented from TVirtualX.; Definition at line 4276 of file TGCocoa.mm. ◆ SetClipRegion(). void TGCocoa::SetClipRegion ; (; Int_t ; wid, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Sets clipping region for the window ""wid"". ; Parameters. [in]widwindow identifier ; [in]x,yorigin of clipping rectangle ; [in]w,hthe clipping rectangle dimensions . Reimplemented from TVirtualX.; Definition at line 4108 of file TGCocoa.mm. ◆ SetCursor() [1/2]. void TGCocoa::SetCursor ; (; Int_t ; win, . ECursor ; cursor . ). overridevirtual . The cursor ""cursor"" will be used when the pointer is in the window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 3122 of file TGCocoa.mm. ◆ SetCursor() [2/2]. void TGCocoa::SetCursor ; (; Window_t ; id, . Cursor_t ; curid . ). overridevirtual . Sets the cursor ""curid"" to be used when the pointer is in the window ""id"". ; Reimplemente",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:113368,mask,mask,113368,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['mask'],['mask']
Availability,"513 path.Form(""%s/BUILD.sh"", proofinf);; 3514#ifdef R__WINGCC; 3515 FILE *f = fopen(path.Data(), ""wb"");; 3516#else; 3517 FILE *f = fopen(path.Data(), ""w"");; 3518#endif; 3519 if (!f) {; 3520 Error(""MakeProjectParProofInf"", ""cannot create file '%s' (errno: %d)"",; 3521 path.Data(), TSystem::GetErrno());; 3522 return -1;; 3523 }; 3524 ; 3525 fprintf(f, ""#! /bin/sh\n"");; 3526 fprintf(f, ""# Build libEvent library.\n"");; 3527 fprintf(f, ""\n"");; 3528 fprintf(f, ""#\n"");; 3529 fprintf(f, ""# The environment variables ROOTPROOFLITE and ROOTPROOFCLIENT can be used to\n"");; 3530 fprintf(f, ""# adapt the script to the calling environment\n"");; 3531 fprintf(f, ""#\n"");; 3532 fprintf(f, ""# if test ! \""x$ROOTPROOFLITE\"" = \""x\""; then\n"");; 3533 fprintf(f, ""# echo \""event-BUILD: PROOF-Lite node (session has $ROOTPROOFLITE workers)\""\n"");; 3534 fprintf(f, ""# elif test ! \""x$ROOTPROOFCLIENT\"" = \""x\""; then\n"");; 3535 fprintf(f, ""# echo \""event-BUILD: PROOF client\""\n"");; 3536 fprintf(f, ""# else\n"");; 3537 fprintf(f, ""# echo \""event-BUILD: standard PROOF node\""\n"");; 3538 fprintf(f, ""# fi\n"");; 3539 fprintf(f, ""\n"");; 3540 fprintf(f, ""if [ \""\"" = \""clean\"" ]; then\n"");; 3541 fprintf(f, "" make distclean\n"");; 3542 fprintf(f, "" exit 0\n"");; 3543 fprintf(f, ""fi\n"");; 3544 fprintf(f, ""\n"");; 3545 fprintf(f, ""make\n"");; 3546 fprintf(f, ""rc=$?\n"");; 3547 fprintf(f, ""echo \""rc=$?\""\n"");; 3548 fprintf(f, ""if [ $? != \""0\"" ] ; then\n"");; 3549 fprintf(f, "" exit 1\n"");; 3550 fprintf(f, ""fi\n"");; 3551 fprintf(f, ""exit 0\n"");; 3552 ; 3553 // Close the file; 3554 fclose(f);; 3555 ; 3556 // Then SETUP.C; 3557 path.Form(""%s/SETUP.C"", proofinf);; 3558#ifdef R__WINGCC; 3559 f = fopen(path.Data(), ""wb"");; 3560#else; 3561 f = fopen(path.Data(), ""w"");; 3562#endif; 3563 if (!f) {; 3564 Error(""MakeProjectParProofInf"", ""cannot create file '%s' (errno: %d)"",; 3565 path.Data(), TSystem::GetErrno());; 3566 return -1;; 3567 }; 3568 ; 3569 fprintf(f, ""Int_t SETUP()\n"");; 3570 fprintf(f, ""{\n"");; 3571 fprintf(f, ""\n"");;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:128377,echo,echo,128377,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,4,['echo'],['echo']
Availability,"521 }; 1522 ; 1523 return -1.;; 1524}; 1525 ; 1526////////////////////////////////////////////////////////////////////////////////; 1527/// Get high error on y coordinate for point `i`.; 1528/// The multiple errors of the dimensions are summed according to `fSumErrorsMode`.; 1529 ; 1530Double_t TGraphMultiErrors::GetErrorYhigh(Int_t i) const; 1531{; 1532 if (i < 0 || i >= fNpoints || fEyH.empty()); 1533 return -1.;; 1534 ; 1535 if (fSumErrorsMode == TGraphMultiErrors::kOnlyFirst); 1536 return fEyH[0][i];; 1537 else if (fSumErrorsMode == TGraphMultiErrors::kSquareSum) {; 1538 Double_t sum = 0.;; 1539 for (Int_t j = 0; j < fNYErrors; j++); 1540 sum += fEyH[j][i] * fEyH[j][i];; 1541 return TMath::Sqrt(sum);; 1542 } else if (fSumErrorsMode == TGraphMultiErrors::kAbsSum) {; 1543 Double_t sum = 0.;; 1544 for (Int_t j = 0; j < fNYErrors; j++); 1545 sum += fEyH[j][i];; 1546 return sum;; 1547 }; 1548 ; 1549 return -1.;; 1550}; 1551 ; 1552////////////////////////////////////////////////////////////////////////////////; 1553/// Get low error e on y coordinate for point `i`.; 1554 ; 1555Double_t TGraphMultiErrors::GetErrorYlow(Int_t i, Int_t e) const; 1556{; 1557 if (i < 0 || i >= fNpoints || e >= fNYErrors || fEyL.empty()); 1558 return -1.;; 1559 ; 1560 return fEyL[e][i];; 1561}; 1562 ; 1563////////////////////////////////////////////////////////////////////////////////; 1564/// Get high error e on y coordinate for point `i`.; 1565 ; 1566Double_t TGraphMultiErrors::GetErrorYhigh(Int_t i, Int_t e) const; 1567{; 1568 if (i < 0 || i >= fNpoints || e >= fNYErrors || fEyH.empty()); 1569 return -1.;; 1570 ; 1571 return fEyH[e][i];; 1572}; 1573 ; 1574////////////////////////////////////////////////////////////////////////////////; 1575/// Get all low errors on y coordinates as an array summed according to `fSumErrorsMode`.; 1576 ; 1577Double_t *TGraphMultiErrors::GetEYlow() const; 1578{; 1579 if (!fEyLSum); 1580 CalcYErrorsSum();; 1581 ; 1582 return fEyLSum;; 1583}; 1584 ; 1585///////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:53173,error,error,53173,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability,"5246 TClass__GetCallingNewRAII callingNew(defConstructor);; 5247 p = fCollectionProxy->NewObjectArray(nElements);; 5248 }; 5249 } else if (!HasInterpreterInfo() && !fCollectionProxy) {; 5250 // There is no dictionary at all and we do not have; 5251 // the services of a collection proxy available, so; 5252 // use the streamer info to approximate calling a; 5253 // constructor (basically we just make sure that the; 5254 // pointer data members are null, unless they are marked; 5255 // as preallocated with the ""->"" comment, in which case; 5256 // we default-construct an object to point at).; 5257 ; 5258 // ???BUG??? ???WHY???; 5259 // Do not register any TObject's that we create; 5260 // as a result of creating this object.; 5261 Bool_t statsave = GetObjectStat();; 5262 if(statsave) {; 5263 SetObjectStat(kFALSE);; 5264 }; 5265 ; 5266 TVirtualStreamerInfo* sinfo = GetStreamerInfo();; 5267 if (!sinfo) {; 5268 Error(""NewArray"", ""Cannot construct class '%s' version %d, no streamer info available!"", GetName(), fClassVersion);; 5269 return nullptr;; 5270 }; 5271 ; 5272 {; 5273 TClass__GetCallingNewRAII callingNew(defConstructor);; 5274 p = { sinfo->NewArray(nElements), sinfo };; 5275 }; 5276 ; 5277 // ???BUG???; 5278 // Allow TObject's to be registered again.; 5279 if(statsave) {; 5280 SetObjectStat(statsave);; 5281 }; 5282 ; 5283 } else {; 5284 Error(""NewArray"", ""This cannot happen!"");; 5285 }; 5286 ; 5287 return p;; 5288}; 5289 ; 5290////////////////////////////////////////////////////////////////////////////////; 5291/// Return a pointer to a newly allocated object of this class.; 5292/// The class must have a default constructor. For meaning of; 5293/// defConstructor, see TClass::IsCallingNew().; 5294 ; 5295void *TClass::NewArray(Long_t nElements, void *arena, ENewType defConstructor) const; 5296{; 5297 auto obj = NewObjectArray(nElements, arena, defConstructor);; 5298 if (obj.GetPtr() && obj.GetAllocator()) {; 5299 // Register the object for special handling in the des",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:201290,avail,available,201290,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['avail'],['available']
Availability,"528/// \f]; 529/// The points are assigned a x value at the center of each histogram bin.; 530/// The y values are \f$\text{eff} = \frac{\text{pass}}{\text{total}}\f$; 531/// for all options except for the; 532/// bayesian methods where the result depends on the chosen option.; 533///; 534/// If the denominator becomes 0 or pass > total, the corresponding bin is; 535/// skipped.; 536///; 537/// ### 2) calculating ratios of two Poisson means (option 'pois'):; 538///; 539/// The two histograms are interpreted as independent Poisson processes and the ratio; 540/// \f[; 541/// \tau = \frac{n_{1}}{n_{2}} = \frac{\varepsilon}{1 - \varepsilon}; 542/// \f]; 543/// with \f$\varepsilon = \frac{n_{1}}{n_{1} + n_{2}}\f$.; 544/// The histogram 'pass' is interpreted as \f$n_{1}\f$ and the total histogram; 545/// is used for \f$n_{2}\f$.; 546///; 547/// The (asymmetric) uncertainties of the Poisson ratio are linked to the uncertainties; 548/// of efficiency by a parameter transformation:; 549/// \f[; 550/// \Delta \tau_{low/up} = \frac{1}{(1 - \varepsilon)^{2}} \Delta \varepsilon_{low/up}; 551/// \f]; 552///; 553/// The x errors span each histogram bin (lowedge ... lowedge+width); 554/// The y errors depend on the chosen statistic methode which can be determined; 555/// by the options given below. For a detailed description of the used statistic; 556/// calculations please have a look at the corresponding functions!; 557///; 558/// Options:; 559/// - v : verbose mode: prints information about the number of used bins; 560/// and calculated efficiencies with their errors; 561/// - cl=x : determine the used confidence level (0<x<1) (default is 0.683); 562/// - cp : Clopper-Pearson interval (see TEfficiency::ClopperPearson); 563/// - w : Wilson interval (see TEfficiency::Wilson); 564/// - n : normal approximation propagation (see TEfficiency::Normal); 565/// - ac : Agresti-Coull interval (see TEfficiency::AgrestiCoull); 566/// - fc : Feldman-Cousins interval (see TEfficiency::FeldmanC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:19602,error,errors,19602,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['error'],['errors']
Availability,"53 value_idx = 0;; 354 }; 355 Set(np) ;; 356 ; 357 // Cleaning; 358 delete [] isTokenToBeSaved;; 359 delete token;; 360 }; 361 infile.close();; 362}; 363 ; 364 ; 365////////////////////////////////////////////////////////////////////////////////; 366/// TGraphErrors default destructor.; 367 ; 368TGraphErrors::~TGraphErrors(); 369{; 370 delete [] fEX;; 371 delete [] fEY;; 372}; 373 ; 374////////////////////////////////////////////////////////////////////////////////; 375/// Add a point with errorbars to the graph.; 376 ; 377void TGraphErrors::AddPointError(Double_t x, Double_t y, Double_t ex, Double_t ey); 378{; 379 AddPoint(x, y); // fNpoints will increase automatically; 380 SetPointError(fNpoints - 1, ex, ey);; 381}; 382 ; 383////////////////////////////////////////////////////////////////////////////////; 384/// Apply function to all the data points \f$ y = f(x,y) \f$.; 385///; 386/// The error is calculated as \f$ ey=(f(x,y+ey)-f(x,y-ey))/2 \f$.; 387/// This is the same as \f$ error(fy) = df/dy * ey \f$ for small errors.; 388///; 389/// For generic functions the symmetric errors might become non-symmetric; 390/// and are averaged here. Use TGraphAsymmErrors if desired.; 391///; 392/// Error on \f$ x \f$ doesn't change.; 393///; 394/// function suggested/implemented by Miroslav Helbich <helbich@mail.desy.de>; 395 ; 396void TGraphErrors::Apply(TF1 *f); 397{; 398 Double_t x, y, ex, ey;; 399 ; 400 if (fHistogram) {; 401 delete fHistogram;; 402 fHistogram = nullptr;; 403 }; 404 for (Int_t i = 0; i < GetN(); i++) {; 405 GetPoint(i, x, y);; 406 ex = GetErrorX(i);; 407 ey = GetErrorY(i);; 408 ; 409 SetPoint(i, x, f->Eval(x, y));; 410 SetPointError(i, ex, TMath::Abs(f->Eval(x, y + ey) - f->Eval(x, y - ey)) / 2.);; 411 }; 412 if (gPad) gPad->Modified();; 413}; 414 ; 415////////////////////////////////////////////////////////////////////////////////; 416/// Apply function to all the data points \f$ x = f(x,y) \f$.; 417///; 418/// The error is calculated as \f$ ex=(f(x+ex,y)-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:12928,error,error,12928,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,"53/// The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; 654/// from the fitted function.; 655///; 656/// ### Associated functions; 657///; 658/// One or more object (typically a TF1*) can be added to the list; 659/// of functions (fFunctions) associated to each graph.; 660/// When TGraph::Fit is invoked, the fitted function is added to this list.; 661/// Given a graph gr, one can retrieve an associated function; 662/// with:; 663/// ~~~ {.cpp}; 664/// TF1 *myfunc = gr->GetFunction(""myfunc"");; 665/// ~~~; 666///; 667/// If the graph is made persistent, the list of; 668/// associated functions is also persistent. Given a pointer (see above); 669/// to an associated function myfunc, one can retrieve the function/fit; 670/// parameters with calls such as:; 671/// ~~~ {.cpp}; 672/// Double_t chi2 = myfunc->GetChisquare();; 673/// Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; 674/// Double_t err0 = myfunc->GetParError(0); //error on first parameter; 675/// ~~~; 676///; 677/// ### Fit Statistics; 678///; 679/// You can change the statistics box to display the fit parameters with; 680/// the TStyle::SetOptFit(mode) method. This mode has four digits.; 681/// mode = pcev (default = 0111); 682///; 683/// - v = 1; print name/values of parameters; 684/// - e = 1; print errors (if e=1, v must be 1); 685/// - c = 1; print Chisquare/Number of degrees of freedom; 686/// - p = 1; print Probability; 687///; 688/// For example: `gStyle->SetOptFit(1011);`; 689/// prints the fit probability, parameter names/values, and errors.; 690/// You can change the position of the statistics box with these lines; 691/// (where g is a pointer to the TGraph):; 692///; 693/// ~~~ {.cpp}; 694/// Root > TPaveStats *st = (TPaveStats*)g->GetListOfFunctions()->FindObject(""stats""); 695/// Root > st->SetX1NDC(newx1); //new x start position; 696/// Root > st->SetX2NDC(newx2); //new x end position; 697/// ~~~; 698 ; 699TFitResultPtr TMultiGraph::Fit(TF1 *f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMultiGraph_8cxx_source.html:22105,error,error,22105,doc/master/TMultiGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMultiGraph_8cxx_source.html,1,['error'],['error']
Availability,"530/// IS TRUE EVEN IF THE RANGE INCLUDES ALL BINS--use TAxis::SetRange(0, 0) to unset; 7531/// the range. To ensure that the returned mean (and all other statistics) is; 7532/// always that of the binned data stored in the histogram, call TH1::ResetStats.; 7533/// See TH1::GetStats.; 7534///; 7535/// Return mean value of this histogram along the X axis.; 7536 ; 7537Double_t TH1::GetMean(Int_t axis) const; 7538{; 7539 if (axis<1 || (axis>3 && axis<11) || axis>13) return 0;; 7540 Double_t stats[kNstat];; 7541 for (Int_t i=4;i<kNstat;i++) stats[i] = 0;; 7542 GetStats(stats);; 7543 if (stats[0] == 0) return 0;; 7544 if (axis<4){; 7545 Int_t ax[3] = {2,4,7};; 7546 return stats[ax[axis-1]]/stats[0];; 7547 } else {; 7548 // mean error = StdDev / sqrt( Neff ); 7549 Double_t stddev = GetStdDev(axis-10);; 7550 Double_t neff = GetEffectiveEntries();; 7551 return ( neff > 0 ? stddev/TMath::Sqrt(neff) : 0. );; 7552 }; 7553}; 7554 ; 7555////////////////////////////////////////////////////////////////////////////////; 7556/// Return standard error of mean of this histogram along the X axis.; 7557///; 7558/// Note that the mean value/StdDev is computed using the bins in the currently; 7559/// defined range (see TAxis::SetRange). By default the range includes; 7560/// all bins from 1 to nbins included, excluding underflows and overflows.; 7561/// To force the underflows and overflows in the computation, one must; 7562/// call the static function TH1::StatOverflows(kTRUE) before filling; 7563/// the histogram.; 7564///; 7565/// Also note, that although the definition of standard error doesn't include the; 7566/// assumption of normality, many uses of this feature implicitly assume it.; 7567///; 7568/// IMPORTANT NOTE: The returned value depends on how the histogram statistics; 7569/// are calculated. By default, if no range has been set, the returned value is; 7570/// the (unbinned) one calculated at fill time. If a range has been set, however,; 7571/// the value is calculated using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:294547,error,error,294547,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability,"5313 TClass__GetCallingNewRAII callingNew(defConstructor);; 5314 p = fCollectionProxy->NewObjectArray(nElements);; 5315 }; 5316 } else if (!HasInterpreterInfo() && !fCollectionProxy) {; 5317 // There is no dictionary at all and we do not have; 5318 // the services of a collection proxy available, so; 5319 // use the streamer info to approximate calling a; 5320 // constructor (basically we just make sure that the; 5321 // pointer data members are null, unless they are marked; 5322 // as preallocated with the ""->"" comment, in which case; 5323 // we default-construct an object to point at).; 5324 ; 5325 // ???BUG??? ???WHY???; 5326 // Do not register any TObject's that we create; 5327 // as a result of creating this object.; 5328 Bool_t statsave = GetObjectStat();; 5329 if(statsave) {; 5330 SetObjectStat(kFALSE);; 5331 }; 5332 ; 5333 TVirtualStreamerInfo* sinfo = GetStreamerInfo();; 5334 if (!sinfo) {; 5335 Error(""NewArray"", ""Cannot construct class '%s' version %d, no streamer info available!"", GetName(), fClassVersion);; 5336 return nullptr;; 5337 }; 5338 ; 5339 {; 5340 TClass__GetCallingNewRAII callingNew(defConstructor);; 5341 p = { sinfo->NewArray(nElements), sinfo };; 5342 }; 5343 ; 5344 // ???BUG???; 5345 // Allow TObject's to be registered again.; 5346 if(statsave) {; 5347 SetObjectStat(statsave);; 5348 }; 5349 ; 5350 } else {; 5351 Error(""NewArray"", ""This cannot happen!"");; 5352 }; 5353 ; 5354 return p;; 5355}; 5356 ; 5357////////////////////////////////////////////////////////////////////////////////; 5358/// Return a pointer to a newly allocated object of this class.; 5359/// The class must have a default constructor. For meaning of; 5360/// defConstructor, see TClass::IsCallingNew().; 5361 ; 5362void *TClass::NewArray(Long_t nElements, void *arena, ENewType defConstructor) const; 5363{; 5364 auto obj = NewObjectArray(nElements, arena, defConstructor);; 5365 if (obj.GetPtr() && obj.GetAllocator()) {; 5366 // Register the object for special handling in the des",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:204041,avail,available,204041,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['avail'],['available']
Availability,"537#endif; 20538 ; 20539 /* Set some extra bits not defined in the API documentation.; 20540 * These bits may change without further notice. */; 20541#if defined(MG_LEGACY_INTERFACE); 20542 | 0x80000000u; 20543#endif; 20544#if defined(MG_EXPERIMENTAL_INTERFACES); 20545 | 0x40000000u; 20546#endif; 20547#if !defined(NO_RESPONSE_BUFFERING); 20548 | 0x20000000u; 20549#endif; 20550#if defined(MEMORY_DEBUGGING); 20551 | 0x10000000u; 20552#endif; 20553 ;; 20554 return (feature & feature_set);; 20555}; 20556 ; 20557 ; 20558static size_t; 20559mg_str_append(char **dst, char *end, const char *src); 20560{; 20561 size_t len = strlen(src);; 20562 if (*dst != end) {; 20563 /* Append src if enough space, or close dst. */; 20564 if ((size_t)(end - *dst) > len) {; 20565 strcpy(*dst, src);; 20566 *dst += len;; 20567 } else {; 20568 *dst = end;; 20569 }; 20570 }; 20571 return len;; 20572}; 20573 ; 20574 ; 20575/* Get system information. It can be printed or stored by the caller.; 20576 * Return the size of available information. */; 20577int; 20578mg_get_system_info(char *buffer, int buflen); 20579{; 20580 char *end, *append_eoobj = NULL, block[256];; 20581 size_t system_info_length = 0;; 20582 ; 20583#if defined(_WIN32); 20584 static const char eol[] = ""\r\n"", eoobj[] = ""\r\n}\r\n"";; 20585#else; 20586 static const char eol[] = ""\n"", eoobj[] = ""\n}\n"";; 20587#endif; 20588 ; 20589 if ((buffer == NULL) || (buflen < 1)) {; 20590 buflen = 0;; 20591 end = buffer;; 20592 } else {; 20593 *buffer = 0;; 20594 end = buffer + buflen;; 20595 }; 20596 if (buflen > (int)(sizeof(eoobj) - 1)) {; 20597 /* has enough space to append eoobj */; 20598 append_eoobj = buffer;; 20599 if (end) {; 20600 end -= sizeof(eoobj) - 1;; 20601 }; 20602 }; 20603 ; 20604 system_info_length += mg_str_append(&buffer, end, ""{"");; 20605 ; 20606 /* Server version */; 20607 {; 20608 const char *version = mg_version();; 20609 mg_snprintf(NULL,; 20610 NULL,; 20611 block,; 20612 sizeof(block),; 20613 ""%s\""version\"" : \""%s\"""",; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:614950,avail,available,614950,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['avail'],['available']
Availability,"538#endif; 20539 ; 20540 /* Set some extra bits not defined in the API documentation.; 20541 * These bits may change without further notice. */; 20542#if defined(MG_LEGACY_INTERFACE); 20543 | 0x80000000u; 20544#endif; 20545#if defined(MG_EXPERIMENTAL_INTERFACES); 20546 | 0x40000000u; 20547#endif; 20548#if !defined(NO_RESPONSE_BUFFERING); 20549 | 0x20000000u; 20550#endif; 20551#if defined(MEMORY_DEBUGGING); 20552 | 0x10000000u; 20553#endif; 20554 ;; 20555 return (feature & feature_set);; 20556}; 20557 ; 20558 ; 20559static size_t; 20560mg_str_append(char **dst, char *end, const char *src); 20561{; 20562 size_t len = strlen(src);; 20563 if (*dst != end) {; 20564 /* Append src if enough space, or close dst. */; 20565 if ((size_t)(end - *dst) > len) {; 20566 strcpy(*dst, src);; 20567 *dst += len;; 20568 } else {; 20569 *dst = end;; 20570 }; 20571 }; 20572 return len;; 20573}; 20574 ; 20575 ; 20576/* Get system information. It can be printed or stored by the caller.; 20577 * Return the size of available information. */; 20578int; 20579mg_get_system_info(char *buffer, int buflen); 20580{; 20581 char *end, *append_eoobj = NULL, block[256];; 20582 size_t system_info_length = 0;; 20583 ; 20584#if defined(_WIN32); 20585 static const char eol[] = ""\r\n"", eoobj[] = ""\r\n}\r\n"";; 20586#else; 20587 static const char eol[] = ""\n"", eoobj[] = ""\n}\n"";; 20588#endif; 20589 ; 20590 if ((buffer == NULL) || (buflen < 1)) {; 20591 buflen = 0;; 20592 end = buffer;; 20593 } else {; 20594 *buffer = 0;; 20595 end = buffer + buflen;; 20596 }; 20597 if (buflen > (int)(sizeof(eoobj) - 1)) {; 20598 /* has enough space to append eoobj */; 20599 append_eoobj = buffer;; 20600 if (end) {; 20601 end -= sizeof(eoobj) - 1;; 20602 }; 20603 }; 20604 ; 20605 system_info_length += mg_str_append(&buffer, end, ""{"");; 20606 ; 20607 /* Server version */; 20608 {; 20609 const char *version = mg_version();; 20610 mg_snprintf(NULL,; 20611 NULL,; 20612 block,; 20613 sizeof(block),; 20614 ""%s\""version\"" : \""%s\"""",; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:614983,avail,available,614983,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['avail'],['available']
Availability,"543};; 3544 ; 3545static llvm::cl::opt<bool> gOptSystemModuleByproducts(""mSystemByproducts"", llvm::cl::Hidden,; 3546 llvm::cl::desc(""Allow implicit build of system modules.""),; 3547 llvm::cl::cat(gRootclingOptions));; 3548static llvm::cl::list<std::string>; 3549gOptModuleByproducts(""mByproduct"", llvm::cl::ZeroOrMore,; 3550 llvm::cl::Hidden,; 3551 llvm::cl::desc(""The list of the expected implicit modules build as part of building the current module.""),; 3552 llvm::cl::cat(gRootclingOptions));; 3553// Really llvm::cl::Required, will be changed in RootClingMain below.; 3554static llvm::cl::opt<std::string>; 3555gOptDictionaryFileName(llvm::cl::Positional,; 3556 llvm::cl::desc(""<output dictionary file>""),; 3557 llvm::cl::cat(gRootclingOptions));; 3558 ; 3559////////////////////////////////////////////////////////////////////////////////; 3560/// Custom diag client for clang that verifies that each implicitly build module; 3561/// is a system module. If not, it will let the current rootcling invocation; 3562/// fail with an error. All other diags beside module build remarks will be; 3563/// forwarded to the passed child diag client.; 3564///; 3565/// The reason why we need this is that if we built implicitly a C++ module; 3566/// that belongs to a ROOT dictionary, then we will miss information generated; 3567/// by rootcling in this file (e.g. the source code comments to annotation; 3568/// attributes transformation will be missing in the module file).; 3569class CheckModuleBuildClient : public clang::DiagnosticConsumer {; 3570 clang::DiagnosticConsumer *fChild;; 3571 bool fOwnsChild;; 3572 clang::ModuleMap &fMap;; 3573 ; 3574public:; 3575 CheckModuleBuildClient(clang::DiagnosticConsumer *Child, bool OwnsChild, clang::ModuleMap &Map); 3576 : fChild(Child), fOwnsChild(OwnsChild), fMap(Map); 3577 {; 3578 }; 3579 ; 3580 ~CheckModuleBuildClient(); 3581 {; 3582 if (fOwnsChild); 3583 delete fChild;; 3584 }; 3585 ; 3586 virtual void HandleDiagnostic(clang::DiagnosticsEngine::Le",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:142073,error,error,142073,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['error'],['error']
Availability,"5494 it = fNiofex[ilax-1];; 5495 fErp[it-1] = 0;; 5496 fErn[it-1] = 0;; 5497 mninex(fXt);; 5498 ut = fU[ilax-1];; 5499 if (fNvarl[ilax-1] == 1) {; 5500 fAlim[ilax-1] = ut - fMNOTw[it-1]*100;; 5501 fBlim[ilax-1] = ut + fMNOTw[it-1]*100;; 5502 }; 5503 ndex = it*(it + 1) / 2;; 5504 xunit = TMath::Sqrt(fUp / fVthmat[ndex-1]);; 5505 marc = 0;; 5506 for (i = 1; i <= mpar; ++i) {; 5507 if (i == it) continue;; 5508 ++marc;; 5509 imax = TMath::Max(it,i);; 5510 indx = imax*(imax-1) / 2 + TMath::Min(it,i);; 5511 fMNOTxdev[marc-1] = xunit*fVthmat[indx-1];; 5512 }; 5513// fix the parameter in question; 5514 mnfixp(it-1, ierr);; 5515 if (ierr > 0) {; 5516 Printf("" MINUIT ERROR. CANNOT FIX PARAMETER %4d INTERNAL %3d"",ilax,it);; 5517 goto L700;; 5518 }; 5519// Nota Bene: from here on, NPAR=MPAR-1; 5520// Remember: MNFIXP squeezes IT out of X, XT, WERR, and VHMAT,; 5521// not W, VTHMAT; 5522 for (isig = 1; isig <= 2; ++isig) {; 5523 if (isig == 1) {; 5524 sig = 1;; 5525 csig = ""POSI"";; 5526 } else {; 5527 sig = -1;; 5528 csig = ""NEGA"";; 5529 }; 5530// sig=sign of error being calcd; 5531 if (fISW[4] > 1) {; 5532 Printf("" DETERMINATION OF %sTIVE MINOS ERROR FOR PARAMETER %d %s""; 5533 ,(const char*)csig,ilax; 5534 ,(const char*)fCpnam[ilax-1]);; 5535 }; 5536 if (fISW[1] <= 0) {; 5537 mnwarn(""D"", ""MINOS"", ""NO COVARIANCE MATRIX."");; 5538 }; 5539 nlimit = fNfcn + nfmxin;; 5540 fIstrat = TMath::Max(istrav-1,0);; 5541 du1 = fMNOTw[it-1];; 5542 fU[ilax-1] = ut + sig*du1;; 5543 fU[ilax-1] = TMath::Min(fU[ilax-1],fBlim[ilax-1]);; 5544 fU[ilax-1] = TMath::Max(fU[ilax-1],fAlim[ilax-1]);; 5545 delu = fU[ilax-1] - ut;; 5546// stop if already at limit with negligible step size; 5547// add also a check if both numerator and denominarot are not zero (ROOT-10835)(LM); 5548 if ( (delu == 0 && ut == 0) ||; 5549 (TMath::Abs(delu) / (TMath::Abs(ut) + TMath::Abs(fU[ilax-1])) < fEpsmac)) goto L440;; 5550 fac = delu / fMNOTw[it-1];; 5551 for (i = 1; i <= fNpar; ++i) {; 5552 fX[i-1] = fXt[i-1] + fac*fMNOTxdev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:180671,error,error,180671,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['error']
Availability,5563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.7,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:99580,error,error,99580,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"56 ; 257 // here need to get some static extra information (like max iterations, error def, etc...); 258 ; 259 ; 260 // parameter settings and transfer the parameters values, names and limits from the functions; 261 // is done automatically in the Fitter.cxx; 262 for (int i = 0; i < npar; ++i) {; 263 ROOT::Fit::ParameterSettings & parSettings = fitConfig.ParSettings(i);; 264 ; 265 // check limits; 266 double plow,pup;; 267 f1->GetParLimits(i,plow,pup);; 268 if (plow*pup != 0 && plow >= pup) { // this is a limitation - cannot fix a parameter to zero value; 269 parSettings.Fix();; 270 }; 271 else if (plow < pup ) {; 272 if (!TMath::Finite(pup) && TMath::Finite(plow) ); 273 parSettings.SetLowerLimit(plow);; 274 else if (!TMath::Finite(plow) && TMath::Finite(pup) ); 275 parSettings.SetUpperLimit(pup);; 276 else; 277 parSettings.SetLimits(plow,pup);; 278 }; 279 ; 280 // set the parameter step size (by default are set to 0.3 of value); 281 // if function provides meaningful error values; 282 double err = f1->GetParError(i);; 283 if ( err > 0); 284 parSettings.SetStepSize(err);; 285 else if (plow < pup && TMath::Finite(plow) && TMath::Finite(pup) ) { // in case of limits improve step sizes; 286 double step = 0.1 * (pup - plow);; 287 // check if value is not too close to limit otherwise trim value; 288 if ( parSettings.Value() < pup && pup - parSettings.Value() < 2 * step ); 289 step = (pup - parSettings.Value() ) / 2;; 290 else if ( parSettings.Value() > plow && parSettings.Value() - plow < 2 * step ); 291 step = (parSettings.Value() - plow ) / 2;; 292 ; 293 parSettings.SetStepSize(step);; 294 }; 295 ; 296 ; 297 }; 298 ; 299 // needed for setting precision ?; 300 // - Compute sum of squares of errors in the bin range; 301 // should maybe use stat[1] ??; 302 // Double_t ey, sumw2=0;; 303// for (i=hxfirst;i<=hxlast;i++) {; 304// ey = GetBinError(i);; 305// sumw2 += ey*ey;; 306// }; 307 ; 308 ; 309 // set all default minimizer options (tolerance, max iterations, etc..); 310 fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:10934,error,error,10934,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['error'],['error']
Availability,"56.hxx:104; Bool_tbool Bool_tDefinition RtypesCore.h:63; UShort_tunsigned short UShort_tDefinition RtypesCore.h:40; Int_tint Int_tDefinition RtypesCore.h:45; kMaxIntconstexpr Int_t kMaxIntDefinition RtypesCore.h:105; Version_tshort Version_tDefinition RtypesCore.h:65; UChar_tunsigned char UChar_tDefinition RtypesCore.h:38; Char_tchar Char_tDefinition RtypesCore.h:37; ULong_tunsigned long ULong_tDefinition RtypesCore.h:55; Long_tlong Long_tDefinition RtypesCore.h:54; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Float_tfloat Float_tDefinition RtypesCore.h:57; Short_tshort Short_tDefinition RtypesCore.h:39; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Double_tdouble Double_tDefinition RtypesCore.h:59; Long64_tlong long Long64_tDefinition RtypesCore.h:69; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; TBufferFile.h; TBuffer.h; TClass.h; TClonesArray.h; TContainerConverters.h; DOLOOP#define DOLOOP(x); TError.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; TFile.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TProcessID.h; gDebugInt_t gDebugDefinition TROOT.cxx:597; TRef.h; TStreamerElement.h; ReadBasicArray#define ReadBasicArray(name)Definition TStreamerInfoReadBuffer.cxx:77; ConvCBasicPointer#define ConvCBasicPointer(name, ReadArrayFunc)Definition TStreamerInfoReadBuffer.cxx:469; SkipCBasicPointer#define SkipCBasicPointer(name, ReadArrayFunc)Definition TStreamerInfoReadBuffer.cxx:152; ReadBasicType#define ReadBasicType(name)Definition TStreamerInfoReadBuffer.cxx:61; ReadBasicPointerLoop#define ReadBasicPointerLoop(name)Definition TStreamerInfoReadBuffer.cxx:113; CurrentElementstatic TStreamerElement *& CurrentElement()Definition TStreamerInfoReadBuffer.cxx:32; Rea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html:75089,error,error,75089,doc/master/TStreamerInfoReadBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoReadBuffer_8cxx_source.html,1,['error'],['error']
Availability,"56; ROOT::Fit::FitResult::Chi2double Chi2() constReturn the Chi2 value after fitting In case of unbinned fits (or not defined one, see the documentati...Definition FitResult.h:153; ROOT::Fit::FitResult::fParamsstd::vector< double > fParamsparameter values. Size is total number of parametersDefinition FitResult.h:360; ROOT::Fit::FitResult::fCovMatrixstd::vector< double > fCovMatrixcovariance matrix (size is npar*(npar+1)/2) where npar is total parametersDefinition FitResult.h:362; ROOT::Fit::FitResult::SetMinosErrorvoid SetMinosError(unsigned int i, double elow, double eup)set the Minos errors for parameter i (called by the Fitter class when running Minos)Definition FitResult.cxx:346; ROOT::Fit::FitResult::Printvoid Print(std::ostream &os, bool covmat=false) constprint the result and optionally covariance matrix and correlationsDefinition FitResult.cxx:389; ROOT::Fit::FitResult::LowerErrordouble LowerError(unsigned int i) constlower Minos error. If Minos has not run for parameter i return the parabolic errorDefinition FitResult.cxx:332; ROOT::Fit::FitResult::~FitResultvirtual ~FitResult()Destructor.Definition FitResult.h:69; ROOT::Fit::FitResult::ModelFunctionstd::shared_ptr< IModelFunction > ModelFunction()Return pointer non const pointer to model (fit) function with fitted parameter values.Definition FitResult.h:337; ROOT::Fit::FitResult::PrintCovMatrixvoid PrintCovMatrix(std::ostream &os) constprint error matrix and correlationsDefinition FitResult.cxx:447; ROOT::Fit::FitResult::fNCallsunsigned int fNCallsnumber of function callsDefinition FitResult.h:347; ROOT::Fit::FitResult::Contourbool Contour(unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683)create contour of two parameters around the minimum pass as option confidence level: default is a val...Definition FitResult.cxx:660; ROOT::Fit::FitResult::GetCorrelationMatrixvoid GetCorrelationMatrix(Matrix &mat) constfill a correlation matrix elements using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:22441,error,errorDefinition,22441,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,1,['error'],['errorDefinition']
Availability,"57 of file Rtypes.h. ◆ ClassDefInlineOverride. #define ClassDefInlineOverride; (;  ; name, .  ; id . ). Value: _ClassDefInline_(name,id,,override) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 353 of file Rtypes.h. ◆ ClassDefNV. #define ClassDefNV; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,,) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 345 of file Rtypes.h. ◆ ClassDefOverride. #define ClassDefOverride; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,,override) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 341 of file Rtypes.h. ◆ ClassDefT. #define ClassDefT; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,virtual,) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. This ClassDefT is strictly redundant and is kept only for backward compatibility. ; Deprecated:; Definition at line 404 of file Rtypes.h. ◆ ClassDefT2. #define ClassDefT2; (;  ; name, .  ; Tmpl . ). Definition at line 413 of file Rtypes.h. ◆ ClassDefTNV. #define ClassDefTNV; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,virtual,) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 408 of file Rtypes.h. ◆ ClassImp. #define ClassImp; (;  ; name);    ClassImpUnique(name,default). Deprecated:; Definition at line 377 of file Rtypes.h. ◆ ClassImp2T. #define ClassImp2T; (;  ; name, .  ; Tmpl1, .  ; Tmpl2 . );    templateClassImp(name). Definition at line 432 of file Rtypes.h. ◆ ClassImp3T. #define ClassImp3T; (;  ; name, .  ; Tmpl1, .  ; Tmpl2, .  ; Tmpl3 . );    templateClassImp(name). Definition at line 441 of file Rtypes.h. ◆ ClassImpT. #define ClassImpT; (;  ; name, .  ; Tmpl . );    templateClassImp(name). Definition at line 424 of file Rtypes.h. ◆ Class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Rtypes_8h.html:14268,redundant,redundant,14268,doc/v632/Rtypes_8h.html,https://root.cern,https://root.cern/doc/v632/Rtypes_8h.html,1,['redundant'],['redundant']
Availability,"574 N=29075 TBasket CX = 1.10; 20010404/150441 At:243649 N=9583 TBasket CX = 3.34; 20010404/150442 At:253232 N=28324 TBasket CX = 1.13; 20010404/150442 At:281556 N=29641 TBasket CX = 1.08; 20010404/150442 At:311197 N=29633 TBasket CX = 1.08; 20010404/150442 At:340830 N=29091 TBasket CX = 1.10; 20010404/150442 At:369921 N=10341 TBasket CX = 3.09; 20010404/150442 At:380262 N=509 TH1F CX = 1.93; 20010404/150442 At:380771 N=1769 TH2F CX = 4.32; 20010404/150442 At:382540 N=1849 TProfile CX = 1.65; 20010404/150442 At:384389 N=18434 TNtuple CX = 4.51; 20010404/150442 At:402823 N=307 KeysList; 20010404/150443 At:403130 N=4548 StreamerInfo CX = 3.65; 20010404/150443 At:407678 N=86 FreeSegments; 20010404/150443 At:407764 N=1 END. void Paint(Option_t* option = """"); Paint all objects in the file. void Print(Option_t* option = """") const; Print all objects in the file. Bool_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Read a buffer from the file at the offset 'pos' in the file.; Returns kTRUE in case of failure.; Compared to ReadBuffer(char*, Int_t), this routine does _not_; change the cursor on the physical file representation (fD); if the data is in this TFile's cache. Bool_t ReadBuffer(char* buf, Int_t len); Read a buffer from the file. This is the basic low level read operation.; Returns kTRUE in case of failure. Bool_t ReadBuffers(char* buf, Long64_t* pos, Int_t* len, Int_t nbuf); Read the nbuf blocks described in arrays pos and len,; where pos[i] is the seek position of block i of length len[i].; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer.; This function is overloaded by TNetFile, TWebFile, etc.; Returns kTRUE in case of failure. Int_t ReadBufferViaCache(char* buf, Int_t len); Read buffer via cache. Returns 0 if the requested block is; not in the cache, 1 in case read via cache was successful,; 2 in case read via cache failed. void ReadFree(); Read the FREE linked list.; Every file has a linked list (fFree) of free segments.; This linked list has",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:33260,failure,failure,33260,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,6,['failure'],['failure']
Availability,58 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103006,error,error,103006,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"58 h->SetCanExtend(TH1::kAllAxes);; 359~~~; 360 then, the Fill Function will automatically extend the axis range to; 361 accomodate the new value specified in the Fill argument. The method; 362 used is to double the bin size until the new value fits in the range,; 363 merging bins two by two. This automatic binning options is extensively; 364 used by the TTree::Draw function when histogramming Tree variables; 365 with an unknown range.; 366 This automatic binning option is supported for 1-D, 2-D and 3-D histograms.; 367 ; 368 During filling, some statistics parameters are incremented to compute; 369 the mean value and Root Mean Square with the maximum precision.; 370 ; 371 In case of histograms of type TH1C, TH1S, TH2C, TH2S, TH3C, TH3S; 372 a check is made that the bin contents do not exceed the maximum positive; 373 capacity (127 or 32767). Histograms of all types may have positive; 374 or/and negative bin contents.; 375 ; 376\anchor associated-errors; 377### Associated errors; 378 By default, for each bin, the sum of weights is computed at fill time.; 379 One can also call TH1::Sumw2 to force the storage and computation; 380 of the sum of the square of weights per bin.; 381 If Sumw2 has been called, the error per bin is computed as the; 382 sqrt(sum of squares of weights), otherwise the error is set equal; 383 to the sqrt(bin content).; 384 To return the error for a given bin number, do:; 385~~~ {.cpp}; 386 Double_t error = h->GetBinError(bin);; 387~~~; 388 ; 389\anchor associated-functions; 390### Associated functions; 391 One or more object (typically a TF1*) can be added to the list; 392 of functions (fFunctions) associated to each histogram.; 393 When TH1::Fit is invoked, the fitted function is added to this list.; 394 Given a histogram h, one can retrieve an associated function; 395 with:; 396~~~ {.cpp}; 397 TF1 *myfunc = h->GetFunction(""myfunc"");; 398~~~; 399 ; 400 ; 401\anchor operations-on-histograms; 402## Operations on histograms; 403 ; 404 Many types o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:16586,error,errors,16586,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['error'],['errors']
Availability,"58 if(bin % (xbins*ybins) == 0) {; 1059 zbin++;; 1060 zvar->setVal(zaxis->GetBinCenter(zbin));; 1061 }; 1062 // fall through to next case...; 1063 case 2:; 1064 if(bin % xbins == 0) {; 1065 ybin= (ybin%ybins) + 1;; 1066 yvar->setVal(yaxis->GetBinCenter(ybin));; 1067 }; 1068 // fall through to next case...; 1069 case 1:; 1070 xbin= (xbin%xbins) + 1;; 1071 xvar->setVal(xaxis->GetBinCenter(xbin));; 1072 break;; 1073 default:; 1074 coutE(InputArguments) << ""RooAbsReal::fillHistogram: Internal Error!"" << std::endl;; 1075 break;; 1076 }; 1077 ; 1078 double result= scaleFactor*projected->getVal();; 1079 if (RooAbsReal::numEvalErrors()>0) {; 1080 coutW(Plotting) << ""WARNING: Function evaluation error(s) at coordinates [x]="" << xvar->getVal() ;; 1081 if (hdim==2) ccoutW(Plotting) << "" [y]="" << yvar->getVal() ;; 1082 if (hdim==3) ccoutW(Plotting) << "" [z]="" << zvar->getVal() ;; 1083 ccoutW(Plotting) << std::endl ;; 1084 // RooAbsReal::printEvalErrors(ccoutW(Plotting),10) ;; 1085 result = 0 ;; 1086 }; 1087 RooAbsReal::clearEvalErrorLog() ;; 1088 ; 1089 hist->SetBinContent(hist->GetBin(xbin,ybin,zbin),result);; 1090 if (setError) {; 1091 hist->SetBinError(hist->GetBin(xbin,ybin,zbin),sqrt(result)) ;; 1092 }; 1093 ; 1094 //cout << ""bin "" << bin << "" -> ("" << xbin << "","" << ybin << "","" << zbin << "") = "" << result << std::endl;; 1095 }; 1096 RooAbsReal::setEvalErrorLoggingMode(RooAbsReal::PrintErrors) ;; 1097 ; 1098 // cleanup; 1099 delete cloneSet;; 1100 ; 1101 return hist;; 1102}; 1103 ; 1104 ; 1105 ; 1106////////////////////////////////////////////////////////////////////////////////; 1107/// Fill a RooDataHist with values sampled from this function at the; 1108/// bin centers. If extendedMode is true, the p.d.f. values is multiplied; 1109/// by the number of expected events in each bin; 1110///; 1111/// An optional scaling by a given scaleFactor can be performed.; 1112/// Returns a pointer to the input RooDataHist, or zero; 1113/// in case of an error.; 1114///; 1115/// If cor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:43765,error,error,43765,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['error']
Availability,5832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100029,error,error,100029,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"586 TGraph graph;; 6587 graph.SetLineStyle(fH->GetLineStyle());; 6588 graph.SetLineColor(fH->GetLineColor());; 6589 graph.SetLineWidth(fH->GetLineWidth());; 6590 graph.SetFillStyle(fH->GetFillStyle());; 6591 graph.SetFillColor(fH->GetFillColor());; 6592 Int_t logx = gPad->GetLogx();; 6593 Int_t logy = gPad->GetLogy();; 6594 gPad->SetLogx(0);; 6595 gPad->SetLogy(0);; 6596 ; 6597 // In some cases the number of points in the fill area is smaller than; 6598 // 2*npoints. In such cases the array xline and yline must be arranged; 6599 // before being plotted. The next loop does that.; 6600 if (if2 > npoints) {; 6601 for (i=1; i<if1; i++) {; 6602 xline[if1-2+i] = xline[if2-1+i];; 6603 yline[if1-2+i] = yline[if2-1+i];; 6604 }; 6605 npoints = if1-1;; 6606 }; 6607 if (option4) graph.PaintGraph(2*npoints,xline.data(),yline.data(),""FC"");; 6608 else graph.PaintGraph(2*npoints,xline.data(),yline.data(),""F"");; 6609 gPad->SetLogx(logx);; 6610 gPad->SetLogy(logy);; 6611 }; 6612}; 6613 ; 6614////////////////////////////////////////////////////////////////////////////////; 6615/// Draw 2D histograms errors.; 6616 ; 6617void THistPainter::Paint2DErrors(Option_t *); 6618{; 6619 ; 6620 fH->TAttMarker::Modify();; 6621 fH->TAttLine::Modify();; 6622 ; 6623 // Define the 3D view; 6624 fXbuf[0] = Hparam.xmin;; 6625 fYbuf[0] = Hparam.xmax;; 6626 fXbuf[1] = Hparam.ymin;; 6627 fYbuf[1] = Hparam.ymax;; 6628 fXbuf[2] = Hparam.zmin;; 6629 fYbuf[2] = Hparam.zmax*(1. + gStyle->GetHistTopMargin());; 6630 fLego = std::make_unique<TPainter3dAlgorithms>(fXbuf.data(), fYbuf.data());; 6631 TView *view = gPad ? gPad->GetView() : nullptr;; 6632 if (!view) {; 6633 Error(""Paint2DErrors"", ""no TView in current pad"");; 6634 return;; 6635 }; 6636 Double_t thedeg = 90 - gPad->GetTheta();; 6637 Double_t phideg = -90 - gPad->GetPhi();; 6638 Double_t psideg = view->GetPsi();; 6639 Int_t irep;; 6640 view->SetView(phideg, thedeg, psideg, irep);; 6641 ; 6642 // Set color/style for back box; 6643 fLego->SetFillStyle(gPad-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:242582,error,errors,242582,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['error'],['errors']
Availability,599 43273.3 0; : 1086 | 3.10333 2.86337 0.0200994 0.00175565 43611.6 1; : 1087 | 2.9523 3.05621 0.0202345 0.00180564 43410.1 2; : 1088 | 2.96621 3.82134 0.0204023 0.0017658 42926.6 3; : 1089 | 2.9107 3.10267 0.0201393 0.00176662 43542.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.7002 2.7081 0.0203577 0.00176876 43036.3 1; : 1107 | 2.85017 3.38001 0.0201747 0.00176074 43445.3 2; : 1108 | 2.78494 2.55451 0.0203389 0.00176376 43068.3 3; : 1109 | 2.71632 3.12003 0.0200899 0.00175276 43627.4 4; : 1110 | 3.16531 2.9918 0.020346 0.00180026 43136.7 5; : 1111 Minimum Test error found - save the configuration ; : 1111 | 2.97087 2.45167 0.0201922 0.00182484 43555.6 0; : 1112 | 2.60355 2.50464 0.0200664 0.00176061 43702 1; : 1113 | 2.54376 2.96916 0.0200737 0.00178101 43733.3 2; : 1114 | 2.77186 2.89815 0.0200657 0.00175793 43697.4 3; : 1115 | 2.58652 2.73506 0.020068 0.00175912 43694.6 4; : 1116 Minimum Test error found - save the configuration ; : 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:119780,error,error,119780,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"5; TApplication::lsvoid ls(Option_t *option="""") const overrideShow available sessions.Definition TApplication.cxx:2087; TApplication::Raisevirtual void Raise()Definition TApplication.h:133; TApplication::fArgcInt_t fArgcDefinition TApplication.h:58; TApplication::fNoLogBool_t fNoLogDefinition TApplication.h:63; TApplication::fNoLogoBool_t fNoLogoDefinition TApplication.h:64; TApplication::GetSetupTString GetSetup()It gets the ROOT installation setup as TString.Definition TApplication.cxx:967; TApplication::HandleIdleTimervirtual void HandleIdleTimer()Handle idle timeout.Definition TApplication.cxx:577; TApplication::WorkingDirectoryconst char * WorkingDirectory() constDefinition TApplication.h:147; TApplication::QuitOptBool_t QuitOpt() constDefinition TApplication.h:145; TApplication::fSigHandlerTSignalHandler * fSigHandlerDefinition TApplication.h:70; TApplication::ArgcInt_t Argc() constDefinition TApplication.h:140; TApplication::ProcessRemotevirtual Longptr_t ProcessRemote(const char *line, Int_t *error=nullptr)Process the content of a line starting with "".R"" (already stripped-off) The format is.Definition TApplication.cxx:1485; TApplication::fAppRemoteTApplication * fAppRemoteDefinition TApplication.h:80; TApplication::Showvirtual void Show()Definition TApplication.h:129; TApplication::SetSignalHandlervoid SetSignalHandler(TSignalHandler *sh)Definition TApplication.h:92; TApplication::fArgvchar ** fArgvDefinition TApplication.h:59; TListA doubly linked list.Definition TList.h:38; TObjArrayAn array of TObjects.Definition TObjArray.h:31; TObjectMother of all ROOT objects.Definition TObject.h:41; TQObjectThis is the ROOT implementation of the Qt object communication mechanism (see also http://www....Definition TQObject.h:48; TSignalHandlerDefinition TSysEvtHandler.h:127; TStringBasic string class.Definition TString.h:139; TTimerHandles synchronous and a-synchronous timer events.Definition TTimer.h:51; bool; int; lineTLine * lineDefinition entrylistblock_figure1.C:23",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8h_source.html:20190,error,error,20190,doc/master/TApplication_8h_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8h_source.html,1,['error'],['error']
Availability,"5; TMVA::MethodDL::GetMvaValueDouble_t GetMvaValue(Double_t *err=nullptr, Double_t *errUpper=nullptr)Definition MethodDL.cxx:1772; TMVA::MethodDL::ParseInputLayoutvoid ParseInputLayout()Parse the input layout.Definition MethodDL.cxx:439; TMVA::MethodDL::FillInputTensorvoid FillInputTensor()Get the input event tensor for evaluation Internal function to fill the fXInput tensor with the corre...Definition MethodDL.cxx:1704; TMVA::MethodDL::fBuildNetbool fBuildNetFlag to control whether to build fNet, the stored network used for the evaluation.Definition MethodDL.h:201; TMVA::MethodDL::SetInputHeightvoid SetInputHeight(int inputHeight)Definition MethodDL.h:287; TMVA::MethodDL::CreateDeepNetvoid CreateDeepNet(DNN::TDeepNet< Architecture_t, Layer_t > &deepNet, std::vector< DNN::TDeepNet< Architecture_t, Layer_t > > &nets)After calling the ProcesOptions(), all of the options are parsed, so using the parsed options,...Definition MethodDL.cxx:529; TMVA::MethodDL::fErrorStrategyTString fErrorStrategyThe string defining the error strategy for training.Definition MethodDL.h:195; TMVA::MethodDL::DeclareOptionsvoid DeclareOptions()The option handling methods.Definition MethodDL.cxx:167; TMVA::MethodDL::fInputLayoutStringTString fInputLayoutStringThe string defining the layout of the input.Definition MethodDL.h:192; TMVA::MsgLogger::GetMinTypeEMsgType GetMinType() constDefinition MsgLogger.h:69; TMVA::RandomGeneratorDefinition Tools.h:299; TMVA::RankingRanking for variables in method (implementation)Definition Ranking.h:48; TMVA::TimerTiming information for training and evaluation of MVA methods.Definition Timer.h:58; TMVA::Timer::GetElapsedTimeTString GetElapsedTime(Bool_t Scientific=kTRUE)returns pretty string with elapsed timeDefinition Timer.cxx:146; TMVA::Tools::xmlengineTXMLEngine & xmlengine()Definition Tools.h:262; TMVA::Tools::ReadAttrvoid ReadAttr(void *node, const char *, T &value)read attribute from xmlDefinition Tools.h:329; TMVA::Tools::GetChildvoid * GetChild(void *p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:113260,error,error,113260,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['error'],['error']
Availability,6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.02,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80669,error,error,80669,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.395,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83610,error,error,83610,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,6 2; : 1036 | 3.05868 3.88772 0.0202082 0.00176323 43372.3 3; : 1037 | 3.11243 3.8552 0.0200473 0.00176925 43768.4 4; : 1038 | 2.97479 4.01382 0.020048 0.00176307 43752 5; : 1039 | 3.15714 3.85081 0.0200388 0.00176348 43774.8 6; : 1040 | 2.97124 3.72013 0.0200295 0.00176294 43795.8 7; : 1041 | 2.92938 3.63611 0.020078 0.00179099 43746.9 8; : 1042 | 3.04184 3.72584 0.0202124 0.00176555 43367.8 9; : 1043 | 3.24904 3.46339 0.0200395 0.00176046 43765.9 10; : 1044 | 3.08383 3.85222 0.0200574 0.0017582 43717.6 11; : 1045 | 3.00904 3.46043 0.0200555 0.00175872 43723.6 12; : 1046 Minimum Test error found - save the configuration ; : 1046 | 2.89922 3.28968 0.0204754 0.00188349 43029.5 0; : 1047 | 3.06628 3.80261 0.0206565 0.00177157 42361.9 1; : 1048 | 3.0482 4.21427 0.0203272 0.00175981 43086.2 2; : 1049 | 3.02565 3.406 0.0200479 0.00175462 43732 3; : 1050 | 3.16008 3.99499 0.0202749 0.00175016 43185.5 4; : 1051 | 3.00714 3.41105 0.0202798 0.00177822 43239.5 5; : 1052 Minimum Test error found - save the configuration ; : 1052 | 2.87354 3.24293 0.0202139 0.00182119 43495.4 0; : 1053 | 2.96323 3.45692 0.0200573 0.00175839 43718.4 1; : 1054 | 2.84926 3.80103 0.0200558 0.00175409 43711.6 2; : 1055 | 2.95781 3.27091 0.020067 0.00175747 43693.1 3; : 1056 | 3.19444 5.21663 0.0200546 0.00175884 43725.9 4; : 1057 | 3.64244 3.58532 0.0204609 0.00177451 42811.8 5; : 1058 | 3.4344 3.25697 0.0201011 0.00178651 43681.1 6; : 1059 | 2.82841 3.35413 0.020208 0.00176662 43380.6 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minimum Test error found - save the configuration ; : 1062 | 3.14929 3.19749 0.0201067 0.00181963 43746.8 0; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 |,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:116546,error,error,116546,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"6 ; 917void TGraphMultiErrors::AddYError(Int_t np, const Double_t *eyL, const Double_t *eyH); 918{; 919 fEyL.emplace_back(np, eyL);; 920 fEyH.emplace_back(np, eyH);; 921 fEyL.back().Set(fNpoints);; 922 fEyH.back().Set(fNpoints);; 923 fAttFill.emplace_back();; 924 fAttLine.emplace_back();; 925 ; 926 fNYErrors += 1;; 927 ; 928 CalcYErrorsSum();; 929}; 930 ; 931////////////////////////////////////////////////////////////////////////////////; 932/// Allocate internal data structures for `size` points.; 933Double_t **TGraphMultiErrors::Allocate(Int_t size); 934{; 935 return AllocateArrays(6, size);; 936}; 937 ; 938////////////////////////////////////////////////////////////////////////////////; 939/// Apply a function to all data points \f$ y = f(x,y) \f$.; 940///; 941/// Errors are calculated as \f$ eyh = f(x,y+eyh)-f(x,y) \f$ and; 942/// \f$ eyl = f(x,y)-f(x,y-eyl) \f$; 943///; 944/// Only the first error dimension is affected.; 945///; 946/// Special treatment has to be applied for the functions where the; 947/// role of ""up"" and ""down"" is reversed.; 948///; 949/// Function suggested/implemented by Miroslav Helbich <helbich@mail.desy.de>; 950 ; 951void TGraphMultiErrors::Apply(TF1 *f); 952{; 953 Double_t x, y, eyL, eyH, eyLNew, eyHNew, fxy;; 954 ; 955 if (fHistogram) {; 956 delete fHistogram;; 957 fHistogram = nullptr;; 958 }; 959 ; 960 for (Int_t i = 0; i < fNpoints; i++) {; 961 GetPoint(i, x, y);; 962 eyL = GetErrorYlow(i, 0);; 963 eyH = GetErrorYhigh(i, 0);; 964 ; 965 fxy = f->Eval(x, y);; 966 SetPoint(i, x, fxy);; 967 ; 968 if (f->Eval(x, y - eyL) < f->Eval(x, y + eyH)) {; 969 eyLNew = TMath::Abs(fxy - f->Eval(x, y - eyL));; 970 eyHNew = TMath::Abs(f->Eval(x, y + eyH) - fxy);; 971 } else {; 972 eyHNew = TMath::Abs(fxy - f->Eval(x, y - eyL));; 973 eyLNew = TMath::Abs(f->Eval(x, y + eyH) - fxy);; 974 }; 975 ; 976 // systematic errors and error on x doesn't change; 977 SetPointEY(i, 0, eyLNew, eyHNew);; 978 }; 979 ; 980 if (gPad); 981 gPad->Modified();; 982}; 983 ; 98",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:32850,down,down,32850,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['down'],['down']
Availability,"6 ;  ; file  rf607_fitresult.C;   Likelihood and minimization: demonstration of options of the RooFitResult class ;  ; file  rf607_fitresult.py;   Likelihood and minimization: demonstration of options of the RooFitResult class ;  ; file  rf608_fitresultaspdf.C;   Likelihood and minimization: representing the parabolic approximation of the fit as a multi-variate Gaussian on the parameters of the fitted pdf ;  ; file  rf608_fitresultaspdf.py;   Likelihood and minimization: representing the parabolic approximation of the fit as a multi-variate Gaussian on the parameters of the fitted pdf ;  ; file  rf609_xychi2fit.C;   Likelihood and minimization: setting up a chi^2 fit to an unbinned dataset with X,Y,err(Y) values (and optionally err(X) values) ;  ; file  rf609_xychi2fit.py;   Likelihood and minimization: setting up a chi^2 fit to an unbinned dataset with X,Y,err(Y) values (and optionally err(X) values) ;  ; file  rf610_visualerror.C;   Likelihood and minimization: visualization of errors from a covariance matrix ;  ; file  rf610_visualerror.py;   Likelihood and minimization: visualization of errors from a covariance matrix ;  ; file  rf611_weightedfits.C;   Likelihood and minimization: Parameter uncertainties for weighted unbinned ML fits ;  ; file  rf612_recoverFromInvalidParameters.C;   Likelihood and minimization: Recover from regions where the function is not defined. ;  ; file  rf612_recoverFromInvalidParameters.py;   Likelihood and minimization: Recover from regions where the function is not defined. ;  ; file  rf613_global_observables.C;   This tutorial explains the concept of global observables in RooFit, and showcases how their values can be stored either in the model or in the dataset. ;  ; file  rf613_global_observables.py;   This tutorial explains the concept of global observables in RooFit, and showcases how their values can be stored either in the model or in the dataset. ;  ; file  rf614_binned_fit_problems.C;   A tutorial that explains you how to solv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:17945,error,errors,17945,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['error'],['errors']
Availability,"6 = gROOT->GetColor(26);; col26->SetAlpha(0.01);. A new color can be created transparent the following way:. Int_t ci = 1756;; TColor *color = new TColor(ci, 0.1, 0.2, 0.3, """", 0.5); // alpha = 0.5. An example of tranparency usage with parallel coordinates can be found; in $ROOTSYS/tutorials/tree/parallelcoordtrans.C. To ease the creation of a transparent color the static method; GetColorTransparent(Int_t color, Float_t a) is provided.; In the following example the trans_red color index point to; a red color 30% transparent. The alpha value of the color index; kRed is not modified. Int_t trans_red = GetColorTransparent(kRed, 0.3);. This function is also used in the methods; SetFillColorAlpha(), SetLineColorAlpha(),; SetMarkerColorAlpha() and SetTextColorAlpha().; In the following example the fill color of the histogram histo; is set to blue with a transparency of 35%. The color kBlue; itself remains fully opaque. histo->SetFillColorAlpha(kBlue, 0.35);. The transparency is available on all platforms when the flagOpenGL.CanvasPreferGL is set to 1; in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG ... but not PostScript.; . Function Members (Methods); public:. virtual~TColor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsHexString() const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject& color) const; static voidCreateColorsCircle(Int_t offset, const char* name, UChar_t* rgb); static voidCreateColorsGray(); static voidCreateColorsRectangle(Int_t offset, const char* name, UChar_t* rgb); static voidCreateColorWheel(); static Int_tCreateGradientColorTable(UInt_t N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TColor.html:9063,avail,available,9063,root/html602/TColor.html,https://root.cern,https://root.cern/root/html602/TColor.html,2,['avail'],['available']
Availability,"6 Int_t size = fOverlaps->GetEntriesFast();; 627 fOverlaps->Add((TObject *)ovlp);; 628 return size;; 629}; 630 ; 631////////////////////////////////////////////////////////////////////////////////; 632/// Add a new region of volumes.; 633Int_t TGeoManager::AddRegion(TGeoRegion *region); 634{; 635 Int_t size = fRegions->GetEntriesFast();; 636 fRegions->Add(region);; 637 return size;; 638}; 639 ; 640////////////////////////////////////////////////////////////////////////////////; 641/// Add a user-defined property. Returns true if added, false if existing.; 642 ; 643Bool_t TGeoManager::AddProperty(const char *property, Double_t value); 644{; 645 auto pos = fProperties.insert(ConstPropMap_t::value_type(property, value));; 646 if (!pos.second) {; 647 Warning(""AddProperty"", ""Property \""%s\"" already exists with value %g"", property, (pos.first)->second);; 648 return false;; 649 }; 650 return true;; 651}; 652 ; 653////////////////////////////////////////////////////////////////////////////////; 654/// Get a user-defined property; 655 ; 656Double_t TGeoManager::GetProperty(const char *property, Bool_t *error) const; 657{; 658 auto pos = fProperties.find(property);; 659 if (pos == fProperties.end()) {; 660 if (error); 661 *error = kTRUE;; 662 return 0.;; 663 }; 664 if (error); 665 *error = kFALSE;; 666 return pos->second;; 667}; 668 ; 669////////////////////////////////////////////////////////////////////////////////; 670/// Get a user-defined property from a given index; 671 ; 672Double_t TGeoManager::GetProperty(size_t i, TString &name, Bool_t *error) const; 673{; 674 // This is a quite inefficient way to access map elements, but needed for the GDML writer to; 675 if (i >= fProperties.size()) {; 676 if (error); 677 *error = kTRUE;; 678 return 0.;; 679 }; 680 size_t pos = 0;; 681 auto it = fProperties.begin();; 682 while (pos < i) {; 683 ++it;; 684 ++pos;; 685 }; 686 if (error); 687 *error = kFALSE;; 688 name = (*it).first;; 689 return (*it).second;; 690}; 691 ; 692//////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:25061,error,error,25061,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['error'],['error']
Availability,"6 if (projX == GetZaxis() ) { projX_hW = h3dW->GetZaxis(); projX_hN = h3dN->GetZaxis(); }; 1137 TAxis * projY_hW = h3dW->GetYaxis();; 1138 TAxis * projY_hN = h3dN->GetYaxis();; 1139 if (projY == GetXaxis() ) { projY_hW = h3dW->GetXaxis(); projY_hN = h3dN->GetXaxis(); }; 1140 if (projY == GetZaxis() ) { projY_hW = h3dW->GetZaxis(); projY_hN = h3dN->GetZaxis(); }; 1141 ; 1142 TH2D * h2W = TH3::DoProject2D(*h3dW,""htemp-W"","""",projX_hW, projY_hW, true, originalRange, useUF, useOF);; 1143 TH2D * h2N = TH3::DoProject2D(*h3dN,""htemp-N"","""",projX_hN, projY_hN, useWeights, originalRange, useUF, useOF);; 1144 h2W->SetDirectory(nullptr); h2N->SetDirectory(nullptr);; 1145 ; 1146 ; 1147 // fill the bin content; 1148 R__ASSERT( h2W->fN == p2->fN );; 1149 R__ASSERT( h2N->fN == p2->fN );; 1150 R__ASSERT( h2W->GetSumw2()->fN != 0); // h2W should always be a weighted histogram since h3dW is weighted; 1151 for (int i = 0; i < p2->fN ; ++i) {; 1152 //std::cout << "" proj bin "" << i << "" "" << h2W->fArray[i] << "" "" << h2N->fArray[i] << std::endl;; 1153 p2->fArray[i] = h2W->fArray[i]; // array of profile is sum of all values; 1154 p2->GetSumw2()->fArray[i] = h2W->GetSumw2()->fArray[i]; // array of content square of profile is weight square of the W projected histogram; 1155 p2->SetBinEntries(i, h2N->fArray[i] );; 1156 if (useWeights) p2->GetBinSumw2()->fArray[i] = h2N->GetSumw2()->fArray[i]; // sum of weight squares are stored to compute errors in h1N histogram; 1157 }; 1158 // delete the created histograms; 1159 delete h3dW;; 1160 delete h3dN;; 1161 delete h2W;; 1162 delete h2N;; 1163 ; 1164 // Also we need to set the entries since they have not been correctly calculated during the projection; 1165 // we can only set them to the effective entries; 1166 p2->SetEntries( p2->GetEffectiveEntries() );; 1167 ; 1168 return p2;; 1169 ; 1170}; 1171 ; 1172////////////////////////////////////////////////////////////////////////////////; 1173/// Replace current statistics with the values in array stats.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:44169,error,errors,44169,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['error'],['errors']
Availability,"6 of file TUnixSystem.cxx. ◆ ResetTimer(). void TUnixSystem::ResetTimer ; (; TTimer * ; ti). overridevirtual . Reset a-sync timer. ; Reimplemented from TSystem.; Definition at line 3033 of file TUnixSystem.cxx. ◆ Select() [1/2]. Int_t TUnixSystem::Select ; (; TFileHandler * ; h, . Long_t ; to . ). overridevirtual . Select on the file descriptor related to file handler h. ; The timeout to is in millisec. Returns the number of ready descriptors, or 0 in case of timeout, or < 0 in case of an error, with -2 being EINTR and -3 EBADF. In case of EINTR the errno has been reset and the method can be called again. Returns -4 in case the file handler is 0 or does not have a file descriptor >= 0. ; Reimplemented from TSystem.; Definition at line 1250 of file TUnixSystem.cxx. ◆ Select() [2/2]. Int_t TUnixSystem::Select ; (; TList * ; act, . Long_t ; to . ). overridevirtual . Select on file descriptors. ; The timeout to is in millisec. Returns the number of ready descriptors, or 0 in case of timeout, or < 0 in case of an error, with -2 being EINTR and -3 EBADF. In case of EINTR the errno has been reset and the method can be called again. Returns -4 in case the list did not contain any file handlers or file handlers with file descriptor >= 0. ; Reimplemented from TSystem.; Definition at line 1202 of file TUnixSystem.cxx. ◆ SendBuf(). int TUnixSystem::SendBuf ; (; int ; sock, . const void * ; buf, . int ; length . ). overridevirtual . Send a buffer headed by a length indicator. ; Returns length of sent buffer or -1 in case of error. ; Reimplemented from TSystem.; Definition at line 3341 of file TUnixSystem.cxx. ◆ SendRaw(). int TUnixSystem::SendRaw ; (; int ; sock, . const void * ; buf, . int ; length, . int ; opt . ). overridevirtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). Returns the number of bytes sent or -1 in case of error. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer (E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:65769,error,error,65769,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['error'],['error']
Availability,"6 return kTRUE;; 397 ; 398}; 399////////////////////////////////////////////////////////////////////////////////; 400/// It returns the error along X at point `i`.; 401 ; 402Double_t TGraphBentErrors::GetErrorX(Int_t i) const; 403{; 404 if (i < 0 || i >= fNpoints) return -1;; 405 if (!fEXlow && !fEXhigh) return -1;; 406 Double_t elow = 0, ehigh = 0;; 407 if (fEXlow) elow = fEXlow[i];; 408 if (fEXhigh) ehigh = fEXhigh[i];; 409 return TMath::Sqrt(0.5*(elow*elow + ehigh*ehigh));; 410}; 411 ; 412 ; 413////////////////////////////////////////////////////////////////////////////////; 414/// It returns the error along Y at point `i`.; 415 ; 416Double_t TGraphBentErrors::GetErrorY(Int_t i) const; 417{; 418 if (i < 0 || i >= fNpoints) return -1;; 419 if (!fEYlow && !fEYhigh) return -1;; 420 Double_t elow=0, ehigh=0;; 421 if (fEYlow) elow = fEYlow[i];; 422 if (fEYhigh) ehigh = fEYhigh[i];; 423 return TMath::Sqrt(0.5*(elow*elow + ehigh*ehigh));; 424}; 425 ; 426 ; 427////////////////////////////////////////////////////////////////////////////////; 428/// Get high error on X[i].; 429 ; 430Double_t TGraphBentErrors::GetErrorXhigh(Int_t i) const; 431{; 432 if (i<0 || i>fNpoints) return -1;; 433 if (fEXhigh) return fEXhigh[i];; 434 return -1;; 435}; 436 ; 437 ; 438////////////////////////////////////////////////////////////////////////////////; 439/// Get low error on X[i].; 440 ; 441Double_t TGraphBentErrors::GetErrorXlow(Int_t i) const; 442{; 443 if (i<0 || i>fNpoints) return -1;; 444 if (fEXlow) return fEXlow[i];; 445 return -1;; 446}; 447 ; 448 ; 449////////////////////////////////////////////////////////////////////////////////; 450/// Get high error on Y[i].; 451 ; 452Double_t TGraphBentErrors::GetErrorYhigh(Int_t i) const; 453{; 454 if (i<0 || i>fNpoints) return -1;; 455 if (fEYhigh) return fEYhigh[i];; 456 return -1;; 457}; 458 ; 459 ; 460////////////////////////////////////////////////////////////////////////////////; 461/// Get low error on Y[i].; 462 ; 463Double_t TGraph",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html:14230,error,error,14230,doc/master/TGraphBentErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html,1,['error'],['error']
Availability,"6. Double_t Atof() const; Return floating-point value contained in string.; Examples of valid strings are:; 64320; 64 320; 6 4 3 2 0; 6.4320 6,4320; 6.43e20 6.43E20 6,43e20; 6.43e-20 6.43E-20 6,43e-20. TString Itoa(Int_t value, Int_t base); Converts an Int_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; Usage: the following statement produce the same output, namely ""1111""; std::cout << TString::Itoa(15,2) ;; std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; In case of error returns the ""!"" string. TString UItoa(UInt_t value, Int_t base); Converts a UInt_t (twice the range of an Int_t) to a TString with respect; to the base specified (2-36). Thus it is an enhanced version of sprintf; (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString LLtoa(Long64_t value, Int_t base); Converts a Long64_t to a TString with respect to the base specified (2-36).; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString ULLtoa(ULong64_t value, Int_t base); Converts a ULong64_t (twice the range of an Long64_t) to a TString with; respect to the base specified (2-36). Thus it is an enhanced version of; sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; In case of error returns the ""!"" string. TString BaseConvert(const TString& s_in, Int_t base_in, Int_t base_out); Converts string from base base_in to base base_out. Supported bases; are 2-36. At most 64 bit data can be converted. Bool_t EndsWith(const char* pat, TString::ECaseCompare cmp = kExact) const; Return true if string ends with the specified string. TObjArray * Tokenize(const TString& delim) const; This fun",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TString.html:18982,error,error,18982,root/html602/TString.html,https://root.cern,https://root.cern/root/html602/TString.html,2,['error'],['error']
Availability,"6/// ### Computing errors: A moving field; 867///; 868/// The computation of errors for a TProfile2D has evolved with the versions; 869/// of ROOT. The difficulty is in computing errors for bins with low statistics.; 870/// - prior to version 3.10, we had no special treatment of low statistic bins.; 871/// As a result, these bins had huge errors. The reason is that the; 872/// expression eprim2 is very close to 0 (rounding problems) or 0.; 873/// - The algorithm is modified/protected for the case; 874/// when a TProfile2D is projected (ProjectionX). The previous algorithm; 875/// generated a N^2 problem when projecting a TProfile2D with a large number of; 876/// bins (eg 100000).; 877/// - in version 3.10/02, a new static function TProfile::Approximate; 878/// is introduced to enable or disable (default) the approximation.; 879/// (see also comments in TProfile::GetBinError); 880 ; 881Double_t TProfile2D::GetBinError(Int_t bin) const; 882{; 883 return TProfileHelper::GetBinError((TProfile2D*)this, bin);; 884}; 885 ; 886////////////////////////////////////////////////////////////////////////////////; 887/// Return option to compute profile2D errors.; 888 ; 889Option_t *TProfile2D::GetErrorOption() const; 890{; 891 if (fErrorMode == kERRORSPREAD) return ""s"";; 892 if (fErrorMode == kERRORSPREADI) return ""i"";; 893 if (fErrorMode == kERRORSPREADG) return ""g"";; 894 return """";; 895}; 896 ; 897////////////////////////////////////////////////////////////////////////////////; 898/// Fill the array stats from the contents of this profile.; 899/// The array stats must be correctly dimensioned in the calling program.; 900///; 901/// - stats[0] = sumw; 902/// - stats[1] = sumw2; 903/// - stats[2] = sumwx; 904/// - stats[3] = sumwx2; 905/// - stats[4] = sumwy; 906/// - stats[5] = sumwy2; 907/// - stats[6] = sumwxy; 908/// - stats[7] = sumwz; 909/// - stats[8] = sumwz2; 910///; 911/// If no axis-subrange is specified (via TAxis::SetRange), the array stats; 912/// is simply a copy o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:31232,error,errors,31232,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['error'],['errors']
Availability,"6010/// h3->Fill(r.Gaus(0,10));; 6011/// }; 6012///; 6013/// TList *list = new TList;; 6014/// list->Add(h1);; 6015/// list->Add(h2);; 6016/// list->Add(h3);; 6017/// TH1F *h = (TH1F*)h1->Clone(""h"");; 6018/// h->Reset();; 6019/// h->Merge(list);; 6020/// h->Draw();; 6021/// }; 6022/// ~~~; 6023 ; 6024Long64_t TH1::Merge(TCollection *li,Option_t * opt); 6025{; 6026 if (!li) return 0;; 6027 if (li->IsEmpty()) return (Long64_t) GetEntries();; 6028 ; 6029 // use TH1Merger class; 6030 TH1Merger merger(*this,*li,opt);; 6031 Bool_t ret = merger();; 6032 ; 6033 return (ret) ? GetEntries() : -1;; 6034}; 6035 ; 6036 ; 6037////////////////////////////////////////////////////////////////////////////////; 6038/// Performs the operation:; 6039///; 6040/// `this = this*c1*f1`; 6041///; 6042/// If errors are defined (see TH1::Sumw2), errors are also recalculated.; 6043///; 6044/// Only bins inside the function range are recomputed.; 6045/// IMPORTANT NOTE: If you intend to use the errors of this histogram later; 6046/// you should call Sumw2 before making this operation.; 6047/// This is particularly important if you fit the histogram after TH1::Multiply; 6048///; 6049/// The function return kFALSE if the Multiply operation failed; 6050 ; 6051Bool_t TH1::Multiply(TF1 *f1, Double_t c1); 6052{; 6053 if (!f1) {; 6054 Error(""Multiply"",""Attempt to multiply by a non-existing function"");; 6055 return kFALSE;; 6056 }; 6057 ; 6058 // delete buffer if it is there since it will become invalid; 6059 if (fBuffer) BufferEmpty(1);; 6060 ; 6061 Int_t nx = GetNbinsX() + 2; // normal bins + uf / of (cells); 6062 Int_t ny = GetNbinsY() + 2;; 6063 Int_t nz = GetNbinsZ() + 2;; 6064 if (fDimension < 2) ny = 1;; 6065 if (fDimension < 3) nz = 1;; 6066 ; 6067 // reset min-maximum; 6068 SetMinimum();; 6069 SetMaximum();; 6070 ; 6071 // - Loop on bins (including underflows/overflows); 6072 Double_t xx[3];; 6073 Double_t *params = nullptr;; 6074 f1->InitArgs(xx,params);; 6075 ; 6076 for (Int_t binz = 0; binz ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:239035,error,errors,239035,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,6037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:102836,error,error,102836,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100534,error,error,100534,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"612mg_start2(struct mg_init_data *init, struct mg_error_data *error); 19613{; 19614 struct mg_context *ctx;; 19615 const char *name, *value, *default_value;; 19616 int idx, ok, workerthreadcount;; 19617 unsigned int i;; 19618 int itmp;; 19619 void (*exit_callback)(const struct mg_context *ctx) = 0;; 19620 const char **options =; 19621 ((init != NULL) ? (init->configuration_options) : (NULL));; 19622 ; 19623 struct mg_workerTLS tls;; 19624 ; 19625 if (error != NULL) {; 19626 error->code = 0;; 19627 if (error->text_buffer_size > 0) {; 19628 *error->text = 0;; 19629 }; 19630 }; 19631 ; 19632 if (mg_init_library_called == 0) {; 19633 /* Legacy INIT, if mg_start is called without mg_init_library.; 19634 * Note: This will cause a memory leak when unloading the library.; 19635 */; 19636 legacy_init(options);; 19637 }; 19638 if (mg_init_library_called == 0) {; 19639 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19640 mg_snprintf(NULL,; 19641 NULL, /* No truncation check for error buffers */; 19642 error->text,; 19643 error->text_buffer_size,; 19644 ""%s"",; 19645 ""Library uninitialized"");; 19646 }; 19647 return NULL;; 19648 }; 19649 ; 19650 /* Allocate context and initialize reasonable general case defaults. */; 19651 if ((ctx = (struct mg_context *)mg_calloc(1, sizeof(*ctx))) == NULL) {; 19652 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19653 mg_snprintf(NULL,; 19654 NULL, /* No truncation check for error buffers */; 19655 error->text,; 19656 error->text_buffer_size,; 19657 ""%s"",; 19658 ""Out of memory"");; 19659 }; 19660 return NULL;; 19661 }; 19662 ; 19663 /* Random number generator will initialize at the first call */; 19664 ctx->dd.auth_nonce_mask =; 19665 (uint64_t)get_random() ^ (uint64_t)(ptrdiff_t)(options);; 19666 ; 19667 /* Save started thread index to reuse in other external API calls; 19668 * For the sake of thread synchronization all non-civetweb threads; 19669 * can be considered as single external thread */; 19670 ctx->starter_thread_idx =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:585303,error,error,585303,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,5,['error'],['error']
Availability,"613mg_start2(struct mg_init_data *init, struct mg_error_data *error); 19614{; 19615 struct mg_context *ctx;; 19616 const char *name, *value, *default_value;; 19617 int idx, ok, workerthreadcount;; 19618 unsigned int i;; 19619 int itmp;; 19620 void (*exit_callback)(const struct mg_context *ctx) = 0;; 19621 const char **options =; 19622 ((init != NULL) ? (init->configuration_options) : (NULL));; 19623 ; 19624 struct mg_workerTLS tls;; 19625 ; 19626 if (error != NULL) {; 19627 error->code = 0;; 19628 if (error->text_buffer_size > 0) {; 19629 *error->text = 0;; 19630 }; 19631 }; 19632 ; 19633 if (mg_init_library_called == 0) {; 19634 /* Legacy INIT, if mg_start is called without mg_init_library.; 19635 * Note: This will cause a memory leak when unloading the library.; 19636 */; 19637 legacy_init(options);; 19638 }; 19639 if (mg_init_library_called == 0) {; 19640 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19641 mg_snprintf(NULL,; 19642 NULL, /* No truncation check for error buffers */; 19643 error->text,; 19644 error->text_buffer_size,; 19645 ""%s"",; 19646 ""Library uninitialized"");; 19647 }; 19648 return NULL;; 19649 }; 19650 ; 19651 /* Allocate context and initialize reasonable general case defaults. */; 19652 if ((ctx = (struct mg_context *)mg_calloc(1, sizeof(*ctx))) == NULL) {; 19653 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19654 mg_snprintf(NULL,; 19655 NULL, /* No truncation check for error buffers */; 19656 error->text,; 19657 error->text_buffer_size,; 19658 ""%s"",; 19659 ""Out of memory"");; 19660 }; 19661 return NULL;; 19662 }; 19663 ; 19664 /* Random number generator will initialize at the first call */; 19665 ctx->dd.auth_nonce_mask =; 19666 (uint64_t)get_random() ^ (uint64_t)(ptrdiff_t)(options);; 19667 ; 19668 /* Save started thread index to reuse in other external API calls; 19669 * For the sake of thread synchronization all non-civetweb threads; 19670 * can be considered as single external thread */; 19671 ctx->starter_thread_idx =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:585336,error,error,585336,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,5,['error'],['error']
Availability,616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network tr,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16963,error,error,16963,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability,"62 if (comma > -1) {; 2063 //replace comma with decimal point; 2064 tmp.Replace(comma, 1, ""."");; 2065 }; 2066 //no whitespace ?; 2067 if (end == -1) return atof(tmp.Data());; 2068 //remove whitespace; 2069 Int_t start = 0;; 2070 TString tmp2;; 2071 while (end > -1) {; 2072 tmp2 += tmp(start, end-start);; 2073 start = end+1; end = tmp.Index("" "", start);; 2074 }; 2075 end = tmp.Length();; 2076 tmp2 += tmp(start, end-start);; 2077 return atof(tmp2.Data());; 2078}; 2079 ; 2080////////////////////////////////////////////////////////////////////////////////; 2081/// Converts an Int_t to a TString with respect to the base specified (2-36).; 2082/// Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; 2083/// http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; 2084/// Usage: the following statement produce the same output, namely ""1111""; 2085/// ~~~ {.cpp}; 2086/// std::cout << TString::Itoa(15,2) ;; 2087/// std::cout << TString::Itoa(0xF,2) ; /// 0x prefix to handle hex; 2088/// std::cout << TString::Itoa(017,2) ; /// 0 prefix to handle oct; 2089/// ~~~; 2090/// In case of error returns the ""!"" string.; 2091 ; 2092TString TString::Itoa(Int_t value, Int_t base); 2093{; 2094 std::string buf;; 2095 // check that the base if valid; 2096 if (base < 2 || base > 36) {; 2097 Error(""TString::Itoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base) ;; 2098 return (TString(""!""));; 2099 }; 2100 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2101 Int_t quotient = value;; 2102 // Translating number to string with base:; 2103 do {; 2104 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ TMath::Abs(quotient % base) ];; 2105 quotient /= base;; 2106 } while (quotient);; 2107 // Append the negative sign; 2108 if (value < 0) buf += '-';; 2109 std::reverse(buf.begin(), buf.end());; 2110 return (TString(buf.data()));; 2111}; 2112 ; 2113////////////////////////////////////////////////////////////////////////////////; 2114/// Converts a UInt_t (twice ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:65478,error,error,65478,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,1,['error'],['error']
Availability,"62 of file Rtypes.h. ◆ ClassDefInlineOverride. #define ClassDefInlineOverride; (;  ; name, .  ; id . ). Value: _ClassDefInline_(name,id,,override) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 358 of file Rtypes.h. ◆ ClassDefNV. #define ClassDefNV; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,,) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 350 of file Rtypes.h. ◆ ClassDefOverride. #define ClassDefOverride; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,,override) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 346 of file Rtypes.h. ◆ ClassDefT. #define ClassDefT; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,virtual,) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. This ClassDefT is strictly redundant and is kept only for backward compatibility. ; Deprecated:; Definition at line 409 of file Rtypes.h. ◆ ClassDefT2. #define ClassDefT2; (;  ; name, .  ; Tmpl . ). Definition at line 418 of file Rtypes.h. ◆ ClassDefTNV. #define ClassDefTNV; (;  ; name, .  ; id . ). Value: _ClassDefOutline_(name,id,virtual,) \; /** \cond HIDDEN_SYMBOLS */ static int DeclFileLine() { return __LINE__; } /** \endcond */. Definition at line 413 of file Rtypes.h. ◆ ClassImp. #define ClassImp; (;  ; name);    ClassImpUnique(name,default). Deprecated:; Definition at line 382 of file Rtypes.h. ◆ ClassImp2T. #define ClassImp2T; (;  ; name, .  ; Tmpl1, .  ; Tmpl2 . );    templateClassImp(name). Definition at line 437 of file Rtypes.h. ◆ ClassImp3T. #define ClassImp3T; (;  ; name, .  ; Tmpl1, .  ; Tmpl2, .  ; Tmpl3 . );    templateClassImp(name). Definition at line 446 of file Rtypes.h. ◆ ClassImpT. #define ClassImpT; (;  ; name, .  ; Tmpl . );    templateClassImp(name). Definition at line 429 of file Rtypes.h. ◆ Class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rtypes_8h.html:14747,redundant,redundant,14747,doc/master/Rtypes_8h.html,https://root.cern,https://root.cern/doc/master/Rtypes_8h.html,1,['redundant'],['redundant']
Availability,"624; TGeoNavigator::FindNodeTGeoNode * FindNode(Bool_t safe_start=kTRUE)Returns deepest node containing current point.Definition TGeoNavigator.cxx:1543; TGeoNavigator::FindNextBoundaryAndStepTGeoNode * FindNextBoundaryAndStep(Double_t stepmax=TGeoShape::Big(), Bool_t compsafe=kFALSE)Compute distance to next boundary within STEPMAX.Definition TGeoNavigator.cxx:1178; TGeoNavigator::CdTopvoid CdTop()Make top level node the current node.Definition TGeoNavigator.cxx:386; TGeoNavigator::GetCurrentNodeIdInt_t GetCurrentNodeId() constDefinition TGeoNavigator.h:160; TGeoNavigator::FindNormalFastDouble_t * FindNormalFast()Computes fast normal to next crossed boundary, assuming that the current point is close enough to the...Definition TGeoNavigator.cxx:1593; TGeoNavigator::GetBranchOnlysvoid GetBranchOnlys(Int_t *isonly) constFill node copy numbers of current branch into an array.Definition TGeoNavigator.cxx:452; TGeoNavigator::SearchNodeTGeoNode * SearchNode(Bool_t downwards=kFALSE, const TGeoNode *skipnode=nullptr)Returns the deepest node containing fPoint, which must be set a priori.Definition TGeoNavigator.cxx:1924; TGeoNavigator::CdNodevoid CdNode(Int_t nodeid)Change current path to point to the node having this id.Definition TGeoNavigator.cxx:301; TGeoNavigator::GetCacheTGeoNodeCache * GetCache() constDefinition TGeoNavigator.h:243; TGeoNavigator::ResetAllvoid ResetAll()Reset the navigator.Definition TGeoNavigator.cxx:2708; TGeoNavigator::IsSamePointBool_t IsSamePoint(Double_t x, Double_t y, Double_t z) constCheck if a new point with given coordinates is the same as the last located one.Definition TGeoNavigator.cxx:2634; TGeoNavigator::CdDownvoid CdDown(Int_t index)Make a daughter of current node current.Definition TGeoNavigator.cxx:313; TGeoNavigator::GetPathconst char * GetPath() constGet path to the current node in the form /node0/node1/...Definition TGeoNavigator.cxx:2682; TGeoNavigator::GetSafeLevelInt_t GetSafeLevel() constGo upwards the tree until a non-overlappin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:228053,down,downwards,228053,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['down'],['downwards']
Availability,"6264// external parameter number specified; 6265 iext = iuext;; 6266 if (iext > fNu) goto L100;; 6267 iint = fNiofex[iext-1];; 6268 iuint = iint;; 6269 }; 6270// in both cases; 6271 nvl = fNvarl[iext-1];; 6272 if (nvl < 0) goto L100;; 6273 chnam = fCpnam[iext-1];; 6274 val = fU[iext-1];; 6275 if (iint > 0) err = fWerr[iint-1];; 6276 if (nvl == 4) {; 6277 xlolim = fAlim[iext-1];; 6278 xuplim = fBlim[iext-1];; 6279 }; 6280 return;; 6281// parameter is undefined; 6282L100:; 6283 iuint = -1;; 6284 chnam = ""undefined"";; 6285 val = 0;; 6286}; 6287 ; 6288////////////////////////////////////////////////////////////////////////////////; 6289/// Prints the values of the parameters at the time of the call; 6290///; 6291/// also prints other relevant information such as function value,; 6292/// estimated distance to minimum, parameter errors, step sizes.; 6293///; 6294/// According to the value of IKODE, the printout is:; 6295/// IKODE=INKODE=; 6296/// - 0 only info about function value; 6297/// - 1 parameter values, errors, limits; 6298/// - 2 values, errors, step sizes, internal values; 6299/// - 3 values, errors, step sizes, first derivs.; 6300/// - 4 values, parabolic errors, MINOS errors; 6301///; 6302/// when INKODE=5, MNPRIN chooses IKODE=1,2, or 3, according to fISW[1]; 6303 ; 6304void TMinuit::mnprin(Int_t inkode, Double_t fval); 6305{; 6306 /* Initialized data */; 6307 ; 6308 static const TString cblank = "" "";; 6309 TString cnambf = "" "";; 6310 ; 6311 /* Local variables */; 6312 Double_t dcmax, x1, x2, x3, dc;; 6313 x2 = x3 = 0;; 6314 Int_t nadd, i, k, l, m, ikode, ic, nc, ntrail, lbl;; 6315 TString chedm;; 6316 TString colhdl[6], colhdu[6], cx2, cx3, cheval;; 6317 ; 6318 if (fNu == 0) {; 6319 Printf("" THERE ARE CURRENTLY NO PARAMETERS DEFINED"");; 6320 return;; 6321 }; 6322// get value of IKODE based in INKODE, fISW[1]; 6323 ikode = inkode;; 6324 if (inkode == 5) {; 6325 ikode = fISW[1] + 1;; 6326 if (ikode > 3) ikode = 3;; 6327 }; 6328// set 'default' column headings; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:204315,error,errors,204315,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,3,['error'],['errors']
Availability,"630 of file RDataFrame.cxx. ◆ RDataFrame() [6/10]. ROOT::RDataFrame::RDataFrame ; (; ULong64_t ; numEntries). Build a dataframe that generates numEntries entries. ; Parameters. [in]numEntriesThe number of entries to generate. An empty-source dataframe constructed with a number of entries will generate those entries on the fly when some action is triggered, and it will do so for all the previously-defined columns. See alsoROOT::RDF::RInterface for the documentation of the methods available. ; Definition at line 1643 of file RDataFrame.cxx. ◆ RDataFrame() [7/10]. ROOT::RDataFrame::RDataFrame ; (; std::unique_ptr< ROOT::RDF::RDataSource > ; ds, . const ColumnNames_t & ; defaultColumns = {} . ). Build dataframe associated to data source. ; Parameters. [in]dsThe data source object. ; [in]defaultColumnsCollection of default column names to fall back to when none is specified. A dataframe associated to a data source will query it to access column values. See alsoROOT::RDF::RInterface for the documentation of the methods available. ; Definition at line 1656 of file RDataFrame.cxx. ◆ RDataFrame() [8/10]. ROOT::RDataFrame::RDataFrame ; (; ROOT::RDF::Experimental::RDatasetSpec ; spec). Build dataframe from an RDatasetSpec object. ; Parameters. [in]specThe dataset specification object. A dataset specification includes trees and file names, as well as an optional friend list and/or entry range. Example usage from Python:; spec = (; ROOT.RDF.Experimental.RDatasetSpec(); .AddSample((""data"", ""tree"", ""file.root"")); .WithGlobalFriends(""friendTree"", ""friend.root"", ""alias""); .WithGlobalRange((100, 200)); ); df = ROOT.RDataFrame(spec); ROOT::RDF::Experimental::RDatasetSpecThe dataset specification for RDataFrame.Definition RDatasetSpec.hxx:47; See also ROOT::RDataFrame::FromSpec(). ; Definition at line 1680 of file RDataFrame.cxx. ◆ RDataFrame() [9/10]. ROOT::RDataFrame::RDataFrame ; (; const RDataFrame & ; ). default . ◆ RDataFrame() [10/10]. ROOT::RDataFrame::RDataFrame ; (; RDataFram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:109759,avail,available,109759,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,1,['avail'],['available']
Availability,"634 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5619 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 597 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v620/namespaceROOT.html:19381,avail,available,19381,doc/v620/namespaceROOT.html,https://root.cern,https://root.cern/doc/v620/namespaceROOT.html,1,['avail'],['available']
Availability,64.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91748,error,error,91748,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"648 bit field status word; fLineColor 1 line color; fLineStyle 1 line style; fLineWidth 1 line width; fFillColor 19 fill area color; fFillStyle 1001 fill area style; If noAddr is true, printout of all pointer values is skipped. ; Definition at line 2535 of file TClass.cxx. ◆ DynamicCast() [1/2]. const void * TClass::DynamicCast ; (; const TClass * ; cl, . const void * ; obj, . Bool_t ; up = kTRUE . ). Cast obj of this class type up to baseclass cl if up is true. ; Cast obj of this class type down from baseclass cl if up is false. If this class is not a baseclass of cl return 0, else the pointer to the cl part of this (up) or to this (down). ; Definition at line 4937 of file TClass.cxx. ◆ DynamicCast() [2/2]. void * TClass::DynamicCast ; (; const TClass * ; cl, . void * ; obj, . Bool_t ; up = kTRUE . ). Cast obj of this class type up to baseclass cl if up is true. ; Cast obj of this class type down from baseclass cl if up is false. If this class is not a baseclass of cl return 0, else the pointer to the cl part of this (up) or to this (down). ; Definition at line 4915 of file TClass.cxx. ◆ EscapeChars(). char * TClass::EscapeChars ; (; const char * ; text); const. Introduce an escape character (@) in front of a special chars. ; You need to use the result immediately before it is being overwritten. ; Definition at line 2568 of file TClass.cxx. ◆ FindClassOrBaseMethodWithId(). TMethod * TClass::FindClassOrBaseMethodWithId ; (; DeclId_t ; faddr). private . Find a method with decl id in this class or its bases. ; Definition at line 4440 of file TClass.cxx. ◆ FindConversionStreamerInfo() [1/2]. TVirtualStreamerInfo * TClass::FindConversionStreamerInfo ; (; const char * ; onfile_classname, . UInt_t ; checksum . ); const. Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ; Definition at line 7193 of file TClass.cxx. ◆ FindConversionStreamerInfo() [2/2]. TVirtualStreamerInfo * TClass::FindConversionStre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:66354,down,down,66354,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,1,['down'],['down']
Availability,"648 bit field status word; fLineColor 1 line color; fLineStyle 1 line style; fLineWidth 1 line width; fFillColor 19 fill area color; fFillStyle 1001 fill area style; If noAddr is true, printout of all pointer values is skipped. ; Definition at line 2602 of file TClass.cxx. ◆ DynamicCast() [1/2]. const void * TClass::DynamicCast ; (; const TClass * ; cl, . const void * ; obj, . Bool_t ; up = kTRUE . ). Cast obj of this class type up to baseclass cl if up is true. ; Cast obj of this class type down from baseclass cl if up is false. If this class is not a baseclass of cl return 0, else the pointer to the cl part of this (up) or to this (down). ; Definition at line 5004 of file TClass.cxx. ◆ DynamicCast() [2/2]. void * TClass::DynamicCast ; (; const TClass * ; cl, . void * ; obj, . Bool_t ; up = kTRUE . ). Cast obj of this class type up to baseclass cl if up is true. ; Cast obj of this class type down from baseclass cl if up is false. If this class is not a baseclass of cl return 0, else the pointer to the cl part of this (up) or to this (down). ; Definition at line 4982 of file TClass.cxx. ◆ EscapeChars(). char * TClass::EscapeChars ; (; const char * ; text); const. Introduce an escape character (@) in front of a special chars. ; You need to use the result immediately before it is being overwritten. ; Definition at line 2635 of file TClass.cxx. ◆ FindClassOrBaseMethodWithId(). TMethod * TClass::FindClassOrBaseMethodWithId ; (; DeclId_t ; faddr). private . Find a method with decl id in this class or its bases. ; Definition at line 4507 of file TClass.cxx. ◆ FindConversionStreamerInfo() [1/2]. TVirtualStreamerInfo * TClass::FindConversionStreamerInfo ; (; const char * ; onfile_classname, . UInt_t ; checksum . ); const. Return a Conversion StreamerInfo from the class 'classname' for the layout represented by 'checksum' to this class, if any. ; Definition at line 7260 of file TClass.cxx. ◆ FindConversionStreamerInfo() [2/2]. TVirtualStreamerInfo * TClass::FindConversionStre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTClass.html:66355,down,down,66355,doc/master/classTClass.html,https://root.cern,https://root.cern/doc/master/classTClass.html,1,['down'],['down']
Availability,"64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Int_t CreateSymLinks(TList* files); Create in each worker sandbox symlinks to the files in the list; Used to make the caceh information available to workers. Int_t InitDataSetManager(); Initialize the dataset manager from directives or from defaults; Return 0 on success, -1 on failure. void ShowCache(Bool_t all = kFALSE); List contents of file cache. If all is true show all caches also on; slaves. If everything is ok all caches are to be the same. void ClearCache(const char* file = 0); Remove files from all file caches. Int_t Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); Copy the specified macro in the cache directory. The macro file is; uploaded if new or updated. If existing, the corresponding header; basename(macro).h or .hh, is also uploaded. For the other arguments; see TProof::Load().; Returns 0 in case of success and -1 in case of error. Int_t CopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0); Copy a macro, and its possible associated .h[h] file,; to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofLite.html:27988,avail,available,27988,root/html528/TProofLite.html,https://root.cern,https://root.cern/root/html528/TProofLite.html,3,['avail'],['available']
Availability,"64_t nent, const char* opt, Long64_t fst, TDSet* dset, const char* selec); Create a TProofQueryResult instance for this query. void SetQueryRunning(TProofQueryResult* pq); Set query in running state. Long64_t DrawSelect(TDSet* dset, const char* varexp, const char* selection = """", Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Execute the specified drawing action on a data set (TDSet).; Event- or Entry-lists should be set in the data set object using; TDSet::SetEntryList.; Returns -1 in case of error or number of selected events otherwise. Long64_t Process(TDSet* dset, const char* sel, Option_t* o = """", Long64_t nent = -1, Long64_t fst = 0); Process a data set (TDSet) using the specified selector (.C) file.; Entry- or event-lists should be set in the data set object using; TDSet::SetEntryList.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. Int_t CreateSymLinks(TList* files); Create in each worker sandbox symlinks to the files in the list; Used to make the cache information available to workers. Int_t InitDataSetManager(); Initialize the dataset manager from directives or from defaults; Return 0 on success, -1 on failure. void ShowCache(Bool_t all = kFALSE); List contents of file cache. If all is true show all caches also on; slaves. If everything is ok all caches are to be the same. void ClearCache(const char* file = 0); Remove files from all file caches. Int_t Load(const char* macro, Bool_t notOnClient = kFALSE, Bool_t uniqueOnly = kTRUE, TList* wrks = 0); Copy the specified macro in the cache directory. The macro file is; uploaded if new or updated. If existing, the corresponding header; basename(macro).h or .hh, is also uploaded. For the other arguments; see TProof::Load().; Returns 0 in case of success and -1 in case of error. Int_t CopyMacroToCache(const char* macro, Int_t headerRequired = 0, TSelector** selector = 0, Int_t opt = 0); Copy a macro, and its possible associated .h[h] file,; to t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofLite.html:31985,avail,available,31985,root/html602/TProofLite.html,https://root.cern,https://root.cern/root/html602/TProofLite.html,1,['avail'],['available']
Availability,65.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:90064,error,error,90064,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,65.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:84684,error,error,84684,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"650 if (fEX) return fEX[i];; 651 return -1;; 652}; 653 ; 654 ; 655////////////////////////////////////////////////////////////////////////////////; 656/// It returns the error along Y at point `i`. For TGraphErrors this method is; 657/// the same as GetErrorY.; 658 ; 659Double_t TGraphErrors::GetErrorYhigh(Int_t i) const; 660{; 661 if (i < 0 || i >= fNpoints) return -1;; 662 if (fEY) return fEY[i];; 663 return -1;; 664}; 665 ; 666 ; 667////////////////////////////////////////////////////////////////////////////////; 668/// It returns the error along Y at point `i`. For TGraphErrors this method is; 669/// the same as GetErrorY.; 670 ; 671Double_t TGraphErrors::GetErrorYlow(Int_t i) const; 672{; 673 if (i < 0 || i >= fNpoints) return -1;; 674 if (fEY) return fEY[i];; 675 return -1;; 676}; 677 ; 678////////////////////////////////////////////////////////////////////////////////; 679/// Adds all graphs with errors from the collection to this graph.; 680/// Returns the total number of points in the result or -1 in case of an error.; 681 ; 682Int_t TGraphErrors::Merge(TCollection* li); 683{; 684 TIter next(li);; 685 while (TObject* o = next()) {; 686 TGraph *g = dynamic_cast<TGraph*>(o);; 687 if (!g) {; 688 Error(""Merge"",; 689 ""Cannot merge - an object which doesn't inherit from TGraph found in the list"");; 690 return -1;; 691 }; 692 int n0 = GetN();; 693 int n1 = n0+g->GetN();; 694 Set(n1);; 695 Double_t * x = g->GetX();; 696 Double_t * y = g->GetY();; 697 Double_t * ex = g->GetEX();; 698 Double_t * ey = g->GetEY();; 699 for (Int_t i = 0 ; i < g->GetN(); i++) {; 700 SetPoint(n0+i, x[i], y[i]);; 701 if (ex) fEX[n0+i] = ex[i];; 702 if (ey) fEY[n0+i] = ey[i];; 703 }; 704 }; 705 return GetN();; 706}; 707 ; 708////////////////////////////////////////////////////////////////////////////////; 709/// Print graph and errors values.; 710 ; 711void TGraphErrors::Print(Option_t *) const; 712{; 713 for (Int_t i = 0; i < fNpoints; i++) {; 714 printf(""x[%d]=%g, y[%d]=%g, ex[%d]=%g, ey[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:21857,error,error,21857,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['error']
Availability,"6560 Warning(""ExtendAxis"",""Histogram %s has underflow or overflow in the axis that is extendable""; 6561 "" their content will be lost"",GetName() );; 6562 firstw= kFALSE;; 6563 }; 6564 continue;; 6565 }; 6566 Int_t ibin= GetBin(ix,iy,iz);; 6567 AddBinContent(ibin, content);; 6568 if (errors) {; 6569 fSumw2.fArray[ibin] += hold->GetBinErrorSqUnchecked(bin);; 6570 }; 6571 }; 6572 delete hold;; 6573}; 6574 ; 6575////////////////////////////////////////////////////////////////////////////////; 6576/// Recursively remove object from the list of functions; 6577 ; 6578void TH1::RecursiveRemove(TObject *obj); 6579{; 6580 // Rely on TROOT::RecursiveRemove to take the readlock.; 6581 ; 6582 if (fFunctions) {; 6583 if (!fFunctions->TestBit(kInvalidObject)) fFunctions->RecursiveRemove(obj);; 6584 }; 6585}; 6586 ; 6587////////////////////////////////////////////////////////////////////////////////; 6588/// Multiply this histogram by a constant c1.; 6589///; 6590/// `this = c1*this`; 6591///; 6592/// Note that both contents and errors (if any) are scaled.; 6593/// This function uses the services of TH1::Add; 6594///; 6595/// IMPORTANT NOTE: Sumw2() is called automatically when scaling.; 6596/// If you are not interested in the histogram statistics you can call; 6597/// Sumw2(kFALSE) or use the option ""nosw2""; 6598///; 6599/// One can scale a histogram such that the bins integral is equal to; 6600/// the normalization parameter via TH1::Scale(Double_t norm), where norm; 6601/// is the desired normalization divided by the integral of the histogram.; 6602///; 6603/// If option contains ""width"" the bin contents and errors are divided; 6604/// by the bin width.; 6605 ; 6606void TH1::Scale(Double_t c1, Option_t *option); 6607{; 6608 ; 6609 TString opt = option; opt.ToLower();; 6610 // store bin errors when scaling since cannot anymore be computed as sqrt(N); 6611 if (!opt.Contains(""nosw2"") && GetSumw2N() == 0) Sumw2();; 6612 if (opt.Contains(""width"")) Add(this, this, c1, -1);; 6613 else {",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:259567,error,errors,259567,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"66/// incremented by w; 667 ; 668Int_t TH3::Fill(const char * namex, Double_t y, Double_t z, Double_t w); 669{; 670 Int_t binx, biny, binz, bin;; 671 fEntries++;; 672 binx = fXaxis.FindBin(namex);; 673 biny = fYaxis.FindBin(y);; 674 binz = fZaxis.FindBin(z);; 675 if (binx < 0 || biny < 0 || binz < 0); 676 return -1;; 677 bin = binx + (fXaxis.GetNbins() + 2) * (biny + (fYaxis.GetNbins() + 2) * binz);; 678 if (!fSumw2.fN && w != 1.0 && !TestBit(TH1::kIsNotW)); 679 Sumw2(); // must be called before AddBinContent; 680 if (fSumw2.fN); 681 fSumw2.fArray[bin] += w * w;; 682 AddBinContent(bin, w);; 683 if (binx == 0 || binx > fXaxis.GetNbins()) {; 684 return -1;; 685 }; 686 if (biny == 0 || biny > fYaxis.GetNbins()) {; 687 if (!GetStatOverflowsBehaviour()); 688 return -1;; 689 }; 690 if (binz == 0 || binz > fZaxis.GetNbins()) {; 691 if (!GetStatOverflowsBehaviour()); 692 return -1;; 693 }; 694 Double_t v = w;; 695 fTsumw += v;; 696 fTsumw2 += v * v;; 697 fTsumwy += v * y;; 698 fTsumwy2 += v * y * y;; 699 fTsumwz += v * z;; 700 fTsumwz2 += v * z * z;; 701 fTsumwyz += v * y * z;; 702 // skip computation for x axis : for only one axis no need to use bit mask; 703 if (!fXaxis.CanExtend() || !fXaxis.IsAlphanumeric()) {; 704 Double_t x = fXaxis.GetBinCenter(binx);; 705 fTsumwx += v * x;; 706 fTsumwx2 += v * x * x;; 707 fTsumwxy += v * x * y;; 708 fTsumwxz += v * x * z;; 709 }; 710 return bin;; 711}; 712 ; 713////////////////////////////////////////////////////////////////////////////////; 714/// Increment cell defined by x,namey,z by a weight w; 715///; 716/// If the weight is not equal to 1, the storage of the sum of squares of; 717/// weights is automatically triggered and the sum of the squares of weights is incremented; 718/// by w^2 in the corresponding cell.; 719/// The function returns the corresponding global bin number which has its content; 720/// incremented by w; 721 ; 722Int_t TH3::Fill(Double_t x, const char *namey, Double_t z, Double_t w); 723{; 724 Int_t binx, biny",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:27037,mask,mask,27037,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['mask'],['mask']
Availability,"663 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5648 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 596 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v618/namespaceROOT.html:19289,avail,available,19289,doc/v618/namespaceROOT.html,https://root.cern,https://root.cern/doc/v618/namespaceROOT.html,1,['avail'],['available']
Availability,67 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97280,error,error,97280,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,67 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80781,error,error,80781,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"67 of file TF1.h. ◆ SetParameters() [1/2]. virtual void TF1::SetParameters ; (; const Double_t * ; params). inlinevirtual . Definition at line 677 of file TF1.h. ◆ SetParameters() [2/2]. virtual void TF1::SetParameters ; (; double ; p0, . double ; p1 = TMath::QuietNaN(), . double ; p2 = TMath::QuietNaN(), . double ; p3 = TMath::QuietNaN(), . double ; p4 = TMath::QuietNaN(), . double ; p5 = TMath::QuietNaN(), . double ; p6 = TMath::QuietNaN(), . double ; p7 = TMath::QuietNaN(), . double ; p8 = TMath::QuietNaN(), . double ; p9 = TMath::QuietNaN(), . double ; p10 = TMath::QuietNaN() . ). inlinevirtual . Set parameter values. ; NaN values will be skipped, meaning that the corresponding parameters will not be changed. ; Definition at line 684 of file TF1.h. ◆ SetParent(). virtual void TF1::SetParent ; (; TObject * ; p = nullptr). inlinevirtual . Definition at line 706 of file TF1.h. ◆ SetParError(). void TF1::SetParError ; (; Int_t ; ipar, . Double_t ; error . ). virtual . Set error for parameter number ipar. ; Definition at line 3479 of file TF1.cxx. ◆ SetParErrors(). void TF1::SetParErrors ; (; const Double_t * ; errors). virtual . Set errors for all active parameters when calling this function, the array errors must have at least fNpar values. ; Definition at line 3490 of file TF1.cxx. ◆ SetParLimits(). void TF1::SetParLimits ; (; Int_t ; ipar, . Double_t ; parmin, . Double_t ; parmax . ). virtual . Set lower and upper limits for parameter ipar. ; The specified limits will be used in a fit operation. Note that when this function is a pre-defined function (e.g. gaus) one needs to use the fit option ""B"" to have the limits used in the fit. See TH1::Fit(TF1*, Option_t *, Option_t *, Double_t, Double_t) for the fitting documentation and the fitting options; To fix a parameter, use TF1::FixParameter ; Definition at line 3507 of file TF1.cxx. ◆ SetParName(). void TF1::SetParName ; (; Int_t ; ipar, . const char * ; name . ). virtual . Set name of parameter number ipar. ; Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:112803,error,error,112803,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,1,['error'],['error']
Availability,"68 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: TMVA_DNN for Classification; : ; : Start of deep neural network training on CPU using MT, nthreads = 4; : ; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 300 ) Batch size = 256 Loss function = C; Layer 0 DENSE Layer: ( Input = 300 , Width = 64 ) Output = ( 1 , 256 , 64 ) Activation Function = Tanh; Layer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:17240,error,error,17240,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability,68 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error found - save the configuration ; : 820 | 8.87738 12.3889 0.0200904 0.00182003 43786.8 0; : 821 Minimum Test error found - save the configuration ; : 821 | 8.4572 12.2134 0.0200973 0.00182161 43774.1 0; : 822 | 8.40042 12.784 0.0200174 0.0017606 43819.3 1; : 823 | 8.60218 12.5837 0.0200326 0.00176535 43794.3 2; : 824 | 8.73942 12.9376 0.0204734 0.00180446 42851.9 3; : 825 Minimum Test error found - save the configuration ; : 825 | 8.34428 12.1043 0.0201737 0.00186372 43692 0; : 826 Minimum Test error found - save the configuration ; : 826 | 8.00332 12.0945 0.0202264 0.00188916 43627.1 0; : 827 Minimum Test error found - save the configuration ; : 827 | 7.99254 11.726 0.0202903 0.00182656 43328.1 0; : 828 | 7.97363 11.7656 0.0202489 0.00176045 43270.2 1; : 829 | 7.98909 11.7293 0.0200352 0.00175475 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:100815,error,error,100815,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"68 ; 669TF1::EAddToList GetGlobalListOption(Option_t * opt); 670{; 671 if (opt == nullptr) return TF1::EAddToList::kDefault;; 672 TString option(opt);; 673 option.ToUpper();; 674 if (option.Contains(""NL"")) return TF1::EAddToList::kNo;; 675 if (option.Contains(""GL"")) return TF1::EAddToList::kAdd;; 676 return TF1::EAddToList::kDefault;; 677}; 678 ; 679bool GetVectorizedOption(Option_t * opt); 680{; 681 if (!opt) return false;; 682 TString option(opt);; 683 option.ToUpper();; 684 if (option.Contains(""VEC"")) return true;; 685 return false;; 686}; 687 ; 688TF1::TF1(const char *name, const char *formula, Double_t xmin, Double_t xmax, Option_t * opt) :; 689////////////////////////////////////////////////////////////////////////////////; 690/// Same constructor as above (for TFormula based function) but passing an option strings; 691/// available options; 692/// VEC - vectorize the formula expressions (not possible for lambda based expressions); 693/// NL - function is not stores in the global list of functions; 694/// GL - function will be always stored in the global list of functions ,; 695/// independently of the global setting of TF1::DefaultAddToGlobalList; 696///////////////////////////////////////////////////////////////////////////////////; 697 TF1(name, formula, xmin, xmax, GetGlobalListOption(opt), GetVectorizedOption(opt) ); 698{}; 699 ; 700////////////////////////////////////////////////////////////////////////////////; 701/// F1 constructor using name of an interpreted function.; 702///; 703/// Creates a function of type C between xmin and xmax.; 704/// name is the name of an interpreted C++ function.; 705/// The function is defined with npar parameters; 706/// fcn must be a function of type:; 707///; 708/// Double_t fcn(Double_t *x, Double_t *params); 709///; 710/// This constructor is called for functions of type C by the C++ interpreter.; 711///; 712/// \warning A function created with this constructor cannot be Cloned.; 713 ; 714TF1::TF1(const char *name, Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:22814,avail,available,22814,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['avail'],['available']
Availability,69.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:96154,error,error,96154,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"6; TGeoManager::ClearAttributesvoid ClearAttributes()Reset all attributes to default ones.Definition TGeoManager.cxx:1455; TGeoManager::fgMaxDaughtersstatic Int_t fgMaxDaughtersMaximum level in geometry.Definition TGeoManager.h:53; TGeoManager::fUsePWNavBool_t fUsePWNavRaytrace mode: 0=normal, 1=pass through, 2=transparent.Definition TGeoManager.h:147; TGeoManager::SetRTmodevoid SetRTmode(Int_t mode)Change raytracing mode.Definition TGeoManager.cxx:3108; TGeoManager::CheckPathBool_t CheckPath(const char *path) constCheck if a geometry path is valid without changing the state of the current navigator.Definition TGeoManager.cxx:1715; TGeoManager::InspectStatevoid InspectState() constInspects path and all flags for the current state.Definition TGeoManager.cxx:2873; TGeoManager::ConvertReflectionsvoid ConvertReflections()Convert all reflections in geometry to normal rotations + reflected shapes.Definition TGeoManager.cxx:1723; TGeoManager::SetVisLevelvoid SetVisLevel(Int_t level=3)set default level down to which visualization is performedDefinition TGeoManager.cxx:2459; TGeoManager::FindNextBoundaryTGeoNode * FindNextBoundary(Double_t stepmax=TGeoShape::Big(), const char *path="""", Bool_t frombdr=kFALSE)Find distance to next boundary and store it in fStep.Definition TGeoManager.cxx:2755; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::MakePhysicalNodeTGeoPhysicalNode * MakePhysicalNode(const char *path=nullptr)Makes a physical node corresponding to a path.Definition TGeoManager.cxx:3506; TGeoManager::CountLevelsvoid CountLevels()Count maximum number of nodes per volume, maximum depth and maximum number of xtru vertices.Definition TGeoManager.cxx:1759; TGeoManager::fMaxThreadsInt_t fMaxThreadsDefinition TGeoManager.h:144; TGeoManager::fIsGeomReadingBool_t fIsGeomReadingDefinition TGeoManager.h:82; TGeoManager",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:192266,down,down,192266,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['down'],['down']
Availability,"6; TGeoManager::ClearAttributesvoid ClearAttributes()Reset all attributes to default ones.Definition TGeoManager.cxx:1455; TGeoManager::fgMaxDaughtersstatic Int_t fgMaxDaughtersMaximum level in geometry.Definition TGeoManager.h:53; TGeoManager::fUsePWNavBool_t fUsePWNavRaytrace mode: 0=normal, 1=pass through, 2=transparent.Definition TGeoManager.h:147; TGeoManager::SetRTmodevoid SetRTmode(Int_t mode)Change raytracing mode.Definition TGeoManager.cxx:3108; TGeoManager::CheckPathBool_t CheckPath(const char *path) constCheck if a geometry path is valid without changing the state of the current navigator.Definition TGeoManager.cxx:1715; TGeoManager::InspectStatevoid InspectState() constInspects path and all flags for the current state.Definition TGeoManager.cxx:2873; TGeoManager::ConvertReflectionsvoid ConvertReflections()Convert all reflections in geometry to normal rotations + reflected shapes.Definition TGeoManager.cxx:1723; TGeoManager::SetVisLevelvoid SetVisLevel(Int_t level=3)set default level down to which visualization is performedDefinition TGeoManager.cxx:2459; TGeoManager::SetMatrixTransformvoid SetMatrixTransform(Bool_t on=kTRUE)Definition TGeoManager.h:398; TGeoManager::FindNextBoundaryTGeoNode * FindNextBoundary(Double_t stepmax=TGeoShape::Big(), const char *path="""", Bool_t frombdr=kFALSE)Find distance to next boundary and store it in fStep.Definition TGeoManager.cxx:2755; TGeoManager::MasterToLocalBombvoid MasterToLocalBomb(const Double_t *master, Double_t *local) constDefinition TGeoManager.h:546; TGeoManager::Importstatic TGeoManager * Import(const char *filename, const char *name="""", Option_t *option="""")static function Import a geometry from a gdml or ROOT fileDefinition TGeoManager.cxx:4096; TGeoManager::MakePhysicalNodeTGeoPhysicalNode * MakePhysicalNode(const char *path=nullptr)Makes a physical node corresponding to a path.Definition TGeoManager.cxx:3506; TGeoManager::CountLevelsvoid CountLevels()Count maximum number of nodes per volume, maximum dept",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8h_source.html:59314,down,down,59314,doc/master/TGeoManager_8h_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8h_source.html,1,['down'],['down']
Availability,"6; TSystem::WorkingDirectoryvirtual const char * WorkingDirectory()Return working directory.Definition TSystem.cxx:871; TSystem::AddStdExceptionHandlervirtual void AddStdExceptionHandler(TStdExceptionHandler *eh)Add an exception handler to list of system exception handlers.Definition TSystem.cxx:611; TSystem::Whichvirtual char * Which(const char *search, const char *file, EAccessMode mode=kFileExists)Find location of file in a search path.Definition TSystem.cxx:1548; TSystem::GetHostByNamevirtual TInetAddress GetHostByName(const char *server)Get Internet Protocol (IP) address of host.Definition TSystem.cxx:2291; TSystem::SetPrognamevirtual void SetProgname(const char *name)Set the application name (from command line, argv[0]) and copy it in gProgName.Definition TSystem.cxx:226; TSystem::SendRawvirtual int SendRaw(int sock, const void *buffer, int length, int flag)Send exactly length bytes from buffer.Definition TSystem.cxx:2409; TSystem::SetFPEMaskvirtual Int_t SetFPEMask(Int_t mask=kDefaultMask)Set which conditions trigger a floating point exception.Definition TSystem.cxx:642; TSystem::fLevelInt_t fLevelDefinition TSystem.h:292; TSystem::GetBuildCompilervirtual const char * GetBuildCompiler() constReturn the build compiler.Definition TSystem.cxx:3883; TSystem::CloseConnectionvirtual void CloseConnection(int sock, Bool_t force=kFALSE)Close socket connection.Definition TSystem.cxx:2390; TSystem::GetLibrariesvirtual const char * GetLibraries(const char *regexp="""", const char *option="""", Bool_t isRegexp=kTRUE)Return a space separated list of loaded shared libraries.Definition TSystem.cxx:2136; TSystem::GetListOfSignalHandlersvirtual TSeqCollection * GetListOfSignalHandlers() constDefinition TSystem.h:379; TSystem::fBuildDirTString fBuildDirDefinition TSystem.h:307; TSystem::SetErrorStrvoid SetErrorStr(const char *errstr)Set the system error string.Definition TSystem.cxx:245; TSystem::RemoveSignalHandlervirtual TSignalHandler * RemoveSignalHandler(TSignalHandler *sh)Rem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:59239,mask,mask,59239,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['mask'],['mask']
Availability,"6; TSystem::WorkingDirectoryvirtual const char * WorkingDirectory()Return working directory.Definition TSystem.cxx:871; TSystem::AddStdExceptionHandlervirtual void AddStdExceptionHandler(TStdExceptionHandler *eh)Add an exception handler to list of system exception handlers.Definition TSystem.cxx:611; TSystem::Whichvirtual char * Which(const char *search, const char *file, EAccessMode mode=kFileExists)Find location of file in a search path.Definition TSystem.cxx:1548; TSystem::GetHostByNamevirtual TInetAddress GetHostByName(const char *server)Get Internet Protocol (IP) address of host.Definition TSystem.cxx:2291; TSystem::SetPrognamevirtual void SetProgname(const char *name)Set the application name (from command line, argv[0]) and copy it in gProgName.Definition TSystem.cxx:226; TSystem::SendRawvirtual int SendRaw(int sock, const void *buffer, int length, int flag)Send exactly length bytes from buffer.Definition TSystem.cxx:2409; TSystem::SetFPEMaskvirtual Int_t SetFPEMask(Int_t mask=kDefaultMask)Set which conditions trigger a floating point exception.Definition TSystem.cxx:642; TSystem::fLevelInt_t fLevelDefinition TSystem.h:292; TSystem::GetBuildCompilervirtual const char * GetBuildCompiler() constReturn the build compiler.Definition TSystem.cxx:3883; TSystem::CloseConnectionvirtual void CloseConnection(int sock, Bool_t force=kFALSE)Close socket connection.Definition TSystem.cxx:2390; TSystem::GetLibrariesvirtual const char * GetLibraries(const char *regexp="""", const char *option="""", Bool_t isRegexp=kTRUE)Return a space separated list of loaded shared libraries.Definition TSystem.cxx:2136; TSystem::fBuildDirTString fBuildDirDefinition TSystem.h:307; TSystem::SetErrorStrvoid SetErrorStr(const char *errstr)Set the system error string.Definition TSystem.cxx:245; TSystem::RemoveSignalHandlervirtual TSignalHandler * RemoveSignalHandler(TSignalHandler *sh)Remove a signal handler from list of signal handlers.Definition TSystem.cxx:542; TSystem::SetSoExtvirtual void SetSoE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:190523,mask,mask,190523,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['mask'],['mask']
Availability,"6] - build failure with mysql 8.3; [#14372] - File with mtime equal to 0 are ignored by Cling.; [#14333] - “Empty plot” for df014_CSVDataSource.C; [#14331] - Unexpected behaviour when using the Project3D function to make a TH2 from a TH3; [#14329] - [RF] RDataFrameToRooFit - Clarification on returned object; [#14324] - Compatibility Issue with thisroot.sh and zsh; [#14320] - [RF] Wrong analytic integrals when using Gaussians with sigma depending on the observable; [#14303] - Test failure with nbconvert-7.14; [#14302] - The command “root –notebook” is not allowed on Windows 11; [#14277] - Cling triggers a huge number of openat calls when loading libraries; [#14263] - [tmva] When using DNN_USE_CBLAS, CMakeLists should link publicly to gsl instead of privately; [#14256] - TAxis::GetTicks and TAxis::SetTicks are inconsistent. Significantly so.; [#14244] - String comparison operators defined in TString.h should be defined as constexpr; [#14229] - [6.30] root-config –git-revision broken; [#14225] - [RF] Segmentation fault in ROOT 6.30 workspace creation; [#14223] - Extremely long startup time when loading dictionaries with pyroot; [#14219] - [cling] Use deduction guides for llvm::ArrayRef; [#14211] - Implement value printing for std::source_location; [#14205] - [cling] Replace llvm::Optional and llvm::None with std::optional; [#14199] - Memory hoarding triggered by the TPluginManager; [#14188] - cmake find_package ROOT 6.30 broken: it requires nlohmann-json; [#14163] - cmake find_package ROOT broken with 6.30, nlohmann and vdt are builtin but not found; [#14162] - RooFFTConvPdf is not working for ROOT 6.30/02; [#14157] - Minuit2 standalone build: StandAlone.cmake looks for the wrong path for VERSION_FILE; [#14113] - The find_package(root) command fails when using Root installed via Homebrew.; [#14101] - Missing documentation for RDataSetSpec; [#14097] - Cleaner stack traces in python; [#14085] - thisroot.sh does not recognize bash when running in qemu-x86_64; [#14084] - [n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:29918,fault,fault,29918,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['fault'],['fault']
Availability,"6is zero no matter what the real derivative; 147\f$\partial F / \partial P_{\mathrm{ext}}\f$ is.; 148 ; 149\f[; 150\frac{\partial F}{\partial P_{\mathrm{int}}} =; 151\frac{\partial F}{\partial P_{\mathrm{ext}}}; 152\frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; 153\frac{\partial F}{\partial P_{\mathrm{ext}}} = 0; 154\f]; 155 ; 156#### Getting the right parameter errors with limits.; 157 ; 158In the best case, where the minimum is far from any limits, MINUIT will; 159correctly transform the error matrix, and the parameter errors it reports; 160should be accurate and very close to those you would have got without; 161limits. In other cases (which should be more common, since otherwise you; 162wouldn't need limits), the very meaning of parameter errors becomes; 163problematic. Mathematically, since the limit is an absolute constraint on; 164the parameter, a parameter at its limit has no error, at least in one; 165direction. The error matrix, which can assign only symmetric errors, then; 166becomes essentially meaningless.; 167 ; 168### Interpretation of Parameter Errors:; 169 ; 170There are two kinds of problems that can arise: the reliability of; 171MINUIT's error estimates, and their statistical interpretation, assuming; 172they are accurate.; 173 ; 174### Statistical interpretation:; 175 ; 176For discussion of basic concepts, such as the meaning of the elements of; 177the error matrix, or setting of exact confidence levels see:; 178 ; 179 1. F.James.; 180 Determining the statistical Significance of experimental Results.; 181 Technical Report DD/81/02 and CERN Report 81-03, CERN, 1981.; 182 ; 183 2. W.T.Eadie, D.Drijard, F.James, M.Roos, and B.Sadoulet.; 184 Statistical Methods in Experimental Physics.; 185 North-Holland, 1971.; 186 ; 187### Reliability of MINUIT error estimates.; 188 ; 189MINUIT always carries around its own current estimates of the parameter; 190errors, which it will print out on request, no matter how accurate they; 191are at any g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:8089,error,error,8089,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,7 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80328,error,error,80328,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"7 ; 3098const TString& TROOT::GetMacroDir() {; 3099#ifdef ROOTMACRODIR; 3100 if (IgnorePrefix()) {; 3101#endif; 3102 static TString rootmacrodir;; 3103 if (rootmacrodir.IsNull()) {; 3104 rootmacrodir = ""macros"";; 3105 gSystem->PrependPathName(GetRootSys(), rootmacrodir);; 3106 }; 3107 return rootmacrodir;; 3108#ifdef ROOTMACRODIR; 3109 } else {; 3110 const static TString rootmacrodir = ROOTMACRODIR;; 3111 return rootmacrodir;; 3112 }; 3113#endif; 3114}; 3115 ; 3116////////////////////////////////////////////////////////////////////////////////; 3117/// Get the tutorials directory in the installation. Static utility function.; 3118 ; 3119const TString& TROOT::GetTutorialDir() {; 3120#ifdef ROOTTUTDIR; 3121 if (IgnorePrefix()) {; 3122#endif; 3123 static TString roottutdir;; 3124 if (roottutdir.IsNull()) {; 3125 roottutdir = ""tutorials"";; 3126 gSystem->PrependPathName(GetRootSys(), roottutdir);; 3127 }; 3128 return roottutdir;; 3129#ifdef ROOTTUTDIR; 3130 } else {; 3131 const static TString roottutdir = ROOTTUTDIR;; 3132 return roottutdir;; 3133 }; 3134#endif; 3135}; 3136 ; 3137////////////////////////////////////////////////////////////////////////////////; 3138/// Shut down ROOT.; 3139 ; 3140void TROOT::ShutDown(); 3141{; 3142 if (gROOT); 3143 gROOT->EndOfProcessCleanups();; 3144 else if (gInterpreter); 3145 gInterpreter->ShutDown();; 3146}; 3147 ; 3148////////////////////////////////////////////////////////////////////////////////; 3149/// Get the source directory in the installation. Static utility function.; 3150 ; 3151const TString& TROOT::GetSourceDir() {; 3152#ifdef ROOTSRCDIR; 3153 if (IgnorePrefix()) {; 3154#endif; 3155 static TString rootsrcdir;; 3156 if (rootsrcdir.IsNull()) {; 3157 rootsrcdir = ""src"";; 3158 gSystem->PrependPathName(GetRootSys(), rootsrcdir);; 3159 }; 3160 return rootsrcdir;; 3161#ifdef ROOTSRCDIR; 3162 } else {; 3163 const static TString rootsrcdir = ROOTSRCDIR;; 3164 return rootsrcdir;; 3165 }; 3166#endif; 3167}; 3168 ; 3169//////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:118647,down,down,118647,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,1,['down'],['down']
Availability,"7 ;  ; namespace  ROOT::Internal;  . Macros; #define R__ASSERT(e);  Checks condition e and reports a fatal error if it's false. ;  ; #define R__CHECK(e);  Checks condition e and reports a warning message if it's false. ;  . Typedefs; typedef void(* ErrorHandlerFunc_t) (int level, Bool_t abort, const char *location, const char *msg);  ; using ROOT::Internal::ErrorSystemMsgHandlerFunc_t = std::function< const char *()>;  Retrieves the error string associated with the last system error. ;  . Functions; void AbstractMethod (const char *method);  This function can be used in abstract base classes in case one does not want to make the class a ""real"" (in C++ sense) ABC. ;  ; void Break (const char *location, const char *msgfmt,...);  Use this function in case an error occurred. ;  ; void DefaultErrorHandler (int level, Bool_t abort, const char *location, const char *msg);  The default error handler function. ;  ; void Error (const char *location, const char *msgfmt,...);  Use this function in case an error occurred. ;  ; void ErrorHandler (int level, const char *location, const char *fmt, std::va_list va);  General error handler function. It calls the user set error handler. ;  ; void Fatal (const char *location, const char *msgfmt,...);  Use this function in case of a fatal error. It will abort the program. ;  ; ErrorHandlerFunc_t GetErrorHandler ();  Returns the current error handler function. ;  ; ErrorSystemMsgHandlerFunc_t ROOT::Internal::GetErrorSystemMsgHandler ();  ; void Info (const char *location, const char *msgfmt,...);  Use this function for informational messages. ;  ; void MayNotUse (const char *method);  This function can be used in classes that should override a certain function, but in the inherited class the function makes no sense. ;  ; void ROOT::Internal::MinimalErrorHandler (Int_t level, Bool_t abort_bool, const char *location, const char *msg);  A very simple error handler that is usually replaced by the TROOT default error handler. ;  ; void Obsole",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8h.html:1660,error,error,1660,doc/master/TError_8h.html,https://root.cern,https://root.cern/doc/master/TError_8h.html,1,['error'],['error']
Availability,"7 Double_t e0,e1,c12;; 498 if (h1->InheritsFrom(TProfile::Class())) {; 499 cu1 = p1->GetW();; 500 er1 = p1->GetW2();; 501 en1 = p1->GetB();; 502 }; 503 Double_t c0,c1,w,z,x;; 504 for (bin=0;bin<=nbinsx+1;bin++) {; 505 c0 = fArray[bin];; 506 if (cu1) c1 = cu1[bin];; 507 else c1 = h1->GetBinContent(bin);; 508 if (c1) w = c0/c1;; 509 else w = 0;; 510 fArray[bin] = w;; 511 z = TMath::Abs(w);; 512 x = fXaxis.GetBinCenter(bin);; 513 fEntries++;; 514 fTsumw += z;; 515 fTsumw2 += z*z;; 516 fTsumwx += z*x;; 517 fTsumwx2 += z*x*x;; 518 fTsumwy += z*c1;; 519 fTsumwx2 += z*c1*c1;; 520 e0 = fSumw2.fArray[bin];; 521 if (er1) e1 = er1[bin];; 522 else {e1 = h1->GetBinError(bin); e1*=e1;}; 523 c12= c1*c1;; 524 if (!c1) fSumw2.fArray[bin] = 0;; 525 else fSumw2.fArray[bin] = (e0*c1*c1 + e1*c0*c0)/(c12*c12);; 526 if (!en1) continue;; 527 if (!en1[bin]) fBinEntries.fArray[bin] = 0;; 528 else fBinEntries.fArray[bin] /= en1[bin];; 529 }; 530 // maintaining the correct sum of weights square is not supported when dividing; 531 // bin error resulting from division of profile needs to be checked; 532 if (fBinSumw2.fN) {; 533 Warning(""Divide"",""Cannot preserve during the division of profiles the sum of bin weight square"");; 534 fBinSumw2 = TArrayD();; 535 }; 536 ; 537 return kTRUE;; 538}; 539 ; 540////////////////////////////////////////////////////////////////////////////////; 541/// Replace contents of this profile by the division of h1 by h2.; 542///; 543/// `this = c1*h1/(c2*h2)`; 544///; 545/// The function return kFALSE if the divide operation failed; 546 ; 547Bool_t TProfile::Divide(const TH1 *h1, const TH1 *h2, Double_t c1, Double_t c2, Option_t *option); 548{; 549 TString opt = option;; 550 opt.ToLower();; 551 Bool_t binomial = kFALSE;; 552 if (opt.Contains(""b"")) binomial = kTRUE;; 553 if (!h1 || !h2) {; 554 Error(""Divide"",""Attempt to divide a non-existing profile"");; 555 return kFALSE;; 556 }; 557 if (!h1->InheritsFrom(TProfile::Class())) {; 558 Error(""Divide"",""Attempt to divide a non-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:20280,error,error,20280,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['error'],['error']
Availability,"7 fitOption.W1 = 0; // does not make sense to have errors=1 in Pearson chi2 fits; 738 }; 739 }; 740 ; 741 // specific likelihood fit options; 742 if (fitOption.Like == 1) {; 743 //if (opt.Contains(""LL"")) fitOption.Like = 2;; 744 if (opt.Contains(""W"")){ fitOption.Like = 2; fitOption.W1=0;}// (weighted likelihood); 745 if (opt.Contains(""MULTI"")) {; 746 if (fitOption.Like == 2) fitOption.Like = 6; // weighted multinomial; 747 else fitOption.Like = 4; // multinomial likelihood fit instead of Poisson; 748 opt.ReplaceAll(""MULTI"","""");; 749 }; 750 // give precedence for likelihood options; 751 if (fitOption.Chi2 || fitOption.PChi2 ); 752 Warning(""Fit"",""Cannot use P or X option in combination of L. Ignore the chi2 option and perform a likelihood fit"");; 753 }; 754 }; 755 // specific Graph options (need to be parsed before); 756 else if (type == EFitObjectType::kGraph) {; 757 opt.ReplaceAll(""ROB"", ""H"");; 758 opt.ReplaceAll(""EX0"", ""T"");; 759 ; 760 //for robust fitting, see if # of good points is defined; 761 // decode parameters for robust fitting; 762 Double_t h=0;; 763 if (opt.Contains(""H=0."")) {; 764 int start = opt.Index(""H=0."");; 765 int numpos = start + strlen(""H=0."");; 766 int numlen = 0;; 767 int len = opt.Length();; 768 while( (numpos+numlen<len) && isdigit(opt[numpos+numlen]) ) numlen++;; 769 TString num = opt(numpos,numlen);; 770 opt.Remove(start+strlen(""H""),strlen(""=0."")+numlen);; 771 h = atof(num.Data());; 772 h*=TMath::Power(10, -numlen);; 773 }; 774 ; 775 if (opt.Contains(""H"")) { fitOption.Robust = 1; fitOption.hRobust = h; }; 776 if (opt.Contains(""T"")) fitOption.NoErrX = 1; // no error in X; 777 if (opt.Contains(""W"")) fitOption.W1 = 1; // ignorer all point errors when fitting; 778 }; 779 ; 780 if (opt.Contains(""U"")) {; 781 // user option can work only when not running in multiple threads; 782 if (gGlobalMutex || !ROOT::IsImplicitMTEnabled()) {; 783 fitOption.User = 1;; 784 } else {; 785 Warning(""FitOptionsMake"",""Cannot use User (U) fit option when running in mul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:28130,robust,robust,28130,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,2,['robust'],['robust']
Availability,"7 gInterpreter->SetClassInfo(this, kFALSE, silent); // sets fClassInfo pointer; 1518 if (fClassInfo) {; 1519 // This should be moved out of GetCheckSum itself however the last time; 1520 // we tried this cause problem, in particular in the end-of-process operation.; 1521 // fCheckSum = GetCheckSum(kLatestCheckSum);; 1522 } else {; 1523 if (!fClassInfo) {; 1524 if (IsZombie()) {; 1525 TClass::RemoveClass(this);; 1526 return;; 1527 }; 1528 }; 1529 }; 1530 }; 1531 }; 1532 if (!silent && (!fClassInfo && !fCanLoadClassInfo) && !isStl && !TClassEdit::IsArtificial(fName) &&; 1533 !TClassEdit::IsInterpreterDetail(fName.Data()) ) {; 1534 if (fState == kHasTClassInit) {; 1535 if (fImplFileLine == -1 && fClassVersion == 0) {; 1536 // We have a 'transient' class with a ClassDefInline and apparently no interpreter; 1537 // information. Since it is transient, it is more than likely that the lack; 1538 // will be harmles.; 1539 } else {; 1540 ::Error(""TClass::Init"", ""no interpreter information for class %s is available even though it has a TClass ""; 1541 ""initialization routine."",; 1542 fName.Data());; 1543 }; 1544 } else {; 1545 const bool ispairbase = TClassEdit::IsStdPairBase(fName.Data()) && !IsFromRootCling();; 1546 if (!ispairbase); 1547 ::Warning(""TClass::Init"", ""no dictionary for class %s is available"", fName.Data());; 1548 }; 1549 }; 1550 ; 1551 fgClassCount++;; 1552 SetUniqueID(fgClassCount);; 1553 ; 1554 // Make the typedef-expanded -> original hash table entries.; 1555 // There may be several entries for any given key.; 1556 // We only make entries if the typedef-expanded name; 1557 // is different from the original name.; 1558 TString resolvedThis;; 1559 if (!givenInfo && strchr (name, '<')) {; 1560 if ( fName != name) {; 1561 if (!fgClassTypedefHash) {; 1562 fgClassTypedefHash = new THashTable (100, 5);; 1563 fgClassTypedefHash->SetOwner (kTRUE);; 1564 }; 1565 ; 1566 fgClassTypedefHash->Add (new TNameMapNode (name, fName));; 1567 SetBit (kHasNameMapNode);; 1568 ; 156",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:59677,avail,available,59677,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['avail'],['available']
Availability,"7 long long fInitialFatalErrors = 0;; 268 ; 269public:; 270 /// Construct the scoped count given a counter (e.g. a channel or RLogManager).; 271 /// The counter's lifetime must exceed the lifetime of this object!; 272 explicit RLogScopedDiagCount(RLogDiagCount &cnt); 273 : fCounter(&cnt), fInitialWarnings(cnt.GetNumWarnings()), fInitialErrors(cnt.GetNumErrors()),; 274 fInitialFatalErrors(cnt.GetNumFatalErrors()); 275 {; 276 }; 277 ; 278 /// Construct the scoped count for any diagnostic, whatever its channel.; 279 RLogScopedDiagCount() : RLogScopedDiagCount(RLogManager::Get()) {}; 280 ; 281 /// Get the number of warnings that the RLogDiagCount has emitted since construction of *this.; 282 long long GetAccumulatedWarnings() const { return fCounter->GetNumWarnings() - fInitialWarnings; }; 283 ; 284 /// Get the number of errors that the RLogDiagCount has emitted since construction of *this.; 285 long long GetAccumulatedErrors() const { return fCounter->GetNumErrors() - fInitialErrors; }; 286 ; 287 /// Get the number of errors that the RLogDiagCount has emitted since construction of *this.; 288 long long GetAccumulatedFatalErrors() const { return fCounter->GetNumFatalErrors() - fInitialFatalErrors; }; 289 ; 290 /// Whether the RLogDiagCount has emitted a warnings since construction time of *this.; 291 bool HasWarningOccurred() const { return GetAccumulatedWarnings(); }; 292 ; 293 /// Whether the RLogDiagCount has emitted an error (fatal or not) since construction time of *this.; 294 bool HasErrorOccurred() const { return GetAccumulatedErrors() + GetAccumulatedFatalErrors(); }; 295 ; 296 /// Whether the RLogDiagCount has emitted an error or a warning since construction time of *this.; 297 bool HasErrorOrWarningOccurred() const { return HasWarningOccurred() || HasErrorOccurred(); }; 298};; 299 ; 300namespace Internal {; 301 ; 302inline RLogChannel &GetChannelOrManager(); 303{; 304 return RLogManager::Get();; 305}; 306inline RLogChannel &GetChannelOrManager(RLogChannel &cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx_source.html:10548,error,errors,10548,doc/master/RLogger_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx_source.html,1,['error'],['errors']
Availability,"7 } else {; 788 memmove(&fExL[obegin], &fExL[ibegin], n);; 789 memmove(&fExH[obegin], &fExH[ibegin], n);; 790 memmove(&fEyLSum[obegin], &fEyLSum[ibegin], n);; 791 memmove(&fEyHSum[obegin], &fEyHSum[ibegin], n);; 792 }; 793 ; 794 return kTRUE;; 795 } else; 796 return kFALSE;; 797}; 798 ; 799////////////////////////////////////////////////////////////////////////////////; 800/// Set zero values for point arrays in the range `[begin, end]`.; 801 ; 802void TGraphMultiErrors::FillZero(Int_t begin, Int_t end, Bool_t from_ctor); 803{; 804 if (!from_ctor); 805 TGraph::FillZero(begin, end, from_ctor);; 806 ; 807 Int_t n = (end - begin) * sizeof(Double_t);; 808 memset(fExL + begin, 0, n);; 809 memset(fExH + begin, 0, n);; 810 memset(fEyLSum + begin, 0, n);; 811 memset(fEyHSum + begin, 0, n);; 812 ; 813 for (Int_t j = 0; j < fNYErrors; j++) {; 814 memset(fEyL[j].GetArray() + begin, 0, n);; 815 memset(fEyH[j].GetArray() + begin, 0, n);; 816 }; 817}; 818 ; 819////////////////////////////////////////////////////////////////////////////////; 820/// Recalculates the summed y error arrays.; 821 ; 822void TGraphMultiErrors::CalcYErrorsSum() const; 823{; 824 if (!fEyLSum); 825 fEyLSum = new Double_t[fNpoints];; 826 if (!fEyHSum); 827 fEyHSum = new Double_t[fNpoints];; 828 ; 829 for (Int_t i = 0; i < fNpoints; i++) {; 830 fEyLSum[i] = GetErrorYlow(i);; 831 fEyHSum[i] = GetErrorYhigh(i);; 832 }; 833}; 834 ; 835////////////////////////////////////////////////////////////////////////////////; 836/// Protected function to perform the merge operation of a graph with multiple asymmetric errors.; 837 ; 838Bool_t TGraphMultiErrors::DoMerge(const TGraph *tg); 839{; 840 if (tg->GetN() == 0); 841 return kFALSE;; 842 ; 843 if (tg->IsA() == TGraphMultiErrors::Class()) {; 844 auto tgme = (TGraphMultiErrors *)tg;; 845 ; 846 for (Int_t i = 0; i < tgme->GetN(); i++) {; 847 Int_t ipoint = GetN();; 848 Double_t x, y;; 849 tgme->GetPoint(i, x, y);; 850 SetPoint(ipoint, x, y);; 851 SetPointEX(ipoint, tgme-",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:28168,error,error,28168,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability,"7 }; 498 SetName(name);; 499 SetTitle(name);; 500 }; 501 SetReadLeavesPtr();; 502 SetFillLeavesPtr();; 503 return;; 504 } else if (element->GetClassPointer() == TClonesArray::Class()) {; 505 // -- We are a TClonesArray element.; 506 bool ispointer = element->IsaPointer();; 507 TClonesArray *clones;; 508 if (ispointer) {; 509 char **ppointer = (char**)(pointer);; 510 clones = (TClonesArray*)(*ppointer);; 511 } else {; 512 clones = (TClonesArray*)pointer;; 513 }; 514 // basket->DeleteEntryOffset(); //entryoffset not required for the clonesarray counter; 515 fEntryOffsetLen = 0;; 516 // ===> Create a leafcount; 517 TLeaf* leaf = new TLeafElement(this, name, fID, fStreamerType);; 518 fNleaves = 1;; 519 fLeaves.Add(leaf);; 520 fTree->GetListOfLeaves()->Add(leaf);; 521 if (!clones) {; 522 SetFillLeavesPtr();; 523 return;; 524 }; 525 TClass* clOfClones = clones->GetClass();; 526 if (!clOfClones) {; 527 SetReadLeavesPtr();; 528 SetFillLeavesPtr();; 529 return;; 530 }; 531 fType = 3;; 532 // ===> create sub branches for each data member of a TClonesArray; 533 //check that the contained objects class name is part of the element title; 534 //This name is mandatory when reading the Tree later on and; 535 //the parent class with the pointer to the TClonesArray is not available.; 536 fClonesName = clOfClones->GetName();; 537 fClonesClass = clOfClones;; 538 TString aname;; 539 aname.Form("" (%s)"", clOfClones->GetName());; 540 TString atitle = element->GetTitle();; 541 if (!atitle.Contains(aname)) {; 542 atitle += aname;; 543 element->SetTitle(atitle.Data());; 544 }; 545 TString branchname( name );; 546 if (branchname.EndsWith(""."")); 547 branchname.Remove(branchname.Length()-1);; 548 branchname += ""_"";; 549 SetTitle(branchname);; 550 leaf->SetName(branchname);; 551 leaf->SetTitle(branchname);; 552 leaf->SetRange(true);; 553 Unroll(name, clOfClones, clOfClones, pointer, basketsize, splitlevel+splitSTLP, 31);; 554 BuildTitle(name);; 555 SetReadLeavesPtr();; 556 SetFillLeavesPtr();; 557",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:19197,avail,available,19197,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['avail'],['available']
Availability,"7#endif; 10098 {; 10099 /* Without on-the-fly compression, we know the content-length; 10100 * and we can use ranges (with on-the-fly compression we cannot).; 10101 * So we send these response headers only in this case. */; 10102 char len[32];; 10103 int trunc = 0;; 10104 mg_snprintf(conn, &trunc, len, sizeof(len), ""%"" INT64_FMT, cl);; 10105 ; 10106 if (!trunc) {; 10107 mg_response_header_add(conn, ""Content-Length"", len, -1);; 10108 }; 10109 ; 10110 mg_response_header_add(conn, ""Accept-Ranges"", ""bytes"", -1);; 10111 }; 10112 ; 10113 if (encoding) {; 10114 mg_response_header_add(conn, ""Content-Encoding"", encoding, -1);; 10115 }; 10116 if (range[0] != 0) {; 10117 mg_response_header_add(conn, ""Content-Range"", range, -1);; 10118 }; 10119 ; 10120 /* The code above does not add any header starting with X- to make; 10121 * sure no one of the additional_headers is included twice */; 10122 if ((additional_headers != NULL) && (*additional_headers != 0)) {; 10123 mg_response_header_add_lines(conn, additional_headers);; 10124 }; 10125 ; 10126 /* Send all headers */; 10127 mg_response_header_send(conn);; 10128 ; 10129 if (!is_head_request) {; 10130#if defined(USE_ZLIB); 10131 if (allow_on_the_fly_compression) {; 10132 /* Compress and send */; 10133 send_compressed_data(conn, filep);; 10134 } else; 10135#endif; 10136 {; 10137 /* Send file directly */; 10138 send_file_data(conn, filep, r1, cl);; 10139 }; 10140 }; 10141 (void)mg_fclose(&filep->access); /* ignore error on read only file */; 10142}; 10143 ; 10144 ; 10145int; 10146mg_send_file_body(struct mg_connection *conn, const char *path); 10147{; 10148 struct mg_file file = STRUCT_FILE_INITIALIZER;; 10149 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, &file)) {; 10150 return -1;; 10151 }; 10152 fclose_on_exec(&file.access, conn);; 10153 send_file_data(conn, &file, 0, INT64_MAX);; 10154 (void)mg_fclose(&file.access); /* Ignore errors for readonly files */; 10155 return 0; /* >= 0 for OK */; 10156}; 10157#endif /* NO_FILESYSTEMS */;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:291587,error,error,291587,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"7, ; prevFCN = 28.97321652 m=1.722, ; prevFCN = 28.97256819 m=1.724, p0=0.0004103, ; prevFCN = 28.97321664 p0=0.0003662, ; prevFCN = 28.97257031 p0=0.000388, s=1.279, ; prevFCN = 28.97432524 s=1.273, ; prevFCN = 28.97145596 s=1.282, ; prevFCN = 28.97575564 s=1.269, ; prevFCN = 28.97003607 f=0.2452, m=1.663, p0=5.498e-07, s=0.9876, ; prevFCN = 28.8608997 f=0.2274, m=1.628, p0=0.0001029, s=0.8218, ; prevFCN = 28.87647974 f=0.241, m=1.655, p0=3.204e-06, s=0.9491, ; prevFCN = 28.85685477 f=0.2418, ; prevFCN = 28.85692699 f=0.2403, ; prevFCN = 28.85679737 f=0.241, m=1.659, ; prevFCN = 28.85436009 m=1.651, ; prevFCN = 28.8593705 m=1.655, p0=1.215e-06, ; prevFCN = 28.85682558 p0=6.138e-06, ; prevFCN = 28.85689784 p0=3.204e-06, s=0.9556, ; prevFCN = 28.85804684 s=0.9426, ; prevFCN = 28.85571545 s=0.9524, ; prevFCN = 28.85746237 s=0.9458, ; prevFCN = 28.85626117 f=0.2171, m=1.753, p0=0.0002379, s=0.6877, ; prevFCN = 28.6750677 f=0.1311, m=2.143, p0=0.004887, s=-0.3611, RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (31.8407) to force MIGRAD to back out of this region. Error log follows.; Parameter values: f=0.131146 m=2.14309 p0=0.00488743 s=-0.361096; RooAddPdf::model[ f * g_over_g_Int[x] + [%] * p_over_p_Int[x] ]; getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05), !coefficients=(f = 0.131146); getLogVal() top-level p.d.f evaluates to NaN @ !refCoefNorm=(x = 0), !pdfs=(g_over_g_Int[x] = nan,p_over_p_Int[x] = 0.05)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf506__msgservice_8C.html:11860,error,error,11860,doc/master/rf506__msgservice_8C.html,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8C.html,2,['error'],['error']
Availability,7.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88310,error,error,88310,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"7/// or kTRUE in case of error.; 1748 ; 1749Bool_t TUnixSystem::ExpandPathName(TString &path); 1750{; 1751 const char *p, *patbuf = (const char *)path;; 1752 ; 1753 // skip leading blanks; 1754 while (*patbuf == ' '); 1755 patbuf++;; 1756 ; 1757 // any shell meta characters ?; 1758 for (p = patbuf; *p; p++); 1759 if (strchr(kShellMeta, *p)); 1760 goto expand;; 1761 ; 1762 return kFALSE;; 1763 ; 1764expand:; 1765 // replace $(XXX) by $XXX; 1766 path.ReplaceAll(""$("",""$"");; 1767 path.ReplaceAll("")"","""");; 1768 ; 1769 return ExpandFileName(path);; 1770}; 1771#endif; 1772 ; 1773#ifdef G__OLDEXPAND; 1774////////////////////////////////////////////////////////////////////////////////; 1775/// Expand a pathname getting rid of special shell characters like ~.$, etc.; 1776/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1777/// environment variables in a pathname. If compatibility is not an issue; 1778/// you can use on Unix directly $XXX. Returns kFALSE in case of success; 1779/// or kTRUE in case of error.; 1780 ; 1781Bool_t TUnixSystem::ExpandPathName(TString &patbuf0); 1782{; 1783 const char *patbuf = (const char *)patbuf0;; 1784 const char *hd, *p;; 1785 // char cmd[kMAXPATHLEN],; 1786 char stuffedPat[kMAXPATHLEN], name[70];; 1787 char *q;; 1788 FILE *pf;; 1789 int ch;; 1790 ; 1791 // skip leading blanks; 1792 while (*patbuf == ' '); 1793 patbuf++;; 1794 ; 1795 // any shell meta characters ?; 1796 for (p = patbuf; *p; p++); 1797 if (strchr(kShellMeta, *p)); 1798 goto needshell;; 1799 ; 1800 return kFALSE;; 1801 ; 1802needshell:; 1803 // replace $(XXX) by $XXX; 1804 patbuf0.ReplaceAll(""$("",""$"");; 1805 patbuf0.ReplaceAll("")"","""");; 1806 ; 1807 // escape shell quote characters; 1808 EscChar(patbuf, stuffedPat, sizeof(stuffedPat), (char*)kShellStuff, kShellEscape);; 1809 ; 1810 TString cmd(""echo "");; 1811 ; 1812 // emulate csh -> popen executes sh; 1813 if (stuffedPat[0] == '~') {; 1814 if (stuffedPat[1] != '\0' && stuffedPat[1] != '/') {; 1815 // extrac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:54925,error,error,54925,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,70.563) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.867793 a1=-0.296045 mean=5.10353 nbkg=164.822 nsig=173.566 sig1frac=0.899431; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 820; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 810; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 800; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 790; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 780; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 770; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 760; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-915.472) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.807508 a1=-0.34963 mean=5.09438 nbkg=142.436 nsig=172.312 sig1frac=0.886183; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 750; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-885.867) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.7962 a1=-0.414289 mean=5.07605 nbkg=135.514 nsig=167.164 sig1frac=0.927781; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-848.597) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.577138 a1=-0.518554 mean=5.09299 nbkg=144.203 nsig=156.938 sig1frac=0.54541; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 740; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 730; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 720; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 710; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 700,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:13895,error,errors,13895,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability,71.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91861,error,error,91861,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"711; TGraphErrors::SetPointErrorvirtual void SetPointError(Double_t ex, Double_t ey)Set ex and ey values for point pointed by the mouse.Definition TGraphErrors.cxx:769; TGraphErrors::DoMergeBool_t DoMerge(const TGraph *g) overrideProtected function to perform the merge operation of a graph with errors.Definition TGraphErrors.cxx:573; TGraphErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraphErrors.h:70; TGraphErrors::AllocateDouble_t ** Allocate(Int_t size) overrideAllocate internal data structures for newsize points.Definition TGraphErrors.h:81; TGraphErrors::SwapPointsvoid SwapPoints(Int_t pos1, Int_t pos2) overrideSwap points.Definition TGraphErrors.cxx:856; TGraphErrors::ApplyXvirtual void ApplyX(TF1 *f)Apply function to all the data points .Definition TGraphErrors.cxx:426; TGraphErrors::GetErrorXhighDouble_t GetErrorXhigh(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:635; TGraphErrors::GetErrorYlowDouble_t GetErrorYlow(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:671; TGraphErrors::GetErrorYhighDouble_t GetErrorYhigh(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:659; TGraphErrors::operator=TGraphErrors & operator=(const TGraphErrors &gr)TGraphErrors assignment operator.Definition TGraphErrors.cxx:184; TGraphErrors::CopyPointsBool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy errors from fEX and fEY to arrays[0] and arrays[1] or to fEX and fEY if arrays == 0 and ibegin !...Definition TGraphErrors.cxx:532; TGraphErrors::MergeInt_t Merge(TCollection *list) overrideAdds all graphs with errors from the collection to this graph.Definition TGraphErrors.cxx:682; TGraphErrors::CopyAndReleasevoid CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy and release.Definition TGraphErrors.cxx:510; TGraphErrors::TGraphErrorsTGraphErrors()TGraphErrors d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8h_source.html:9199,error,error,9199,doc/master/TGraphErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8h_source.html,1,['error'],['error']
Availability,"713/// with coming from the same parent distribution, using the Kolmogorov test.; 714/// That is, it is used to compare two experimental distributions of unbinned data.; 715///; 716/// ### Input:; 717/// a,b: One-dimensional arrays of length na, nb, respectively.; 718/// The elements of a and b must be given in ascending order.; 719/// option is a character string to specify options; 720/// ""D"" Put out a line of ""Debug"" printout; 721/// ""M"" Return the Maximum Kolmogorov distance instead of prob; 722///; 723/// ### Output:; 724/// The returned value prob is a calculated confidence level which gives a; 725/// statistical test for compatibility of a and b.; 726/// Values of prob close to zero are taken as indicating a small probability; 727/// of compatibility. For two point sets drawn randomly from the same parent; 728/// distribution, the value of prob should be uniformly distributed between; 729/// zero and one.; 730/// in case of error the function return -1; 731/// If the 2 sets have a different number of points, the minimum of; 732/// the two sets is used.; 733///; 734/// ### Method:; 735/// The Kolmogorov test is used. The test statistic is the maximum deviation; 736/// between the two integrated distribution functions, multiplied by the; 737/// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; 738///; 739/// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); 740/// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; 741/// Statistical Methods in Experimental Physics, (North-Holland,; 742/// Amsterdam 1971) 269-271); 743///; 744/// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); 745///; 746/// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; 747/// over the two sorted arrays a and b representing empirical distribution; 748/// functions. The for-loop handles 3 cases: when the next points to be; 749/// evaluated satisfy a>b, a<b, or a=b:; 750///; 751/// ~~~ {.cpp}; 752/// for (Int_t i=0;i<na+nb;i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMath_8cxx_source.html:23872,error,error,23872,doc/master/TMath_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMath_8cxx_source.html,1,['error'],['error']
Availability,"7136 fTsumwx = 0;; 7137 fTsumwx2 = 0;; 7138 fEntries = 0;; 7139 ; 7140 if (opt == ""ICES"") return;; 7141 ; 7142 ; 7143 TObject *stats = fFunctions->FindObject(""stats"");; 7144 fFunctions->Remove(stats);; 7145 //special logic to support the case where the same object is; 7146 //added multiple times in fFunctions.; 7147 //This case happens when the same object is added with different; 7148 //drawing modes; 7149 TObject *obj;; 7150 while ((obj = fFunctions->First())) {; 7151 while(fFunctions->Remove(obj)) { }; 7152 delete obj;; 7153 }; 7154 if(stats) fFunctions->Add(stats);; 7155 fContour.Set(0);; 7156}; 7157 ; 7158////////////////////////////////////////////////////////////////////////////////; 7159/// Save the histogram as .csv, .tsv or .txt. In case of any other extension, fall; 7160/// back to TObject::SaveAs, which saves as a .C macro (but with the file name; 7161/// extension specified by the user); 7162///; 7163/// The Under/Overflow bins are also exported (as first and last lines); 7164/// The fist 2 columns are the lower and upper edges of the bins; 7165/// Column 3 contains the bin contents; 7166/// The last column contains the error in y. If errors are not present, the column; 7167/// is left empty; 7168///; 7169/// The result can be immediately imported into Excel, gnuplot, Python or whatever,; 7170/// without the needing to install pyroot, etc.; 7171///; 7172/// \param filename the name of the file where to store the histogram; 7173/// \param option some tuning options; 7174///; 7175/// The file extension defines the delimiter used:; 7176/// - `.csv` : comma; 7177/// - `.tsv` : tab; 7178/// - `.txt` : space; 7179///; 7180/// If option = ""title"" a title line is generated. If the y-axis has a title,; 7181/// this title is displayed as column 3 name, otherwise, it shows ""BinContent""; 7182 ; 7183void TH1::SaveAs(const char *filename, Option_t *option) const; 7184{; 7185 char del = '\0';; 7186 TString ext = """";; 7187 TString fname = filename;; 7188 TString opt = o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:280152,error,error,280152,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability,"716 ; 1717 RooFitResult* errFR = static_cast<RooFitResult*>(pc.getObject(""errorFR"")) ;; 1718 if (!drawOpt.Contains(""P"") && errFR) {; 1719 return plotOnWithErrorBand(frame, *errFR, pc.getDouble(""errorZ""), pc.getSet(""errorPars""), argList,; 1720 pc.getInt(""linearMethod""));; 1721 }; 1722 ; 1723 // Extract values from named arguments; 1724 PlotOpt o ;; 1725 o.numee = pc.getInt(""numee"") ;; 1726 o.drawOptions = drawOpt.Data();; 1727 o.curveNameSuffix = pc.getString(""curveNameSuffix"") ;; 1728 o.scaleFactor = pc.getDouble(""scaleFactor"") ;; 1729 o.stype = (ScaleType) pc.getInt(""scaleType"") ;; 1730 o.projData = static_cast<const RooAbsData*>(pc.getObject(""projData"")) ;; 1731 o.binProjData = pc.getInt(""binProjData"") ;; 1732 o.projDataSet = pc.getSet(""projDataSet"");; 1733 o.numCPU = pc.getInt(""numCPU"") ;; 1734 o.interleave = (RooFit::MPSplit) pc.getInt(""interleave"") ;; 1735 o.eeval = pc.getDouble(""evalErrorVal"") ;; 1736 o.doeeval = pc.getInt(""doEvalError"") ;; 1737 o.errorFR = errFR;; 1738 ; 1739 const RooArgSet* sliceSetTmp = pc.getSet(""sliceSet"");; 1740 std::unique_ptr<RooArgSet> sliceSet{sliceSetTmp ? static_cast<RooArgSet*>(sliceSetTmp->Clone()) : nullptr};; 1741 const RooArgSet* projSet = pc.getSet(""projSet"") ;; 1742 const RooAbsCategoryLValue* asymCat = static_cast<const RooAbsCategoryLValue*>(pc.getObject(""asymCat"")) ;; 1743 ; 1744 ; 1745 // Look for category slice arguments and add them to the master slice list if found; 1746 if (const char* sliceCatState = pc.getString(""sliceCatState"",nullptr,true)) {; 1747 const RooLinkedList& sliceCatList = pc.getObjectList(""sliceCatList"") ;; 1748 ; 1749 // Make the master slice set if it doesnt exist; 1750 if (!sliceSet) {; 1751 sliceSet = std::make_unique<RooArgSet>();; 1752 }; 1753 ; 1754 // Loop over all categories provided by (multiple) Slice() arguments; 1755 auto iter = sliceCatList.begin();; 1756 for (auto const& catToken : ROOT::Split(sliceCatState, "","")) {; 1757 if (auto scat = static_cast<RooCategory*>(*iter)) {; 1758 // Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:75542,error,errorFR,75542,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['errorFR']
Availability,"72 explicit RVecImpl(unsigned N) : ROOT::Internal::VecOps::SmallVectorTemplateBase<T>(N) {}; 573 ; 574public:; 575 RVecImpl(const RVecImpl &) = delete;; 576 ; 577 ~RVecImpl(); 578 {; 579 // Subclass has already destructed this vector's elements.; 580 // If this wasn't grown from the inline copy, deallocate the old space.; 581 if (!this->isSmall() && this->Owns()); 582 free(this->begin());; 583 }; 584 ; 585 // also give up adopted memory if applicable; 586 void clear(); 587 {; 588 if (this->Owns()) {; 589 this->destroy_range(this->begin(), this->end());; 590 this->fSize = 0;; 591 } else {; 592 this->resetToSmall();; 593 }; 594 }; 595 ; 596 void resize(size_type N); 597 {; 598 if (N < this->size()) {; 599 if (this->Owns()); 600 this->destroy_range(this->begin() + N, this->end());; 601 this->set_size(N);; 602 } else if (N > this->size()) {; 603 if (this->capacity() < N); 604 this->grow(N);; 605 for (auto I = this->end(), E = this->begin() + N; I != E; ++I); 606 new (&*I) T();; 607 this->set_size(N);; 608 }; 609 }; 610 ; 611 void resize(size_type N, const T &NV); 612 {; 613 if (N < this->size()) {; 614 if (this->Owns()); 615 this->destroy_range(this->begin() + N, this->end());; 616 this->set_size(N);; 617 } else if (N > this->size()) {; 618 if (this->capacity() < N); 619 this->grow(N);; 620 std::uninitialized_fill(this->end(), this->begin() + N, NV);; 621 this->set_size(N);; 622 }; 623 }; 624 ; 625 void reserve(size_type N); 626 {; 627 if (this->capacity() < N); 628 this->grow(N);; 629 }; 630 ; 631 void pop_back_n(size_type NumItems); 632 {; 633 if (this->size() < NumItems) {; 634 throw std::runtime_error(""Popping back more elements than those available."");; 635 }; 636 if (this->Owns()); 637 this->destroy_range(this->end() - NumItems, this->end());; 638 this->set_size(this->size() - NumItems);; 639 }; 640 ; 641 R__RVEC_NODISCARD T pop_back_val(); 642 {; 643 T Result = ::std::move(this->back());; 644 this->pop_back();; 645 return Result;; 646 }; 647 ; 648 void swap(RVecI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:22842,avail,available,22842,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,2,['avail'],['available']
Availability,"72 kCannotPick = TObject::kCannotPick,; 373 kNoContextMenu = TObject::kNoContextMenu,; 374 kInvalidObject = TObject::kInvalidObject; 375};; 376 ; 377namespace cling {; 378 std::string printValue(TObject *val);; 379}; 380 ; 381namespace ROOT {; 382 ; 383namespace Internal {; 384 bool DeleteChangesMemory();; 385} // Internal; 386 ; 387namespace Detail {; 388 ; 389 ; 390/// @brief Check if the TObject's memory has been deleted.; 391/// @warning This should be only used for error mitigation as the answer is only; 392/// sometimes correct. It actually just checks whether the object has been; 393/// deleted, so this will falsely return true for an object that has; 394/// been destructed but its memory has not been deleted. This will return an; 395/// undefined value if the memory is re-used between the deletion and the check.; 396/// i.e. This is useful to prevent a segmentation fault in case where the problem; 397/// can be detected when the deletion and the usage are 'close-by'; 398/// @warning In enviroment where delete taints (changes) the memory, this function; 399/// always returns false as the marker left by ~TObject will be overwritten.; 400/// @param obj The memory to check; 401/// @return true if the object has been destructed and it can be inferred that it has been deleted; 402R__ALWAYS_INLINE bool HasBeenDeleted(const TObject *obj) {; 403 return !ROOT::Internal::DeleteChangesMemory() && obj->IsDestructed();; 404}; 405 ; 406}} // ROOT::Details; 407 ; 408#endif; R__ALWAYS_INLINE#define R__ALWAYS_INLINEDefinition RConfig.hxx:552; R__likely#define R__likely(expr)Definition RConfig.hxx:587; R__unlikely#define R__unlikely(expr)Definition RConfig.hxx:586; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Longptr_tlong Longptr_tDefinition RtypesCore.h:75; ULong_tunsigned long ULong_tDefinition RtypesCore.h:55; UInt_tunsigned int UInt_tDefinition Rtype",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8h_source.html:16809,fault,fault,16809,doc/master/TObject_8h_source.html,https://root.cern,https://root.cern/doc/master/TObject_8h_source.html,1,['fault'],['fault']
Availability,724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.53,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95476,error,error,95476,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0.020103 0.00182338 43764.7 0; : 718 Minimum Test error found - save the configuration ; : 718 | 25.9613 26.206 0.0200958 0.00181915 43771.6 0; : 719 Minimum Test error found - save the configuration ; : 719 | 25.6965 25.7845 0.0200932 0.00181887 43777.1 0; : 720 Minimum Test error found - save the configuration ; : 720 | 25.279 25.7029 0.0200856 0.00181582 43788.1 0; : 721 | 24.9296 25.8529 0.0200326 0.00176051 43782.6 1; : 722 | 24.8179 25.9725 0.0200485 0.0017542 43729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:91579,error,error,91579,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,729.4 2; : 723 Minimum Test error found - save the configuration ; : 723 | 24.602 25.0488 0.0200826 0.00181241 43787.1 0; : 724 Minimum Test error found - save the configuration ; : 724 | 24.1724 25.032 0.0200931 0.00180717 43749.4 0; : 725 Minimum Test error found - save the configuration ; : 725 | 23.8272 24.7604 0.0201019 0.00180745 43729.1 0; : 726 Minimum Test error found - save the configuration ; : 726 | 23.3507 24.439 0.0200878 0.00180894 43766.5 0; : 727 | 23.4129 26.1943 0.0200349 0.00176004 43776.1 1; : 728 Minimum Test error found - save the configuration ; : 728 | 23.0149 24.223 0.0201139 0.00181842 43726.6 0; : 729 Minimum Test error found - save the configuration ; : 729 | 22.6778 23.9945 0.0201044 0.00181062 43730.7 0; : 730 | 22.455 23.9981 0.020057 0.0017578 43717.8 1; : 731 Minimum Test error found - save the configuration ; : 731 | 22.3369 23.5918 0.0200927 0.00181127 43760.4 0; : 732 | 21.8719 23.7484 0.0200451 0.00175548 43740.6 1; : 733 Minimum Test error found - save the configuration ; : 733 | 21.6244 23.3245 0.0201038 0.00181384 43739.9 0; : 734 | 21.7205 24.0895 0.02004 0.0017539 43749.1 1; : 735 Minimum Test error found - save the configuration ; : 735 | 21.2911 23.0542 0.0200889 0.00181051 43767.5 0; : 736 Minimum Test error found - save the configuration ; : 736 | 20.9485 22.9069 0.0201996 0.00182864 43547 0; : 737 Minimum Test error found - save the configuration ; : 737 | 20.4393 22.6213 0.0200735 0.00180745 43797.2 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:92198,error,error,92198,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"72] - TExecutorCRTP::Map() should support void; [#7871] - Usability of TExecutor::MapReduce; [#7845] - Improve TMatrix reference documentation; [#7805] - Inconsistent and unintuitive behaviour of TFormula::SetParNames and TFormula::SetParameters; [#7774] - Unreasonably slow behaviour of CompileMacro; [#7699] - [VecOps] Make free functions in VecOps better visible; [#7686] - PyROOT Segfault when creating proxy to derived class with multiple overloads; [#7669] - Inconsistent behaviour in wildcard import; [#7644] - Provide in the cmake configuration the C++ standard which was used to compile ROOT; [#7627] - Fix TMVA group links; [#7159] - TNetXNGFile::Open fails with double slash (//) in path; [#7128] - Cannot build ROOT if another ROOT at /usr/local; [#6900] - mathmore: invalid roots for a quartic polynomial; [#6811] - Bug displaying several 3D objects such as TGraph2D on the same canvas; [#6755] - Greek letter epsilon not rendered correctly using TLatex with OpenGL.CanvasPreferGL option, segmentation fault.; [#6753] - CMake dependency on Python: use targets; [#6616] - hadd writes files with unspecified compression algorithm; [#6438] - hadd –help prints wrong usage info; [#6384] - cxx-standard should not be in CMAKE_CXX_FLAGS; [ROOT-3358] - SetRootSys() improperly sets $ROOTSYS; [ROOT-6424] - Bogus template names suggested by autocompletion; [ROOT-6581] - .x stress.cxx(1) broken; [ROOT-6713] - Root attempts to stream null pointers to abstract classes; [ROOT-6867] - forward declaration ‘payload’ inadvertently (?) unloaded; [ROOT-7280] - Memory leaks due to erroneous use of ExpandPathName; [ROOT-7801] - Typo in TMultiDimFit::MakeRealCode(); [ROOT-7289] - Documentation for TMath::fooI distributions foo unclear; [ROOT-7970] - Failure to use implicit auto with initializer lists; [ROOT-8042] - Allocating buffer close to INT_MAX throws exceptions; [ROOT-8051] - When projecting THn into TH1, TH2 or TH3, bin labels on the involved axis are lost; [ROOT-8259] - Minuit constantly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:38562,fault,fault,38562,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,1,['fault'],['fault']
Availability,"73 BinData::BinData (unsigned int n, const double * dataX, const double * val,; 74 const double * ex , const double * eval ) :; 75 FitData( n, dataX ),; 76 fDataPtr( nullptr ),; 77 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 78 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 79 {; 80 assert( val );; 81 fDataPtr = val;; 82 ; 83 if ( nullptr != eval ); 84 {; 85 fDataErrorPtr = eval;; 86 ; 87 fErrorType = kValueError;; 88 ; 89 if ( nullptr != ex ); 90 {; 91 fCoordErrorsPtr.resize( 1 );; 92 ; 93 fCoordErrorsPtr[0] = ex;; 94 ; 95 fErrorType = kCoordError;; 96 }; 97 }; 98 else; 99 {; 100 fErrorType = kNoError;; 101 }; 102 ; 103 fpTmpCoordErrorVector = new double [ fDim ];; 104 ; 105 ComputeSums();; 106 }; 107 ; 108 /**; 109 constructor from external data for 2D with errors on coordinate and value; 110 */; 111 BinData::BinData(unsigned int n, const double * dataX, const double * dataY,; 112 const double * val, const double * ex , const double * ey,; 113 const double * eval ) :; 114 FitData( n, dataX, dataY ),; 115 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 116 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 117 {; 118 assert( val );; 119 fDataPtr = val;; 120 ; 121 if ( nullptr != eval ); 122 {; 123 fDataErrorPtr = eval;; 124 ; 125 fErrorType = kValueError;; 126 ; 127 if ( nullptr != ex || nullptr != ey ); 128 {; 129 fCoordErrorsPtr.resize( 2 );; 130 ; 131 fCoordErrorsPtr[0] = ex;; 132 fCoordErrorsPtr[1] = ey;; 133 ; 134 fErrorType = kCoordError;; 135 }; 136 }; 137 else; 138 {; 139 fErrorType = kNoError;; 140 }; 141 ; 142 fpTmpCoordErrorVector = new double [ fDim ];; 143 ComputeSums();; 144 }; 145 ; 146 /**; 147 constructor from external data for 3D with errors on coordinate and value; 148 */; 149 BinData::BinData(unsigned int n, const double * dataX, const double * dataY,; 150 const double * dataZ, const double * val, const double * ex ,; 151 const double ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:3058,error,errors,3058,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,1,['error'],['errors']
Availability,"73///; 2474/// NOTE that the Y axis attributes of the TH2 are copied to the X axis of the projection.; 2475 ; 2476TH1D *TH2::ProjectionY(const char *name, Int_t firstxbin, Int_t lastxbin, Option_t *option) const; 2477{; 2478 return DoProjection(false, name, firstxbin, lastxbin, option);; 2479}; 2480 ; 2481 ; 2482////////////////////////////////////////////////////////////////////////////////; 2483/// Replace current statistics with the values in array stats; 2484 ; 2485void TH2::PutStats(Double_t *stats); 2486{; 2487 TH1::PutStats(stats);; 2488 fTsumwy = stats[4];; 2489 fTsumwy2 = stats[5];; 2490 fTsumwxy = stats[6];; 2491}; 2492 ; 2493 ; 2494////////////////////////////////////////////////////////////////////////////////; 2495/// Compute the X distribution of quantiles in the other variable Y; 2496/// name is the name of the returned histogram; 2497/// prob is the probability content for the quantile (0.5 is the default for the median); 2498/// An approximate error for the quantile is computed assuming that the distribution in; 2499/// the other variable is normal. According to this approximate formula the error on the quantile is; 2500/// estimated as sqrt( p (1-p) / ( n * f(q)^2) ), where p is the probability content of the quantile and; 2501/// n is the number of events used to compute the quantile and f(q) is the probability distribution for the; 2502/// other variable evaluated at the obtained quantile. In the error estimation the probability is then assumed to be; 2503/// a normal distribution.; 2504 ; 2505TH1D* TH2::QuantilesX( Double_t prob, const char * name) const; 2506{; 2507 return DoQuantiles(true, name, prob);; 2508}; 2509 ; 2510 ; 2511////////////////////////////////////////////////////////////////////////////////; 2512/// Compute the Y distribution of quantiles in the other variable X; 2513/// name is the name of the returned histogram; 2514/// prob is the probability content for the quantile (0.5 is the default for the median); 2515/// An approxima",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:102461,error,error,102461,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['error'],['error']
Availability,74992 43784.3 1; : 904 | 4.98683 7.44507 0.0200553 0.00174858 43699.9 2; : 905 | 4.82992 7.45009 0.0202406 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:107330,error,error,107330,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"74{; 2075 if (e == -1); 2076 SetLineColor(lcolor);; 2077 else if (e >= 0 && e < fNYErrors); 2078 fAttLine[e].SetLineColor(lcolor);; 2079}; 2080 ; 2081////////////////////////////////////////////////////////////////////////////////; 2082/// Set Line Color and Alpha of error e (-1 = Global and x errors).; 2083 ; 2084void TGraphMultiErrors::SetLineColorAlpha(Int_t e, Color_t lcolor, Float_t lalpha); 2085{; 2086 if (e == -1); 2087 SetLineColorAlpha(lcolor, lalpha);; 2088 else if (e >= 0 && e < fNYErrors); 2089 fAttLine[e].SetLineColorAlpha(lcolor, lalpha);; 2090}; 2091 ; 2092////////////////////////////////////////////////////////////////////////////////; 2093/// Set Line Style of error e (-1 = Global and x errors).; 2094 ; 2095void TGraphMultiErrors::SetLineStyle(Int_t e, Style_t lstyle); 2096{; 2097 if (e == -1); 2098 SetLineStyle(lstyle);; 2099 else if (e >= 0 && e < fNYErrors); 2100 fAttLine[e].SetLineStyle(lstyle);; 2101}; 2102 ; 2103////////////////////////////////////////////////////////////////////////////////; 2104/// Set Line Width of error e (-1 = Global and x errors).; 2105 ; 2106void TGraphMultiErrors::SetLineWidth(Int_t e, Width_t lwidth); 2107{; 2108 if (e == -1); 2109 SetLineWidth(lwidth);; 2110 else if (e >= 0 && e < fNYErrors); 2111 fAttLine[e].SetLineWidth(lwidth);; 2112}; QuantFuncMathCore.h; d#define d(i)Definition RSha256.hxx:102; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; a#define a(i)Definition RSha256.hxx:99; h#define h(i)Definition RSha256.hxx:106; e#define e(i)Definition RSha256.hxx:103; Riostream.h; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; Style_tshort Style_tDefinition RtypesCore.h:82; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Color_tshort Color_tDefinition RtypesCore.h:85; Char_tchar Char_tDefinition RtypesCore.h:37; Width_tshort Width_tDefinition RtypesCore.h:84; Float_tfloat Float_tDefinition RtypesCore.h:57; kFALSEconste",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:70922,error,error,70922,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,75 43762.5 2; : 830 | 7.96378 12.2512 0.0200553 0.00175667 43719.1 3; : 831 Minimum Test error found - save the configuration ; : 831 | 8.22376 11.6427 0.0201223 0.00181824 43706.2 0; : 832 Minimum Test error found - save the configuration ; : 832 | 7.83287 11.3952 0.0201042 0.0018127 43736.1 0; : 833 | 7.77712 11.6148 0.0201377 0.00175591 43521.3 1; : 834 Minimum Test error found - save the configuration ; : 834 | 7.55905 11.3034 0.0200924 0.00180566 43747.5 0; : 835 | 7.51796 11.4086 0.0200653 0.00174972 43678.7 1; : 836 | 7.6539 11.6743 0.0201454 0.00175856 43509.3 2; : 837 | 7.98319 11.3225 0.0201169 0.00175643 43571.8 3; : 838 | 7.66699 11.6657 0.0201662 0.00181142 43585.5 4; : 839 Minimum Test error found - save the configuration ; : 839 | 7.52525 10.9666 0.0202646 0.00182844 43392.9 0; : 840 | 7.48548 11.313 0.020051 0.00174873 43710.5 1; : 841 | 7.28024 11.1847 0.0200374 0.0017493 43744.4 2; : 842 | 7.18939 11.0082 0.0200397 0.00175322 43748.2 3; : 843 Minimum Test error found - save the configuration ; : 843 | 7.01613 10.4197 0.0201334 0.00182993 43707.5 0; : 844 | 6.83302 10.8151 0.020039 0.00176037 43767.1 1; : 845 | 6.97518 10.5462 0.0200409 0.00175987 43761.2 2; : 846 | 6.93317 10.5904 0.0200239 0.00176026 43802.8 3; : 847 | 6.86223 10.6492 0.0200268 0.00176058 43796.8 4; : 848 | 7.00201 10.9279 0.0200258 0.00175939 43796.3 5; : 849 | 6.9266 10.4735 0.0200333 0.00176264 43785.9 6; : 850 | 6.72856 10.6877 0.0200521 0.00176189 43739.2 7; : 851 | 6.84236 10.8522 0.0200238 0.00176009 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.722,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:101714,error,error,101714,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"76 of file FitConfig.h. ◆ SetDefaultMinimizer(). void ROOT::Fit::FitConfig::SetDefaultMinimizer ; (; const char * ; type, . const char * ; algo = nullptr . ). static . static function to control default minimizer type and algorithm ; Definition at line 252 of file FitConfig.cxx. ◆ SetFromFitResult(). void ROOT::Fit::FitConfig::SetFromFitResult ; (; const FitResult & ; rhs). Definition at line 80 of file FitConfig.cxx. ◆ SetMinimizer(). void ROOT::Fit::FitConfig::SetMinimizer ; (; const char * ; type, . const char * ; algo = nullptr . ). inline . set minimizer type ; Definition at line 179 of file FitConfig.h. ◆ SetMinimizerOptions(). void ROOT::Fit::FitConfig::SetMinimizerOptions ; (; const ROOT::Math::MinimizerOptions & ; minopt). set all the minimizer options using class MinimizerOptions ; Definition at line 257 of file FitConfig.cxx. ◆ SetMinosErrors() [1/2]. void ROOT::Fit::FitConfig::SetMinosErrors ; (; bool ; on = true). inline . set Minos errors computation to be performed after fitting ; Definition at line 229 of file FitConfig.h. ◆ SetMinosErrors() [2/2]. void ROOT::Fit::FitConfig::SetMinosErrors ; (; const std::vector< unsigned int > & ; paramInd). inline . set parameter indices for running Minos this can be used for running Minos on a subset of parameters - otherwise is run on all of them if MinosErrors() is set ; Definition at line 237 of file FitConfig.h. ◆ SetNormErrors(). void ROOT::Fit::FitConfig::SetNormErrors ; (; bool ; on = true). inline . set the option to normalize the error on the result according to chi2/ndf ; Definition at line 223 of file FitConfig.h. ◆ SetParabErrors(). void ROOT::Fit::FitConfig::SetParabErrors ; (; bool ; on = true). inline . set parabolic errors ; Definition at line 226 of file FitConfig.h. ◆ SetParamsSettings() [1/2]. void ROOT::Fit::FitConfig::SetParamsSettings ; (; const std::vector< ROOT::Fit::ParameterSettings > & ; pars). inline . Definition at line 145 of file FitConfig.h. ◆ SetParamsSettings() [2/2]. void ROOT::Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html:9724,error,errors,9724,doc/master/classROOT_1_1Fit_1_1FitConfig.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitConfig.html,1,['error'],['errors']
Availability,76259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test error found - save the configuration ; : 933 | 4.07608 6.08713 0.0202588 0.00184594 43447.8 0; : 934 | 4.3998 6.10426 0.0204691 0.00178412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:108953,error,error,108953,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"767 ; 768////////////////////////////////////////////////////////////////////////////////; 769/// Creates histogram basic data structure.; 770 ; 771void TH1::Build(); 772{; 773 fDirectory = nullptr;; 774 fPainter = nullptr;; 775 fIntegral = nullptr;; 776 fEntries = 0;; 777 fNormFactor = 0;; 778 fTsumw = fTsumw2=fTsumwx=fTsumwx2=0;; 779 fMaximum = -1111;; 780 fMinimum = -1111;; 781 fBufferSize = 0;; 782 fBuffer = nullptr;; 783 fBinStatErrOpt = kNormal;; 784 fStatOverflows = EStatOverflows::kNeutral;; 785 fXaxis.SetName(""xaxis"");; 786 fYaxis.SetName(""yaxis"");; 787 fZaxis.SetName(""zaxis"");; 788 fYaxis.Set(1,0.,1.);; 789 fZaxis.Set(1,0.,1.);; 790 fXaxis.SetParent(this);; 791 fYaxis.SetParent(this);; 792 fZaxis.SetParent(this);; 793 ; 794 SetTitle(fTitle.Data());; 795 ; 796 fFunctions = new TList;; 797 ; 798 UseCurrentStyle();; 799 ; 800 if (TH1::AddDirectoryStatus()) {; 801 fDirectory = gDirectory;; 802 if (fDirectory) {; 803 fFunctions->UseRWLock();; 804 fDirectory->Append(this,kTRUE);; 805 }; 806 }; 807}; 808 ; 809////////////////////////////////////////////////////////////////////////////////; 810/// Performs the operation: `this = this + c1*f1`; 811/// if errors are defined (see TH1::Sumw2), errors are also recalculated.; 812///; 813/// By default, the function is computed at the centre of the bin.; 814/// if option ""I"" is specified (1-d histogram only), the integral of the; 815/// function in each bin is used instead of the value of the function at; 816/// the centre of the bin.; 817///; 818/// Only bins inside the function range are recomputed.; 819///; 820/// IMPORTANT NOTE: If you intend to use the errors of this histogram later; 821/// you should call Sumw2 before making this operation.; 822/// This is particularly important if you fit the histogram after TH1::Add; 823///; 824/// The function return kFALSE if the Add operation failed; 825 ; 826Bool_t TH1::Add(TF1 *f1, Double_t c1, Option_t *option); 827{; 828 if (!f1) {; 829 Error(""Add"",""Attempt to add a non-ex",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:32768,error,errors,32768,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['error'],['errors']
Availability,"769/// .X myfunc.C(arg1,arg2); 2770/// ~~~; 2771/// We allow them to type:; 2772/// ~~~ {.cpp}; 2773/// .X myfunc.C++(arg1,arg2); 2774/// ~~~; 2775/// or; 2776/// ~~~ {.cpp}; 2777/// .X myfunc.C+(arg1,arg2); 2778/// ~~~; 2779/// In which case an external compiler will be called to create a shared; 2780/// library. This shared library will then be loaded and the function; 2781/// myfunc will be called with the two arguments. With '++' the shared library; 2782/// is always recompiled. With '+' the shared library is recompiled only; 2783/// if it does not exist yet or the macro file is newer than the shared; 2784/// library.; 2785///; 2786/// Of course the + and ++ notation is supported in similar way for .x and .L.; 2787///; 2788/// Through the function TSystem::SetMakeSharedLib(), the user will be able to; 2789/// indicate, with shell commands, how to build a shared library (a good; 2790/// default will be provided). The most common change, namely where to find; 2791/// header files, will be available through the function; 2792/// TSystem::SetIncludePath().; 2793/// A good default will be provided so that a typical user session should be at; 2794/// most:; 2795/// ~~~ {.cpp}; 2796/// root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; 2797/// -I$HOME/mypackage/include"");; 2798/// root[2] .x myfunc.C++(10,20);; 2799/// ~~~; 2800/// The user may sometimes try to compile a script before it has loaded all the; 2801/// needed shared libraries. In this case we want to be helpful and output a; 2802/// list of the unresolved symbols. So if the loading of the created shared; 2803/// library fails, we will try to build a executable that contains the; 2804/// script. The linker should then output a list of missing symbols.; 2805///; 2806/// To support this we provide a TSystem::SetMakeExe() function, that sets the; 2807/// directive telling how to create an executable. The loader will need; 2808/// to be informed of all the libraries available. The information about; 2809/// th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:91635,avail,available,91635,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['avail'],['available']
Availability,"77 Long_t *blocks, Long_t *bfree); 1678{; 1679 return UnixFSstat(path, id, bsize, blocks, bfree);; 1680}; 1681 ; 1682////////////////////////////////////////////////////////////////////////////////; 1683/// Create a link from file1 to file2. Returns 0 when successful,; 1684/// -1 in case of failure.; 1685 ; 1686int TUnixSystem::Link(const char *from, const char *to); 1687{; 1688 return ::link(from, to);; 1689}; 1690 ; 1691////////////////////////////////////////////////////////////////////////////////; 1692/// Create a symlink from file1 to file2. Returns 0 when successful,; 1693/// -1 in case of failure.; 1694 ; 1695int TUnixSystem::Symlink(const char *from, const char *to); 1696{; 1697#if defined(R__AIX); 1698 return ::symlink((char*)from, (char*)to);; 1699#else; 1700 return ::symlink(from, to);; 1701#endif; 1702}; 1703 ; 1704////////////////////////////////////////////////////////////////////////////////; 1705/// Unlink, i.e. remove, a file or directory. Returns 0 when successful,; 1706/// -1 in case of failure.; 1707 ; 1708int TUnixSystem::Unlink(const char *name); 1709{; 1710 TSystem *helper = FindHelper(name);; 1711 if (helper); 1712 return helper->Unlink(name);; 1713 ; 1714#if defined(R__SEEK64); 1715 struct stat64 finfo;; 1716 if (lstat64(name, &finfo) < 0); 1717#else; 1718 struct stat finfo;; 1719 if (lstat(name, &finfo) < 0); 1720#endif; 1721 return -1;; 1722 ; 1723 if (S_ISDIR(finfo.st_mode)); 1724 return ::rmdir(name);; 1725 else; 1726 return ::unlink(name);; 1727}; 1728 ; 1729//---- expand the metacharacters as in the shell -------------------------------; 1730 ; 1731// expand the metacharacters as in the shell; 1732 ; 1733const char; 1734#ifdef G__OLDEXPAND; 1735 kShellEscape = '\\',; 1736 *kShellStuff = ""(){}<>\""'"",; 1737#endif; 1738 *kShellMeta = ""~*[]{}?$"";; 1739 ; 1740 ; 1741#ifndef G__OLDEXPAND; 1742////////////////////////////////////////////////////////////////////////////////; 1743/// Expand a pathname getting rid of special shell characters lik",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:52668,failure,failure,52668,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['failure'],['failure']
Availability,"7837 &year,; 7838 &hour,; 7839 &minute,; 7840 &second); 7841 == 6); 7842 || (sscanf(datetime,; 7843 ""%d-%3s-%d %d:%d:%d"",; 7844 &day,; 7845 month_str,; 7846 &year,; 7847 &hour,; 7848 &minute,; 7849 &second); 7850 == 6)) {; 7851 month = get_month_index(month_str);; 7852 if ((month >= 0) && (year >= 1970)) {; 7853 memset(&tm, 0, sizeof(tm));; 7854 tm.tm_year = year - 1900;; 7855 tm.tm_mon = month;; 7856 tm.tm_mday = day;; 7857 tm.tm_hour = hour;; 7858 tm.tm_min = minute;; 7859 tm.tm_sec = second;; 7860 result = timegm(&tm);; 7861 }; 7862 }; 7863 ; 7864 return result;; 7865}; 7866#endif /* !NO_CACHING */; 7867 ; 7868 ; 7869/* Pre-process URIs according to RFC + protect against directory disclosure; 7870 * attacks by removing '..', excessive '/' and '\' characters */; 7871static void; 7872remove_dot_segments(char *inout); 7873{; 7874 /* Windows backend protection; 7875 * (https://tools.ietf.org/html/rfc3986#section-7.3): Replace backslash; 7876 * in URI by slash */; 7877 char *out_end = inout;; 7878 char *in = inout;; 7879 ; 7880 if (!in) {; 7881 /* Param error. */; 7882 return;; 7883 }; 7884 ; 7885 while (*in) {; 7886 if (*in == '\\') {; 7887 *in = '/';; 7888 }; 7889 in++;; 7890 }; 7891 ; 7892 /* Algorithm ""remove_dot_segments"" from; 7893 * https://tools.ietf.org/html/rfc3986#section-5.2.4 */; 7894 /* Step 1:; 7895 * The input buffer is initialized.; 7896 * The output buffer is initialized to the empty string.; 7897 */; 7898 in = inout;; 7899 ; 7900 /* Step 2:; 7901 * While the input buffer is not empty, loop as follows:; 7902 */; 7903 /* Less than out_end of the inout buffer is used as output, so keep; 7904 * condition: out_end <= in */; 7905 while (*in) {; 7906 /* Step 2a:; 7907 * If the input buffer begins with a prefix of ""../"" or ""./"",; 7908 * then remove that prefix from the input buffer;; 7909 */; 7910 if (!strncmp(in, ""../"", 3)) {; 7911 in += 3;; 7912 } else if (!strncmp(in, ""./"", 2)) {; 7913 in += 2;; 7914 }; 7915 /* otherwise */; 7916 /* Step 2b:; 7917 * if th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:227148,error,error,227148,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"7838 &year,; 7839 &hour,; 7840 &minute,; 7841 &second); 7842 == 6); 7843 || (sscanf(datetime,; 7844 ""%d-%3s-%d %d:%d:%d"",; 7845 &day,; 7846 month_str,; 7847 &year,; 7848 &hour,; 7849 &minute,; 7850 &second); 7851 == 6)) {; 7852 month = get_month_index(month_str);; 7853 if ((month >= 0) && (year >= 1970)) {; 7854 memset(&tm, 0, sizeof(tm));; 7855 tm.tm_year = year - 1900;; 7856 tm.tm_mon = month;; 7857 tm.tm_mday = day;; 7858 tm.tm_hour = hour;; 7859 tm.tm_min = minute;; 7860 tm.tm_sec = second;; 7861 result = timegm(&tm);; 7862 }; 7863 }; 7864 ; 7865 return result;; 7866}; 7867#endif /* !NO_CACHING */; 7868 ; 7869 ; 7870/* Pre-process URIs according to RFC + protect against directory disclosure; 7871 * attacks by removing '..', excessive '/' and '\' characters */; 7872static void; 7873remove_dot_segments(char *inout); 7874{; 7875 /* Windows backend protection; 7876 * (https://tools.ietf.org/html/rfc3986#section-7.3): Replace backslash; 7877 * in URI by slash */; 7878 char *out_end = inout;; 7879 char *in = inout;; 7880 ; 7881 if (!in) {; 7882 /* Param error. */; 7883 return;; 7884 }; 7885 ; 7886 while (*in) {; 7887 if (*in == '\\') {; 7888 *in = '/';; 7889 }; 7890 in++;; 7891 }; 7892 ; 7893 /* Algorithm ""remove_dot_segments"" from; 7894 * https://tools.ietf.org/html/rfc3986#section-5.2.4 */; 7895 /* Step 1:; 7896 * The input buffer is initialized.; 7897 * The output buffer is initialized to the empty string.; 7898 */; 7899 in = inout;; 7900 ; 7901 /* Step 2:; 7902 * While the input buffer is not empty, loop as follows:; 7903 */; 7904 /* Less than out_end of the inout buffer is used as output, so keep; 7905 * condition: out_end <= in */; 7906 while (*in) {; 7907 /* Step 2a:; 7908 * If the input buffer begins with a prefix of ""../"" or ""./"",; 7909 * then remove that prefix from the input buffer;; 7910 */; 7911 if (!strncmp(in, ""../"", 3)) {; 7912 in += 3;; 7913 } else if (!strncmp(in, ""./"", 2)) {; 7914 in += 2;; 7915 }; 7916 /* otherwise */; 7917 /* Step 2b:; 7918 * if th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:227180,error,error,227180,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"784 gin[j] += df[n]*fsum;; 1785 n++;; 1786 }; 1787 }; 1788 Int_t l = 0;; 1789 for (j=0;j<n;j++); 1790 for (Int_t k=0;k<=j;k++); 1791 zik[l++] += df[j]*df[k];; 1792 }; 1793 f += .5*fsum*fsum;; 1794 npfit++;; 1795 cache += fPointSize;; 1796 }; 1797 f1->SetNumberFitPoints(npfit);; 1798 delete [] df;; 1799}; 1800 ; 1801////////////////////////////////////////////////////////////////////////////////; 1802/// Minimization function for H1s using a Chisquare method.; 1803/// The ""I""ntegral method is used; 1804/// for each point the cache contains the following info; 1805/// - 1D : bc,e,xc,xw (bin content, error, x of center of bin, x bin width of bin); 1806/// - 2D : bc,e,xc,xw,yc,yw; 1807/// - 3D : bc,e,xc,xw,yc,yw,zc,zw; 1808 ; 1809void TFumili::FitChisquareI(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag); 1810{; 1811 Double_t cu,eu,fu,fsum;; 1812 Double_t x[3];; 1813 Double_t *zik=nullptr;; 1814 Double_t *pl0=nullptr;; 1815 ; 1816 TH1 *hfit = (TH1*)GetObjectFit();; 1817 TF1 *f1 = (TF1*)GetUserFunc();; 1818 Int_t nd = hfit->GetDimension();; 1819 Int_t j;; 1820 ; 1821 f1->InitArgs(x,u);; 1822 npar = f1->GetNpar();; 1823 SetParNumber(npar);; 1824 if(flag == 9) return;; 1825 zik = GetZ();; 1826 pl0 = GetPL0();; 1827 ; 1828 Double_t *df=new Double_t[npar];; 1829 f = 0;; 1830 ; 1831 Int_t npfit = 0;; 1832 Double_t *cache = fCache;; 1833 for (Int_t i=0;i<fNpoints;i++) {; 1834 cu = cache[0];; 1835 TF1::RejectPoint(kFALSE);; 1836 f1->SetParameters(u);; 1837 if (nd < 2) {; 1838 fu = f1->Integral(cache[2] - 0.5*cache[3],cache[2] + 0.5*cache[3])/cache[3];; 1839 } else if (nd < 3) {; 1840 fu = ((TF2*)f1)->Integral(cache[2] - 0.5*cache[3],cache[2] + 0.5*cache[3],cache[4] - 0.5*cache[5],cache[4] + 0.5*cache[5])/(cache[3]*cache[5]);; 1841 } else {; 1842 fu = ((TF3*)f1)->Integral(cache[2] - 0.5*cache[3],cache[2] + 0.5*cache[3],cache[4] - 0.5*cache[5],cache[4] + 0.5*cache[5],cache[6] - 0.5*cache[7],cache[6] + 0.5*cache[7])/(cache[3]*cache[5]*cache[7]);; 1843 }; 1844 if ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:51657,error,error,51657,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,1,['error'],['error']
Availability,78412 42815.1 1; : 935 | 4.23034 6.39854 0.0202977 0.00176426 43165.2 2; : 936 Minimum Test error found - save the configuration ; : 936 | 4.45077 5.93539 0.020128 0.0018336 43729.3 0; : 937 | 4.31583 6.35935 0.0203501 0.00176302 43040.6 1; : 938 Minimum Test error found - save the configuration ; : 938 | 4.1293 5.8271 0.0205749 0.0018749 42780.8 0; : 939 Minimum Test error found - save the configuration ; : 939 | 4.02273 5.7049 0.0206164 0.00186577 42665.2 0; : 940 | 3.91188 6.29174 0.0201055 0.00180854 43723.1 1; : 941 | 3.89757 5.80965 0.0203179 0.00179759 43195.8 2; : 942 | 3.94904 5.73464 0.0200877 0.00175468 43637.1 3; : 943 | 3.90362 5.73888 0.0200954 0.00175028 43608.4 4; : 944 | 3.87035 5.70718 0.0200345 0.0017513 43756.1 5; : 945 | 4.07017 5.95519 0.020321 0.00177709 43140.8 6; : 946 Minimum Test error found - save the configuration ; : 946 | 4.03451 5.59581 0.0201405 0.00182817 43686.3 0; : 947 | 3.85593 5.66203 0.0200425 0.00175434 43744.1 1; : 948 Minimum Test error found - save the configuration ; : 948 | 3.86683 5.35682 0.0204778 0.00185498 42958.2 0; : 949 Minimum Test error found - save the configuration ; : 949 | 3.68334 5.31467 0.0201988 0.00181717 43521.8 0; : 950 | 3.73312 5.52286 0.0201437 0.00175576 43506.8 1; : 951 | 3.85908 5.35112 0.0203536 0.00178284 43078.6 2; : 952 | 3.97296 5.91801 0.0201499 0.00177356 43534.3 3; : 953 Minimum Test error found - save the configuration ; : 953 | 3.78482 5.22353 0.0202416 0.0018489 43495.5 0; : 954 | 3.77661 6.79704 0.0200822 0.00176597 43677.1 1; : 955 | 4.26211 5.70833 0.020048 0.0017647 43755.8 2; : 956 | 3.83703 5.25865 0.0200643 0.00176603 43720 3; : 957 Minimum Test error found - save the configuration ; : 957 | 3.70429 5.19606 0.0204948 0.00189018 43000 0; : 958 | 3.80095 5.43788 0.0203069 0.00176137 43137.1 1; : 959 Minimum Test error found - save the configuration ; : 959 | 3.68258 5.15386 0.0202548 0.00182461 43407 0; : 960 Minimum Test error found - save the configuration ; : 960 | 3.74165 4.974,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:109570,error,error,109570,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.02,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95362,error,error,95362,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,79972 43184.7 3; : 878 Minimum Test error found - save the configuration ; : 878 | 5.55379 8.16524 0.0206602 0.00187795 42593.5 0; : 879 | 5.63754 8.31065 0.0203728 0.00175638 42972.7 1; : 880 | 5.71571 8.37499 0.0201251 0.00178041 43609.3 2; : 881 | 5.7556 8.5037 0.0200424 0.00175411 43743.8 3; : 882 | 5.47815 8.64255 0.0200508 0.00175977 43737.3 4; : 883 | 5.49484 8.19099 0.0201663 0.00175135 43443 5; : 884 Minimum Test error found - save the configuration ; : 884 | 5.44144 8.14796 0.020157 0.00182376 43636.7 0; : 885 | 5.72885 9.21369 0.0207466 0.00176462 42145.2 1; : 886 | 5.67418 8.64993 0.0200759 0.00176094 43680.2 2; : 887 Minimum Test error found - save the configuration ; : 887 | 5.55202 8.05484 0.0201465 0.00184145 43703.7 0; : 888 Minimum Test error found - save the configuration ; : 888 | 5.4009 7.86368 0.0201494 0.00184759 43711.4 0; : 889 | 5.09006 7.93881 0.0200766 0.00176618 43691 1; : 890 | 5.16257 8.05551 0.0200625 0.00176866 43730.7 2; : 891 Minimum Test error found - save the configuration ; : 891 | 5.07326 7.82028 0.0201532 0.0018382 43680.1 0; : 892 | 5.14088 7.89491 0.0200852 0.00179174 43731.4 1; : 893 Minimum Test error found - save the configuration ; : 893 | 5.13302 7.67646 0.0201541 0.00183919 43680.3 0; : 894 | 5.44229 7.83993 0.0200562 0.00176505 43736.9 1; : 895 | 5.40474 8.2327 0.0200223 0.00176151 43809.8 2; : 896 Minimum Test error found - save the configuration ; : 896 | 5.30823 7.62628 0.0201123 0.00182273 43740.8 0; : 897 | 6.20081 8.04326 0.0200652 0.00176931 43725.7 1; : 898 | 5.99101 8.0649 0.0200274 0.00175928 43792 2; : 899 Minimum Test error found - save the configuration ; : 899 | 5.1416 7.3348 0.0201215 0.00182199 43717.1 0; : 900 | 4.88699 7.46821 0.0200416 0.0017612 43762.6 1; : 901 Minimum Test error found - save the configuration ; : 901 | 4.92918 7.2702 0.0200754 0.00181642 43814.2 0; : 902 Minimum Test error found - save the configuration ; : 902 | 5.04871 7.17895 0.0200791 0.00180807 43785.1 0; : 903 | 4.88551 7.218,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:105311,error,error,105311,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"7; TGraphAsymmErrors::FillZerovoid FillZero(Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) overrideSet zero values for point arrays in the range [begin, end]Definition TGraphAsymmErrors.cxx:1104; TGraphAsymmErrors::Dividevirtual void Divide(const TH1 *pass, const TH1 *total, Option_t *opt=""cp"")Fill this TGraphAsymmErrors by dividing two 1-dimensional histograms pass/total.Definition TGraphAsymmErrors.cxx:588; TGraphAsymmErrors::CtorAllocateBool_t CtorAllocate()Should be called from ctors after fNpoints has been set.Definition TGraphAsymmErrors.cxx:1061; TGraphAsymmErrors::Classstatic TClass * Class(); TGraphAsymmErrors::SetPointErrorvirtual void SetPointError(Double_t exl, Double_t exh, Double_t eyl, Double_t eyh)Set ex and ey values for point pointed by the mouse.Definition TGraphAsymmErrors.cxx:1299; TGraphAsymmErrors::GetErrorXhighDouble_t GetErrorXhigh(Int_t i) const overrideGet high error on X.Definition TGraphAsymmErrors.cxx:1151; TGraphAsymmErrors::fEYhighDouble_t * fEYhigh[fNpoints] array of Y high errorsDefinition TGraphAsymmErrors.h:32; TGraphAsymmErrors::CopyPointsBool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy errors from fE*** to arrays[***] or to f*** Copy points.Definition TGraphAsymmErrors.cxx:1033; TGraphAsymmErrors::AddPointErrorvirtual void AddPointError(Double_t x, Double_t y, Double_t exl=0., Double_t exh=0., Double_t eyl=0., Double_t eyh=0.)Add a point with asymmetric errorbars to the graph.Definition TGraphAsymmErrors.cxx:451; TGraphAsymmErrors::ComputeRangevoid ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideCompute Range.Definition TGraphAsymmErrors.cxx:977; TGraphAsymmErrors::SetPointEXlowvirtual void SetPointEXlow(Int_t i, Double_t exl)Set EXlow for point i.Definition TGraphAsymmErrors.cxx:1348; TGraphAsymmErrors::Streamervoid Streamer(TBuffer &) overrideStream an object of class TGraphAsymmErrors.Definition TGraphAsymmErrors.cxx:1404; TGraphAsymmErrors::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:60027,error,errorsDefinition,60027,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['error'],['errorsDefinition']
Availability,"7; TH1::GetBinLowEdgevirtual Double_t GetBinLowEdge(Int_t bin) constReturn bin lower edge for 1D histogram.Definition TH1.cxx:9152; TH1::GetBinContentvirtual Double_t GetBinContent(Int_t bin) constReturn content of bin number bin.Definition TH1.cxx:5061; TH1::GetSumw2virtual TArrayD * GetSumw2()Definition TH1.h:313; TH1::GetBinWidthvirtual Double_t GetBinWidth(Int_t bin) constReturn bin width for 1D histogram.Definition TH1.cxx:9163; TH1::GetSumOfWeightsvirtual Double_t GetSumOfWeights() constReturn the sum of weights excluding under/overflows.Definition TH1.cxx:7917; TNamed::GetNameconst char * GetName() const overrideReturns name of object.Definition TNamed.h:47; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Infovirtual void Info(const char *method, const char *msgfmt,...) constIssue info message.Definition TObject.cxx:967; TStringBasic string class.Definition TString.h:139; TString::ToLowervoid ToLower()Change string to lower-case.Definition TString.cxx:1182; TString::Formatstatic TString Format(const char *fmt,...)Static method which formats a string using a printf style format descriptor and return a TString.Definition TString.cxx:2378; TString::ContainsBool_t Contains(const char *pat, ECaseCompare cmp=kExact) constDefinition TString.h:632; TStyle::GetErrorXFloat_t GetErrorX() constDefinition TStyle.h:186; TVectorTTVectorT.Definition TVectorT.h:27; TVectorT::GetNrowsInt_t GetNrows() constDefinition TVectorT.h:73; TVectorT::GetLwbInt_t GetLwb() constDefinition TVectorT.h:71; bool; double; int; ROOT::Math::normal_quantile_cdouble normal_quantile_c(double z, double sigma)Inverse ( ) of the cumulative distribution function of the upper tail ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:92728,error,error,92728,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability,"7; TStyle::GetPadTickXInt_t GetPadTickX() constDefinition TStyle.h:217; TStyle::GetTitleColorColor_t GetTitleColor(Option_t *axis=""X"") constReturn title color.Definition TStyle.cxx:1204; TStyle::IsReadingBool_t IsReading() constDefinition TStyle.h:296; TStyle::fHistLineStyleStyle_t fHistLineStyleHistogram line style.Definition TStyle.h:80; TStyle::GetFrameLineColorColor_t GetFrameLineColor() constDefinition TStyle.h:226; TStyle::SetTitleYSizevoid SetTitleYSize(Float_t size=0.02)Definition TStyle.h:412; TStyle::GetGridStyleStyle_t GetGridStyle() constDefinition TStyle.h:223; TStyle::GetJoinLinePSInt_t GetJoinLinePS() constReturns the line join method used for PostScript, PDF and SVG output. See TPostScript::SetLineJoin fo...Definition TStyle.h:287; TStyle::fLegendFillStyleStyle_t fLegendFillStyleLegend fill style.Definition TStyle.h:65; TStyle::SetStatFontvoid SetStatFont(Style_t font=62)Definition TStyle.h:394; TStyle::SetEndErrorSizevoid SetEndErrorSize(Float_t np=2)Set the size (in pixels) of the small lines drawn at the end of the error bars (TH1 or TGraphErrors).Definition TStyle.cxx:1340; TStyle::GetStatFontSizeFloat_t GetStatFontSize() constDefinition TStyle.h:261; TStyle::GetBarOffsetFloat_t GetBarOffset() constDefinition TStyle.h:182; TStyle::GetStatXFloat_t GetStatX() constDefinition TStyle.h:264; TStyle::GetLabelSizeFloat_t GetLabelSize(Option_t *axis=""X"") constReturn label size.Definition TStyle.cxx:1145; TStyle::SetStatStylevoid SetStatStyle(Style_t style=1001)Definition TStyle.h:392; TStyle::SetCapLinePSvoid SetCapLinePS(Int_t capline=0)Set the line cap method used for PostScript, PDF and SVG output. See TPostScript::SetLineCap for deta...Definition TStyle.h:307; TStyle::GetPadColorColor_t GetPadColor() constDefinition TStyle.h:208; TStyle::fBarOffsetFloat_t fBarOffsetOffset of bar for graphs.Definition TStyle.h:36; TStyle::SetHistLineStylevoid SetHistLineStyle(Style_t styl=0)Definition TStyle.h:382; TStyle::GetCandleScaledBool_t GetCandleScaled() constD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStyle_8h_source.html:37819,error,error,37819,doc/master/TStyle_8h_source.html,https://root.cern,https://root.cern/doc/master/TStyle_8h_source.html,1,['error'],['error']
Availability,8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85138,error,error,85138,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89499,error,error,89499,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"8 3.190; : --------------------------------------------------------------------------------------------------; : ; <HEADER> Dataset:datasetcvreg : Created tree 'TestTree' with 9999 events; : ; <HEADER> Dataset:datasetcvreg : Created tree 'TrainTree' with 9999 events; : ; <HEADER> Factory : Thank you for using TMVA!; : For citation information, please visit: http://tmva.sf.net/citeTMVA.html; : Evaluation done.; ==> Wrote root file: TMVARegCv.root; ==> TMVACrossValidationRegression is done!; (int) 0; ; #include <cstdlib>; #include <iostream>; #include <map>; #include <string>; ; #include ""TChain.h""; #include ""TFile.h""; #include ""TTree.h""; #include ""TString.h""; #include ""TObjString.h""; #include ""TSystem.h""; #include ""TROOT.h""; ; #include ""TMVA/Factory.h""; #include ""TMVA/DataLoader.h""; #include ""TMVA/Tools.h""; #include ""TMVA/TMVAGui.h""; #include ""TMVA/CrossValidation.h""; ; TFile * getDataFile(TString fname) {; TFile *input(0);; ; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; // if not: download from ROOT server; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_reg_example.root"", ""CACHEREAD"");; }; ; if (!input) {; std::cout << ""ERROR: could not open data file "" << fname << std::endl;; exit(1);; }; ; return input;; }; ; int TMVACrossValidationRegression(); {; // This loads the library; TMVA::Tools::Instance();; ; // --------------------------------------------------------------------------; ; // Create a ROOT output file where TMVA will store ntuples, histograms, etc.; TString outfileName(""TMVARegCv.root"");; TFile * outputFile = TFile::Open(outfileName, ""RECREATE"");; ; TString infileName(""./files/tmva_reg_example.root"");; TFile * inputFile = getDataFile(infileName);; ; TMVA::DataLoader *dataloader=new TMVA::DataLoader(""datasetcvreg"");; ; dataloader->AddVariable(""var1"", ""Variable 1"", ""units"", 'F');; dataloader->AddVariable(""var2"", ""Variable 2"", ""units"", 'F');; ; // Add ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html:15462,down,download,15462,doc/master/TMVACrossValidationRegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVACrossValidationRegression_8C.html,1,['down'],['download']
Availability,8 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83836,error,error,83836,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"8 ; 189 // try again to see if the interpreter is initialized; 190 if (!Py_IsInitialized()) {; 191 // give up ...; 192 std::cerr << ""Error: python has not been intialized; returning."" << std::endl;; 193 return kFALSE;; 194 }; 195 ; 196#if PY_VERSION_HEX < 0x030b0000; 197 PySys_SetArgv(argc, argv);; 198#endif; 199 ; 200 mainThreadState = PyEval_SaveThread();; 201 }; 202 ; 203 {; 204 // For the Python API calls; 205 PyGILRAII gilRaii;; 206 ; 207 // force loading of the ROOT module; 208 const int ret = PyRun_SimpleString(const_cast<char *>(""import ROOT""));; 209 if (ret != 0) {; 210 std::cerr << ""Error: import ROOT failed, check your PYTHONPATH environmental variable."" << std::endl;; 211 return kFALSE;; 212 }; 213 ; 214 if (!gMainDict) {; 215 ; 216 // retrieve the main dictionary; 217 gMainDict = PyModule_GetDict(PyImport_AddModule(const_cast<char *>(""__main__"")));; 218 // The gMainDict is borrowed, i.e. we are not calling Py_INCREF(gMainDict).; 219 // Like this, we avoid unexpectedly affecting how long __main__ is kept; 220 // alive. The gMainDict is only used in Exec(), ExecScript(), and Eval(),; 221 // which should not be called after __main__ is garbage collected anyway.; 222 }; 223 }; 224 ; 225 // python side class construction, managed by ROOT; 226 gROOT->AddClassGenerator(new TPyClassGenerator);; 227 ; 228 // declare success ...; 229 isInitialized = kTRUE;; 230 return kTRUE;; 231}; 232 ; 233////////////////////////////////////////////////////////////////////////////////; 234/// Import the named python module and create Cling equivalents for its classes; 235/// and methods.; 236 ; 237Bool_t TPython::Import(const char *mod_name); 238{; 239 // setup; 240 if (!Initialize()); 241 return false;; 242 ; 243 PyGILRAII gilRaii;; 244 ; 245 if (!CPyCppyy::Import(mod_name)) {; 246 return false;; 247 }; 248 ; 249 // force creation of the module as a namespace; 250 TClass::GetClass(mod_name, kTRUE);; 251 ; 252 PyObject *modNameObj = PyUnicode_FromString(mod_name);; 253 PyObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPython_8cxx_source.html:7582,alive,alive,7582,doc/master/TPython_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPython_8cxx_source.html,1,['alive'],['alive']
Availability,"8 Classes for finding the roots of a multi-dimensional system.; 49 @ingroup NumAlgo; 50 */; 51 ; 52 /**; 53 Class for Multidimensional root finding algorithms bassed on GSL. This class is used to solve a; 54 non-linear system of equations:; 55 ; 56 f1(x1,....xn) = 0; 57 f2(x1,....xn) = 0; 58 ..................; 59 fn(x1,....xn) = 0; 60 ; 61 See the GSL <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Multidimensional-Root_002dFinding.html""> online manual</A> for; 62 information on the GSL MultiRoot finding algorithms; 63 ; 64 The available GSL algorithms require the derivatives of the supplied functions or not (they are; 65 computed internally by GSL). In the first case the user needs to provide a list of multidimensional functions implementing the; 66 gradient interface (ROOT::Math::IMultiGradFunction) while in the second case it is enough to supply a list of; 67 functions impelmenting the ROOT::Math::IMultiGenFunction interface.; 68 The available algorithms requiring derivatives (see also the GSL; 69 <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Algorithms-using-Derivatives.html"">documentation</A> ); 70 are the followings:; 71 <ul>; 72 <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridSJ</tt> with name <i>""HybridSJ""</i>: modified Powell's hybrid; 73 method as implemented in HYBRJ in MINPACK; 74 <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridJ</tt> with name <i>""HybridJ""</i>: unscaled version of the; 75 previous algorithm</li>; 76 <li><tt>ROOT::Math::GSLMultiRootFinder::kNewton</tt> with name <i>""Newton""</i>: Newton method </li>; 77 <li><tt>ROOT::Math::GSLMultiRootFinder::kGNewton</tt> with name <i>""GNewton""</i>: modified Newton method </li>; 78 </ul>; 79 The algorithms without derivatives (see also the GSL; 80 <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Algorithms-without-Derivatives.html"">documentation</A> ); 81 are the followings:; 82 <ul>; 83 <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridS</tt> with name <i>""HybridS""</i>: same a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html:2738,avail,available,2738,doc/master/GSLMultiRootFinder_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLMultiRootFinder_8h_source.html,1,['avail'],['available']
Availability,"8 TTree *t = fe->GetTree();; 729 if (!t) {; 730 Warning(""AddFriend"",""Unknown TChain %s"",chain);; 731 }; 732 return fe;; 733}; 734 ; 735////////////////////////////////////////////////////////////////////////////////; 736/// Add the whole chain or tree as a friend of this chain.; 737 ; 738TFriendElement* TChain::AddFriend(TTree* chain, const char* alias, bool /* warn = false */); 739{; 740 if (!chain) return nullptr;; 741 if (!fFriends) fFriends = new TList();; 742 TFriendElement *fe = new TFriendElement(this,chain,alias);; 743 R__ASSERT(fe);; 744 ; 745 fFriends->Add(fe);; 746 ; 747 if (fProofChain); 748 // This updates the proxy chain when we will really use PROOF; 749 ResetBit(kProofUptodate);; 750 ; 751 // We need to invalidate the loading of the current tree because its list; 752 // of real friend is now obsolete. It is repairable only from LoadTree; 753 InvalidateCurrentTree();; 754 ; 755 TTree *t = fe->GetTree();; 756 if (!t) {; 757 Warning(""AddFriend"",""Unknown TChain %s"",chain->GetName());; 758 }; 759 return fe;; 760}; 761 ; 762////////////////////////////////////////////////////////////////////////////////; 763/// Browse the contents of the chain.; 764 ; 765void TChain::Browse(TBrowser* b); 766{; 767 TTree::Browse(b);; 768}; 769 ; 770////////////////////////////////////////////////////////////////////////////////; 771/// When closing a file during the chain processing, the file; 772/// may be closed with option ""R"" if flag is set to true.; 773/// by default flag is true.; 774/// When closing a file with option ""R"", all TProcessIDs referenced by this; 775/// file are deleted.; 776/// Calling TFile::Close(""R"") might be necessary in case one reads a long list; 777/// of files having TRef, writing some of the referenced objects or TRef; 778/// to a new file. If the TRef or referenced objects of the file being closed; 779/// will not be referenced again, it is possible to minimize the size; 780/// of the TProcessID data structures in memory by forcing a delete of;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:29082,repair,repairable,29082,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['repair'],['repairable']
Availability,"8 c = 1; print Chisquare/Number of degrees of freedom; 669 e = 1; print errors (if e=1, v must be 1); 670 v = 1; print name/values of parameters; 671 ; 672Example:; 673 ; 674 gStyle->SetOptFit(1011);; 675 ; 676print fit probability, parameter names/values and errors.; 677 ; 6781. When `v = 1` is specified, only the non-fixed parameters are shown.; 6792. When `v = 2` all parameters are shown.; 680 ; 681Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; 682to `gStyle->SetOptFit(111)`; 683 ; 684 ; 685\anchor HP09; 686### The error bars options; 687 ; 688 ; 689| Option | Description |; 690|----------|-------------------------------------------------------------------|; 691| ""E"" | Default. Shows only the error bars, not a marker.|; 692| ""E1"" | Small lines are drawn at the end of the error bars.|; 693| ""E2"" | Error rectangles are drawn.|; 694| ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; 695| ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; 696| ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; 697| ""E5"" | Like E3 but ignore the bins with 0 contents.|; 698| ""E6"" | Like E4 but ignore the bins with 0 contents.|; 699| ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; 700 ; 701Begin_Macro(source); 702{; 703 auto c1 = new TCanvas(""c1"",""c1"",600,400);; 704 auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; 705 for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; 706 gStyle->SetEndErrorSize(3);; 707 gStyle->SetErrorX(1.);; 708 he->SetMarkerStyle(20);; 709 he->Draw(""E1"");; 710}; 711End_Macro; 712 ; 713The options ""E3"" and ""E4"" draw an error band through the end points of the; 714vertical error bars. With ""E4"" the error band is smoothed. Because of the; 715smoothing algorithm used some artefacts may appe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:30683,error,error,30683,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['error'],['error']
Availability,"8 idcur += nbytes;; 1689 }; 1690 if (!forComp); 1691 Printf(""%d/%06d At:%-*lld N=%-8d %-14s"",date,time, nDigits+1, idcur,1,""END"");; 1692 else; 1693 Printf(""At:%-*lld N=%-8d K= O= %-14s"", nDigits+1, idcur,1,""END"");; 1694}; 1695 ; 1696////////////////////////////////////////////////////////////////////////////////; 1697/// Paint all objects in the file.; 1698 ; 1699void TFile::Paint(Option_t *option); 1700{; 1701 GetList()->R__FOR_EACH(TObject,Paint)(option);; 1702}; 1703 ; 1704////////////////////////////////////////////////////////////////////////////////; 1705/// Print all objects in the file.; 1706 ; 1707void TFile::Print(Option_t *option) const; 1708{; 1709 Printf(""TFile: name=%s, title=%s, option=%s"", GetName(), GetTitle(), GetOption());; 1710 GetList()->R__FOR_EACH(TObject,Print)(option);; 1711}; 1712 ; 1713////////////////////////////////////////////////////////////////////////////////; 1714/// Read a buffer from the file at the offset 'pos' in the file.; 1715///; 1716/// Returns kTRUE in case of failure.; 1717/// Compared to ReadBuffer(char*, Int_t), this routine does _not_; 1718/// change the cursor on the physical file representation (fD); 1719/// if the data is in this TFile's cache.; 1720 ; 1721Bool_t TFile::ReadBuffer(char *buf, Long64_t pos, Int_t len); 1722{; 1723 if (IsOpen()) {; 1724 ; 1725 SetOffset(pos);; 1726 ; 1727 Int_t st;; 1728 Double_t start = 0;; 1729 if (gPerfStats) start = TTimeStamp();; 1730 ; 1731 if ((st = ReadBufferViaCache(buf, len))) {; 1732 if (st == 2); 1733 return kTRUE;; 1734 return kFALSE;; 1735 }; 1736 ; 1737 Seek(pos);; 1738 ssize_t siz;; 1739 ; 1740 while ((siz = SysRead(fD, buf, len)) < 0 && GetErrno() == EINTR); 1741 ResetErrno();; 1742 ; 1743 if (siz < 0) {; 1744 SysError(""ReadBuffer"", ""error reading from file %s"", GetName());; 1745 return kTRUE;; 1746 }; 1747 if (siz != len) {; 1748 Error(""ReadBuffer"", ""error reading all requested bytes from file %s, got %ld of %d"",; 1749 GetName(), (Long_t)siz, len);; 1750 return kTRUE;;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:62798,failure,failure,62798,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['failure'],['failure']
Availability,"8 of file RooDataHist.cxx. ◆ set() [1/4]. void RooDataHist::set ; (; const RooArgSet & ; row, . double ; wgt, . double ; wgtErr = -1. . ). Set a bin content. ; Parameters. [in]rowCoordinates to compute the bin from. ; [in]wgtNew bin content. ; [in]wgtErrOptional error of the bin content. . Definition at line 1791 of file RooDataHist.cxx. ◆ set() [2/4]. void RooDataHist::set ; (; const RooArgSet & ; row, . double ; wgt, . double ; wgtErrLo, . double ; wgtErrHi . ). Set a bin content. ; Parameters. [in]rowCoordinates of the bin to be set. ; [in]wgtNew bin content. ; [in]wgtErrLoLow error of the bin content. ; [in]wgtErrHiHigh error of the bin content. . Definition at line 1732 of file RooDataHist.cxx. ◆ set() [3/4]. void RooDataHist::set ; (; double ; wgt, . double ; wgtErr = -1 . ). Write weight into current bin. ; Set bin content of bin that was last loaded with get(std::size_t).; Deprecated:Use set(std::size_t,double,double) ; Parameters. [in]wgtNew bin content. ; [in]wgtErrOptional error of the bin content. . Definition at line 1777 of file RooDataHist.cxx. ◆ set() [4/4]. void RooDataHist::set ; (; std::size_t ; binNumber, . double ; wgt, . double ; wgtErr . ). Set bin content of bin that was last loaded with get(std::size_t). ; Parameters. [in]binNumberOptional bin number to set. If empty, currently active bin is set. ; [in]wgtNew bin content. ; [in]wgtErrError of the new bin content. If the weight need not have an error, use 0. or a negative number. . Definition at line 1754 of file RooDataHist.cxx. ◆ SetName(). void RooDataHist::SetName ; (; const char * ; name). overridevirtual . Change the name of the RooDataHist. ; Reimplemented from RooAbsData.; Definition at line 2230 of file RooDataHist.cxx. ◆ SetNameTitle(). void RooDataHist::SetNameTitle ; (; const char * ; name, . const char * ; title . ). overridevirtual . Change the title of this RooDataHist. ; Reimplemented from RooAbsData.; Definition at line 2242 of file RooDataHist.cxx. ◆ sliceIterator(). TIterato",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:75884,error,error,75884,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['error'],['error']
Availability,"8#endif; 10099 {; 10100 /* Without on-the-fly compression, we know the content-length; 10101 * and we can use ranges (with on-the-fly compression we cannot).; 10102 * So we send these response headers only in this case. */; 10103 char len[32];; 10104 int trunc = 0;; 10105 mg_snprintf(conn, &trunc, len, sizeof(len), ""%"" INT64_FMT, cl);; 10106 ; 10107 if (!trunc) {; 10108 mg_response_header_add(conn, ""Content-Length"", len, -1);; 10109 }; 10110 ; 10111 mg_response_header_add(conn, ""Accept-Ranges"", ""bytes"", -1);; 10112 }; 10113 ; 10114 if (encoding) {; 10115 mg_response_header_add(conn, ""Content-Encoding"", encoding, -1);; 10116 }; 10117 if (range[0] != 0) {; 10118 mg_response_header_add(conn, ""Content-Range"", range, -1);; 10119 }; 10120 ; 10121 /* The code above does not add any header starting with X- to make; 10122 * sure no one of the additional_headers is included twice */; 10123 if ((additional_headers != NULL) && (*additional_headers != 0)) {; 10124 mg_response_header_add_lines(conn, additional_headers);; 10125 }; 10126 ; 10127 /* Send all headers */; 10128 mg_response_header_send(conn);; 10129 ; 10130 if (!is_head_request) {; 10131#if defined(USE_ZLIB); 10132 if (allow_on_the_fly_compression) {; 10133 /* Compress and send */; 10134 send_compressed_data(conn, filep);; 10135 } else; 10136#endif; 10137 {; 10138 /* Send file directly */; 10139 send_file_data(conn, filep, r1, cl);; 10140 }; 10141 }; 10142 (void)mg_fclose(&filep->access); /* ignore error on read only file */; 10143}; 10144 ; 10145 ; 10146int; 10147mg_send_file_body(struct mg_connection *conn, const char *path); 10148{; 10149 struct mg_file file = STRUCT_FILE_INITIALIZER;; 10150 if (!mg_fopen(conn, path, MG_FOPEN_MODE_READ, &file)) {; 10151 return -1;; 10152 }; 10153 fclose_on_exec(&file.access, conn);; 10154 send_file_data(conn, &file, 0, INT64_MAX);; 10155 (void)mg_fclose(&file.access); /* Ignore errors for readonly files */; 10156 return 0; /* >= 0 for OK */; 10157}; 10158#endif /* NO_FILESYSTEMS */;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:291620,error,error,291620,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"8) Retrieve from the cache the binaries associated; with the file; kCp (0x10) Retrieve the files from the cache. Int_t Echo(const TObject* obj); Sends an object to master and workers and expect them to send back a; message with the output of its TObject::Print(). Returns -1 on error, the; number of workers that received the objects on success. Int_t Echo(const char* str); Sends a string to master and workers and expect them to echo it back to; the client via a message. It is a special case of the generic Echo(); that works with TObjects. Returns -1 on error, the number of workers that; received the message on success. Int_t SendObject(const TObject* obj, TProof::ESlaves list = kActive); Send object to master or slave servers. Returns number of slaves object; was sent to, -1 in case of error. Int_t SendPrint(Option_t* option = """"); Send print command to master server. Returns number of slaves message; was sent to. Returns -1 in case of error. void SetLogLevel(Int_t level, UInt_t mask = TProofDebug::kAll); Set server logging level. void SetRealTimeLog(Bool_t on = kTRUE); Switch ON/OFF the real-time logging facility. When this option is; ON, log messages from processing are sent back as they come, instead of; being sent back at the end in one go. This may help debugging or monitoring; in some cases, but, depending on the amount of log, it may have significant; consequencies on the load over the network, so it must be used with care. Int_t SetParallelSilent(Int_t nodes, Bool_t random = kFALSE); Tell PROOF how many slaves to use in parallel. If random is TRUE a random; selection is done (if nodes is less than the available nodes).; Returns the number of parallel slaves. Returns -1 in case of error. Int_t SetParallel(Int_t nodes = -1, Bool_t random = kFALSE); Tell PROOF how many slaves to use in parallel. Returns the number of; parallel slaves. Returns -1 in case of error. Int_t GoMoreParallel(Int_t nWorkersToAdd); Add nWorkersToAdd workers to current list of workers. Thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:67051,mask,mask,67051,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,3,['mask'],['mask']
Availability,8.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95704,error,error,95704,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"8/// Send a buffer headed by a length indicator. Returns length of sent buffer; 3339/// or -1 in case of error.; 3340 ; 3341int TUnixSystem::SendBuf(int sock, const void *buf, int length); 3342{; 3343 Int_t header = htonl(length);; 3344 ; 3345 if (UnixSend(sock, &header, sizeof(header), 0) < 0) {; 3346 Error(""SendBuf"", ""cannot send header"");; 3347 return -1;; 3348 }; 3349 if (length > 0) {; 3350 if (UnixSend(sock, buf, length, 0) < 0) {; 3351 Error(""SendBuf"", ""cannot send buffer"");; 3352 return -1;; 3353 }; 3354 }; 3355 return length;; 3356}; 3357 ; 3358////////////////////////////////////////////////////////////////////////////////; 3359/// Receive exactly length bytes into buffer. Use opt to receive out-of-band; 3360/// data or to have a peek at what is in the buffer (see TSocket). Buffer; 3361/// must be able to store at least length bytes. Returns the number of; 3362/// bytes received (can be 0 if other side of connection was closed) or -1; 3363/// in case of error, -2 in case of MSG_OOB and errno == EWOULDBLOCK, -3; 3364/// in case of MSG_OOB and errno == EINVAL and -4 in case of kNoBlock and; 3365/// errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer; 3366/// (EPIPE || ECONNRESET).; 3367 ; 3368int TUnixSystem::RecvRaw(int sock, void *buf, int length, int opt); 3369{; 3370 int flag;; 3371 ; 3372 switch (opt) {; 3373 case kDefault:; 3374 flag = 0;; 3375 break;; 3376 case kOob:; 3377 flag = MSG_OOB;; 3378 break;; 3379 case kPeek:; 3380 flag = MSG_PEEK;; 3381 break;; 3382 case kDontBlock:; 3383 flag = -1;; 3384 break;; 3385 default:; 3386 flag = 0;; 3387 break;; 3388 }; 3389 ; 3390 int n;; 3391 if ((n = UnixRecv(sock, buf, length, flag)) <= 0) {; 3392 if (n == -1 && GetErrno() != EINTR); 3393 Error(""RecvRaw"", ""cannot receive buffer"");; 3394 return n;; 3395 }; 3396 return n;; 3397}; 3398 ; 3399////////////////////////////////////////////////////////////////////////////////; 3400/// Send exactly length bytes from buffer. Use opt to send out-of-band; 34",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:107634,error,error,107634,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,"80 ; 281 ; 282////////////////////////////////////////////////////////////////////////////////; 283/// Returns the Z maximum with errors.; 284 ; 285Double_t TGraph2DErrors::GetZmaxE() const; 286{; 287 Double_t v = fZ[0]+fEZ[0];; 288 for (Int_t i=1; i<fNpoints; i++) if (fZ[i]+fEZ[i]>v) v=fZ[i]+fEZ[i];; 289 return v;; 290}; 291 ; 292 ; 293////////////////////////////////////////////////////////////////////////////////; 294/// Returns the Z minimum with errors.; 295 ; 296Double_t TGraph2DErrors::GetZminE() const; 297{; 298 Double_t v = fZ[0]-fEZ[0];; 299 for (Int_t i=1; i<fNpoints; i++) if (fZ[i]-fEZ[i]<v) v=fZ[i]-fEZ[i];; 300 return v;; 301}; 302 ; 303 ; 304////////////////////////////////////////////////////////////////////////////////; 305/// Print 2D graph and errors values.; 306 ; 307void TGraph2DErrors::Print(Option_t *) const; 308{; 309 for (Int_t i = 0; i < fNpoints; i++) {; 310 printf(""x[%d]=%g, y[%d]=%g, z[%d]=%g, ex[%d]=%g, ey[%d]=%g, ez[%d]=%g\n"", i, fX[i], i, fY[i], i, fZ[i], i, fEX[i], i, fEY[i], i, fEZ[i]);; 311 }; 312}; 313 ; 314////////////////////////////////////////////////////////////////////////////////; 315/// Multiply the values and errors of a TGraph2DErrors by a constant c1.; 316///; 317/// If option contains ""x"" the x values and errors are scaled; 318/// If option contains ""y"" the y values and errors are scaled; 319/// If option contains ""z"" the z values and errors are scaled; 320/// If option contains ""xyz"" all three x, y and z values and errors are scaled; 321 ; 322void TGraph2DErrors::Scale(Double_t c1, Option_t *option); 323{; 324 TGraph2D::Scale(c1, option);; 325 TString opt = option; opt.ToLower();; 326 if (opt.Contains(""x"") && GetEX()) {; 327 for (Int_t i=0; i<GetN(); i++); 328 GetEX()[i] *= c1;; 329 }; 330 if (opt.Contains(""y"") && GetEY()) {; 331 for (Int_t i=0; i<GetN(); i++); 332 GetEY()[i] *= c1;; 333 }; 334 if (opt.Contains(""z"") && GetEZ()) {; 335 for (Int_t i=0; i<GetN(); i++); 336 GetEZ()[i] *= c1;; 337 }; 338}; 339 ; 340/////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:9327,error,errors,9327,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['error'],['errors']
Availability,"80,""13"");; latex.DrawLatex(.1,.55,""12"");; latex.DrawLatex(.1,.35,""11"");; latex.DrawLatex(.1,.18,""10"");; return Tlva;; }; TAttText::SetTextAlignvirtual void SetTextAlign(Short_t align=11)Set the text alignment.Definition TAttText.h:42; TAttText::SetTextFontvirtual void SetTextFont(Font_t tfont=62)Set the text font.Definition TAttText.h:46; TAttText::SetTextSizevirtual void SetTextSize(Float_t tsize=1)Set the text size.Definition TAttText.h:47; TCanvasThe Canvas class.Definition TCanvas.h:23; TLatexTo draw Mathematical Formula.Definition TLatex.h:18; TLatex::DrawLatexTLatex * DrawLatex(Double_t x, Double_t y, const char *text)Make a copy of this object with the new parameters And copy object attributes.Definition TLatex.cxx:1943. Character Adjustment; The two commands #kern and #lower enable a better control over character placement. The command #kern[(Float_t)dx]{text} moves the output string horizontally by the fraction dx of its length. Similarly, #lower[(Float_t)dy]{text} shifts the text up or down by the fraction dy of its height.; Examples:. Italic and Boldface; Text can be turned italic or boldface using the commands #it and #bf.; Examples:. Examples; {; TCanvas ex1(""ex1"",""Latex"",500,600);; TLatex Tl;; Tl.SetTextAlign(12);; Tl.SetTextSize(0.04);; Tl.DrawLatex(0.1,0.8,""1) C(x) = d #sqrt{#frac{2}{#lambdaD}} #int^{x}_{0}cos(#frac{#pi}{2}t^{2})dt"");; Tl.DrawLatex(0.1,0.6,""2) C(x) = d #sqrt{#frac{2}{#lambdaD}} #int^{x}cos(#frac{#pi}{2}t^{2})dt"");; Tl.DrawLatex(0.1,0.4,""3) R = |A|^{2} = #frac{1}{2}(#[]{#frac{1}{2}+C(V)}^{2}+#[]{#frac{1}{2}+S(V)}^{2})"");; Tl.DrawLatex(0.1,0.2,""4) F(t) = #sum_{i=-#infty}^{#infty}A(i)cos#[]{#frac{i}{t+i}}"");; return ex1;; }. {; TCanvas ex2(""ex2"",""Latex"",500,300);; TLatex Tl;; Tl.SetTextAlign(23);; Tl.SetTextSize(0.08);; Tl.DrawLatex(0.5,0.95,""e^{+}e^{-}#rightarrowZ^{0}#rightarrowI#bar{I}, q#bar{q}"");; Tl.DrawLatex(0.5,0.75,""|#vec{a}#bullet#vec{b}|=#Sigmaa^{i}_{jk}+b^{bj}_{i}"");; Tl.DrawLatex(0.5,0.5,""i(#partial_{#mu}#bar{#psi}#gamma^{#m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLatex.html:5958,down,down,5958,doc/master/classTLatex.html,https://root.cern,https://root.cern/doc/master/classTLatex.html,1,['down'],['down']
Availability,"80,2,0.7,-2,0.5};; f2->SetParameters(params2);; TH2F *h2stb = new TH2F(""h2stb"",""h2stb"",20,-4,4,20,-4,4);; h2stb->SetFillColor(46);; h2stb->FillRandom(""f2"",3000);; a->Add(h2sta);; a->Add(h2stb);; a->Draw();; return cst;; }; The option ""nostackb"" allows to draw the histograms next to each; other as bar charts:. Picture; Source. {; TCanvas *cst0 = new TCanvas(""cst0"",""cst0"",600,400);; THStack *hs = new THStack(""hs"",""Stacked 1D histograms: option #font[82]{\""nostackb\""}"");. TH1F *h1 = new TH1F(""h1"",""h1"",10,-4,4);; h1->FillRandom(""gaus"",20000);; h1->SetFillColor(kRed);; hs->Add(h1);. TH1F *h2 = new TH1F(""h2"",""h2"",10,-4,4);; h2->FillRandom(""gaus"",15000);; h2->SetFillColor(kBlue);; hs->Add(h2);. TH1F *h3 = new TH1F(""h3"",""h3"",10,-4,4);; h3->FillRandom(""gaus"",10000);; h3->SetFillColor(kGreen);; hs->Add(h3);. hs->Draw(""nostackb"");; return cst0;; }; If at least one of the histograms in the stack has errors, the whole stack is; visualized by default with error bars. To visualize it without errors the; option ""HIST"" should be used. Picture; Source. {; TCanvas *cst1 = new TCanvas(""cst1"",""cst1"",700,400);; cst1->Divide(2,1);. TH1F * hst11 = new TH1F(""hst11"", """", 20, -10, 10);; hst11->Sumw2();; hst11->FillRandom(""gaus"", 1000);; hst11->SetFillColor(kViolet);; hst11->SetLineColor(kViolet);. TH1F * hst12 = new TH1F(""hst12"", """", 20, -10, 10);; hst12->FillRandom(""gaus"", 500);; hst12->SetFillColor(kBlue);; hst12->SetLineColor(kBlue);. THStack st1(""st1"", ""st1"");; st1.Add(hst11);; st1.Add(hst12);. cst1->cd(1); st1.Draw();; cst1->cd(2); st1.Draw(""hist"");. return cst1;; }; Drawing of 3D implicit functions; 3D implicit functions (TF3) can be drawn as iso-surfaces.; The implicit function f(x,y,z) = 0 is drawn in cartesian coordinates.; In the following example the options ""FB"" and ""BB"" suppress the; ""Front Box"" and ""Back Box"" around the plot. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",600,400);; TF3 *f3 = new TF3(""f3"",""sin(x*x+y*y+z*z-36)"",-2,2,-2,2,-2,2);; f3->SetClippingBoxOn(0,0,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THistPainter.html:76686,error,errors,76686,root/html604/THistPainter.html,https://root.cern,https://root.cern/root/html604/THistPainter.html,1,['error'],['errors']
Availability,"807 of file RDataFrame.cxx. ◆ RDataFrame() [6/10]. ROOT::RDataFrame::RDataFrame ; (; ULong64_t ; numEntries). Build a dataframe that generates numEntries entries. ; Parameters. [in]numEntriesThe number of entries to generate. An empty-source dataframe constructed with a number of entries will generate those entries on the fly when some action is triggered, and it will do so for all the previously-defined columns. See alsoROOT::RDF::RInterface for the documentation of the methods available. ; Definition at line 1820 of file RDataFrame.cxx. ◆ RDataFrame() [7/10]. ROOT::RDataFrame::RDataFrame ; (; std::unique_ptr< ROOT::RDF::RDataSource > ; ds, . const ColumnNames_t & ; defaultColumns = {} . ). Build dataframe associated to data source. ; Parameters. [in]dsThe data source object. ; [in]defaultColumnsCollection of default column names to fall back to when none is specified. A dataframe associated to a data source will query it to access column values. See alsoROOT::RDF::RInterface for the documentation of the methods available. ; Definition at line 1833 of file RDataFrame.cxx. ◆ RDataFrame() [8/10]. ROOT::RDataFrame::RDataFrame ; (; ROOT::RDF::Experimental::RDatasetSpec ; spec). Build dataframe from an RDatasetSpec object. ; Parameters. [in]specThe dataset specification object. A dataset specification includes trees and file names, as well as an optional friend list and/or entry range. Example usage from Python:; spec = (; ROOT.RDF.Experimental.RDatasetSpec(); .AddSample((""data"", ""tree"", ""file.root"")); .WithGlobalFriends(""friendTree"", ""friend.root"", ""alias""); .WithGlobalRange((100, 200)); ); df = ROOT.RDataFrame(spec); ROOT::RDF::Experimental::RDatasetSpecThe dataset specification for RDataFrame.Definition RDatasetSpec.hxx:47; See also ROOT::RDataFrame::FromSpec(). ; Definition at line 1857 of file RDataFrame.cxx. ◆ RDataFrame() [9/10]. ROOT::RDataFrame::RDataFrame ; (; const RDataFrame & ; ). default . ◆ RDataFrame() [10/10]. ROOT::RDataFrame::RDataFrame ; (; RDataFram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame.html:117126,avail,available,117126,doc/master/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame.html,1,['avail'],['available']
Availability,"81 h_sum->Draw();; 82 printf(""Time to fit using ROOT TF1Normsum: "");; 83 w.Print();; 84 ; 85 // test if parameters are fine; 86 std::vector<double> pref = {nsig, nbkg, signal_mean};; 87 for (unsigned int i = 0; i < pref.size(); ++i) {; 88 if (!TMath::AreEqualAbs(pref[i], f_sum->GetParameter(i), f_sum->GetParError(i) * 10.)); 89 Error(""testFitNormSum"", ""Difference found in fitted %s - difference is %g sigma"", f_sum->GetParName(i),; 90 (f_sum->GetParameter(i) - pref[i]) / f_sum->GetParError(i));; 91 }; 92 ; 93 gStyle->SetOptStat(0);; 94 // add parameters; 95 auto t1 = new TLatex(; 96 -2.5, 300000, TString::Format(""%s = %8.0f #pm %4.0f"", ""NSignal"", f_sum->GetParameter(0), f_sum->GetParError(0)));; 97 auto t2 = new TLatex(; 98 -2.5, 270000, TString::Format(""%s = %8.0f #pm %4.0f"", ""Nbackgr"", f_sum->GetParameter(1), f_sum->GetParError(1)));; 99 t1->Draw();; 100 t2->Draw();; 101}; MinimizerOptions.h; TCanvas.h; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; TF1NormSum.h; TF1.h; TFitResult.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t resultDefinition TGWin32VirtualXProxy.cxx:174; TH1.h; TLatex.h; TMath.h; TStopwatch.h; TStyle.h; gStyleR__EXTERN TStyle * gStyleDefinition TStyle.h:436; ROOT::Math::MinimizerOptions::SetDefaultMinimizerstatic void SetDefaultMinimizer(const char *type, const char *algo=nullptr)Set the default Minimizer type and corresponding algorithms.Definition MinimizerOptions.cxx:43; TCanvasThe Canvas class.Definition TCanvas.h:23; TF1NormSumClass adding two functions: c1*f1+c2*f2.Definition TF1NormSum.h:19; TF1NormSum::GetParNameconst char * GetParName(Int_t ipar) constDefinition TF1NormSum.h:66; TF1Norm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitNormSum_8C_source.html:3974,error,error,3974,doc/master/fitNormSum_8C_source.html,https://root.cern,https://root.cern/doc/master/fitNormSum_8C_source.html,1,['error'],['error']
Availability,"81 if (!gSystem->GetPathInfo(cachetagfile, &id, &size, &flags, &modtime)) {; 4682 // check the time passed since last cache cleanup; 4683 Long_t lastcleanuptime = ((Long_t)time(0) - modtime);; 4684 if (lastcleanuptime < cleanupinterval) {; 4685 ::Info(""TFile::ShrinkCacheFileDir"", ""clean-up is skipped - last cleanup %lu seconds ago - you requested %lu"", lastcleanuptime, cleanupinterval);; 4686 return kTRUE;; 4687 }; 4688 }; 4689 ; 4690 // (re-)create the cache tag file; 4691 cachetagfile += ""?filetype=raw"";; 4692 TFile *tagfile = nullptr;; 4693 ; 4694 if (!(tagfile = TFile::Open(cachetagfile, ""RECREATE""))) {; 4695 ::Error(""TFile::ShrinkCacheFileDir"", ""cannot create the cache tag file %s"", cachetagfile.Data());; 4696 return kFALSE;; 4697 }; 4698 ; 4699 // the shortest garbage collector in the world - one long line of PERL - unlinks files only,; 4700 // if there is a symbolic link with '.ROOT.cachefile' for safety ;-); 4701 ; 4702 TString cmd;; 4703#if defined(R__WIN32); 4704 cmd = ""echo <TFile::ShrinkCacheFileDir>: cleanup to be implemented"";; 4705#elif defined(R__MACOSX); 4706 cmd.Form(""perl -e 'my $cachepath = \""%s\""; my $cachesize = %lld;my $findcommand=\""find $cachepath -type f -exec stat -f \\\""\\%%a::\\%%N::\\%%z\\\"" \\{\\} \\\\\\;\"";my $totalsize=0;open FIND, \""$findcommand | sort -k 1 |\"";while (<FIND>) { my ($accesstime, $filename, $filesize) = split \""::\"",$_; $totalsize += $filesize;if ($totalsize > $cachesize) {if ( ( -e \""${filename}.ROOT.cachefile\"" ) || ( -e \""${filename}\"" ) ) {unlink \""$filename.ROOT.cachefile\"";unlink \""$filename\"";}}}close FIND;' "", fgCacheFileDir.Data(),shrinksize);; 4707#else; 4708 cmd.Form(""perl -e 'my $cachepath = \""%s\""; my $cachesize = %lld;my $findcommand=\""find $cachepath -type f -exec stat -c \\\""\\%%x::\\%%n::\\%%s\\\"" \\{\\} \\\\\\;\"";my $totalsize=0;open FIND, \""$findcommand | sort -k 1 |\"";while (<FIND>) { my ($accesstime, $filename, $filesize) = split \""::\"",$_; $totalsize += $filesize;if ($totalsize > $cachesize) {if ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:172013,echo,echo,172013,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['echo'],['echo']
Availability,"814}; 3815 ; 3816 ///////////////////////////////////////////////////////////////////////////////; 3817 /// Called by TKey and TObject::Clone to automatically add us to a directory; 3818 /// when we are read from a file.; 3819 ; 3820void TTree::DirectoryAutoAdd(TDirectory* dir); 3821{; 3822 if (fDirectory == dir) return;; 3823 if (fDirectory) {; 3824 fDirectory->Remove(this);; 3825 // Delete or move the file cache if it points to this Tree; 3826 TFile *file = fDirectory->GetFile();; 3827 MoveReadCache(file,dir);; 3828 }; 3829 fDirectory = dir;; 3830 TBranch* b = nullptr;; 3831 TIter next(GetListOfBranches());; 3832 while((b = (TBranch*) next())) {; 3833 b->UpdateFile();; 3834 }; 3835 if (fBranchRef) {; 3836 fBranchRef->UpdateFile();; 3837 }; 3838 if (fDirectory) fDirectory->Append(this);; 3839}; 3840 ; 3841////////////////////////////////////////////////////////////////////////////////; 3842/// Draw expression varexp for specified entries.; 3843///; 3844/// \return -1 in case of error or number of selected events in case of success.; 3845///; 3846/// This function accepts TCut objects as arguments.; 3847/// Useful to use the string operator +; 3848///; 3849/// Example:; 3850///; 3851/// ~~~ {.cpp}; 3852/// ntuple.Draw(""x"",cut1+cut2+cut3);; 3853/// ~~~; 3854 ; 3855 ; 3856Long64_t TTree::Draw(const char* varexp, const TCut& selection, Option_t* option, Long64_t nentries, Long64_t firstentry); 3857{; 3858 return TTree::Draw(varexp, selection.GetTitle(), option, nentries, firstentry);; 3859}; 3860 ; 3861/////////////////////////////////////////////////////////////////////////////////////////; 3862/// \brief Draw expression varexp for entries and objects that pass a (optional) selection.; 3863///; 3864/// \return -1 in case of error or number of selected events in case of success.; 3865///; 3866/// \param [in] varexp; 3867/// \parblock; 3868/// A string that takes one of these general forms:; 3869/// - ""e1"" produces a 1-d histogram (TH1F) of expression ""e1""; 3870/// - ""e1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:151026,error,error,151026,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['error'],['error']
Availability,"81{; 582 // a helper to delete objects allocated before jitting, so that the jitter can share data with lazily jitted code; 583 auto doDeletes = [&] {; 584 delete[] colsPtr;; 585 delete helperArgOnHeap;; 586 delete wkJittedActionOnHeap;; 587 // colRegister must be deleted before prevNodeOnHeap because their dtor needs the RLoopManager to be alive; 588 // and prevNodeOnHeap is what keeps it alive if the rest of the computation graph is already out of scope; 589 delete colRegister;; 590 delete prevNodeOnHeap;; 591 };; 592 ; 593 if (wkJittedActionOnHeap->expired()) {; 594 // The branch of the computation graph that needed this jitted variation went out of scope between the type; 595 // jitting was booked and the time jitting actually happened. Nothing to do other than cleaning up.; 596 doDeletes();; 597 return;; 598 }; 599 ; 600 const ColumnNames_t cols(colsPtr, colsPtr + colsSize);; 601 ; 602 auto jittedActionOnHeap = wkJittedActionOnHeap->lock();; 603 ; 604 // if we are here it means we are jitting, if we are jitting the loop manager must be alive; 605 auto &prevNodePtr = *prevNodeOnHeap;; 606 auto &loopManager = *prevNodePtr->GetLoopManagerUnchecked();; 607 using ColTypes_t = TypeList<ColTypes...>;; 608 constexpr auto nColumns = ColTypes_t::list_size;; 609 auto ds = loopManager.GetDataSource();; 610 if (ds != nullptr); 611 AddDSColumns(cols, loopManager, *ds, ColTypes_t(), *colRegister);; 612 ; 613 auto actionPtr = BuildAction<ColTypes...>(cols, std::move(*helperArgOnHeap), nSlots, std::move(prevNodePtr),; 614 ActionTag{}, *colRegister);; 615 jittedActionOnHeap->SetAction(std::move(actionPtr));; 616 ; 617 doDeletes();; 618}; 619 ; 620/// The contained `type` alias is `double` if `T == RInferredType`, `U` if `T == std::container<U>`, `T` otherwise.; 621template <typename T, bool Container = IsDataContainer<T>::value && !std::is_same<T, std::string>::value>; 622struct RMinReturnType {; 623 using type = T;; 624};; 625 ; 626template <>; 627struct RMinReturnType<RInferred",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/InterfaceUtils_8hxx_source.html:27574,alive,alive,27574,doc/master/InterfaceUtils_8hxx_source.html,https://root.cern,https://root.cern/doc/master/InterfaceUtils_8hxx_source.html,1,['alive'],['alive']
Availability,"82 void *dir = gSystem->OpenDirectory(dirname);; 2783 TString dirpath;; 2784 ; 2785 if (opt.Contains(""update"")) {; 2786 // check that directory exist, if not create it; 2787 if (!dir) {; 2788 gSystem->mkdir(dirname);; 2789 }; 2790 ; 2791 } else if (opt.Contains(""recreate"")) {; 2792 // check that directory exist, if not create it; 2793 if (!dir) {; 2794 if (gSystem->mkdir(dirname) < 0) {; 2795 Error(""MakeProject"",""cannot create directory '%s'"",dirname);; 2796 return;; 2797 }; 2798 }; 2799 // clear directory; 2800 while (dir) {; 2801 const char *afile = gSystem->GetDirEntry(dir);; 2802 if (!afile) break;; 2803 if (strcmp(afile,""."") == 0) continue;; 2804 if (strcmp(afile,"".."") == 0) continue;; 2805 dirpath.Form(""%s/%s"",dirname,afile);; 2806 gSystem->Unlink(dirpath);; 2807 }; 2808 ; 2809 } else {; 2810 // new is assumed; 2811 // if directory already exist, print error message and return; 2812 if (dir) {; 2813 Error(""MakeProject"",""cannot create directory %s, already existing"",dirname);; 2814 gSystem->FreeDirectory(dir);; 2815 return;; 2816 }; 2817 if (gSystem->mkdir(dirname) < 0) {; 2818 Error(""MakeProject"",""cannot create directory '%s'"",dirname);; 2819 return;; 2820 }; 2821 }; 2822 if (dir) {; 2823 gSystem->FreeDirectory(dir);; 2824 }; 2825 }; 2826 Bool_t genreflex = opt.Contains(""genreflex"");; 2827 ; 2828 // we are now ready to generate the classes; 2829 // loop on all TStreamerInfo; 2830 TList *filelist = (TList*)GetStreamerInfoCache();; 2831 if (filelist) filelist = (TList*)filelist->Clone();; 2832 if (!filelist) {; 2833 Error(""MakeProject"",""file %s has no StreamerInfo"", GetName());; 2834 return;; 2835 }; 2836 ; 2837 TString clean_dirname(dirname);; 2838 if (makepar) clean_dirname.Form(""%s/%s"", pardir.Data(), parname.Data());; 2839 if (clean_dirname[clean_dirname.Length()-1]=='/') {; 2840 clean_dirname.Remove(clean_dirname.Length()-1);; 2841 } else if (clean_dirname[clean_dirname.Length()-1]=='\\') {; 2842 clean_dirname.Remove(clean_dirname.Length()-1);; 2843 if (clea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:101328,error,error,101328,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['error'],['error']
Availability,"821e+00 3.32869e-02 2.39024e-04 2.42669e-02; 5 p4 2.94271e+00 2.42010e-02 -1.88552e-04 2.78529e-03; 6 p5 2.63145e+01 2.69272e-01 -2.31447e-03 -2.60063e-03; 7 p6 1.19850e+01 3.51596e-02 4.24094e-04 -3.93616e-02; 8 p7 2.90086e+00 2.64547e-02 8.06260e-05 -5.19624e-03; 9 p8 1.09762e+01 1.47334e-02 -6.74372e-05 -1.09627e-02; 10 p9 1.95760e+00 1.14466e-02 2.85422e-05 -1.15591e-01; Chi2 Fit = 4015.63 ndf = 3921 3921; (int) 0; ; #include ""TH2D.h""; #include ""TF2.h""; #include ""TCanvas.h""; #include ""TStyle.h""; #include ""TRandom3.h""; #include ""TVirtualFitter.h""; #include ""TList.h""; ; #include <vector>; #include <map>; #include <iostream>; ; double gauss2D(double *x, double *par) {; double z1 = double((x[0]-par[1])/par[2]);; double z2 = double((x[1]-par[3])/par[4]);; return par[0]*exp(-0.5*(z1*z1+z2*z2));; }; double my2Dfunc(double *x, double *par) {; double *p1 = &par[0];; double *p2 = &par[5];; return gauss2D(x,p1) + gauss2D(x,p2);; }; ; ; ; // data need to be globals to be visible by fcn; ; std::vector<std::pair<double, double> > coords;; std::vector<double > values;; std::vector<double > errors;; ; void myFcn(int & /*nPar*/, double * /*grad*/ , double &fval, double *p, int /*iflag */ ); {; int n = coords.size();; double chi2 = 0;; double tmp,x[2];; for (int i = 0; i <n; ++i ) {; x[0] = coords[i].first;; x[1] = coords[i].second;; tmp = ( values[i] - my2Dfunc(x,p))/errors[i];; chi2 += tmp*tmp;; }; fval = chi2;; }; TRandom3 rndm;; void FillHisto(TH2D * h, int n, double * p) {; ; ; const double mx1 = p[1];; const double my1 = p[3];; const double sx1 = p[2];; const double sy1 = p[4];; const double mx2 = p[6];; const double my2 = p[8];; const double sx2 = p[7];; const double sy2 = p[9];; //const double w1 = p[0]*sx1*sy1/(p[5]*sx2*sy2);; const double w1 = 0.5;; ; double x, y;; for (int i = 0; i < n; ++i) {; // generate randoms with larger Gaussians; rndm.Rannor(x,y);; ; double r = rndm.Rndm(1);; if (r < w1) {; x = x*sx1 + mx1;; y = y*sy1 + my1;; }; else {; x = x*sx2 + mx2;; y = y*sy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TwoHistoFit2D_8C.html:2337,error,errors,2337,doc/master/TwoHistoFit2D_8C.html,https://root.cern,https://root.cern/doc/master/TwoHistoFit2D_8C.html,1,['error'],['errors']
Availability,82242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0201368 0.00176313 43540.5 4; : 805 Minimum Test error found - save the configuration ; : 805 | 10.3447 13.9911 0.0201319 0.00182751 43705.3 0; : 806 | 10.3558 15.0191 0.0200537 0.00175652 43722.7 1; : 807 Minimum Test error found - save the configuration ; : 807 | 9.87362 13.4104 0.0202002 0.0018848 43679 0; : 808 | 9.75883 13.5009 0.0202529 0.00175832 43255.9 1; : 809 | 9.54989 13.8103 0.0201225 0.00175709 43560.3 2; : 810 Minimum Test error found - save the configuration ; : 810 | 9.43647 13.1509 0.0201534 0.00182442 43646.8 0; : 811 | 9.40272 13.8504 0.0200559 0.00175676 43717.9 1; : 812 Minimum Test error found - save the configuration ; : 812 | 9.42328 13.0239 0.0202708 0.00183859 43402.3 0; : 813 | 9.26754 13.347 0.0200488 0.00175838 43738.7 1; : 814 | 9.30693 13.2737 0.0200298 0.0017551 43776.4 2; : 815 | 9.2453 13.4411 0.0200383 0.0017608 43769.8 3; : 816 Minimum Test error found - save the configuration ; : 816 | 8.97729 12.8621 0.0200894 0.00181862 43785.8 0; : 817 | 9.05512 13.256 0.0200147 0.0017603 43825 1; : 818 Minimum Test error found - save the configuration ; : 818 | 8.88115 12.6122 0.0201221 0.00182968 43733.9 0; : 819 | 8.6338 13.2547 0.0200872 0.00177159 43678.6 1; : 820 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:98909,error,error,98909,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"825 ; 1826#ifdef G__WIN32; 1827 ; 1828 char leftname[_MAX_PATH];; 1829 char rightname[_MAX_PATH];; 1830 _fullpath( leftname, left, _MAX_PATH );; 1831 _fullpath( rightname, right, _MAX_PATH );; 1832 return ((stricmp(leftname, rightname)==0));; 1833#else; 1834 struct stat rightBuf;; 1835 struct stat leftBuf;; 1836 return ( ( 0 == stat( left, & leftBuf ) ); 1837 && ( 0 == stat( right, & rightBuf ) ); 1838 && ( leftBuf.st_dev == rightBuf.st_dev ) // Files on same device; 1839 && ( leftBuf.st_ino == rightBuf.st_ino ) // Files on same inode (but this is not unique on AFS so we need the next 2 test; 1840 && ( leftBuf.st_size == rightBuf.st_size ) // Files of same size; 1841 && ( leftBuf.st_mtime == rightBuf.st_mtime ) // Files modified at the same time; 1842 );; 1843#endif; 1844}; 1845 ; 1846 ; 1847////////////////////////////////////////////////////////////////////////////////; 1848/// Load a shared library. Returns 0 on successful loading, 1 in; 1849/// case lib was already loaded, -1 in case lib does not exist; 1850/// or in case of error and -2 in case of version mismatch.; 1851/// When entry is specified the loaded lib is; 1852/// searched for this entry point (return -1 when entry does not exist,; 1853/// 0 otherwise). When the system flag is kTRUE, the library is considered; 1854/// a permanent system library that should not be unloaded during the; 1855/// course of the session.; 1856 ; 1857int TSystem::Load(const char *module, const char *entry, Bool_t system); 1858{; 1859 // don't load libraries that have already been loaded; 1860 TString libs( GetLibraries() );; 1861 TString l(BaseName(module));; 1862 ; 1863 Ssiz_t idx = l.Last('.');; 1864 if (idx != kNPOS) {; 1865 l.Remove(idx+1);; 1866 }; 1867 for (idx = libs.Index(l); idx != kNPOS; idx = libs.Index(l,idx+1)) {; 1868 // The libs contains the sub-string 'l', let's make sure it is; 1869 // not just part of a larger name.; 1870 if (idx == 0 || libs[idx-1] == '/' || libs[idx-1] == '\\') {; 1871 Ssiz_t len = libs.Len",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:59650,error,error,59650,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['error'],['error']
Availability,"827}; 2828 ; 2829////////////////////////////////////////////////////////////////////////////////; 2830/// Unload a shared library.; 2831 ; 2832void TUnixSystem::Unload(const char *module); 2833{; 2834 if (module) { TSystem::Unload(module); }; 2835}; 2836 ; 2837////////////////////////////////////////////////////////////////////////////////; 2838/// List symbols in a shared library.; 2839 ; 2840void TUnixSystem::ListSymbols(const char * /*module*/, const char * /*regexp*/); 2841{; 2842 Error(""ListSymbols"", ""not yet implemented"");; 2843}; 2844 ; 2845////////////////////////////////////////////////////////////////////////////////; 2846/// List all loaded shared libraries.; 2847 ; 2848void TUnixSystem::ListLibraries(const char *regexp); 2849{; 2850 TSystem::ListLibraries(regexp);; 2851}; 2852 ; 2853////////////////////////////////////////////////////////////////////////////////; 2854/// Get list of shared libraries loaded at the start of the executable.; 2855/// Returns 0 in case list cannot be obtained or in case of error.; 2856 ; 2857const char *TUnixSystem::GetLinkedLibraries(); 2858{; 2859 static TString linkedLibs;; 2860 static Bool_t once = kFALSE;; 2861 ; 2862 R__LOCKGUARD2(gSystemMutex);; 2863 ; 2864 if (!linkedLibs.IsNull()); 2865 return linkedLibs;; 2866 ; 2867 if (once); 2868 return nullptr;; 2869 ; 2870#if !defined(R__MACOSX); 2871 const char *exe = GetExePath();; 2872 if (!exe || !*exe); 2873 return nullptr;; 2874#endif; 2875 ; 2876#if defined(R__MACOSX); 2877 DylibAdded(0, 0);; 2878 linkedLibs = gLinkedDylibs;; 2879#if 0; 2880 FILE *p = OpenPipe(TString::Format(""otool -L %s"", exe), ""r"");; 2881 TString otool;; 2882 while (otool.Gets(p)) {; 2883 TString delim("" \t"");; 2884 TObjArray *tok = otool.Tokenize(delim);; 2885 TString dylib = ((TObjString*)tok->At(0))->String();; 2886 if (dylib.EndsWith("".dylib"") && !dylib.Contains(""/libSystem.B.dylib"")) {; 2887 if (!linkedLibs.IsNull()); 2888 linkedLibs += "" "";; 2889 linkedLibs += dylib;; 2890 }; 2891 delete tok;; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:90430,error,error,90430,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,83.7 0; : 681 Minimum Test error found - save the configuration ; : 681 | 42.0593 35.186 0.0205402 0.00185408 42812.5 0; : 682 Minimum Test error found - save the configuration ; : 682 | 41.3592 34.9319 0.0201181 0.00182063 43721.9 0; : 683 | 40.8775 34.9951 0.020058 0.00175108 43699.3 1; : 684 Minimum Test error found - save the configuration ; : 684 | 40.654 34.3931 0.0201589 0.00183818 43666.4 0; : 685 Minimum Test error found - save the configuration ; : 685 | 40.0613 33.8904 0.0201577 0.00183348 43658.1 0; : 686 | 39.3281 34.3645 0.0200576 0.00176772 43739.9 1; : 687 | 38.8187 34.1117 0.0201676 0.00177122 43486.9 2; : 688 Minimum Test error found - save the configuration ; : 688 | 38.3466 33.422 0.0201552 0.00185044 43704.5 0; : 689 Minimum Test error found - save the configuration ; : 689 | 37.998 33.2339 0.0201139 0.00182328 43738.2 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:88423,error,error,88423,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"836 ; 837Double_t TProfile::GetBinEntries(Int_t bin) const; 838{; 839 if (fBuffer) ((TProfile*)this)->BufferEmpty();; 840 ; 841 if (bin < 0 || bin >= fNcells) return 0;; 842 return fBinEntries.fArray[bin];; 843}; 844 ; 845////////////////////////////////////////////////////////////////////////////////; 846/// Return bin effective entries for a weighted filled Profile histogram.; 847/// In case of an unweighted profile, it is equivalent to the number of entries per bin; 848/// The effective entries is defined as the square of the sum of the weights divided by the; 849/// sum of the weights square.; 850/// TProfile::Sumw2() must be called before filling the profile with weights.; 851/// Only by calling this method the sum of the square of the weights per bin is stored.; 852 ; 853Double_t TProfile::GetBinEffectiveEntries(Int_t bin) const; 854{; 855 return TProfileHelper::GetBinEffectiveEntries((TProfile*)this, bin);; 856}; 857 ; 858////////////////////////////////////////////////////////////////////////////////; 859/// Return bin error of a Profile histogram; 860///; 861/// Computing errors: A moving field; 862///; 863/// The computation of errors for a TProfile has evolved with the versions; 864/// of ROOT. The difficulty is in computing errors for bins with low statistics.; 865///; 866/// - prior to version 3.00, we had no special treatment of low statistic bins.; 867/// As a result, these bins had huge errors. The reason is that the; 868/// expression eprim2 is very close to 0 (rounding problems) or 0.; 869/// - in version 3.00 (18 Dec 2000), the algorithm is protected for values of; 870/// eprim2 very small and the bin errors set to the average bin errors, following; 871/// recommendations from a group of users.; 872/// - in version 3.01 (19 Apr 2001), it is realized that the algorithm above; 873/// should be applied only to low statistic bins.; 874/// - in version 3.02 (26 Sep 2001), the same group of users recommend instead; 875/// to take two times the average er",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:31114,error,error,31114,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,3,['error'],"['error', 'errors']"
Availability,"847 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5832 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 543 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v622/namespaceROOT.html:19979,avail,available,19979,doc/v622/namespaceROOT.html,https://root.cern,https://root.cern/doc/v622/namespaceROOT.html,1,['avail'],['available']
Availability,"85 Bool_t IsProofServ() const { return fName == ""proofserv"" ? kTRUE : kFALSE; }; 286 Bool_t IsRootFile(const char *filename) const;; 287 Bool_t IsWebDisplay() const { return fIsWebDisplay; }; 288 Bool_t IsWebDisplayBatch() const { return fIsWebDisplayBatch; }; 289 void ls(Option_t *option = """") const override;; 290 Int_t LoadClass(const char *classname, const char *libname, Bool_t check = kFALSE);; 291 TClass *LoadClass(const char *name, Bool_t silent = kFALSE) const;; 292 Int_t LoadMacro(const char *filename, Int_t *error = nullptr, Bool_t check = kFALSE);; 293 Longptr_t Macro(const char *filename, Int_t *error = nullptr, Bool_t padUpdate = kTRUE);; 294 TCanvas *MakeDefCanvas() const;; 295 void Message(Int_t id, const TObject *obj);; 296 Bool_t MustClean() const { return fMustClean; }; 297 Longptr_t ProcessLine(const char *line, Int_t *error = nullptr);; 298 Longptr_t ProcessLineSync(const char *line, Int_t *error = nullptr);; 299 Longptr_t ProcessLineFast(const char *line, Int_t *error = nullptr);; 300 Bool_t ReadingObject() const;; 301 void RecursiveRemove(TObject *obj) override;; 302 void RefreshBrowsers();; 303 static void RegisterModule(const char* modulename,; 304 const char** headers,; 305 const char** includePaths,; 306 const char* payLoadCode,; 307 const char* fwdDeclCode,; 308 void (*triggerFunc)(),; 309 const FwdDeclArgsToKeepCollection_t& fwdDeclsArgToSkip,; 310 const char** classesHeaders,; 311 bool hasCxxModule = false);; 312 TObject *Remove(TObject*) override;; 313 void RemoveClass(TClass *);; 314 void Reset(Option_t *option="""");; 315 void ResetClassSaved();; 316 void SaveContext();; 317 void SetApplication(TApplication *app) { fApplication = app; }; 318 void SetBatch(Bool_t batch = kTRUE);; 319 void SetWebDisplay(const char *webdisplay = """");; 320 void SetCutClassName(const char *name = ""TCutG"");; 321 void SetDefCanvasName(const char *name = ""c1"") { fDefCanvasName = name; }; 322 void SetEditHistograms(Bool_t flag = kTRUE) { fEditHistograms = flag; }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:15284,error,error,15284,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,2,['error'],['error']
Availability,"85/// the line). On non-Win32 platforms there is no difference between; 2386/// ProcessLine() and ProcessLineSync().; 2387/// The possible error codes are defined by TInterpreter::EErrorCode.; 2388/// Returns the result of the command, cast to a Longptr_t.; 2389 ; 2390Longptr_t TROOT::ProcessLineSync(const char *line, Int_t *error); 2391{; 2392 TString sline = line;; 2393 sline = sline.Strip(TString::kBoth);; 2394 ; 2395 if (!fApplication.load()); 2396 TApplication::CreateApplication();; 2397 ; 2398 return (*fApplication).ProcessLine(sline, kTRUE, error);; 2399}; 2400 ; 2401////////////////////////////////////////////////////////////////////////////////; 2402/// Process interpreter command directly via CINT interpreter.; 2403/// Only executable statements are allowed (no variable declarations),; 2404/// In all other cases use TROOT::ProcessLine().; 2405/// The possible error codes are defined by TInterpreter::EErrorCode.; 2406 ; 2407Longptr_t TROOT::ProcessLineFast(const char *line, Int_t *error); 2408{; 2409 TString sline = line;; 2410 sline = sline.Strip(TString::kBoth);; 2411 ; 2412 if (!fApplication.load()); 2413 TApplication::CreateApplication();; 2414 ; 2415 Longptr_t result = 0;; 2416 ; 2417 if (fInterpreter) {; 2418 TInterpreter::EErrorCode *code = (TInterpreter::EErrorCode*)error;; 2419 result = gInterpreter->Calc(sline, code);; 2420 }; 2421 ; 2422 return result;; 2423}; 2424 ; 2425////////////////////////////////////////////////////////////////////////////////; 2426/// Read Git commit information and branch name from the; 2427/// etc/gitinfo.txt file.; 2428 ; 2429void TROOT::ReadGitInfo(); 2430{; 2431 TString filename = ""gitinfo.txt"";; 2432 gSystem->PrependPathName(TROOT::GetEtcDir(), filename);; 2433 ; 2434 FILE *fp = fopen(filename, ""r"");; 2435 if (fp) {; 2436 TString s;; 2437 // read branch name; 2438 s.Gets(fp);; 2439 fGitBranch = s;; 2440 // read commit hash; 2441 s.Gets(fp);; 2442 fGitCommit = s;; 2443 // read date/time make was run; 2444 s.Gets(fp);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:91834,error,error,91834,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['error'],['error']
Availability,"85; Breakvoid Break(const char *location, const char *fmt,...)Use this function in case an error occurred.Definition TError.cxx:207; GetErrorHandlerErrorHandlerFunc_t GetErrorHandler()Returns the current error handler function.Definition TError.cxx:100; Infovoid Info(const char *location, const char *fmt,...)Use this function for informational messages.Definition TError.cxx:218; gErrorHandlerstatic ErrorHandlerFunc_t gErrorHandlerDefinition TError.cxx:38; SysErrorvoid SysError(const char *location, const char *fmt,...)Use this function in case a system (OS or GUI) related error occurred.Definition TError.cxx:196; GetErrorSystemMsgHandlerRefstatic ROOT::Internal::ErrorSystemMsgHandlerFunc_t & GetErrorSystemMsgHandlerRef()Definition TError.cxx:41; AbstractMethodvoid AbstractMethod(const char *method)This function can be used in abstract base classes in case one does not want to make the class a ""rea...Definition TError.cxx:159; ErrorHandlervoid ErrorHandler(Int_t level, const char *location, const char *fmt, std::va_list ap)General error handler function. It calls the user set error handler.Definition TError.cxx:109; Warningvoid Warning(const char *location, const char *fmt,...)Use this function in warning situations.Definition TError.cxx:229; MayNotUsevoid MayNotUse(const char *method)This function can be used in classes that should override a certain function, but in the inherited cl...Definition TError.cxx:168; Fatalvoid Fatal(const char *location, const char *fmt,...)Use this function in case of a fatal error. It will abort the program.Definition TError.cxx:244; gErrorIgnoreLevelInt_t gErrorIgnoreLevelError handling routines.Definition TError.cxx:31; kCheckMsgconst char * kCheckMsgDefinition TError.cxx:36; Obsoletevoid Obsolete(const char *function, const char *asOfVers, const char *removedFromVers)Use this function to declare a function obsolete.Definition TError.cxx:177; SetErrorHandlerErrorHandlerFunc_t SetErrorHandler(ErrorHandlerFunc_t newhandler)Set an error",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8cxx_source.html:9968,error,error,9968,doc/master/TError_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TError_8cxx_source.html,1,['error'],['error']
Availability,"861 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5846 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 542 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v624/namespaceROOT.html:20018,avail,available,20018,doc/v624/namespaceROOT.html,https://root.cern,https://root.cern/doc/v624/namespaceROOT.html,1,['avail'],['available']
Availability,87.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82307,error,error,82307,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"870 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5855 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 544 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v626/namespaceROOT.html:23037,avail,available,23037,doc/v626/namespaceROOT.html,https://root.cern,https://root.cern/doc/v626/namespaceROOT.html,1,['avail'],['available']
Availability,"87void TBuffer::SetBuffer(void *buf, UInt_t newsiz, Bool_t adopt, ReAllocCharFun_t reallocfunc); 188{; 189 if (fBuffer && TestBit(kIsOwner)); 190 delete [] fBuffer;; 191 ; 192 if (adopt); 193 SetBit(kIsOwner);; 194 else; 195 ResetBit(kIsOwner);; 196 ; 197 fBuffer = (char *)buf;; 198 fBufCur = fBuffer;; 199 if (newsiz > 0) {; 200 if ( (fMode&kWrite)!=0 ) {; 201 fBufSize = newsiz - kExtraSpace;; 202 } else {; 203 fBufSize = newsiz;; 204 }; 205 }; 206 fBufMax = fBuffer + fBufSize;; 207 ; 208 SetReAllocFunc( reallocfunc );; 209 ; 210 if (buf && ( (fMode&kWrite)!=0 ) && fBufSize < 0) {; 211 Expand( kMinimalSize );; 212 }; 213}; 214 ; 215////////////////////////////////////////////////////////////////////////////////; 216/// Expand (or shrink) the I/O buffer to newsize bytes.; 217/// If copy is true (the default), the existing content of the; 218/// buffer is preserved, otherwise the buffer is returned zero-ed out.; 219///; 220/// In order to avoid losing data, if the current length is greater than; 221/// the requested size, we only shrink down to the current length.; 222 ; 223void TBuffer::Expand(Int_t newsize, Bool_t copy); 224{; 225 Int_t l = Length();; 226 if ( (l > newsize) && copy ) {; 227 newsize = l;; 228 }; 229 const Int_t extraspace = (fMode&kWrite)!=0 ? kExtraSpace : 0;; 230 ; 231 if ( ((Long64_t)newsize+extraspace) > kMaxBufferSize) {; 232 if (l < kMaxBufferSize) {; 233 newsize = kMaxBufferSize - extraspace;; 234 } else {; 235 Fatal(""Expand"",""Requested size (%d) is too large (max is %d)."", newsize, kMaxBufferSize);; 236 }; 237 }; 238 if ( (fMode&kWrite)!=0 ) {; 239 fBuffer = fReAllocFunc(fBuffer, newsize+kExtraSpace,; 240 copy ? fBufSize+kExtraSpace : 0);; 241 } else {; 242 fBuffer = fReAllocFunc(fBuffer, newsize,; 243 copy ? fBufSize : 0);; 244 }; 245 if (fBuffer == nullptr) {; 246 if (fReAllocFunc == TStorage::ReAllocChar) {; 247 Fatal(""Expand"",""Failed to expand the data buffer using TStorage::ReAllocChar."");; 248 } else if (fReAllocFunc == R__NoReAllocChar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBuffer_8cxx_source.html:7568,down,down,7568,doc/master/TBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBuffer_8cxx_source.html,1,['down'],['down']
Availability,"884 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5869 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 544 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v628/namespaceROOT.html:24799,avail,available,24799,doc/v628/namespaceROOT.html,https://root.cern,https://root.cern/doc/v628/namespaceROOT.html,1,['avail'],['available']
Availability,"884 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5869 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 556 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v630/namespaceROOT.html:31796,avail,available,31796,doc/v630/namespaceROOT.html,https://root.cern,https://root.cern/doc/v630/namespaceROOT.html,2,['avail'],['available']
Availability,"89 of file TSocket.cxx. ◆ GetTcpWindowSize(). Int_t TSocket::GetTcpWindowSize ; (; ); const. inline . Definition at line 128 of file TSocket.h. ◆ GetUrl(). const char * TSocket::GetUrl ; (; ); const. inline . Definition at line 130 of file TSocket.h. ◆ IsA(). TClass * TSocket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Reimplemented in TSSLSocket.; Definition at line 171 of file TSocket.h. ◆ IsAuthenticated(). virtual Bool_t TSocket::IsAuthenticated ; (; ); const. inlinevirtual . Definition at line 131 of file TSocket.h. ◆ IsValid(). virtual Bool_t TSocket::IsValid ; (; ); const. inlinevirtual . Reimplemented in TPSocket.; Definition at line 132 of file TSocket.h. ◆ MarkBrokenConnection(). void TSocket::MarkBrokenConnection ; (; ). protected . Close the socket and mark as due to a broken connection. ; Definition at line 371 of file TSocket.cxx. ◆ NetError(). void TSocket::NetError ; (; const char * ; where, . Int_t ; error . ). static . Print error string depending on error code. ; Definition at line 1477 of file TSocket.cxx. ◆ operator=(). TSocket & TSocket::operator= ; (; const TSocket & ; ). privatedelete . ◆ Reconnect(). virtual Int_t TSocket::Reconnect ; (; ). inlinevirtual . Definition at line 138 of file TSocket.h. ◆ Recv() [1/4]. Int_t TSocket::Recv ; (; char * ; str, . Int_t ; max . ). virtual . Receive a character string message of maximum max length. ; The expected message must be of type kMESS_STRING. Returns length of received string (can be 0 if otherside of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented in TServerSocket, TPSocket, and TSSLSocket.; Definition at line 728 of file TSocket.cxx. ◆ Recv() [2/4]. Int_t TSocket::Recv ; (; char * ; str, . Int_t ; max, . Int_t & ; kind . ). virtual . Receive a character string message of maximum max length. ; Returns in kind the message type. Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocket.html:30736,error,error,30736,doc/master/classTSocket.html,https://root.cern,https://root.cern/doc/master/classTSocket.html,1,['error'],['error']
Availability,"8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Versi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealMPFE.html:59799,error,error,59799,doc/master/classRooRealMPFE.html,https://root.cern,https://root.cern/doc/master/classRooRealMPFE.html,2,['error'],['error']
Availability,"8; TInterpreter::BaseClassInfo_Factoryvirtual BaseClassInfo_t * BaseClassInfo_Factory(ClassInfo_t *) constDefinition TInterpreter.h:441; TInterpreter::GetFunctionOverloadsvirtual void GetFunctionOverloads(ClassInfo_t *cl, const char *funcname, std::vector< DeclId_t > &res) const =0; TInterpreter::GetDeclIdvirtual DeclId_t GetDeclId(MethodInfo_t *info) const =0; TInterpreter::RegisterTClassUpdatevirtual void RegisterTClassUpdate(TClass *oldcl, DictFuncPtr_t dict)=0; TInterpreter::ClassInfo_IsScopedEnumvirtual Bool_t ClassInfo_IsScopedEnum(ClassInfo_t *) constDefinition TInterpreter.h:418; TInterpreter::MethodInfo_Nextvirtual int MethodInfo_Next(MethodInfo_t *) constDefinition TInterpreter.h:496; TInterpreter::Calcvirtual Longptr_t Calc(const char *line, EErrorCode *error=nullptr)=0; TInterpreter::CallFunc_FactoryMethodvirtual MethodInfo_t * CallFunc_FactoryMethod(CallFunc_t *) constDefinition TInterpreter.h:324; TInterpreter::ReportDiagnosticsToErrorHandlervirtual void ReportDiagnosticsToErrorHandler(bool=true)Report diagnostics to the ROOT error handler (see TError.h).Definition TInterpreter.h:269; TInterpreter::BaseClassInfo_Offsetvirtual Longptr_t BaseClassInfo_Offset(BaseClassInfo_t *, void *=nullptr, bool=true) constDefinition TInterpreter.h:446; TInterpreter::DataMemberInfo_TypeTrueNamevirtual const char * DataMemberInfo_TypeTrueName(DataMemberInfo_t *) constDefinition TInterpreter.h:468; TInterpreter::CallFunc_SetArgvirtual void CallFunc_SetArg(CallFunc_t *, ULong_t) const =0; TInterpreter::TypeInfo_FactoryCopyvirtual TypeInfo_t * TypeInfo_FactoryCopy(TypeInfo_t *) constDefinition TInterpreter.h:527; TInterpreter::GenerateTClassvirtual TClass * GenerateTClass(ClassInfo_t *classinfo, Bool_t silent=kFALSE)=0; TInterpreter::ClassInfo_ClassPropertyvirtual Long_t ClassInfo_ClassProperty(ClassInfo_t *) constDefinition TInterpreter.h:400; TInterpreter::GetMorevirtual Int_t GetMore() const =0Returns whether the interpreter is waiting for more input, i.e.; TInterpreter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:74213,error,error,74213,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,1,['error'],['error']
Availability,"8int; 20299mg_start_domain2(struct mg_context *ctx,; 20300 const char **options,; 20301 struct mg_error_data *error); 20302{; 20303 const char *name;; 20304 const char *value;; 20305 const char *default_value;; 20306 struct mg_domain_context *new_dom;; 20307 struct mg_domain_context *dom;; 20308 int idx, i;; 20309 ; 20310 if (error != NULL) {; 20311 error->code = 0;; 20312 if (error->text_buffer_size > 0) {; 20313 *error->text = 0;; 20314 }; 20315 }; 20316 ; 20317 if ((ctx == NULL) || (options == NULL)) {; 20318 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20319 mg_snprintf(NULL,; 20320 NULL, /* No truncation check for error buffers */; 20321 error->text,; 20322 error->text_buffer_size,; 20323 ""%s"",; 20324 ""Invalid parameters"");; 20325 }; 20326 return -1;; 20327 }; 20328 ; 20329 if (!STOP_FLAG_IS_ZERO(&ctx->stop_flag)) {; 20330 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20331 mg_snprintf(NULL,; 20332 NULL, /* No truncation check for error buffers */; 20333 error->text,; 20334 error->text_buffer_size,; 20335 ""%s"",; 20336 ""Server already stopped"");; 20337 }; 20338 return -1;; 20339 }; 20340 ; 20341 new_dom = (struct mg_domain_context *); 20342 mg_calloc_ctx(1, sizeof(struct mg_domain_context), ctx);; 20343 ; 20344 if (!new_dom) {; 20345 /* Out of memory */; 20346 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20347 mg_snprintf(NULL,; 20348 NULL, /* No truncation check for error buffers */; 20349 error->text,; 20350 error->text_buffer_size,; 20351 ""%s"",; 20352 ""Out or memory"");; 20353 }; 20354 return -6;; 20355 }; 20356 ; 20357 /* Store options - TODO: unite duplicate code */; 20358 while (options && (name = *options++) != NULL) {; 20359 if ((idx = get_option_index(name)) == -1) {; 20360 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 20361 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20362 mg_snprintf(NULL,; 20363 NULL, /* No truncation check for error buffers */; 20364 error->text,; 20365 error->text_buffer_size,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:607797,error,error,607797,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"9 *************************************************************************/; 10 ; 11#ifndef ROOT_RDF_RDATASETSPEC; 12#define ROOT_RDF_RDATASETSPEC; 13 ; 14#include <limits>; 15#include <string>; 16#include <utility> // std::pair; 17#include <vector>; 18 ; 19#include <ROOT/RDF/RSample.hxx>; 20#include <ROOT/RFriendInfo.hxx>; 21#include <RtypesCore.h> // Long64_t; 22 ; 23namespace ROOT {; 24namespace Detail {; 25namespace RDF {; 26class RLoopManager;; 27}; 28} // namespace Detail; 29namespace RDF {; 30namespace Experimental {; 31 ; 32// clang-format off; 33/**; 34\class ROOT::RDF::Experimental::RDatasetSpec; 35\ingroup dataframe; 36\brief The dataset specification for RDataFrame.; 37 ; 38This class allows users to create the dataset specification for RDataFrame ; 39to which they add samples (using the RSample class object) with tree names and file names, ; 40and, optionally, the metadata information (using the RMetaData class objects). ; 41Adding global friend trees and/or setting the range of events to be processed; 42are also available.; 43 ; 44Note, there exists yet another method to build RDataFrame from the dataset information using the JSON file format: \ref FromSpec(const std::string &jsonFile) ""FromSpec()"". ; 45*/; 46 ; 47class RDatasetSpec {; 48 // clang-format on ; 49 friend class ::ROOT::Detail::RDF::RLoopManager; // for MoveOutSamples; 50 ; 51public:; 52 struct REntryRange {; 53 Long64_t fBegin{0};; 54 Long64_t fEnd{std::numeric_limits<Long64_t>::max()};; 55 REntryRange();; 56 REntryRange(Long64_t endEntry);; 57 REntryRange(Long64_t startEntry, Long64_t endEntry);; 58 };; 59 ; 60private:; 61 std::vector<RSample> fSamples; ///< List of samples; 62 ROOT::TreeUtils::RFriendInfo fFriendInfo; ///< List of friends; 63 REntryRange fEntryRange; ///< Start (inclusive) and end (exclusive) entry for the dataset processing; 64 ; 65 std::vector<RSample> MoveOutSamples();; 66 ; 67public:; 68 RDatasetSpec() = default;; 69 ; 70 const std::vector<std::string> GetSampleName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDatasetSpec_8hxx_source.html:1620,avail,available,1620,doc/master/RDatasetSpec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RDatasetSpec_8hxx_source.html,1,['avail'],['available']
Availability,"9 // TApplication ctor the IsLineProcessing flag is set to 0, so before; 3590 // we can not use it.; 3591 if (gApplication && gApplication->GetApplicationImp()) {; 3592 while (gROOT->IsLineProcessing() && !gApplication) {; 3593 Warning(""Calc"", ""waiting for cling thread to free"");; 3594 gSystem->Sleep(500);; 3595 }; 3596 gROOT->SetLineIsProcessing();; 3597 }; 3598#endif // R__WIN32; 3599 R__LOCKGUARD_CLING(gInterpreterMutex);; 3600 if (error) {; 3601 *error = TInterpreter::kNoError;; 3602 }; 3603 cling::Value valRef;; 3604 cling::Interpreter::CompilationResult cr = cling::Interpreter::kFailure;; 3605 try {; 3606 cr = fInterpreter->evaluate(line, valRef);; 3607 }; 3608 catch (cling::InterpreterException& ex); 3609 {; 3610 Error(""Calc"", ""%s.\n%s"", ex.what(), ""Evaluation of your expression was aborted."");; 3611 ex.diagnose();; 3612 cr = cling::Interpreter::kFailure;; 3613 }; 3614 ; 3615 if (cr != cling::Interpreter::kSuccess) {; 3616 // Failure in compilation.; 3617 if (error) {; 3618 // Note: Yes these codes are weird.; 3619 *error = TInterpreter::kRecoverable;; 3620 }; 3621 return 0L;; 3622 }; 3623 if (!valRef.isValid()) {; 3624 // Failure at runtime.; 3625 if (error) {; 3626 // Note: Yes these codes are weird.; 3627 *error = TInterpreter::kDangerous;; 3628 }; 3629 return 0L;; 3630 }; 3631 ; 3632 if (valRef.isVoid()) {; 3633 return 0;; 3634 }; 3635 ; 3636 RegisterTemporary(valRef);; 3637#ifdef R__WIN32; 3638 if (gApplication && gApplication->GetApplicationImp()) {; 3639 gROOT->SetLineHasBeenProcessed();; 3640 }; 3641#endif // R__WIN32; 3642 return valRef.castAs<Longptr_t>();; 3643}; 3644 ; 3645////////////////////////////////////////////////////////////////////////////////; 3646/// Set a getline function to call when input is needed.; 3647 ; 3648void TCling::SetGetline(const char * (*getlineFunc)(const char* prompt),; 3649 void (*histaddFunc)(const char* line)); 3650{; 3651 // If cling offers a replacement for G__pause(), it would need to; 3652 // also offer a way to c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:140528,error,error,140528,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['error'],['error']
Availability,"9 /// Check if given rule contains references to valid data members; 460 ; 461 Bool_t HasValidDataMembers(SchemaRuleMap_t& rule,; 462 MembersTypeMap_t& members,; 463 std::string& error_string); 464 {; 465 std::list<std::string> mem;; 466 std::list<std::string>::iterator it;; 467 // MembersMap_t::iterator rIt;; 468 ; 469 TSchemaRuleProcessor::SplitList( rule[""target""], mem );; 470 ; 471 //-----------------------------------------------------------------------; 472 // Loop over the data members; 473 //////////////////////////////////////////////////////////////////////////; 474 ; 475 for( it = mem.begin(); it != mem.end(); ++it ) {; 476 if( members.find( *it ) == members.end() ) {; 477 error_string += ""IO rule for class "" + rule[""targetClass""]; 478 + "" data member: "" + *it + "" was specified as a ""; 479 ""target in the rule but doesn't seem to appear in ""; 480 ""target class\n"";; 481 return false;; 482 }; 483 }; 484 return true;; 485 }; 486 ; 487 /////////////////////////////////////////////////////////////////////////////; 488 /// Write down the sources; 489 ; 490 static void WriteAutoVariables( const std::list<std::string>& target,; 491 const SourceTypeList_t& source,; 492 MembersTypeMap_t& members,; 493 std::string& className, std::string& mappedName,; 494 std::ostream& output ); 495 {; 496 if (!source.empty()) {; 497 Bool_t start = true;; 498 SourceTypeList_t::const_iterator it;; 499 ; 500 //--------------------------------------------------------------------; 501 // Write IDs and check if we should generate the onfile structure; 502 // this is done if the type was declared; 503 ///////////////////////////////////////////////////////////////////////; 504 ; 505 Bool_t generateOnFile = false;; 506 output << ""#if 0"" << std::endl; // this is to be removed later; 507 for( it = source.begin(); it != source.end(); ++it ) {; 508 output << "" "";; 509 output << ""static Int_t id_"" << it->second << "" = oldObj->GetId("";; 510 output << ""\"""" << it->second << ""\"");"" << std::endl;; 51",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:18294,down,down,18294,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,2,['down'],['down']
Availability,9 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83269,error,error,83269,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"9 ; 610 ; 611////////////////////////////////////////////////////////////////////////////////; 612/// evaluates the regression MVA; 613 ; 614Float_t TMVA::Reader::EvaluateRegression( UInt_t tgtNumber, const TString& methodTag, Double_t aux ); 615{; 616 try {; 617 return EvaluateRegression(methodTag, aux).at(tgtNumber);; 618 }; 619 catch (std::out_of_range &) {; 620 Log() << kWARNING << ""Regression could not be evaluated for target-number "" << tgtNumber << Endl;; 621 return 0;; 622 }; 623}; 624 ; 625 ; 626 ; 627////////////////////////////////////////////////////////////////////////////////; 628/// evaluates MVA for given set of input variables; 629 ; 630const std::vector< Float_t >& TMVA::Reader::EvaluateMulticlass( const TString& methodTag, Double_t aux ); 631{; 632 IMethod* method = 0;; 633 ; 634 std::map<TString, IMethod*>::iterator it = fMethodMap.find( methodTag );; 635 if (it == fMethodMap.end()) {; 636 Log() << kINFO << ""<EvaluateMVA> unknown method in map; ""; 637 << ""you looked for \"""" << methodTag << ""\"" within available methods: "" << Endl;; 638 for (it = fMethodMap.begin(); it!=fMethodMap.end(); ++it) Log() << ""--> "" << it->first << Endl;; 639 Log() << ""Check calling string"" << kFATAL << Endl;; 640 }; 641 else method = it->second;; 642 ; 643 MethodBase * kl = dynamic_cast<TMVA::MethodBase*>(method);; 644 ; 645 if(kl==0); 646 Log() << kFATAL << methodTag << "" is not a method"" << Endl;; 647 // check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; 648 // it is not again checked in each of these subsequent calls..; 649 ; 650 const Event* ev = kl->GetEvent();; 651 for (UInt_t i=0; i<ev->GetNVariables(); i++){; 652 if (TMath::IsNaN(ev->GetValue(i))) {; 653 Log() << kERROR << i << ""-th variable of the event is NaN, \n regression values might evaluate to .. what do I know. \n sorry this warning is all I can do, please fix or remove this event."" << Endl;; 654 }; 655 }; 656 ; 657 return this->EvaluateM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:24598,avail,available,24598,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['avail'],['available']
Availability,"9 ; 920////////////////////////////////////////////////////////////////////////////////; 921/// Performs the operation: `this = this + c1*h1`; 922/// If errors are defined (see TH1::Sumw2), errors are also recalculated.; 923///; 924/// Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; 925/// if not already set.; 926///; 927/// Note also that adding histogram with labels is not supported, histogram will be; 928/// added merging them by bin number independently of the labels.; 929/// For adding histogram with labels one should use TH1::Merge; 930///; 931/// SPECIAL CASE (Average/Efficiency histograms); 932/// For histograms representing averages or efficiencies, one should compute the average; 933/// of the two histograms and not the sum. One can mark a histogram to be an average; 934/// histogram by setting its bit kIsAverage with; 935/// myhist.SetBit(TH1::kIsAverage);; 936/// Note that the two histograms must have their kIsAverage bit set; 937///; 938/// IMPORTANT NOTE1: If you intend to use the errors of this histogram later; 939/// you should call Sumw2 before making this operation.; 940/// This is particularly important if you fit the histogram after TH1::Add; 941///; 942/// IMPORTANT NOTE2: if h1 has a normalisation factor, the normalisation factor; 943/// is used , ie this = this + c1*factor*h1; 944/// Use the other TH1::Add function if you do not want this feature; 945///; 946/// IMPORTANT NOTE3: You should be careful about the statistics of the; 947/// returned histogram, whose statistics may be binned or unbinned,; 948/// depending on whether c1 is negative, whether TAxis::kAxisRange is true,; 949/// and whether TH1::ResetStats has been called on either this or h1.; 950/// See TH1::GetStats.; 951///; 952/// The function return kFALSE if the Add operation failed; 953 ; 954Bool_t TH1::Add(const TH1 *h1, Double_t c1); 955{; 956 if (!h1) {; 957 Error(""Add"",""Attempt to add a non-existing histogram"");; 958 return kFALSE;; 959 }; 960 ; 961 // d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:37634,error,errors,37634,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"9 EventVector& unspecifiedEvents = tmpEventVector[Types::kMaxTreeType].at(cls);; 1080 if( ! unspecifiedEvents.empty() ) {; 1081 Log() << kDEBUG << ""randomly shuffling ""; 1082 << unspecifiedEvents.size(); 1083 << "" events of class "" << cls; 1084 << "" which are not yet associated to testing or training"" << Endl;; 1085 std::shuffle(unspecifiedEvents.begin(), unspecifiedEvents.end(), rndm);; 1086 }; 1087 }; 1088 }; 1089 ; 1090 // check for each class the number of training and testing events, the requested number and the available number; 1091 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""SPLITTING ========"" << Endl;; 1092 for( UInt_t cls = 0; cls < dsi.GetNClasses(); ++cls ){; 1093 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""---- class "" << cls << Endl;; 1094 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""check number of training/testing events, requested and available number of events and for class "" << cls << Endl;; 1095 ; 1096 // check if enough or too many events are already in the training/testing eventvectors of the class cls; 1097 EventVector& eventVectorTraining = tmpEventVector[ Types::kTraining ].at(cls);; 1098 EventVector& eventVectorTesting = tmpEventVector[ Types::kTesting ].at(cls);; 1099 EventVector& eventVectorUndefined = tmpEventVector[ Types::kMaxTreeType ].at(cls);; 1100 ; 1101 Int_t availableTraining = eventVectorTraining.size();; 1102 Int_t availableTesting = eventVectorTesting.size();; 1103 Int_t availableUndefined = eventVectorUndefined.size();; 1104 ; 1105 Float_t presel_scale;; 1106 if (fScaleWithPreselEff) {; 1107 presel_scale = eventCounts[cls].cutScaling();; 1108 if (presel_scale < 1); 1109 Log() << kINFO << Form(""Dataset[%s] : "",dsi.GetName()) << "" you have opted for scaling the number of requested training/testing events\n to be scaled by the preselection efficiency""<< Endl;; 1110 }else{; 1111 presel_scale = 1.; // this scaling was too confusing to most people, including me! Sorry... (Helge); 1112 if ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:47084,avail,available,47084,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['avail'],['available']
Availability,"9 delete [] fEX;; 140 delete [] fEY;; 141 delete [] fEZ;; 142}; 143 ; 144////////////////////////////////////////////////////////////////////////////////; 145/// Copy constructor.; 146/// Copy everything except list of functions; 147 ; 148TGraph2DErrors::TGraph2DErrors(const TGraph2DErrors &g); 149: TGraph2D(g), fEX(nullptr), fEY(nullptr), fEZ(nullptr); 150{; 151 if (fSize > 0) {; 152 fEX = new Double_t[fSize];; 153 fEY = new Double_t[fSize];; 154 fEZ = new Double_t[fSize];; 155 for (Int_t n = 0; n < fSize; n++) {; 156 fEX[n] = g.fEX[n];; 157 fEY[n] = g.fEY[n];; 158 fEZ[n] = g.fEZ[n];; 159 }; 160 }; 161}; 162 ; 163////////////////////////////////////////////////////////////////////////////////; 164/// Assignment operator; 165/// Copy everything except list of functions; 166 ; 167TGraph2DErrors &TGraph2DErrors::operator=(const TGraph2DErrors &g); 168{; 169 if (this == &g) return *this;; 170 ; 171 // call operator= on TGraph2D; 172 this->TGraph2D::operator=(static_cast<const TGraph2D&>(g) );; 173 ; 174 // delete before existing contained objects; 175 if (fEX) delete [] fEX;; 176 if (fEY) delete [] fEY;; 177 if (fEZ) delete [] fEZ;; 178 ; 179 fEX = (fSize > 0) ? new Double_t[fSize] : nullptr;; 180 fEY = (fSize > 0) ? new Double_t[fSize] : nullptr;; 181 fEZ = (fSize > 0) ? new Double_t[fSize] : nullptr;; 182 ; 183 ; 184 // copy error arrays; 185 for (Int_t n = 0; n < fSize; n++) {; 186 fEX[n] = g.fEX[n];; 187 fEY[n] = g.fEY[n];; 188 fEZ[n] = g.fEZ[n];; 189 }; 190 return *this;; 191}; 192 ; 193////////////////////////////////////////////////////////////////////////////////; 194/// Add a point with errorbars to the graph.; 195 ; 196void TGraph2DErrors::AddPointError(Double_t x, Double_t y, Double_t z, Double_t ex, Double_t ey, Double_t ez); 197{; 198 AddPoint(x, y, z); // this will increase fNpoints by one; 199 SetPointError(fNpoints - 1, ex, ey, ez);; 200}; 201 ; 202////////////////////////////////////////////////////////////////////////////////; 203/// This function is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:5233,error,error,5233,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['error'],['error']
Availability,"9 gSignalMap[sig].fHandler = nullptr;; 3830 }; 3831}; 3832 ; 3833////////////////////////////////////////////////////////////////////////////////; 3834/// Restore old signal handlers.; 3835 ; 3836void TUnixSystem::UnixResetSignals(); 3837{; 3838 for (int sig = 0; sig < kMAXSIGNALS; sig++); 3839 UnixResetSignal((ESignals)sig);; 3840}; 3841 ; 3842//---- time --------------------------------------------------------------------; 3843 ; 3844////////////////////////////////////////////////////////////////////////////////; 3845/// Get current time in milliseconds since 0:00 Jan 1 1995.; 3846 ; 3847Long64_t TUnixSystem::UnixNow(); 3848{; 3849 static std::atomic<time_t> jan95{0};; 3850 if (!jan95) {; 3851 struct tm tp;; 3852 tp.tm_year = 95;; 3853 tp.tm_mon = 0;; 3854 tp.tm_mday = 1;; 3855 tp.tm_hour = 0;; 3856 tp.tm_min = 0;; 3857 tp.tm_sec = 0;; 3858 tp.tm_isdst = -1;; 3859 ; 3860 jan95 = mktime(&tp);; 3861 if ((int)jan95 == -1) {; 3862 ::SysError(""TUnixSystem::UnixNow"", ""error converting 950001 0:00 to time_t"");; 3863 return 0;; 3864 }; 3865 }; 3866 ; 3867 struct timeval t;; 3868 gettimeofday(&t, nullptr);; 3869 return Long64_t(t.tv_sec-(Long_t)jan95)*1000 + t.tv_usec/1000;; 3870}; 3871 ; 3872////////////////////////////////////////////////////////////////////////////////; 3873/// Set interval timer to time-out in ms milliseconds.; 3874 ; 3875int TUnixSystem::UnixSetitimer(Long_t ms); 3876{; 3877 struct itimerval itv;; 3878 itv.it_value.tv_sec = 0;; 3879 itv.it_value.tv_usec = 0;; 3880 itv.it_interval.tv_sec = 0;; 3881 itv.it_interval.tv_usec = 0;; 3882 if (ms > 0) {; 3883 itv.it_value.tv_sec = time_t(ms / 1000);; 3884 itv.it_value.tv_usec = time_t((ms % 1000) * 1000);; 3885 }; 3886 int st = setitimer(ITIMER_REAL, &itv, nullptr);; 3887 if (st == -1); 3888 ::SysError(""TUnixSystem::UnixSetitimer"", ""setitimer"");; 3889 return st;; 3890}; 3891 ; 3892//---- file descriptors --------------------------------------------------------; 3893 ; 3894/////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:123600,error,error,123600,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,"9 if (Option3[j] && DrawErrors[j]) {; 2900 yline[j].resize(2 * NPointsInside);; 2901 ; 2902 if (yline[j].empty()) {; 2903 Error(""PaintGraphMultiErrors"", ""too many points, out of memory"");; 2904 return;; 2905 }; 2906 }; 2907 }; 2908 ; 2909 tg->TAttLine::Modify();; 2910 ; 2911 TArrow arrow;; 2912 arrow.SetLineWidth(tg->GetLineWidth());; 2913 arrow.SetLineColor(tg->GetLineColor());; 2914 arrow.SetFillColor(tg->GetFillColor());; 2915 ; 2916 TBox box;; 2917 Double_t x1b, y1b, x2b, y2b;; 2918 box.SetLineWidth(tg->GetLineWidth());; 2919 box.SetLineColor(tg->GetLineColor());; 2920 box.SetFillColor(tg->GetFillColor());; 2921 box.SetFillStyle(tg->GetFillStyle());; 2922 ; 2923 Double_t symbolsize = tg->GetMarkerSize();; 2924 Double_t sbase = symbolsize * kBASEMARKER;; 2925 Int_t mark = TAttMarker::GetMarkerStyleBase(tg->GetMarkerStyle());; 2926 Double_t cx = 0.;; 2927 Double_t cy = 0.;; 2928 ; 2929 if (mark >= 20 && mark <= 49) {; 2930 cx = cxx[mark - 20];; 2931 cy = cyy[mark - 20];; 2932 }; 2933 ; 2934 // Define the offset of the error bars due to the symbol size; 2935 Double_t s2x = gPad->PixeltoX(Int_t(0.5 * sbase)) - gPad->PixeltoX(0);; 2936 Double_t s2y = -gPad->PixeltoY(Int_t(0.5 * sbase)) + gPad->PixeltoY(0);; 2937 auto dxend = Int_t(gStyle->GetEndErrorSize());; 2938 Double_t tx = gPad->PixeltoX(dxend) - gPad->PixeltoX(0);; 2939 Double_t ty = -gPad->PixeltoY(dxend) + gPad->PixeltoY(0);; 2940 Float_t asize = 0.6 * symbolsize * kBASEMARKER / gPad->GetWh();; 2941 ; 2942 gPad->SetBit(TGraph::kClipFrame, tg->TestBit(TGraph::kClipFrame));; 2943 ; 2944 // loop over all the graph points; 2945 Double_t xl1, xl2, xr1, xr2, yup1, yup2, ylow1, ylow2;; 2946 for (Int_t i = 0; i < theNpoints; i++) {; 2947 x = gPad->XtoPad(theX[i]);; 2948 y = gPad->YtoPad(theY[i]);; 2949 ; 2950 Bool_t isOutside =; 2951 (x < gPad->GetUxmin()) || (x > gPad->GetUxmax()) || (y < gPad->GetUymin()) || (y > gPad->GetUymax());; 2952 ; 2953 if ((isOutside && !AnyOption0) || (!Draw0PointsX && theX[i] == 0.) || (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:104328,error,error,104328,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['error'],['error']
Availability,"9 if (nbins != (fBins ? fBins->GetSize() : 0)); 880 Fatal(""GetNumberOfBins"",""Object has an invalid number of bins"");; 881 return nbins;; 882}; 883 ; 884////////////////////////////////////////////////////////////////////////////////; 885/// Set the bin Error.; 886/// Re-implementation for TH2Poly given the different bin indexing in the; 887/// stored squared error array.; 888/// See also notes in TH1::SetBinError; 889///; 890/// Bins are in range [1:nbins] and for bin < 0 in the range [-9:-1] the errors is set for the overflow bins; 891 ; 892 ; 893void TH2Poly::SetBinError(Int_t bin, Double_t error); 894{; 895 if (bin == 0 || bin > GetNumberOfBins() || bin < - kNOverflow) return;; 896 if (!fSumw2.fN) Sumw2();; 897 SetBinErrorOption(kNormal);; 898 // see comment in GetBinError for special convention of bin index in fSumw2 array; 899 Int_t binIndex = (bin > 0) ? bin+kNOverflow-1 : -(bin+1);; 900 fSumw2.fArray[binIndex] = error * error;; 901}; 902 ; 903 ; 904 ; 905////////////////////////////////////////////////////////////////////////////////; 906/// Returns the bin name.; 907 ; 908const char *TH2Poly::GetBinName(Int_t bin) const; 909{; 910 if (bin > GetNumberOfBins()) return """";; 911 if (bin <= 0) return """";; 912 return ((TH2PolyBin*) fBins->At(bin-1))->GetPolygon()->GetName();; 913}; 914 ; 915////////////////////////////////////////////////////////////////////////////////; 916/// Returns the bin title.; 917 ; 918const char *TH2Poly::GetBinTitle(Int_t bin) const; 919{; 920 if (bin > GetNumberOfBins()) return """";; 921 if (bin <= 0) return """";; 922 return ((TH2PolyBin*) fBins->At(bin-1))->GetPolygon()->GetTitle();; 923}; 924 ; 925////////////////////////////////////////////////////////////////////////////////; 926/// Returns the maximum value of the histogram.; 927 ; 928Double_t TH2Poly::GetMaximum() const; 929{; 930 if (fNcells <= kNOverflow) return 0;; 931 if (fMaximum != -1111) return fMaximum;; 932 ; 933 TH2PolyBin *b;; 934 ; 935 TIter next(fBins);; 936 TObject *ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8cxx_source.html:32339,error,error,32339,doc/master/TH2Poly_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8cxx_source.html,2,['error'],['error']
Availability,"9 of file GSLMultiRootFinder.cxx. ◆ GetGSLType(). const gsl_multiroot_fsolver_type * ROOT::Math::GetGSLType ; (; GSLMultiRootFinder::EType ; type). Definition at line 171 of file GSLMultiRootFinder.cxx. ◆ getSum(). int ROOT::Math::getSum ; (; const int * ; x, . int ; n . ). Definition at line 534 of file GoFTest.cxx. ◆ human_readable(). template<class char_t , class traits_t > . std::basic_ios< char_t, traits_t > & ROOT::Math::human_readable ; (; std::basic_ios< char_t, traits_t > & ; ios). inline . Definition at line 197 of file GenVectorIO.h. ◆ Lmag(). template<class A , class T > . T ROOT::Math::Lmag ; (; const VecExpr< A, T, 4 > & ; rhs). inline . Definition at line 308 of file Functions.h. ◆ Lmag2(). template<class A , class T > . T ROOT::Math::Lmag2 ; (; const VecExpr< A, T, 4 > & ; rhs). inline . Definition at line 284 of file Functions.h. ◆ log1p(). double ROOT::Math::log1p ; (; double ; x). inline . declarations for functions which are not implemented by some compilers ; log(1+x) with error cancelation when x is small ; Definition at line 98 of file Math.h. ◆ machine_readable(). template<class char_t , class traits_t > . std::basic_ios< char_t, traits_t > & ROOT::Math::machine_readable ; (; std::basic_ios< char_t, traits_t > & ; ios). inline . Definition at line 208 of file GenVectorIO.h. ◆ Mag(). template<class A , class T , unsigned int D> . T ROOT::Math::Mag ; (; const VecExpr< A, T, D > & ; rhs). inline . Definition at line 261 of file Functions.h. ◆ Mag2(). template<class A , class T , unsigned int D> . T ROOT::Math::Mag2 ; (; const VecExpr< A, T, D > & ; rhs). inline . Definition at line 238 of file Functions.h. ◆ minfunction(). double ROOT::Math::minfunction ; (; const std::vector< double > & ; x). function to return the function values at point x ; Definition at line 19 of file RMinimizer.cxx. ◆ mingradfunction(). TVectorD ROOT::Math::mingradfunction ; (; TVectorD ; y). function to return the gradient values at point y ; Definition at line 25 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math.html:153705,error,error,153705,doc/master/namespaceROOT_1_1Math.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math.html,1,['error'],['error']
Availability,"9*/; 50 ; 51 ; 52class BinData : public FitData {; 53 ; 54public :; 55 ; 56 enum ErrorType { kNoError, kValueError, kCoordError, kAsymError };; 57 ; 58 /**; 59 constructor from dimension of point and max number of points (to pre-allocate vector); 60 Give a zero value and then use Initialize later one if the size is not known; 61 */; 62 ; 63 explicit BinData(unsigned int maxpoints = 0, unsigned int dim = 1,; 64 ErrorType err = kValueError);; 65 ; 66 ; 67 /**; 68 constructor from option and default range; 69 */; 70 explicit BinData (const DataOptions & opt, unsigned int maxpoints = 0,; 71 unsigned int dim = 1, ErrorType err = kValueError);; 72 ; 73 /**; 74 constructor from options and range; 75 default is 1D and value errors; 76 */; 77 BinData (const DataOptions & opt, const DataRange & range,; 78 unsigned int maxpoints = 0, unsigned int dim = 1, ErrorType err = kValueError );; 79 ; 80 /** constructors using external data */; 81 ; 82 /**; 83 constructor from external data for 1D with errors on coordinate and value; 84 */; 85 BinData(unsigned int n, const double * dataX, const double * val,; 86 const double * ex , const double * eval );; 87 ; 88 /**; 89 constructor from external data for 2D with errors on coordinate and value; 90 */; 91 BinData(unsigned int n, const double * dataX, const double * dataY,; 92 const double * val, const double * ex , const double * ey,; 93 const double * eval );; 94 ; 95 /**; 96 constructor from external data for 3D with errors on coordinate and value; 97 */; 98 BinData(unsigned int n, const double * dataX, const double * dataY,; 99 const double * dataZ, const double * val, const double * ex ,; 100 const double * ey , const double * ez , const double * eval );; 101 ; 102 /**; 103 destructor; 104 */; 105 ~BinData() override;; 106 ; 107 /**; 108 copy constructors; 109 */; 110 BinData(const BinData & rhs);; 111 ; 112 /// assignment operator; 113 BinData & operator= ( const BinData & rhs );; 114 ; 115 ; 116 /**; 117 Preallocate a data set with ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:3094,error,errors,3094,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,1,['error'],['errors']
Availability,"9,beta2=0.999,eps=1e-07) Learning rate = 0.01 regularization 0 minimum error = 0.699892; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.548477 0.466013 0.191275 0.014698 9061.23 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.431501 0.379356 0.191981 0.0145985 9020.06 0; : 3 | 0.40241 0.379482 0.19151 0.014162 9021.8 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.408996 0.379041 0.192713 0.0146534 8985.76 0; : 5 | 0.41143 0.414316 0.191728 0.014237 9014.55 1; : 6 | 0.385066 0.478603 0.19226 0.0142608 8988.82 2; : 7 | 0.404168 0.388159 0.192259 0.0142353 8987.58 3; : 8 Minimum Test error found - save the configuration ; : 8 | 0.394387 0.377539 0.19273 0.0147168 8988.1 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.386834 0.375541 0.192946 0.014741 8978.44 0; : 10 | 0.381359 0.385778 0.195351 0.0142527 8835 1; : 11 | 0.391916 0.415129 0.193961 0.0143386 8907.56 2; : 12 | 0.390755 0.379468 0.194376 0.0145555 8897.75 3; : 13 | 0.409355 0.396515 0.195082 0.0144231 8856.49 4; : 14 | 0.400917 0.375809 0.194321 0.0142902 8887.36 5; : 15 | 0.384495 0.401588 0.194138 0.0144019 8901.96 6; : 16 | 0.400658 0.401489 0.198047 0.014311 8708.13 7; : 17 Minimum Test error found - save the configuration ; : 17 | 0.386851 0.371455 0.194859 0.0148291 8887.42 0; : 18 | 0.389253 0.376491 0.196282 0.0143574 8794.87 1; : 19 | 0.378227 0.384958 0.199317 0.0143422 8649.85 2; : 20 | 0.387911 0.390858 0.193697 0.0144047 8923.97 3; : 21 | 0.391998 0.3743 0.194318 0.0146357 8904.63 4; : 22 | 0.396695 0.384671 0.194406 0.0145452 8895.77 5; : 23 | 0.38744 0.376683 0.195092 0.0143629 8853.03 6; : 24 | 0.38501 0.377878 0.194456 0.0147282 8902.35 7; : 25 | 0.389388 0.376148 0.201694 0.0152248 858",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:48042,error,error,48042,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['error'],['error']
Availability,9.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum Test error found - save the configuration ; : 621 | 92.9103 63.3038 0.0201905 0.00182603 43562.4 0; : 622 Minimum Test error found - save the configuration ; : 622 | 91.6075 63.2578 0.0201995 0.00184553 43587.4 0; : 623 Minimum Test error found - save the configuration ; : 623 | 90.7693 62.0703 0.0202228 0.00181118 43450.9 0; : 624 Minimum Test error found - save the configuration ; : 624 | 89.2125 61.1087 0.0202046 0.00181706 43507.7 0; : 625 | 88.1287 61.343 0.0200847 0.00175821 43652.7 1; : 626 Minimum Test error found - save the configuration ; : 626 | 87.0203 60.0927 0.0202246 0.00182742 43485 0; : 627 | 86.1022 60.6165 0.020286 0.00178227 43234.5 1; : 628 Minimum Test error found - save the configuration ; : 628 | 84.7933 59.0719 0.0201769 0.00183209 43609.1 0; : 629 Minimum Test error found - save the configuration ; : 629 | 83.7285 58.2513 0.0204361 0.0018731 43096.5 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:81630,error,error,81630,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"9/// Constructor for variable bin size 3-D histograms; 4500/// (see TH3::TH3 for explanation of parameters); 4501 ; 4502TH3F::TH3F(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 4503 ,Int_t nbinsy,const Double_t *ybins; 4504 ,Int_t nbinsz,const Double_t *zbins); 4505 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4506{; 4507 TArrayF::Set(fNcells);; 4508 if (fgDefaultSumw2) Sumw2();; 4509}; 4510 ; 4511 ; 4512////////////////////////////////////////////////////////////////////////////////; 4513/// Copy constructor.; 4514/// The list of functions is not copied. (Use Clone() if needed); 4515 ; 4516TH3F::TH3F(const TH3F &h3f) : TH3(), TArrayF(); 4517{; 4518 h3f.TH3F::Copy(*this);; 4519}; 4520 ; 4521 ; 4522////////////////////////////////////////////////////////////////////////////////; 4523/// Copy this 3-D histogram structure to newth3.; 4524 ; 4525void TH3F::Copy(TObject &newth3) const; 4526{; 4527 TH3::Copy(newth3);; 4528}; 4529 ; 4530 ; 4531////////////////////////////////////////////////////////////////////////////////; 4532/// Reset this histogram: contents, errors, etc.; 4533 ; 4534void TH3F::Reset(Option_t *option); 4535{; 4536 TH3::Reset(option);; 4537 TArrayF::Reset();; 4538 // should also reset statistics once statistics are implemented for TH3; 4539}; 4540 ; 4541 ; 4542////////////////////////////////////////////////////////////////////////////////; 4543/// Set total number of bins including under/overflow; 4544/// Reallocate bin contents array; 4545 ; 4546void TH3F::SetBinsLength(Int_t n); 4547{; 4548 if (n < 0) n = (fXaxis.GetNbins()+2)*(fYaxis.GetNbins()+2)*(fZaxis.GetNbins()+2);; 4549 fNcells = n;; 4550 TArrayF::Set(n);; 4551}; 4552 ; 4553 ; 4554////////////////////////////////////////////////////////////////////////////////; 4555/// Stream an object of class TH3F.; 4556 ; 4557void TH3F::Streamer(TBuffer &R__b); 4558{; 4559 if (R__b.IsReading()) {; 4560 UInt_t R__s, R__c;; 4561 if (R__b.GetParent() && R__b.GetVersionOwner",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:169483,error,errors,169483,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['error'],['errors']
Availability,"9/// \param[in] goption specify a list of graphics options. See TGraph::Draw and TGraphPainter for a complete list of these possible options.; 1130/// \param[in] rxmin lower fitting range; 1131/// \param[in] rxmax upper fitting range; 1132///; 1133/// \anchor GFitOpt; 1134/// ### Graph Fitting Options; 1135/// The list of fit options is given in parameter option.; 1136///; 1137/// option | description; 1138/// -------|------------; 1139/// ""S"" | The full result of the fit is returned in the `TFitResultPtr`. This is needed to get the covariance matrix of the fit. See `TFitResult` and the base class `ROOT::Math::FitResult`.; 1140/// ""W"" | Ignore all point errors when fitting a TGraphErrors or TGraphAsymmErrors; 1141/// ""F"" | Uses the default minimizer (e.g. Minuit) when fitting a linear function (e.g. polN) instead of the linear fitter.; 1142/// ""U"" | Uses a user specified objective function (e.g. user providedlikelihood function) defined using `TVirtualFitter::SetFCN`; 1143/// ""E"" | Performs a better parameter errors estimation using the Minos technique for all fit parameters.; 1144/// ""M"" | Uses the IMPROVE algorithm (available only in TMinuit). This algorithm attempts improve the found local minimum by searching for a better one.; 1145/// ""Q"" | Quiet mode (minimum printing); 1146/// ""V"" | Verbose mode (default is between Q and V); 1147/// ""+"" | Adds this new fitted function to the list of fitted functions. By default, the previous function is deleted and only the last one is kept.; 1148/// ""N"" | Does not store the graphics function, does not draw the histogram with the function after fitting.; 1149/// ""0"" | Does not draw the histogram and the fitted function after fitting, but in contrast to option ""N"", it stores the fitted function in the histogram list of functions.; 1150/// ""R"" | Fit using a fitting range specified in the function range with `TF1::SetRange`.; 1151/// ""B"" | Use this option when you want to fix one or more parameters and the fitting function is a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8cxx_source.html:38692,error,errors,38692,doc/master/TGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8cxx_source.html,1,['error'],['errors']
Availability,"907; TGraphMultiErrors::ComputeRangevoid ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideCompute Range.Definition TGraphMultiErrors.cxx:1379; TGraphMultiErrors::fNYErrorsInt_t fNYErrorsThe amount of different y-errors.Definition TGraphMultiErrors.h:32; TGraphMultiErrors::fEyLstd::vector< TArrayD > fEyLTwo dimensional array of Y low errors.Definition TGraphMultiErrors.h:37; TGraphMultiErrors::GetErrorYDouble_t GetErrorY(Int_t i) const overrideGet error on y coordinate for point i.Definition TGraphMultiErrors.cxx:1454; TGraphMultiErrors::AllocateDouble_t ** Allocate(Int_t size) overrideAllocate internal data structures for size points.Definition TGraphMultiErrors.cxx:933; TGraphMultiErrors::DoMergeBool_t DoMerge(const TGraph *tg) overrideProtected function to perform the merge operation of a graph with multiple asymmetric errors.Definition TGraphMultiErrors.cxx:838; TGraphMultiErrors::Classstatic TClass * Class(); TGraphMultiErrors::GetErrorYhighDouble_t GetErrorYhigh(Int_t i) const overrideGet high error on y coordinate for point i.Definition TGraphMultiErrors.cxx:1530; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::fNpointsInt_t fNpointsNumber of points <= fMaxSize.Definition TGraph.h:46; TGraph::SetPointvirtual void SetPoint(Int_t i, Double_t x, Double_t y)Set x and y values for point number i.Definition TGraph.cxx:2342; TGraph::fMaxSizeInt_t fMaxSize!Current dimension of arrays fX and fYDefinition TGraph.h:45; TGraph::SaveHistogramAndFunctionsvoid SaveHistogramAndFunctions(std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option)Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes.Definition TGraph.cxx:2199; TGraph::fHistogramTH1F * fHistogramPointer to histogram used for drawing axis.Definition TGraph.h:50; TGraph::UpdateArraysvirtual void UpdateArrays(const std::vector< Int_t > &sorting_indices, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:87910,error,error,87910,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability,"90] - TClass::GetClassInfo() is not thread safe; [#15077] - Passing different floating point types to RVec utility functions; [#15048] - [ntuple] Handling of virtual inheritance broken; [#15040] - RDataFrame Inaccurate example of progress bar from documentation; [#15028] - RDataFrame Unable to cacheread remote file; [#15027] - spurrious cmake message about AfterImage with -Dminimal=ON; [#14981] - RVecs leak memory with np.asarray in pyROOT; [#14964] - ROOT-HEAD fails with “cling interactive line includer >>>: fatal error: module file ‘[snip]/Vc.pcm’ not found: module file not found”; [#14958] - ROOT_HEAD failed with error message: Fail to detect cryptographic random generator; [#14921] - ROOT Fails to build macOS 14.4 arm64 Xcode 15.3; [#14914] - VecOps::Take with default argument doesn’t check correctly the out of boundary condition; [#14910] - hadd issue when using parallelization together with indirect file; [#14902] - compilation error; [#14863] - [hist] TH1::SaveAs missing default option argument causes compilation errors; [#14855] - TRatioPlot crashes if loaded from the file; [#14842] - TRatioplot gives “different” results with Web Graphics; [#14838] - Problems with Confidence Band of TRatioPlot; [#14801] - TEfficiency drawing to .C is broken; [#14793] - 6.26 cannot read file written with 6.30.4; [#14772] - [cling] Undocumented behaviour of root macro_C.so; [#14767] - rootn.exe instant crash on startup; [#14765] - TGenPhaseSpace weight normalization; [#14748] - [ntuple] Show and PrintInfo does not work for friend RNTuples; [#14601] - std::source_location not found when running with c++20 enabled; [#14599] - The example th2polyUSA.C needs re-labelling; [#14598] - A “printf” change the behaviour of a macro …; [#14595] - Problem when creating dictionary in Osx 12.7, Xcode 14.2; [#14594] - Provide file.root request in THttpServer; [#14593] - Build fails with CLING_DEBUG=1 set; [#14586] - [ROOT-6317] using namespace statement does not provoke autoload; [#14576] - [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/release-notes.html:26700,error,error,26700,doc/v632/release-notes.html,https://root.cern,https://root.cern/doc/v632/release-notes.html,2,['error'],"['error', 'errors']"
Availability,"91 of file TGraph2D.cxx. ◆ FindObject() [2/2]. TObject * TGraph2D::FindObject ; (; const TObject * ; obj); const. overridevirtual . search object obj in the list of functions ; Reimplemented from TObject.; Definition at line 801 of file TGraph2D.cxx. ◆ Fit() [1/2]. TFitResultPtr TGraph2D::Fit ; (; const char * ; fname, . Option_t * ; option = """", . Option_t * ; goption = """" . ). virtual . Fits this graph with function with name fname Predefined functions such as gaus, expo and poln are automatically created by ROOT. ; fname can also be a formula, accepted by the linear fitter (linear parts divided by ""++"" sign), for example ""x++sin(y)"" for fitting ""[0]*x+[1]*sin(y)"" ; Definition at line 815 of file TGraph2D.cxx. ◆ Fit() [2/2]. TFitResultPtr TGraph2D::Fit ; (; TF2 * ; f2, . Option_t * ; option = """", . Option_t * ; goption = """" . ). virtual . Fits this 2D graph with function f2. ; f2 is an already predefined function created by TF2.; See TGraph::Fit for the available fitting options and fitting notes ; Definition at line 842 of file TGraph2D.cxx. ◆ FitPanel(). void TGraph2D::FitPanel ; (; ). virtual . Display a GUI panel with all graph fit options. ; See class TFitEditor for example ; Definition at line 861 of file TGraph2D.cxx. ◆ GetContourList(). TList * TGraph2D::GetContourList ; (; Double_t ; contour). Returns the X and Y graphs building a contour. ; A contour level may consist in several parts not connected to each other. This function returns them in a graphs' list. ; Definition at line 920 of file TGraph2D.cxx. ◆ GetDirectory(). TDirectory * TGraph2D::GetDirectory ; (; ); const. inline . Definition at line 108 of file TGraph2D.h. ◆ GetErrorX(). Double_t TGraph2D::GetErrorX ; (; Int_t ; bin); const. virtual . This function is called by Graph2DFitChisquare. ; It always returns a negative value. Real implementation in TGraph2DErrors ; Reimplemented in TGraph2DAsymmErrors, and TGraph2DErrors.; Definition at line 939 of file TGraph2D.cxx. ◆ GetErrorY(). Double_t TGr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:43088,avail,available,43088,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,1,['avail'],['available']
Availability,"918 /// \param[in] expression a callable that evaluates the varied values for the specified columns. The callable can; 919 /// take any column values as input, similarly to what happens during Filter and Define calls. It must; 920 /// return an RVec of varied values, one for each variation tag, in the same order as the tags.; 921 /// \param[in] inputColumns the names of the columns to be passed to the callable.; 922 /// \param[in] variationTags names for each of the varied values, e.g. `""up""` and `""down""`.; 923 /// \param[in] variationName a generic name for this set of varied values, e.g. `""ptvariation""`; 924 ///; 925 /// This overload of Vary takes a list of column names as first argument and; 926 /// requires that the expression returns an RVec of RVecs of values: one inner RVec for the variations of each; 927 /// affected column. The `variationTags` are defined as `{""down"", ""up""}`.; 928 ///; 929 /// Example usage:; 930 /// ~~~{.cpp}; 931 /// // produce variations ""ptAndEta:down"" and ""ptAndEta:up""; 932 /// auto nominal_hx =; 933 /// df.Vary({""pt"", ""eta""}, // the columns that will vary simultaneously; 934 /// [](double pt, double eta) { return RVec<RVecF>{{pt*0.9, pt*1.1}, {eta*0.9, eta*1.1}}; },; 935 /// {""pt"", ""eta""}, // inputs to the Vary expression, independent of what columns are varied; 936 /// {""down"", ""up""}, // variation tags; 937 /// ""ptAndEta"") // variation name; 938 /// .Histo1D(""pt"", ""eta"");; 939 ///; 940 /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; 941 /// hx[""nominal""].Draw();; 942 /// hx[""ptAndEta:down""].Draw(""SAME"");; 943 /// hx[""ptAndEta:up""].Draw(""SAME"");; 944 /// ~~~; 945 ///; 946 /// \sa This Vary() overload for more information.; 947 ; 948 template <typename F>; 949 RInterface<Proxied, DS_t>; 950 Vary(const std::vector<std::string> &colNames, F &&expression, const ColumnNames_t &inputColumns,; 951 const std::vector<std::string> &variationTags, std::string_view variationName); 952 {; 953 return VaryImpl<false>(colNames, std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RInterface_8hxx_source.html:50511,down,down,50511,doc/master/RInterface_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RInterface_8hxx_source.html,1,['down'],['down']
Availability,91864 0.689576 0.189646 0.0148842 14648.6 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.689168 0.677551 0.190642 0.015026 14577.3 0; : 5 | 0.686885 0.678678 0.189865 0.0148775 14629.7 1; : 6 | 0.68905 0.681357 0.189104 0.014885 14694.1 2; : 7 | 0.687138 0.683485 0.19023 0.0152893 14633.6 3; : 8 | 0.686429 0.685529 0.189996 0.0147979 14612 4; : 9 | 0.685179 0.683467 0.190317 0.0152552 14623.4 5; : 10 Minimum Test error found - save the configuration ; : 10 | 0.684262 0.673795 0.18992 0.0153518 14664.7 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.682907 0.671521 0.194162 0.0155002 14328.7 0; : 12 | 0.693473 0.677553 0.188937 0.0147664 14698.2 1; : 13 | 0.695581 0.671789 0.190501 0.0149406 14581.9 2; : 14 | 0.68024 0.680521 0.188432 0.0146998 14735.3 3; : 15 | 0.68435 0.688062 0.189615 0.0147881 14643.1 4; : 16 | 0.686476 0.675588 0.190015 0.0152195 14645.7 5; : 17 | 0.677004 0.674528 0.190369 0.0146787 14571.1 6; : 18 Minimum Test error found - save the configuration ; : 18 | 0.670403 0.662 0.188594 0.0151297 14758.1 0; : 19 | 0.673327 0.684121 0.189356 0.0146185 14650.5 1; : 20 | 0.68729 0.678527 0.188558 0.0148948 14741.2 2; : ; : Elapsed time for training with 3200 events: 3.82 sec ; : Evaluate deep neural network on CPU using batches with size = 256; : ; TMVA_DNN : [dataset] : Evaluation of TMVA_DNN on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.0999 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVAClassification_TMVA_DNN.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: PyKeras_LSTM for Classification; : ; : ; : ␛[1m================================================================␛[0m; : ␛[1mH e l p f o r M V A m e t h o d [ PyKeras_LSTM ] :␛[0m; : ; : Keras is a high-level API for the Theano and Tensorflow packages.; : This method wraps the training and predi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:19586,error,error,19586,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['error'],['error']
Availability,"92 break;; 1293 ; 1294 // desc.SetDisplayed(true);; 1295 }; 1296 ; 1297 // finally we should create data for streaming to the client; 1298 // it includes list of visible nodes and rawdata; 1299 ; 1300 RGeomDrawing drawing;; 1301 ResetRndrInfos();; 1302 bool has_shape = false;; 1303 ; 1304 ScanNodes(true, level, [&, this](RGeomNode &node, std::vector<int> &stack, bool, int seqid) {; 1305 if ((node.sortid < fDrawIdCut) && (viscnt[node.id] > 0)) {; 1306 drawing.visibles.emplace_back(node.id, seqid, stack);; 1307 ; 1308 auto &item = drawing.visibles.back();; 1309 item.color = node.color;; 1310 item.opacity = node.opacity;; 1311 ; 1312 auto volume = GetVolume(node.id);; 1313 ; 1314 auto &sd = MakeShapeDescr(volume->GetShape());; 1315 ; 1316 item.ri = sd.rndr_info();; 1317 if (sd.has_shape()); 1318 has_shape = true;; 1319 }; 1320 return true;; 1321 });; 1322 ; 1323 CollectNodes(drawing, all_nodes);; 1324 ; 1325 return MakeDrawingJson(drawing, has_shape);; 1326}; 1327 ; 1328/////////////////////////////////////////////////////////////////////; 1329/// Check if there is draw data available; 1330 ; 1331bool RGeomDescription::HasDrawData() const; 1332{; 1333 TLockGuard lock(fMutex);; 1334 return (fDrawJson.length() > 0) && (fDrawIdCut > 0);; 1335}; 1336 ; 1337/////////////////////////////////////////////////////////////////////; 1338/// Produces search data if necessary; 1339 ; 1340void RGeomDescription::ProduceSearchData(); 1341{; 1342 TLockGuard lock(fMutex);; 1343 ; 1344 if (fSearch.empty() || !fSearchJson.empty()); 1345 return;; 1346 ; 1347 std::string hjson;; 1348 ; 1349 SearchVisibles(fSearch, hjson, fSearchJson);; 1350 ; 1351 (void)hjson; // not used here; 1352}; 1353 ; 1354/////////////////////////////////////////////////////////////////////; 1355/// Collect all information required to draw geometry on the client; 1356/// This includes list of each visible nodes, meshes and matrixes; 1357 ; 1358void RGeomDescription::ProduceDrawData(); 1359{; 1360 auto json = ProduceJs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RGeomData_8cxx_source.html:40341,avail,available,40341,doc/master/RGeomData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RGeomData_8cxx_source.html,2,['avail'],['available']
Availability,"92 of file Reader.cxx. ◆ IsA(). virtual TClass * TMVA::Reader::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::Configurable.; Definition at line 164 of file Reader.h. ◆ Log(). MsgLogger & TMVA::Reader::Log ; (; ); const. inlineprivate . Definition at line 162 of file Reader.h. ◆ SetVerbose(). void TMVA::Reader::SetVerbose ; (; Bool_t ; v). inline . Definition at line 115 of file Reader.h. ◆ Streamer(). virtual void TMVA::Reader::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TMVA::Configurable. ◆ StreamerNVirtual(). void TMVA::Reader::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 164 of file Reader.h. ◆ Verbose(). Bool_t TMVA::Reader::Verbose ; (; void ; ); const. inline . Definition at line 114 of file Reader.h. Member Data Documentation. ◆ fCalculateError. Bool_t TMVA::Reader::fCalculateError. private . error calculation mode ; Definition at line 152 of file Reader.h. ◆ fColor. Bool_t TMVA::Reader::fColor. private . color mode ; Definition at line 151 of file Reader.h. ◆ fDataInputHandler. DataInputHandler TMVA::Reader::fDataInputHandler. private . Definition at line 138 of file Reader.h. ◆ fDataSetInfo. DataSetInfo TMVA::Reader::fDataSetInfo. private . Definition at line 136 of file Reader.h. ◆ fDataSetManager. DataSetManager* TMVA::Reader::fDataSetManager. private . Definition at line 128 of file Reader.h. ◆ fLogger. MsgLogger* TMVA::Reader::fLogger. mutableprivate . ! message logger ; Definition at line 161 of file Reader.h. ◆ fMethodMap. std::map<TString, IMethod*> TMVA::Reader::fMethodMap. private . map of methods ; Definition at line 157 of file Reader.h. ◆ fMvaEventError. Double_t TMVA::Reader::fMvaEventError. private . per-event error returned by MVA ; Definition at line 154 of file Reader.h. ◆ fMvaEventErrorUpper. Double_t TMVA::Reader::fMvaEventErrorUpper. private . per-event error returned by MVA ; Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Reader.html:30269,error,error,30269,doc/master/classTMVA_1_1Reader.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Reader.html,1,['error'],['error']
Availability,"94 of file THtml.h. ◆ GetSearchEngine(). const TString & THtml::GetSearchEngine ; (; ); const. inline . Definition at line 312 of file THtml.h. ◆ GetSearchStemURL(). const TString & THtml::GetSearchStemURL ; (; ); const. inline . Definition at line 311 of file THtml.h. ◆ GetURL(). const char * THtml::GetURL ; (; const char * ; lib = 0); const. Get the documentation URL for library lib. ; If lib == 0 or no documentation URL has been set for lib, return the ROOT documentation URL. The return value is always != 0. ; Definition at line 1395 of file THtml.cxx. ◆ GetViewCVS(). const TString & THtml::GetViewCVS ; (; ); const. inline . Definition at line 313 of file THtml.h. ◆ GetWikiURL(). const TString & THtml::GetWikiURL ; (; ); const. inline . Definition at line 314 of file THtml.h. ◆ GetXwho(). const TString & THtml::GetXwho ; (; ); const. inline . Definition at line 301 of file THtml.h. ◆ HaveDot(). Bool_t THtml::HaveDot ; (; ). Check whether dot is available in $PATH or in the directory set by SetDotPath() ; Definition at line 1411 of file THtml.cxx. ◆ HelperDeleted(). void THtml::HelperDeleted ; (; THtml::THelperBase * ; who). Inform the THtml object that one of its helper objects was deleted. ; Called by THtml::HelperBase::~HelperBase(). ; Definition at line 1438 of file THtml.cxx. ◆ IsA(). TClass * THtml::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 426 of file THtml.h. ◆ IsBatch(). Bool_t THtml::IsBatch ; (; ); const. inline . Definition at line 353 of file THtml.h. ◆ IsNamespace(). Bool_t THtml::IsNamespace ; (; const TClass * ; cl). static . Check whether cl is a namespace. ; Definition at line 2202 of file THtml.cxx. ◆ LoadAllLibs(). void THtml::LoadAllLibs ; (; ). static . Load all libraries known to ROOT via the rootmap system. ; Definition at line 2210 of file THtml.cxx. ◆ MakeAll(). void THtml::MakeAll ; (; Bool_t ; force = kFALSE, . const char * ; filter = ""*"", . int ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTHtml.html:47833,avail,available,47833,doc/v632/classTHtml.html,https://root.cern,https://root.cern/doc/v632/classTHtml.html,2,['avail'],['available']
Availability,"94///; 1095/// Returns:; 1096/// - 0 branch added or already included; 1097/// - -1 on error; 1098 ; 1099Int_t TTree::AddBranchToCache(TBranch *b, bool subbranches); 1100{; 1101 if (!GetTree()) {; 1102 if (LoadTree(0)<0) {; 1103 Error(""AddBranchToCache"",""Could not load a tree"");; 1104 return -1;; 1105 }; 1106 }; 1107 if (GetTree()) {; 1108 if (GetTree() != this) {; 1109 Int_t res = GetTree()->AddBranchToCache(b, subbranches);; 1110 if (res<0) {; 1111 Error(""AddBranchToCache"", ""Error adding branch"");; 1112 }; 1113 return res;; 1114 }; 1115 } else {; 1116 Error(""AddBranchToCache"", ""No tree is available. Branch was not added to the cache"");; 1117 return -1;; 1118 }; 1119 ; 1120 TFile *f = GetCurrentFile();; 1121 if (!f) {; 1122 Error(""AddBranchToCache"", ""No file is available. Branch was not added to the cache"");; 1123 return -1;; 1124 }; 1125 TTreeCache *tc = GetReadCache(f,true);; 1126 if (!tc) {; 1127 Error(""AddBranchToCache"", ""No cache is available, branch not added"");; 1128 return -1;; 1129 }; 1130 return tc->AddBranch(b,subbranches);; 1131}; 1132 ; 1133////////////////////////////////////////////////////////////////////////////////; 1134/// Remove the branch with name 'bname' from the Tree cache.; 1135/// If bname=""*"" all branches are removed from the cache.; 1136/// if subbranches is true all the branches of the subbranches are; 1137/// also removed from the cache.; 1138///; 1139/// Returns:; 1140/// - 0 branch dropped or not in cache; 1141/// - -1 on error; 1142 ; 1143Int_t TTree::DropBranchFromCache(const char*bname, bool subbranches); 1144{; 1145 if (!GetTree()) {; 1146 if (LoadTree(0)<0) {; 1147 Error(""DropBranchFromCache"",""Could not load a tree"");; 1148 return -1;; 1149 }; 1150 }; 1151 if (GetTree()) {; 1152 if (GetTree() != this) {; 1153 return GetTree()->DropBranchFromCache(bname, subbranches);; 1154 }; 1155 } else {; 1156 Error(""DropBranchFromCache"", ""No tree is available. Branch was not dropped from the cache"");; 1157 return -1;; 1158 }; 1159 ; 1160 TFil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:40112,avail,available,40112,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['avail'],['available']
Availability,"941; TH1::GetBinContentvirtual Double_t GetBinContent(Int_t bin) constReturn content of bin number bin.Definition TH1.cxx:5061; TH1::GetBinErrorUpvirtual Double_t GetBinErrorUp(Int_t bin) constReturn upper error associated to bin number bin.Definition TH1.cxx:9110; TH2D2-D histogram with a double per channel (see TH1 documentation)Definition TH2.h:357; TH3C3-D histogram with a byte per channel (see TH1 documentation)Definition TH3.h:157; TH3C::SetBinsLengthvoid SetBinsLength(Int_t n=-1) overrideSet total number of bins including under/overflow Reallocate bin contents array.Definition TH3.cxx:3647; TH3C::operator*friend TH3C operator*(TH3C const &h1, Float_t c1)Definition TH3.h:182; TH3C::operator*friend TH3C operator*(Float_t c1, TH3C const &h1)Operator *.Definition TH3.cxx:3731; TH3C::~TH3C~TH3C() overrideDestructor.Definition TH3.cxx:3540; TH3C::operator-friend TH3C operator-(TH3C const &h1, TH3C const &h2)Operator -.Definition TH3.cxx:3755; TH3C::Resetvoid Reset(Option_t *option="""") overrideReset this histogram: contents, errors, etc.Definition TH3.cxx:3635; TH3C::operator+friend TH3C operator+(TH3C const &h1, TH3C const &h2)Operator +.Definition TH3.cxx:3743; TH3C::operator/friend TH3C operator/(TH3C const &h1, TH3C const &h2)Operator /.Definition TH3.cxx:3779; TH3C::AddBinContentvoid AddBinContent(Int_t binx, Int_t biny, Int_t binz, Double_t w) overrideIncrement 3D bin content by a weight w.Definition TH3.h:175; TH3C::RetrieveBinContentDouble_t RetrieveBinContent(Int_t bin) const overrideRaw retrieval of bin content on internal data structure see convention for numbering bins in TH1::Get...Definition TH3.h:189; TH3C::AddBinContentvoid AddBinContent(Int_t bin) overrideIncrement bin content by 1.Definition TH3.cxx:3603; TH3C::operator=TH3C & operator=(const TH3C &h1)Operator =.Definition TH3.cxx:3720; TH3C::AddBinContentvoid AddBinContent(Int_t binx, Int_t biny, Int_t binz) overrideIncrement 3D bin content by 1.Definition TH3.h:174; TH3C::TH3CTH3C()Constructor.Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8h_source.html:24642,error,errors,24642,doc/master/TH3_8h_source.html,https://root.cern,https://root.cern/doc/master/TH3_8h_source.html,1,['error'],['errors']
Availability,"94; Double_tdouble Double_tDefinition RtypesCore.h:59; Long64_tlong long Long64_tDefinition RtypesCore.h:69; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Option_tconst char Option_tDefinition RtypesCore.h:66; templateClassImp#define templateClassImp(name)Definition Rtypes.h:427; kPlus@ kPlusDefinition TAttMarker.h:53; TBuffer.h; operator<=Bool_t operator<=(const TDatime &d1, const TDatime &d2)Definition TDatime.h:108; operator>Bool_t operator>(const TDatime &d1, const TDatime &d2)Definition TDatime.h:110; operator!=Bool_t operator!=(const TDatime &d1, const TDatime &d2)Definition TDatime.h:104; operator>=Bool_t operator>=(const TDatime &d1, const TDatime &d2)Definition TDatime.h:112; operator<Bool_t operator<(const TDatime &d1, const TDatime &d2)Definition TDatime.h:106; TDecompLU.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; targetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMatrixT_8cxx_source.html:125308,error,error,125308,doc/master/TMatrixT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMatrixT_8cxx_source.html,1,['error'],['error']
Availability,"95 ///////////////////////////////////////////////////////////////////////; 196 ; 197 if( key == ""code"" ) {; 198 // Cleaning of the input command:; 199 // - Trim whitespaces at the borders; 200 // - Get the inner command (i.e. the part between quotes); 201 // - Trim whitespaces again; 202 // - Stitch back together; 203 auto clean_command = [](const std::string &c) {; 204 auto first_trim = TSchemaRuleProcessor::Trim(c);; 205 auto inner_command =; 206 first_trim.substr(first_trim.find_first_of('""') + 1, first_trim.find_last_of('""') - 1);; 207 auto second_trim = TSchemaRuleProcessor::Trim(inner_command);; 208 return '""' + second_trim + '""';; 209 };; 210 command = clean_command(command);; 211 ; 212 if( command[1] != '{' ) {; 213 error_string = ""Parsing error while processing key: code\n"";; 214 error_string += ""Expected \""{ at the beginning of the value."";; 215 return false;; 216 }; 217 l = command.find( ""}\"""" );; 218 if( l == std::string::npos ) {; 219 error_string = ""Parsing error while processing key: \"""" + key + ""\""\n"";; 220 error_string += ""Expected }\"" at the end of the value."";; 221 return false;; 222 }; 223 auto rawCode = command.substr( 2, l-2 );; 224 RemoveEscapeSequences(rawCode);; 225 result[key] = rawCode;; 226 ++l;; 227 }; 228 //--------------------------------------------------------------------; 229 // Processing normal tag: ""value""; 230 ///////////////////////////////////////////////////////////////////////; 231 ; 232 else {; 233 if( hasquote) {; 234 l = command.find( '""', 1 );; 235 if (l == std::string::npos ) {; 236 error_string = ""\nParsing error while processing key: \"""" + key + ""\""\n"";; 237 error_string += ""Expected \"" at the end of the value."";; 238 return false;; 239 }; 240 result[key] = command.substr( 1, l-1 );; 241 } else {; 242 l = command.find(' ', 1);; 243 if (l == std::string::npos) l = command.size();; 244 result[key] = command.substr( 0, l );; 245 }; 246 }; 247 ; 248 //--------------------------------------------------------------------; 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html:8110,error,error,8110,doc/master/RConversionRuleParser_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RConversionRuleParser_8cxx_source.html,2,['error'],['error']
Availability,"951 of file TClass.cxx. ◆ CreateClass() [2/2]. TClass * ROOT::CreateClass ; (; const char * ; cname, . Version_t ; id, . const std::type_info & ; info, . TVirtualIsAProxy * ; isa, . const char * ; dfil, . const char * ; ifil, . Int_t ; dl, . Int_t ; il . ). Global function called by a class' static Dictionary() method (see the ClassDef macro). ; Definition at line 5936 of file TClass.cxx. ◆ DisableImplicitMT(). void ROOT::DisableImplicitMT ; (; ). Disables the implicit multi-threading in ROOT (see EnableImplicitMT). ; Definition at line 556 of file TROOT.cxx. ◆ EnableImplicitMT(). void ROOT::EnableImplicitMT ; (; UInt_t ; numthreads = 0). Enable ROOT's implicit multi-threading for all objects and methods that provide an internal parallelisation mechanism. ; Parameters. [in]numthreadsNumber of threads to use. If not specified or set to zero, the number of threads is automatically decided by the implementation. Any other value is used as a hint. ROOT must be built with the compilation flag imt=ON for this feature to be available. The following objects and methods automatically take advantage of multi-threading if a call to EnableImplicitMT has been made before usage:. RDataFrame internally runs the event-loop by parallelizing over clusters of entries; TTree::GetEntry reads multiple branches in parallel; TTree::FlushBaskets writes multiple baskets to disk in parallel; TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; THx::Fit performs in parallel the evaluation of the objective function over the data; TMVA::DNN trains the deep neural networks in parallel; TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel. EnableImplicitMT calls in turn EnableThreadSafety. The 'numthreads' parameter allows to control the number of threads to be used by the implicit multi-threading. However, this parameter is just a hint for ROOT: it will try to satisfy the request if the execution scenario allows it. For example, if R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT.html:31584,avail,available,31584,doc/master/namespaceROOT.html,https://root.cern,https://root.cern/doc/master/namespaceROOT.html,1,['avail'],['available']
Availability,"96 return mg_get_var2(data, data_len, name, dst, dst_len, 0);; 6997}; 6998 ; 6999 ; 7000int; 7001mg_get_var2(const char *data,; 7002 size_t data_len,; 7003 const char *name,; 7004 char *dst,; 7005 size_t dst_len,; 7006 size_t occurrence); 7007{; 7008 const char *p, *e, *s;; 7009 size_t name_len;; 7010 int len;; 7011 ; 7012 if ((dst == NULL) || (dst_len == 0)) {; 7013 len = -2;; 7014 } else if ((data == NULL) || (name == NULL) || (data_len == 0)) {; 7015 len = -1;; 7016 dst[0] = '\0';; 7017 } else {; 7018 name_len = strlen(name);; 7019 e = data + data_len;; 7020 len = -1;; 7021 dst[0] = '\0';; 7022 ; 7023 /* data is ""var1=val1&var2=val2..."". Find variable first */; 7024 for (p = data; p + name_len < e; p++) {; 7025 if (((p == data) || (p[-1] == '&')) && (p[name_len] == '='); 7026 && !mg_strncasecmp(name, p, name_len) && 0 == occurrence--) {; 7027 /* Point p to variable value */; 7028 p += name_len + 1;; 7029 ; 7030 /* Point s to the end of the value */; 7031 s = (const char *)memchr(p, '&', (size_t)(e - p));; 7032 if (s == NULL) {; 7033 s = e;; 7034 }; 7035 DEBUG_ASSERT(s >= p);; 7036 if (s < p) {; 7037 return -3;; 7038 }; 7039 ; 7040 /* Decode variable into destination buffer */; 7041 len = mg_url_decode(p, (int)(s - p), dst, (int)dst_len, 1);; 7042 ; 7043 /* Redirect error code from -1 to -2 (destination buffer too; 7044 * small). */; 7045 if (len == -1) {; 7046 len = -2;; 7047 }; 7048 break;; 7049 }; 7050 }; 7051 }; 7052 ; 7053 return len;; 7054}; 7055 ; 7056 ; 7057/* split a string ""key1=val1&key2=val2"" into key/value pairs */; 7058int; 7059mg_split_form_urlencoded(char *data,; 7060 struct mg_header *form_fields,; 7061 unsigned num_form_fields); 7062{; 7063 char *b;; 7064 int i;; 7065 int num = 0;; 7066 ; 7067 if (data == NULL) {; 7068 /* parameter error */; 7069 return -1;; 7070 }; 7071 ; 7072 if ((form_fields == NULL) && (num_form_fields == 0)) {; 7073 /* determine the number of expected fields */; 7074 if (data[0] == 0) {; 7075 return 0;; 7076 }; 7077 /* count ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:203392,error,error,203392,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"963 gSystem->Exit(status);; 1964 }; 1965}; 1966 ; 1967////////////////////////////////////////////////////////////////////////////////; 1968/// Emit signal when a line has been processed.; 1969 ; 1970void TApplication::LineProcessed(const char *line); 1971{; 1972 Emit(""LineProcessed(const char*)"", line);; 1973}; 1974 ; 1975////////////////////////////////////////////////////////////////////////////////; 1976/// Emit signal when console keyboard key was pressed.; 1977 ; 1978void TApplication::KeyPressed(Int_t key); 1979{; 1980 Emit(""KeyPressed(Int_t)"", key);; 1981}; 1982 ; 1983////////////////////////////////////////////////////////////////////////////////; 1984/// Emit signal when return key was pressed.; 1985 ; 1986void TApplication::ReturnPressed(char *text ); 1987{; 1988 Emit(""ReturnPressed(char*)"", text);; 1989}; 1990 ; 1991////////////////////////////////////////////////////////////////////////////////; 1992/// Set console echo mode:; 1993///; 1994/// - mode = kTRUE - echo input symbols; 1995/// - mode = kFALSE - noecho input symbols; 1996 ; 1997void TApplication::SetEchoMode(Bool_t); 1998{; 1999}; 2000 ; 2001////////////////////////////////////////////////////////////////////////////////; 2002/// Static function used to create a default application environment.; 2003 ; 2004void TApplication::CreateApplication(); 2005{; 2006 R__LOCKGUARD(gROOTMutex);; 2007 // gApplication is set at the end of 'new TApplication.; 2008 if (!gApplication) {; 2009 char *a = StrDup(""RootApp"");; 2010 char *b = StrDup(""-b"");; 2011 char *argv[2];; 2012 Int_t argc = 2;; 2013 argv[0] = a;; 2014 argv[1] = b;; 2015 new TApplication(""RootApp"", &argc, argv, nullptr, 0);; 2016 if (gDebug > 0); 2017 Printf(""<TApplication::CreateApplication>: ""; 2018 ""created default TApplication"");; 2019 delete [] a; delete [] b;; 2020 gApplication->SetBit(kDefaultApplication);; 2021 }; 2022}; 2023 ; 2024////////////////////////////////////////////////////////////////////////////////; 2025/// Static function u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:75549,echo,echo,75549,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,2,['echo'],['echo']
Availability,"9659 }; 19660 return NULL;; 19661 }; 19662 ; 19663 /* Random number generator will initialize at the first call */; 19664 ctx->dd.auth_nonce_mask =; 19665 (uint64_t)get_random() ^ (uint64_t)(ptrdiff_t)(options);; 19666 ; 19667 /* Save started thread index to reuse in other external API calls; 19668 * For the sake of thread synchronization all non-civetweb threads; 19669 * can be considered as single external thread */; 19670 ctx->starter_thread_idx = (unsigned)mg_atomic_inc(&thread_idx_max);; 19671 tls.is_master = -1; /* Thread calling mg_start */; 19672 tls.thread_idx = ctx->starter_thread_idx;; 19673#if defined(_WIN32); 19674 tls.pthread_cond_helper_mutex = NULL;; 19675#endif; 19676 pthread_setspecific(sTlsKey, &tls);; 19677 ; 19678 ok = (0 == pthread_mutex_init(&ctx->thread_mutex, &pthread_mutex_attr));; 19679#if !defined(ALTERNATIVE_QUEUE); 19680 ok &= (0 == pthread_cond_init(&ctx->sq_empty, NULL));; 19681 ok &= (0 == pthread_cond_init(&ctx->sq_full, NULL));; 19682 ctx->sq_blocked = 0;; 19683#endif; 19684 ok &= (0 == pthread_mutex_init(&ctx->nonce_mutex, &pthread_mutex_attr));; 19685#if defined(USE_LUA); 19686 ok &= (0 == pthread_mutex_init(&ctx->lua_bg_mutex, &pthread_mutex_attr));; 19687#endif; 19688 if (!ok) {; 19689 const char *err_msg =; 19690 ""Cannot initialize thread synchronization objects"";; 19691 /* Fatal error - abort start. However, this situation should never; 19692 * occur in practice. */; 19693 ; 19694 mg_cry_ctx_internal(ctx, ""%s"", err_msg);; 19695 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19696 mg_snprintf(NULL,; 19697 NULL, /* No truncation check for error buffers */; 19698 error->text,; 19699 error->text_buffer_size,; 19700 ""%s"",; 19701 err_msg);; 19702 }; 19703 ; 19704 mg_free(ctx);; 19705 pthread_setspecific(sTlsKey, NULL);; 19706 return NULL;; 19707 }; 19708 ; 19709 if ((init != NULL) && (init->callbacks != NULL)) {; 19710 /* Set all callbacks except exit_context. */; 19711 ctx->callbacks = *init->callbacks;; 19712 exit_callba",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:587315,error,error,587315,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"9660 }; 19661 return NULL;; 19662 }; 19663 ; 19664 /* Random number generator will initialize at the first call */; 19665 ctx->dd.auth_nonce_mask =; 19666 (uint64_t)get_random() ^ (uint64_t)(ptrdiff_t)(options);; 19667 ; 19668 /* Save started thread index to reuse in other external API calls; 19669 * For the sake of thread synchronization all non-civetweb threads; 19670 * can be considered as single external thread */; 19671 ctx->starter_thread_idx = (unsigned)mg_atomic_inc(&thread_idx_max);; 19672 tls.is_master = -1; /* Thread calling mg_start */; 19673 tls.thread_idx = ctx->starter_thread_idx;; 19674#if defined(_WIN32); 19675 tls.pthread_cond_helper_mutex = NULL;; 19676#endif; 19677 pthread_setspecific(sTlsKey, &tls);; 19678 ; 19679 ok = (0 == pthread_mutex_init(&ctx->thread_mutex, &pthread_mutex_attr));; 19680#if !defined(ALTERNATIVE_QUEUE); 19681 ok &= (0 == pthread_cond_init(&ctx->sq_empty, NULL));; 19682 ok &= (0 == pthread_cond_init(&ctx->sq_full, NULL));; 19683 ctx->sq_blocked = 0;; 19684#endif; 19685 ok &= (0 == pthread_mutex_init(&ctx->nonce_mutex, &pthread_mutex_attr));; 19686#if defined(USE_LUA); 19687 ok &= (0 == pthread_mutex_init(&ctx->lua_bg_mutex, &pthread_mutex_attr));; 19688#endif; 19689 if (!ok) {; 19690 const char *err_msg =; 19691 ""Cannot initialize thread synchronization objects"";; 19692 /* Fatal error - abort start. However, this situation should never; 19693 * occur in practice. */; 19694 ; 19695 mg_cry_ctx_internal(ctx, ""%s"", err_msg);; 19696 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19697 mg_snprintf(NULL,; 19698 NULL, /* No truncation check for error buffers */; 19699 error->text,; 19700 error->text_buffer_size,; 19701 ""%s"",; 19702 err_msg);; 19703 }; 19704 ; 19705 mg_free(ctx);; 19706 pthread_setspecific(sTlsKey, NULL);; 19707 return NULL;; 19708 }; 19709 ; 19710 if ((init != NULL) && (init->callbacks != NULL)) {; 19711 /* Set all callbacks except exit_context. */; 19712 ctx->callbacks = *init->callbacks;; 19713 exit_callba",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:587348,error,error,587348,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"97 return mg_get_var2(data, data_len, name, dst, dst_len, 0);; 6998}; 6999 ; 7000 ; 7001int; 7002mg_get_var2(const char *data,; 7003 size_t data_len,; 7004 const char *name,; 7005 char *dst,; 7006 size_t dst_len,; 7007 size_t occurrence); 7008{; 7009 const char *p, *e, *s;; 7010 size_t name_len;; 7011 int len;; 7012 ; 7013 if ((dst == NULL) || (dst_len == 0)) {; 7014 len = -2;; 7015 } else if ((data == NULL) || (name == NULL) || (data_len == 0)) {; 7016 len = -1;; 7017 dst[0] = '\0';; 7018 } else {; 7019 name_len = strlen(name);; 7020 e = data + data_len;; 7021 len = -1;; 7022 dst[0] = '\0';; 7023 ; 7024 /* data is ""var1=val1&var2=val2..."". Find variable first */; 7025 for (p = data; p + name_len < e; p++) {; 7026 if (((p == data) || (p[-1] == '&')) && (p[name_len] == '='); 7027 && !mg_strncasecmp(name, p, name_len) && 0 == occurrence--) {; 7028 /* Point p to variable value */; 7029 p += name_len + 1;; 7030 ; 7031 /* Point s to the end of the value */; 7032 s = (const char *)memchr(p, '&', (size_t)(e - p));; 7033 if (s == NULL) {; 7034 s = e;; 7035 }; 7036 DEBUG_ASSERT(s >= p);; 7037 if (s < p) {; 7038 return -3;; 7039 }; 7040 ; 7041 /* Decode variable into destination buffer */; 7042 len = mg_url_decode(p, (int)(s - p), dst, (int)dst_len, 1);; 7043 ; 7044 /* Redirect error code from -1 to -2 (destination buffer too; 7045 * small). */; 7046 if (len == -1) {; 7047 len = -2;; 7048 }; 7049 break;; 7050 }; 7051 }; 7052 }; 7053 ; 7054 return len;; 7055}; 7056 ; 7057 ; 7058/* split a string ""key1=val1&key2=val2"" into key/value pairs */; 7059int; 7060mg_split_form_urlencoded(char *data,; 7061 struct mg_header *form_fields,; 7062 unsigned num_form_fields); 7063{; 7064 char *b;; 7065 int i;; 7066 int num = 0;; 7067 ; 7068 if (data == NULL) {; 7069 /* parameter error */; 7070 return -1;; 7071 }; 7072 ; 7073 if ((form_fields == NULL) && (num_form_fields == 0)) {; 7074 /* determine the number of expected fields */; 7075 if (data[0] == 0) {; 7076 return 0;; 7077 }; 7078 /* count ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:203424,error,error,203424,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"978 RXColor *xcol = new RXColor[ncolors];; 2979 ; 2980 int i;; 2981 for (i = 0; i < ncolors; i++) {; 2982 xcol[i].pixel = orgcolors[i];; 2983 xcol[i].red = xcol[i].green = xcol[i].blue = 0;; 2984 xcol[i].flags = DoRed | DoGreen | DoBlue;; 2985 }; 2986 QueryColors(fColormap, xcol, ncolors);; 2987 ; 2988 UShort_t add = percent * kBIGGEST_RGB_VALUE / 100;; 2989 ; 2990 Int_t val;; 2991 for (i = 0; i < ncolors; i++) {; 2992 val = xcol[i].red + add;; 2993 if (val > kBIGGEST_RGB_VALUE) val = kBIGGEST_RGB_VALUE;; 2994 xcol[i].red = (UShort_t) val;; 2995 val = xcol[i].green + add;; 2996 if (val > kBIGGEST_RGB_VALUE) val = kBIGGEST_RGB_VALUE;; 2997 xcol[i].green = (UShort_t) val;; 2998 val = xcol[i].blue + add;; 2999 if (val > kBIGGEST_RGB_VALUE) val = kBIGGEST_RGB_VALUE;; 3000 xcol[i].blue = (UShort_t) val;; 3001 if (!AllocColor(fColormap, &xcol[i])); 3002 Warning(""MakeOpaqueColors"", ""failed to allocate color %hd, %hd, %hd"",; 3003 xcol[i].red, xcol[i].green, xcol[i].blue);; 3004 // assumes that in case of failure xcol[i].pixel is not changed; 3005 }; 3006 ; 3007 gCws->fNewColors = new ULong_t[ncolors];; 3008 gCws->fNcolors = ncolors;; 3009 ; 3010 for (i = 0; i < ncolors; i++); 3011 gCws->fNewColors[i] = xcol[i].pixel;; 3012 ; 3013 delete [] xcol;; 3014}; 3015 ; 3016////////////////////////////////////////////////////////////////////////////////; 3017/// Returns index in orgcolors (and fNewColors) for pixel.; 3018 ; 3019Int_t TGX11::FindColor(ULong_t pixel, ULong_t *orgcolors, Int_t ncolors); 3020{; 3021 for (int i = 0; i < ncolors; i++); 3022 if (pixel == orgcolors[i]) return i;; 3023 ; 3024 Error(""FindColor"", ""did not find color, should never happen!"");; 3025 ; 3026 return 0;; 3027}; 3028 ; 3029////////////////////////////////////////////////////////////////////////////////; 3030/// Set color intensities for given color index.; 3031///; 3032/// \param [in] cindex : color index; 3033/// \param [in] r,g,b : red, green, blue intensities between 0.0 and 1.0; 3034 ; 3035void TGX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGX11_8cxx_source.html:100216,failure,failure,100216,doc/master/TGX11_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGX11_8cxx_source.html,1,['failure'],['failure']
Availability,98 0; : 603 Minimum Test error found - save the configuration ; : 603 | 116.739 75.9525 0.0201101 0.00180951 43714.3 0; : 604 Minimum Test error found - save the configuration ; : 604 | 115.282 75.4842 0.0201093 0.00181811 43737 0; : 605 Minimum Test error found - save the configuration ; : 605 | 113.756 74.5415 0.0201179 0.00181105 43699.5 0; : 606 Minimum Test error found - save the configuration ; : 606 | 112.65 73.8117 0.0200987 0.00180944 43741.5 0; : 607 Minimum Test error found - save the configuration ; : 607 | 110.993 73.1273 0.0200934 0.00180455 43742.6 0; : 608 Minimum Test error found - save the configuration ; : 608 | 109.653 72.3206 0.0201066 0.00180567 43713.6 0; : 609 Minimum Test error found - save the configuration ; : 609 | 108.357 71.632 0.0200983 0.00180999 43743.9 0; : 610 Minimum Test error found - save the configuration ; : 610 | 106.875 70.7773 0.0201154 0.00182046 43728 0; : 611 | 105.742 70.7984 0.0200525 0.00175765 43728.1 1; : 612 Minimum Test error found - save the configuration ; : 612 | 104.268 69.338 0.0202166 0.00183521 43522.3 0; : 613 Minimum Test error found - save the configuration ; : 613 | 102.858 68.9009 0.0202348 0.00182917 43464.9 0; : 614 Minimum Test error found - save the configuration ; : 614 | 101.983 68.108 0.0201318 0.00182452 43698.5 0; : 615 Minimum Test error found - save the configuration ; : 615 | 100.329 67.3723 0.0201441 0.00182383 43667.6 0; : 616 Minimum Test error found - save the configuration ; : 616 | 99.0728 66.9343 0.0201375 0.00182665 43689.9 0; : 617 Minimum Test error found - save the configuration ; : 617 | 97.8374 65.9501 0.0201618 0.00184005 43664 0; : 618 Minimum Test error found - save the configuration ; : 618 | 96.3739 65.107 0.0201565 0.0018204 43629.8 0; : 619 Minimum Test error found - save the configuration ; : 619 | 95.4431 64.9258 0.0202106 0.00183339 43532.2 0; : 620 Minimum Test error found - save the configuration ; : 620 | 94.1902 64.0162 0.020412 0.0018551 43110.6 0; : 621 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:80101,error,error,80101,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"99 /**; 200 flag to check if resulting errors are be normalized according to chi2/ndf; 201 */; 202 bool NormalizeErrors() const { return fNormErrors; }; 203 ; 204 ///do analysis for parabolic errors; 205 bool ParabErrors() const { return fParabErrors; }; 206 ; 207 ///do minos errors analysis on the parameters; 208 bool MinosErrors() const { return fMinosErrors; }; 209 ; 210 ///Update configuration after a fit using the FitResult; 211 bool UpdateAfterFit() const { return fUpdateAfterFit; }; 212 ; 213 ///Apply Weight correction for error matrix computation; 214 bool UseWeightCorrection() const { return fWeightCorr; }; 215 ; 216 ; 217 /// return vector of parameter indices for which the Minos Error will be computed; 218 const std::vector<unsigned int> & MinosParams() const { return fMinosParams; }; 219 ; 220 /**; 221 set the option to normalize the error on the result according to chi2/ndf; 222 */; 223 void SetNormErrors(bool on = true) { fNormErrors= on; }; 224 ; 225 ///set parabolic errors; 226 void SetParabErrors(bool on = true) { fParabErrors = on; }; 227 ; 228 ///set Minos errors computation to be performed after fitting; 229 void SetMinosErrors(bool on = true) { fMinosErrors = on; }; 230 ; 231 ///apply the weight correction for error matrix computation; 232 void SetWeightCorrection(bool on = true) { fWeightCorr = on; }; 233 ; 234 /// set parameter indices for running Minos; 235 /// this can be used for running Minos on a subset of parameters - otherwise is run on all of them; 236 /// if MinosErrors() is set; 237 void SetMinosErrors(const std::vector<unsigned int> & paramInd ) {; 238 fMinosErrors = true;; 239 fMinosParams = paramInd;; 240 }; 241 ; 242 ///Update configuration after a fit using the FitResult; 243 void SetUpdateAfterFit(bool on = true) { fUpdateAfterFit = on; }; 244 ; 245 ; 246 /**; 247 static function to control default minimizer type and algorithm; 248 */; 249 static void SetDefaultMinimizer(const char *type, const char *algo = nullptr);; 250 ; 251 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:6568,error,errors,6568,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['error'],['errors']
Availability,"994; [18] h = 5.82077e-11 , s = 4.00003; [19] h = 1.45519e-11 , s = 3.99998; [20] h = 3.63798e-12 , s = 4.00001; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x7f45240 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1; [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(model) creating new cache 0x84ccbe0 with pdf gx_CONV_model_mean_CACHE_Obs[x,mean]_NORM_x_mean for nset (x,mean) with code 1 from preexisting content.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[mean]_Norm[mean,x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[mean]_Norm[mean,x]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 0.5; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for mean: using 0.6; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma: using 0.2; sigma=0.5, [#0] WARNING:Eval -- The FFT convolution 'model' will run with 50 bins. A decent accuracy for difficult convolutions is typically only reached with n >= 1000. Suggest to increase the number of bins of the observable 'mean'.; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_mean_Int[mean]) using numeric integrator RooIntegrator1D to calculate Int(mean); [#0] WARNING:Integration -- RooRombergIntegrator::integral: integral ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf211__paramconv_8py.html:6000,error,error,6000,doc/master/rf211__paramconv_8py.html,https://root.cern,https://root.cern/doc/master/rf211__paramconv_8py.html,3,"['avail', 'error']","['available', 'error']"
Availability,"9999999999999995E-7) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::Distance",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoHelix.html:2389,error,error,2389,root/html602/TGeoHelix.html,https://root.cern,https://root.cern/root/html602/TGeoHelix.html,4,['error'],['error']
Availability,"999through filters, defines and actions, and RDataFrame will take these dependencies into account when producing varied; 1000results. \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" is included in header `ROOT/RDFHelpers.hxx`. The compiled C++ programs must include this header; 1001explicitly, this is not required for ROOT macros. ; 1002 ; 1003An example usage of Vary() and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in C++:; 1004 ; 1005~~~{.cpp}; 1006auto nominal_hx =; 1007 df.Vary(""pt"", ""ROOT::RVecD{pt*0.9f, pt*1.1f}"", {""down"", ""up""}); 1008 .Filter(""pt > pt_cut""); 1009 .Define(""x"", someFunc, {""pt""}); 1010 .Histo1D<float>(""x"");; 1011 ; 1012// request the generation of varied results from the nominal_hx; 1013ROOT::RDF::Experimental::RResultMap<TH1D> hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; 1014 ; 1015// the event loop runs here, upon first access to any of the results or varied results:; 1016hx[""nominal""].Draw(); // same effect as nominal_hx->Draw(); 1017hx[""pt:down""].Draw(""SAME"");; 1018hx[""pt:up""].Draw(""SAME"");; 1019~~~; 1020 ; 1021A list of variation ""tags"" is passed as the last argument to Vary(). The tags give names to the varied values that are returned; 1022as elements of an RVec of the appropriate C++ type. The number of variation tags must correspond to the number of elements of; 1023this RVec (2 in the example above: the first element will correspond to the tag ""down"", the second; 1024to the tag ""up""). The _full_ variation name will be composed of the varied column name and the variation tags (e.g.; 1025""pt:down"", ""pt:up"" in this example). Python usage looks similar.; 1026 ; 1027Note how we use the ""pt"" column as usual in the Filter() and Define() calls and we simply use ""x"" as the value to fill; 1028the resulting histogram. To produce the varied results, RDataFrame will automatically execute the Filter and Define; 1029calls for each variation and fill the histogram with values and cuts that depend on the var",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:59787,down,down,59787,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['down'],['down']
Availability,"99 . ). virtual . Create a new TTree BranchElement. . WARNING about this new function; This function is designed to replace the internal implementation of the old TTree::Branch (whose implementation has been moved to BranchOld).; NOTE: The 'Bronch' method supports only one possible calls signature (where the object type has to be specified explicitly and the address must be the address of a pointer). For more flexibility use 'Branch'. Use Bronch only in (rare) cases (likely to be legacy cases) where both the new and old implementation of Branch needs to be used at the same time.; This function is far more powerful than the old Branch function. It supports the full C++, including STL and has the same behaviour in split or non-split mode. classname does not have to derive from TObject. The function is based on the new TStreamerInfo.; Build a TBranchElement for an object of class classname.; addr is the address of a pointer to an object of class classname. The class dictionary must be available (ClassDef in class header).; Note: See the comments in TBranchElement::SetAddress() for a more detailed discussion of the meaning of the addr parameter.; This option requires access to the library where the corresponding class is defined. Accessing one single data member in the object implies reading the full object.; By default the branch buffers are stored in the same file as the Tree. use TBranch::SetFile to specify a different file; IMPORTANT NOTE about branch names:; And in general, in case two or more master branches contain subbranches with identical names, one must add a ""."" (dot) character at the end of the master branch name. This will force the name of the subbranches to be of the form master.subbranch instead of simply subbranch. This situation happens when the top level object has two or more members referencing the same class. For example, if a Tree has two branches B1 and B2 corresponding to objects of the same class MyClass, one can do: tree.Branch(""B1."",""MyClass""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:96073,avail,available,96073,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,2,['avail'],['available']
Availability,"9; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::SavePrimitivevirtual void SavePrimitive(std::ostream &out, Option_t *option="""")Save a primitive as a C++ statement(s) on output stream ""out"".Definition TObject.cxx:757; TObject::IsZombieR__ALWAYS_INLINE Bool_t IsZombie() constDefinition TObject.h:153; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::lsvirtual void ls(Option_t *option="""") constThe ls function lists the contents of a class on stdout.Definition TObject.cxx:579; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::kCanDelete@ kCanDeleteif object in a list can be deletedDefinition TObject.h:62; TObject::kInvalidObject@ kInvalidObjectif object ctor succeeded but object should not be usedDefinition TObject.h:72; TObject::kMustCleanup@ kMustCleanupif object destructor must call RecursiveRemove()Definition TObject.h:64; TPluginHandlerDefinition TPluginManager.h:103; TROOT::IncreaseDirLevelstatic Int_t IncreaseDirLevel()Increase the indentation level for ls().Definition TROOT.cxx:2887; TROOT::DecreaseDirLevelstatic Int_t DecreaseDirLevel()Decrease the indentation level for ls().Definition TROOT.cxx:2746; TSelectorA TSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:140309,error,error,140309,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['error'],['error']
Availability,"9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. leg = new TLegend(0.1,0.7,0.48,0.9);; leg->SetHeader(""The Legend Title"");; leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; leg->Draw();. return c1;; }; Note that the TPad class has a method to build automatically a legend; for all objects in the pad. It is called TPad::BuildLegend(). Each item in the legend is added using the AddEntry method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified. As shown in the following example, passing a NULL pointer as first parameter in; AddEntry is also valid. This allows to add text or blank lines in a; legend. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg->AddEntry(h, ""Histogram \""h\"""", ""l""); ; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry((TObject*)0, ""Some text"", """");; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. leg->Draw();; return c2;; }. Function Members (Methods); public:. TLegend(); TLegend(const TLegend& legend); TLegend(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* header = """", Option_t* option = ""brNDC""); virtual~TLegend(); voidTObject::AbstractMethod(const char* method) const; TLegendEntry*AddEntry(const TObject* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLegend.html:2852,error,error,2852,root/html528/TLegend.html,https://root.cern,https://root.cern/root/html528/TLegend.html,2,['error'],['error']
Availability,"9;; ex[i] = 1.0;; ey[i] = 10.*i;; }; TGraphErrors *gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetName(""gr"");; gr->SetLineColor(kRed);; gr->SetLineWidth(2);; gr->SetMarkerStyle(21);; gr->SetMarkerSize(1.3);; gr->SetMarkerColor(7);; gr->Draw(""P"");. leg = new TLegend(0.1,0.7,0.48,0.9);; leg->SetHeader(""The Legend Title"");; leg->AddEntry(h1,""Histogram filled with random numbers"",""f"");; leg->AddEntry(""f1"",""Function abs(#frac{sin(x)}{x})"",""l"");; leg->AddEntry(""gr"",""Graph with error bars"",""lep"");; leg->Draw();. return c1;; }; Note that the TPad class has a method to build automatically a legend; for all objects in the pad. It is called TPad::BuildLegend(). Each item in the legend is added using the AddEntry method. This; method defines the object to be added (by reference or name), the label; associated to this object and an option which a combination of:. L: draw line associated with TAttLine if obj inherits from TAttLine; P: draw polymarker associated with TAttMarker if obj inherits from TAttMarker; F: draw a box with fill associated wit TAttFill if obj inherits TAttFill; E: draw vertical error bar if option ""L"" is also specified. As shown in the following example, passing a NULL pointer as first parameter in; AddEntry is also valid. This allows to add text or blank lines in a; legend. Picture; Source. {; TCanvas *c2 = new TCanvas(""c2"",""c2"",500,300);. TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);. leg->AddEntry(h, ""Histogram \""h\"""", ""l""); ; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry((TObject*)0, ""Some text"", """");; leg->AddEntry((TObject*)0, """", """"); ; leg->AddEntry(h, ""Histogram \""h\"" again"", ""l"");. leg->Draw();; return c2;; }; It is possible to draw the legend entries over several columns using; the method SetNColumns() like in the following example. Picture; Source. {; TCanvas *c3 = new TCanvas(""c2"",""c2"",500,300);; ; TLegend* leg = new TLegend(0.2, 0.2, .8, .8);; TH1* h = new TH1F("""", """", 1, 0, 1);; ; leg-> SetNColumns(2);; ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TLegend.html:2852,error,error,2852,root/html532/TLegend.html,https://root.cern,https://root.cern/root/html532/TLegend.html,1,['error'],['error']
Availability,"9int; 20300mg_start_domain2(struct mg_context *ctx,; 20301 const char **options,; 20302 struct mg_error_data *error); 20303{; 20304 const char *name;; 20305 const char *value;; 20306 const char *default_value;; 20307 struct mg_domain_context *new_dom;; 20308 struct mg_domain_context *dom;; 20309 int idx, i;; 20310 ; 20311 if (error != NULL) {; 20312 error->code = 0;; 20313 if (error->text_buffer_size > 0) {; 20314 *error->text = 0;; 20315 }; 20316 }; 20317 ; 20318 if ((ctx == NULL) || (options == NULL)) {; 20319 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20320 mg_snprintf(NULL,; 20321 NULL, /* No truncation check for error buffers */; 20322 error->text,; 20323 error->text_buffer_size,; 20324 ""%s"",; 20325 ""Invalid parameters"");; 20326 }; 20327 return -1;; 20328 }; 20329 ; 20330 if (!STOP_FLAG_IS_ZERO(&ctx->stop_flag)) {; 20331 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20332 mg_snprintf(NULL,; 20333 NULL, /* No truncation check for error buffers */; 20334 error->text,; 20335 error->text_buffer_size,; 20336 ""%s"",; 20337 ""Server already stopped"");; 20338 }; 20339 return -1;; 20340 }; 20341 ; 20342 new_dom = (struct mg_domain_context *); 20343 mg_calloc_ctx(1, sizeof(struct mg_domain_context), ctx);; 20344 ; 20345 if (!new_dom) {; 20346 /* Out of memory */; 20347 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20348 mg_snprintf(NULL,; 20349 NULL, /* No truncation check for error buffers */; 20350 error->text,; 20351 error->text_buffer_size,; 20352 ""%s"",; 20353 ""Out or memory"");; 20354 }; 20355 return -6;; 20356 }; 20357 ; 20358 /* Store options - TODO: unite duplicate code */; 20359 while (options && (name = *options++) != NULL) {; 20360 if ((idx = get_option_index(name)) == -1) {; 20361 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 20362 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20363 mg_snprintf(NULL,; 20364 NULL, /* No truncation check for error buffers */; 20365 error->text,; 20366 error->text_buffer_size,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:607830,error,error,607830,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"9| Option | Description |; 250|----------|-------------------------------------------------------------------|; 251| "" "" | Default. |; 252| ""AH"" | Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis.|; 253| ""]["" | When this option is selected the first and last vertical lines of the histogram are not drawn.|; 254| ""B"" | Bar chart option.|; 255| ""BAR"" | Like option ""B"", but bars can be drawn with a 3D effect.|; 256| ""HBAR"" | Like option ""BAR"", but bars are drawn horizontally.|; 257| ""C"" | Draw a smooth Curve through the histogram bins.|; 258| ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; 259| ""E1"" | Draw error bars with perpendicular lines at the edges.|; 260| ""E2"" | Draw error bars with rectangles.|; 261| ""E3"" | Draw a fill area through the end points of the vertical error bars.|; 262| ""E4"" | Draw a smoothed filled area through the end points of the error bars.|; 263| ""E5"" | Like E3 but ignore the bins with 0 contents.|; 264| ""E6"" | Like E4 but ignore the bins with 0 contents.|; 265| ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; 266| ""L"" | Draw a line through the bin contents.|; 267| ""P"" | Draw current marker at each bin except empty bins.|; 268| ""P*"" | Draw a star marker at each bin except empty bins.|; 269| ""P0"" | Draw current marker at each bin including empty bins.|; 270| ""PIE"" | Draw histogram as a Pie Chart.|; 271| ""*H"" | Draw histogram with a * at each bin.|; 272| ""LF2"" | Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour.|; 273 ; 274 ; 275\anchor HP01c; 276#### Options supported for 2D histograms; 277 ; 278| Option | Description |; 279|--------------|----------------------------------------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:11620,error,error,11620,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['error'],['error']
Availability,": "" << realVar->GetName() << std::endl;; 979 }; 980 plotClones.addClone(*realVar,true); // do not complain about duplicates; 981 }; 982 ; 983 // Reconnect all plotClones to each other, imported when plotting N-dim integrals with entangled parameterized ranges; 984 for(RooAbsArg * pc : plotClones) {; 985 pc->recursiveRedirectServers(plotClones,false,false,true) ;; 986 }; 987 ; 988 // Call checkObservables; 989 RooArgSet allDeps(plotClones) ;; 990 if (projectedVars) {; 991 allDeps.add(*projectedVars) ;; 992 }; 993 if (checkObservables(&allDeps)) {; 994 coutE(InputArguments) << ""RooAbsReal::fillHistogram("" << GetName() << "") error in checkObservables, abort"" << std::endl ;; 995 return hist ;; 996 }; 997 ; 998 // Create a standalone projection object to use for calculating bin contents; 999 RooArgSet *cloneSet = nullptr;; 1000 const RooAbsReal *projected= createPlotProjection(plotClones,projectedVars,cloneSet,nullptr,condObs);; 1001 ; 1002 cxcoutD(Plotting) << ""RooAbsReal::fillHistogram("" << GetName() << "") plot projection object is "" << projected->GetName() << std::endl ;; 1003 ; 1004 // Prepare to loop over the histogram bins; 1005 Int_t xbins(0);; 1006 Int_t ybins(1);; 1007 Int_t zbins(1);; 1008 RooRealVar *xvar = nullptr;; 1009 RooRealVar *yvar = nullptr;; 1010 RooRealVar *zvar = nullptr;; 1011 TAxis *xaxis = nullptr;; 1012 TAxis *yaxis = nullptr;; 1013 TAxis *zaxis = nullptr;; 1014 switch(hdim) {; 1015 case 3:; 1016 zbins= hist->GetNbinsZ();; 1017 zvar= dynamic_cast<RooRealVar*>(plotClones.find(plotVars.at(2)->GetName()));; 1018 zaxis= hist->GetZaxis();; 1019 assert(nullptr != zvar && nullptr != zaxis);; 1020 if (scaleForDensity) {; 1021 scaleFactor*= (zaxis->GetXmax() - zaxis->GetXmin())/zbins;; 1022 }; 1023 // fall through to next case...; 1024 case 2:; 1025 ybins= hist->GetNbinsY();; 1026 yvar= dynamic_cast<RooRealVar*>(plotClones.find(plotVars.at(1)->GetName()));; 1027 yaxis= hist->GetYaxis();; 1028 assert(nullptr != yvar && nullptr != yaxis);; 1029 if (scaleFo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:40667,error,error,40667,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['error']
Availability,": """",; 15394 ri->http_version,; 15395 conn->status_code,; 15396 conn->num_bytes_sent,; 15397 referer,; 15398 user_agent);; 15399 }; 15400 ; 15401 /* Here we have a log message in log_buf. Call the callback */; 15402 if (conn->phys_ctx->callbacks.log_access) {; 15403 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15404 /* do not log if callack returns non-zero */; 15405 if (fi.access.fp) {; 15406 mg_fclose(&fi.access);; 15407 }; 15408 return;; 15409 }; 15410 }; 15411 ; 15412 /* Store in file */; 15413 if (fi.access.fp) {; 15414 int ok = 1;; 15415 flockfile(fi.access.fp);; 15416 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15417 ok = 0;; 15418 }; 15419 if (fflush(fi.access.fp) != 0) {; 15420 ok = 0;; 15421 }; 15422 funlockfile(fi.access.fp);; 15423 if (mg_fclose(&fi.access) != 0) {; 15424 ok = 0;; 15425 }; 15426 if (!ok) {; 15427 mg_cry_internal(conn,; 15428 ""Error writing log file %s"",; 15429 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15430 }; 15431 }; 15432}; 15433#else; 15434#error ""Either enable filesystems or provide a custom log_access implementation""; 15435#endif /* Externally provided function */; 15436 ; 15437 ; 15438/* Verify given socket address against the ACL.; 15439 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15440 */; 15441static int; 15442check_acl(struct mg_context *phys_ctx, const union usa *sa); 15443{; 15444 int allowed, flag, matched;; 15445 struct vec vec;; 15446 ; 15447 if (phys_ctx) {; 15448 const char *list = phys_ctx->dd.config[ACCESS_CONTROL_LIST];; 15449 ; 15450 /* If any ACL is set, deny by default */; 15451 allowed = (list == NULL) ? '+' : '-';; 15452 ; 15453 while ((list = next_option(list, &vec, NULL)) != NULL) {; 15454 flag = vec.ptr[0];; 15455 matched = -1;; 15456 if ((vec.len > 0) && ((flag == '+') || (flag == '-'))) {; 15457 vec.ptr++;; 15458 vec.len--;; 15459 matched = parse_match_net(&vec, sa, 1);; 15460 }; 15461 if (matched < 0) {; 15462 mg_cry_ctx_internal(phys_ctx,; 15463 ""%s: su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:456226,error,error,456226,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,": """",; 15395 ri->http_version,; 15396 conn->status_code,; 15397 conn->num_bytes_sent,; 15398 referer,; 15399 user_agent);; 15400 }; 15401 ; 15402 /* Here we have a log message in log_buf. Call the callback */; 15403 if (conn->phys_ctx->callbacks.log_access) {; 15404 if (conn->phys_ctx->callbacks.log_access(conn, log_buf)) {; 15405 /* do not log if callack returns non-zero */; 15406 if (fi.access.fp) {; 15407 mg_fclose(&fi.access);; 15408 }; 15409 return;; 15410 }; 15411 }; 15412 ; 15413 /* Store in file */; 15414 if (fi.access.fp) {; 15415 int ok = 1;; 15416 flockfile(fi.access.fp);; 15417 if (fprintf(fi.access.fp, ""%s\n"", log_buf) < 1) {; 15418 ok = 0;; 15419 }; 15420 if (fflush(fi.access.fp) != 0) {; 15421 ok = 0;; 15422 }; 15423 funlockfile(fi.access.fp);; 15424 if (mg_fclose(&fi.access) != 0) {; 15425 ok = 0;; 15426 }; 15427 if (!ok) {; 15428 mg_cry_internal(conn,; 15429 ""Error writing log file %s"",; 15430 conn->dom_ctx->config[ACCESS_LOG_FILE]);; 15431 }; 15432 }; 15433}; 15434#else; 15435#error ""Either enable filesystems or provide a custom log_access implementation""; 15436#endif /* Externally provided function */; 15437 ; 15438 ; 15439/* Verify given socket address against the ACL.; 15440 * Return -1 if ACL is malformed, 0 if address is disallowed, 1 if allowed.; 15441 */; 15442static int; 15443check_acl(struct mg_context *phys_ctx, const union usa *sa); 15444{; 15445 int allowed, flag, matched;; 15446 struct vec vec;; 15447 ; 15448 if (phys_ctx) {; 15449 const char *list = phys_ctx->dd.config[ACCESS_CONTROL_LIST];; 15450 ; 15451 /* If any ACL is set, deny by default */; 15452 allowed = (list == NULL) ? '+' : '-';; 15453 ; 15454 while ((list = next_option(list, &vec, NULL)) != NULL) {; 15455 flag = vec.ptr[0];; 15456 matched = -1;; 15457 if ((vec.len > 0) && ((flag == '+') || (flag == '-'))) {; 15458 vec.ptr++;; 15459 vec.len--;; 15460 matched = parse_match_net(&vec, sa, 1);; 15461 }; 15462 if (matched < 0) {; 15463 mg_cry_ctx_internal(phys_ctx,; 15464 ""%s: su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:456259,error,error,456259,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,: --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.629389 0.0419042 4255.43 0; : 2 | 0.694153 0.694394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for traini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16405,error,error,16405,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability,": -2220.000000; server values: x=x=0, coefList=(a1 = 10 +/- 0,a2 = -1 +/- 0,a3 = 0.01); ; ; ; -------------- Starting second fit ---------------; ; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(pol3_over_pol3_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_pol3_over_pol3_Int[x]_pol3Data) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; Minuit2Minimizer: Minimize with max-calls 1000 convergence for edm < 1 strategy 1; Minuit2Minimizer : Valid minimum - status = 0; FVAL = -1002.2262595660759; Edm = 2.95538313214564806e-09; Nfcn = 251; a1 = -0.498159 +/- 0.0227242 (limited); a2 = 0.198316 +/- 0.00564906 (limited); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 0, estimated distance to minimum: 0; covariance matrix quality: Not calculated at all; Status : MINIMIZE=-1 HESSE=302 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 1.0000e+01 +/- 0.00e+00; a2 -1.0000e+00 +/- 0.00e+00; ; Without recovery, the fitter encountered 23 invalid function values. The parameters are unchanged.; ; RooFitResult: minimized FCN value: 29650.9, estimated distance to minimum: 2.95925e-09; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a1 -4.9816e-01 +/- 2.27e-02; a2 1.9832e-01 +/- 5.65e-03; ; With recovery, the fitter encountered 76 invalid function values, but the parameters are fitted.; Date10/2020 ; AuthorStephan Hageboeck ; Definition in file rf612_recoverFromInvalidParameters.C. tutorialsroofitrf612_recoverFromInvalidParameters.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf612__recoverFromInvalidParameters_8C.html:11119,recover,recovery,11119,doc/master/rf612__recoverFromInvalidParameters_8C.html,https://root.cern,https://root.cern/doc/master/rf612__recoverFromInvalidParameters_8C.html,2,['recover'],['recovery']
Availability,: 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23687,error,error,23687,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test error found - save the configuration ; : 119 | 11569.9 10554.7 0.0200191 0.00179411 43895.9 0; : 120 Minimum Test error found - save the configuration ; : 120 | 11473 10462 0.0200241 0.00179418 43883.8 0; : 121 Minimum Test error found - save the configuration ; : 121 | 11379.1 10368.9 0.0200276 0.00179623 43880.4 0; : 122 Minimum Test error found - save the configuration ; : 122 | 11283.5 10279 0.0203977 0.00185462 43142.8 0; : 123 Minimum Test error found - save the configuration ; : 123 | 11193.7 10184.6 0.0202751 0.00180182 43305.7 0; : 124 Minimum Test error found - save the configuration ; : 124 | 11099.9 10093.3 0.0200203 0.00180095 43909.4 0; : 125 Minimum Test error found - save the configuration ; : 125 | 11007.6 10003.9 0.020012 0.00179997 43927 0; : 126 Minimum Test error found - save the configuration ; : 126 | 10916.6 9915.56 0.020034 0.00179861 43870.8 0; : 127 Minimum Test error found - save the configuration ; : 127 | 10828 9825.55 0.020018 0.00180003 43912.6 0; : 128 Minimum Test error found - save the configuration ; : 128 | 10738.5 9736.79 0.020043 0.00181097 43878.8 0; : 129 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:24482,error,error,24482,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33414,error,error,33414,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38515,error,error,38515,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46222,error,error,46222,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46336,error,error,46336,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46450,error,error,46450,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46564,error,error,46564,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46678,error,error,46678,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46792,error,error,46792,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46906,error,error,46906,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test error found - save the configuration ; : 391 | 1136.83 645.4 0.0202307 0.00186692 43564 0; : 392 Minimum Test erro,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54271,error,error,54271,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,: 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70363,error,error,70363,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,": Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 6 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 7 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 119.005; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.881238 0.852851 0.181896 0.0160504 7235.64 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.658204 0.827727 0.182292 0.0161751 7223.84 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.58547 0.792475 0.182478 0.0158424 7201.32 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.508772 0.760461 0.18258 0.0158465 7197.11 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.445197 0.705323 0.183204 0.015935 7174.07 0; : 6 | 0.409018 0.708257 0.18274 0.0151517 7160.42 1; : 7 | 0.369062 0.747523 0.18295 0.0151377 7150.84 2; : 8 | 0.31294 0.740134 0.183339 0.015769 7161.2 3; : 9 | 0.256184 0.756239 0.181088 0.0154708 7245.63 4; : 10 | 0.224257 0.809455 0.18089 0.0153446 7248.78 5; : ; : Elapsed time for training with 1600 events: 1.86 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_DNN_CPU : [dataset] : Evaluation of TMVA_DNN_CPU on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.0796 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_DNN_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:11795,error,error,11795,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['error'],['error']
Availability,": \""%s\"""",; 20614 eol,; 20615 version);; 20616 system_info_length += mg_str_append(&buffer, end, block);; 20617 }; 20618 ; 20619 /* System info */; 20620 {; 20621#if defined(_WIN32); 20622 DWORD dwVersion = 0;; 20623 DWORD dwMajorVersion = 0;; 20624 DWORD dwMinorVersion = 0;; 20625 SYSTEM_INFO si;; 20626 ; 20627 GetSystemInfo(&si);; 20628 ; 20629#if defined(_MSC_VER); 20630#pragma warning(push); 20631 /* GetVersion was declared deprecated */; 20632#pragma warning(disable : 4996); 20633#endif; 20634 dwVersion = GetVersion();; 20635#if defined(_MSC_VER); 20636#pragma warning(pop); 20637#endif; 20638 ; 20639 dwMajorVersion = (DWORD)(LOBYTE(LOWORD(dwVersion)));; 20640 dwMinorVersion = (DWORD)(HIBYTE(LOWORD(dwVersion)));; 20641 ; 20642 mg_snprintf(NULL,; 20643 NULL,; 20644 block,; 20645 sizeof(block),; 20646 "",%s\""os\"" : \""Windows %u.%u\"""",; 20647 eol,; 20648 (unsigned)dwMajorVersion,; 20649 (unsigned)dwMinorVersion);; 20650 system_info_length += mg_str_append(&buffer, end, block);; 20651 ; 20652 mg_snprintf(NULL,; 20653 NULL,; 20654 block,; 20655 sizeof(block),; 20656 "",%s\""cpu\"" : \""type %u, cores %u, mask %x\"""",; 20657 eol,; 20658 (unsigned)si.wProcessorArchitecture,; 20659 (unsigned)si.dwNumberOfProcessors,; 20660 (unsigned)si.dwActiveProcessorMask);; 20661 system_info_length += mg_str_append(&buffer, end, block);; 20662#elif defined(__ZEPHYR__); 20663 mg_snprintf(NULL,; 20664 NULL,; 20665 block,; 20666 sizeof(block),; 20667 "",%s\""os\"" : \""%s %s\"""",; 20668 eol,; 20669 ""Zephyr OS"",; 20670 ZEPHYR_VERSION);; 20671 system_info_length += mg_str_append(&buffer, end, block);; 20672#else; 20673 struct utsname name;; 20674 memset(&name, 0, sizeof(name));; 20675 uname(&name);; 20676 ; 20677 mg_snprintf(NULL,; 20678 NULL,; 20679 block,; 20680 sizeof(block),; 20681 "",%s\""os\"" : \""%s %s (%s) - %s\"""",; 20682 eol,; 20683 name.sysname,; 20684 name.version,; 20685 name.release,; 20686 name.machine);; 20687 system_info_length += mg_str_append(&buffer, end, block);; 20688#endif; 20689 }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:617050,mask,mask,617050,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['mask'],['mask']
Availability,": \""%s\"""",; 20615 eol,; 20616 version);; 20617 system_info_length += mg_str_append(&buffer, end, block);; 20618 }; 20619 ; 20620 /* System info */; 20621 {; 20622#if defined(_WIN32); 20623 DWORD dwVersion = 0;; 20624 DWORD dwMajorVersion = 0;; 20625 DWORD dwMinorVersion = 0;; 20626 SYSTEM_INFO si;; 20627 ; 20628 GetSystemInfo(&si);; 20629 ; 20630#if defined(_MSC_VER); 20631#pragma warning(push); 20632 /* GetVersion was declared deprecated */; 20633#pragma warning(disable : 4996); 20634#endif; 20635 dwVersion = GetVersion();; 20636#if defined(_MSC_VER); 20637#pragma warning(pop); 20638#endif; 20639 ; 20640 dwMajorVersion = (DWORD)(LOBYTE(LOWORD(dwVersion)));; 20641 dwMinorVersion = (DWORD)(HIBYTE(LOWORD(dwVersion)));; 20642 ; 20643 mg_snprintf(NULL,; 20644 NULL,; 20645 block,; 20646 sizeof(block),; 20647 "",%s\""os\"" : \""Windows %u.%u\"""",; 20648 eol,; 20649 (unsigned)dwMajorVersion,; 20650 (unsigned)dwMinorVersion);; 20651 system_info_length += mg_str_append(&buffer, end, block);; 20652 ; 20653 mg_snprintf(NULL,; 20654 NULL,; 20655 block,; 20656 sizeof(block),; 20657 "",%s\""cpu\"" : \""type %u, cores %u, mask %x\"""",; 20658 eol,; 20659 (unsigned)si.wProcessorArchitecture,; 20660 (unsigned)si.dwNumberOfProcessors,; 20661 (unsigned)si.dwActiveProcessorMask);; 20662 system_info_length += mg_str_append(&buffer, end, block);; 20663#elif defined(__ZEPHYR__); 20664 mg_snprintf(NULL,; 20665 NULL,; 20666 block,; 20667 sizeof(block),; 20668 "",%s\""os\"" : \""%s %s\"""",; 20669 eol,; 20670 ""Zephyr OS"",; 20671 ZEPHYR_VERSION);; 20672 system_info_length += mg_str_append(&buffer, end, block);; 20673#else; 20674 struct utsname name;; 20675 memset(&name, 0, sizeof(name));; 20676 uname(&name);; 20677 ; 20678 mg_snprintf(NULL,; 20679 NULL,; 20680 block,; 20681 sizeof(block),; 20682 "",%s\""os\"" : \""%s %s (%s) - %s\"""",; 20683 eol,; 20684 name.sysname,; 20685 name.version,; 20686 name.release,; 20687 name.machine);; 20688 system_info_length += mg_str_append(&buffer, end, block);; 20689#endif; 20690 }",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:617083,mask,mask,617083,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['mask'],['mask']
Availability,": column \"""" + colName + ""\"" is being used as "";; 421 if (tName.empty()) {; 422 errMsg += requestedType.name();; 423 errMsg += "" (extracted from type info)"";; 424 } else {; 425 errMsg += tName;; 426 }; 427 errMsg += "" but the Define or Vary node advertises it as "";; 428 if (colTypeName.empty()) {; 429 auto &id = colType;; 430 errMsg += id.name();; 431 errMsg += "" (extracted from type info)"";; 432 } else {; 433 errMsg += colTypeName;; 434 }; 435 throw std::runtime_error(errMsg);; 436 }; 437}; 438 ; 439bool IsStrInVec(const std::string &str, const std::vector<std::string> &vec); 440{; 441 return std::find(vec.cbegin(), vec.cend(), str) != vec.cend();; 442}; 443 ; 444auto RStringCache::Insert(const std::string &string) -> decltype(fStrings)::const_iterator; 445{; 446 {; 447 std::shared_lock l{fMutex};; 448 if (auto it = fStrings.find(string); it != fStrings.end()); 449 return it;; 450 }; 451 ; 452 // TODO: Would be nicer to use a lock upgrade strategy a-la TVirtualRWMutex; 453 // but that is unfortunately not usable outside the already available ROOT mutexes; 454 std::unique_lock l{fMutex};; 455 if (auto it = fStrings.find(string); it != fStrings.end()); 456 return it;; 457 ; 458 return fStrings.insert(string).first;; 459}; 460} // end NS RDF; 461} // end NS Internal; 462} // end NS ROOT; RDataSource.hxx; RDefineBase.hxx; RLogger.hxx; R__LOG_DEBUG#define R__LOG_DEBUG(DEBUGLEVEL,...)Definition RLogger.hxx:365; RLoopManager.hxx; b#define b(i)Definition RSha256.hxx:100; c#define c(i)Definition RSha256.hxx:101; RtypesCore.h; Long64_tlong long Long64_tDefinition RtypesCore.h:69; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; TBranchElement.h; TBranch.h; TClassEdit.h; TClassRef.h; TClass.h; TError.h; Infovoid Info(const char *location, const char *msgfmt,...)Use this function for informational messages.Definition TError.cxx:218; lengthOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDFUtils_8cxx_source.html:18178,avail,available,18178,doc/master/RDFUtils_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDFUtils_8cxx_source.html,1,['avail'],['available']
Availability,": command string; args : array of arguments; nargs : number of arguments. Int_t ExecuteSetCommand(Int_t ). Called from TFumili::ExecuteCommand in case; of ""SET xxx"" and ""SHOW xxx"". void FixParameter(Int_t ipar); Fixes parameter number ipar. Double_t * GetCovarianceMatrix() const; return a pointer to the covariance matrix. Double_t GetCovarianceMatrixElement(Int_t i, Int_t j) const; return element i,j from the covariance matrix. Int_t GetNumberTotalParameters() const; return the total number of parameters (free + fixed). Int_t GetNumberFreeParameters() const; return the number of free parameters. Double_t GetParError(Int_t ipar) const; return error of parameter ipar. Double_t GetParameter(Int_t ipar) const; return current value of parameter ipar. Int_t GetParameter(Int_t ipar, char* name, Double_t& value, Double_t& verr, Double_t& vlow, Double_t& vhigh) const; Get various ipar parameter attributs:. cname: parameter name; value: parameter value; verr: parameter error; vlow: lower limit; vhigh: upper limit; WARNING! parname must be suitably dimensionned in the calling function. const char * GetParName(Int_t ipar) const; return name of parameter ipar. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc) const; Return errors after MINOs; not implemented. Int_t GetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx) const; return global fit parameters; amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters. Double_t GetSumLog(Int_t ); return Sum(log(i) i=0,n; used by log likelihood fits. void InvertZ(Int_t ); Inverts packed diagonal matrix Z by square-root method.; Matrix elements corresponding to; fix parameters are removed. n: number of variable parameters. Bool_t IsFixed(Int_t ipar) const; return kTRUE if parameter ipar is fixed, kFALSE othersise). Int_t Minimize(); *; FUMILI; Based on ideas, proposed by I.N. Silin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFumili.html:19342,error,error,19342,root/html528/TFumili.html,https://root.cern,https://root.cern/root/html528/TFumili.html,6,['error'],['error']
Availability,": core/foundation/inc/TError.h File Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. Namespaces |; Macros |; Typedefs |; Functions |; Variables ; TError.h File Reference. #include <DllImport.h>; #include ""RtypesCore.h""; #include <ROOT/RConfig.hxx>; #include <cstdarg>; #include <functional>. Include dependency graph for TError.h:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead. Namespaces; namespace  ROOT;  tbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tbb::task_arena without forward declaring tbb::interface7 ;  ; namespace  ROOT::Internal;  . Macros; #define R__ASSERT(e);  Checks condition e and reports a fatal error if it's false. ;  ; #define R__CHECK(e);  Checks condition e and reports a warning message if it's false. ;  . Typedefs; typedef void(* ErrorHandlerFunc_t) (int level, Bool_t abort, const char *location, const char *msg);  ; using ROOT::Internal::ErrorSystemMsgHandlerFunc_t = std::function< const char *()>;  Retrieves the error string associated with the last system error. ;  . Functions; void AbstractMethod (const char *method);  This function can be used in abstract base classes in case one does not want to make the class a ""real"" (in C++ sense) ABC. ;  ; void Break (const char *location, const char *msgfmt,...);  Use this function in case an error occurred. ;  ; void DefaultErrorHandler (int level, Bool_t abort, const char *location, const char *msg);  The default error handler function. ;  ; void Error (const char *location, const char *msgfmt,...);  Use this function in case an error occurred. ;  ; void ErrorHandler (int level, const char *location, const char *fmt, std::va_list va);  General error handler function. It calls the user set error handler. ;  ; void Fatal (const char *location, const char *msgfmt,...);  Use this function in case of a fatal error. It will abort the program. ;  ; ErrorHandlerFunc_t GetErrorH",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8h.html:1088,error,error,1088,doc/master/TError_8h.html,https://root.cern,https://root.cern/doc/master/TError_8h.html,2,['error'],['error']
Availability,": id, bsize, bfree, blocks. ; Id is file system type (machine dependend, see statfs()) Bsize is block size of file system Blocks is total number of blocks in file system Bfree is number of free blocks in file system The function returns 0 in case of success and 1 if the file system could not be stat'ed. ; Reimplemented from TSystem.; Definition at line 1676 of file TUnixSystem.cxx. ◆ GetGid(). Int_t TUnixSystem::GetGid ; (; const char * ; group = nullptr). overridevirtual . Returns the group's id. If group = 0, returns current user's group. ; Reimplemented from TSystem.; Definition at line 2029 of file TUnixSystem.cxx. ◆ GetGroupInfo() [1/2]. UserGroup_t * TUnixSystem::GetGroupInfo ; (; const char * ; group = nullptr). overridevirtual . Returns all group info in the UserGroup_t structure. ; The only active fields in the UserGroup_t structure for this call are: fGid and fGroup If group = 0, returns current user's group. The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented from TSystem.; Definition at line 2119 of file TUnixSystem.cxx. ◆ GetGroupInfo() [2/2]. UserGroup_t * TUnixSystem::GetGroupInfo ; (; Int_t ; gid). overridevirtual . Returns all group info in the UserGroup_t structure. ; The only active fields in the UserGroup_t structure for this call are: fGid and fGroup The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented from TSystem.; Definition at line 2099 of file TUnixSystem.cxx. ◆ GetHomeDirectory(). std::string TUnixSystem::GetHomeDirectory ; (; const char * ; userName = nullptr); const. overridevirtual . Return the user's home directory. ; Reimplemented from TSystem.; Definition at line 1491 of file TUnixSystem.cxx. ◆ GetHostByName(). TInetAddress TUnixSystem::GetHostByName ; (; const char * ; hostname). overridevirtual . Get Internet Protocol (IP) address of host. ; Returns an TInetAddress object. To see if the hostname lookup was successfull call TInetAddress::I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:51508,error,error,51508,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['error'],['error']
Availability,": public TUnfold. TUnfoldSys adds error propagation of systematic errors to TUnfold; Also, background sources (with errors) can be subtracted. The following sources of systematic error are considered:; (a) uncorrelated errors on the input matrix histA, taken as the; errors provided with the histogram.; These are typically statistical errors from finite Monte Carlo samples. (b) correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure.; several such error sources may be defined. (c) a systematic error on the regularisation parameter tau. (d) uncorrelated errors on background sources, taken as the errors; provided with the background histograms. (e) scale errors on background sources. Source (a) is providede with the original histogram histA; TUnfoldSys(histA,...). Sources (b) are added by calls to; AddSysError(). The systematic uncertainty on tau (c) is set by; SetTauError(). Backgound sources causing errors of type (d) and (e) are added by; SubtractBackground(). NOTE:. Systematic errors (a), (b), (c) are propagated to the result; AFTER unfolding. Background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason:; errors of type (d) and (e) are INCLUDED in the standard error matrix; and other methods provided by the base class TUnfold:; GetOutput(); GetEmatrix(). whereas errors of type (a), (b), (c) are NOT INCLUDED in the methods; provided by the base class TUnfold. Accessing error matrices:. The error sources (b),(c) and (e) propagate to shifts of the result.; These shifts may be accessed as histograms using the methods; GetDeltaSysSource() corresponds to (b); GetDeltaSysTau() corresponds to (c); GetDeltaSysBackgroundScale() corresponds to (e); The error sources (a) and (d) originate from many uncorrelated errors,; which in general ar NOT uncorrelated on the result vector.; Thus, there is no corresponding shift of the output vector, only error; matrices are available. Me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnfoldSys.html:1256,error,errors,1256,root/html528/TUnfoldSys.html,https://root.cern,https://root.cern/root/html528/TUnfoldSys.html,3,['error'],['errors']
Availability,: sample 170; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 165; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 160; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 155; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 150; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 145; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 140; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 135; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 130; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 125; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 120; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 115; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 110; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 105; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 100; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 95; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 90; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 85; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 80; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 75; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 70; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 65; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 60; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 55; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 50; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 45; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 40; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 35; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 30; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 25; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 20; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 15; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 10; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 5; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 0; [#0] WARNING:Generation -- Fit parameter 'mtop' does not have an error.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf803__mcstudy__addons2_8C.html:13707,error,error,13707,doc/master/rf803__mcstudy__addons2_8C.html,https://root.cern,https://root.cern/doc/master/rf803__mcstudy__addons2_8C.html,1,['error'],['error']
Availability,":. ""Z""; By default horizonthal and vertical small lines are drawn at; the end of the error bars. If option ""z"" or ""Z"" is specified,; these lines are not drawn. "">""; An arrow is drawn at the end of the error bars.; The size of the arrow is set to 2/3 of the marker size. ""|>""; A filled arrow is drawn at the end of the error bars.; The size of the arrow is set to 2/3 of the marker size. ""X""; By default the error bars are drawn. If option ""X"" is specified,; the errors are not drawn. The graph with errors in drawn like a normal graph. ""||""; Only the end vertical/horizonthal lines; of the error bars are drawn. This option is interesting to superimpose; systematic errors on top of a graph with statistical errors. ""[]""; Does the same as option ""||"" except that it draws additionnal tick marks at the; end of the vertical/horizonthal lines. This makes less ambiguous plots; in case several graphs are drawn on the same picture. ""2""; Error rectangles are drawn. ""3""; A filled area is drawn through the end points of the vertical error bars. ""4""; A smoothed filled area is drawn through the end points of the vertical error; bars. gStyle->SetErrorX(dx) controls the size of the error along x.; dx = 0 removes the error along x. gStyle->SetEndErrorSize(np) controls the size of the lines; at the end of the error bars (when option 1 is used).; By default np=1. (np represents the number of pixels).; TGraphErrors; A TGraphErrors is a TGraph with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Picture; Source. {; TCanvas *c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->Draw(""ap"");; return c4;; }; The option ""3"" allows to shows the error as band. Picture; Source. {; TCanvas *c41 = new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphPainter.html:5992,error,error,5992,root/html528/TGraphPainter.html,https://root.cern,https://root.cern/root/html528/TGraphPainter.html,1,['error'],['error']
Availability,":. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Mon Jul 4 15:19:11 2011 » Last generated: 2011-07-04 15:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/PyROOT__TPyROOTApplication.html:13775,error,error,13775,root/html530/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html530/PyROOT__TPyROOTApplication.html,2,['error'],['error']
Availability,":. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install ROOT message handler which will turn ROOT error message into; python exceptions. Always returns true. virtual ~TPyROOTApplication(); { }. » Last changed: Thu Nov 3 20:04:29 2011 » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/PyROOT__TPyROOTApplication.html:13775,error,error,13775,root/html532/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html532/PyROOT__TPyROOTApplication.html,2,['error'],['error']
Availability,":. root[1] gSystem->SetIncludePath(""-I$ROOTSYS/include; -I$HOME/mypackage/include"");; root[2] .x myfunc.C++(10,20);. The user may sometimes try to compile a script before it has loaded all the; needed shared libraries. In this case we want to be helpfull and output a; list of the unresolved symbols. So if the loading of the created shared; library fails, we will try to build a executable that contains the; script. The linker should then output a list of missing symbols. To support this we provide a TSystem::SetMakeExe() function, that sets the; directive telling how to create an executable. The loader will need; to be informed of all the libraries available. The information about; the libraries that has been loaded by .L and TSystem::Load() is accesible; to the script compiler. However, the information about; the libraries that have been selected at link time by the application; builder (like the root libraries for root.exe) are not available and need; to be explictly listed in fLinkedLibs (either by default or by a call to; TSystem::SetLinkedLibs()). To simplify customization we could also add to the .rootrc support for the; variables. Unix.*.Root.IncludePath: -I$ROOTSYS/include; WinNT.*.Root.IncludePath: -I%ROOTSYS%/include. Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib .... And also support for MakeSharedLibs() and MakeExe(). (the ... have to be replaced by the actual values and are here only to; shorten this comment). Int_t GetAclicProperties() const; Return the ACLiC properties field. See EAclicProperties for details; on the semantic of each bit. const char * GetBuildArch() const; Return the build architecture. const char * GetBuildCompiler() const; Return the build compiler. const char * GetBuildCompilerVersion() const; Return the build compiler version. const char * GetBuildNode() const; Return the build node name. const char * GetBuildDir() const; Return the path of the build directory. const char ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSystem.html:41749,avail,available,41749,root/html528/TSystem.html,https://root.cern,https://root.cern/root/html528/TSystem.html,6,['avail'],['available']
Availability,":104; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; s1#define s1(x)Definition RSha256.hxx:91; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; UChar_tunsigned char UChar_tDefinition RtypesCore.h:38; Ssiz_tint Ssiz_tDefinition RtypesCore.h:67; kBitsPerByteconstexpr ULong_t kBitsPerByteDefinition RtypesCore.h:116; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; ULongptr_tunsigned long ULongptr_tDefinition RtypesCore.h:76; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kNPOSconstexpr Ssiz_t kNPOSDefinition RtypesCore.h:117; Long64_tlong long Long64_tDefinition RtypesCore.h:69; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; ClassImp#define ClassImp(name)Definition Rtypes.h:382; operator<<TBuffer & operator<<(TBuffer &buf, const Tmpl *obj)Definition TBuffer.h:397; TBuffer.h; TClass.h; TError.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; ErrorHandlervoid ErrorHandler(int level, const char *location, const char *fmt, std::va_list va)General error handler function. It calls the user set error handler.Definition TError.cxx:109; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; kPrintconstexpr Int_t kPrintDefinition TError.h:44; Obsoletevoid Obsolete(const char *function, const char *asOfVers, const char *removedFromVers)Use this function to declare a function obsolete.Definition TError.cxx:177; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; Fatalvoid Fatal(const char *location, const char *msgfmt,...)Use this function in case of a fatal error. It will abort the program.Definition TError.cxx:244; gPrintViaErrorHandlerBool_t gPrintViaErrorHandlerDefinition TError.cxx:33; pwinID h TVirtualVie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:86975,error,error,86975,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,1,['error'],['error']
Availability,":2762; TROOT::Initializedstatic Bool_t Initialized()Return kTRUE if the TROOT object has been initialized.Definition TROOT.cxx:2910; TROOT::AddExtraInterpreterArgsstatic const std::vector< std::string > & AddExtraInterpreterArgs(const std::vector< std::string > &args)Provide command line arguments to the interpreter construction.Definition TROOT.cxx:2956; TROOT::GetEtcDirstatic const TString & GetEtcDir()Get the sysconfig directory in the installation. Static utility function.Definition TROOT.cxx:3056; TRintDefinition TRint.h:31; TRint::SetEchoModevoid SetEchoMode(Bool_t mode) overrideSet console mode:Definition TRint.cxx:752; TRint::HandleTermInputBool_t HandleTermInput() overrideHandle input coming from terminal.Definition TRint.cxx:611; TRint::fInterruptBool_t fInterruptDefinition TRint.h:38; TRint::Runvoid Run(Bool_t retrn=kFALSE) overrideMain application eventloop.Definition TRint.cxx:384; TRint::ProcessLineNrLongptr_t ProcessLineNr(const char *filestem, const char *line, Int_t *error=nullptr)Calls TRint::ProcessLine() possibly prepending a #line directive for better diagnostics.Definition TRint.cxx:791; TRint::SetPromptvirtual const char * SetPrompt(const char *newPrompt)Set a new default prompt.Definition TRint.cxx:595; TRint::Terminatevirtual void Terminate(int status) overrideTerminate the application.Definition TRint.cxx:722; TRint::fPromptchar fPrompt[64]Definition TRint.h:37; TRint::TabCompletionHookInt_t TabCompletionHook(char *buf, int *pLoc, std::ostream &out) overrideForward tab completion request to our TTabCom::Hook().Definition TRint.cxx:827; TRint::GetPromptvirtual char * GetPrompt()Get prompt from interpreter. Either ""root [n]"" or ""end with '}'"".Definition TRint.cxx:575; TRint::HandleExceptionvoid HandleException(Int_t sig) overrideHandle signals (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException)...Definition TRint.cxx:704; TRint::~TRintvirtual ~TRint()Destructor.Definition TRint.cxx:316; TRint::PrintLogovirtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:38171,error,error,38171,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['error'],['error']
Availability,":36; TGraphMultiErrors::SetPointEYvirtual void SetPointEY(Int_t i, Int_t ne, const Double_t *eyL, const Double_t *eyH)Set ey values for point i.Definition TGraphMultiErrors.cxx:1885; TGraphMultiErrors::SetLineColorvirtual void SetLineColor(Int_t e, Color_t lcolor)Set Line Color of error e (-1 = Global and x errors).Definition TGraphMultiErrors.cxx:2073; TGraphMultiErrors::SetPointEXlowvirtual void SetPointEXlow(Int_t i, Double_t exL)Set exL value for point i.Definition TGraphMultiErrors.cxx:1853; TGraphMultiErrors::SetPointEYhighvirtual void SetPointEYhigh(Int_t i, Int_t ne, const Double_t *eyH)Set eyH values for point i.Definition TGraphMultiErrors.cxx:1907; TGraphMultiErrors::ComputeRangevoid ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideCompute Range.Definition TGraphMultiErrors.cxx:1379; TGraphMultiErrors::fNYErrorsInt_t fNYErrorsThe amount of different y-errors.Definition TGraphMultiErrors.h:32; TGraphMultiErrors::fEyLstd::vector< TArrayD > fEyLTwo dimensional array of Y low errors.Definition TGraphMultiErrors.h:37; TGraphMultiErrors::GetErrorYDouble_t GetErrorY(Int_t i) const overrideGet error on y coordinate for point i.Definition TGraphMultiErrors.cxx:1454; TGraphMultiErrors::AllocateDouble_t ** Allocate(Int_t size) overrideAllocate internal data structures for size points.Definition TGraphMultiErrors.cxx:933; TGraphMultiErrors::DoMergeBool_t DoMerge(const TGraph *tg) overrideProtected function to perform the merge operation of a graph with multiple asymmetric errors.Definition TGraphMultiErrors.cxx:838; TGraphMultiErrors::Classstatic TClass * Class(); TGraphMultiErrors::GetErrorYhighDouble_t GetErrorYhigh(Int_t i) const overrideGet high error on y coordinate for point i.Definition TGraphMultiErrors.cxx:1530; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::fNpointsInt_t fNpointsNumber of points <= fMaxSize.Definition TGraph.h:46; TGraph::SetPointvirtual void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:87231,error,errors,87231,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['errors']
Availability,":41; TObject::GetNamevirtual const char * GetName() constReturns name of object.Definition TObject.cxx:444; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::AppendPadvirtual void AppendPad(Option_t *option="""")Append graphics object to current pad.Definition TObject.cxx:190; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Fatalvirtual void Fatal(const char *method, const char *msgfmt,...) constIssue fatal error message.Definition TObject.cxx:1021; TObject::SetUniqueIDvirtual void SetUniqueID(UInt_t uid)Set the unique object id.Definition TObject.cxx:797; TObject::IsAvirtual TClass * IsA() constDefinition TObject.h:243; TObject::Drawvirtual void Draw(Option_t *option="""")Default Draw method for all objects.Definition TObject.cxx:280; TObject::ResetBitvoid ResetBit(UInt_t f)Definition TObject.h:198; TObject::Infovirtual void Info(const char *method, const char *msgfmt,...) constIssue info message.Definition TObject.cxx:967; TQObject::ConnectBool_t Connect(const char *signal, const char *receiver_class, void *receiver, const char *slot)Non-static method is used to connect from the signal of this object to the receiver slot.Definition TQObject.cxx:869; TSeqCollectionSequenceable collection abstract base class.Definition TSeqCollection.h:28; TSeqCollection::In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:242710,error,error,242710,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['error'],['error']
Availability,":43; TCollectionCollection abstract base class.Definition TCollection.h:65; TF11-Dim function classDefinition TF1.h:233; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraphErrors::ComputeRangevoid ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideCompute range.Definition TGraphErrors.cxx:480; TGraphErrors::UpdateArraysvoid UpdateArrays(const std::vector< Int_t > &sorting_indices, Int_t numSortedPoints, Int_t low) overrideUpdate the fX, fY, fEX, and fEY arrays with the sorted values.Definition TGraphErrors.cxx:866; TGraphErrors::GetErrorYDouble_t GetErrorY(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:623; TGraphErrors::GetEXDouble_t * GetEX() const overrideDefinition TGraphErrors.h:69; TGraphErrors::GetErrorXDouble_t GetErrorX(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:612; TGraphErrors::fEYDouble_t * fEY[fNpoints] array of Y errorsDefinition TGraphErrors.h:30; TGraphErrors::~TGraphErrors~TGraphErrors() overrideTGraphErrors default destructor.Definition TGraphErrors.cxx:368; TGraphErrors::Classstatic TClass * Class(); TGraphErrors::Scalevoid Scale(Double_t c1=1., Option_t *option=""y"") overrideMultiply the values and errors of a TGraphErrors by a constant c1.Definition TGraphErrors.cxx:752; TGraphErrors::CalculateScanfFieldsstatic Int_t CalculateScanfFields(const char *fmt)Calculate scan fields.Definition TGraphErrors.cxx:449; TGraphErrors::Streamervoid Streamer(TBuffer &) overrideStream an object of class TGraphErrors.Definition TGraphErrors.cxx:817; TGraphErrors::FillZerovoid FillZero(Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) overrideSet zero values for point arrays in the range [begin, end].Definition TGraphErrors.cxx:598; TGraphErrors::AddPointErrorvirtual void AddPointError(Double_t x, Double_t y, Double_t ex=0., Double_t ey=0.)Add a point with errorbars to the graph.Definition TGr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:32874,error,errorsDefinition,32874,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['errorsDefinition']
Availability,":47; TNamed::Streamervoid Streamer(TBuffer &) overrideStream an object of class TObject.; TNamed::GetTitleconst char * GetTitle() const overrideReturns title of object.Definition TNamed.h:48; TObjArray::GetObjectRefTObject ** GetObjectRef() constDefinition TObjArray.h:63; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::GetUniqueIDvirtual UInt_t GetUniqueID() constReturn the unique object id.Definition TObject.cxx:462; TObject::Streamervirtual void Streamer(TBuffer &)Stream an object of class TObject.Definition TObject.cxx:894; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::kIsReferenced@ kIsReferencedif object is referenced by a TRef or TRefArrayDefinition TObject.h:65; TProcessIDA TProcessID identifies a ROOT job in a unique way in time and space.Definition TProcessID.h:74; TProcessID::GetProcessWithUIDstatic TProcessID * GetProcessWithUID(const TObject *obj)static function returning a pointer to TProcessID with its pid encoded in the highest byte of obj->Ge...Definition TProcessID.cxx:297; TRefTableA TRefTable maintains the association between a referenced object and the parent object supporting th...Definition TRefTable.h:35; TRefTable::GetRefTablestatic TRefTable * GetRefTable()Static function returning the current TRefTable.Definition TRefTable.cxx:287; TRefTable::Addvirtual Int_t Add(Int_t uid, TProcessID *context=nullptr)Add a new uid to the table.Definition TRefTable.cxx:88; TStreamerArtificialDefinition TStreamerElement.h:449; TStreamerBaseDefinition TStreamerElement.h:150; TStreamerElementDefini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoWriteBuffer_8cxx_source.html:41819,error,error,41819,doc/master/TStreamerInfoWriteBuffer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoWriteBuffer_8cxx_source.html,1,['error'],['error']
Availability,":493; TF1::SetVectorizedvirtual void SetVectorized(Bool_t vectorized)Definition TF1.h:715; TF1::IntegralOneDimvirtual Double_t IntegralOneDim(Double_t a, Double_t b, Double_t epsrel, Double_t epsabs, Double_t &err)Return Integral of function between a and b using the given parameter values and relative and absolut...Definition TF1.cxx:2621; TF1::TF1TF1(const char *name, Func f, Double_t xmin, Double_t xmax, Int_t npar, Int_t ndim=1, EAddToList addToGlobList=EAddToList::kDefault)Definition TF1.h:397; TF1::GetParametervirtual Double_t GetParameter(Int_t ipar) constDefinition TF1.h:540; TF1::GetParNumbervirtual Int_t GetParNumber(const char *name) constDefinition TF1.h:561; TF1::TF1TF1(const char *name, T(*fcn)(const T *, const Double_t *), Double_t xmin=0, Double_t xmax=1, Int_t npar=0, Int_t ndim=1, EAddToList addToGlobList=EAddToList::kDefault)Constructor using a pointer to function.Definition TF1.h:381; TF1::SetFitResultvirtual void SetFitResult(const ROOT::Fit::FitResult &result, const Int_t *indpar=nullptr)Set the result from the fit parameter values, errors, chi2, etc... Optionally a pointer to a vector (...Definition TF1.cxx:3355; TF1::GetXaxisTAxis * GetXaxis() constGet x axis of the function.Definition TF1.cxx:2400; TF1::HasSaveBool_t HasSave() constReturn true if function has data in fSave buffer.Definition TF1.h:466; TFormulaThe Formula class.Definition TFormula.h:89; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TMethodCallMethod or function calling interface.Definition TMethodCall.h:37; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObjArrayAn array of TObjects.Definition TObjArray.h:31; TObjectMother of all ROOT objects.Definition TObject.h:41; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TString",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8h_source.html:69688,error,errors,69688,doc/master/TF1_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1_8h_source.html,1,['error'],['errors']
Availability,":513; TGraph2DGraphics object made of three arrays X, Y and Z with the same number of points each.Definition TGraph2D.h:41; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraphErrors::GetErrorYDouble_t GetErrorY(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:623; TGraphErrors::GetEXDouble_t * GetEX() const overrideDefinition TGraphErrors.h:69; TGraphErrors::GetErrorXDouble_t GetErrorX(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:612; TGraphErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraphErrors.h:70; TGraphErrors::GetErrorXhighDouble_t GetErrorXhigh(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:635; TGraphErrors::GetErrorYlowDouble_t GetErrorYlow(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:671; TGraphErrors::GetErrorYhighDouble_t GetErrorYhigh(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:659; TGraphErrors::IsATClass * IsA() const overrideDefinition TGraphErrors.h:78; TGraphErrors::GetErrorXlowDouble_t GetErrorXlow(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:647; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::SetPointvirtual void SetPoint(Int_t i, Double_t x, Double_t y)Set x and y values for point number i.Definition TGraph.cxx:2342; TGraph::GetYDouble_t * GetY() constDefinition TGraph.h:140; TGraph::GetEYlowvirtual Double_t * GetEYlow() constDefinition TGraph.h:146; TGraph::GetNInt_t GetN() constDefinition TGraph.h:132; TGraph::GetXDouble_t * GetX() constDefinition TGraph.h:139; TGraph::GetEYhighvirtual Double_t * GetEYhigh() constDefinition TGraph.h:145; TGraph::Setvirtual void Set(Int_t n)Set number of points in the graph Existing coordinates are preserved New coordinates ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:40206,error,error,40206,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,1,['error'],['error']
Availability,":547; RooFit::ShiftToZeroRooCmdArg ShiftToZero()Definition RooGlobalFunc.cxx:191; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; xDouble_t x[n]Definition legend1.C:17; RooFit::Detail::MathFuncs::nlldouble nll(double pdf, double weight, int binnedL, int doBinOffset)Definition MathFuncs.h:353; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf605_profilellDefinition rf605_profilell.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); ; [#0] WARNING:InputArguments -- The parameter 'sigma_g1' with range [-inf, inf] of the RooGaussian 'g1' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; Minuit2Minimizer: Minimize with max-calls 1500 convergence for edm < 1 strategy 1; Minuit2Minimizer : Valid minimum - status = 0; FVAL = 2659.73712858695399; Edm = 0.000190395763129910388; Nfcn = 60; frac = 0.62118 +/- 0.165788 (limited); mean = 0.00442366 +/- 0.109372 (limited); sigma_g2 = 4.10789 +/- 0.405468 (limited); [#1] INFO:Minimization -- RooProfileLL::evaluate(RooEvaluatorWrapper_Profile[frac]) Creating instance of MINUIT; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooProfileLL::evaluate(RooEvaluatorWrapper_Profile[frac]) determining minimum likelihood for current configurations w.r.t all observable; [#1] INFO:Minimization -- RooProfileLL::evaluate(RooEvaluatorWrapper_Profile[frac]) minimum found at (frac=0.62104); ..............................................................",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf605__profilell_8C.html:6193,error,error,6193,doc/master/rf605__profilell_8C.html,https://root.cern,https://root.cern/doc/master/rf605__profilell_8C.html,1,['error'],['error']
Availability,:586; b#define b(i)Definition RSha256.hxx:100; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; Int_tint Int_tDefinition RtypesCore.h:45; Version_tshort Version_tDefinition RtypesCore.h:65; Char_tchar Char_tDefinition RtypesCore.h:37; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Float_tfloat Float_tDefinition RtypesCore.h:57; kNPOSconstexpr Ssiz_t kNPOSDefinition RtypesCore.h:117; Long64_tlong long Long64_tDefinition RtypesCore.h:69; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassImp#define ClassImp(name)Definition Rtypes.h:382; TBasket.h; TBranchBrowsable.h; TBranchCacheInfo.h; TBranchIMTHelper.h; TBranch.h; TBrowser.h; kNewClassTagconst UInt_t kNewClassTagDefinition TBufferFile.cxx:50; kByteCountMaskconst UInt_t kByteCountMaskDefinition TBufferFile.cxx:52; TBufferFile.h; TBuffer.h; TClass.h; TClonesArray.h; EDataTypeEDataTypeDefinition TDataType.h:28; kOther_t@ kOther_tDefinition TDataType.h:32; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; TFile.h; N#define N; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h offsetDefinition TGWin32VirtualXProxy.cxx:245; resultOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranch_8cxx_source.html:119011,error,error,119011,doc/master/TBranch_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranch_8cxx_source.html,1,['error'],['error']
Availability,":677; TF1::SetParametervirtual void SetParameter(Int_t param, Double_t value)Definition TF1.h:667; TF1::IsInsidevirtual Bool_t IsInside(const Double_t *x) constreturn kTRUE if the point is inside the function rangeDefinition TF1.h:626; TF1::GetNdimvirtual Int_t GetNdim() constDefinition TF1.h:513; TGraph2DGraphics object made of three arrays X, Y and Z with the same number of points each.Definition TGraph2D.h:41; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraphErrors::GetErrorYDouble_t GetErrorY(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:623; TGraphErrors::GetEXDouble_t * GetEX() const overrideDefinition TGraphErrors.h:69; TGraphErrors::GetErrorXDouble_t GetErrorX(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:612; TGraphErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraphErrors.h:70; TGraphErrors::GetErrorXhighDouble_t GetErrorXhigh(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:635; TGraphErrors::GetErrorYlowDouble_t GetErrorYlow(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:671; TGraphErrors::GetErrorYhighDouble_t GetErrorYhigh(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:659; TGraphErrors::IsATClass * IsA() const overrideDefinition TGraphErrors.h:78; TGraphErrors::GetErrorXlowDouble_t GetErrorXlow(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:647; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::SetPointvirtual void SetPoint(Int_t i, Double_t x, Double_t y)Set x and y values for point number i.Definition TGraph.cxx:2342; TGraph::GetYDouble_t * GetY() constDefinition TGraph.h:140; TGraph::GetEYlowvirtual Double_t * GetEYlow() constDefinition TGraph.h:146; TGraph::GetNInt_t GetN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:39912,error,error,39912,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,1,['error'],['error']
Availability,":725; RooFit::EvalErrorValueRooCmdArg EvalErrorValue(double value)Definition RooGlobalFunc.cxx:284; RooFit::ShiftToZeroRooCmdArg ShiftToZero()Definition RooGlobalFunc.cxx:191; RooFit::LineColorRooCmdArg LineColor(Color_t color)Definition RooGlobalFunc.cxx:215; RooFit::Detail::MathFuncs::nlldouble nll(double pdf, double weight, int binnedL, int doBinOffset)Definition MathFuncs.h:353; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf606_nllerrorhandlingDefinition rf606_nllerrorhandling.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; RangeTa Range(0, 0, 1, 1); mTMarker mDefinition textangle.C:8; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(argus_over_argus_Int[m]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_argus_over_argus_Int[m]_argusData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; Minuit2Minimizer: Minimize with max-calls 1000 convergence for edm < 1 strategy 1; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-2417.08) to force MIGRAD to back out of this region. Error log follows.; Parameter values: k=-33.8075 m0=5.29014; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ]; getLogVal() top-level p.d.f not greater than zero @ numerator=argus=0.387202, denominator=argus_Int[m]=0.0305662; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-2417.08) to force MIGRAD to back out of this region. Error log follows.; Parameter values: k=-36.7074 m0=5.2901; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ]; getLogVal() top-level p.d.f not greater than zero @ numerator=argus=0.3706",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:6131,error,error,6131,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,2,['error'],['error']
Availability,":8244 N=732 KeysList; 20010404/092347 At:8976 N=53 FreeSegments; 20010404/092347 At:9029 N=1 END; The second to last entry is a list of free segments. In our case, this starts 8976 and is not very long, only 53 bytes, since we have not deleted any objects. The last entry is the address of the last byte in the file.; 11.1.6 File Recovery; A file may become corrupted or it may be impossible to write it to disk and close it properly. For example if the file is too large and exceeds the disk quota, or the job crashes or a batch job reaches its time limit before the file can be closed. In these cases, it is imperative to recover and retain as much information as possible. ROOT provides an intelligent and elegant file recovery mechanism using the redundant directory information in the record header.; If a file that has been not properly closed is opened again, it is scanned and rebuilt according to the information in the record header. The recovery algorithm reads the file and creates the saved objects in memory according to the header information. It then rebuilds the directory and file structure. If the file is opened in write mode, the recovery makes the correction on disk when the file is closed; however if the file is opened in read mode, the correction can not be written to disk. You can also explicitly invoke the recovery procedure by calling the TFile::Recover() method. You can recover the directory structure, but you cannot save what you recovered to the file on disk. In the following example, we interrupted and aborted the previous ROOT session, causing the file not to be closed. When we start a new session and attempt to open the file, it gives us an explanation and status on the recovery attempt.; root[] TFile f(""demo.root""); Warning in <TFile::TFile>: file demo.root probably not closed, trying to recover successfully recovered 15 keys; 11.2 The Logical ROOT File: TFile and TKey; We saw that the TFile::Map() method reads the file sequentially and prints informa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:440744,recover,recovery,440744,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['recover'],['recovery']
Availability,":95; TCollectionCollection abstract base class.Definition TCollection.h:65; TF11-Dim function classDefinition TF1.h:233; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraphErrors::ComputeRangevoid ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideCompute range.Definition TGraphErrors.cxx:480; TGraphErrors::UpdateArraysvoid UpdateArrays(const std::vector< Int_t > &sorting_indices, Int_t numSortedPoints, Int_t low) overrideUpdate the fX, fY, fEX, and fEY arrays with the sorted values.Definition TGraphErrors.cxx:866; TGraphErrors::GetErrorYDouble_t GetErrorY(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:623; TGraphErrors::GetEXDouble_t * GetEX() const overrideDefinition TGraphErrors.h:69; TGraphErrors::GetErrorXDouble_t GetErrorX(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:612; TGraphErrors::fEYDouble_t * fEY[fNpoints] array of Y errorsDefinition TGraphErrors.h:30; TGraphErrors::~TGraphErrors~TGraphErrors() overrideTGraphErrors default destructor.Definition TGraphErrors.cxx:368; TGraphErrors::Scalevoid Scale(Double_t c1=1., Option_t *option=""y"") overrideMultiply the values and errors of a TGraphErrors by a constant c1.Definition TGraphErrors.cxx:752; TGraphErrors::CalculateScanfFieldsstatic Int_t CalculateScanfFields(const char *fmt)Calculate scan fields.Definition TGraphErrors.cxx:449; TGraphErrors::FillZerovoid FillZero(Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) overrideSet zero values for point arrays in the range [begin, end].Definition TGraphErrors.cxx:598; TGraphErrors::AddPointErrorvirtual void AddPointError(Double_t x, Double_t y, Double_t ex=0., Double_t ey=0.)Add a point with errorbars to the graph.Definition TGraphErrors.cxx:377; TGraphErrors::fEXDouble_t * fEX[fNpoints] array of X errorsDefinition TGraphErrors.h:29; TGraphErrors::Printvoid Print(Option_t *chopt="""") const overrid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8h_source.html:7120,error,errorsDefinition,7120,doc/master/TGraphErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8h_source.html,1,['error'],['errorsDefinition']
Availability,"::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Pixel_tTGFrame::fBackgroundframe background color; TList*TGMainFrame::fBindListlist with key bindings; Int_tTGFrame::fBorderWidthframe border width; TGHorizontalFrame*fBotFrameBottom horizontal frame; TBrowser*TBrowserImp::fBrowserTBrowser associated with this implementation; const TGPicture*fCachedPicCached picture; TStringfCachedPicNameCached picture name; TGCanvas*fCanvasCanvas for the list tree; TStringTGMainFrame::fClassNameWM class name; TGClient*TGObject::fClientConnection to display server; Long_tfCntCounters for keys inside a Root file; TContextMenu*fContextMenupointer to context menu; TGListTreeItem*fCurrentDirCurrent (list tree) directory; Int_tTGFrame::fDNDStateEDNDFlags; Atom_t*TGMainFrame::fDNDTypeListhandles DND types; Bool_tfDblClickkTRUE if user double-clicked on a list tree item; TSystemDirectory*fDirActual (selected) system directory; TGComboBox*fDrawOptionDraw options combobox; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TGFrameElement*TGFrame::fFEpointer to frame element; TSystemFile*fFileActual (selected) system file; const TGPicture*fFileIconSystem files icon; TGComboBox*fFileTypeFile type combobox; TRegexp*fFilterRegular expression used to filter files; TGPictureButton*fFilterButton""Filter"" button; TStringfFilterStrFilter expression string; TGFileBrowser::mFiltered_tfFilteredItemsList of filtered list-tree items.; Int_tfGroupSizetotal number of items when icon box switched to ""global view"" mode; Bool_tfGroupedkTRUE if Root file content (keys) is grouped; UInt_tTGFrame::fHeightframe height; TStringTGMainFrame::fIconNameicon name; TStringTGMainFrame::fIconPixmapicon pixmap name; Handle_tTGObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGFileBrowser.html:21930,mask,mask,21930,root/html602/TGFileBrowser.html,https://root.cern,https://root.cern/root/html602/TGFileBrowser.html,2,['mask'],['mask']
Availability,"::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*GetEndTag() const; virtual const char*TObject::GetIconName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Bool_tGetResult(TString& result); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDocHtmlDirective.html:1592,error,error,1592,root/html528/TDocHtmlDirective.html,https://root.cern,https://root.cern/root/html528/TDocHtmlDirective.html,6,['error'],['error']
Availability,"::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); TList*Claim(Int_t n, const char* cmd); TCondorSlave*Claim(const char* vmname, const char* cmd); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TStringGetImage(const char* host) const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TCondor::EStateGetState() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; TList*GetVirtualMachines() const; Bool_tGetVmInfo(const char* vm, TString& image, Int_t& perfidx) const; virtual Bool_tTObject::HandleTimer(TTimer* ti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondor.html:1595,error,error,1595,root/html526/TCondor.html,https://root.cern,https://root.cern/root/html526/TCondor.html,7,['error'],['error']
Availability,"::ActionContainer_t::const_iterator end = fActions.end();; 4372 for(TStreamerInfoActions::ActionContainer_t::const_iterator iter = fActions.begin();; 4373 iter != end;; 4374 ++iter); 4375 {; 4376 iter->fConfiguration->Print();; 4377 if (strstr(opt,""func"")) {; 4378 printf(""StreamerInfoAction func: %s\n"",R__GetSymbolName((voidfunc)iter->fAction));; 4379 }; 4380 }; 4381}; 4382 ; 4383 ; b#define b(i)Definition RSha256.hxx:100; UShort_tunsigned short UShort_tDefinition RtypesCore.h:40; Int_tint Int_tDefinition RtypesCore.h:45; kMaxIntconstexpr Int_t kMaxIntDefinition RtypesCore.h:105; Version_tshort Version_tDefinition RtypesCore.h:65; Long_tlong Long_tDefinition RtypesCore.h:54; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Option_tconst char Option_tDefinition RtypesCore.h:66; TBufferFile.h; TBufferText.h; TClassEdit.h; TError.h; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; Fatalvoid Fatal(const char *location, const char *msgfmt,...)Use this function in case of a fatal error. It will abort the program.Definition TError.cxx:244; TFile.h; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html:206077,error,error,206077,doc/master/TStreamerInfoActions_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfoActions_8cxx_source.html,1,['error'],['error']
Availability,"::AdaptiveIntegratorMultiDim::Integraldouble Integral(const double *xmin, const double *xmax) overrideevaluate the integral with the previously given function between xmin[] and xmax[]Definition AdaptiveIntegratorMultiDim.h:119; ROOT::Math::AdaptiveIntegratorMultiDim::NEvalint NEval() const overridereturn number of function evaluations in calculating the integralDefinition AdaptiveIntegratorMultiDim.h:152; ROOT::Math::AdaptiveIntegratorMultiDim::RelErrordouble RelError() constreturn relative errorDefinition AdaptiveIntegratorMultiDim.h:137; ROOT::Math::BrentMinimizer1DUser class for performing function minimization.Definition BrentMinimizer1D.h:62; ROOT::Math::BrentMinimizer1D::SetFunctionvoid SetFunction(const ROOT::Math::IGenFunction &f, double xlow, double xup)Sets function to be minimized.Definition BrentMinimizer1D.cxx:48; ROOT::Math::BrentMinimizer1D::Minimizebool Minimize(int maxIter, double absTol=1.E-8, double relTol=1.E-10) overrideFind minimum position iterating until convergence specified by the absolute and relative tolerance or...Definition BrentMinimizer1D.cxx:76; ROOT::Math::BrentMinimizer1D::SetNpxvoid SetNpx(int npx)Set the number of point used to bracket root using a grid.Definition BrentMinimizer1D.h:116; ROOT::Math::BrentMinimizer1D::SetLogScanvoid SetLogScan(bool on)Set a log grid scan (default is equidistant bins) will work only if xlow > 0.Definition BrentMinimizer1D.h:122; ROOT::Math::BrentMinimizer1D::XMinimumdouble XMinimum() const overrideReturn current estimate of the position of the minimum.Definition BrentMinimizer1D.h:75; ROOT::Math::BrentMinimizer1D::FValMinimumdouble FValMinimum() const overrideReturn function value at current estimate of the minimum.Definition BrentMinimizer1D.cxx:67; ROOT::Math::BrentRootFinderClass for finding the root of a one dimensional function using the Brent algorithm.Definition BrentRootFinder.h:51; ROOT::Math::BrentRootFinder::SetFunctionbool SetFunction(const ROOT::Math::IGenFunction &f, double xlow, dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:155358,toler,tolerance,155358,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['toler'],['tolerance']
Availability,"::AppendPad(Option_t* option = """"); Bool_tBinarySearchReadList(TFPBlock*, Long64_t, Int_t, Int_t*); virtual voidTObject::Browse(TBrowser* b); Bool_tCheckBlockInCache(char*&, TFPBlock*); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TFPBlock*CreateBlockObj(Long64_t*, Int_t*, Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); TCondition*GetCondNewBlock() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFPBlock*GetPendingBlock(); TThread*GetThread() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetWaitTime(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFilePrefetch.html:1550,error,error,1550,root/html534/TFilePrefetch.html,https://root.cern,https://root.cern/root/html534/TFilePrefetch.html,3,['error'],['error']
Availability,"::BernsteinCorrectionBernsteinCorrection(const RooStats::BernsteinCorrection&); static TClass*Class(); voidCreateQSamplingDist(RooWorkspace* wks, const char* nominalName, const char* varName, const char* dataName, TH1F*, TH1F*, Int_t degree, Int_t nToys = 500); Int_tImportCorrectedPdf(RooWorkspace*, const char*, const char*, const char*); virtual TClass*IsA() const; RooStats::BernsteinCorrection&operator=(const RooStats::BernsteinCorrection&); voidSetMaxCorrection(Double_t maxCorr); voidSetMaxDegree(Int_t maxDegree); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. Double_tfMaxCorrectionmaximum correction factor at any point (default is 100); Int_tfMaxDegreemaximum polynomial degree correction (default is 10); Double_tfToleranceprobability to add an unnecessary term. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BernsteinCorrection(Double_t tolerance). Int_t ImportCorrectedPdf(RooWorkspace* , const char* , const char* , const char* ); Main method for Bernstein correction.; get ingredients out of workspace. void CreateQSamplingDist(RooWorkspace* wks, const char* nominalName, const char* varName, const char* dataName, TH1F* , TH1F* , Int_t degree, Int_t nToys = 500); Create sampling distribution for q given degree-1 vs. degree corrections; get ingredients out of workspace. BernsteinCorrection(double tolerance = 0.050000000000000003). virtual ~BernsteinCorrection(); {}. void SetMaxCorrection(Double_t maxCorr); {fMaxCorrection = maxCorr;}. void SetMaxDegree(Int_t maxDegree); {fMaxDegree = maxDegree;}. » Author: Kyle Cranmer » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-02 15:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__BernsteinCorrection.html:4144,toler,tolerance,4144,root/html604/RooStats__BernsteinCorrection.html,https://root.cern,https://root.cern/root/html604/RooStats__BernsteinCorrection.html,1,['toler'],['tolerance']
Availability,"::BernsteinCorrectionBernsteinCorrection(const RooStats::BernsteinCorrection&); static TClass*Class(); voidCreateQSamplingDist(RooWorkspace* wks, const char* nominalName, const char* varName, const char* dataName, TH1F*, TH1F*, Int_t degree, Int_t nToys = 500); Int_tImportCorrectedPdf(RooWorkspace*, const char*, const char*, const char*); virtual TClass*IsA() const; RooStats::BernsteinCorrection&operator=(const RooStats::BernsteinCorrection&); voidSetMaxCorrection(Double_t maxCorr); voidSetMaxDegree(Int_t maxDegree); virtual voidShowMembers(TMemberInspector& insp) const; virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). Data Members; private:. Double_tfMaxCorrectionmaximum correction factor at any point (default is 100); Int_tfMaxDegreemaximum polynomial degree correction (default is 10); Double_tfToleranceprobability to add an unnecessary term. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BernsteinCorrection(Double_t tolerance). Int_t ImportCorrectedPdf(RooWorkspace* , const char* , const char* , const char* ); Main method for Bernstein correction.; get ingredients out of workspace. void CreateQSamplingDist(RooWorkspace* wks, const char* nominalName, const char* varName, const char* dataName, TH1F* , TH1F* , Int_t degree, Int_t nToys = 500); Create sampling distribution for q given degree-1 vs. degree corrections; get ingredients out of workspace. BernsteinCorrection(double tolerance = 0.050000000000000003). virtual ~BernsteinCorrection(); {}. void SetMaxCorrection(Double_t maxCorr); {fMaxCorrection = maxCorr;}. void SetMaxDegree(Int_t maxDegree); {fMaxDegree = maxDegree;}. » Author: Kyle Cranmer » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__BernsteinCorrection.html:4144,toler,tolerance,4144,root/html602/RooStats__BernsteinCorrection.html,https://root.cern,https://root.cern/root/html602/RooStats__BernsteinCorrection.html,1,['toler'],['tolerance']
Availability,"::Browse(TBrowser* b); Bool_tCanExtend() const; voidCenterLabels(Bool_t center = kTRUE)TOGGLE GETTER ; voidCenterTitle(Bool_t center = kTRUE)TOGGLE GETTER ; const char*ChooseTimeFormat(Double_t axislength = 0); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject& axis) const; virtual voidDelete(Option_t* = """"); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*DrawClone(Option_t* = """") const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Int_tFindBin(Double_t x); virtual Int_tFindBin(Double_t x) const; virtual Int_tFindBin(const char* label); virtual Int_tFindFixBin(Double_t x) const; virtual Int_tFindFixBin(const char* label) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Color_tTAttAxis::GetAxisColor() const; virtual Double_tGetBinCenter(Int_t bin) const; virtual Double_tGetBinCenterLog(Int_t bin) const; const char*GetBinLabel(Int_t bin) const; virtual Double_tGetBinLowEdge(Int_t bin) const; virtual Double_tGetBinUpEdge(Int_t bin) const; virtual Double_tGetBinWidth(Int_t bin) const; virtual voidGetCenter(Double_t* center) const; Bool_tGetCenterLabels() const; Bool_tGetCenterTitle() const; Bool_tGetDecimals() const; virtual Option_t*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TAxis.html:1810,error,error,1810,root/html602/TAxis.html,https://root.cern,https://root.cern/root/html602/TAxis.html,2,['error'],['error']
Availability,"::Browse(TBrowser* b); Bool_tCheckBlockInCache(char*&, TFPBlock*); Bool_tCheckCachePath(const char*); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TFPBlock*CreateBlockObj(Long64_t*, Int_t*, Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMutex*GetMutexSynch() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFPBlock*GetPendingBlock(); TThread*GetThread() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetWaitTime(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFilePrefetch.html:1669,error,error,1669,root/html532/TFilePrefetch.html,https://root.cern,https://root.cern/root/html532/TFilePrefetch.html,1,['error'],['error']
Availability,"::Browse(TBrowser* b); Bool_tCheckBlockInCache(char*&, TFPBlock*); Bool_tCheckCachePath(const char*); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TFPBlock*CreateBlockObj(Long64_t*, Int_t*, Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFPBlock*GetPendingBlock(); TThread*GetThread() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetWaitTime(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFilePrefetch.html:1669,error,error,1669,root/html530/TFilePrefetch.html,https://root.cern,https://root.cern/root/html530/TFilePrefetch.html,1,['error'],['error']
Availability,"::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidCreateGVEdge(Agraph_t* gv); virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Agedge_t*GetGVEdge(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; TGraphNode*GetNode1(); TGraphNode*GetNode2(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphEdge.html:1694,error,error,1694,root/html528/TGraphEdge.html,https://root.cern,https://root.cern/root/html528/TGraphEdge.html,3,['error'],['error']
Availability,"::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidCloseNode(Int_t lvl, const char* nodename, Int_t numchilds); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidCreateNode(Int_t lvl, const char* nodename); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TClass*TRootSnifferStore::GetResClass() const; TDataMember*TRootSnifferStore::GetResMember() const; Int_tTRootSnifferStore::GetResNumChilds() const; void*TRootSnifferStore::GetResPtr() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRootSnifferStoreJson.html:1706,error,error,1706,root/html602/TRootSnifferStoreJson.html,https://root.cern,https://root.cern/root/html602/TRootSnifferStoreJson.html,2,['error'],['error']
Availability,"::BrowseDataSets ; (; const char * ; group, . const char * ; user, . const char * ; dsName, . UInt_t ; option, . TObject * ; target . ). protected . Adds the dataset in the folder of group, user to the list in target. ; If dsName is defined, only the information about the specified dataset is processed.; The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet. Available options (to be .or.ed): kPrint print the dataset content kQuotaUpdate update quotas kExport use export naming kList get a list of dataset names; NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. ; Definition at line 577 of file TDataSetManagerFile.cxx. ◆ CheckLocalCache(). Int_t TDataSetManagerFile::CheckLocalCache ; (; const char * ; group, . const char * ; user, . const char * ; dsName = ""ls"", . UInt_t ; option = 0 . ). private . Check if the local cache information for group, user, dsName is up-to-date If not, make the relevant updates Return 0 if OK, 1 if the dataset does not exists anymore, -1 on failure. ; Definition at line 1085 of file TDataSetManagerFile.cxx. ◆ ChecksumDataSet(). Int_t TDataSetManagerFile::ChecksumDataSet ; (; const char * ; path, . const char * ; md5path, . TString & ; checksum . ). protected . Calculate the checksum of the indicated dataset at 'path' and save it to the appropriate file 'md5path'. ; The MD5 string is returned in 'md5sum'. Return 0 on success, -1 on error. ; Definition at line 1512 of file TDataSetManagerFile.cxx. ◆ Class(). static TClass * TDataSetManagerFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDataSetManagerFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDataSetManagerFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 100 of file TDataSetManagerFile.h. ◆ ClearCache(). Int_t TDataSetMan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDataSetManagerFile.html:22469,failure,failure,22469,doc/master/classTDataSetManagerFile.html,https://root.cern,https://root.cern/doc/master/classTDataSetManagerFile.html,1,['failure'],['failure']
Availability,"::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TH2D::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 400 of file TH2.h. ◆ Copy(). void TH2D::Copy ; (; TObject & ; hnew); const. overridevirtual . Copy. ; Reimplemented from TH2.; Reimplemented in TProfile2D.; Definition at line 4237 of file TH2.cxx. ◆ DeclFileName(). static const char * TH2D::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 400 of file TH2.h. ◆ IsA(). TClass * TH2D::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TH2.; Reimplemented in TProfile2D.; Definition at line 400 of file TH2.h. ◆ operator=(). TH2D & TH2D::operator= ; (; const TH2D & ; h1). Operator =. ; Definition at line 4303 of file TH2.cxx. ◆ Reset(). void TH2D::Reset ; (; Option_t * ; option = """"). overridevirtual . Reset this histogram: contents, errors, etc. ; Reimplemented from TH2.; Reimplemented in TProfile2D.; Definition at line 4246 of file TH2.cxx. ◆ RetrieveBinContent(). Double_t TH2D::RetrieveBinContent ; (; Int_t ; bin); const. inlineoverrideprotectedvirtual . Raw retrieval of bin content on internal data structure see convention for numbering bins in TH1::GetBin. ; Reimplemented from TH1.; Reimplemented in TProfile2D.; Definition at line 397 of file TH2.h. ◆ SetBinsLength(). void TH2D::SetBinsLength ; (; Int_t ; n = -1). overridevirtual . Set total number of bins including under/overflow Reallocate bin contents array. ; Reimplemented from TH1.; Reimplemented in TProfile2D.; Definition at line 4257 of file TH2.cxx. ◆ Streamer(). void TH2D::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TH2D. ; Reimplemented from TH2.; Reimplemented in TProfile2D.; Definition at line 4268 of file TH2.cxx. ◆ StreamerNVirtual(). void TH2D::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2D.html:64318,error,errors,64318,doc/master/classTH2D.html,https://root.cern,https://root.cern/doc/master/classTH2D.html,1,['error'],['errors']
Availability,"::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPRegexp::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 93 of file TPRegexp.h. ◆ Compile(). void TPRegexp::Compile ; (; ). protected . Compile the fPattern. ; Definition at line 226 of file TPRegexp.cxx. ◆ DeclFileName(). static const char * TPRegexp::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 93 of file TPRegexp.h. ◆ GetModifiers(). TString TPRegexp::GetModifiers ; (; ); const. Return PCRE modifier options as string. ; For meaning of mods see ParseMods(). ; Definition at line 208 of file TPRegexp.cxx. ◆ GetPattern(). TString TPRegexp::GetPattern ; (; ); const. inline . Definition at line 85 of file TPRegexp.h. ◆ GetThrowAtCompileError(). Bool_t TPRegexp::GetThrowAtCompileError ; (; ). static . Get value of static flag controlling whether exception should be thrown upon an error during regular expression compilation by the PCRE engine. ; Definition at line 588 of file TPRegexp.cxx. ◆ IsA(). virtual TClass * TPRegexp::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented in TPMERegexp.; Definition at line 93 of file TPRegexp.h. ◆ IsValid(). Bool_t TPRegexp::IsValid ; (; ); const. Returns true if underlying PCRE structure has been successfully generated via regexp compilation. ; Definition at line 579 of file TPRegexp.cxx. ◆ Match(). Int_t TPRegexp::Match ; (; const TString & ; s, . const TString & ; mods = """", . Int_t ; start = 0, . Int_t ; nMaxMatch = 10, . TArrayI * ; pos = nullptr . ). The number of matches is returned, this equals the full match + sub-pattern matches. ; nMaxMatch is the maximum allowed number of matches. pos contains the string indices of the matches. Its usage is shown in the routine MatchS. For meaning of mods see ParseMods(). ; Definition at line 410 of file TPRegexp.cxx. ◆ MatchB(). Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPRegexp.html:5451,error,error,5451,doc/master/classTPRegexp.html,https://root.cern,https://root.cern/doc/master/classTPRegexp.html,1,['error'],['error']
Availability,"::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 105 of file HLFactory.h. ◆ DeclFileName(). static const char * RooStats::HLFactory::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 105 of file HLFactory.h. ◆ DumpCfg(). void RooStats::HLFactory::DumpCfg ; (; const char * ; ). inline . Dump the Workspace content as configuration file. ; Definition at line 57 of file HLFactory.h. ◆ fCreateCategory(). void HLFactory::fCreateCategory ; (; ). private . Create the category for the combinations. ; Builds the category necessary for the mutidimensional models.; Its name will be <HLFactory name>_category and the types are specified by the model labels. ; Definition at line 483 of file HLFactory.cxx. ◆ fNamesListsConsistent(). bool HLFactory::fNamesListsConsistent ; (; ). private . Check the length of the lists. ; Check the number of entries in each list.; If not the same and the list is not empty prompt an error. ; Definition at line 504 of file HLFactory.cxx. ◆ fParseLine(). int HLFactory::fParseLine ; (; TString & ; line). private . Parse a single line an puts the content in the RooWorkSpace. ; Parse a single line and puts the content in the RooWorkSpace. ; Definition at line 519 of file HLFactory.cxx. ◆ fReadFile(). int HLFactory::fReadFile ; (; const char * ; fileName, . bool ; is_included = false . ). private . Read the actual cfg file. ; Parses the configuration file.; The objects can be specified following the rules of the RooFactoryWSTool, plus some more flexibility.; The official format for the datacards is "".rs"".; All the instructions end with a "";"" (like in C++).; Carriage returns and white lines are irrelevant but advised since they improve readability (like in C++).; The (Roo)ClassName::objname(description) can be replaced with the more ""pythonic"" objname = (Roo)ClassName(description).; The comments can be specified with a ""//"" if on a single line or ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HLFactory.html:16590,error,error,16590,doc/master/classRooStats_1_1HLFactory.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HLFactory.html,1,['error'],['error']
Availability,"::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 205 of file TUnfoldDensity.h. ◆ DeclFileName(). static const char * TUnfoldDensity::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 205 of file TUnfoldDensity.h. ◆ GetBackground(). TH1 * TUnfoldDensity::GetBackground ; (; const char * ; histogramName, . const char * ; bgrSource = nullptr, . const char * ; histogramTitle = nullptr, . const char * ; distributionName = nullptr, . const char * ; axisSteering = nullptr, . Bool_t ; useAxisBinning = kTRUE, . Int_t ; includeError = 3 . ); const. retreive a background source in a new histogram ; Parameters. [in]histogramNamename of the histogram ; [in]bgrSourcethe background source to retreive ; [in]histogramTitle(default=nullptr) title of the histogram ; [in]distributionName(default=nullptr) identifier of the distribution to be extracted ; [in]axisSteering(default=nullptr) detailed steering within the extracted distribution ; [in]useAxisBinning(default=true) if set to true, try to extract a histogram with proper binning and axis labels ; [in]includeError(default=3) type of background errors to be included (+1 uncorrelated bgr errors, +2 correlated bgr errors). returns a new histogram. See method GetOutput() for a detailed description of the arguments ; Definition at line 751 of file TUnfoldDensity.cxx. ◆ GetBias(). TH1 * TUnfoldDensity::GetBias ; (; const char * ; histogramName, . const char * ; histogramTitle = nullptr, . const char * ; distributionName = nullptr, . const char * ; axisSteering = nullptr, . Bool_t ; useAxisBinning = kTRUE . ); const. retreive bias vector as a new histogram ; Parameters. [in]histogramNamename of the histogram ; [in]histogramTitle(default=nullptr) title of the histogram ; [in]distributionName(default=nullptr) identifier of the distribution to be extracted ; [in]axisSteering(default=nullptr) detailed steering within the extracted dis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:44658,error,errors,44658,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,3,['error'],['errors']
Availability,"::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tcoord(Int_t i, Int_t j) const; virtual voidTObject::Copy(TObject& object) const; UInt_t*createIndexVector() const; Double_t*createPoint() const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidfirstBox(UInt_t* box) const; voidgeneratePoint(const UInt_t* box, Double_t* x, UInt_t* bin, Double_t& vol, Bool_t useQuasiRandom = kTRUE) const; UInt_tgetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tgetNBins() const; UInt_tgetNBoxes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooGrid.html:1898,error,error,1898,root/html526/RooGrid.html,https://root.cern,https://root.cern/root/html526/RooGrid.html,5,['error'],['error']
Availability,"::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tcoord(Int_t i, Int_t j) const; virtual voidTObject::Copy(TObject& object) const; UInt_t*createIndexVector() const; Double_t*createPoint() const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidfirstBox(UInt_t[] box) const; voidgeneratePoint(const UInt_t[] box, Double_t[] x, UInt_t[] bin, Double_t& vol, Bool_t useQuasiRandom = kTRUE) const; UInt_tgetDimension() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; UInt_tgetNBins() const; UInt_tgetNBoxes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooGrid.html:1826,error,error,1826,root/html602/RooGrid.html,https://root.cern,https://root.cern/root/html602/RooGrid.html,2,['error'],['error']
Availability,"::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& line) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TLine*DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual TLine*DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TLine.html:1699,error,error,1699,root/html528/TLine.html,https://root.cern,https://root.cern/root/html528/TLine.html,3,['error'],['error']
Availability,"::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& line) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TLine*DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual TLine*DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tGetBBox(); virtual TPointGetBBoxCenter(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2() const; virtual Bool_tTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLine.html:1718,error,error,1718,root/html534/TLine.html,https://root.cern,https://root.cern/root/html534/TLine.html,3,['error'],['error']
Availability,"::Closelog(); 1695{; 1696 AbstractMethod(""Closelog"");; 1697}; 1698 ; 1699//---- Standard output redirection ---------------------------------------------; 1700 ; 1701////////////////////////////////////////////////////////////////////////////////; 1702/// Redirect standard output (stdout, stderr) to the specified file.; 1703/// If the file argument is 0 the output is set again to stderr, stdout.; 1704/// The second argument specifies whether the output should be added to the; 1705/// file (""a"", default) or the file be truncated before (""w"").; 1706/// The implementations of this function save internally the current state into; 1707/// a static structure.; 1708///; 1709/// The call can be made reentrant by specifying the opaque structure pointed; 1710/// by 'h', which is filled with the relevant information. The handle 'h'; 1711/// obtained on the first call must then be used in any subsequent call,; 1712/// included ShowOutput, to display the redirected output.; 1713/// Returns 0 on success, -1 in case of error.; 1714 ; 1715Int_t TSystem::RedirectOutput(const char *, const char *, RedirectHandle_t *); 1716{; 1717 AbstractMethod(""RedirectOutput"");; 1718 return -1;; 1719}; 1720 ; 1721////////////////////////////////////////////////////////////////////////////////; 1722/// Display the content associated with the redirection described by the; 1723/// opaque handle 'h'.; 1724 ; 1725void TSystem::ShowOutput(RedirectHandle_t *h); 1726{; 1727 // Check input ...; 1728 if (!h) {; 1729 Error(""ShowOutput"", ""handle not specified"");; 1730 return;; 1731 }; 1732 ; 1733 // ... and file access; 1734 if (gSystem->AccessPathName(h->fFile, kReadPermission)) {; 1735 Error(""ShowOutput"", ""file '%s' cannot be read"", h->fFile.Data());; 1736 return;; 1737 }; 1738 ; 1739 // Open the file; 1740 FILE *f = nullptr;; 1741 if (!(f = fopen(h->fFile.Data(), ""r""))) {; 1742 Error(""ShowOutput"", ""file '%s' cannot be open"", h->fFile.Data());; 1743 return;; 1744 }; 1745 ; 1746 // Determine the number of byt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:55187,error,error,55187,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['error'],['error']
Availability,"::Compare(const TObject* obj) const; TMVA::ConfigurableTMVA::Configurable::Configurable(const TString& theOption = """"); TMVA::ConfigurableTMVA::Configurable::Configurable(const TMVA::Configurable&); virtual voidTObject::Copy(TObject& object) const; virtual const TMVA::Ranking*CreateRanking(); TMVA::DataSet*Data() const; TMVA::DataSetInfo&DataInfo() const; virtual voidDeclareCompatibilityOptions(); virtual voidDeclareOptions(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tDoMulticlass() const; Bool_tDoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeGetAnalysisType() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tGetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*GetEvent() const; const TMVA::Event*GetEvent(const TMVA::Event* ev) const; const TMVA::Event*GetEvent(Long64_t ievt) const; const TMVA::Event*GetEvent(Long64_t ievt, TMVA::Types::ETreeType type) const; const vector<TMVA::Event*>&GetEventCollection(TMVA::Types::ETreeType type); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MethodBase.html:3631,error,error,3631,root/html602/TMVA__MethodBase.html,https://root.cern,https://root.cern/root/html602/TMVA__MethodBase.html,2,['error'],['error']
Availability,"::ComputeSums ; (; ). protected . Definition at line 814 of file BinData.cxx. ◆ CoordErrors(). const double * ROOT::Fit::BinData::CoordErrors ; (; unsigned int ; ipoint); const. inline . Return a pointer to the errors in the coordinates for the given fit point. ; Definition at line 412 of file BinData.h. ◆ Error(). double ROOT::Fit::BinData::Error ; (; unsigned int ; ipoint); const. inline . Return the error on the given point. ; Safer method returning in any case the error and not the inverse as in the function above. ; Definition at line 262 of file BinData.h. ◆ ErrorPtr(). const double * ROOT::Fit::BinData::ErrorPtr ; (; unsigned int ; ipoint); const. inline . Return a pointer to the error (or the inverse error) on the value for a given point depending on the type of data. . If the data contains only value error (e.g. from histograms) returns a pointer to the inverse of the errors.; If the data contains errors in coordinates and value (e.g from TGraphErrors) returns a pointer to the corresponding value error (NOT the inverse).; If the data contains asymmetric errors return a pointer to the average error (NOT the inverse): 0.5(eu + el).; If the data does not contain errors return a nullptr. . Definition at line 249 of file BinData.h. ◆ GetAsymError(). void ROOT::Fit::BinData::GetAsymError ; (; unsigned int ; ipoint, . double & ; lowError, . double & ; highError . ); const. inline . Definition at line 307 of file BinData.h. ◆ GetBinUpEdgeComponent(). double ROOT::Fit::BinData::GetBinUpEdgeComponent ; (; unsigned int ; ipoint, . unsigned int ; icoord . ); const. inline . returns a single coordinate error component of a point. ; This function is threadsafe in contrast to Coords(...) and can easily get vectorized by the compiler in loops running over the ipoint-index. ; Definition at line 502 of file BinData.h. ◆ GetBinUpEdgeCoordinates(). void ROOT::Fit::BinData::GetBinUpEdgeCoordinates ; (; unsigned int ; ipoint, . double * ; x . ); const. inline . Thread save versi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html:21581,error,error,21581,doc/master/classROOT_1_1Fit_1_1BinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html,1,['error'],['error']
Availability,"::Copy(TObject& object) const; Double_tCosTheta() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Double_tDeltaPhi(const TLorentzVector&) const; Double_tDeltaR(const TLorentzVector&) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Double_tDot(const TLorentzVector&) const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; Double_tDrEtaPhi(const TLorentzVector&) const; virtual voidTObject::Dump() constMENU ; Double_tE() const; Double_tEnergy() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_tEt() const; Double_tEt(const TVector3&) const; Double_tEt2() const; Double_tEt2(const TVector3&) const; Double_tEta() const; TVector2EtaPhiVector(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGamma() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; voidGetXYZT(Double_t* carray) const; voidGetXYZT(Float_t* carray) const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLorentzVector.html:8323,error,error,8323,root/html602/TLorentzVector.html,https://root.cern,https://root.cern/root/html602/TLorentzVector.html,2,['error'],['error']
Availability,"::DataOptions ; (; ). inline . Default constructor: use the default options. ; Definition at line 34 of file DataOptions.h. Member Data Documentation. ◆ fAsymErrors. bool ROOT::Fit::DataOptions::fAsymErrors. use asymmetric errors in the value when available, selecting them according to the on sign of residual (default is true) ; Definition at line 55 of file DataOptions.h. ◆ fBinVolume. bool ROOT::Fit::DataOptions::fBinVolume. normalize data by the bin volume (it is used in the Poisson likelihood fits) ; Definition at line 48 of file DataOptions.h. ◆ fCoordErrors. bool ROOT::Fit::DataOptions::fCoordErrors. use errors on the x coordinates when available (default is true) ; Definition at line 54 of file DataOptions.h. ◆ fErrors1. bool ROOT::Fit::DataOptions::fErrors1. use all errors equal to 1, i.e. fit without errors (default is false) ; Definition at line 52 of file DataOptions.h. ◆ fExpErrors. bool ROOT::Fit::DataOptions::fExpErrors. use expected errors from the function and not from the data ; Definition at line 53 of file DataOptions.h. ◆ fIntegral. bool ROOT::Fit::DataOptions::fIntegral. use integral of bin content instead of bin center (default is false) ; Definition at line 47 of file DataOptions.h. ◆ fNormBinVolume. bool ROOT::Fit::DataOptions::fNormBinVolume. normalize data by a normalized the bin volume (bin volume divided by a reference value) ; Definition at line 49 of file DataOptions.h. ◆ fUseEmpty. bool ROOT::Fit::DataOptions::fUseEmpty. use empty bins (default is false) with a fixed error of 1 ; Definition at line 50 of file DataOptions.h. ◆ fUseRange. bool ROOT::Fit::DataOptions::fUseRange. use the function range when creating the fit data (default is false) ; Definition at line 51 of file DataOptions.h. Collaboration diagram for ROOT::Fit::DataOptions:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; The documentation for this struct was generated from the following file:; math/mathcore/inc/Fit/DataOpti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions.html:2531,error,errors,2531,doc/master/structROOT_1_1Fit_1_1DataOptions.html,https://root.cern,https://root.cern/doc/master/structROOT_1_1Fit_1_1DataOptions.html,1,['error'],['errors']
Availability,"::Delete(Option_t* option = """")MENU ; virtual voidTPaveText::DeleteText()MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPaveText::DrawFile(const char* filename, Option_t* option = """"); virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTObject::Dump() constMENU ; virtual voidTPaveText::EditText()MENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTPave::GetBorderSize() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; const char*TPaveText::GetLabel() const; virtual TText*TPaveText::GetLine(Int_t number) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual TText*TPaveText::GetLineWith(const char* text) const; virtual TList*TPaveText::GetListOfLines() const; Float_tTPaveText::GetMargin() const; virtual Option_t*TPave::GetName() const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDiamond.html:2558,error,error,2558,root/html528/TDiamond.html,https://root.cern,https://root.cern/root/html528/TDiamond.html,3,['error'],['error']
Availability,"::Delete(Option_t* option = """")MENU ; virtual voidTPaveText::DeleteText()MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPaveText::DrawFile(const char* filename, Option_t* option = """"); virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTObject::Dump() constMENU ; virtual voidTPaveText::EditText()MENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tTBox::GetBBox(); virtual TPointTBox::GetBBoxCenter(); Int_tTPave::GetBorderSize() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; const char*TPaveText::GetLabel() const; virtual TText*TPaveText::GetLine(Int_t number) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual TText*TPaveText::GetLineWith(const char* text) const; virtual TList*TPaveText::GetListOfLines() const; Float_tTPav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDiamond.html:2558,error,error,2558,root/html534/TDiamond.html,https://root.cern,https://root.cern/root/html534/TDiamond.html,3,['error'],['error']
Availability,"::DoLeastSquareFit"", ""wrong type of function - it does not provide gradient"");; 355 }; 356 }; 357 return false;; 358}; 359 ; 360bool Fitter::DoBinnedLikelihoodFit(bool extended, const ROOT::EExecutionPolicy &executionPolicy); 361{; 362 // perform a likelihood fit on a set of binned data; 363 // The fit is extended (Poisson logl_ by default; 364 ; 365 std::shared_ptr<BinData> data = std::dynamic_pointer_cast<BinData>(fData);; 366 assert(data);; 367 ; 368 bool useWeight = fConfig.UseWeightCorrection();; 369 ; 370 // check function; 371 if (!fFunc && !fFunc_v) {; 372 MATH_ERROR_MSG(""Fitter::DoBinnedLikelihoodFit"", ""model function is not set"");; 373 return false;; 374 }; 375 ; 376 // logl fit (error should be 0.5) set if different than default values (of 1); 377 if (fConfig.MinimizerOptions().ErrorDef() == gDefaultErrorDef) {; 378 fConfig.MinimizerOptions().SetErrorDef(0.5);; 379 }; 380 ; 381 if (useWeight && fConfig.MinosErrors()) {; 382 MATH_INFO_MSG(""Fitter::DoBinnedLikelihoodFit"", ""MINOS errors cannot be computed in weighted likelihood fits"");; 383 fConfig.SetMinosErrors(false);; 384 }; 385 ; 386 fBinFit = true;; 387 fDataSize = data->Size();; 388 ; 389 if (!fUseGradient) {; 390 // do minimization without using the gradient; 391 if (fFunc_v) {; 392 // create a chi2 function to be used for the equivalent chi-square; 393 Chi2FCN<BaseFunc, IModelFunction_v> chi2(data, fFunc_v);; 394 auto logl = std::make_unique<PoissonLikelihoodFCN<BaseFunc, IModelFunction_v>>(data, fFunc_v, useWeight, extended, executionPolicy);; 395 return (useWeight) ? DoWeightMinimization(std::move(logl),&chi2) : DoMinimization(std::move(logl),&chi2);; 396 } else {; 397 // create a chi2 function to be used for the equivalent chi-square; 398 Chi2FCN<BaseFunc> chi2(data, fFunc);; 399 auto logl = std::make_unique<PoissonLikelihoodFCN<BaseFunc>>(data, fFunc, useWeight, extended, executionPolicy);; 400 return (useWeight) ? DoWeightMinimization(std::move(logl),&chi2) : DoMinimization(std::move(logl),&chi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8cxx_source.html:13672,error,errors,13672,doc/master/Fitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8cxx_source.html,1,['error'],['errors']
Availability,"::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TF1*DrawCopy(Option_t* option = """") const; virtual TObject*DrawDerivative(Option_t* = ""al""); virtual voidTF1::DrawF1(const char* formula, Double_t xmin, Double_t xmax, Option_t* option = """"); virtual voidDrawF2(const char* formula, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, Option_t* option = """"); virtual TObject*DrawIntegral(Option_t* = ""al""); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tTF1::Eval(Double_t x, Double_t y = 0, Double_t z = 0, Double_t t = 0) const; virtual Double_tTF1::EvalPar(const Double_t* x, const Double_t* params = 0); virtual Double_tTFormula::EvalParOld(const Double_t* x, const Double_t* params = 0); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidTF1::FixParameter(Int_t ipar, Double_t value); Double_tTF1::GetChisquare() const; virtual Int_tGetContour(Double_t* levels = 0); virtual Double_tGetContourLevel(Int_t level) const; static TF1*TF1::GetCurrent(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TStringTFormula::GetExpFormula(Option_t* option = """") const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; TH1*TF1::GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual const TObject*TFormula::GetLinearPart(Int_t i); virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLine",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF2.html:4281,error,error,4281,root/html528/TF2.html,https://root.cern,https://root.cern/root/html528/TF2.html,5,['error'],['error']
Availability,"::ECoordMode mode = kCoordModeOrigin); virtual voidDrawRectangle(UInt_t x, UInt_t y, UInt_t w, UInt_t h, const char* col = ""#000000"", UInt_t thick = 1); virtual voidDrawSegments(UInt_t nseg, Segment_t* seg, const char* col = ""#000000"", UInt_t thick = 1); virtual voidDrawStraightEllips(Int_t x, Int_t y, Int_t rx, Int_t ry, const char* col = ""#000000"", Int_t thick = 1); virtual voidDrawText(TText* text, Int_t x = 0, Int_t y = 0); virtual voidDrawText(Int_t x = 0, Int_t y = 0, const char* text = """", Int_t size = 12, const char* color = 0, const char* font = ""fixed"", TImage::EText3DType type = TImage::kPlain, const char* fore_file = 0, Float_t angle = 0); virtual voidTObject::Dump() constMENU ; virtual voidTAttImage::EditorClosed(); virtual voidEndPaint(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillPolygon(UInt_t npt, TPoint* ppt, TImage* tile); virtual voidFillPolygon(UInt_t npt, TPoint* ppt, const char* col = ""#000000"", const char* stipple = 0, UInt_t w = 16, UInt_t h = 16); virtual voidFillRectangle(const char* col = 0, Int_t x = 0, Int_t y = 0, UInt_t width = 0, UInt_t height = 0); virtual voidFillSpans(UInt_t npt, TPoint* ppt, UInt_t* widths, TImage* tile); virtual voidFillSpans(UInt_t npt, TPoint* ppt, UInt_t* widths, const char* col = ""#000000"", const char* stipple = 0, UInt_t w = 16, UInt_t h = 16); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFlip(Int_t flip = 180)MENU ; virtual voidFloodFill(Int_t x, Int_t y, const char* col, const char* min_col, const char* max_col = 0); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TASImage.html:5321,error,error,5321,root/html526/TASImage.html,https://root.cern,https://root.cern/root/html526/TASImage.html,7,['error'],['error']
Availability,"::EHistType type = kHist1D); TPBHistType(const TPBHistType&); virtual~TPBHistType(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; TPBHistType::EHistTypeGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPBHistType.html:1405,error,error,1405,root/html530/TPBHistType.html,https://root.cern,https://root.cern/root/html530/TPBHistType.html,3,['error'],['error']
Availability,"::ERegMode regmode); set regulatisation on a 1-dimensional curve; start: first bin; step: distance between neighbouring bins; nbin: total number of bins; regmode: regularisation mode; return value:; number of errors (i.e. conditions which have been skipped); modifies data member fL. Int_t RegularizeBins2D(int start_bin, int step1, int nbin1, int step2, int nbin2, TUnfold::ERegMode regmode); set regularisation on a 2-dimensional grid of bins; start: first bin; step1: distance between bins in 1st direction; nbin1: number of bins in 1st direction; step2: distance between bins in 2nd direction; nbin2: number of bins in 2nd direction; return value:; number of errors (i.e. conditions which have been skipped); modifies data member fL. Double_t DoUnfold(Double_t tau, const TH1* hist_y, Double_t scaleBias = 0.0); Do unfolding of an input histogram; tau_reg: regularisation parameter; input: input distribution with errors; scaleBias: scale factor applied to the bias; Data members required:; fA, fX0, fL; Data members modified:; those documented in SetInput(); and those documented in DoUnfold(Double_t); Return value:; maximum global correlation coefficient; NOTE!!! return value >=1.0 means error, and the result is junk. Overflow bins of the input distribution are ignored!. Int_t SetInput(const TH1* hist_y, Double_t scaleBias = 0.0, Double_t oneOverZeroError = 0.0, const TH2* hist_vyy = 0, const TH2* hist_vyy_inv = 0); Define the input data for subsequent calls to DoUnfold(Double_t); input: input distribution with errors; scaleBias: scale factor applied to the bias; oneOverZeroError: for bins with zero error, this number defines 1/error.; hist_vyy: if non-zero, defines the data covariance matrix; otherwise it is calculated from the data errors; hist_vyy_inv: if non-zero and if hist_vyy is set, defines the inverse of the data covariance matrix; Return value: number of bins with bad error; +10000*number of unconstrained output bins; Note: return values>=10000 are fatal errors,; for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfold.html:24648,error,errors,24648,root/html534/TUnfold.html,https://root.cern,https://root.cern/root/html534/TUnfold.html,1,['error'],['errors']
Availability,"::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TMutexImp*fMutexImppointer to mutex implementation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMutex(Bool_t recursive = kFALSE); Create a mutex lock. The actual mutex implementation will be; provided via the TThreadFactory. Int_t Lock(); Lock the mutex. Returns 0 when no error, EDEADLK when mutex was already; locked by this thread and this mutex is not reentrant. Int_t TryLock(); Try to lock mutex. Returns 0 when no error, EDEADLK when mutex was; already locked by this thread and this mutex is not reentrant. Int_t UnLock(); Unlock the mutex. Returns 0 when no error, EPERM when mutex was already; unlocked by this thread. Int_t CleanUp(); Clean up of mutex. TVirtualMutex * Factory(Bool_t recursive = kFALSE); Create mutex and return pointer to it. Calling function must care; about proper deletion. The function is intended to be used in connection; with the R__LOCKGUARD2 macro for local thread protection. Since ""new"" is; used the TStorage class has to be protected by gGlobalMutex. TMutex(const TMutex& ). TMutex& operator=(const TMutex& ). virtual ~TMutex(); { delete fMutexImp; }. » Author: Fons Rademakers 26/06/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-06-02 16:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMutex.html:6397,error,error,6397,root/html604/TMutex.html,https://root.cern,https://root.cern/root/html604/TMutex.html,2,['error'],['error']
Availability,"::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. TMutexImp*fMutexImppointer to mutex implementation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMutex(Bool_t recursive = kFALSE); Create a mutex lock. The actual mutex implementation will be; provided via the TThreadFactory. Int_t Lock(); Lock the mutex. Returns 0 when no error, EDEADLK when mutex was already; locked by this thread and this mutex is not reentrant. Int_t TryLock(); Try to lock mutex. Returns 0 when no error, EDEADLK when mutex was; already locked by this thread and this mutex is not reentrant. Int_t UnLock(); Unlock the mutex. Returns 0 when no error, EPERM when mutex was already; unlocked by this thread. Int_t CleanUp(); Clean up of mutex. TVirtualMutex * Factory(Bool_t recursive = kFALSE); Create mutex and return pointer to it. Calling function must care; about proper deletion. The function is intended to be used in connection; with the R__LOCKGUARD2 macro for local thread protection. Since ""new"" is; used the TStorage class has to be protected by gGlobalMutex. TMutex(const TMutex& ). TMutex& operator=(const TMutex& ). virtual ~TMutex(); { delete fMutexImp; }. » Author: Fons Rademakers 26/06/97 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/thread:$Id$ » Last generated: 2015-06-30 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMutex.html:6397,error,error,6397,root/html602/TMutex.html,https://root.cern,https://root.cern/root/html602/TMutex.html,2,['error'],['error']
Availability,"::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Double_t*_c! Integrator workspace; Double_t*_d! Integrator workspace; Bool_t_doExtrapApply conversion step?; Double_t_epsAbsAbsolute convergence tolerance; Double_t_epsRelRelative convergence tolerance; Double_t_extrapError! Error on extrapolated value; Double_t_extrapValue! Extrapolated value; Int_t_fixStepsFixed number of steps; const RooAbsFunc*RooAbsIntegrator::_functionPointer to function binding of integrand; Double_t*_h! Integrator workspace; Int_t_maxStepsMaximum number of steps; Int_t_minStepsZeroMinimum number of steps to declare convergence to zero; static RooIntegrator1D::(anonymous)_nPoints; Bool_tRooAbsIntegrator::_printEvalCounterIf true print number of function evaluation required for integration; Double_t_range! Size of integration range; RooIntegrator1D::SummationRule_rule; Double_t*_s! Integrator workspace; Double_t_savedResult! Integrator workspace; Bool_t_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooIntegrator1D, is parameters and capabilities with RooNumIntFactory. RooIntegrator1D(); coverity[UNINIT_CTOR]; Default constructor. RooIntegrator1D(const RooAbsFunc& function, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Construct integrator on ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooIntegrator1D.html:7388,toler,tolerance,7388,root/html602/RooIntegrator1D.html,https://root.cern,https://root.cern/root/html602/RooIntegrator1D.html,4,['toler'],['tolerance']
Availability,"::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TRefCnt::EReferenceFlagTRefCnt::kStaticInit; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. GContext_tfContextgraphics context handle; UInt_tTRefCnt::fRefs(1 less than) number of references; GCValues_tfValuesgraphics context values + mask. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGC(GCValues_t* values, Bool_t calledByGCPool); Create a graphics context (only called via TGGCPool::GetGC()). TGGC(GCValues_t* values = 0); Create a graphics context, registers GC in GCPool. TGGC(const TGGC& g); Copy a graphics context. ~TGGC(); Delete graphics context. TGGC & operator=(const TGGC& rhs); Graphics context assignment operator. GContext_t operator()() const; Not inline due to a bug in g++ 2.96 20000731 (Red Hat Linux 7.0). void UpdateValues(GCValues_t* v); Update values + mask. void SetAttributes(GCValues_t* values); Set attributes as specified in the values structure. void SetFunction(EGraphicsFunction v); Set graphics context drawing function. void SetPlaneMask(ULong_t v); Set plane mask. void SetForeground(Pixel_t v); Set foreground color. void SetBackground(Pixel_t v); Set background color. void SetLineWidth(Int_t v); Set line width. void SetLineStyle(Int_t v); Set line style (kLineSolid, kLineOnOffDash, kLineDoubleDash). void SetCapStyle(Int_t v); Set cap style (kCapNotLast, kCapButt, kCapRound, kCapProjecting). void SetJoinStyle(Int_t v); Set line join style (kJoinMiter, kJoinRound, kJoinBevel). void SetFillStyle(Int_t v); Set fill style (kFillSolid, kFillTiled, kFillStippled,; kFillOpaeueStippled). void SetFillRule(Int_t v); Set fill rule (kEvenOddRule, kWindingRule). void SetTile(Pixmap_t v); Set tile pixmap for tiling operations. void SetStipple(Pixmap_t v); Set 1 plane pixmap for stippling. void SetTileStipXOrigin(Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGGC.html:8205,mask,mask,8205,root/html602/TGGC.html,https://root.cern,https://root.cern/root/html602/TGGC.html,2,['mask'],['mask']
Availability,"::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); Int_tEntryId() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGFrame::GetDefaultSize() const; virtual UInt_tTGFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_tTGFrame::GetDragType() const; virtual Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLBEntry.html:4447,error,error,4447,root/html602/TGLBEntry.html,https://root.cern,https://root.cern/root/html602/TGLBEntry.html,2,['error'],['error']
Availability,"::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); virtual voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGet3DStyle() const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; Int_tGetBottomMargin() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static FontStruct_tGetDefaultFontStruct(); static Pixel_tTGFrame::GetDefaultFrameBackground(); static const TGGC&GetDefaultGC(); virtual UInt_tTGFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionGetDefaultSize() const; virtual UInt_tTGFrame::GetDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLabel.html:3969,error,error,3969,root/html602/TGLabel.html,https://root.cern,https://root.cern/root/html602/TGLabel.html,2,['error'],['error']
Availability,"::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); virtual voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; Int_tTGTextButton::GetBottomMargin() const; TGClient*TGObject::GetClient() const; const char*TGWidget::GetCommand() const; static Int_tTGWindow::GetCounter(); static FontStruct_tTGCheckButton::GetDefaultFontStruct(); static Pixel_tTGFrame::GetDefaultFrameBackground(); static const TGGC&TGCheckButton::GetDefaultGC(); virtual UInt_tTGFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGedSelect.html:4782,error,error,4782,root/html602/TGedSelect.html,https://root.cern,https://root.cern/root/html602/TGedSelect.html,2,['error'],['error']
Availability,"::Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); voidEqualizeFrames(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPack.html:4449,error,error,4449,root/html602/TGPack.html,https://root.cern,https://root.cern/root/html602/TGPack.html,2,['error'],['error']
Availability,"::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidEnableCursorWithoutFocus(Bool_t on = kTRUE); virtual voidEnableMenu(Bool_t on = kTRUE)TOGGLE GETTER ; virtual voidEnd(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFindAgain()SIGNAL ; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGViewFrame*TGView::GetCanvas() const; TGClient*TGObject::GetClient() const; const char*TGWidget::GetCommand() const; static Int_tTGWindow::GetCounter(); TGLongPositionGetCurrentPos() const; static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTextEdit.html:5362,error,error,5362,root/html528/TGTextEdit.html,https://root.cern,https://root.cern/root/html528/TGTextEdit.html,4,['error'],['error']
Availability,"::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); virtual voidEnableTimeout(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; static voidTProofServ::ErrorHandler(Int_t level, Bool_t abort, const char* location, const char* msg); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static Long_tTApplication::ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); TApplication::EExitOnExceptionTApplication::ExitOnException(TApplication::EExitOnException opt = kExit); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; static voidTProofServ::FilterLocalroot(TString& path, const char* url = ""root://dum/""); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidTProofServ::FlushLogFile(); TObject*TProofServ::Get(const char* namecycle); Int_tTProofServ::GetActSessions() const; virtual TApplicationImp*TApplication::GetApplicationImp(); static TList*TApplication::GetApplications(); TApplication*TApplication::GetAppRemote() const; TProofLockPath*TProofServ::GetCacheLock(); const char*TProofServ::GetConfDi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXProofServ.html:4175,error,error,4175,root/html602/TXProofServ.html,https://root.cern,https://root.cern/root/html602/TXProofServ.html,2,['error'],['error']
Availability,"::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); voidTEveElement::EnableListElements(Bool_t rnr_self = kTRUE, Bool_t rnr_children = kTRUE)MENU ; TEveElement::List_iTEveElement::EndChildren(); TEveElement::List_ciTEveElement::EndChildren() const; TEveElement::List_iTEveElement::EndParents(); TEveElement::List_ciTEveElement::EndParents() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTEveElement::ExpandIntoListTree(TGListTree* ltree, TGListTreeItem* parent); voidTEveElement::ExportSourceObjectToCINT(char* var_name) constMENU ; virtual voidTEveElement::ExportToCINT(char* var_name)MENU ; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTEveElement::FillImpliedSelectedSet(TEveElement::Set_t& impSelSet); TEveElement*TEveElement::FindChild(const TString& name, const TClass* cls = 0); TEveElement*TEveElement::FindChild(TPRegexp& regexp, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, const TString& name, const TClass* cls = 0); Int_tTEveElement::FindChildren(TEveElement::List_t& matches, TPRegexp& regexp, const TClass* cls = 0); virtual TEveElement::sLTI_iTEveElement::FindItem(TGLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveBoxSet.html:8344,error,error,8344,root/html602/TEveBoxSet.html,https://root.cern,https://root.cern/root/html602/TEveBoxSet.html,8,['error'],['error']
Availability,"::EnablePackage ; (; const char * ; package, . TList * ; loadopts, . Bool_t ; notOnClient = kFALSE, . TList * ; workers = 0 . ). Enable specified package. ; Executes the PROOF-INF/BUILD.sh script if it exists followed by the PROOF-INF/SETUP.C script. In case notOnClient = true, don't enable the package on the client. The default is to enable packages also on the client. It is is possible to specify a list of objects to be passed to the SETUP functions via 'loadopts'; the objects must be streamable. Returns 0 in case of success and -1 in case of error. ; Definition at line 8258 of file TProof.cxx. ◆ Exec() [1/3]. Int_t TProof::Exec ; (; const char * ; cmd, . Bool_t ; plusMaster = kFALSE . ). Send command to be executed on the PROOF master and/or slaves. ; If plusMaster is kTRUE then exeucte on slaves and master too. Command can be any legal command line command. Commands like "".x file.C"" or "".L file.C"" will cause the file file.C to be send to the PROOF cluster. Returns -1 in case of error, >=0 in case of succes. ; Definition at line 6521 of file TProof.cxx. ◆ Exec() [2/3]. Int_t TProof::Exec ; (; const char * ; cmd, . const char * ; ord, . Bool_t ; logtomacro = kFALSE . ). Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ; Command can be any legal command line command. Commands like "".x file.C"" or "".L file.C"" will cause the file file.C to be send to the PROOF cluster. If logtomacro is TRUE the text result of the action is saved in the fMacroLog TMacro, accessible via TMacro::GetMacroLog(); Returns -1 in case of error, >=0 in case of succes. ; Definition at line 6589 of file TProof.cxx. ◆ Exec() [3/3]. Int_t TProof::Exec ; (; const char * ; cmd, . ESlaves ; list, . Bool_t ; plusMaster . ). private . Send command to be executed on the PROOF master and/or slaves. ; Command can be any legal command line command. Commands like "".x file.C"" or "".L file.C"" will cause the file file.C to be send to the PROOF cluster. Returns -1 in case of error, >=0 i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:88399,error,error,88399,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['error'],['error']
Availability,"::EvaluateChi2.; In case of TGraphErrors an effective chi2 is used; (see TGraphErrors fit in TGraph::Fit) and is implemented in; FitUtil::EvaluateChi2Effective; To specify a User defined fitting function, specify option ""U"" and; call the following functions:; TVirtualFitter::Fitter(mygraph)->SetFCN(MyFittingFunction); where MyFittingFunction is of type:; extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);. Access to the fit result. The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; By default the TFitResultPtr contains only the status of the fit and it converts; automatically to an integer. If the option ""S"" is instead used, TFitResultPtr contains; the TFitResult and behaves as a smart pointer to it. For example one can do:; TFitResultPtr r = graph->Fit(""myFunc"",""S"");; TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; r->Print(""V""); // print full information of fit including covariance matrix; r->Write(); // store the result in a file. The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; from the fitted function. Associated functions. One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each graph.; When TGraph::Fit is invoked, the fitted function is added to this list.; Given a graph gr, one can retrieve an associated function; with: TF1 *myfunc = gr->GetFunction(""myfunc"");. If the graph is made persistent, the list of; associated functions is also persistent. Given a pointer (see above); to an associated function myfunc, one can retrieve the function/fit; parameters with calls such as:; Double_t chi2 = myfunc->GetChisquare();; Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; Double_t err0 = myfunc->GetParErr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiGraph.html:13404,error,error,13404,root/html528/TMultiGraph.html,https://root.cern,https://root.cern/root/html528/TMultiGraph.html,6,['error'],['error']
Availability,"::ExpandPathNamevirtual Bool_t ExpandPathName(TString &path)Expand a pathname getting rid of special shell characters like ~.Definition TSystem.cxx:1274; TSystem::GetListOfStdExceptionHandlersvirtual TSeqCollection * GetListOfStdExceptionHandlers() constDefinition TSystem.h:385; TSystem::pwdconst char * pwd()Definition TSystem.h:424; TSystem::GetBuildDirvirtual const char * GetBuildDir() constReturn the path of the build directory.Definition TSystem.cxx:3915; TSystem::Openlogvirtual void Openlog(const char *name, Int_t options, ELogFacility facility)Open connection to system log daemon.Definition TSystem.cxx:1677; TSystem::GetErrnostatic Int_t GetErrno()Static function returning system error number.Definition TSystem.cxx:276; TSystem::AddIncludePathvirtual void AddIncludePath(const char *includePath)Add a directory to the already set include path.Definition TSystem.cxx:4159; TSystem::Chmodvirtual int Chmod(const char *file, UInt_t mode)Set the file permission bits. Returns -1 in case or error, 0 otherwise.Definition TSystem.cxx:1508; TSystem::GetEffectiveGidvirtual Int_t GetEffectiveGid()Returns the effective group id.Definition TSystem.cxx:1591; TSystem::EAclicModeEAclicModeDefinition TSystem.h:269; TSystem::kDefault@ kDefaultDefinition TSystem.h:269; TSystem::kDebug@ kDebugDefinition TSystem.h:269; TSystem::kOpt@ kOptDefinition TSystem.h:269; TSystem::~TSystemvirtual ~TSystem()Delete the OS interface.Definition TSystem.cxx:139; TSystem::SetDisplayvirtual void SetDisplay()Set DISPLAY environment variable based on utmp entry. Only for UNIX.Definition TSystem.cxx:235; TSystem::fReadmaskTFdSet * fReadmaskDefinition TSystem.h:275; TSystem::fWdpathTString fWdpathDefinition TSystem.h:284; TSystem::DirNamevirtual const char * DirName(const char *pathname)Return the directory name in pathname.Definition TSystem.cxx:1006; TSystem::FreeDirectoryvirtual void FreeDirectory(void *dirp)Free a directory.Definition TSystem.cxx:845; TSystem::SetFlagsOptvirtual void SetFlagsOpt(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:41423,error,error,41423,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['error'],['error']
Availability,"::Experimental::TTreeReaderFast, ROOT::Internal::TBranchProxyClassDescriptor, ROOT::Internal::TBranchProxyDescriptor, TChainIndex, TFileDrawMap, ROOT::Internal::TFriendProxyDescriptor, TSelectorDraw, TSelectorEntries, TTreeDrawArgsParser, TTreeFormula, TTreeFormulaManager, TTreeIndex, TTreePerfStats, TTreePlayer, TTreeReader, TParallelCoord, TParallelCoordRange, TParallelCoordSelect, TParallelCoordVar, TSpider, TTreeViewer, TTVRecord, TTVSession, iterplugin, h1analysis, h1analysisTreeReader, PyROOT::RegulatorCleanup, ROOT::Internal::TCheckHashRecursiveRemoveConsistency, and ROOT::Experimental::Internal::RKeyBlob.; Definition at line 894 of file TObject.cxx. ◆ StreamerNVirtual(). void TObject::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 243 of file TObject.h. ◆ SysError(). void TObject::SysError ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue system error message. ; Use ""location"" to specify the method where the system error occurred. Accepts standard printf formatting arguments. ; Definition at line 1007 of file TObject.cxx. ◆ TestBit(). R__ALWAYS_INLINE Bool_t TObject::TestBit ; (; UInt_t ; f); const. inline . Definition at line 199 of file TObject.h. ◆ TestBits(). Int_t TObject::TestBits ; (; UInt_t ; f); const. inline . Definition at line 200 of file TObject.h. ◆ UseCurrentStyle(). void TObject::UseCurrentStyle ; (; ). virtual . Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ; Reimplemented in TCanvas, TPad, TFrame, TPaveStats, TPaveText, TAxis3D, TGraph, TH1, and TTree.; Definition at line 807 of file TObject.cxx. ◆ Warning(). void TObject::Warning ; (; const char * ; location, . const char * ; fmt, .  ; ... . ); const. virtual . Issue warning message. ; Use ""location"" to specify the method where the warning occurred. Accepts standard printf formatting arguments. ; Definition at l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTObject.html:115148,error,error,115148,doc/master/classTObject.html,https://root.cern,https://root.cern/doc/master/classTObject.html,1,['error'],['error']
Availability,"::Fit::FitResult::Printvoid Print(std::ostream &os, bool covmat=false) constprint the result and optionally covariance matrix and correlationsDefinition FitResult.cxx:389; ROOT::Fit::FitResult::Probdouble Prob() constp value of the fit (chi2 probability)Definition FitResult.cxx:320; ROOT::Fit::FitterFitter class, entry point for performing all type of fits.Definition Fitter.h:77; ROOT::Fit::Fitter::Resultconst FitResult & Result() constget fit resultDefinition Fitter.h:394; ROOT::Fit::Fitter::Fitbool Fit(const Data &data, const Function &func, const ROOT::EExecutionPolicy &executionPolicy=ROOT::EExecutionPolicy::kSequential)fit a data set using any generic model function If data set is binned a least square fit is performed...Definition Fitter.h:144; ROOT::Fit::Fitter::SetFunctionvoid SetFunction(const IModelFunction &func, bool useGradient=false)Set the fitted function (model function) from a parametric function interface.Definition Fitter.cxx:59; ROOT::Math::WrappedMultiTF1TemplClass to Wrap a ROOT Function class (like TF1) in a IParamMultiFunction interface of multi-dimensions...Definition WrappedMultiTF1.h:48; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TF1::SetFitResultvirtual void SetFitResult(const ROOT::Fit::FitResult &result, const Int_t *indpar=nullptr)Set the result from the fit parameter values, errors, chi2, etc... Optionally a pointer to a vector (...Definition TF1.cxx:3355; TF3A 3-Dim function with parameters.Definition TF3.h:28; TRandom2Random number generator class based on the maximally quidistributed combined Tausworthe generator by ...Definition TRandom2.h:27; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; v@ vDefinition rootcling_impl.cxx:3699; AuthorLorenzo Moneta ; Definition in file exampleFit3D.C. tutorialsfitexampleFit3D.C. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exampleFit3D_8C.html:4572,error,errors,4572,doc/master/exampleFit3D_8C.html,https://root.cern,https://root.cern/doc/master/exampleFit3D_8C.html,1,['error'],['errors']
Availability,"::GSLRngCMRG Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngCMRG Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Combined multiple recursive generator (L'Ecuyer) see here ; Definition at line 454 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngCMRG ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html:1140,avail,available,1140,doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngCMRG.html,2,"['avail', 'error']","['available', 'error']"
Availability,::GetAttLine(Int_t e); 1633{; 1634 if (e >= 0 && e < fNYErrors); 1635 return &fAttLine.at(e);; 1636 else; 1637 return nullptr;; 1638}; 1639 ; 1640////////////////////////////////////////////////////////////////////////////////; 1641/// Get Fill Color for specified error e (-1 = Global and x errors).; 1642 ; 1643Color_t TGraphMultiErrors::GetFillColor(Int_t e) const; 1644{; 1645 if (e == -1); 1646 return GetFillColor();; 1647 else if (e >= 0 && e < fNYErrors); 1648 return fAttFill[e].GetFillColor();; 1649 else; 1650 return 0;; 1651}; 1652 ; 1653////////////////////////////////////////////////////////////////////////////////; 1654/// Get Fill Style for specified error e (-1 = Global and x errors).; 1655 ; 1656Style_t TGraphMultiErrors::GetFillStyle(Int_t e) const; 1657{; 1658 if (e == -1); 1659 return GetFillStyle();; 1660 else if (e >= 0 && e < fNYErrors); 1661 return fAttFill[e].GetFillStyle();; 1662 else; 1663 return 0;; 1664}; 1665 ; 1666////////////////////////////////////////////////////////////////////////////////; 1667/// Get Line Color for specified error e (-1 = Global and x errors).; 1668 ; 1669Color_t TGraphMultiErrors::GetLineColor(Int_t e) const; 1670{; 1671 if (e == -1); 1672 return GetLineColor();; 1673 else if (e >= 0 && e < fNYErrors); 1674 return fAttLine[e].GetLineColor();; 1675 else; 1676 return 0;; 1677}; 1678 ; 1679////////////////////////////////////////////////////////////////////////////////; 1680/// Get Line Style for specified error e (-1 = Global and x errors).; 1681 ; 1682Style_t TGraphMultiErrors::GetLineStyle(Int_t e) const; 1683{; 1684 if (e == -1); 1685 return GetLineStyle();; 1686 else if (e >= 0 && e < fNYErrors); 1687 return fAttLine[e].GetLineStyle();; 1688 else; 1689 return 0;; 1690}; 1691 ; 1692////////////////////////////////////////////////////////////////////////////////; 1693/// Get Line Width for specified error e (-1 = Global and x errors).; 1694 ; 1695Width_t TGraphMultiErrors::GetLineWidth(Int_t e) const; 1696{; 1697 if ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:56714,error,error,56714,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,"::GetEntries) for additional option. If SetEventList was used on the TTree or TChain, only that subset of entries will be considered. ; Reimplemented in TProofChain, TChain, and TTreeSQL.; Definition at line 5499 of file TTree.cxx. ◆ GetEntriesFast(). virtual Long64_t TTree::GetEntriesFast ; (; ); const. inlinevirtual . Reimplemented in TTreeSQL.; Definition at line 465 of file TTree.h. ◆ GetEntriesFriend(). Long64_t TTree::GetEntriesFriend ; (; ); const. virtual . Return pointer to the 1st Leaf named name in any Branch of this Tree or any branch in the list of friend trees. ; Definition at line 5512 of file TTree.cxx. ◆ GetEntry(). Int_t TTree::GetEntry ; (; Long64_t ; entry, . Int_t ; getall = 0 . ). virtual . Read all branches of entry and return total number of bytes read. . getall = 0 : get only active branches; getall = 1 : get all branches. The function returns the number of bytes read from the input buffer. If entry does not exist the function returns 0. If an I/O error occurs, the function returns -1.; If the Tree has friends, also read the friends entry.; To activate/deactivate one or more branches, use TBranch::SetBranchStatus For example, if you have a Tree with several hundred branches, and you are interested only by branches named ""a"" and ""b"", do mytree.SetBranchStatus(""*"",0); //disable all branches; mytree.SetBranchStatus(""a"",1);; mytree.SetBranchStatus(""b"",1);; when calling mytree.GetEntry(i); only branches ""a"" and ""b"" will be read.; WARNING!! If your Tree has been created in split mode with a parent branch ""parent."", mytree.SetBranchStatus(""parent"",1);; will not activate the sub-branches of ""parent"". You should do: mytree.SetBranchStatus(""parent*"",1);; Without the trailing dot in the branch creation you have no choice but to call SetBranchStatus explicitly for each of the sub branches.; An alternative is to call directly brancha.GetEntry(i); branchb.GetEntry(i);; ; IMPORTANT NOTE; By default, GetEntry reuses the space allocated by the previous object",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTree.html:149842,error,error,149842,doc/v632/classTTree.html,https://root.cern,https://root.cern/doc/v632/classTTree.html,1,['error'],['error']
Availability,"::GetFillStyle ; (; ); const. overridevirtual . Return the fill area style. ; Reimplemented from TAttFill. ◆ GetFontHandle(). FontH_t TGWin32VirtualXProxy::GetFontHandle ; (; FontStruct_t ; fs). overridevirtual . Returns the font handle of the specified font structure ""fs"". ; Reimplemented from TVirtualX. ◆ GetFontProperties(). void TGWin32VirtualXProxy::GetFontProperties ; (; FontStruct_t ; font, . Int_t & ; max_ascent, . Int_t & ; max_descent . ). overridevirtual . Returns the font properties. ; Reimplemented from TVirtualX. ◆ GetFontStruct(). FontStruct_t TGWin32VirtualXProxy::GetFontStruct ; (; FontH_t ; fh). overridevirtual . Retrieves the associated font structure of the font specified font handle ""fh"". ; Free returned FontStruct_t using FreeFontStruct(). ; Reimplemented from TVirtualX. ◆ GetGCValues(). void TGWin32VirtualXProxy::GetGCValues ; (; GContext_t ; gc, . GCValues_t & ; gval . ). overridevirtual . Returns the components specified by the mask in ""gval"" for the specified GC ""gc"" (see also the GCValues_t structure) ; Reimplemented from TVirtualX. ◆ GetGeometry(). void TGWin32VirtualXProxy::GetGeometry ; (; Int_t ; wid, . Int_t & ; x, . Int_t & ; y, . UInt_t & ; w, . UInt_t & ; h . ). overridevirtual . Returns position and size of window ""wid"". ; Parameters. [in]widwindow identifier if wid < 0 the size of the display is returned ; [in]x,yreturned window position ; [in]w,hreturned window size . Reimplemented from TVirtualX. ◆ GetImageSize(). void TGWin32VirtualXProxy::GetImageSize ; (; Drawable_t ; id, . UInt_t & ; width, . UInt_t & ; height . ). overridevirtual . Returns the width and height of the image id. ; Reimplemented from TVirtualX. ◆ GetInputFocus(). Window_t TGWin32VirtualXProxy::GetInputFocus ; (; ). overridevirtual . Returns the window id of the window having the input focus. ; Reimplemented from TVirtualX. ◆ GetLineColor(). Color_t TGWin32VirtualXProxy::GetLineColor ; (; ); const. overridevirtual . Return the line color. ; Reimplemented from T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:80548,mask,mask,80548,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['mask'],['mask']
Availability,"::GetParametersconst Double_t * GetParameters() constDefinition TF1.h:88; TF11-Dim function classDefinition TF1.h:233; TF1::fFunctorstd::unique_ptr< TF1FunctorPointer > fFunctor! Functor object to wrap any C++ callable objectDefinition TF1.h:287; TF1::GetMinimumXvirtual Double_t GetMinimumX(Double_t xmin=0, Double_t xmax=0, Double_t epsilon=1.E-10, Int_t maxiter=100, Bool_t logx=false) constReturns the X value corresponding to the minimum value of the function on the (xmin,...Definition TF1.cxx:1823; TF1::GetMinimumvirtual Double_t GetMinimum(Double_t xmin=0, Double_t xmax=0, Double_t epsilon=1.E-10, Int_t maxiter=100, Bool_t logx=false) constReturns the minimum value of the function on the (xmin, xmax) interval.Definition TF1.cxx:1696; TF1::GetXmaxvirtual Double_t GetXmax() constDefinition TF1.h:584; TF1::ReleaseParametervirtual void ReleaseParameter(Int_t ipar)Release parameter number ipar during a fit operation.Definition TF1.cxx:3151; TF1::SetParErrorvirtual void SetParError(Int_t ipar, Double_t error)Set error for parameter number ipar.Definition TF1.cxx:3479; TF1::RejectPointstatic void RejectPoint(Bool_t reject=kTRUE)Static function to set the global flag to reject points the fgRejectPoint global flag is tested by al...Definition TF1.cxx:3683; TF1::EAddToListEAddToListAdd to list behavior.Definition TF1.h:240; TF1::EAddToList::kDefault@ kDefault; TF1::EAddToList::kNo@ kNo; TF1::EAddToList::kAdd@ kAdd; TF1::Meanvirtual Double_t Mean(Double_t a, Double_t b, const Double_t *params=nullptr, Double_t epsilon=0.000001)Definition TF1.h:733; TF1::Derivativevirtual Double_t Derivative(Double_t x, Double_t *params=nullptr, Double_t epsilon=0.001) constReturns the first derivative of the function at point x, computed by Richardson's extrapolation metho...Definition TF1.cxx:1113; TF1::GetParErrorsvirtual const Double_t * GetParErrors() constDefinition TF1.h:566; TF1::GetNumbervirtual Int_t GetNumber() constDefinition TF1.h:526; TF1::GetNDFvirtual Int_t GetNDF() constRetu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8h_source.html:47130,error,error,47130,doc/master/TF1_8h_source.html,https://root.cern,https://root.cern/doc/master/TF1_8h_source.html,2,['error'],['error']
Availability,"::GetTransformationHandlerTransformationHandler & GetTransformationHandler(Bool_t takeReroutedIfAvailable=true)Definition MethodBase.h:394; TMVA::MethodBase::IsSilentFileBool_t IsSilentFile() constDefinition MethodBase.h:379; TMVA::MethodBase::GetMethodTypeTypes::EMVA GetMethodType() constDefinition MethodBase.h:333; TMVA::MethodBase::AddTargetsXMLTovoid AddTargetsXMLTo(void *parent) constwrite target info to XMLDefinition MethodBase.cxx:1821; TMVA::MethodBase::fResultsResults * fResultsDefinition MethodBase.h:730; TMVA::MethodBase::fXminDouble_t fXminminimum (signal and background)Definition MethodBase.h:665; TMVA::MethodBase::fDefaultPDFPDF * fDefaultPDFdefault PDF definitionsDefinition MethodBase.h:644; TMVA::MethodBase::ReadTargetsFromXMLvoid ReadTargetsFromXML(void *tarnode)read target info from XMLDefinition MethodBase.cxx:1959; TMVA::MethodBase::SetFilevoid SetFile(TFile *file)Definition MethodBase.h:375; TMVA::MethodBase::ProcessBaseOptionsvoid ProcessBaseOptions()the option string is decoded, for available options see ""DeclareOptions""Definition MethodBase.cxx:540; TMVA::MethodBase::Resetvirtual void Reset()Definition MethodBase.h:193; TMVA::MethodBase::fROOTTrainingVersionUInt_t fROOTTrainingVersionDefinition MethodBase.h:619; TMVA::MethodBase::ResetThisBasevoid ResetThisBase(); TMVA::MethodBase::ReadStateFromXMLvoid ReadStateFromXML(void *parent)Definition MethodBase.cxx:1480; TMVA::MethodBase::GetSignalReferenceCutOrientationDouble_t GetSignalReferenceCutOrientation() constDefinition MethodBase.h:361; TMVA::MethodBase::SetSignalReferenceCutvoid SetSignalReferenceCut(Double_t cut)Definition MethodBase.h:364; TMVA::MethodBase::fInputVarsstd::vector< TString > * fInputVarsDefinition MethodBase.h:588; TMVA::MethodBase::NoErrorCalcvoid NoErrorCalc(Double_t *const err, Double_t *const errUpper)Definition MethodBase.cxx:837; TMVA::MethodBase::fSignalReferenceCutDouble_t fSignalReferenceCutthe data set information (sometimes needed)Definition MethodBase.h:609; TM",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodBase_8h_source.html:61595,avail,available,61595,doc/master/MethodBase_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodBase_8h_source.html,1,['avail'],['available']
Availability,"::HandleMotion ; (; Event_t * ; event). overridevirtual . Handle mouse motion events. ; Reimplemented from TGCompositeFrame.; Reimplemented in TGLBContainer, TGListTree, and TTVLVContainer.; Definition at line 1141 of file TGCanvas.cxx. ◆ Home(). void TGContainer::Home ; (; Bool_t ; select = kFALSE). virtual . Move to upper-left corner of container. ; Reimplemented in TGListTree.; Definition at line 2071 of file TGCanvas.cxx. ◆ InvertSelection(). void TGContainer::InvertSelection ; (; ). virtual . Invert the selection, all selected items become unselected and vice versa. ; Definition at line 614 of file TGCanvas.cxx. ◆ IsA(). TClass * TGContainer::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGCompositeFrame.; Reimplemented in TGFileContainer, TGLBContainer, TGListTree, and TGLVContainer.; Definition at line 154 of file TGCanvas.h. ◆ KeyPressed(). void TGContainer::KeyPressed ; (; TGFrame * ; frame, . UInt_t ; keysym, . UInt_t ; mask . ). virtual . Signal emitted when keyboard key pressed. ; frame - activated frame keysym - defined in ""KeySymbols.h"" mask - modifier key mask, defined in ""GuiTypes.h""; const Mask_t kKeyShiftMask = BIT(0); const Mask_t kKeyLockMask = BIT(1); const Mask_t kKeyControlMask = BIT(2); const Mask_t kKeyMod1Mask = BIT(3); // typically the Alt key const Mask_t kButton1Mask = BIT(8); const Mask_t kButton2Mask = BIT(9); const Mask_t kButton3Mask = BIT(10); const Mask_t kButton4Mask = BIT(11); const Mask_t kButton5Mask = BIT(12); const Mask_t kAnyModifier = BIT(15); ; Reimplemented in TGListTree.; Definition at line 470 of file TGCanvas.cxx. ◆ Layout(). void TGContainer::Layout ; (; ). overridevirtual . Layout container entries. ; Reimplemented from TGCompositeFrame.; Reimplemented in TGLBContainer, and TGListTree.; Definition at line 422 of file TGCanvas.cxx. ◆ LineDown(). void TGContainer::LineDown ; (; Bool_t ; select = kFALSE). virtual . Move one line down. ; Reimplemented in TGListTre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGContainer.html:47723,mask,mask,47723,doc/master/classTGContainer.html,https://root.cern,https://root.cern/doc/master/classTGContainer.html,1,['mask'],['mask']
Availability,"::INFO@ INFODefinition RooGlobalFunc.h:60; RooFit::MPSplitMPSplitDefinition RooGlobalFunc.h:65; RooFit::FastEvaluations@ FastEvaluationsDefinition RooGlobalFunc.h:64; RooFit::makeOwningPtrOwningPtr< T > makeOwningPtr(std::unique_ptr< T > &&ptr)Internal helper to turn a std::unique_ptr<T> into an OwningPtr.Definition Config.h:40; RooFit::OwningPtrT * OwningPtrAn alias for raw pointers for indicating that the return type of a RooFit function is an owning point...Definition Config.h:35; RooHelpers::selectFromArgSetRooArgSet selectFromArgSet(RooArgSet const &, std::string const &names); RooHelpers::checkIfRangesOverlapbool checkIfRangesOverlap(RooArgSet const &observables, std::vector< std::string > const &rangeNames); RooHelpers::getColonSeparatedNameStringstd::string getColonSeparatedNameString(RooArgSet const &argSet, char delim=':'); TMVA_SOFIE_GNN.outoutDefinition TMVA_SOFIE_GNN.py:203; TMath::IsNaNBool_t IsNaN(Double_t x)Definition TMath.h:892; TMath::ErfcDouble_t Erfc(Double_t x)Computes the complementary error function erfc(x).Definition TMath.cxx:199; graphDefinition graph.py:1; RooAbsReal::GlobalSelectComponentRAIIDefinition RooAbsReal.h:508; RooAbsReal::PlotOptDefinition RooAbsReal.h:463; RooAbsReal::PlotOpt::wmodeRooCurve::WingMode wmodeDefinition RooAbsReal.h:477; RooAbsReal::PlotOpt::normRangeNameconst char * normRangeNameDefinition RooAbsReal.h:473; RooAbsReal::PlotOpt::scaleFactordouble scaleFactorDefinition RooAbsReal.h:465; RooAbsReal::PlotOpt::precisiondouble precisionDefinition RooAbsReal.h:470; RooAbsReal::PlotOpt::addToWgtOtherdouble addToWgtOtherDefinition RooAbsReal.h:483; RooAbsReal::PlotOpt::interleaveRooFit::MPSplit interleaveDefinition RooAbsReal.h:485; RooAbsReal::PlotOpt::projectionRangeNameconst char * projectionRangeNameDefinition RooAbsReal.h:478; RooAbsReal::PlotOpt::eevaldouble eevalDefinition RooAbsReal.h:488; RooAbsReal::PlotOpt::progressbool progressDefinition RooAbsReal.h:490; RooAbsReal::PlotOpt::doeevalbool doeevalDefinition RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:258322,error,error,258322,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['error']
Availability,::InitArrays(Int_t newsize); voidTObject::MakeZombie(). private:. TEveSelectorToEventList(const TEveSelectorToEventList&); TEveSelectorToEventList&operator=(const TEveSelectorToEventList&). Data Members; public:. enum TSelectorDraw::[unnamed] { kWarn; };; enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortTSelector::fAbortabort status; Int_tTSelectorDraw::fAction! Action type; Bool_tTSelectorDraw::fCleanElisttrue if original Tree elist must be saved; Int_tTSelectorDraw::fDimensionDimension of the current expression; Long64_tTSelectorDraw::fDraw! Last entry loop number when object was drawn; TEventList*fEvList; Int_tTSelectorDraw::fForceReadForce Read flag; TListfInput; TList*TSelector::fInputlist of objects available during processing; TTreeFormulaManager*TSelectorDraw::fManagerPointer to the formula manager; Int_tTSelectorDraw::fMultiplicityIndicator of the variability of the size of entries; Int_t*TSelectorDraw::fNbins![fDimension] Number of bins per dimension; Int_tTSelectorDraw::fNfill! Total number of histogram fills; Bool_tTSelectorDraw::fObjEvaltrue if fVar1 returns an object (or pointer to).; TObject*TSelector::fObjectcurrent object if processing object (vs. TTree); Long64_tTSelectorDraw::fOldEstimatevalue of Tree fEstimate when selector is called; TH1*TSelectorDraw::fOldHistogram! Pointer to previously used histogram; TStringTSelector::fOptionoption given to TTree::Process; TSelectorList*TSelector::fOutputlist of objects created during processing; TTreeFormula*TSelectorDraw::fSelectPointer to selection formula; Bool_tTSelectorDraw::fSelectMultipletrue if selection has a variable index; Long64_tTSelectorDraw::fSelectedRowsNumber of selected entries; Long64_tTSelector,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveSelectorToEventList.html:8392,avail,available,8392,root/html528/TEveSelectorToEventList.html,https://root.cern,https://root.cern/root/html528/TEveSelectorToEventList.html,2,['avail'],['available']
Availability,"::IntRndmunsigned long IntRndm() constGenerate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than ...Definition GSLRndmEngines.h:133; ROOT::Math::GSLRandomEngine::Terminatevoid Terminate()delete pointer to contained rngDefinition GSLRndmEngines.cxx:131; ROOT::Math::GSLRandomEngine::GaussianNDvoid GaussianND(size_t dim, const double *pars, const double *covmat, double *genpars, double *lmat=nullptr) constMultivariate Gaussian distribution.Definition GSLRndmEngines.cxx:241; ROOT::Math::GSLRandomEngine::Namestd::string Name() constreturn name of generatorDefinition GSLRndmEngines.cxx:191; ROOT::Math::GSLRandomEngine::GaussianRatiodouble GaussianRatio(double sigma) constGaussian distribution - Ratio method.Definition GSLRndmEngines.cxx:221; ROOT::Math::GSLRandomEngine::Logisticdouble Logistic(double a) constLogistic distribution.Definition GSLRndmEngines.cxx:336; ROOT::Math::GSLRandomEngine::RndmIntunsigned long RndmInt(unsigned long max) constGenerate an integer number between [0,max-1] (including 0 and max-1) if max is larger than available ...Definition GSLRndmEngines.cxx:147; ROOT::Math::GSLRandomEngine::SetTypevoid SetType(GSLRngWrapper *r)internal method used by the derived class to set the type of generatorsDefinition GSLRndmEngines.h:315; ROOT::Math::GSLRandomEngine::Initializevoid Initialize()initialize the generator If no rng is present the default one based on Mersenne and Twister is create...Definition GSLRndmEngines.cxx:124; ROOT::Math::GSLRandomEngine::tDistdouble tDist(double nu) constt student distributionDefinition GSLRndmEngines.cxx:324; ROOT::Math::GSLRandomEngine::operator=GSLRandomEngine & operator=(const GSLRandomEngine &eng)Assignment operator : make a deep copy of the contained GSL generator.Definition GSLRndmEngines.cxx:113; ROOT::Math::GSLRandomEngine::Rndmdouble Rndm() constGenerate a random number between ]0,1] 0 is excluded and 1 is included.Definition GSLRndmEngines.h:120; ROOT::Math::GSLRandomEngine:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/GSLRndmEngines_8h_source.html:21992,avail,available,21992,doc/master/GSLRndmEngines_8h_source.html,https://root.cern,https://root.cern/doc/master/GSLRndmEngines_8h_source.html,1,['avail'],['available']
Availability,"::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; voidItemBelowMouse(TGListTreeItem* entry, UInt_t mask); voidItemClicked(TGListTreeItem* entry, Int_t btn, UInt_t mask, Int_t x, Int_t y); voidItemDblClicked(TGListTreeItem* item, Int_t btn); voidItemKeyPress(TGListTreeItem* entry, UInt_t keysym, UInt_t mask); virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGListTreeEditorFrame.html:10978,mask,mask,10978,root/html528/TEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/root/html528/TEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability,"::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; voidItemBelowMouse(TGListTreeItem* entry, UInt_t mask); voidItemClicked(TGListTreeItem* entry, Int_t btn, UInt_t mask, Int_t x, Int_t y); voidItemDblClicked(TGListTreeItem* item, Int_t btn); voidItemKeyPress(TGListTreeItem* entry, UInt_t keysym, UInt_t mask); virtual voidTGCompositeFrame::Layout(); static voidTQObject::LoadRQ_OBJECT(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveGListTreeEditorFrame.html:10978,mask,mask,10978,root/html530/TEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/root/html530/TEveGListTreeEditorFrame.html,3,['mask'],['mask']
Availability,"::IsArranged(TGFrame* f) const; Bool_tTGCompositeFrame::IsArranged(TGFrameElement* ptr) const; virtual Bool_tTGCompositeFrame::IsComposite() const; Bool_tTGFrame::IsDNDSource() const; Bool_tTGFrame::IsDNDTarget() const; virtual Bool_tTGCompositeFrame::IsEditable() const; virtual Bool_tTGObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; virtual Bool_tTGCompositeFrame::IsLayoutBroken() const; virtual Bool_tTGWindow::IsMapped(); virtual Bool_tTGCompositeFrame::IsMapSubwindows() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTObject::IsSortable() const; Bool_tTGCompositeFrame::IsVisible(TGFrame* f) const; Bool_tTGCompositeFrame::IsVisible(TGFrameElement* ptr) const; Bool_tTObject::IsZombie() const; voidItemBelowMouse(TGListTreeItem* entry, UInt_t mask); voidItemClicked(TGListTreeItem* entry, Int_t btn, UInt_t mask, Int_t x, Int_t y); voidItemDblClicked(TGListTreeItem* item, Int_t btn); voidItemKeyPress(TGListTreeItem* entry, UInt_t keysym, UInt_t mask); virtual voidTGCompositeFrame::Layout(); virtual voidTGWindow::LowerWindow(); virtual voidTQObject::LowPriority(const char* signal_name, const char* slot_name = 0); virtual voidTObject::ls(Option_t* option = """") const; virtual voidTGFrame::MapRaised(); virtual voidTGCompositeFrame::MapSubwindows(); virtual voidTGFrame::MapWindow(); voidTObject::MayNotUse(const char* method) const; virtual voidTQObject::Message(const char* msg)SIGNAL ; virtual voidTGFrame::Move(Int_t x, Int_t y); virtual voidTGFrame::MoveResize(Int_t x, Int_t y, UInt_t w = 0, UInt_t h = 0); virtual Int_tTGCompositeFrame::MustCleanup() const; virtual Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveGListTreeEditorFrame.html:10891,mask,mask,10891,root/html602/TEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/root/html602/TEveGListTreeEditorFrame.html,2,['mask'],['mask']
Availability,"::IsWorker ; (; ); const. inline . Definition at line 105 of file TProofLog.h. ◆ Print(). void TProofLogElem::Print ; (; Option_t * ; opt = 0); const. overridevirtual . Print a line with the relevant info. ; Reimplemented from TNamed.; Definition at line 536 of file TProofLog.cxx. ◆ Prt(). void TProofLogElem::Prt ; (; const char * ; what). Special printing procedure. ; Definition at line 548 of file TProofLog.cxx. ◆ Retrieve(). Int_t TProofLogElem::Retrieve ; (; TProofLog::ERetrieveOpt ; opt = TProofLog::kTrailing, . const char * ; pattern = 0 . ). Retrieve the content of the associated file. ; The approximate number of lines to be retrieved is given by 'lines', with the convention that 0 means 'all', a positive number means the first 'lines' and a negative number means the last '-lines'. Default is -1000. If opt == TProofLog::kGrep only the lines containing 'pattern' are retrieved (remote grep functionality); to filter out a pattern 'pat' use pattern = ""-v pat"". Return 0 on success, -1 in case of any error. ; Definition at line 374 of file TProofLog.cxx. ◆ SetMaxTransferSize(). void TProofLogElem::SetMaxTransferSize ; (; Long64_t ; maxsz). static . Set max transfer size. ; Definition at line 359 of file TProofLog.cxx. ◆ Streamer(). void TProofLogElem::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed. ◆ StreamerNVirtual(). void TProofLogElem::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 114 of file TProofLog.h. Member Data Documentation. ◆ fFrom. Long64_t TProofLogElem::fFrom. private . Definition at line 85 of file TProofLog.h. ◆ fgMaxTransferSize. Long64_t TProofLogElem::fgMaxTransferSize = 100000. staticprivate . Definition at line 89 of file TProofLog.h. ◆ fLogger. TProofLog* TProofLogElem::fLogger. private . Definition at line 82 of file TProofLog.h. ◆ fMacro. TMacro* TProofLogElem::fMacro. private . Definition at line 83 of file TProofLog.h. ◆ fRole.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLogElem.html:15772,error,error,15772,doc/master/classTProofLogElem.html,https://root.cern,https://root.cern/doc/master/classTProofLogElem.html,1,['error'],['error']
Availability,::Log() const; Bool_tTMVA::Configurable::LooseOptionCheckingEnabled() const; voidTObject::MakeZombie(); voidTMVA::Configurable::ResetSetFlag(); voidTMVA::Configurable::WriteOptionsReferenceToFile(). private:. virtual voidDeclareOptions(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTMVA::FitterBase::fClassNameremove TMVA:: from TObject name; TMVA::IFitterTarget&TMVA::FitterBase::fFitterTargetpointer to target of fitting procedure; TMVA::MsgLogger*TMVA::FitterBase::fLoggermessage logger; TMVA::MinuitWrapper*fMinWrapholds a wrapper around TMinuit; Int_tTMVA::FitterBase::fNparsnumber of parameters; const vector<TMVA::Interval*>TMVA::FitterBase::fRangesallowed intervals. private:. Bool_tfBatchbatch mode; Int_tfErrorLevelminuit error level; Int_tfFitStrategyminuit strategy level; Int_tfMaxCalls(approximate) maximum number of function calls; Int_tfPrintLevelminuit printout level; Bool_tfPrintWarningsminuit warnings level; Double_tfTolerancetolerance to the function value at the minimum; Bool_tfUseImproveflag for 'IMPROVE' use; Bool_tfUseMinosflag for 'MINOS' use. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~MinuitFitter(); destructor. void DeclareOptions(); declare SA options. void Init(); minuit-specific settings. Double_t Run(vector<Double_t>& pars); performs the fit. Double_t EstimatorFunction(vector<Double_t>& pars); performs the fit by calliung Run(pars). » Author: Andreas Hoecker » Copyright (c) 2005: *; » Last changed: root/tmva $Id: MinuitFitter.h 40005 2011-06-27 15:29:10Z stelzer $ » Last generated: 2011-11-03 20:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__MinuitFitter.html:7237,error,error,7237,root/html532/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html532/TMVA__MinuitFitter.html,1,['error'],['error']
Availability,"::MatRepSym) which contains only the N*(N+1)/2 independent element of a NxN symmetric matrix. It is not in the mandate of this package to provide a complete linear algebra functionality for these classes. What is provided are basic Matrix Template Functions and Vector Template Functions, such as the matrix-matrix, matrix-vector, vector-vector operations, plus some extra functionality for square matrices, like inversion, which is based on the optimized Cramer method for squared matrices of size up to 6x6, and determinant calculation. For a more detailed descriptions and usage examples see:. SVector Class Properties; SMatrix Class Properties; Matrix and Vector Operators and Functions. The SMatrix package contains only header files. Normally one does not need to build any library. In the ROOT distribution a library, libSmatrix is produced with the C++ dictionary information for vectors, symmetric and squared matrices for double, float types up to dimension 7. The current version of SMatrix can be downloaded from here. If you want to install the header files or run the test configure script and then make install or make check to build the tests. No dictionary library is built in this case. References. T. Veldhuizen, Expression Templates, C++ Report, 1995.; T. Glebe, SMatrix - A high performance library for Vector/Matrix calculation and Vertexing, HERA-B Software Note 01-134, December 2, 2003 (pdf); L. Moneta, ROOT Math proposal for Linear Algebra, presentation at the LCG Application Area meeting, November 23, 2005. Authorsthe ROOT Math Library Team, T. Glebe (original SMatrix author) and J. Palacios (LHCb) . Modules;  Expression Template Classes;  ;  Generic Template Functions;  These functions apply for any type T, such as a scalar, a vector or a matrix. ;  ;  Vector Template Functions;  These functions apply to SVector types (and also to Vector expressions) and can return a vector expression or a scalar, like in the Dot product, or a matrix, like in the Tensor product",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__SMatrixGroup.html:2573,down,downloaded,2573,doc/master/group__SMatrixGroup.html,https://root.cern,https://root.cern/doc/master/group__SMatrixGroup.html,1,['down'],['downloaded']
Availability,"::Math::Minimizer> fMinimizer; ///<! minimizer object used for fitting; 354 std::shared_ptr<ROOT::Math::IMultiGenFunction> fObjFunc; ///<! objective function used for fitting; 355 std::shared_ptr<IModelFunction> fFitFunc; ///<! model function resulting from the fit.; 356 std::shared_ptr<FitData> fFitData; ///<! data set used in the fit; 357 std::map<unsigned int, bool> fFixedParams; ///< list of fixed parameters; 358 std::map<unsigned int, unsigned int> fBoundParams; ///< list of limited parameters; 359 std::vector<std::pair<double,double> > fParamBounds; ///< parameter bounds; 360 std::vector<double> fParams; ///< parameter values. Size is total number of parameters; 361 std::vector<double> fErrors; ///< errors; 362 std::vector<double> fCovMatrix; ///< covariance matrix (size is npar*(npar+1)/2) where npar is total parameters; 363 std::vector<double> fGlobalCC; ///< global Correlation coefficient; 364 std::map<unsigned int, std::pair<double,double> > fMinosErrors; ///< map contains the two Minos errors; 365 std::string fMinimType; ///< string indicating type of minimizer; 366 std::vector<std::string> fParNames; ///< parameter names (only with FCN only fits, when fFitFunc=0); 367 ; 368};; 369 ; 370 ; 371 } // end namespace Fit; 372 ; 373} // end namespace ROOT; 374 ; 375 ; 376 ; 377 ; 378 ; 379#endif /* ROOT_Fit_FitResult */; IFunctionfwd.h; IParamFunctionfwd.h; f#define f(i)Definition RSha256.hxx:104; dataOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void dataDefinition TGWin32VirtualXProxy.cxx:104; namechar name[80]Definition TGX11.cxx:110; xminfloat xminDefinition THbookFile.cxx:95; xmaxfloat xmaxDefinition THbookFile.cxx:95; ROOT::Fit::BinDataClass describing the binned data sets : vectors of x coordinates, y values and optionally error on y ...Definition BinData.h:52; ROOT::Fit::FitConfigClass describing the configuration of the fit, options and parameter se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:14947,error,errors,14947,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,2,['error'],['errors']
Availability,"::Minuit2::ModularFunctionMinimizer. Instantiates the SeedGenerator and MinimumBuilder for; Variable Metric Minimization method.; API is provided in the upper ROOT::Minuit2::ModularFunctionMinimizer class. Function Members (Methods); public:. virtual~VariableMetricMinimizer(); virtual const ROOT::Minuit2::MinimumBuilder&Builder() const; virtual ROOT::Minuit2::MinimumBuilder&Builder(); virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__VariableMetricMinimizer.html:1464,toler,toler,1464,root/html534/ROOT__Minuit2__VariableMetricMinimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__VariableMetricMinimizer.html,1,['toler'],['toler']
Availability,"::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__CombinedMinimizer.html:2927,toler,toler,2927,root/html602/ROOT__Minuit2__CombinedMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__CombinedMinimizer.html,8,['toler'],['toler']
Availability,"::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); Bool_tRemoveRootProxy(); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetDragPixmap(Pixmap_t pic, Pixmap_t mask, Int_t hot_x, Int_t hot_y); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetMainFrame(TGFrame* main); static voidTObject::SetObjectStat(Bool_t stat); Bool_tSetRootProxy(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); Bool_tStartDrag(TGFrame* src, Int_t x_root, Int_t y_root, Window_t grabWin = kNone); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGDNDManager.html:4902,mask,mask,4902,root/html530/TGDNDManager.html,https://root.cern,https://root.cern/root/html530/TGDNDManager.html,2,['mask'],['mask']
Availability,"::PtEtaPhiE4D<Double32_t> >::Scalarenergy() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::ScalarEt() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::ScalarEt2() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::ScalarEta() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalareta() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::ScalarGamma() const; voidGetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar* dest) const; voidGetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& a, ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& b, ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& c, ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& d) const; boolisLightlike(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar tolerance = 100*std::numeric_limits<Scalar>::epsilon()) const; boolisSpacelike() const; boolisTimelike() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >(); ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >(const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >&); ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >(const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& a, const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& b, const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& c, const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::Scalar& d); ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t> >::ScalarM() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiE4D<Double32_t>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__LorentzVector_-p1PtEtaPhiE4D_Double32_t___.html:2614,toler,tolerance,2614,root/html526/ROOT__Math__LorentzVector_-p1PtEtaPhiE4D_Double32_t___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__LorentzVector_-p1PtEtaPhiE4D_Double32_t___.html,5,['toler'],['tolerance']
Availability,"::PtEtaPhiM4D<Double32_t> >::Scalarenergy() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::ScalarEt() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::ScalarEt2() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::ScalarEta() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalareta() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::ScalarGamma() const; voidGetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar* dest) const; voidGetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& a, ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& b, ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& c, ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& d) const; boolisLightlike(ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar tolerance = 100*std::numeric_limits<Scalar>::epsilon()) const; boolisSpacelike() const; boolisTimelike() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >(); ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >(const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >&); ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >(const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& a, const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& b, const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& c, const ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::Scalar& d); ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t> >::ScalarM() const; ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__LorentzVector_-p1PtEtaPhiM4D_Double32_t___.html:2614,toler,tolerance,2614,root/html526/ROOT__Math__LorentzVector_-p1PtEtaPhiM4D_Double32_t___.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__LorentzVector_-p1PtEtaPhiM4D_Double32_t___.html,5,['toler'],['tolerance']
Availability,"::RDF::CreateLMFromFile(treeName, fileNameGlob, defaultColumns)); 1588{; 1589}; 1590#else; 1591RDataFrame::RDataFrame(std::string_view treeName, std::string_view fileNameGlob, const ColumnNames_t &defaultColumns); 1592 : RInterface(ROOT::Detail::RDF::CreateLMFromTTree(treeName, fileNameGlob, defaultColumns)); 1593{; 1594}; 1595#endif; 1596 ; 1597////////////////////////////////////////////////////////////////////////////; 1598/// \brief Build the dataframe.; 1599/// \param[in] treeName Name of the tree contained in the directory; 1600/// \param[in] fileglobs Collection of file names of filename globs; 1601/// \param[in] defaultColumns Collection of default columns.; 1602///; 1603/// The filename globs support the same type of expressions as TChain::Add(), and each glob is passed as-is; 1604/// to TChain's constructor.; 1605///; 1606/// The default columns are looked at in case no column is specified in the booking of actions or transformations.; 1607/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1608#ifdef R__HAS_ROOT7; 1609RDataFrame::RDataFrame(std::string_view datasetName, const std::vector<std::string> &fileNameGlobs,; 1610 const ColumnNames_t &defaultColumns); 1611 : RInterface(ROOT::Detail::RDF::CreateLMFromFile(datasetName, fileNameGlobs, defaultColumns)); 1612{; 1613}; 1614#else; 1615RDataFrame::RDataFrame(std::string_view datasetName, const std::vector<std::string> &fileNameGlobs,; 1616 const ColumnNames_t &defaultColumns); 1617 : RInterface(ROOT::Detail::RDF::CreateLMFromTTree(datasetName, fileNameGlobs, defaultColumns)); 1618{; 1619}; 1620#endif; 1621 ; 1622////////////////////////////////////////////////////////////////////////////; 1623/// \brief Build the dataframe.; 1624/// \param[in] tree The tree or chain to be studied.; 1625/// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; 1626///; 1627/// The default columns are looked at in case no column is specified in the;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:90396,avail,available,90396,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['avail'],['available']
Availability,"::RDF::CreateLMFromFile(treeName, fileNameGlob, defaultColumns)); 1765{; 1766}; 1767#else; 1768RDataFrame::RDataFrame(std::string_view treeName, std::string_view fileNameGlob, const ColumnNames_t &defaultColumns); 1769 : RInterface(ROOT::Detail::RDF::CreateLMFromTTree(treeName, fileNameGlob, defaultColumns)); 1770{; 1771}; 1772#endif; 1773 ; 1774////////////////////////////////////////////////////////////////////////////; 1775/// \brief Build the dataframe.; 1776/// \param[in] treeName Name of the tree contained in the directory; 1777/// \param[in] fileglobs Collection of file names of filename globs; 1778/// \param[in] defaultColumns Collection of default columns.; 1779///; 1780/// The filename globs support the same type of expressions as TChain::Add(), and each glob is passed as-is; 1781/// to TChain's constructor.; 1782///; 1783/// The default columns are looked at in case no column is specified in the booking of actions or transformations.; 1784/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1785#ifdef R__HAS_ROOT7; 1786RDataFrame::RDataFrame(std::string_view datasetName, const std::vector<std::string> &fileNameGlobs,; 1787 const ColumnNames_t &defaultColumns); 1788 : RInterface(ROOT::Detail::RDF::CreateLMFromFile(datasetName, fileNameGlobs, defaultColumns)); 1789{; 1790}; 1791#else; 1792RDataFrame::RDataFrame(std::string_view datasetName, const std::vector<std::string> &fileNameGlobs,; 1793 const ColumnNames_t &defaultColumns); 1794 : RInterface(ROOT::Detail::RDF::CreateLMFromTTree(datasetName, fileNameGlobs, defaultColumns)); 1795{; 1796}; 1797#endif; 1798 ; 1799////////////////////////////////////////////////////////////////////////////; 1800/// \brief Build the dataframe.; 1801/// \param[in] tree The tree or chain to be studied.; 1802/// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; 1803///; 1804/// The default columns are looked at in case no column is specified in the;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:98235,avail,available,98235,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['avail'],['available']
Availability,"::RResultPtr<T>, where T is the type of the result of the action. The final result will be stored in the RResultPtr and can be retrieved by dereferencing it or via its GetValue method. Actions that return collections; If the type of the return value of an action is a collection, e.g. std::vector<int>, you can iterate its elements directly through the wrapping RResultPtr:; ROOT::RDataFrame df{5};; auto df1 = df.Define(""x"", []{ return 42; });; for (const auto &el: df1.Take<int>(""x"")){; std::cout << ""Element: "" << el << ""\n"";; }; ROOT::RDF::RInterface< RDFDetail::RLoopManager >::TakeRResultPtr< COLL > Take(std::string_view column="""")Return a collection of values of a column (lazy action, returns a std::vector by default).Definition RInterface.hxx:1592; int; df = ROOT.RDataFrame(5).Define(""x"", ""42""); for el in df.Take[int](""x""):; print(f""Element: {el}""). Actions and readers; An action that needs values for its computations will request it from a reader, e.g. a column created via Define or available from the input dataset. The action will request values from each column of the list of input columns (either inferred or specified by the user), in order. For example:; ROOT::RDataFrame df{1};; auto df1 = df.Define(""x"", []{ return 11; });; auto df2 = df1.Define(""y"", []{ return 22; });; auto graph = df2.Graph<int, int>(""x"",""y"");; graphDefinition graph.py:1; The Graph action is going to request first the value from column ""x"", then that of column ""y"". Specifically, the order of execution of the operations of nodes in this branch of the computation graph is guaranteed to be top to bottom. Distributed execution; RDataFrame applications can be executed in parallel through distributed computing frameworks on a set of remote machines thanks to the Python package ROOT.RDF.Experimental.Distributed. This experimental, Python-only package allows to scale the optimized performance RDataFrame can achieve on a single machine to multiple nodes at the same time. It is designed so that differe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html:33962,avail,available,33962,doc/v632/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1RDataFrame.html,1,['avail'],['available']
Availability,"::RResultPtr<T>, where T is the type of the result of the action. The final result will be stored in the RResultPtr and can be retrieved by dereferencing it or via its GetValue method. Actions that return collections; If the type of the return value of an action is a collection, e.g. std::vector<int>, you can iterate its elements directly through the wrapping RResultPtr:; ROOT::RDataFrame df{5};; auto df1 = df.Define(""x"", []{ return 42; });; for (const auto &el: df1.Take<int>(""x"")){; std::cout << ""Element: "" << el << ""\n"";; }; ROOT::RDF::RInterface< RDFDetail::RLoopManager >::TakeRResultPtr< COLL > Take(std::string_view column="""")Return a collection of values of a column (lazy action, returns a std::vector by default).Definition RInterface.hxx:1761; int; df = ROOT.RDataFrame(5).Define(""x"", ""42""); for el in df.Take[int](""x""):; print(f""Element: {el}""). Actions and readers; An action that needs values for its computations will request it from a reader, e.g. a column created via Define or available from the input dataset. The action will request values from each column of the list of input columns (either inferred or specified by the user), in order. For example:; ROOT::RDataFrame df{1};; auto df1 = df.Define(""x"", []{ return 11; });; auto df2 = df1.Define(""y"", []{ return 22; });; auto graph = df2.Graph<int, int>(""x"",""y"");; graphDefinition graph.py:1; The Graph action is going to request first the value from column ""x"", then that of column ""y"". Specifically, the order of execution of the operations of nodes in this branch of the computation graph is guaranteed to be top to bottom. Distributed execution; RDataFrame applications can be executed in parallel through distributed computing frameworks on a set of remote machines thanks to the Python package ROOT.RDF.Experimental.Distributed. This experimental, Python-only package allows to scale the optimized performance RDataFrame can achieve on a single machine to multiple nodes at the same time. It is designed so that differe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDataFrame.html:35384,avail,available,35384,doc/master/classROOT_1_1RDataFrame.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDataFrame.html,1,['avail'],['available']
Availability,"::RuleFitParams::GetPerfIdx1 ; (; ); const. inline . Definition at line 93 of file RuleFitParams.h. ◆ GetPerfIdx2(). UInt_t TMVA::RuleFitParams::GetPerfIdx2 ; (; ); const. inline . Definition at line 94 of file RuleFitParams.h. ◆ Init(). void TMVA::RuleFitParams::Init ; (; ). Initializes all parameters using the RuleEnsemble and the training tree. ; Definition at line 114 of file RuleFitParams.cxx. ◆ InitGD(). void TMVA::RuleFitParams::InitGD ; (; ). Initialize GD path search. ; Definition at line 373 of file RuleFitParams.cxx. ◆ InitNtuple(). void TMVA::RuleFitParams::InitNtuple ; (; ). protected . initializes the ntuple ; Definition at line 185 of file RuleFitParams.cxx. ◆ Log(). MsgLogger & TMVA::RuleFitParams::Log ; (; ); const. inlineprivate . Definition at line 254 of file RuleFitParams.h. ◆ LossFunction() [1/3]. Double_t TMVA::RuleFitParams::LossFunction ; (; const Event & ; e); const. Implementation of squared-error ramp loss function (eq 39,40 in ref 1) This is used for binary Classifications where y = {+1,-1} for (sig,bkg) ; Definition at line 278 of file RuleFitParams.cxx. ◆ LossFunction() [2/3]. Double_t TMVA::RuleFitParams::LossFunction ; (; UInt_t ; evtidx); const. Implementation of squared-error ramp loss function (eq 39,40 in ref 1) This is used for binary Classifications where y = {+1,-1} for (sig,bkg) ; Definition at line 290 of file RuleFitParams.cxx. ◆ LossFunction() [3/3]. Double_t TMVA::RuleFitParams::LossFunction ; (; UInt_t ; evtidx, . UInt_t ; itau . ); const. Implementation of squared-error ramp loss function (eq 39,40 in ref 1) This is used for binary Classifications where y = {+1,-1} for (sig,bkg) ; Definition at line 302 of file RuleFitParams.cxx. ◆ MakeGDPath(). void TMVA::RuleFitParams::MakeGDPath ; (; ). The following finds the gradient directed path in parameter space. ; More work is needed... FT, 24/9/2006; The algorithm is currently as follows (if not otherwise stated, the sample used below is [fPathIdx1,fPathIdx2]):. Set offset to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html:13704,error,error,13704,doc/master/classTMVA_1_1RuleFitParams.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html,1,['error'],['error']
Availability,"::SetBinErrorOption(TH1::EBinErrorOpt type); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); virtual voidSetBinsLength(Int_t n = -1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTH1::SetBuffer(Int_t buffersize, Option_t* option = """"); virtual UInt_tTH1::SetCanExtend(UInt_t extendBitMask); virtual voidTH1::SetCellContent(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetCellError(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetContent(const Double_t* content); virtual voidTH1::SetContour(Int_t nlevels, const Double_t* levels = 0); virtual voidTH1::SetContourLevel(Int_t level, Double_t value); static voidTH1::SetDefaultBufferSize(Int_t buffersize = 1000); static voidTH1::SetDefaultSumw2(Bool_t sumw2 = kTRUE); virtual voidTH1::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTH1::SetEntries(Double_t n); virtual voidTH1::SetError(const Double_t* error); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillColorAlpha(Color_t fcolor, Float_t falpha); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTH1::SetLabelColor(Color_t color = 1, Option_t* axis = ""X""); virtual voidTH1::SetLabelFont(Style_t font = 62, Option_t* axis = ""X""); virtual voidTH1::SetLabelOffset(Float_t offset = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1C.html:16497,error,error,16497,root/html602/TH1C.html,https://root.cern,https://root.cern/root/html602/TH1C.html,30,['error'],['error']
Availability,"::SetBinsLengthvoid SetBinsLength(Int_t n=-1) overrideSet total number of bins including under/overflow.Definition TProfile2D.cxx:1947; TProfile2D::BuildOptionsvoid BuildOptions(Double_t zmin, Double_t zmax, Option_t *option)Set Profile2D histogram structure and options.Definition TProfile2D.cxx:189; TProfile2D::AddBool_t Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overridePerforms the operation: this = this + c1*f1 .Definition TProfile2D.cxx:221; TProfile2D::operator=TProfile2D & operator=(const TProfile2D &profile)Definition TProfile2D.cxx:211; TProfile2D::SetBuffervoid SetBuffer(Int_t buffersize, Option_t *option="""") overrideSet the buffer size in units of 8 bytes (double).Definition TProfile2D.cxx:1956; TProfile2D::fTsumwz2Double_t fTsumwz2Total Sum of weight*Z*Z.Definition TProfile2D.h:40; TProfile2D::GetBinSumw2virtual TArrayD * GetBinSumw2()Definition TProfile2D.h:121; TProfile2D::GetNumberOfBinsDouble_t GetNumberOfBins()Definition TProfile2D.h:151; TProfile2D::GetBDouble_t * GetB()Definition TProfile2D.h:63; TProfile2D::SetErrorOptionvirtual void SetErrorOption(Option_t *option="""")Set option to compute profile2D errors.Definition TProfile2D.cxx:1994; TProfile2D::GetZmaxvirtual Double_t GetZmax() constDefinition TProfile2D.h:126; TProfile2D::GetZminvirtual Double_t GetZmin() constDefinition TProfile2D.h:125; TProfile2D::GetBinContentDouble_t GetBinContent(Int_t bin) const overrideReturn bin content of a Profile2D histogram.Definition TProfile2D.cxx:829; TProfileHelperDefinition TProfileHelper.h:30; TProfileProfile Histogram.Definition TProfile.h:32; bool; double; int; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; h1TH1F * h1Definition legend1.C:5; c2return c2Definition legend2.C:14; v@ vDefinition rootcling_impl.cxx:3699. histhistincTProfile2D.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8h_source.html:20440,error,errors,20440,doc/master/TProfile2D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8h_source.html,1,['error'],['errors']
Availability,"::SetMinimum(Double_t minimum = -1111)MENU ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTF1::SetNDF(Int_t ndf); virtual voidTF1::SetNpx(Int_t npx = 100)MENU ; virtual voidTF2::SetNpy(Int_t npy = 100)MENU ; virtual voidSetNpz(Int_t npz = 30); virtual voidTFormula::SetNumber(Int_t number); virtual voidTF1::SetNumberFitPoints(Int_t npfits); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTFormula::SetParameter(const char* name, Double_t parvalue); virtual voidTFormula::SetParameter(Int_t ipar, Double_t parvalue); virtual voidTFormula::SetParameters(const Double_t* params); virtual voidTFormula::SetParameters(Double_t p0, Double_t p1, Double_t p2 = 0, Double_t p3 = 0, Double_t p4 = 0, Double_t p5 = 0, Double_t p6 = 0, Double_t p7 = 0, Double_t p8 = 0, Double_t p9 = 0, Double_t p10 = 0)MENU ; virtual voidTF1::SetParent(TObject* p = 0); virtual voidTF1::SetParError(Int_t ipar, Double_t error); virtual voidTF1::SetParErrors(const Double_t* errors); virtual voidTF1::SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax); virtual voidTFormula::SetParName(Int_t ipar, const char* name); virtual voidTFormula::SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidSetRange(Double_t xmin, Double_t xmax); virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax)MENU ; virtual voidTF1::SetSavedPoint(Int_t point, Double_t value); virtual voidTF1::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF3.html:16786,error,error,16786,root/html528/TF3.html,https://root.cern,https://root.cern/root/html528/TF3.html,3,['error'],['error']
Availability,"::SetMinimum(Double_t minimum = -1111)MENU ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTF1::SetNDF(Int_t ndf); virtual voidTF1::SetNpx(Int_t npx = 100)MENU ; virtual voidTF2::SetNpy(Int_t npy = 100)MENU ; virtual voidSetNpz(Int_t npz = 30); virtual voidTFormula::SetNumber(Int_t number); virtual voidTF1::SetNumberFitPoints(Int_t npfits); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTFormula::SetParameter(const char* name, Double_t parvalue); virtual voidTFormula::SetParameter(Int_t ipar, Double_t parvalue); virtual voidTFormula::SetParameters(const Double_t* params); virtual voidTFormula::SetParameters(Double_t p0, Double_t p1, Double_t p2 = 0, Double_t p3 = 0, Double_t p4 = 0, Double_t p5 = 0, Double_t p6 = 0, Double_t p7 = 0, Double_t p8 = 0, Double_t p9 = 0, Double_t p10 = 0)MENU ; virtual voidTF1::SetParent(TObject* p = 0); virtual voidTF1::SetParError(Int_t ipar, Double_t error); virtual voidTF1::SetParErrors(const Double_t* errors); virtual voidTF1::SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax); virtual voidTFormula::SetParName(Int_t ipar, const char* name); virtual voidTFormula::SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidSetRange(Double_t xmin, Double_t xmax); virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax)MENU ; virtual voidTF1::SetSavedPoint(Int_t point, Double_t value); virtual voidTF1::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual Int_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TF3.html:17308,error,error,17308,root/html534/TF3.html,https://root.cern,https://root.cern/root/html534/TF3.html,1,['error'],['error']
Availability,"::SetParameters ; (; double ; p0, . double ; p1 = TMath::QuietNaN(), . double ; p2 = TMath::QuietNaN(), . double ; p3 = TMath::QuietNaN(), . double ; p4 = TMath::QuietNaN(), . double ; p5 = TMath::QuietNaN(), . double ; p6 = TMath::QuietNaN(), . double ; p7 = TMath::QuietNaN(), . double ; p8 = TMath::QuietNaN(), . double ; p9 = TMath::QuietNaN(), . double ; p10 = TMath::QuietNaN() . ). inlinevirtual . Set parameter values. ; NaN values will be skipped, meaning that the corresponding parameters will not be changed. ; Definition at line 684 of file TF1.h. ◆ SetParent(). virtual void TF1::SetParent ; (; TObject * ; p = nullptr). inlinevirtual . Definition at line 706 of file TF1.h. ◆ SetParError(). void TF1::SetParError ; (; Int_t ; ipar, . Double_t ; error . ). virtual . Set error for parameter number ipar. ; Definition at line 3479 of file TF1.cxx. ◆ SetParErrors(). void TF1::SetParErrors ; (; const Double_t * ; errors). virtual . Set errors for all active parameters when calling this function, the array errors must have at least fNpar values. ; Definition at line 3490 of file TF1.cxx. ◆ SetParLimits(). void TF1::SetParLimits ; (; Int_t ; ipar, . Double_t ; parmin, . Double_t ; parmax . ). virtual . Set lower and upper limits for parameter ipar. ; The specified limits will be used in a fit operation. Note that when this function is a pre-defined function (e.g. gaus) one needs to use the fit option ""B"" to have the limits used in the fit. See TH1::Fit(TF1*, Option_t *, Option_t *, Double_t, Double_t) for the fitting documentation and the fitting options; To fix a parameter, use TF1::FixParameter ; Definition at line 3507 of file TF1.cxx. ◆ SetParName(). void TF1::SetParName ; (; Int_t ; ipar, . const char * ; name . ). virtual . Set name of parameter number ipar. ; Definition at line 3450 of file TF1.cxx. ◆ SetParNames(). void TF1::SetParNames ; (; const char * ; name0 = """", . const char * ; name1 = """", . const char * ; name2 = """", . const char * ; name3 = """", . const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:112967,error,errors,112967,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,2,['error'],['errors']
Availability,"::SetStatevirtual void SetState(EButtonState state, Bool_t emit=kFALSE)Set button state.Definition TGButton.cxx:235; TGCanvasA frame containing two scrollbars (a horizontal and a vertical) and a viewport.Definition TGCanvas.h:192; TGCanvas::SetContainervirtual void SetContainer(TGFrame *f)Definition TGCanvas.h:222; TGCanvas::GetViewPortTGViewPort * GetViewPort() constDefinition TGCanvas.h:217; TGCheckButtonSelects different options.Definition TGButton.h:264; TGCheckButton::SetStatevoid SetState(EButtonState state, Bool_t emit=kFALSE) overrideSet check button state.Definition TGButton.cxx:1250; TGClient::GetRootconst TGWindow * GetRoot() constReturns current root (i.e.Definition TGClient.cxx:224; TGClient::GetPictureconst TGPicture * GetPicture(const char *name)Get picture from the picture pool.Definition TGClient.cxx:289; TGClient::NeedRedrawvoid NeedRedraw(TGWindow *w, Bool_t force=kFALSE)Set redraw flags.Definition TGClient.cxx:372; TGComboBoxA combobox (also known as a drop down listbox) allows the selection of one item out of a list of item...Definition TGComboBox.h:47; TGComboBox::AddEntryvirtual void AddEntry(TGString *s, Int_t id)Definition TGComboBox.h:86; TGComboBox::RemoveEntriesvirtual void RemoveEntries(Int_t from_ID, Int_t to_ID)Definition TGComboBox.h:105; TGComboBox::Selectvirtual void Select(Int_t id, Bool_t emit=kTRUE)Make the selected item visible in the combo box window and emit signals according to the second param...Definition TGComboBox.cxx:456; TGCompositeFrameThe base class for composite widgets (menu bars, list boxes, etc.).Definition TGFrame.h:287; TGCompositeFrame::GetDefaultSizeTGDimension GetDefaultSize() const overridestd::cout << fWidth << ""x"" << fHeight << std::endl;Definition TGFrame.h:316; TGCompositeFrame::AddFramevirtual void AddFrame(TGFrame *f, TGLayoutHints *l=nullptr)Add frame to the composite frame using the specified layout hints.Definition TGFrame.cxx:1117; TGCompositeFrame::GetDefaultWidthUInt_t GetDefaultWidth() const over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreeViewer_8cxx_source.html:118215,down,down,118215,doc/master/TTreeViewer_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreeViewer_8cxx_source.html,1,['down'],['down']
Availability,"::ShowPeaks(Double_t sigma, Option_t *option, Double_t threshold); 2696{; 2697 ; 2698 return (Int_t)gROOT->ProcessLineFast(TString::Format(""TSpectrum2::StaticSearch((TH1*)0x%zx,%g,\""%s\"",%g)"",; 2699 (size_t)this, sigma, option, threshold).Data());; 2700}; 2701 ; 2702 ; 2703////////////////////////////////////////////////////////////////////////////////; 2704/// Smooth bin contents of this 2-d histogram using kernel algorithms; 2705/// similar to the ones used in the raster graphics community.; 2706/// Bin contents in the active range are replaced by their smooth values.; 2707/// The algorithm retains the input dimension by using Kernel Crop at the input boundaries.; 2708/// Kernel Crop sets any pixel in the kernel that extends past the input to zero and adjusts the; 2709/// normalization accordingly.; 2710/// If Errors are defined via Sumw2, they are also scaled and computed.; 2711/// However, note the resulting errors will be correlated between different-bins, so; 2712/// the errors should not be used blindly to perform any calculation involving several bins,; 2713/// like fitting the histogram. One would need to compute also the bin by bin correlation matrix.; 2714///; 2715/// 3 kernels are proposed k5a, k5b and k3a.; 2716/// k5a and k5b act on 5x5 cells (i-2,i-1,i,i+1,i+2, and same for j); 2717/// k5b is a bit more stronger in smoothing; 2718/// k3a acts only on 3x3 cells (i-1,i,i+1, and same for j).; 2719/// By default the kernel ""k5a"" is used. You can select the kernels ""k5b"" or ""k3a""; 2720/// via the option argument.; 2721/// If TAxis::SetRange has been called on the x or/and y axis, only the bins; 2722/// in the specified range are smoothed.; 2723/// In the current implementation if the first argument is not used (default value=1).; 2724///; 2725/// implementation by David McKee (dmckee@bama.ua.edu). Extended by Rene Brun; 2726 ; 2727void TH2::Smooth(Int_t ntimes, Option_t *option); 2728{; 2729 Double_t k5a[5][5] = { { 0, 0, 1, 0, 0 },; 2730 { 0, 2, 2, 2, 0 },",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:111118,error,errors,111118,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,2,['error'],['errors']
Availability,"::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; RooArgSetRooAbsDataStore::_cachedVars; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsDataStore::_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooVectorDataStore*_cache! Optimization cache; RooAbsArg*_cacheOwner! Cache owner; vector<CatVector*>_catStoreList; Double_t_curWgtWeight of current event; Double_t_curWgtErrWeight of current event; Double_t_curWgtErrHiWeight of current event; Double_t_curWgtErrLoWeight of current event; Double_t*_extSumW2Array! External sum of weights array; Double_t*_extWgtArray! External weight array; Double_t*_extWgtErrHiArray! External weight array - high error; Double_t*_extWgtErrLoArray! External weight array - low error; RooVectorDataStore::CatVector**_firstCat! do not persist; RooVectorDataStore::RealVector**_firstReal! do not persist; RooVectorDataStore::RealFullVector**_firstRealF! do not persist; Int_t_nCat; Int_t_nEntries; Int_t_nReal; Int_t_nRealF; vector<RealVector*>_realStoreList; vector<RealFullVector*>_realfStoreList; Double_t_sumWeight; RooArgSet_varsww; RooRealVar*_wgtVarPointer to weight variable (if set). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooVectorDataStore(). RooVectorDataStore(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0). void setAllBuffersNative(). RooArgSet varsNoWeight(const RooArgSet& allVars, const char* wgtName); Utility function for constructors; Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. RooRealVar* weightVar(const RooArgSet& allVars, const char* wgtName); Utility function for cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooVectorDataStore.html:10901,error,error,10901,root/html532/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html532/RooVectorDataStore.html,2,['error'],['error']
Availability,"::Sumw2() must be called before filling the profile with weights. Only by calling this method the sum of the square of the weights per bin is stored. ; Definition at line 853 of file TProfile.cxx. ◆ GetBinEntries(). Double_t TProfile::GetBinEntries ; (; Int_t ; bin); const. virtual . Return bin entries of a Profile histogram. ; Definition at line 837 of file TProfile.cxx. ◆ GetBinError() [1/3]. Double_t TProfile::GetBinError ; (; Int_t ; bin); const. overridevirtual . Return bin error of a Profile histogram. ; Computing errors: A moving field; The computation of errors for a TProfile has evolved with the versions of ROOT. The difficulty is in computing errors for bins with low statistics. prior to version 3.00, we had no special treatment of low statistic bins. As a result, these bins had huge errors. The reason is that the expression eprim2 is very close to 0 (rounding problems) or 0.; in version 3.00 (18 Dec 2000), the algorithm is protected for values of eprim2 very small and the bin errors set to the average bin errors, following recommendations from a group of users.; in version 3.01 (19 Apr 2001), it is realized that the algorithm above should be applied only to low statistic bins.; in version 3.02 (26 Sep 2001), the same group of users recommend instead to take two times the average error on all bins for these low statistics bins giving a very small value for eprim2.; in version 3.04 (Nov 2002), the algorithm is modified/protected for the case when a TProfile is projected (ProjectionX). The previous algorithm generated a N^2 problem when projecting a TProfile with a large number of bins (eg 100000).; in version 3.05/06, a new static function TProfile::Approximate is introduced to enable or disable (default) the approximation. Ideas for improvements of this algorithm are welcome. No suggestions received since our call for advice to roottalk in Jul 2002. see for instance: http://root.cern/root/roottalk/roottalk02/2916.html ; Reimplemented from TH1.; Definition a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:73650,error,errors,73650,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,2,['error'],['errors']
Availability,"::TGraph2DErrorsTGraph2DErrors()TGraph2DErrors default constructor.Definition TGraph2DErrors.cxx:80; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; double; int; eyDouble_t ey[n]Definition legend1.C:17; exDouble_t ex[n]Definition legend1.C:17. Definition at line 26 of file TGraph2DErrors.h. Public Member Functions;  TGraph2DErrors ();  TGraph2DErrors default constructor. ;  ;  TGraph2DErrors (const TGraph2DErrors &);  Copy constructor. ;  ;  TGraph2DErrors (Int_t n);  TGraph2DErrors normal constructor the arrays are preset to zero. ;  ;  TGraph2DErrors (Int_t n, Double_t *x, Double_t *y, Double_t *z, Double_t *ex=nullptr, Double_t *ey=nullptr, Double_t *ez=nullptr, Option_t *option="""");  TGraph2DErrors constructor with doubles vectors as input. ;  ;  ~TGraph2DErrors () override;  TGraph2DErrors destructor. ;  ; virtual void AddPointError (Double_t x, Double_t y, Double_t z, Double_t ex=0., Double_t ey=0., Double_t ez=0.);  Add a point with errorbars to the graph. ;  ; Double_t GetErrorX (Int_t bin) const override;  This function is called by Graph2DFitChisquare. ;  ; Double_t GetErrorY (Int_t bin) const override;  This function is called by Graph2DFitChisquare. ;  ; Double_t GetErrorZ (Int_t bin) const override;  This function is called by Graph2DFitChisquare. ;  ; Double_t * GetEX () const override;  ; Double_t * GetEY () const override;  ; Double_t * GetEZ () const override;  ; Double_t GetXmaxE () const override;  Returns the X maximum with errors. ;  ; Double_t GetXminE () const override;  Returns the X minimum with errors. ;  ; Double_t GetYmaxE () const override;  Returns the Y maximum with errors. ;  ; Double_t GetYminE () const override;  Returns the Y minimum with errors. ;  ; Double_t GetZmaxE () const override;  Returns the Z maximum with errors. ;  ; Double_t GetZminE () const override;  Returns the Z minimum with errors. ;  ; TClass * IsA () const override;  ; TGraph2DErrors & operator= (const TGraph2DErrors ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DErrors.html:3528,error,errorbars,3528,doc/master/classTGraph2DErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DErrors.html,1,['error'],['errorbars']
Availability,"::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual Int_tVersion() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. PyObject*CallSelf(const char* method, PyObject* pyobject = 0); voidSetupPySelf(). Data Members; public:. enum TSelector::EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. public:. TTree*fChain; TList*fInputList of objects available during processing; TObject*fObject!Current object if processing object (vs. TTree); TStringfOptionOption given to TTree::Process; TSelectorList*fOutput!List of objects created during processing; Long64_tfStatusSelector status. protected:. TSelector::EAbortTSelector::fAbortAbort status; TList*TSelector::fInputList of objects available during processing; TObject*TSelector::fObject!Current object if processing object (vs. TTree); TStringTSelector::fOptionOption given to TTree::Process; TSelectorList*TSelector::fOutput!List of objects created during processing; Long64_tTSelector::fStatusSelector status. private:. PyObject*fPySelf! actual python object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupPySelf(); Install the python side identity of the TPySelector. PyObject* CallSelf(const char* method, PyObject* pyobject = 0); Forward <method> to python. TPySelector(TTree* = 0, PyObject* self = 0); Construct a TSelector derived with <self> as the unde",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPySelector.html:7602,avail,available,7602,root/html534/TPySelector.html,https://root.cern,https://root.cern/root/html534/TPySelector.html,1,['avail'],['available']
Availability,"::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); TStringToken(const TStringToken&); TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); static TStringTString::UItoa(UInt_t value, Int_t base); static TStringTString::ULLtoa(ULong64_t value, Int_t base); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. static TString::EStripTypeTString::kBoth; static TString::ECaseCompareTString::kExact; static TString::ECaseCompareTString::kIgnoreCase; static TString::EStripTypeTString::kLeading; static const Ssiz_tTString::kNPOS; static TString::EStripTypeTString::kTrailing. protected:. const TStringfFullStr; Int_tfPos; TString::Rep_tTString::fRep! String data; Bool_tfReturnVoid; TPRegexpfSplitRe; static TString::(anonymous)TString::kAlignment. Class Charts. Inheritance Chart:. TString. ←; TStringToken. Function documentation; TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); Constructor. Bool_t NextToken(); Get the next token, it is stored in this TString.; Returns true if new token is available, false otherwise. TPRegexp & operator=(const TStringToken& ). TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE). virtual ~TStringToken(); {}. Bool_t AtEnd() const; { return fPos >= fFullStr.Length(); }. » Author: Eddy Offermann 24/06/05 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-02 16:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TStringToken.html:9087,avail,available,9087,root/html604/TStringToken.html,https://root.cern,https://root.cern/root/html604/TStringToken.html,1,['avail'],['available']
Availability,"::Tokenize(TString& tok, Ssiz_t& from, const char* delim = "" "") const; voidTString::ToLower(); voidTString::ToUpper(); TStringToken(const TStringToken&); TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); static TStringTString::UItoa(UInt_t value, Int_t base); static TStringTString::ULLtoa(ULong64_t value, Int_t base); static voidTString::WriteString(TBuffer& b, const TString* a). protected:. static Ssiz_tTString::AdjustCapacity(Ssiz_t oldCap, Ssiz_t newCap); static Ssiz_tTString::Align(Ssiz_t s); voidTString::AssertElement(Ssiz_t nc) const; voidTString::Clobber(Ssiz_t nc); voidTString::InitChar(char c); static Ssiz_tTString::Recommend(Ssiz_t s). Data Members; public:. static TString::EStripTypeTString::kBoth; static TString::ECaseCompareTString::kExact; static TString::ECaseCompareTString::kIgnoreCase; static TString::EStripTypeTString::kLeading; static const Ssiz_tTString::kNPOS; static TString::EStripTypeTString::kTrailing. protected:. const TStringfFullStr; Int_tfPos; TString::Rep_tTString::fRep! String data; Bool_tfReturnVoid; TPRegexpfSplitRe; static TString::(anonymous)TString::kAlignment. Class Charts. Inheritance Chart:. TString. ←; TStringToken. Function documentation; TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE); Constructor. Bool_t NextToken(); Get the next token, it is stored in this TString.; Returns true if new token is available, false otherwise. TPRegexp & operator=(const TStringToken& ). TStringToken(const TString& fullStr, const TString& splitRe, Bool_t retVoid = kFALSE). virtual ~TStringToken(); {}. Bool_t AtEnd() const; { return fPos >= fFullStr.Length(); }. » Author: Eddy Offermann 24/06/05 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-06-30 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStringToken.html:9031,avail,available,9031,root/html602/TStringToken.html,https://root.cern,https://root.cern/root/html602/TStringToken.html,1,['avail'],['available']
Availability,"::Type() const. protected:. doubleDoIntegral(const double* xmin, const double* xmax, bool absVal = false). Data Members; private:. doublefAbsTolabsolute tolerance; unsigned intfDimdimentionality of integrand; doublefErrorintegration error ; const ROOT::Math::IMultiGenFunction*fFunpointer to integrand function ; unsigned intfMaxPtsmaximum number of function evaluation requested ; unsigned intfMinPtsminimum number of function evaluation requested ; intfNEvalnumber of function evaluation; doublefRelErrorRelative error; doublefRelTolrelative tolerance; doublefResultlast integration result ; unsigned intfSizemax size of working array (explode with dimension); intfStatusstatus of algorithm (error if not zero). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AdaptiveIntegratorMultiDim(double absTol = 1.E-6, double relTol = 1E-6, unsigned int maxpts = 100000, unsigned int size = 0). construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than >= (2N + 3) * (1 + MAXPTS/(2**N + 2N(N + 1) + 1))/2). For smaller value passed, the; minimum allowed will be used. AdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.E-9, double relTol = 1E-6, unsigned int maxcall = 100000, unsigned int size = 0). Construct with a reference to the integrand function and given optionally; tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array. virtual ~AdaptiveIntegratorMultiDim(). destructor (no operations). {}. double Integral(const double* xmin, const double* xmax). evaluate the integral with the previously given function between xmin[] and xmax[]. return DoIntegral(const double* xmin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__AdaptiveIntegratorMultiDim.html:3195,toler,tolerance,3195,root/html528/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__AdaptiveIntegratorMultiDim.html,3,['toler'],['tolerance']
Availability,"::Type() const. protected:. doubleDoIntegral(const double* xmin, const double* xmax, bool absVal = false). Data Members; private:. doublefAbsTolabsolute tolerance; unsigned intfDimdimentionality of integrand; doublefErrorintegration error ; const ROOT::Math::IMultiGenFunction*fFunpointer to integrand function ; unsigned intfMaxPtsmaximum number of function evaluation requested ; unsigned intfMinPtsminimum number of function evaluation requested ; intfNEvalnumber of function evaluation; doublefRelErrorRelative error; doublefRelTolrelative tolerance; doublefResultlast integration result ; unsigned intfSizemax size of working array (explode with dimension); intfStatusstatus of algorithm (error if not zero). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; AdaptiveIntegratorMultiDim(double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxpts = 100000, unsigned int size = 0). construct given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array.; The size of working array represents the number of sub-division used for calculating the integral.; Higher the dimension, larger sizes are required for getting the same accuracy.; The size must be larger than >= (2N + 3) * (1 + MAXPTS/(2**N + 2N(N + 1) + 1))/2). For smaller value passed, the; minimum allowed will be used. AdaptiveIntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, double absTol = 1.E-9, double relTol = 1E-9, unsigned int maxcall = 100000, unsigned int size = 0). Construct with a reference to the integrand function and given optionally; tolerance (absolute and relative), maximum number of function evaluation (maxpts) and; size of the working array. virtual ~AdaptiveIntegratorMultiDim(). destructor (no operations). {}. double Integral(const double* xmin, const double* xmax). evaluate the integral with the previously given function between xmin[] and xmax[]. return DoIntegral(const double* xmin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html:5127,toler,tolerance,5127,root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__AdaptiveIntegratorMultiDim.html,1,['toler'],['tolerance']
Availability,"::UnixTcpServicestatic int UnixTcpService(int port, Bool_t reuse, int backlog, int tcpwindowsize)Open a socket, bind to it and start listening for TCP/IP connections on the port.Definition TUnixSystem.cxx:4297; TUnixSystem::DispatchSignalsvoid DispatchSignals(ESignals sig)Handle and dispatch signals.Definition TUnixSystem.cxx:3648; TUnixSystem::AddFileHandlervoid AddFileHandler(TFileHandler *fh) overrideAdd a file handler to the list of system file handlers.Definition TUnixSystem.cxx:782; TUnixSystem::GetCryptoRandomInt_t GetCryptoRandom(void *buf, Int_t len) overrideReturn cryptographic random number Fill provided buffer with random values Returns number of bytes wr...Definition TUnixSystem.cxx:740; TUnixSystem::OpenDirectoryvoid * OpenDirectory(const char *name) overrideOpen a Unix file system directory. Returns 0 if directory does not exist.Definition TUnixSystem.cxx:1392; TUnixSystem::Renameint Rename(const char *from, const char *to) overrideRename a file. Returns 0 when successful, -1 in case of failure.Definition TUnixSystem.cxx:1632; TUnixSystem::Getenvconst char * Getenv(const char *name) overrideGet environment variable.Definition TUnixSystem.cxx:2137; TUnixSystem::GetPathInfoint GetPathInfo(const char *path, FileStat_t &buf) overrideGet info about a file.Definition TUnixSystem.cxx:1658; TUnixSystem::GetEffectiveGidInt_t GetEffectiveGid() overrideReturns the effective group id.Definition TUnixSystem.cxx:2045; TUnixSystem::UnixSelectstatic int UnixSelect(Int_t nfds, TFdSet *readready, TFdSet *writeready, Long_t timeout)Wait for events on the file descriptors specified in the readready and writeready masks or for timeou...Definition TUnixSystem.cxx:3901; TUnixSystem::GetPidint GetPid() overrideGet process id.Definition TUnixSystem.cxx:2179; TUnixSystem::ExecInt_t Exec(const char *shellcmd) overrideExecute a command.Definition TUnixSystem.cxx:2155; TUnixSystem::ResetTimervoid ResetTimer(TTimer *ti) overrideReset a-sync timer.Definition TUnixSystem.cxx:3033; T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:215521,failure,failure,215521,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,2,['failure'],['failure']
Availability,"::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TGLLightSet(const TGLLightSet&); TGLLightSet&operator=(const TGLLightSet&). Data Members; public:. enum ELight { kLightFront; kLightTop; kLightBottom; kLightLeft; kLightRight; kLightMask; kLightSpecular; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Float_tfFrontPower! power of the front lamp; UInt_tfLightState! light states (on/off) mask; Float_tfSidePower! power of the side lamps; Float_tfSpecularPower! power of specular lamp; Bool_tfUseSpecular!. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGLLightSet(); Constructor. void ToggleLight(TGLLightSet::ELight light); Toggle light on/off. void SetLight(TGLLightSet::ELight light, Bool_t on); Set a light on/off. void StdSetupLights(const TGLBoundingBox& bbox, const TGLCamera& camera, Bool_t debug = kFALSE); Setup lights for current given bounding box and camera.; This is called by standard GL viewer.; Expects matrix-mode to be model-view. TGLLightSet(const TGLLightSet& ). TGLLightSet& operator=(const TGLLightSet& ). virtual ~TGLLightSet(); {}. UInt_t GetLightState(); { return fLightState; }. Bool_t GetUseSpecular() const; { return fUseSpecular; }. void SetUseSpecular(Bool_t s); { fUseSpecular = s; }. Float_t GetFrontPower() const; { return fFrontPower; }. Float_t GetSidePower() const; { return fSidePower; }. Float_t GetSpecularPower() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLLightSet.html:5723,mask,mask,5723,root/html528/TGLLightSet.html,https://root.cern,https://root.cern/root/html528/TGLLightSet.html,4,['mask'],['mask']
Availability,"::What; has been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous.; Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Int_t SendRaw(const void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; send and -1 in case of error. Int_t Recv(TMessage*& mess); Receive a TMessage object. The user must delete the TMessage object.; Returns length of message in bytes (can be 0 if other side of connection; is closed) or -1 in case of error or -4 in case a non-blocking socket would; block (i.e. there is nothing to be read). In those case mess == 0. Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; sent or -1 in case of error. Int_t SetOption(ESockOptions opt, Int_t val); Set socket options. Int_t GetOption(ESockOptions opt, Int_t& val); Get socket options. Returns -1 in case of error. Int_t GetErrorCode() const; Returns error code. Meaning depends on context where it is called.; If no error condition returns 0 else a value < 0. TPSocket(TSocket** pSockets, Int_t size). void operator=(const TPSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. Int_t Send(const TMessage& mess). Int_t Send(Int_t kind); { return TSocket::Send(kind); }. Int_t Send(Int_t status, Int_t kind); { return TSocket::Send(status, kind); }. Int_t Recv(TMessage*& mess). Int_t Recv(Int_t& status, Int_t& kind); { return TSocket::Recv(status, kind); }. Int_t Recv(char* mess, Int_t max); { return TSocket::Recv(mess, max); }. Bool_t IsValid() const; { return fSockets ? kTRUE : kFALSE; }. Int_t GetSize() const; { return fSize; }. » Author: Fons Rademakers 20/1/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-03-14 16:46; This page has been automatically generated. For comments or suggestions regard",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPSocket.html:15872,error,error,15872,root/html534/TPSocket.html,https://root.cern,https://root.cern/root/html534/TPSocket.html,1,['error'],['error']
Availability,"::What; has been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous.; Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Int_t SendRaw(const void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; send and -1 in case of error. Int_t Recv(TMessage*& mess); Receive a TMessage object. The user must delete the TMessage object.; Returns length of message in bytes (can be 0 if other side of connection; is closed) or -1 in case of error or -4 in case a non-blocking socket would; block (i.e. there is nothing to be read). In those case mess == 0. Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; sent or -1 in case of error. Int_t SetOption(ESockOptions opt, Int_t val); Set socket options. Int_t GetOption(ESockOptions opt, Int_t& val); Get socket options. Returns -1 in case of error. Int_t GetErrorCode() const; Returns error code. Meaning depends on context where it is called.; If no error condition returns 0 else a value < 0. TPSocket(TSocket** pSockets, Int_t size). void operator=(const TPSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. Int_t Send(const TMessage& mess). Int_t Send(Int_t kind); { return TSocket::Send(kind); }. Int_t Send(Int_t status, Int_t kind); { return TSocket::Send(status, kind); }. Int_t Recv(TMessage*& mess). Int_t Recv(Int_t& status, Int_t& kind); { return TSocket::Recv(status, kind); }. Int_t Recv(char* mess, Int_t max); { return TSocket::Recv(mess, max); }. Bool_t IsValid() const; { return fSockets ? kTRUE : kFALSE; }. Int_t GetSize() const; { return fSize; }. » Author: Fons Rademakers 20/1/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TPSocket.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2010-09-23 20:18; This page has been automatically g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPSocket.html:15541,error,error,15541,root/html528/TPSocket.html,https://root.cern,https://root.cern/root/html528/TPSocket.html,1,['error'],['error']
Availability,"::What; has been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous.; Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Int_t SendRaw(const void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; send and -1 in case of error. Int_t Recv(TMessage*& mess); Receive a TMessage object. The user must delete the TMessage object.; Returns length of message in bytes (can be 0 if other side of connection; is closed) or -1 in case of error or -4 in case a non-blocking socket would; block (i.e. there is nothing to be read). In those case mess == 0. Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; sent or -1 in case of error. Int_t SetOption(ESockOptions opt, Int_t val); Set socket options. Int_t GetOption(ESockOptions opt, Int_t& val); Get socket options. Returns -1 in case of error. Int_t GetErrorCode() const; Returns error code. Meaning depends on context where it is called.; If no error condition returns 0 else a value < 0. TPSocket(TSocket** pSockets, Int_t size). void operator=(const TPSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. Int_t Send(const TMessage& mess). Int_t Send(Int_t kind); { return TSocket::Send(kind); }. Int_t Send(Int_t status, Int_t kind); { return TSocket::Send(status, kind); }. Int_t Recv(TMessage*& mess). Int_t Recv(Int_t& status, Int_t& kind); { return TSocket::Recv(status, kind); }. Int_t Recv(char* mess, Int_t max); { return TSocket::Recv(mess, max); }. Bool_t IsValid() const; { return fSockets ? kTRUE : kFALSE; }. Int_t GetSize() const; { return fSize; }. » Author: Fons Rademakers 20/1/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TPSocket.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2011-07-04 15:35; This page has been automatically g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPSocket.html:15854,error,error,15854,root/html530/TPSocket.html,https://root.cern,https://root.cern/root/html530/TPSocket.html,1,['error'],['error']
Availability,"::What; has been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous.; Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Int_t SendRaw(const void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; send and -1 in case of error. Int_t Recv(TMessage*& mess); Receive a TMessage object. The user must delete the TMessage object.; Returns length of message in bytes (can be 0 if other side of connection; is closed) or -1 in case of error or -4 in case a non-blocking socket would; block (i.e. there is nothing to be read). In those case mess == 0. Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; sent or -1 in case of error. Int_t SetOption(ESockOptions opt, Int_t val); Set socket options. Int_t GetOption(ESockOptions opt, Int_t& val); Get socket options. Returns -1 in case of error. Int_t GetErrorCode() const; Returns error code. Meaning depends on context where it is called.; If no error condition returns 0 else a value < 0. TPSocket(TSocket** pSockets, Int_t size). void operator=(const TPSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. Int_t Send(const TMessage& mess). Int_t Send(Int_t kind); { return TSocket::Send(kind); }. Int_t Send(Int_t status, Int_t kind); { return TSocket::Send(status, kind); }. Int_t Recv(TMessage*& mess). Int_t Recv(Int_t& status, Int_t& kind); { return TSocket::Recv(status, kind); }. Int_t Recv(char* mess, Int_t max); { return TSocket::Recv(mess, max); }. Bool_t IsValid() const; { return fSockets ? kTRUE : kFALSE; }. Int_t GetSize() const; { return fSize; }. » Author: Fons Rademakers 20/1/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TPSocket.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2011-11-03 20:20; This page has been automatically g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPSocket.html:15854,error,error,15854,root/html532/TPSocket.html,https://root.cern,https://root.cern/root/html532/TPSocket.html,1,['error'],['error']
Availability,"::What; has been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous.; Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Int_t SendRaw(const void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; send and -1 in case of error. Int_t Recv(TMessage*& mess); Receive a TMessage object. The user must delete the TMessage object.; Returns length of message in bytes (can be 0 if other side of connection; is closed) or -1 in case of error or -4 in case a non-blocking socket would; block (i.e. there is nothing to be read). In those case mess == 0. Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; sent or -1 in case of error. Int_t SetOption(ESockOptions opt, Int_t val); Set socket options. Int_t GetOption(ESockOptions opt, Int_t& val); Get socket options. Returns -1 in case of error. Int_t GetErrorCode() const; Returns error code. Meaning depends on context where it is called.; If no error condition returns 0 else a value < 0. TPSocket(TSocket*[] pSockets, Int_t size). void operator=(const TPSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. Int_t Send(const TMessage& mess). Int_t Send(Int_t kind); { return TSocket::Send(kind); }. Int_t Send(Int_t status, Int_t kind); { return TSocket::Send(status, kind); }. Int_t Recv(TMessage*& mess). Int_t Recv(Int_t& status, Int_t& kind); { return TSocket::Recv(status, kind); }. Int_t Recv(char* mess, Int_t max); { return TSocket::Recv(mess, max); }. Bool_t IsValid() const; { return fSockets ? kTRUE : kFALSE; }. Int_t GetSize() const; { return fSize; }. » Author: Fons Rademakers 20/1/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-02 16:25; This page has been automatically generated. For comments or suggestions regar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TPSocket.html:16491,error,error,16491,root/html604/TPSocket.html,https://root.cern,https://root.cern/root/html604/TPSocket.html,1,['error'],['error']
Availability,"::What; has been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous.; Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Int_t SendRaw(const void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; send and -1 in case of error. Int_t Recv(TMessage*& mess); Receive a TMessage object. The user must delete the TMessage object.; Returns length of message in bytes (can be 0 if other side of connection; is closed) or -1 in case of error or -4 in case a non-blocking socket would; block (i.e. there is nothing to be read). In those case mess == 0. Int_t RecvRaw(void* buffer, Int_t length, ESendRecvOptions opt); Send a raw buffer of specified length. Returns the number of bytes; sent or -1 in case of error. Int_t SetOption(ESockOptions opt, Int_t val); Set socket options. Int_t GetOption(ESockOptions opt, Int_t& val); Get socket options. Returns -1 in case of error. Int_t GetErrorCode() const; Returns error code. Meaning depends on context where it is called.; If no error condition returns 0 else a value < 0. TPSocket(TSocket*[] pSockets, Int_t size). void operator=(const TPSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. Int_t Send(const TMessage& mess). Int_t Send(Int_t kind); { return TSocket::Send(kind); }. Int_t Send(Int_t status, Int_t kind); { return TSocket::Send(status, kind); }. Int_t Recv(TMessage*& mess). Int_t Recv(Int_t& status, Int_t& kind); { return TSocket::Recv(status, kind); }. Int_t Recv(char* mess, Int_t max); { return TSocket::Recv(mess, max); }. Bool_t IsValid() const; { return fSockets ? kTRUE : kFALSE; }. Int_t GetSize() const; { return fSize; }. » Author: Fons Rademakers 20/1/2001 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id$ » Last generated: 2015-06-30 15:23; This page has been automatically generated. For comments or suggestions regar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPSocket.html:16491,error,error,16491,root/html602/TPSocket.html,https://root.cern,https://root.cern/root/html602/TPSocket.html,1,['error'],['error']
Availability,"::_boolAttribTransient! Transient boolean attributes (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; RooListProxy_gamma; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooHistConstraint.html:39835,error,errors,39835,root/html534/RooHistConstraint.html,https://root.cern,https://root.cern/root/html534/RooHistConstraint.html,1,['error'],['errors']
Availability,"::accept(sock, nullptr, nullptr)) == -1 && GetErrno() == EINTR); 3281 ResetErrno();; 3282 ; 3283 if (soc == -1) {; 3284 if (GetErrno() == EWOULDBLOCK); 3285 return -2;; 3286 else {; 3287 SysError(""AcceptConnection"", ""accept"");; 3288 return -1;; 3289 }; 3290 }; 3291 ; 3292 return soc;; 3293}; 3294 ; 3295////////////////////////////////////////////////////////////////////////////////; 3296/// Close socket.; 3297 ; 3298void TUnixSystem::CloseConnection(int sock, Bool_t force); 3299{; 3300 if (sock < 0) return;; 3301 ; 3302#if !defined(R__AIX) || defined(_AIX41) || defined(_AIX43); 3303 if (force); 3304 ::shutdown(sock, 2); // will also close connection of parent; 3305#endif; 3306 ; 3307 while (::close(sock) == -1 && GetErrno() == EINTR); 3308 ResetErrno();; 3309}; 3310 ; 3311////////////////////////////////////////////////////////////////////////////////; 3312/// Receive a buffer headed by a length indicator. Length is the size of; 3313/// the buffer. Returns the number of bytes received in buf or -1 in; 3314/// case of error.; 3315 ; 3316int TUnixSystem::RecvBuf(int sock, void *buf, int length); 3317{; 3318 Int_t header;; 3319 ; 3320 if (UnixRecv(sock, &header, sizeof(header), 0) > 0) {; 3321 int count = ntohl(header);; 3322 ; 3323 if (count > length) {; 3324 Error(""RecvBuf"", ""record header exceeds buffer size"");; 3325 return -1;; 3326 } else if (count > 0) {; 3327 if (UnixRecv(sock, buf, count, 0) < 0) {; 3328 Error(""RecvBuf"", ""cannot receive buffer"");; 3329 return -1;; 3330 }; 3331 }; 3332 return count;; 3333 }; 3334 return -1;; 3335}; 3336 ; 3337////////////////////////////////////////////////////////////////////////////////; 3338/// Send a buffer headed by a length indicator. Returns length of sent buffer; 3339/// or -1 in case of error.; 3340 ; 3341int TUnixSystem::SendBuf(int sock, const void *buf, int length); 3342{; 3343 Int_t header = htonl(length);; 3344 ; 3345 if (UnixSend(sock, &header, sizeof(header), 0) < 0) {; 3346 Error(""SendBuf"", ""cannot send header"");",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:106031,error,error,106031,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,"::clear ; (; ). inline . Clear all defined category states. ; Definition at line 69 of file RooCategory.h. ◆ clearRange(). void RooCategory::clearRange ; (; const char * ; name, . bool ; silent . ). Clear the named range. ; NoteThis affects all copies of this category, because they are sharing range definitions. This ensures that categories inside a dataset and their counterparts on the outside will both see a modification of the range. ; Definition at line 321 of file RooCategory.cxx. ◆ clone(). TObject * RooCategory::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 37 of file RooCategory.h. ◆ DeclFileName(). static const char * RooCategory::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 141 of file RooCategory.h. ◆ defineType() [1/2]. bool RooCategory::defineType ; (; const std::string & ; label). Define a state with given name. ; The lowest available positive integer is assigned as index. Category state labels may not contain semicolons. ReturnsTrue in case of an error. ; Definition at line 209 of file RooCategory.cxx. ◆ defineType() [2/2]. bool RooCategory::defineType ; (; const std::string & ; label, . Int_t ; index . ). Define a state with given name and index. ; Category state labels may not contain semicolons. ReturnsTrue in case of error. ; Definition at line 225 of file RooCategory.cxx. ◆ defineTypes(). void RooCategory::defineTypes ; (; const std::map< std::string, int > & ; allowedStates). Define multiple states in a single call. ; Use like: myCat.defineTypes({ {""0Lep"", 0}, {""1Lep"", 1}, {""2Lep"", 2}, {""3Lep"", 3} });; Note: When labels or indices are defined multiple times, an error message is printed, and the corresponding state is ignored. ; Definition at line 244 of file RooCategory.cxx. ◆ evaluate(). value_type RooCategory::evaluate ; (; ); const. inlineoverrideprotectedvirtual . Evaluate the category state and return. ; The re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:56033,avail,available,56033,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,1,['avail'],['available']
Availability,"::cout << ""- doing optimizer update \n"";; 1515 ; 1516 // increment optimizer step that is used in some algorithms (e.g. ADAM); 1517 optimizer->IncrementGlobalStep();; 1518 optimizer->Step();; 1519 ; 1520#ifdef DEBUG; 1521 std::cout << ""minmimizer step - momentum "" << settings.momentum << "" learning rate "" << optimizer->GetLearningRate() << std::endl;; 1522 for (size_t l = 0; l < nlayers; ++l) {; 1523 if (deepNet.GetLayerAt(l)->GetWeights().size() > 0) {; 1524 Architecture_t::PrintTensor(deepNet.GetLayerAt(l)->GetWeightsAt(0),TString::Format(""weights after step layer %d"",l).Data());; 1525 Architecture_t::PrintTensor(deepNet.GetLayerAt(l)->GetWeightGradientsAt(0),""weight gradients"");; 1526 }; 1527 }; 1528#endif; 1529 ; 1530 }; 1531 ; 1532 if (debugFirstEpoch) std::cout << ""\n End batch loop - compute validation loss \n"";; 1533 //}; 1534 debugFirstEpoch = false;; 1535 if ((nTrainEpochs % settings.testInterval) == 0) {; 1536 ; 1537 std::chrono::time_point<std::chrono::system_clock> t1,t2;; 1538 ; 1539 t1 = std::chrono::system_clock::now();; 1540 ; 1541 // Compute validation error.; 1542 ; 1543 ; 1544 Double_t valError = 0.0;; 1545 bool inTraining = false;; 1546 for (auto batch : validationData) {; 1547 auto inputTensor = batch.GetInput();; 1548 auto outputMatrix = batch.GetOutput();; 1549 auto weights = batch.GetWeights();; 1550 // should we apply droput to the loss ??; 1551 valError += deepNet.Loss(inputTensor, outputMatrix, weights, inTraining, includeRegularization);; 1552 }; 1553 // normalize loss to number of batches and add regularization term; 1554 Double_t regTerm = (includeRegularization) ? deepNet.RegularizationTerm() : 0.0;; 1555 valError /= (Double_t)(nValidationSamples / settings.batchSize);; 1556 valError += regTerm;; 1557 ; 1558 //Log the loss value; 1559 fTrainHistory.AddValue(""valError"",nTrainEpochs,valError);; 1560 ; 1561 t2 = std::chrono::system_clock::now();; 1562 ; 1563 // checking for convergence; 1564 if (valError < minValError) {; 1565 convergenc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:61187,error,error,61187,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['error'],['error']
Availability,"::cout << fClingName << std::endl;; 2348 ; 2349 // this is not needed (maybe can be re-added in case of recompilation of identical expressions; 2350 // // check in case of a change if need to re-initialize; 2351 // if (fClingInitialized) {; 2352 // if (oldClingInput == fClingInput); 2353 // inputIntoCling = false;; 2354 // else; 2355 // fClingInitialized = false;; 2356 // }; 2357 ; 2358 if (inputIntoCling) {; 2359 if (!fLazyInitialization) {; 2360 InputFormulaIntoCling();; 2361 if (fClingInitialized) {; 2362 // if Cling has been successfully initialized; 2363 // put function ptr in the static map; 2364 R__LOCKGUARD(gROOTMutex);; 2365 gClingFunctions.insert(std::make_pair(inputFormulaVecFlag, (void *)fFuncPtr));; 2366 }; 2367 }; 2368 if (!fClingInitialized) {; 2369 // needed in case of lazy initialization of failure compiling the expression; 2370 fSavedInputFormula = inputFormulaVecFlag;; 2371 }; 2372 ; 2373 } else {; 2374 fAllParametersSetted = true;; 2375 fClingInitialized = true;; 2376 }; 2377 }; 2378 }; 2379 ; 2380 // In case of a Cling Error check components which are not found in Cling; 2381 // check that all formula components are matched otherwise emit an error; 2382 if (!fClingInitialized && !fLazyInitialization) {; 2383 //Bool_t allFunctorsMatched = false;; 2384 for (list<TFormulaFunction>::iterator it = fFuncs.begin(); it != fFuncs.end(); ++it) {; 2385 // functions are now by default always not checked; 2386 if (!it->fFound && !it->IsFuncCall()) {; 2387 //allFunctorsMatched = false;; 2388 if (it->GetNargs() == 0); 2389 Error(""ProcessFormula"", ""\""%s\"" has not been matched in the formula expression"", it->GetName());; 2390 else; 2391 Error(""ProcessFormula"", ""Could not find %s function with %d argument(s)"", it->GetName(), it->GetNargs());; 2392 }; 2393 }; 2394 Error(""ProcessFormula"",""Formula \""%s\"" is invalid !"", GetExpFormula().Data() );; 2395 fReadyToExecute = false;; 2396 }; 2397 ; 2398 // clean up un-used default variables in case formula is valid; 2399 //",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:91055,failure,failure,91055,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,2,"['error', 'failure']","['error', 'failure']"
Availability,"::fEXlowDouble_t * fEXlow[fNpoints] array of X low errorsDefinition TGraphBentErrors.h:28; TGraphBentErrors::fEXhighDouble_t * fEXhigh[fNpoints] array of X high errorsDefinition TGraphBentErrors.h:29; TGraphBentErrors::~TGraphBentErrors~TGraphBentErrors() overrideTGraphBentErrors default destructor.Definition TGraphBentErrors.cxx:176; TGraphBentErrors::Printvoid Print(Option_t *chopt="""") const overridePrint graph and errors values.Definition TGraphBentErrors.cxx:495; TGraphBentErrors::Scalevoid Scale(Double_t c1=1., Option_t *option=""y"") overrideMultiply the values and errors of a TGraphBentErrors by a constant c1.Definition TGraphBentErrors.cxx:510; TGraphBentErrors::FillZerovoid FillZero(Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) overrideSet zero values for point arrays in the range [begin, end]Definition TGraphBentErrors.cxx:474; TGraphBentErrors::GetEXlowdDouble_t * GetEXlowd() const overrideDefinition TGraphBentErrors.h:84; TGraphBentErrors::GetErrorYDouble_t GetErrorY(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphBentErrors.cxx:416; TGraphBentErrors::fEYlowDouble_t * fEYlow[fNpoints] array of Y low errorsDefinition TGraphBentErrors.h:30; TGraphBentErrors::fEYhighdDouble_t * fEYhighd[fNpoints] array of Y high displacementsDefinition TGraphBentErrors.h:36; TGraphBentErrors::CopyAndReleasevoid CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy and release.Definition TGraphBentErrors.cxx:278; TGraphBentErrors::SwapPointsvoid SwapPoints(Int_t pos1, Int_t pos2) overrideSwap points.Definition TGraphBentErrors.cxx:646; TGraphBentErrors::CopyPointsBool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy errors from fE***to arrays[***] or to f*** Copy points.Definition TGraphBentErrors.cxx:312; TGraphBentErrors::GetErrorYlowDouble_t GetErrorYlow(Int_t bin) const overrideGet low error on Y[i].Definition TGraphBentErrors.cxx:463; TGraphBentErrors::GetErrorXDoubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html:29908,error,error,29908,doc/master/TGraphBentErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html,2,['error'],['error']
Availability,::fMWMValueMWM decoration hints; const TGWindow*TGTransientFrame::fMainwindow over which to popup dialog; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); Int_tfNPnumber of function parameters; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; TGTextButton*fOKCancel button; UInt_tTGFrame::fOptionsframe options; TGCheckButton**fParFixfix setting check buttons; TGNumberEntryField**fParMaxmax range values; TGNumberEntryField**fParMinmin range values; TGTextEntry**fParNamparameter names; TGTripleHSlider**fParSldtriple sliders; TGNumberEntry**fParValparameter values; const TGWindow*TGWindow::fParentParent window; Double_t*fPerroriginal patameters' errors; Double_t*fPmaxmax limits of patameters range; Double_t*fPminmin limits of patameters range; Double_t*fPvaloriginal patameters' values; Double_tfRXmaxoriginal max range; Double_tfRXminoriginal min range; Double_tfRangexmaxmax limits of patameters range; Double_tfRangexminmin limits of patameters range; TGTextButton*fResetReset button; TStringTGMainFrame::fResourceNameWM resource name; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TGCheckButton*fUpdateImmediate update check button; UInt_tTGMainFrame::fWMHeightWM height; UInt_tTGMainFrame::fWMHeightIncWM height increments; EInitialStateTGMainFrame::fWMInitStateWM initial state; UInt_tTGMainFrame::fWMMaxHeightWM max height; UInt_tTGMainFrame::fWMMaxWidthWM max width; UInt_tTGMainFrame::fWMMinHeightWM min height; UInt_tTGMainFrame::fWMMinWidthWM min width; UInt_tTGMainFrame::fWMWidthWM width; UInt_tTGMainFrame::fWMWidthIncWM width increments; Int_tTGMainFrame::fWMXWM x position; Int_tTGMainFrame::fWMYWM y positi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFunctionParametersDialog.html:21307,error,errors,21307,root/html528/TFunctionParametersDialog.html,https://root.cern,https://root.cern/root/html528/TFunctionParametersDialog.html,6,['error'],['errors']
Availability,"::fOutput!List of objects created during processing; Long64_tTSelector::fStatusSelector status. private:. PyObject*fPySelf! actual python object. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetupPySelf(); Install the python side identity of the TPySelector. PyObject* CallSelf(const char* method, PyObject* pyobject = 0); Forward <method> to python. TPySelector(TTree* = 0, PyObject* self = 0); Construct a TSelector derived with <self> as the underlying, which is; generally 0 to start out with in the current PROOF framework. ~TPySelector(); Destructor. Only deref if still holding on to Py_None (circular otherwise). Int_t Version() const; Return version number of this selector. First forward; if not overridden, then; yield an obvious ""undefined"" number,. Int_t GetEntry(Long64_t entry, Int_t getall = 0); Boilerplate get entry; same as for generated code; not forwarded. void Init(TTree* tree); Initialize with the current tree to be used; not forwarded (may be called; multiple times, and is called from Begin() and SlaveBegin() ). Bool_t Notify(); Forward call to derived Notify() if available. void Begin(TTree* tree = 0); First function called, and used to setup the python self; forward call. void SlaveBegin(TTree* tree); First function called on worker node, needs to make sure python self is setup,; then store the tree to be used, initialize client, and forward call. Bool_t Process(Long64_t entry); Actual processing; call is forwarded to python self. void SlaveTerminate(); End of client; call is forwarded to python self. void Terminate(); End of job; call is forwarded to python self. void Abort(const char* why, TSelector::EAbort what = kAbortProcess); If no 'why' given, read from python error. » Last changed: Sat Mar 14 16:47:59 2015 » Last generated: 2015-03-14 16:47; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPySelector.html:9267,avail,available,9267,root/html534/TPySelector.html,https://root.cern,https://root.cern/root/html534/TPySelector.html,2,"['avail', 'error']","['available', 'error']"
Availability,"::fSignalsBlocked! flag used for suppression of signals; Bool_tfStopErrorstop when parse error occurs; Bool_tfValidateto validate the parse context; TStringfValidateErrorparse error; TStringfValidateWarningparse warning; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TXMLParser. ←. TDOMParser. TSAXParser. Function documentation; TXMLParser(); Initializes parser variables. ~TXMLParser(); Cleanup. void SetValidate(Bool_t val = kTRUE); The parser will validate the xml file if val = true. void SetReplaceEntities(Bool_t val = kTRUE); The parser will replace/expand entities. void ReleaseUnderlying(); To release any existing document. void OnValidateError(const TString& message); This function is called when an error from the parser has occured.; Message is the parse error. void OnValidateWarning(const TString& message); This function is called when a warning from the parser has occured.; Message is the parse error. const char * GetParseCodeMessage(Int_t parseCode) const; Returns the parse code message. void InitializeContext(); Initialize parser parameters, such as, disactivate non-standards libxml1; features, on/off validation, clear error and warning messages. void StopParser(); Stops parsing. void SetParseCode(Int_t code); Set the parse code:; 0: Parse successful; -1: Attempt to parse a second file while a parse is in progress; -2: Parse context is not created; -3: An error occured while parsing file; -4: A fatal error occured while parsing file; -5: Document is not well-formed. void SetStopOnError(Bool_t stop = kTRUE); Set parser stops in case of error:; stop = true, stops on error; stop = false, continue parsing on error... TXMLParser(const TXMLParser& ). TXMLParser& operator=(const TXMLParser& ). Bool_t GetValidate() const; { return fValidate; }. Bool_t GetReplaceEntities() const; { return fReplaceEntities; }. Int_t ParseFile(const char* filename). Int_t ParseBuffer(const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLParser.html:11385,error,error,11385,root/html602/TXMLParser.html,https://root.cern,https://root.cern/root/html602/TXMLParser.html,2,['error'],['error']
Availability,"::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsString(); Destructor. const char* getVal() const; Return value of object. Calculated if dirty, otherwise cached value is returned. Bool_t operator==(const char* value); Equality operator comparing with a TString. Bool_t operator==(const RooAbsArg& other); Equality operator comparing to another RooAbsArg. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream (dummy for now). void writeToStream(ostream& os, Bool_t compact) const; Write object contents to stream (dummy for now). void printValue(ostream& os) const; Print value. Bool_t isValid() const; Check if current value is valid. Bool_t isValidString(const char* , Bool_t printError = kFALSE) const; Check if given string value is valid. Bool_t traceEvalHook(const char* value) const; Hook function for trace evaluation. const char* traceEval() const; Calculate current value of object, with error tracing wrapper. void syncCache(const RooArgSet* nset = 0); Forcibly bring internal cache up-to-date. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE); Copy cache of another RooAbsArg to our cache. Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. void fillTreeBranch(TTree& t); Fill tree branch associated with this object. void setTreeBranchStatus(TTree& t, Bool_t active); (De)Activate associated tree branch. RooAbsArg * createFundamental(const char* newname = 0) const; Create a RooStringVar fundamental object with our properties. TString evaluate() const; { return """" ; }. » Last changed: Mon Dec 7 13:45:50 2009 » Last generated: 2009-12-07 13:45; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsString.html:19877,error,error,19877,root/html526/RooAbsString.html,https://root.cern,https://root.cern/root/html526/RooAbsString.html,1,['error'],['error']
Availability,"::fX[fNpoints]; Double_t*TGraph2D::fY[fNpoints] Data set to be plotted; Double_t*TGraph2D::fZ[fNpoints]; Double_tTGraph2D::fZoutfHistogram bin height for points lying outside the interpolated area. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph2DErrors(); TGraph2DErrors default constructor. TGraph2DErrors(Int_t n); TGraph2DErrors normal constructor; the arrays are preset to zero. TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); TGraph2DErrors constructor with doubles vectors as input. ~TGraph2DErrors(); TGraph2DErrors destructor. TGraph2DErrors(const TGraph2DErrors& ); Copy constructor.; Copy everything except list of functions. TGraph2DErrors & operator=(const TGraph2DErrors& ); Assignment operator; Copy everything except list of functions. Double_t GetErrorX(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorZ(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetXmaxE() const; Returns the X maximum with errors. Double_t GetXminE() const; Returns the X minimum with errors. Double_t GetYmaxE() const; Returns the Y maximum with errors. Double_t GetYminE() const; Returns the Y minimum with errors. Double_t GetZmaxE() const; Returns the Z maximum with errors. Double_t GetZminE() const; Returns the Z minimum with errors. void Set(Int_t n); Set number of points in the 2D graph.; Existing coordinates are preserved.; New coordinates above fNpoints are preset to 0. void SetPoint(Int_t i, Double_t x, Double_t y, Double_t z); Set x, y and z values for point number i. void SetPointError(Int_t i, Double_t ex, Double_t ey, Double_t ez); Set ex, ey and ez values for point numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph2DErrors.html:13403,error,error,13403,root/html534/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html534/TGraph2DErrors.html,3,['error'],['error']
Availability,::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. private:. TGTextButton*fApplyLogLevelapply log level button; TGTextButton*fApplyParallelapply parallel nodes button; TGTextButton*fBtnAddadd package button; TGTextButton*fBtnClearclear all packages button; TGTextButton*fBtnDisabledisable packages button; TGTextButton*fBtnDownmove package down button; TGTextButton*fBtnEnableenable packages button; TGTextButton*fBtnGetQueriesget entries button; TGTextButton*fBtnNewQuerynew query button; TGTextButton*fBtnRefreshrefresh list button; TGTextButton*fBtnRemoveremove package button; TGTextButton*fBtnRemoveDSetremove dataset button; TGTextButton*fBtnShowshow packages button; TGTextButton*fBtnShowEnabledshow enabled packages button; TGTextButton*fBtnShowLogshow log button; TGTextButton*fBtnUpmove package up button; TGTextButton*fBtnUploadupload packages button; TGTextButton*fBtnUploadDSetupload dataset button; TGTextButton*fBtnVerifyDSetverify dataset button; TGCheckButton*fChkEnableenable at session startup check; TGCheckButton*fChkMultimultiple selection check; TGCheckButton*fClearCheckclear text view after each command; TGTextBuffer*fCommandBufCommand line text buffer; TGTextEntry*fCommandTxtCommand line text entry; TGCanvas*fDSetViewdataset tree view; TGListTree*fDataSetTreedataset list tree; TGCompositeFrame*fFA; TGCompositeFrame*fFB; TGCompositeFrame*fFC; TGCompositeFrame*fFDfive tabs element; TGCompositeFrame*fFEfive tabs element; TGLabel*fInfoLine[19]infos on session; TGTextView*fInfoTextViewsummary on current query; TGListBox*fLBPackagespackages listbox; TGNumberEntry*fLogLevellog level number entry; TGTab*fTabmain tab frame; TGTextEntry*fTxtParallelparallel nodes text entry; TSessionViewer*fViewerpointer on main viewer. Class Charts. Inheritance Chart:. TObject. ←; TGObject. ←; TGWindow. TQObject. ←; TGFrame. ←; TGCompositeFrame. ←; TSessionFrame. Function documentation; T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSessionFrame.html:20565,down,down,20565,root/html602/TSessionFrame.html,https://root.cern,https://root.cern/root/html602/TSessionFrame.html,2,['down'],['down']
Availability,"::getCache(lmorph) creating new cache 0x8c083e0 with pdf g1_MORPH_g2_CACHE_Obs[x]_NORM_x_alpha for nset (x,alpha) with code 0 from preexisting content.; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lmorph) creating new cache 0x91bacc0 with pdf g1_MORPH_g2_CACHE_Obs[x]_NORM_x for nset (x) with code 0; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lmorph) creating new cache 0x90b1580 with pdf g1_MORPH_g2_CACHE_Obs[x]_NORM_x for nset (x) with code 0 from preexisting content.; [#0] PROGRESS:Eval -- RooIntegralMorph::fillCacheObject(lmorph) filling multi-dimensional cache..................................................; ; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lmorph) creating new cache 0x937f4b0 with pdf g1_MORPH_g2_CACHE_Obs[alpha,x]_NORM_x for nset (x) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lmorph_over_lmorph_Int[x]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lmorph_over_lmorph_Int[x]_lmorphData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for alpha: using 0.1; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lmorph) creating new cache 0x937e260 with pdf g1_MORPH_g2_CACHE_Obs[alpha,x] for nset () with code 1 from preexisting content.; ; prevFCN = 9770.913047 alpha=0.807, ; prevFCN = 9770.181345 alpha=0.7929, ; prevFCN = 9772.015076 alpha=0.8008, ; prevFCN = 9770.800603 alpha=0.7992, ; prevFCN = 9770.785966 alpha=0.8001, ; prevFCN = 9770.896896 alpha=0.7999, ; prevFCN = 9770.682007 ; prevFCN = 9770.682007 alpha=0.7994, ; prevFCN = 9770.748743 alpha=0.7997, ; prevFCN = 9770.712263 alpha=0.8004, ; prevFCN = 9770.849353 alpha=0.8002, ; prevFCN = 9770.888877 alpha=0.8, ; prevFCN ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf705__linearmorph_8py.html:5809,error,error,5809,doc/master/rf705__linearmorph_8py.html,https://root.cern,https://root.cern/doc/master/rf705__linearmorph_8py.html,3,"['avail', 'error']","['available', 'error']"
Availability,"::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. MYSQL_BIND*fBind! array of bind data; TMySQLStatement::TParamData*fBuffer! parameter definition structures; Int_tTSQLStatement::fErrorCodeerror code of last operation; TStringTSQLStatement::fErrorMsgerror message of last operation; Bool_tTSQLStatement::fErrorOutenable error output; Int_tfIterationCount! number of iteration; Bool_tfNeedParBind! indicates when parameters bind should be called; Int_tfNumBuffers! number of statement parameters; MYSQL_STMT*fStmt! executed statement; Int_tfWorkingMode! 1 - setting parameters, 2 - retrieving results; static ULong64_tfgAllocSizeLimit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMySQLStatement(MYSQL_STMT* stmt, Bool_t errout = kTRUE); Normal constructor.; Checks if statement contains parameters tags. ~TMySQLStatement(); Destructor. void Close(Option_t* = """"); Close statement. Bool_t Process(); Process statement. Int_t GetNumAffectedRows(); Return number of affected rows after statement is processed. Int_t GetNumParameters(); Return number of statement parameters. Bool_t StoreResult(); Store result of statement processing to access them; via GetInt(), GetDouble() and so on methods. Int_t GetNumFields(); Return number of fields in result set. const char* GetFieldName(Int_t nfield); Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMySQLStatement.html:10224,error,error,10224,root/html602/TMySQLStatement.html,https://root.cern,https://root.cern/root/html602/TMySQLStatement.html,2,['error'],['error']
Availability,"::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TApplication::EStatusBitsTApplication::kProcessRemotely; static TProofServ::EQueryActionTProofServ::kQueryEnqueued; static TProofServ::EQueryActionTProofServ::kQueryModify; static TProofServ::EQueryActionTProofServ::kQueryOK; static TProofServ::EQueryActionTProofServ::kQueryStop; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications; static Long64_tTProofServ::fgLastEntryLast entry before exception; static TStringTProofServ::fgLastMsgMessage about status before exception. private:. TProofServLiteInterruptHandler*fInterruptHandler; TStringfSockPathunix socket path; Bool_tfTerminatedtrue if Terminate() has been already called. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofServLite(Int_t* argc, char** argv, FILE* flog = 0); Main constructor. Int_t CreateServer(); Finalize the server setup. If master, create the TProof instance to talk; the worker or submaster nodes.; Return 0 on success, -1 on error. ~TProofServLite(); Cleanup. Not really necessary since after this dtor there is no; live anyway. void HandleSigPipe(); Called when the client is not alive anymore; terminate the session. void HandleTermination(); Called wh",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofServLite.html:18052,avail,available,18052,root/html602/TProofServLite.html,https://root.cern,https://root.cern/root/html602/TProofServLite.html,2,['avail'],['available']
Availability,"::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TApplication::EStatusBitsTApplication::kProcessRemotely; static TProofServ::EQueryActionTProofServ::kQueryEnqueued; static TProofServ::EQueryActionTProofServ::kQueryModify; static TProofServ::EQueryActionTProofServ::kQueryOK; static TProofServ::EQueryActionTProofServ::kQueryStop; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications; static Long64_tTProofServ::fgLastEntryLast entry before exception; static TStringTProofServ::fgLastMsgMessage about status before exception. private:. TXSocketHandler*fInputHandler; TXProofServInterruptHandler*fInterruptHandler; TStringfSockPath; Bool_tfTerminatedtrue if Terminate() has been already called. Class Charts. Inheritance Chart:. TObject. TQObject. ←; TApplication. ←; TProofServ. TXHandler. ←; TXProofServ. Function documentation; TXProofServ(Int_t* argc, char** argv, FILE* flog = 0); Main constructor. Int_t CreateServer(); Finalize the server setup. If master, create the TProof instance to talk; the worker or submaster nodes.; Return 0 on success, -1 on error. ~TXProofServ(); Cleanup. Not really necessary since after this dtor there is no; live anyway. void HandleUrgentData(); Handle high priority data sent by the master or c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXProofServ.html:18021,avail,available,18021,root/html602/TXProofServ.html,https://root.cern,https://root.cern/root/html602/TXProofServ.html,2,['avail'],['available']
Availability,"::kZombie. protected:. Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TGFrameElement*TGFrame::fFEpointer to frame element; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. Class Charts. Inherit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGHorizontal3DLine.html:16229,mask,mask,16229,root/html602/TGHorizontal3DLine.html,https://root.cern,https://root.cern/root/html602/TGHorizontal3DLine.html,4,['mask'],['mask']
Availability,"::kZombie. protected:. Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TGFrameElement*TGFrame::fFEpointer to frame element; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; static Window_tTGFrame::fgDbw; static Int_tTGFrame::fgDbx; static Int_tTGFrame::fgDby; static Pixel_tTGFrame::fgDefaultFrameBackground; static Pixel_tTGFrame::fgDefaultSelectedBackground; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel; static TGFrame::(anonymous)TGFrame::kDeleteWindowCalled. private:. TGEventHand",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGLWidget.html:18203,mask,mask,18203,root/html602/TGLWidget.html,https://root.cern,https://root.cern/root/html602/TGLWidget.html,2,['mask'],['mask']
Availability,"::none()); Add a box with parameter values (and errors) to the specified frame. The following named arguments are supported. Parameters(const RooArgSet& param) -- Only the specified subset of parameters will be shown.; By default all non-contant parameters are shown; ShowConstants(Bool_t flag) -- Also display constant parameters; Format(const char* optStr) -- Classing [arameter formatting options, provided for backward compatibility; Format(const char* what,...) -- Parameter formatting options, details given below; Label(const chat* label) -- Add header label to parameter box; Layout(Double_t xmin, -- Specify relative position of left,right side of box and top of box. Position of; Double_t xmax, Double_t ymax) bottom of box is calculated automatically from number lines in box. The Format(const char* what,...) has the following structure. const char* what -- Controls what is shown. ""N"" adds name, ""E"" adds error,; ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; FixedPrecision(int n) -- Controls precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default). Example use: pdf.paramOn(frame, Label(""fit result""), Format(""NEU"",AutoPrecision(1)) ) ;. RooPlot* paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.5, Double_t xmax = 0.98999999999999999, Double_t ymax = 0.94999999999999996); OBSOLETE FUNCTION PROVIDED FOR BACKWARD COMPATIBILITY. RooPlot* paramOn(RooPlot* frame, const RooArgSet& params, Bool_t showConstants = kFALSE, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.65000000000000002, Double_t xmax = 0.98999999999999999, Double_t ymax = 0.94999999999999996, const RooCmdArg* formatCmd = 0); Add a text box with the current parameter values and their errors to the frame.; Observables of this PDF appea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsPdf.html:82875,error,error,82875,root/html602/RooAbsPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsPdf.html,4,['error'],['error']
Availability,"::none()); Add a box with parameter values (and errors) to the specified frame. The following named arguments are supported. Parameters(const RooArgSet& param) -- Only the specified subset of parameters will be shown.; By default all non-contant parameters are shown; ShowConstants(Bool_t flag) -- Also display constant parameters; Format(const char* optStr) -- Classing [arameter formatting options, provided for backward compatibility; Format(const char* what,...) -- Parameter formatting options, details given below; Label(const chat* label) -- Add header label to parameter box; Layout(Double_t xmin, -- Specify relative position of left,right side of box and top of box. Position of; Double_t xmax, Double_t ymax) bottom of box is calculated automatically from number lines in box. The Format(const char* what,...) has the following structure. const char* what -- Controls what is shown. ""N"" adds name, ""E"" adds error,; ""A"" shows asymmetric error, ""U"" shows unit, ""H"" hides the value; FixedPrecision(int n) -- Controls precision, set fixed number of digits; AutoPrecision(int n) -- Controls precision. Number of shown digits is calculated from error; + n specified additional digits (1 is sensible default). Example use: pdf.paramOn(frame, Label(""fit result""), Format(""NEU"",AutoPrecision(1)) ) ;. RooPlot* paramOn(RooPlot* frame, const RooAbsData* data, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.50, Double_t xmax = 0.99, Double_t ymax = 0.95); OBSOLETE FUNCTION PROVIDED FOR BACKWARD COMPATIBILITY. RooPlot* paramOn(RooPlot* frame, const RooArgSet& params, Bool_t showConstants = kFALSE, const char* label = """", Int_t sigDigits = 2, Option_t* options = ""NELU"", Double_t xmin = 0.65, Double_t xmax = 0.99, Double_t ymax = 0.95, const RooCmdArg* formatCmd = 0); Add a text box with the current parameter values and their errors to the frame.; Observables of this PDF appearing in the 'data' dataset will be omitted. Optional label will be inserte",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:72092,error,error,72092,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,10,['error'],['error']
Availability,"::recomputeShape ; (; ). inlineoverrideprotectedvirtual . This category's shape does not depend on others, and does not need recomputing. ; Implements RooAbsCategory.; Definition at line 124 of file RooCategory.h. ◆ setIndex() [1/3]. bool RooAbsCategoryLValue::setIndex ; (; const std::pair< std::string, value_type > & ; nameIdxPair, . bool ; printError = true . ). inline . Change category state to state specified by another category state. ; If printError is set, a message will be printed if the specified index does not represent a valid state. NoteThe state name of the other category is ignored. ; Returnsbool to signal an error. ; Definition at line 48 of file RooAbsCategoryLValue.h. ◆ setIndex() [2/3]. bool RooCategory::setIndex ; (; Int_t ; index, . bool ; printError = true . ). overridevirtual . Set value by specifying the index code of the desired state. ; If printError is set, a message will be printed if the specified index does not represent a valid state. Returnsbool signalling if an error occurred. ; Implements RooAbsCategoryLValue.; Definition at line 164 of file RooCategory.cxx. ◆ setIndex() [3/3]. virtual bool RooAbsCategoryLValue::setIndex ; (; value_type ; index, . bool ; printError = true . ). virtual . Change category state by specifying the index code of the desired state. ; If printError is set, a message will be printed if the specified index does not represent a valid state. Returnsbool to signal an error. ; Implements RooAbsCategoryLValue. ◆ setLabel() [1/4]. bool RooCategory::setLabel ; (; const char * ; label, . bool ; printError = true . ). overridevirtual . Set value by specifying the name of the desired state. ; If printError is set, a message will be printed if the specified label does not represent a valid state. Returnsfalse on success. ; Implements RooAbsCategoryLValue.; Definition at line 186 of file RooCategory.cxx. ◆ setLabel() [2/4]. virtual bool RooAbsCategoryLValue::setLabel ; (; const char * ; label, . bool ; printError = true . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCategory.html:62469,error,error,62469,doc/master/classRooCategory.html,https://root.cern,https://root.cern/doc/master/classRooCategory.html,1,['error'],['error']
Availability,"::setRange(y) new range named 'fit_nll_model_modelData' created with bounds [-10,0]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,10]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB1' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(x) new range named 'fit_nll_model_modelData_SB2' created with bounds [-10,0]; [#1] INFO:Eval -- RooRealVar::setRange(y) new range named 'fit_nll_model_modelData_SB2' created with bounds [0,10]; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 16261.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf312__multirangefit_8C.html:7605,error,error,7605,doc/master/rf312__multirangefit_8C.html,https://root.cern,https://root.cern/doc/master/rf312__multirangefit_8C.html,2,['error'],['error']
Availability,"::shared_ptr< RDFDetail::RDefineBase > column);  Add a new defined column. ;  ; void AddVariation (std::shared_ptr< RVariationBase > variation);  Register a new systematic variation. ;  ; std::vector< std::string_view > BuildDefineNames () const;  Return the list of the names of defined columns (no aliases). ;  ; ROOT::RDF::RVariationsDescription BuildVariationsDescription () const;  ; std::vector< std::string_view > GenerateColumnNames () const;  Return the list of the names of the defined columns (Defines + Aliases). ;  ; RDFDetail::RDefineBase * GetDefine (std::string_view colName) const;  Return the RDefine for the requested column name, or nullptr. ;  ; RDFDetail::RColumnReaderBase * GetReader (unsigned int slot, const std::string &colName, const std::string &variationName, const std::type_info &tid);  Return a RDefineReader or a RVariationReader, or nullptr if not available. ;  ; RDFDetail::RColumnReaderBase * GetReaderUnchecked (unsigned int slot, const std::string &colName, const std::string &variationName);  Return a RDefineReader or a RVariationReader, or nullptr if not available. ;  ; std::vector< std::string > GetVariationDeps (const std::string &column) const;  Get the names of all variations that directly or indirectly affect a given column. ;  ; std::vector< std::string > GetVariationDeps (const std::vector< std::string > &columns) const;  Get the names of all variations that directly or indirectly affect the specified columns. ;  ; std::vector< std::string > GetVariationsFor (const std::string &column) const;  Get the names of the variations that directly provide alternative values for this column. ;  ; bool IsAlias (std::string_view name) const;  Return true if the given column name is an existing alias. ;  ; bool IsDefine (std::string_view name) const;  Return true if the given column name is an existing defined column. ;  ; bool IsDefineOrAlias (std::string_view name) const;  Check if the provided name is tracked in the names list. ;  ; std::strin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Internal_1_1RDF_1_1RColumnRegister.html:2995,avail,available,2995,doc/master/classROOT_1_1Internal_1_1RDF_1_1RColumnRegister.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Internal_1_1RDF_1_1RColumnRegister.html,1,['avail'],['available']
Availability,"::strerror(errno) << std::endl; // Get some info as to why; return;; }; std::cout << "" WE ARE AFTER LOADING DATA "" << std::endl;; ; std::vector<std::pair<Double_t, Double_t>> allCoords;; Double_t a, b;; while (infile >> a >> b) ; allCoords.emplace_back(a, b);; ; if (allCoords.size() % 3 != 0) {; cout << ""[ERROR] Bad file"" << endl;; return;; }; ; Double_t x[3], y[3];; for (int i = 0; i < allCoords.size(); i += 3) {; x[0] = allCoords[i + 0].first;; y[0] = allCoords[i + 0].second;; x[1] = allCoords[i + 1].first;; y[1] = allCoords[i + 1].second;; x[2] = allCoords[i + 2].first;; y[2] = allCoords[i + 2].second;; ; det_avg_merge->AddBin(3, x, y);; det_err_merge->AddBin(3, x, y);; ; for (int l = 0; l < NUM_LS; ++l) {; det_avg_ls[l].AddBin(3, x, y);; det_err_ls[l].AddBin(3, x, y);; }; }; ; std::cout << "" WE ARE AFTER ADDING BINS "" << std::endl;; ; // -------------------- Simulate particles ------------------------; TRandom ran;; ; // moving error; Double_t xoffset1 = 0;; Double_t yoffset1 = 0;; Double_t xoffset2 = 0;; Double_t yoffset2 = 0;; ; for (int i = 0; i <= NUM_LS-1; ++i) { // LumiSection; std::cout << ""[In Progress] LumiSection "" << i << std::endl;; for (int j = 0; j < numEvents; ++j) { // Events; Double_t r1 = ran.Gaus(0, 10);; Double_t r2 = ran.Gaus(0, 8);; Double_t rok = ran.Gaus(10, 1);; Double_t rbad1 = ran.Gaus(8, 5);; Double_t rbad2 = ran.Gaus(-8, 5);; ; Double_t val = rok;; ; xoffset1 += 0.00002;; yoffset1 += 0.00002;; ; xoffset2 += 0.00003;; yoffset2 += 0.00004;; ; if (r2 > 3. - yoffset1 && r2 < 8. - yoffset1 &&; r1 > 1. + xoffset1 && r1 < 5. + xoffset1 ) {; val -= rbad1;; }; ; if (r2 > -10 + yoffset2 && r2 < -8 + yoffset2 &&; r1 > -6 + xoffset2 && r1 < 8 + xoffset2 ) {; val -= rbad2;; }; ; tot_avg_ls[i].Fill(r1, r2, val);; det_avg_ls[i].Fill(r1, r2, val);; det_err_ls[i].Fill(r1, r2, val);; }; ; std::string title;; ; c1->cd(i+1);; title = ""Global View: Avg in LS "" + std::to_string(i);; tot_avg_ls[i].SetTitle(title.c_str());; tot_avg_ls[i].SetStats(false);; t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tprofile2polyRealistic_8C.html:2803,error,error,2803,doc/master/tprofile2polyRealistic_8C.html,https://root.cern,https://root.cern/doc/master/tprofile2polyRealistic_8C.html,1,['error'],['error']
Availability,"::uniqueId ; (; ); const. inline . Returns a unique ID that is different for every instantiated RooAbsData object. ; This ID can be used whether two RooAbsData are the same object, which is safer than memory address comparisons that might result in false positives when memory is reused. ; Definition at line 308 of file RooAbsData.h. ◆ weight(). virtual double RooAbsData::weight ; (; ); const. pure virtual . Implemented in RooDataHist, and RooDataSet. ◆ weightError() [1/2]. virtual void RooAbsData::weightError ; (; double & ; lo, . double & ; hi, . ErrorType ; = Poisson . ); const. inlinevirtual . Return the asymmetric errors on the current weight. ; See also weightError(ErrorType) const for symmetric error. Parameters. [out]loLow error. ; [out]hiHigh error. . Reimplemented in RooDataHist, and RooDataSet.; Definition at line 122 of file RooAbsData.h. ◆ weightError() [2/2]. virtual double RooAbsData::weightError ; (; ErrorType ; = Poisson); const. inlinevirtual . Return the symmetric error on the current weight. ; See also weightError(double&,double&,ErrorType) const for asymmetric errors. ; Reimplemented in RooDataHist, and RooDataSet.; Definition at line 112 of file RooAbsData.h. ◆ weightSquared(). virtual double RooAbsData::weightSquared ; (; ); const. pure virtual . Implemented in RooDataHist, and RooDataSet. Friends And Related Symbol Documentation. ◆ RooAbsOptTestStatistic. friend class RooAbsOptTestStatistic. friend . Definition at line 332 of file RooAbsData.h. ◆ RooFit::TestStatistics::ConstantTermsOptimizer. friend struct RooFit::TestStatistics::ConstantTermsOptimizer. friend . Definition at line 333 of file RooAbsData.h. ◆ RooFit::TestStatistics::RooAbsL. friend class RooFit::TestStatistics::RooAbsL. friend . Definition at line 335 of file RooAbsData.h. Member Data Documentation. ◆ _cachedVars. RooArgSet RooAbsData::_cachedVars. protected . ! External variables cached with this data set ; Definition at line 349 of file RooAbsData.h. ◆ _dstore. std::unique_p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:77341,error,error,77341,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['error'],['error']
Availability,"::vector<Double_t> xlow(nbins_max);; 2337 std::vector<Double_t> xhigh(nbins_max);; 2338 std::vector<Double_t> eff(nbins_max);; 2339 std::vector<Double_t> efflow(nbins_max);; 2340 std::vector<Double_t> effhigh(nbins_max);; 2341 ; 2342 //parameters for combining:; 2343 //number of objects; 2344 Int_t num = vTotal.size();; 2345 std::vector<Int_t> pass(num);; 2346 std::vector<Int_t> total(num);; 2347 ; 2348 //loop over all bins; 2349 Double_t low = 0;; 2350 Double_t up = 0;; 2351 for(Int_t i=1; i <= nbins_max; ++i) {; 2352 //the binning of the x-axis is taken from the first total histogram; 2353 x[i-1] = vTotal.at(0)->GetBinCenter(i);; 2354 xlow[i-1] = x[i-1] - vTotal.at(0)->GetBinLowEdge(i);; 2355 xhigh[i-1] = vTotal.at(0)->GetBinWidth(i) - xlow[i-1];; 2356 ; 2357 for(Int_t j = 0; j < num; ++j) {; 2358 pass[j] = (Int_t)(vPassed.at(j)->GetBinContent(i) + 0.5);; 2359 total[j] = (Int_t)(vTotal.at(j)->GetBinContent(i) + 0.5);; 2360 }; 2361 ; 2362 //fill efficiency and errors; 2363 eff[i-1] = Combine(up,low,num,&pass[0],&total[0],alpha,beta,level,&vWeights[0],opt.Data());; 2364 //did an error occurred ?; 2365 if(eff[i-1] == -1) {; 2366 gROOT->Error(""TEfficiency::Combine"",""error occurred during combining"");; 2367 gROOT->Info(""TEfficiency::Combine"",""stop combining"");; 2368 return nullptr;; 2369 }; 2370 efflow[i-1]= eff[i-1] - low;; 2371 effhigh[i-1]= up - eff[i-1];; 2372 }//loop over all bins; 2373 ; 2374 TGraphAsymmErrors* gr = new TGraphAsymmErrors(nbins_max,&x[0],&eff[0],&xlow[0],&xhigh[0],&efflow[0],&effhigh[0]);; 2375 ; 2376 return gr;; 2377}; 2378 ; 2379////////////////////////////////////////////////////////////////////////////////; 2380/// Compute distance from point px,py to a graph.; 2381///; 2382/// Compute the closest distance of approach from point px,py to this line.; 2383/// The distance is computed in pixels units.; 2384///; 2385/// Forward the call to the painted graph; 2386 ; 2387Int_t TEfficiency::DistancetoPrimitive(Int_t px, Int_t py); 2388{; 2389 if (fPai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:96156,error,errors,96156,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['error'],['errors']
Availability,"::vectors of TArrayD objects.; 366 ; 367TGraphMultiErrors::TGraphMultiErrors(Int_t np, Int_t ne, const Double_t *x, const Double_t *y, const Double_t *exL,; 368 const Double_t *exH, std::vector<TArrayD> eyL, std::vector<TArrayD> eyH, Int_t m); 369 : TGraph(np, x, y), fNYErrors(ne), fSumErrorsMode(m); 370{; 371 if (!CtorAllocate()); 372 return;; 373 ; 374 Int_t n = fNpoints * sizeof(Double_t);; 375 ; 376 if (exL); 377 memcpy(fExL, exL, n);; 378 else; 379 memset(fExL, 0, n);; 380 if (exH); 381 memcpy(fExH, exH, n);; 382 else; 383 memset(fExH, 0, n);; 384 ; 385 for (Int_t i = 0; i < fNpoints; i++) {; 386 for (Int_t j = 0; j < fNYErrors; j++) {; 387 if (Int_t(eyL.size()) > j && eyL[j].GetSize() > i); 388 fEyL[j][i] = eyL[j][i];; 389 else; 390 fEyL[j][i] = 0.;; 391 if (Int_t(eyH.size()) > j && eyH[j].GetSize() > i); 392 fEyH[j][i] = eyH[j][i];; 393 else; 394 fEyH[j][i] = 0.;; 395 }; 396 }; 397 ; 398 CalcYErrorsSum();; 399}; 400 ; 401////////////////////////////////////////////////////////////////////////////////; 402/// TGraphMultiErrors normal constructor with `name`, `title`, `np` points and `ne` y-errors.; 403///; 404/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 405/// The multiple y-errors are passed as std::vectors of TArrayD objects.; 406 ; 407TGraphMultiErrors::TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Double_t *x,; 408 const Double_t *y, const Double_t *exL, const Double_t *exH,; 409 std::vector<TArrayD> eyL, std::vector<TArrayD> eyH, Int_t m); 410 : TGraphMultiErrors(np, ne, x, y, exL, exH, eyL, eyH, m); 411{; 412 SetNameTitle(name, title);; 413}; 414 ; 415////////////////////////////////////////////////////////////////////////////////; 416/// Constructor with six vectors of floats in input and a single y error dimension.; 417/// The signature of this constructor is equal to the corresponding constructor of TGraphAsymmErrors.; 418/// A grapherrors is built with the X coordinates taken from `t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:14336,error,errors,14336,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['errors']
Availability,":; 220`TGraphErrors`, `TGraphAsymmErrors` and `TGraphBentErrors`.; 221The following drawing options are specific to graphs with error bars:; 222 ; 223| Option | Description |; 224|----------|-------------------------------------------------------------------|; 225| ""Z"" | Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. |; 226| "">"" | An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; 227| \""\|>\"" | A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. |; 228| ""X"" | Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) |; 229| \""\|\|\"" | Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. |; 230| ""[]"" | Does the same as option \""\|\|\"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. |; 231| ""0"" | By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). |; 232| ""2"" | Error rectangles are drawn. |; 233| ""3"" | A filled area is drawn through the end points of the vertical error bars. |; 234| ""4"" | A smoothed filled area is drawn through the end points of the vertical error bars. |; 235| ""5"" | Error rectangles are drawn like option ""2"". In addition the contour line around the boxes is drawn. This can be useful when boxes' fill colors are very light or in gray scale mode. |; 236 ; 237 ; 238`gStyle->SetErrorX(dx)` controls ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:8752,error,errors,8752,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,2,['error'],['errors']
Availability,":; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::IGradientMultiDim. class ROOT::Math::IGradientMultiDim. Documentation for the abstract class IBaseFunctionMultiDim.; Interface (abstract class) for generic functions objects of multi-dimension; Provides a method to evaluate the function given a vector of coordinate values,; by implementing operator() (const double *).; In addition it defines the interface for copying functions via the pure virtual method Clone(); and the interface for getting the function dimension via the NDim() method.; Derived classes must implement the pure private virtual method DoEval(const double *) for the; function evaluation in addition to NDim() and Clone(). @ingroup GenFunc. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IGradientMultiDim(); doubleDerivative(const double* x, unsigned int icoord = 0) const; virtual voidFdF(const double* x, double& f, double* df) const; virtual voidGradient(const double* x, double* grad) const; ROOT::Math::IGradientMultiDimIGradientMultiDim(); ROOT::Math::IGradientMultiDimIGradientMultiDim(const ROOT::Math::IGradientMultiDim&); ROOT::Math::IGradientMultiDim&operator=(const ROOT::Math::IGradientMultiDim&). private:. virtual doubleDoDerivative(const double* x, unsigned int icoord) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~IGradientMultiDim(); virual destructor. {}. void Gradient(const double* x, double* grad) const. Evaluate all the vector of function derivatives (gradient) at a point x.; Derived classes must re-implement if it is more efficient than evaluting one at a time. double Derivative(const double* x, unsigned int icoord = 0) const. Return the partial d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__IGradientMultiDim.html:1052,avail,available,1052,root/html602/ROOT__Math__IGradientMultiDim.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__IGradientMultiDim.html,2,['avail'],['available']
Availability,":; errorp *= sqrt(chisquare/(ndf-1)). Access to the fit result. The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; By default the TFitResultPtr contains only the status of the fit which is return by an; automatic conversion of the TFitResultPtr to an integer. One can write in this case; directly:; Int_t fitStatus = h->Fit(myFunc). If the option ""S"" is instead used, TFitResultPtr contains the TFitResult and behaves; as a smart pointer to it. For example one can do:; TFitResultPtr r = h->Fit(myFunc,""S"");; TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; Double_t par0 = r->Value(0); // retrieve the value for the parameter 0; Double_t err0 = r->Error(0); // retrieve the error for the parameter 0; r->Print(""V""); // print full information of fit including covariance matrix; r->Write(); // store the result in a file. The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; from the fitted function.; If the histogram is made persistent, the list of; associated functions is also persistent. Given a pointer (see above); to an associated function myfunc, one can retrieve the function/fit; parameters with calls such as:; Double_t chi2 = myfunc->GetChisquare();; Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; Double_t err0 = myfunc->GetParError(0); //error on first parameter. Access to the fit status. The status of the fit can be obtained converting the TFitResultPtr to an integer; indipendently if the fit option ""S"" is used or not:; TFitResultPtr r = h=>Fit(myFunc,opt);; Int_t fitStatus = r;. The fitStatus is 0 if the fit is OK (i.e. no error occurred).; The value of the fit status code is negative in case of an error not connected with the; minimization procedure, for example when a wrong function is used.; Otherwise the return value is the one returned from the minimization procedure.; When TMinuit (default ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraph.html:28086,error,error,28086,root/html528/TGraph.html,https://root.cern,https://root.cern/root/html528/TGraph.html,3,['error'],['error']
Availability,":; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooBrentRootFinder. class RooBrentRootFinder: public RooAbsRootFinder. Implement the abstract 1-dimensional root finding interface using; the Brent-Decker method. This implementation is based on the one; in the GNU scientific library (v0.99).; . Function Members (Methods); public:. RooBrentRootFinder(const RooAbsFunc& function); RooBrentRootFinder(const RooBrentRootFinder&); virtual~RooBrentRootFinder(); static TClass*Class(); virtual Bool_tfindRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; virtual TClass*IsA() const; voidsetTol(Double_t tol); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; public:. enum { MaxIterations; };. protected:. const RooAbsFunc*RooAbsRootFinder::_functionPointer to input function; Double_t_tol; Bool_tRooAbsRootFinder::_validTrue if current state is valid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBrentRootFinder(const RooAbsFunc& function); Constructor taking function binding as input. Bool_t findRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; Do the root finding using the Brent-Decker method. Returns a boolean status and; loads 'result' with our best guess at the root if true.; Prints a warning if the initial interval does not bracket a single; root or if the root is not found after a fixed number of iterations. RooBrentRootFinder(const RooAbsFunc& function). virtual ~RooBrentRootFinder(); { }. void setTol(Double_t tol); Set convergence tolerance parameter. » Last changed: Mon Jul 4 15:21:46 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooBrentRootFinder.html:1843,toler,tolerance,1843,root/html530/RooBrentRootFinder.html,https://root.cern,https://root.cern/root/html530/RooBrentRootFinder.html,1,['toler'],['tolerance']
Availability,":; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooBrentRootFinder. class RooBrentRootFinder: public RooAbsRootFinder. Implement the abstract 1-dimensional root finding interface using; the Brent-Decker method. This implementation is based on the one; in the GNU scientific library (v0.99).; . Function Members (Methods); public:. RooBrentRootFinder(const RooAbsFunc& function); RooBrentRootFinder(const RooBrentRootFinder&); virtual~RooBrentRootFinder(); static TClass*Class(); virtual Bool_tfindRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; virtual TClass*IsA() const; voidsetTol(Double_t tol); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; public:. enum { MaxIterations; };. protected:. const RooAbsFunc*RooAbsRootFinder::_functionPointer to input function; Double_t_tol; Bool_tRooAbsRootFinder::_validTrue if current state is valid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBrentRootFinder(const RooAbsFunc& function); Constructor taking function binding as input. Bool_t findRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; Do the root finding using the Brent-Decker method. Returns a boolean status and; loads 'result' with our best guess at the root if true.; Prints a warning if the initial interval does not bracket a single; root or if the root is not found after a fixed number of iterations. RooBrentRootFinder(const RooAbsFunc& function). virtual ~RooBrentRootFinder(); { }. void setTol(Double_t tol); Set convergence tolerance parameter. » Last changed: Thu Nov 3 20:07:06 2011 » Last generated: 2011-11-03 20:07; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooBrentRootFinder.html:1843,toler,tolerance,1843,root/html532/RooBrentRootFinder.html,https://root.cern,https://root.cern/root/html532/RooBrentRootFinder.html,1,['toler'],['tolerance']
Availability,":AbstractMethod(const char* method) const; virtual Int_tAddProcessed(TSlave* wrk, TProofProgressStatus* st, Double_t lat, TList** missing); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tGetActiveWorkers(); Long64_tTVirtualPacketizer::GetBytesRead() const; TList*TVirtualPacketizer::GetConfigParams(Bool_t steal = kFALSE); Double_tTVirtualPacketizer::GetCumProcTime() const; virtual Float_tGetCurrentRate(Bool_t& all); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Long64_tTVirtualPacketizer::GetEntriesProcessed() const; virtual Int_tGetEstEntriesProcessed(Float_t f, Long64_t& ent, Long64_t& bytes, Long64_t& calls); TList*TVirtualPacketizer::GetFailedPackets(); virtual const char*TObject::GetIconName() const; Float_tTVirtualPacketizer::GetInitTime() const; virtual const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPacketizerMulti.html:1859,error,error,1859,root/html528/TPacketizerMulti.html,https://root.cern,https://root.cern/root/html528/TPacketizerMulti.html,3,['error'],['error']
Availability,":AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTKey::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidDelete(Option_t* option = """"); virtual voidDeleteBuffer(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFillBuffer(char*&); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual char*GetBuffer() const; TBuffer*TKey::GetBufferRef() const; virtual const char*TKey::GetClassName() const; Short_tTKey::GetCycle() const; const TDatime&TKey::GetDatime() const; Long64_tGetDBDirId() const; Long64_tGetDBKeyId() const; Long64_tGetDBObjId() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TKeySQL.html:1861,error,error,1861,root/html530/TKeySQL.html,https://root.cern,https://root.cern/root/html530/TKeySQL.html,5,['error'],['error']
Availability,":AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTKey::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidDelete(Option_t* option = """"); virtual voidDeleteBuffer(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFillBuffer(char*&); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual char*GetBuffer() const; TBuffer*TKey::GetBufferRef() const; virtual const char*TKey::GetClassName() const; Short_tTKey::GetCycle() const; const TDatime&TKey::GetDatime() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TFile*TKey::GetFile() const; virtual const char*TKey::GetIconName() const; Short_tTKey::GetKeep() const; Long64_tGetKeyId() const; Int_tTKey::GetKeylen() const; TDirectory*TKey::GetMotherDir() const; virtual const char*TNamed::GetName() const; Int_tTKey::GetNbytes() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); Int_tTKey::GetObjlen() const; virtual Option_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TKeyXML.html:1791,error,error,1791,root/html528/TKeyXML.html,https://root.cern,https://root.cern/root/html528/TKeyXML.html,6,['error'],['error']
Availability,":AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TEventIter*TEventIter::Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCacheSize(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLearnEntries(); virtual const char*TObject::GetName() const; virtual Long64_tGetNextEvent(); virtual Int_tGetNextPacket(Long64_t& first, Long64_t& num, TEntryList** enl = 0, TEventList** evl = 0); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TList*TEventIter::GetPackets(); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEventIterObj.html:1617,error,error,1617,root/html534/TEventIterObj.html,https://root.cern,https://root.cern/root/html534/TEventIterObj.html,9,['error'],['error']
Availability,":AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TEventIter*TEventIter::Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCacheSize(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLearnEntries(); virtual const char*TObject::GetName() const; virtual Long64_tGetNextEvent(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEventIterObj.html:1617,error,error,1617,root/html528/TEventIterObj.html,https://root.cern,https://root.cern/root/html528/TEventIterObj.html,9,['error'],['error']
Availability,":AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTParameter<Long64_t>::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TParameter<Long64_t>::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const Long64_t&TParameter<Long64_t>::GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTParameter<Long64_t>::Hash() const; voidInc(Long_t n = 1); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSelectorScalar.html:1665,error,error,1665,root/html602/TSelectorScalar.html,https://root.cern,https://root.cern/root/html602/TSelectorScalar.html,2,['error'],['error']
Availability,":AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTParameter<Long64_t>::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TParameter<Long64_t>::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const long long&TParameter<Long64_t>::GetVal() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTParameter<Long64_t>::Hash() const; voidInc(Long_t n = 1); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSelectorScalar.html:1741,error,error,1741,root/html532/TSelectorScalar.html,https://root.cern,https://root.cern/root/html532/TSelectorScalar.html,2,['error'],['error']
Availability,":Add ; (; Iterator ; begin, . Iterator ; end . ). inline . Accumulate from a range denoted by iterators. ; This function will auto-vectorise with random-access iterators. Parameters. [in]beginBeginning of a range. Needs to be a random access iterator for automatic vectorisation, because a contiguous block of memory needs to be read. ; [in]endEnd of the range. . Definition at line 180 of file Util.h. ◆ Add() [3/3]. template<typename T = double, unsigned int N = 1> . void ROOT::Math::KahanSum< T, N >::Add ; (; T ; x). inline . Single-element accumulation. Will not vectorise. ; Definition at line 165 of file Util.h. ◆ AddIndexed(). template<typename T = double, unsigned int N = 1> . void ROOT::Math::KahanSum< T, N >::AddIndexed ; (; T ; input, . std::size_t ; index . ). inline . Add input to the sum. ; Particularly helpful when filling from a for loop. This function can be inlined and auto-vectorised if the index parameter is used to enumerate consecutive fills. Use Add() or Accumulate() when no index is available. Parameters. [in]inputValue to accumulate. ; [in]indexIndex of the value. Determines internal accumulator that this value is added to. Make sure that consecutive fills have consecutive indices to make a loop auto-vectorisable. The actual value of the index does not matter, as long as it is consecutive. . Definition at line 231 of file Util.h. ◆ Carry(). template<typename T = double, unsigned int N = 1> . T ROOT::Math::KahanSum< T, N >::Carry ; (; ); const. inline . ReturnsThe sum used for compensation. ; Definition at line 250 of file Util.h. ◆ operator!=(). template<typename T = double, unsigned int N = 1> . template<typename U , unsigned int M> . bool ROOT::Math::KahanSum< T, N >::operator!= ; (; KahanSum< U, M > const & ; other); const. inline . Definition at line 310 of file Util.h. ◆ operator+=() [1/2]. template<typename T = double, unsigned int N = 1> . template<typename U , unsigned int M> . KahanSum< T, N > & ROOT::Math::KahanSum< T, N >::operator+= ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1KahanSum.html:9543,avail,available,9543,doc/master/classROOT_1_1Math_1_1KahanSum.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1KahanSum.html,1,['avail'],['available']
Availability,":Alt$(arr2,0)"");; will print on one line the value of arr1 and (arr2,0) that will be; matched by; tree->Draw(""arr1-Alt$(arr2,0)"");. The ternary operator is not directly support in TTree::Draw however, to plot the; equivalent of 'var2<20 ? -99 : var1', you can use:; tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");. Drawing a user function accessing the TTree data directly. If the formula contains a file name, TTree::MakeProxy will be used; to load and execute this file. In particular it will draw the; result of a function with the same name as the file. The function; will be executed in a context where the name of the branches can; be used as a C++ variable. For example draw px using the file hsimple.root (generated by the; hsimple.C tutorial), we need a file named hsimple.cxx:. double hsimple() {; return px;; }. MakeProxy can then be used indirectly via the TTree::Draw interface; as follow:; new TFile(""hsimple.root""); ntuple->Draw(""hsimple.cxx"");. A more complete example is available in the tutorials directory:; h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 2D Profile histogram. In case of a 3-Dim expression, one can generate a TProfile2D histogram; instead of a TH3F histogram by specifying option=prof or option=profs.; The option=prof is automatically selected in case of z:y:x>>pf; where pf is an existing TProfile2D histogram. Ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TTree.html:78270,avail,available,78270,root/html530/TTree.html,https://root.cern,https://root.cern/root/html530/TTree.html,2,['avail'],['available']
Availability,":Alt$(arr2,0)"");; will print on one line the value of arr1 and (arr2,0) that will be; matched by; tree->Draw(""arr1-Alt$(arr2,0)"");. The ternary operator is not directly support in TTree::Draw however, to plot the; equivalent of 'var2<20 ? -99 : var1', you can use:; tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");. Drawing a user function accessing the TTree data directly. If the formula contains a file name, TTree::MakeProxy will be used; to load and execute this file. In particular it will draw the; result of a function with the same name as the file. The function; will be executed in a context where the name of the branches can; be used as a C++ variable. For example draw px using the file hsimple.root (generated by the; hsimple.C tutorial), we need a file named hsimple.cxx:. double hsimple() {; return px;; }. MakeProxy can then be used indirectly via the TTree::Draw interface; as follow:; new TFile(""hsimple.root""); ntuple->Draw(""hsimple.cxx"");. A more complete example is available in the tutorials directory:; h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; which reimplement the selector found in h1analysis.C. The main features of this facility are:. * on-demand loading of branches; * ability to use the 'branchname' as if it was a data member; * protection against array out-of-bound; * ability to use the branch data as object (when the user code is available). See TTree::MakeProxy for more details. Making a Profile histogram. In case of a 2-Dim expression, one can generate a TProfile histogram; instead of a TH2F histogram by specyfying option=prof or option=profs.; The option=prof is automatically selected in case of y:x>>pf; where pf is an existing TProfile histogram. Making a 5D plot using GL. If option GL5D is specified together with 5 variables, a 5D plot is drawn; using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example. Making a parallel coordinates plot. In case of a 2-Dim or more expression with the option=para, one can generate; a paralle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:75981,avail,available,75981,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,1,['avail'],['available']
Availability,":AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidCleanTasks(); virtual voidClear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidContinue()MENU ; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidExec(Option_t* option); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExecuteTask(Option_t* option = ""0"")MENU ; virtual voidExecuteTasks(Option_t* option); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBreakin() const; Int_tGetBreakout() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfTasks() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTask.html:4350,error,error,4350,root/html528/TTask.html,https://root.cern,https://root.cern/root/html528/TTask.html,6,['error'],['error']
Availability,":AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual boolRooStats::ProposalFunction::CheckParameters(RooArgSet& params); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Double_tGetProposalDensity(RooArgSet& x1, RooArgSet& x2); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__UniformProposal.html:1922,error,error,1922,root/html526/RooStats__UniformProposal.html,https://root.cern,https://root.cern/root/html526/RooStats__UniformProposal.html,12,['error'],['error']
Availability,":AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual boolRooStats::ProposalFunction::CheckParameters(RooArgSet& params); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const RooAbsPdf*GetPdf() const; virtual Double_tGetProposalDensity(RooArgSet& x1, RooArgSet& x2); virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStats__PdfProposal.html:2768,error,error,2768,root/html526/RooStats__PdfProposal.html,https://root.cern,https://root.cern/root/html526/RooStats__PdfProposal.html,7,['error'],['error']
Availability,":BombTranslation(const Double_t *tr, Double_t *bombtr); 172{; 173 memcpy(bombtr, tr, 3 * sizeof(Double_t));; 174 switch (fExplodedView) {; 175 case kGeoNoBomb: return;; 176 case kGeoBombXYZ:; 177 bombtr[0] *= fBombX;; 178 bombtr[1] *= fBombY;; 179 bombtr[2] *= fBombZ;; 180 return;; 181 case kGeoBombCyl:; 182 bombtr[0] *= fBombR;; 183 bombtr[1] *= fBombR;; 184 bombtr[2] *= fBombZ;; 185 return;; 186 case kGeoBombSph:; 187 bombtr[0] *= fBombR;; 188 bombtr[1] *= fBombR;; 189 bombtr[2] *= fBombR;; 190 return;; 191 default: return;; 192 }; 193}; 194 ; 195////////////////////////////////////////////////////////////////////////////////; 196/// Check pushes and pulls needed to cross the next boundary with respect to the; 197/// position given by FindNextBoundary. If radius is not mentioned the full bounding; 198/// box will be sampled.; 199 ; 200void TGeoPainter::CheckBoundaryErrors(Int_t ntracks, Double_t radius); 201{; 202 fChecker->CheckBoundaryErrors(ntracks, radius);; 203}; 204 ; 205////////////////////////////////////////////////////////////////////////////////; 206/// Check the boundary errors reference file created by CheckBoundaryErrors method.; 207/// The shape for which the crossing failed is drawn with the starting point in red; 208/// and the extrapolated point to boundary (+/- failing push/pull) in yellow.; 209 ; 210void TGeoPainter::CheckBoundaryReference(Int_t icheck); 211{; 212 fChecker->CheckBoundaryReference(icheck);; 213}; 214 ; 215////////////////////////////////////////////////////////////////////////////////; 216/// Geometry checking method (see: TGeoManager::CheckGeometry()); 217 ; 218void TGeoPainter::CheckGeometryFull(Bool_t checkoverlaps, Bool_t checkcrossings, Int_t ntracks, const Double_t *vertex); 219{; 220 fChecker->CheckGeometryFull(checkoverlaps, checkcrossings, ntracks, vertex);; 221}; 222 ; 223////////////////////////////////////////////////////////////////////////////////; 224/// Geometry checking method (see TGeoChecker).; 225 ; 226void T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoPainter_8cxx_source.html:6442,error,errors,6442,doc/master/TGeoPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoPainter_8cxx_source.html,1,['error'],['errors']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TDictionary*Find(TListOfDataMembers::DeclId_t id) const; virtual TObject*FindObject(const char* name) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); TDictionary*Get(TListOfDataMembers::DeclId_t id); TDictionary*Get(DataMemberInfo_t* info, bool skipChecks = kFALSE); TClass*GetClass() const; static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TListOfDataMembers.html:2609,error,error,2609,root/html604/TListOfDataMembers.html,https://root.cern,https://root.cern/root/html604/TListOfDataMembers.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TEnum*Find(TListOfEnums::DeclId_t id) const; virtual TObject*THashList::FindObject(const char* name) const; virtual TObject*THashList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TListOfEnums.html:2560,error,error,2560,root/html604/TListOfEnums.html,https://root.cern,https://root.cern/root/html604/TListOfEnums.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TEnum*TListOfEnums::Find(TListOfEnums::DeclId_t id) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObject(const char* name) const; virtual TObject*First() const; virtual TObjLink*FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual TEnum*GetObject(const char*) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TListOfEnumsWithLock.html:2582,error,error,2582,root/html604/TListOfEnumsWithLock.html,https://root.cern,https://root.cern/root/html604/TListOfEnumsWithLock.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TFunction*Find(TListOfFunctions::DeclId_t id) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObject(const char* name) const; virtual TObject*First() const; virtual TObjLink*FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); TFunction*Get(TListOfFunctions::DeclId_t id); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; virtual TList*GetListForObject(const char* name) const; virtual TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TListOfFunctions.html:2571,error,error,2571,root/html604/TListOfFunctions.html,https://root.cern,https://root.cern/root/html604/TListOfFunctions.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObject(const char* name) const; virtual TObject*First() const; virtual TObjLink*FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); TFunction*Get(TListOfFunctions::DeclId_t id); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; virtual TList*GetListForObject(const char* name) const; virtual TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfFunctions.html:2571,error,error,2571,root/html602/TListOfFunctions.html,https://root.cern,https://root.cern/root/html602/TListOfFunctions.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObject(const char* name) const; virtual TObject*First() const; virtual TObjLink*FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual TEnum*GetObject(const char*) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfEnumsWithLock.html:2582,error,error,2582,root/html602/TListOfEnumsWithLock.html,https://root.cern,https://root.cern/root/html602/TListOfEnumsWithLock.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*FindObject(const char* name) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); TDictionary*Get(TListOfDataMembers::DeclId_t id); TDictionary*Get(DataMemberInfo_t* info, bool skipChecks = false); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfDataMembers.html:2609,error,error,2609,root/html602/TListOfDataMembers.html,https://root.cern,https://root.cern/root/html602/TListOfDataMembers.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*FindObject(const char* name) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); TFunctionTemplate*Get(TListOfFunctionTemplates::DeclId_t id); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; virtual TList*GetListForObject(const char* name) const; virtual TList*GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfFunctionTemplates.html:2632,error,error,2632,root/html602/TListOfFunctionTemplates.html,https://root.cern,https://root.cern/root/html602/TListOfFunctionTemplates.html,2,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); TIterTCollection::end() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*THashList::FindObject(const char* name) const; virtual TObject*THashList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*THashList::GetListForObject(const char* name) const; TList*THashList::GetListForObject(const TObject* obj) const; virtual const char*TCollection::GetName() const; virtual TEnum*GetObject(const char*) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TListOfEnums.html:2560,error,error,2560,root/html602/TListOfEnums.html,https://root.cern,https://root.cern/root/html602/TListOfEnums.html,1,['error'],['error']
Availability,":Browse(TBrowser* b); Int_tTCollection::Capacity() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTCollection::Clear(Option_t* option = """"); virtual TObject*TCollection::Clone(const char* newname = """") const; virtual Int_tTCollection::Compare(const TObject* obj) const; Bool_tTCollection::Contains(const char* name) const; Bool_tTCollection::Contains(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTCollection::Delete(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTCollection::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTCollection::Dump() const; static voidTCollection::EmptyGarbageCollection(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TCollection::FindObject(const char* name) const; virtual TObject*TCollection::FindObject(const TObject* obj) const; virtual TObject*First() const; static voidTCollection::GarbageCollect(TObject* obj); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tGetLast() const; virtual const char*TCollection::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TCollection::GetObjectRef(const TObject* obj) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual Int_tTC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSeqCollection.html:2328,error,error,2328,root/html530/TSeqCollection.html,https://root.cern,https://root.cern/root/html530/TSeqCollection.html,3,['error'],['error']
Availability,":Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tEval(Double_t x) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Double_tGetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; TH1F*GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual voidGetKnot(Int_t i, Double_t& x, Double_t& y) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpline.html:1730,error,error,1730,root/html528/TSpline.html,https://root.cern,https://root.cern/root/html528/TSpline.html,6,['error'],['error']
Availability,":Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; boolCompareHisto(const TH1* one, const TH1* two) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; RooStats::HistFactory::EstimateSummaryEstimateSummary(); RooStats::HistFactory::EstimateSummaryEstimateSummary(const RooStats::HistFactory::EstimateSummary&); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__HistFactory__EstimateSummary.html:1632,error,error,1632,root/html528/RooStats__HistFactory__EstimateSummary.html,https://root.cern,https://root.cern/root/html528/RooStats__HistFactory__EstimateSummary.html,6,['error'],['error']
Availability,":CallFunc_SetFuncProtovirtual void CallFunc_SetFuncProto(CallFunc_t *, ClassInfo_t *, const char *, const char *, bool, Longptr_t *, ROOT::EFunctionMatchMode=ROOT::kConversionMatch) constDefinition TInterpreter.h:392; TInterpreter::SnapshotMutexStatevirtual void SnapshotMutexState(ROOT::TVirtualRWMutex *mtx)=0; TInterpreter::MethodInfo_Factoryvirtual MethodInfo_t * MethodInfo_Factory(ClassInfo_t *) constDefinition TInterpreter.h:489; TInterpreter::CreateListOfMethodsvirtual void CreateListOfMethods(TClass *cl) const =0; TInterpreter::TypeInfo_Sizevirtual int TypeInfo_Size(TypeInfo_t *) constDefinition TInterpreter.h:533; TInterpreter::MethodInfo_FactoryCopyvirtual MethodInfo_t * MethodInfo_FactoryCopy(MethodInfo_t *) constDefinition TInterpreter.h:491; TInterpreter::Executevirtual void Execute(TObject *obj, TClass *cl, TMethod *method, TObjArray *params, int *error=nullptr)=0; TInterpreter::SetGetlinevirtual void SetGetline(const char *(*getlineFunc)(const char *prompt), void(*histaddFunc)(const char *line))=0; TInterpreter::ClassInfo_IsValidMethodvirtual Bool_t ClassInfo_IsValidMethod(ClassInfo_t *, const char *, const char *, Bool_t, Longptr_t *, ROOT::EFunctionMatchMode=ROOT::kConversionMatch) constDefinition TInterpreter.h:423; TInterpreter::MethodInfo_Namevirtual const char * MethodInfo_Name(MethodInfo_t *) constDefinition TInterpreter.h:503; TInterpreter::ClassInfo_GetMethodNArgvirtual int ClassInfo_GetMethodNArg(ClassInfo_t *, const char *, const char *, Bool_t=false, ROOT::EFunctionMatchMode=ROOT::kConversionMatch) constDefinition TInterpreter.h:411; TInterpreter::UpdateListOfTypesvirtual void UpdateListOfTypes()=0; TInterpreter::DataMemberInfo_Factoryvirtual DataMemberInfo_t * DataMemberInfo_Factory(DeclId_t declid, ClassInfo_t *clinfo) const =0; TInterpreter::GetClassSharedLibsvirtual const char * GetClassSharedLibs(const char *cls, bool skipCore=true)=0; TInterpreter::MethodArgInfo_FactoryCopyvirtual MethodArgInfo_t * MethodArgInfo_FactoryCopy(MethodArgInf",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:62766,error,error,62766,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,1,['error'],['error']
Availability,":ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; RooPlot*contour(RooRealVar& var1, RooRealVar& var2, Double_t n1 = 1, Double_t n2 = 2, Double_t n3 = 0, Double_t n4 = 0, Double_t n5 = 0, Double_t n6 = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Int_tevalCounter() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooFitResult*fit(const char* options); ROOT::Fit::Fitter*fitter(); const ROOT::Fit::Fitter*fitter() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Int_thesse(); Int_timprove(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinimizer.html:2587,error,error,2587,root/html534/RooMinimizer.html,https://root.cern,https://root.cern/root/html534/RooMinimizer.html,3,['error'],['error']
Availability,":ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; RooPlot*contour(RooRealVar& var1, RooRealVar& var2, Double_t n1 = 1, Double_t n2 = 2, Double_t n3 = 0, Double_t n4 = 0, Double_t n5 = 0, Double_t n6 = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Int_tevalCounter() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooFitResult*fit(const char* options); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Int_thesse(); Int_timprove(); virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMinuit.html:2457,error,error,2457,root/html530/RooMinuit.html,https://root.cern,https://root.cern/root/html530/RooMinuit.html,5,['error'],['error']
Availability,":ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; RooWorkspace::CodeRepoCodeRepo(RooWorkspace* wspace = 0); RooWorkspace::CodeRepoCodeRepo(const RooWorkspace::CodeRepo& other, RooWorkspace* wspace = 0); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tcompileClasses(); Bool_tcompiledOK() const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooWorkspace__CodeRepo.html:2627,error,error,2627,root/html534/RooWorkspace__CodeRepo.html,https://root.cern,https://root.cern/root/html534/RooWorkspace__CodeRepo.html,3,['error'],['error']
Availability,":ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; PyObject*Dispatch(); PyObject*Dispatch(const char* param); PyObject*Dispatch(Double_t param); PyObject*Dispatch(Long_t param); PyObject*Dispatch(Long64_t param); PyObject*DispatchVA(const char* format); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPyDispatcher.html:1778,error,error,1778,root/html528/TPyDispatcher.html,https://root.cern,https://root.cern/root/html528/TPyDispatcher.html,3,['error'],['error']
Availability,":Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTFileCacheRead::Close(Option_t* option = """"); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDisable(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Int_tDropBranch(TBranch* b, Bool_t subbranches = kFALSE); virtual Int_tDropBranch(const char* branch, Bool_t subbranches = kFALSE); virtual voidTObject::Dump() constMENU ; virtual voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Bool_tFillBuffer(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTFileCacheRead::GetBufferSize() const; virtual Long64_tTFileCacheRead::GetBytesRead() const; virtual Long64_tTFileCacheRead::GetBytesReadExtra() const; const TObjArray*GetCachedBranches() const; TTreeCache::EPrefillTypeGetConfiguredPrefillType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEfficiency() const; Double_tGetEfficiencyRel() const; virtual Int_tGetEntryMax() const; virtual Int_tGetEntryMin() const; TFile*TFileCacheRead::GetFile() const; virtual const char*TObject::GetIconName() const; static Int_tGetLearnEntries(); virtual TTreeCache::EPrefillTypeGetLearnPrefill() const; virtual const char*TObject::GetName(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeCache.html:10854,error,error,10854,root/html604/TTreeCache.html,https://root.cern,https://root.cern/root/html604/TTreeCache.html,1,['error'],['error']
Availability,":Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* options = 0); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidDumpToFile(const char* RootFileName, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TH1*GetHistogram(const RooStats::SamplingDistribution* samplDist = __null); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooPlot*GetPlot(); TH1F*GetTH1F(const RooStats::SamplingDistribution* samplDist = __null); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__SamplingDistPlot.html:2330,error,error,2330,root/html604/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html604/RooStats__SamplingDistPlot.html,1,['error'],['error']
Availability,":Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* options = 0); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidDumpToFile(const char* RootFileName, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1F*GetTH1F(const RooStats::SamplingDistribution* samplDist = NULL); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__SamplingDistPlot.html:2326,error,error,2326,root/html534/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html534/RooStats__SamplingDistPlot.html,1,['error'],['error']
Availability,":Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* options = 0); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidDumpToFile(const char* RootFileName, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1F*GetTH1F(const RooStats::SamplingDistribution* samplDist = __null); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__SamplingDistPlot.html:2330,error,error,2330,root/html602/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html602/RooStats__SamplingDistPlot.html,1,['error'],['error']
Availability,":Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* options = 0); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidDumpToFile(const char* RootFileName, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TH1F*GetTH1F(const RooStats::SamplingDistribution* samplDist); virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooStats__SamplingDistPlot.html:2200,error,error,2200,root/html528/RooStats__SamplingDistPlot.html,https://root.cern,https://root.cern/root/html528/RooStats__SamplingDistPlot.html,3,['error'],['error']
Availability,":Clone(const char* newname = """") const; virtual RooAbsDataStore*clone(const RooArgSet& vars, const char* newname = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tdefaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Int_tfill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*get() const; virtual const RooArgSet*get(Int_t index) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); Bool_thasFilledCache() const; virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* m",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsDataStore.html:2463,error,error,2463,root/html526/RooAbsDataStore.html,https://root.cern,https://root.cern/root/html526/RooAbsDataStore.html,3,['error'],['error']
Availability,":Clone(const char* newname = """") const; virtual voidTFileCacheRead::Close(Option_t* option = """"); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTTreeCache::Disable(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Int_tTTreeCache::DropBranch(TBranch* b, Bool_t subbranches = kFALSE); virtual Int_tTTreeCache::DropBranch(const char* branch, Bool_t subbranches = kFALSE); virtual voidTObject::Dump() constMENU ; virtual voidTTreeCache::Enable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Bool_tFillBuffer(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTFileCacheRead::GetBufferSize() const; virtual Long64_tTFileCacheRead::GetBytesRead() const; virtual Long64_tTFileCacheRead::GetBytesReadExtra() const; const TObjArray*TTreeCache::GetCachedBranches() const; TTreeCache::EPrefillTypeTTreeCache::GetConfiguredPrefillType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tTTreeCache::GetEfficiency() const; Double_tTTreeCache::GetEfficiencyRel() const; virtual Int_tTTreeCache::GetEntryMax() const; virtual Int_tTTreeCache::GetEntryMin() const; TFile*TFileCacheRead::GetFile() const; virtual const char*TObject::GetIconName() const; static Int_tTTreeCache::GetLearnEntries(); virtual T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeCacheUnzip.html:2780,error,error,2780,root/html604/TTreeCacheUnzip.html,https://root.cern,https://root.cern/root/html604/TTreeCacheUnzip.html,1,['error'],['error']
Availability,":CreateAuthSocket(""qwerty"",""rootdps://machine.fq.dn"",5051). creates an authenticated socket to a rootd server running; on remote machine machine.fq.dn on port 5051; ""parallel""; sockets are forced internally because rootd expects; parallel sockets; however a simple socket will be created; in this case because the size is 0 (the default);; authentication will attempt protocol SRP first. TSocket::CreateAuthSocket(""qwerty"",""pk://machine.fq.dn:5052"",3). creates an authenticated parallel socket of size 3 to a sockd; server running on remote machine machine.fq.dn on port 5052;; authentication will attempt protocol Kerberos first. NB: may hang if the remote server is not of the correct type;; at present TSocket has no way to find out the type of the; remote server automatically. Returns pointer to an authenticated socket or 0 if creation or; authentication is unsuccessful. Int_t GetClientProtocol(); Static method returning supported client protocol. void NetError(const char* where, Int_t error); Print error string depending on error code. ULong64_t GetSocketBytesSent(); Get total number of bytes sent via all sockets. ULong64_t GetSocketBytesRecv(); Get total number of bytes received via all sockets. Int_t GetCompressionAlgorithm() const. Int_t GetCompressionLevel() const. Int_t GetCompressionSettings() const. friend class TProofServ; // to be able to call SetDescriptor(). TSocket(); { }. TSocket& operator=(const TSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. virtual ~TSocket(); { Close(); }. Int_t GetDescriptor() const; { return fSocket; }. TInetAddress GetInetAddress() const; { return fAddress; }. Int_t GetPort() const; { return fAddress.GetPort(); }. const char * GetService() const; { return fService; }. Int_t GetServType() const; { return (Int_t)fServType; }. UInt_t GetBytesSent() const; { return fBytesSent; }. UInt_t GetBytesRecv() const; { return fBytesRecv; }. Int_t GetRemoteProtocol() const; { return fRemoteProtocol; }. TSecContext * GetSe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TSocket.html:24606,error,error,24606,root/html530/TSocket.html,https://root.cern,https://root.cern/root/html530/TSocket.html,15,['error'],['error']
Availability,":CreateAuthSocket(""qwerty"",""rootdps://machine.fq.dn"",5051). creates an authenticated socket to a rootd server running; on remote machine machine.fq.dn on port 5051; ""parallel""; sockets are forced internally because rootd expects; parallel sockets; however a simple socket will be created; in this case because the size is 0 (the default);; authentication will attempt protocol SRP first. TSocket::CreateAuthSocket(""qwerty"",""pk://machine.fq.dn:5052"",3). creates an authenticated parallel socket of size 3 to a sockd; server running on remote machine machine.fq.dn on port 5052;; authentication will attempt protocol Kerberos first. NB: may hang if the remote server is not of the correct type;; at present TSocket has no way to find out the type of the; remote server automatically. Returns pointer to an authenticated socket or 0 if creation or; authentication is unsuccessful. Int_t GetClientProtocol(); Static method returning supported client protocol. void NetError(const char* where, Int_t error); Print error string depending on error code. ULong64_t GetSocketBytesSent(); Get total number of bytes sent via all sockets. ULong64_t GetSocketBytesRecv(); Get total number of bytes received via all sockets. friend class TProofServ; // to be able to call SetDescriptor(). TSocket(); { }. TSocket& operator=(const TSocket& ). Option_t * GetOption() const; { return TObject::GetOption(); }. virtual ~TSocket(); { Close(); }. Int_t GetDescriptor() const; { return fSocket; }. TInetAddress GetInetAddress() const; { return fAddress; }. Int_t GetPort() const; { return fAddress.GetPort(); }. const char * GetService() const; { return fService; }. Int_t GetServType() const; { return (Int_t)fServType; }. UInt_t GetBytesSent() const; { return fBytesSent; }. UInt_t GetBytesRecv() const; { return fBytesRecv; }. Int_t GetCompressionLevel() const; { return fCompress; }. Int_t GetRemoteProtocol() const; { return fRemoteProtocol; }. TSecContext * GetSecContext() const; { return fSecContext; }. Int_t GetTc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSocket.html:23156,error,error,23156,root/html528/TSocket.html,https://root.cern,https://root.cern/root/html528/TSocket.html,3,['error'],['error']
Availability,":CreateAuthSocket(const char* url, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); static TSocket*TSocket::CreateAuthSocket(const char* user, const char* host, Int_t port, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); voidTXSocket::CtrlC(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTXSocket::DisableTimeout(); voidTXSocket::DisconnectSession(Int_t id, Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTXSocket::DoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidTXSocket::EnableTimeout(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTXSocket::Flush(); UInt_tTSocket::GetBytesRecv() const; UInt_tTSocket::GetBytesSent() const; virtual Int_tGetClientID() const; virtual Int_tGetClientIDSize() const; static Int_tTSocket::GetClientProtocol(); Int_tTSocket::GetCompressionAlgorithm() const; Int_tTSocket::GetCompressionLevel() const; Int_tTSocket::GetCompressionSettings() const; virtual Int_tTSocket::GetDescriptor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tTSocket::GetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressTSocket::GetInetAd",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXUnixSocket.html:2151,error,error,2151,root/html530/TXUnixSocket.html,https://root.cern,https://root.cern/root/html530/TXUnixSocket.html,5,['error'],['error']
Availability,":Debug() const; virtual voidTTree::Delete(Option_t* option = """")MENU ; virtual voidDirectoryAutoAdd(TDirectory*); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* opt); virtual Long64_tDraw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0); virtual Long64_tDraw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTTree::DropBaskets(); virtual voidTTree::DropBuffers(Int_t nbytes); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Int_tFill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TBranch*FindBranch(const char* name); virtual TLeaf*FindLeaf(const char* name); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTTree::Fit(const char* funcname, const char* varexp, const char* selection = """", Option_t* option = """", Option_t* goption = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0)MENU ; virtual Int_tTTree::FlushBaskets() const; virtual const char*GetAlias(const char* aliasName) const; virtual Long64_tTTree::GetAutoFlush() const; virtual Long64_tTTree::GetAutoSave() const; virtual TBranch*GetBranch(const char* name); virtual TBranchRef*TTree::GetBranchRef() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TChain.html:4682,error,error,4682,root/html526/TChain.html,https://root.cern,https://root.cern/root/html526/TChain.html,3,['error'],['error']
Availability,":Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidDrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawFrame(Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light); virtual voidDrawPolyMarker(Int_t n, Float_t* x, Float_t* y); virtual voidDrawPolyMarker(Int_t n, Double_t* x, Double_t* y); virtual voidDrawPS(Int_t n, Float_t* xw, Float_t* yw); virtual voidDrawPS(Int_t n, Double_t* xw, Double_t* yw); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; TImage*GetImage() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TImageDump.html:2429,error,error,2429,root/html528/TImageDump.html,https://root.cern,https://root.cern/root/html528/TImageDump.html,6,['error'],['error']
Availability,":Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidDrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawFrame(Double_t xl, Double_t yl, Double_t xt, Double_t yt, Int_t mode, Int_t border, Int_t dark, Int_t light); virtual voidDrawPolyMarker(Int_t n, Float_t* x, Float_t* y); virtual voidDrawPolyMarker(Int_t n, Double_t* x, Double_t* y); virtual voidDrawPS(Int_t n, Float_t* xw, Float_t* yw); virtual voidDrawPS(Int_t n, Double_t* xw, Double_t* yw); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Color_tTAttMarker::GetMarkerColor() const; virtual Size_tTAttMarker::GetMarkerSize() const; virtual Style_tTAttMarker::GetMarkerStyle() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualPS.html:2299,error,error,2299,root/html528/TVirtualPS.html,https://root.cern,https://root.cern/root/html528/TVirtualPS.html,6,['error'],['error']
Availability,":DisableGoAsyn ; (; ). Signal to disable related switches. ; Definition at line 6259 of file TProof.cxx. ◆ DisablePackage(). Int_t TProof::DisablePackage ; (; const char * ; pack). private . Remove a specific package. ; Returns 0 in case of success and -1 in case of error. ; Definition at line 7885 of file TProof.cxx. ◆ DisablePackages(). Int_t TProof::DisablePackages ; (; ). private . Remove all packages. ; Returns 0 in case of success and -1 in case of error. ; Definition at line 7942 of file TProof.cxx. ◆ DownloadPackage(). Int_t TProof::DownloadPackage ; (; const char * ; pack, . const char * ; dstdir = 0 . ). Download a PROOF archive (PAR file) from the master package repository. ; The PAR file is downloaded in the current directory or in the directory specified by 'dstdir'. If a package with the same name already exists at destination, a check on the MD5 sum is done and the user warned or prompted for action, depending is the file is equal or different. Returns 0 in case of success and -1 in case of error. ; Definition at line 8334 of file TProof.cxx. ◆ DrawSelect() [1/2]. Long64_t TProof::DrawSelect ; (; const char * ; dsetname, . const char * ; varexp, . const char * ; selection = """", . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0, . TObject * ; enl = 0 . ). Execute the specified drawing action on a data set which is stored on the master with name 'dsetname'. ; The syntax for dsetname is name[#[dir/]objname], e.g. ""mydset"" analysis of the first tree in the top dir of the dataset named ""mydset"" ""mydset#T"" analysis tree ""T"" in the top dir of the dataset named ""mydset"" ""mydset#adir/T"" analysis tree ""T"" in the dir ""adir"" of the dataset named ""mydset"" ""mydset#adir/"" analysis of the first tree in the dir ""adir"" of the dataset named ""mydset"" The last argument 'enl' specifies an entry- or event-list to be used as event selection. The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Definition at ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:83545,error,error,83545,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['error'],['error']
Availability,":DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTPave::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTPaveLabel::Draw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual voidDrawClasses(const char* classes = ""this"")MENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTPaveLabel::DrawPaveLabel(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* label, Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPave::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTPave::GetBorderSize() const; TClassTree*GetClassTree() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; const char*TPaveLabel::GetLabel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Option_t*TPave::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TPave::GetOption() const; Int_tTPave::GetShadowC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPaveClass.html:2416,error,error,2416,root/html528/TPaveClass.html,https://root.cern,https://root.cern/root/html528/TPaveClass.html,3,['error'],['error']
Availability,":DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTPave::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTPaveLabel::Draw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual voidDrawClasses(const char* classes = ""this"")MENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTPaveLabel::DrawPaveLabel(Double_t x1, Double_t y1, Double_t x2, Double_t y2, const char* label, Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPave::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tTBox::GetBBox(); virtual TPointTBox::GetBBoxCenter(); Int_tTPave::GetBorderSize() const; TClassTree*GetClassTree() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; const char*TPaveLabel::GetLabel() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual Option_t*TPave::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPaveClass.html:2416,error,error,2416,root/html534/TPaveClass.html,https://root.cern,https://root.cern/root/html534/TPaveClass.html,3,['error'],['error']
Availability,":Divide. The function return kFALSE if the divide operation failed. Bool_t Divide(const TH1* h1); Divide this histogram by h1. this = this/h1; if errors are defined (see TH1::Sumw2), errors are also recalculated.; Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; if not already set.; The resulting errors are calculated assuming uncorrelated histograms.; See the other TH1::Divide that gives the possibility to optionally; compute binomial errors. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Scale. The function return kFALSE if the divide operation failed. Bool_t Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """"); Replace contents of this histogram by the division of h1 by h2. this = c1*h1/(c2*h2). if errors are defined (see TH1::Sumw2), errors are also recalculated; Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; if not already set.; The resulting errors are calculated assuming uncorrelated histograms.; However, if option =""B"" is specified, Binomial errors are computed.; In this case c1 and c2 do not make real sense and they are ignored. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Divide. Please note also that in the binomial case errors are calculated using standard; binomial statistics, which means when b1 = b2, the error is zero.; If you prefer to have efficiency errors not going to zero when the efficiency is 1, you must; use the function TGraphAsymmErrors::BayesDivide, which will return an asymmetric and non-zero lower; error for the case b1=b2. The function return kFALSE if the divide operation failed. void Draw(Option_t* option = """"); Draw this histogram with options. Histogram",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:64729,error,errors,64729,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,4,['error'],['errors']
Availability,":EEditMode { kEditEnable; kEditDisable; kEditDisableEvents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth; kEditDisableBtnEnable; kEditDisableKeyEnable; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; TEveGValuator*fConeL; TEveGValuator*fConeR; Int_tTGFrame::fDNDStateEDNDFlags; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGedEditor*TGedFrame::fGedEditormanager of this frame; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveArrow*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::fModelClassclass corresponding to instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveArrowEditor.html:17349,mask,mask,17349,root/html528/TEveArrowEditor.html,https://root.cern,https://root.cern/root/html528/TEveArrowEditor.html,4,['mask'],['mask']
Availability,":EReadType type = kReadOpt); TPBReadType(const TPBReadType&); virtual~TPBReadType(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; TPBReadType::EReadTypeGetType() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPBReadType.html:1406,error,error,1406,root/html530/TPBReadType.html,https://root.cern,https://root.cern/root/html530/TPBReadType.html,3,['error'],['error']
Availability,":EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TFileHandler::(anonymous)kRead; static TObject::(anonymous)TObject::kSingleKey; static TFileHandler::(anonymous)kWrite; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. intfFileNumFile descriptor; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; intfMaskEvent interest mask, either bit 1 (read), 2 (write) or both can be set; intfReadyMaskReadiness mask, either bit 1 (read), 2 (write) or both can be set; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileHandler(int fd, int mask); Create a file descriptor event handler. If mask=kRead then we; want to monitor the file for read readiness, if mask=kWrite; then we monitor the file for write readiness, if mask=kRead|kWrite; then we monitor both read and write readiness. Bool_t Notify(); Notify when event occured on descriptor associated with this handler. Bool_t ReadNotify(); Notify when something can be read from the descriptor associated with; this handler. Bool_t WriteNotify(); Notify when something can be written to the descriptor associated with; this handler. Bool_t HasReadInterest(); True if handler is interested in read events. Bool_t HasWriteInterest(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFileHandler.html:9924,mask,mask,9924,root/html602/TFileHandler.html,https://root.cern,https://root.cern/root/html602/TFileHandler.html,4,['mask'],['mask']
Availability,":EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Int_t*fCoordBuf! Temporary buffer; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum(anonymous)THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TNDArrayT<Double_t>fSumw2bin error, lazy allocation happens in TNDArrayT; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension; static THnBase::(anonymous)THnBase::kInvalidInt; static THnBase::(anonymous)THnBase::kNoInt; static THnBase::(anonymous)THnBase::kValidInt. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THn(const char* name, const char* title, Int_t dim, const Int_t* nbins, const Double_t* xmin, const Double_t* xmax); Construct a THn. ~THn(); Destruct a THn. ROOT::THnBaseBinIter* CreateIter(Bool_t respectAxisRange) const; Create an iterator over all bins. Public interface is THnIter. void Sumw2(); Enable calculation of errors. void AllocCoordBuf() const; Create the coordinate buffer. Outlined to hide allocation; from inlined functions. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THn.html:13487,error,error,13487,root/html602/THn.html,https://root.cern,https://root.cern/root/html602/THn.html,4,['error'],"['error', 'errors']"
Availability,":Emit(const char* signal, Double_t param); voidTQObject::Emit(const char* signal, Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidEndScene(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; Bool_tTGLViewerBase::FindClosestOpaqueRecord(TGLSelectRecord& rec, Int_t& recIdx); Bool_tTGLViewerBase::FindClosestOverlayRecord(TGLOvlSelectRecord& rec, Int_t& recIdx); Bool_tTGLViewerBase::FindClosestRecord(TGLSelectRecord& rec, Int_t& recIdx); TGLLogicalShape*TGLViewerBase::FindLogicalInScenes(TObject* id); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGLAutoRotator*GetAutoRotator(); TGLCameraOverlay*GetCameraOverlay() const; Bool_tGetClipAutoUpdate() const; TGLClipSet*GetClipSet() const; TGLOverlayElement*GetCurrentOvlElm() const; static TGLColorSet&GetDefaultColorSet(); Int_tGetDev() const; TGLViewer::EDragActionGetDragAction() const; Bool_tGetDrawCameraCenter(); virtual Option_t*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLViewer.html:5919,error,error,5919,root/html528/TGLViewer.html,https://root.cern,https://root.cern/root/html528/TGLViewer.html,4,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); static voidTCollection::EmptyGarbageCollection(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TList::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TQCommand*GetCommand(); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*GetName() const; Int_tGetNRargs() const; Int_tGetNUargs() const; void*GetObject() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; virtual TObject**TLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQCommand.html:7791,error,error,7791,root/html528/TQCommand.html,https://root.cern,https://root.cern/root/html528/TQCommand.html,1,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); static voidTCollection::EmptyGarbageCollection(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TList::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TQCommand*GetCommand(); static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*GetName() const; Int_tGetNRargs() const; Int_tGetNUargs() const; void*GetObject() const; virtual char*TObject::GetObjectInfo(I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQCommand.html:7795,error,error,7795,root/html530/TQCommand.html,https://root.cern,https://root.cern/root/html530/TQCommand.html,3,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); static voidTCollection::EmptyGarbageCollection(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TList::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TQCommand*TQCommand::GetCommand(); TQCommand*GetCurrent() const; static TCollection*TCollection::GetCurrentCollection(); TQCommand*GetCursor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; UInt_tGetLimit() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TQCommand::GetName() const; Int_tTQCommand::GetNRargs() const; Int_tTQCommand:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQUndoManager.html:7709,error,error,7709,root/html528/TQUndoManager.html,https://root.cern,https://root.cern/root/html528/TQUndoManager.html,1,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); static voidTCollection::EmptyGarbageCollection(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TList::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); static TQCommand*TQCommand::GetCommand(); TQCommand*GetCurrent() const; static TCollection*TCollection::GetCurrentCollection(); TQCommand*GetCursor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; UInt_tGetLimit() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TQCommand::GetName() const; Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQUndoManager.html:7713,error,error,7713,root/html530/TQUndoManager.html,https://root.cern,https://root.cern/root/html530/TQUndoManager.html,3,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); static voidTCollection::EmptyGarbageCollection(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidExecuteMethod(); voidExecuteMethod(Long_t param); voidExecuteMethod(Long64_t param); voidExecuteMethod(Double_t param); voidExecuteMethod(const char* params); voidExecuteMethod(Int_t nargs, va_list va); voidExecuteMethod(Long_t* params, Int_t nparam = -1); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TList::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); const char*GetClassName() const; static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQConnection.html:5121,error,error,5121,root/html528/TQConnection.html,https://root.cern,https://root.cern/root/html528/TQConnection.html,1,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); static voidTCollection::EmptyGarbageCollection(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidExecuteMethod(); voidExecuteMethod(Long_t param); voidExecuteMethod(Long64_t param); voidExecuteMethod(Double_t param); voidExecuteMethod(const char* params); voidExecuteMethod(Int_t nargs, va_list va); voidExecuteMethod(Long_t* params, Int_t nparam = -1); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TList::FindObject(const char* name) const; virtual TObject*TList::FindObject(const TObject* obj) const; virtual TObject*TList::First() const; virtual TObjLink*TList::FirstLink() const; static voidTCollection::GarbageCollect(TObject* obj); const char*GetClassName() const; static TCollection*TCollection::GetCurrentCollection(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tTCollection::GetEntries() const; virtual const char*TObject::GetIconName() const; virtual Int_tTSeqCollection::GetLast() const; TList*TQObject::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TQConnection.html:5125,error,error,5125,root/html530/TQConnection.html,https://root.cern,https://root.cern/root/html530/TQConnection.html,3,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; char*TClass::EscapeChars(const char* text) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); TVirtualStreamerInfo*TClass::FindConversionStreamerInfo(const char* onfile_classname, UInt_t checksum) const; TVirtualStreamerInfo*TClass::FindConversionStreamerInfo(const TClass* onfile_cl, UInt_t checksum) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TVirtualStreamerInfo*TClass::FindStreamerInfo(UInt_t checksum) const; TClass*TClass::GetActualClass(const void* object) const; TClass*TClass::GetBaseClass(const char* classname); TClass*TClass::GetBaseClass(const TClass* base); Int_tTClass::GetBaseClassOffset(const TClass* base); TClass*TClass::GetBaseDataMember(const char* datamember); UInt_tTClass::GetCheckSum(UInt_t code = 0) const; static TClass*TClass::GetClass(const char* name, Bool_t load = kTRUE, Bool",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQClass.html:6018,error,error,6018,root/html528/TQClass.html,https://root.cern,https://root.cern/root/html528/TQClass.html,3,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; char*TClass::EscapeChars(const char* text) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); TVirtualStreamerInfo*TClass::FindConversionStreamerInfo(const char* onfile_classname, UInt_t checksum) const; TVirtualStreamerInfo*TClass::FindConversionStreamerInfo(const TClass* onfile_cl, UInt_t checksum) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TVirtualStreamerInfo*TClass::FindStreamerInfo(UInt_t checksum) const; TVirtualStreamerInfo*TClass::FindStreamerInfoAbstractEmulated(UInt_t checksum) const; TClass*TClass::GetActualClass(const void* object) const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TClass*TClass::GetBaseClass(const char* classname); TClass*TClass::GetBaseClass(const TClass* base); Int_tTClass::GetBaseClassOffset(const TClass* base); TClass*TClass::GetBaseDataMember(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TQClass.html:6021,error,error,6021,root/html534/TQClass.html,https://root.cern,https://root.cern/root/html534/TQClass.html,1,['error'],['error']
Availability,":Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); virtual voidEnableCursorWithoutFocus(Bool_t on = kTRUE); virtual voidEnableMenu(Bool_t on = kTRUE)TOGGLE GETTER ; virtual voidEnd(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFindAgain()SIGNAL ; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGViewFrame*TGView::GetCanvas() const; TGClient*TGObject::GetClient() const; const char*TGWidget::GetCommand() const; static Int_tTGWindow::GetCounter(); TGLongPositionGetCurrentPos() const; static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGTextEdit.html:4942,error,error,4942,root/html602/TGTextEdit.html,https://root.cern,https://root.cern/root/html602/TGTextEdit.html,2,['error'],['error']
Availability,":Fit::FitResult::fChi2fit chi2 value (different than fval in case of chi2 fits); vector<double>ROOT::Fit::FitResult::fCovMatrixcovariance matrix (size is npar*(npar+1)/2) where npar is total parameters; intROOT::Fit::FitResult::fCovStatuscovariance matrix status code; doubleROOT::Fit::FitResult::fEdmexpected distance from mimimum; vector<double>ROOT::Fit::FitResult::fErrorserrors; ROOT::Fit::FitResult::IModelFunction*ROOT::Fit::FitResult::fFitFunc! model function resulting from the fit. It is given by Fitter but it is managed by FitResult; map<unsigned int,bool>ROOT::Fit::FitResult::fFixedParamslist of fixed parameters; vector<double>ROOT::Fit::FitResult::fGlobalCCglobal Correlation coefficient; stringROOT::Fit::FitResult::fMinimTypestring indicating type of minimizer; map<unsigned int,pair<double,double> >ROOT::Fit::FitResult::fMinosErrorsmap contains the two Minos errors; unsigned intROOT::Fit::FitResult::fNCallsnumber of function calls; unsigned intROOT::Fit::FitResult::fNFreenumber of fit free parameters (total parameters are in size of parameter vector); TStringTNamed::fNameobject identifier; unsigned intROOT::Fit::FitResult::fNdfnumber of degree of freedom; boolROOT::Fit::FitResult::fNormalizedflag for indicating is errors are normalized; vector<string>ROOT::Fit::FitResult::fParNamesparameter names (only with FCN only fits, when fFitFunc=0); vector<pair<double,double> >ROOT::Fit::FitResult::fParamBoundsparameter bounds; vector<double>ROOT::Fit::FitResult::fParamsparameter values. Size is total number of parameters; intROOT::Fit::FitResult::fStatusminimizer status code; TStringTNamed::fTitleobject title; doubleROOT::Fit::FitResult::fValminimum function value; boolROOT::Fit::FitResult::fValidflag for indicating valid fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFitResult(const ROOT::Fit::FitResult& f); constructor from an IFitResult; copy the contained TF1 pointer function if it is. void Print(Option_t* option =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFitResult.html:10294,error,errors,10294,root/html602/TFitResult.html,https://root.cern,https://root.cern/root/html602/TFitResult.html,2,['error'],['errors']
Availability,":FitResult::Ndfunsigned int Ndf() constNumber of degree of freedom.Definition FitResult.h:156; ROOT::Fit::FitResult::Chi2double Chi2() constReturn the Chi2 value after fitting In case of unbinned fits (or not defined one, see the documentati...Definition FitResult.h:153; ROOT::Fit::FitResult::fParamsstd::vector< double > fParamsparameter values. Size is total number of parametersDefinition FitResult.h:360; ROOT::Fit::FitResult::fCovMatrixstd::vector< double > fCovMatrixcovariance matrix (size is npar*(npar+1)/2) where npar is total parametersDefinition FitResult.h:362; ROOT::Fit::FitResult::SetMinosErrorvoid SetMinosError(unsigned int i, double elow, double eup)set the Minos errors for parameter i (called by the Fitter class when running Minos)Definition FitResult.cxx:346; ROOT::Fit::FitResult::Printvoid Print(std::ostream &os, bool covmat=false) constprint the result and optionally covariance matrix and correlationsDefinition FitResult.cxx:389; ROOT::Fit::FitResult::LowerErrordouble LowerError(unsigned int i) constlower Minos error. If Minos has not run for parameter i return the parabolic errorDefinition FitResult.cxx:332; ROOT::Fit::FitResult::~FitResultvirtual ~FitResult()Destructor.Definition FitResult.h:69; ROOT::Fit::FitResult::ModelFunctionstd::shared_ptr< IModelFunction > ModelFunction()Return pointer non const pointer to model (fit) function with fitted parameter values.Definition FitResult.h:337; ROOT::Fit::FitResult::PrintCovMatrixvoid PrintCovMatrix(std::ostream &os) constprint error matrix and correlationsDefinition FitResult.cxx:447; ROOT::Fit::FitResult::fNCallsunsigned int fNCallsnumber of function callsDefinition FitResult.h:347; ROOT::Fit::FitResult::Contourbool Contour(unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel=0.683)create contour of two parameters around the minimum pass as option confidence level: default is a val...Definition FitResult.cxx:660; ROOT::Fit::FitResult::GetCorrelati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:22376,error,error,22376,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,1,['error'],['error']
Availability,":FitSlicesY function It uses the TH2F histogram generated in macro hsimple.C It invokes FitSlicesY and draw the fitted ""mean"" and ""sigma"" in 2 sepate pads. ;  ; file  FittingDemo.C;   Example for fitting signal/background. ;  ; file  graph2dfit.C;   Fitting a TGraph2D ;  ; file  Ifit.C;   Example of a program to fit non-equidistant data points ;  ; file  langaus.C;   Convoluted Landau and Gaussian Fitting Function (using ROOT's Landau and Gauss functions) ;  ; file  line3Dfit.C;   Fitting of a TGraph2D with a 3D straight line ;  ; file  minuit2FitBench.C;   Demonstrate performance and usage of Minuit2 and Fumili2 for monodimensional fits. ;  ; file  minuit2FitBench2D.C;   Minuit2 fit 2D benchmark. ;  ; file  minuit2GausFit.C;   Perform fits with different configurations using Minuit2 ;  ; file  multidimfit.C;   Multi-Dimensional Parametrisation and Fitting ;  ; file  multifit.C;   Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ;  ; file  multifit.py;   Fitting multiple functions to different ranges of a 1-D histogram Example showing how to fit in a sub-range of an histogram A histogram is created and filled with the bin contents and errors defined in the table below. ;  ; file  myfit.C;   Get in memory an histogram from a root file and fit a user defined function. ;  ; file  NumericalMinimization.C;   Example on how to use the new Minimizer class in ROOT Show usage with all the possible minimizers. ;  ; file  qa2.C;   Test generation of random numbers distributed according to a function defined by the user ;  ; file  TestBinomial.C;   Perform a fit to a set of data with binomial errors like those derived from the division of two histograms. ;  ; file  TwoHistoFit2D.C;   Example to fit two histograms at the same time. ;  ; file  vectorizedFit.C;   Tutorial for creating a Vectorized TF1 function usin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__fit.html:4226,error,errors,4226,doc/master/group__tutorial__fit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__fit.html,1,['error'],['errors']
Availability,":Fitterstatic TVirtualFitter * Fitter(TObject *obj, Int_t maxpar=25)Static function returning a pointer to the current fitter.Definition TVirtualFitter.cxx:159; where MyFittingFunction is of type: extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag);; f#define f(i)Definition RSha256.hxx:104. Access to the fit result; The function returns a TFitResultPtr which can hold a pointer to a TFitResult object. By default the TFitResultPtr contains only the status of the fit and it converts automatically to an integer. If the option ""S"" is instead used, TFitResultPtr contains the TFitResult and behaves as a smart pointer to it. For example one can do: TFitResultPtr r = graph->Fit(""myFunc"",""S"");; TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; r->Print(""V""); // print full information of fit including covariance matrix; r->Write(); // store the result in a file; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TFitResultPtrProvides an indirection to the TFitResult class and with a semantics identical to a TFitResult pointe...Definition TFitResultPtr.h:32; TMatrixTSym< Double_t >; The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also from the fitted function. Associated functions; One or more object (typically a TF1*) can be added to the list of functions (fFunctions) associated to each graph. When TGraph::Fit is invoked, the fitted function is added to this list. Given a graph gr, one can retrieve an associated function with: TF1 *myfunc = gr->GetFunction(""myfunc"");; TGraph::GetFunctionTF1 * GetFunction(const char *name) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiGraph.html:34438,error,error,34438,doc/master/classTMultiGraph.html,https://root.cern,https://root.cern/doc/master/classTMultiGraph.html,1,['error'],['error']
Availability,":FreePicture ; (; const TGPicture * ; pic). Remove picture from cache if nobody is using it anymore. ; Definition at line 277 of file TGPicture.cxx. ◆ GetPath(). const char * TGPicturePool::GetPath ; (; ); const. inline . Definition at line 104 of file TGPicture.h. ◆ GetPicture() [1/4]. const TGPicture * TGPicturePool::GetPicture ; (; const char * ; name). Get a picture from the picture pool. ; Picture must be freed using TGPicturePool::FreePicture(). If picture is not found 0 is returned. ; Definition at line 82 of file TGPicture.cxx. ◆ GetPicture() [2/4]. const TGPicture * TGPicturePool::GetPicture ; (; const char * ; name, . char ** ; xpm . ). Create picture from XPM data. ; Picture must be freed using TGPicturePool::FreePicture(). If picture creation failed 0 is returned. ; Definition at line 232 of file TGPicture.cxx. ◆ GetPicture() [3/4]. const TGPicture * TGPicturePool::GetPicture ; (; const char * ; name, . Pixmap_t ; pxmap, . Pixmap_t ; mask = 0 . ). Get picture with specified pixmap and mask from pool. ; Picture must be freed using TGPicturePool::FreePicture(). If picture is not found 0 is returned. ; Definition at line 202 of file TGPicture.cxx. ◆ GetPicture() [4/4]. const TGPicture * TGPicturePool::GetPicture ; (; const char * ; name, . UInt_t ; new_width, . UInt_t ; new_height . ). Get picture with specified size from pool (picture will be scaled if necessary). ; Picture must be freed using TGPicturePool::FreePicture(). If picture is not found 0 is returned. ; Definition at line 138 of file TGPicture.cxx. ◆ IsA(). TClass * TGPicturePool::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 113 of file TGPicture.h. ◆ operator=(). TGPicturePool & TGPicturePool::operator= ; (; const TGPicturePool & ; pp). protected . assignment operator ; Definition at line 67 of file TGPicture.cxx. ◆ Print(). void TGPicturePool::Print ; (; Option_t * ; option = """"); const. overridevirtual . Li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPicturePool.html:13196,mask,mask,13196,doc/master/classTGPicturePool.html,https://root.cern,https://root.cern/doc/master/classTGPicturePool.html,1,['mask'],['mask']
Availability,":GSLDerivator::EvalForward ; (; double ; x, . double ; h . ). Computes the numerical derivative at a point x using an adaptive forward difference algorithm with a step size h. ; The function is evaluated only at points greater than x and at x itself. ; Definition at line 58 of file GSLDerivator.cxx. ◆ Result(). double ROOT::Math::GSLDerivator::Result ; (; ); const. return the result of the last derivative calculation ; Definition at line 109 of file GSLDerivator.cxx. ◆ SetFunction() [1/2]. void ROOT::Math::GSLDerivator::SetFunction ; (; const IGenFunction & ; f). Set the function for calculating the derivatives. ; The function must implement the ROOT::Math::IGenFunction signature ; Definition at line 123 of file GSLDerivator.cxx. ◆ SetFunction() [2/2]. void ROOT::Math::GSLDerivator::SetFunction ; (; GSLFuncPointer ; f, . void * ; p = nullptr . ). Set the function f for evaluating the derivative using a GSL function pointer type. ; Parameters. f: free function pointer of the GSL required type ; p: pointer to the object carrying the function state (for example the function object itself) . Definition at line 117 of file GSLDerivator.cxx. ◆ Status(). int ROOT::Math::GSLDerivator::Status ; (; ); const. return the error status of the last integral calculation ; Definition at line 113 of file GSLDerivator.cxx. Member Data Documentation. ◆ fError. double ROOT::Math::GSLDerivator::fError. private . Definition at line 163 of file GSLDerivator.h. ◆ fFunction. GSLFunctionWrapper ROOT::Math::GSLDerivator::fFunction. private . Definition at line 165 of file GSLDerivator.h. ◆ fResult. double ROOT::Math::GSLDerivator::fResult. private . Definition at line 162 of file GSLDerivator.h. ◆ fStatus. int ROOT::Math::GSLDerivator::fStatus. private . Definition at line 161 of file GSLDerivator.h. math/mathmore/src/GSLDerivator.h; math/mathmore/src/GSLDerivator.cxx. ROOTMathGSLDerivator. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:20 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html:6268,error,error,6268,doc/master/classROOT_1_1Math_1_1GSLDerivator.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLDerivator.html,1,['error'],['error']
Availability,":GetBinError ); 194/// possible values for the options are:; 195/// - ' ' (Default) the bin errors are the standard error on the mean of Y = S(Y)/SQRT(N); 196/// where S(Y) is the standard deviation (RMS) of the Y data in the bin; 197/// and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ); 198/// (i.e the errors are the standard error on the bin content of the profile); 199/// - 's' Errors are the standard deviation of Y, S(Y); 200/// - 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default); 201/// The only difference is only when the standard deviation in Y is zero.; 202/// In this case the error a standard deviation = 1/SQRT(12) is assumed and the error is; 203/// 1./SQRT(12*N).; 204/// This approximation assumes that the Y values are integer (e.g. ADC counts); 205/// and have an implicit uncertainty of y +/- 0.5. With the assumption that the probability that y; 206/// takes any value between y-0.5 and y+0.5 is uniform, its standard error is 1/SQRT(12); 207/// - 'g' Errors are 1./SQRT(W) where W is the sum of the weights for the bin j; 208/// W is obtained as from TProfile::GetBinEntries(ibin); 209/// This errors corresponds to the standard deviation of weighted mean where each; 210/// measurement Y is uncorrelated and has an error sigma, which is expressed in the; 211/// weight used to fill the Profile: w = 1/sigma^2; 212/// The resulting error in TProfile is then 1./SQRT( Sum(1./sigma^2) ); 213///; 214/// In the case of Profile filled weights and with TProfile::Sumw2() called,; 215/// STD(Y) is the standard deviation of the weighted sample Y and N is in this case the; 216/// number of effective entries (TProfile::GetBinEffectiveEntries(ibin) ); 217///; 218/// If a bin has N data points all with the same value Y (especially; 219/// possible when dealing with integers), the spread in Y for that bin; 220/// is zero, and the uncertainty assigned is also zero, and the bin is; 221/// ignored in making subsequent fits.; 222/// T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:9285,error,error,9285,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['error'],['error']
Availability,":GetDrawnFunction ; (; ). inline . Definition at line 152 of file TKDE.h. ◆ GetDrawnGraph(). TGraphErrors * TKDE::GetDrawnGraph ; (; ). inline . Definition at line 155 of file TKDE.h. ◆ GetDrawnLowerFunction(). TF1 * TKDE::GetDrawnLowerFunction ; (; ). inline . Definition at line 154 of file TKDE.h. ◆ GetDrawnUpperFunction(). TF1 * TKDE::GetDrawnUpperFunction ; (; ). inline . Definition at line 153 of file TKDE.h. ◆ GetError(). Double_t TKDE::GetError ; (; Double_t ; x); const. Definition at line 1091 of file TKDE.cxx. ◆ GetFixedWeight(). Double_t TKDE::GetFixedWeight ; (; ); const. Definition at line 979 of file TKDE.cxx. ◆ GetFunction(). TF1 * TKDE::GetFunction ; (; UInt_t ; npx = 100, . Double_t ; xMin = 1.0, . Double_t ; xMax = 0.0 . ). Definition at line 689 of file TKDE.cxx. ◆ GetGraphWithErrors(). TGraphErrors * TKDE::GetGraphWithErrors ; (; UInt_t ; npx = 100, . Double_t ; xMin = 1.0, . Double_t ; xMax = 0.0 . ). return a TGraphErrors with the KDE values and errors The return object is managed by the user ; Definition at line 940 of file TKDE.cxx. ◆ GetKDEApproximateBias(). TF1 * TKDE::GetKDEApproximateBias ; (; UInt_t ; npx = 100, . Double_t ; xMin = 1.0, . Double_t ; xMax = 0.0 . ). private . Definition at line 1271 of file TKDE.cxx. ◆ GetKDEFunction(). TF1 * TKDE::GetKDEFunction ; (; UInt_t ; npx = 100, . Double_t ; xMin = 1.0, . Double_t ; xMax = 0.0 . ). private . Definition at line 1231 of file TKDE.cxx. ◆ GetLowerFunction(). TF1 * TKDE::GetLowerFunction ; (; Double_t ; confidenceLevel = 0.95, . UInt_t ; npx = 100, . Double_t ; xMin = 1.0, . Double_t ; xMax = 0.0 . ). Definition at line 703 of file TKDE.cxx. ◆ GetMean(). Double_t TKDE::GetMean ; (; ); const. Definition at line 751 of file TKDE.cxx. ◆ GetOptions(). void TKDE::GetOptions ; (; std::string ; optionType, . std::string ; option . ). private . Definition at line 198 of file TKDE.cxx. ◆ GetPDFLowerConfidenceInterval(). TF1 * TKDE::GetPDFLowerConfidenceInterval ; (; Double_t ; confidenceLevel = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKDE.html:29942,error,errors,29942,doc/master/classTKDE.html,https://root.cern,https://root.cern/doc/master/classTKDE.html,1,['error'],['errors']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tRecv(TMessage*&); virtual Int_tRecv(Int_t&, Int_t&); virtual Int_tRecv(char*, Int_t); virtual Int_tRecv(char*, Int_t, Int_t&); virtual Int_tRecvRaw(void*, Int_t, ESendRecvOptions = kDefault); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TServerSocket.html:4648,error,error,4648,root/html528/TServerSocket.html,https://root.cern,https://root.cern/root/html528/TServerSocket.html,1,['error'],['error']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tTServerSocket::Recv(TMessage*&); virtual Int_tTServerSocket::Recv(Int_t&, Int_t&); virtual Int_tTServerSocket::Recv(char*, Int_t); virtual Int_tTServerSocket::Recv(char*, Int_t, Int_t&); virtual Int_tTServerSocket::RecvRaw(void*, Int_t, ESendRecvOptions = kDefault); voidTObject::Reset",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TPServerSocket.html:4742,error,error,4742,root/html528/TPServerSocket.html,https://root.cern,https://root.cern/root/html528/TPServerSocket.html,1,['error'],['error']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tRecv(TMessage*& mess); virtual Int_tRecv(Int_t& status, Int_t& kind); virtual Int_tRecv(char* mess, Int_t max); virtual Int_tRecv(char* mess",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSSLSocket.html:4621,error,error,4621,root/html532/TSSLSocket.html,https://root.cern,https://root.cern/root/html532/TSSLSocket.html,2,['error'],['error']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tRecv(TMessage*&); virtual Int_tRecv(Int_t&, Int_t&); virtual Int_tRecv(char*, Int_t); virtual Int_tRecv(char*, Int_t, Int_t&); virtual Int_tRecvRaw(void*, Int_t, ESendRecvOptions = kDef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TServerSocket.html:4773,error,error,4773,root/html530/TServerSocket.html,https://root.cern,https://root.cern/root/html530/TServerSocket.html,3,['error'],['error']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tTServerSocket::Recv(TMessage*&); virtual Int_tTServerSocket::Recv(Int_t&, Int_t&); virtual Int_tTServerSocket::Recv(char*, Int_t); virtual Int_tTServerSocket::Recv(char*, Int_t, Int_t&)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TPServerSocket.html:4867,error,error,4867,root/html530/TPServerSocket.html,https://root.cern,https://root.cern/root/html530/TPServerSocket.html,3,['error'],['error']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TSSLSocket&operator=(const TSSLSocket&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tRecv(TMessage*& mess); virtual Int_tRecv(Int_t& status, Int_t& kind); virtual Int_tRecv(char* mess, Int_t max); virtual Int_tRecv(char* mess, Int_t max, Int_t& kind); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSSLSocket.html:4217,error,error,4217,root/html602/TSSLSocket.html,https://root.cern,https://root.cern/root/html602/TSSLSocket.html,2,['error'],['error']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tRecv(TMessage*&); virtual Int_tRecv(Int_t&, Int_t&); virtual Int_tRecv(char*, Int_t); virtual Int_tRecv(char*, Int_t, Int_t&); virtual Int_tRecvRaw(void*, Int_t, ESendRecvOptions = kDefault); voidTObject::ResetBit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TServerSocket.html:4570,error,error,4570,root/html602/TServerSocket.html,https://root.cern,https://root.cern/root/html602/TServerSocket.html,2,['error'],['error']
Availability,":GetTcpWindowSize() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*TSocket::GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTObject::IsOnHeap() const; virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Int_tTSocket::Reconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tTServerSocket::Recv(TMessage*&); virtual Int_tTServerSocket::Recv(Int_t&, Int_t&); virtual Int_tTServerSocket::Recv(char*, Int_t); virtual Int_tTServerSocket::Recv(char*, Int_t, Int_t&); virtual Int_tTServerSocket",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TPServerSocket.html:4638,error,error,4638,root/html602/TPServerSocket.html,https://root.cern,https://root.cern/root/html602/TPServerSocket.html,2,['error'],['error']
Availability,":GetUrl() const; Int_tTXSocket::GetXrdProofdVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; Bool_tTXSocket::IsAWait(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTXSocket::IsInterrupt(); Bool_tTObject::IsOnHeap() const; Bool_tTXSocket::IsServProofd(); virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTXSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TNamed&TNamed::operator=(const TNamed& rhs); virtual voidTObject::Paint(Option_t* option = """"); Bool_tTXSocket::Ping(const char* ord = 0); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual UnsolRespProcResultTXSocket::ProcessUnsolicitedMsg(XrdClientUnsolMsgSender* s, XrdClientMessage* msg); virtual Int_tTObject::Read(const char* name); virtual Int_tReconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXUnixSocket.html:5091,error,error,5091,root/html534/TXUnixSocket.html,https://root.cern,https://root.cern/root/html534/TXUnixSocket.html,1,['error'],['error']
Availability,":GetUrl() const; Int_tTXSocket::GetXrdProofdVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; Bool_tTXSocket::IsAWait(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTXSocket::IsInterrupt(); Bool_tTObject::IsOnHeap() const; Bool_tTXSocket::IsServProofd(); virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTXSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TXSocket&TXSocket::operator=(const TXSocket& xs); virtual voidTObject::Paint(Option_t* option = """"); Bool_tTXSocket::Ping(const char* ord = 0); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual UnsolRespProcResultTXSocket::ProcessUnsolicitedMsg(XrdClientUnsolMsgSender* s, XrdClientMessage* msg); virtual Int_tTObject::Read(const char* name); virtual Int_tReconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); vir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXUnixSocket.html:5091,error,error,5091,root/html530/TXUnixSocket.html,https://root.cern,https://root.cern/root/html530/TXUnixSocket.html,2,['error'],['error']
Availability,":GetUrl() const; Int_tTXSocket::GetXrdProofdVersion() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject::Inspect() constMENU ; voidTObject::InvertBit(UInt_t f); virtual TClass*IsA() const; virtual Bool_tTSocket::IsAuthenticated() const; Bool_tTXSocket::IsAWait(); virtual Bool_tTObject::IsEqual(const TObject* obj) const; virtual Bool_tTObject::IsFolder() const; Bool_tTXSocket::IsInterrupt(); Bool_tTObject::IsOnHeap() const; Bool_tTXSocket::IsServProofd(); virtual Bool_tTNamed::IsSortable() const; virtual Bool_tTXSocket::IsValid() const; Bool_tTObject::IsZombie() const; virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; static voidTSocket::NetError(const char* where, Int_t error); virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TXUnixSocket&operator=(const TXUnixSocket&); virtual voidTObject::Paint(Option_t* option = """"); Bool_tTXSocket::Ping(const char* ord = 0); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual UnsolRespProcResultTXSocket::ProcessUnsolicitedMsg(XrdClientUnsolMsgSender* s, XrdClientMessage* msg); virtual Int_tTObject::Read(const char* name); virtual Int_tReconnect(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual Int_tTXSocket::Recv(TMessage",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXUnixSocket.html:5015,error,error,5015,root/html602/TXUnixSocket.html,https://root.cern,https://root.cern/root/html602/TXUnixSocket.html,2,['error'],['error']
Availability,":GetUserInfo(const char * /*user*/); 1613{; 1614 AbstractMethod(""GetUserInfo"");; 1615 return nullptr;; 1616}; 1617 ; 1618////////////////////////////////////////////////////////////////////////////////; 1619/// Returns all group info in the UserGroup_t structure. The only active; 1620/// fields in the UserGroup_t structure for this call are:; 1621/// - fGid and fGroup; 1622/// The returned structure must be deleted by the user. In case of; 1623/// error 0 is returned.; 1624 ; 1625UserGroup_t *TSystem::GetGroupInfo(Int_t /*gid*/); 1626{; 1627 AbstractMethod(""GetGroupInfo"");; 1628 return nullptr;; 1629}; 1630 ; 1631////////////////////////////////////////////////////////////////////////////////; 1632/// Returns all group info in the UserGroup_t structure. The only active; 1633/// fields in the UserGroup_t structure for this call are:; 1634/// - fGid and fGroup; 1635/// If group = 0, returns current user's group. The returned structure; 1636/// must be deleted by the user. In case of error 0 is returned.; 1637 ; 1638UserGroup_t *TSystem::GetGroupInfo(const char * /*group*/); 1639{; 1640 AbstractMethod(""GetGroupInfo"");; 1641 return nullptr;; 1642}; 1643 ; 1644//---- environment manipulation ------------------------------------------------; 1645 ; 1646////////////////////////////////////////////////////////////////////////////////; 1647/// Set environment variable.; 1648 ; 1649void TSystem::Setenv(const char *, const char *); 1650{; 1651 AbstractMethod(""Setenv"");; 1652}; 1653 ; 1654////////////////////////////////////////////////////////////////////////////////; 1655/// Unset environment variable.; 1656 ; 1657void TSystem::Unsetenv(const char *name); 1658{; 1659 Setenv(name, """");; 1660}; 1661 ; 1662////////////////////////////////////////////////////////////////////////////////; 1663/// Get environment variable.; 1664 ; 1665const char *TSystem::Getenv(const char *); 1666{; 1667 AbstractMethod(""Getenv"");; 1668 return nullptr;; 1669}; 1670 ; 1671//---- System Logging -----",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:52284,error,error,52284,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['error'],['error']
Availability,":IBaseFunctionMultiDim>(const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>&). Data Members; public:. enum ROOT::Math::BasicFitMethodFunction::Type_t { kUndefined; kLeastSquare; kLogLikelihood; };. private:. const ROOT::Fit::BinData&fData; const ROOT::Fit::PoissonLikelihoodFCN<ROOT::Math::IBaseFunctionMultiDim>::IModelFunction&fFunc; vector<double>fGradfor derivatives; boolfIsExtendedflag to indicate if is extended (when false is a Multinomial lieklihood), default is true; unsigned intfNEffPointsnumber of effective points used in the fit; intfWeightflag to indicate if needs to evaluate using weight or weight squared (default weight = 0). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; BaseFunction * Clone() const; clone the function (need to return Base for Windows). { return new PoissonLikelihoodFCN(fData,fFunc,fWeight,fIsExtended); }. unsigned int NFitPoints() const; effective points used in the fit. { return fNEffPoints; }. double DataElement(const double* x, unsigned int i, double* g) const; i-th likelihood element and its gradient. void Gradient(const double* x, double* g) const; evaluate gradient. bool IsWeighted() const; { return (fWeight != 0); }. void UseSumOfWeights(); Use the weights in evaluating the likelihood. void UseSumOfWeightSquare(); Use sum of the weight squared in evaluating the likelihood; (this is needed for calculating the errors). double DoEval(const double* x) const. Evaluation of the function (required by interface). double DoDerivative(const double* x, unsigned int icoord) const; for derivatives. » Author: L. Moneta Fri Aug 17 14:29:24 2007 » Copyright (c) 2007 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id: PoissonLikelihoodFCN.h 42007 2011-11-15 13:23:17Z moneta $ » Last generated: 2011-12-02 14:26; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html:4227,error,errors,4227,root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,https://root.cern,https://root.cern/root/html532/ROOT__Fit__PoissonLikelihoodFCN_-p0Math__IBaseFunctionMultiDim_.html,1,['error'],['errors']
Availability,":LabelsInflatevoid LabelsInflate(Option_t *axis=""X"") overrideDouble the number of bins for axis.Definition TProfile.cxx:983; TProfile::fTsumwy2Double_t fTsumwy2Total Sum of weight*Y*Y.Definition TProfile.h:45; TProfile::SetBinsvoid SetBins(Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t) overrideRedefine x, y and z axis parameters.Definition TProfile.h:72; TProfile::RetrieveBinContentDouble_t RetrieveBinContent(Int_t bin) const overrideRaw retrieval of bin content on internal data structure see convention for numbering bins in TH1::Get...Definition TProfile.h:57; TProfile::GetBinContentDouble_t GetBinContent(Int_t bin, Int_t) const overrideDefinition TProfile.h:104; TProfile::MultiplyBool_t Multiply(TF1 *h1, Double_t c1=1) overridePerforms the operation: this = this*c1*f1.Definition TProfile.cxx:1202; TProfile::fBinSumw2TArrayD fBinSumw2Array of sum of squares of weights per bin.Definition TProfile.h:46; TProfile::GetBinErrorDouble_t GetBinError(Int_t bin) const overrideReturn bin error of a Profile histogram.Definition TProfile.cxx:888; TProfile::AddBool_t Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overridePerforms the operation: this = this + c1*f1.Definition TProfile.cxx:259; TProfile::GetBinErrorDouble_t GetBinError(Int_t bin, Int_t, Int_t) const overrideDefinition TProfile.h:108; TProfile::FillInt_t Fill(const Double_t *v)Definition TProfile.h:55; TProfile::fTsumwyDouble_t fTsumwyTotal Sum of weight*Y.Definition TProfile.h:44; TProfile::BufferFillInt_t BufferFill(Double_t, Double_t) overrideaccumulate arguments in buffer.Definition TProfile.h:50; TProfile::GetBDouble_t * GetB()Definition TProfile.h:64; TProfile::~TProfile~TProfile() overrideDefault destructor for Profile histograms.Definition TProfile.cxx:100; TProfile::SetBinsvoid SetBins(const Int_t *nbins, const Double_t *range)Definition TProfile.h:54; TProfile::fYminDouble_t fYminLower limit in Y (if set)Definition TProfile.h:41; TProfile::fBinEntriesTArrayD fBinEntries",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8h_source.html:15741,error,error,15741,doc/master/TProfile_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8h_source.html,1,['error'],['error']
Availability,":Math::GSLMinimizer1D&). Data Members; private:. ROOT::Math::GSLFunctionWrapper*fFunction; boolfIsSet; intfIter; doublefLow; doublefMin; ROOT::Math::GSL1DMinimizerWrapper*fMinimizer; doublefUp; doublefXlow; doublefXmin; doublefXup. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; explicit GSLMinimizer1D(Minim1D::Type type=Minim1D::kBRENT). Construct the minimizer passing the minimizer type using the Minim1D::Algorithm enumeration. virtual ~GSLMinimizer1D(). Destructor: free allocated resources. GSLMinimizer1D(const GSLMinimizer1D &); usually copying is non trivial, so we make this unaccessible. void SetFunction( const UserFunc & f, double xmin, double xlow, double xup). Set, or reset, minimizer to use the function f and the initial search interval [xlow, xup], with a guess for the location of the minimum xmin.; The condition : \f$ f(xlow) > f(xmin) < f(xup)\f$ must be satisfied. int Iterate(). Perform a minimizer iteration and; if an unexepcted problem occurr then an error code will be returned. double XMinimum() const. Return current estimate of the position of the minimum. double XLower() const. Return current lower bound of the minimization interval. double XUpper() const. Return current upper bound of the minimization interval. double FValMinimum() const. Return function value at current estimate of the minimum. double FValLower() const. Return function value at current lower bound of the minimization interval. double FValUpper() const. Return function value at current upper bound of the minimization interval. int Minimize(int maxIter, double absTol, double relTol). Find minimum position iterating until convergence specified by the absolute and relative tolerance or; the maximum number of iteration is reached; \@param maxIter maximum number of iteration; \@param absTol desired absolute error in the minimum position; \@param absTol desired relative error in the minimum position. int Iterations() const. Return number of it",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__GSLMinimizer1D.html:2745,error,error,2745,root/html526/ROOT__Math__GSLMinimizer1D.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__GSLMinimizer1D.html,1,['error'],['error']
Availability,":Math::GaussIntegrator, and ROOT::Math::GSLIntegrator. ◆ IntegralLow(). virtual double ROOT::Math::VirtualIntegratorOneDim::IntegralLow ; (; double ; b). pure virtual . evaluate integral over the (-inf, b) ; Implemented in ROOT::Math::GaussIntegrator, and ROOT::Math::GSLIntegrator. ◆ IntegralUp(). virtual double ROOT::Math::VirtualIntegratorOneDim::IntegralUp ; (; double ; a). pure virtual . evaluate integral over the (a, +inf) ; Implemented in ROOT::Math::GaussIntegrator, and ROOT::Math::GSLIntegrator. ◆ Options(). virtual ROOT::Math::IntegratorOneDimOptions ROOT::Math::VirtualIntegratorOneDim::Options ; (; ); const. pure virtual . get the option used for the integration must be implemented by derived class ; Implemented in ROOT::Math::GaussIntegrator, ROOT::Math::GaussLegendreIntegrator, and ROOT::Math::GSLIntegrator. ◆ SetFunction(). virtual void ROOT::Math::VirtualIntegratorOneDim::SetFunction ; (; const IGenFunction & ; ). pure virtual . set integration function ; Implemented in ROOT::Math::GaussIntegrator, and ROOT::Math::GSLIntegrator. ◆ SetOptions(). virtual void ROOT::Math::VirtualIntegratorOneDim::SetOptions ; (; const ROOT::Math::IntegratorOneDimOptions & ; opt). inlinevirtual . set the options (should be re-implemented by derived classes -if more options than tolerance exist ; Reimplemented in ROOT::Math::GaussIntegrator, ROOT::Math::GaussLegendreIntegrator, and ROOT::Math::GSLIntegrator.; Definition at line 140 of file VirtualIntegrator.h. ◆ Type(). virtual ROOT::Math::IntegrationOneDim::Type ROOT::Math::VirtualIntegratorOneDim::Type ; (; ); const. inlinevirtual . return type of integrator ; Definition at line 134 of file VirtualIntegrator.h. Libraries for ROOT::Math::VirtualIntegratorOneDim:. [legend]; The documentation for this class was generated from the following file:; math/mathcore/inc/Math/VirtualIntegrator.h. ROOTMathVirtualIntegratorOneDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:24 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html:5287,toler,tolerance,5287,doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1VirtualIntegratorOneDim.html,1,['toler'],['tolerance']
Availability,":Math::IntegratorMultiDimOptions& opt). set the integration options. void SetGenerator(ROOT::Math::GSLRngWrapper* r). 	 set random number generator. void SetType(ROOT::Math::IntegrationMultiDim::Type type). 	 set integration method. void SetTypeName(const char* typeName). 	 set integration method using a name instead of an enumeration. void SetMode(ROOT::Math::MCIntegration::Mode mode). 	 set integration mode for VEGAS method; The possible MODE are :; MCIntegration::kIMPORTANCE (default) : VEGAS will use importance sampling; MCIntegration::kSTRATIFIED : VEGAS will use stratified sampling if certain condition are satisfied; MCIntegration::kIMPORTANCE_ONLY : VEGAS will always use importance smapling. void SetParameters(const VegasParameters &p). 	 set default parameters for VEGAS method. void SetParameters(const MiserParameters &p). 	 set default parameters for MISER method. double Sigma(). 	 set parameters for PLAIN method. void SetPParameters(const PlainParameters &p);. 	 returns the error sigma from the last iteration of the Vegas algorithm. double ChiSqr(). 	 returns chi-squared per degree of freedom for the estimate of the integral in the Vegas algorithm. MCIntegration::Type GetType() const. return the type; (need to be called GetType to avois a conflict with typedef). { return fType; }. const char * GetTypeName() const. return the name. ROOT::Math::IOptions * ExtraOptions() const. get the specific options (for Vegas or Miser); in term of string- name. bool CheckFunction(); internal method to check validity of GSL function pointer. void DoInitialize(); set internally the type of integration method. » Author: Magdalena Slawinska 08/2007 » Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLMCIntegrator.h 36806 2010-11-20 11:09:14Z moneta $ » Last generated: 2010-11-20 20:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__GSLMCIntegrator.html:7207,error,error,7207,root/html528/ROOT__Math__GSLMCIntegrator.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__GSLMCIntegrator.html,1,['error'],['error']
Availability,":Math::IntegratorMultiDimOptions& opt). set the integration options. void SetGenerator(ROOT::Math::GSLRngWrapper* r). 	 set random number generator. void SetType(ROOT::Math::IntegrationMultiDim::Type type). 	 set integration method. void SetTypeName(const char* typeName). 	 set integration method using a name instead of an enumeration. void SetMode(ROOT::Math::MCIntegration::Mode mode). 	 set integration mode for VEGAS method; The possible MODE are :; MCIntegration::kIMPORTANCE (default) : VEGAS will use importance sampling; MCIntegration::kSTRATIFIED : VEGAS will use stratified sampling if certain condition are satisfied; MCIntegration::kIMPORTANCE_ONLY : VEGAS will always use importance smapling. void SetParameters(const VegasParameters &p). 	 set default parameters for VEGAS method. void SetParameters(const MiserParameters &p). 	 set default parameters for MISER method. double Sigma(). 	 set parameters for PLAIN method. void SetPParameters(const PlainParameters &p);. 	 returns the error sigma from the last iteration of the Vegas algorithm. double ChiSqr(). 	 returns chi-squared per degree of freedom for the estimate of the integral in the Vegas algorithm. MCIntegration::Type GetType() const. return the type; (need to be called GetType to avois a conflict with typedef). { return fType; }. const char * GetTypeName() const. return the name. ROOT::Math::IOptions * ExtraOptions() const. get the specific options (for Vegas or Miser); in term of string- name. bool CheckFunction(); internal method to check validity of GSL function pointer. void DoInitialize(); set internally the type of integration method. » Author: Magdalena Slawinska 08/2007 » Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLMCIntegrator.h 36806 2010-11-20 11:09:14Z moneta $ » Last generated: 2011-07-04 15:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Math__GSLMCIntegrator.html:7209,error,error,7209,root/html530/ROOT__Math__GSLMCIntegrator.html,https://root.cern,https://root.cern/root/html530/ROOT__Math__GSLMCIntegrator.html,1,['error'],['error']
Availability,":Math::IntegratorMultiDimOptions& opt). set the integration options. void SetGenerator(ROOT::Math::GSLRngWrapper* r). 	 set random number generator. void SetType(ROOT::Math::IntegrationMultiDim::Type type). 	 set integration method. void SetTypeName(const char* typeName). 	 set integration method using a name instead of an enumeration. void SetMode(ROOT::Math::MCIntegration::Mode mode). 	 set integration mode for VEGAS method; The possible MODE are :; MCIntegration::kIMPORTANCE (default) : VEGAS will use importance sampling; MCIntegration::kSTRATIFIED : VEGAS will use stratified sampling if certain condition are satisfied; MCIntegration::kIMPORTANCE_ONLY : VEGAS will always use importance smapling. void SetParameters(const VegasParameters &p). 	 set default parameters for VEGAS method. void SetParameters(const MiserParameters &p). 	 set default parameters for MISER method. double Sigma(). 	 set parameters for PLAIN method. void SetPParameters(const PlainParameters &p);. 	 returns the error sigma from the last iteration of the Vegas algorithm. double ChiSqr(). 	 returns chi-squared per degree of freedom for the estimate of the integral in the Vegas algorithm. MCIntegration::Type GetType() const. return the type; (need to be called GetType to avois a conflict with typedef). { return fType; }. const char * GetTypeName() const. return the name. ROOT::Math::IOptions * ExtraOptions() const. get the specific options (for Vegas or Miser); in term of string- name. bool CheckFunction(); internal method to check validity of GSL function pointer. void DoInitialize(); set internally the type of integration method. » Author: Magdalena Slawinska 08/2007 » Copyright (c) 2007 ROOT Foundation, CERN/PH-SFT *; » Last changed: root/mathmore:$Id: GSLMCIntegrator.h 36806 2010-11-20 11:09:14Z moneta $ » Last generated: 2011-11-03 20:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__GSLMCIntegrator.html:7209,error,error,7209,root/html532/ROOT__Math__GSLMCIntegrator.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__GSLMCIntegrator.html,1,['error'],['error']
Availability,":Merge ; (; TCollection * ; in). overridevirtual . Merge. ; Reimplemented from TH2Poly.; Definition at line 230 of file TProfile2Poly.cxx. ◆ OverflowIdxToArrayIdx(). Int_t TProfile2Poly::OverflowIdxToArrayIdx ; (; Int_t ; val). inlineprotected . Definition at line 112 of file TProfile2Poly.h. ◆ PrintOverflowRegions(). void TProfile2Poly::PrintOverflowRegions ; (; ). Print overflow regions. ; Definition at line 449 of file TProfile2Poly.cxx. ◆ Reset(). void TProfile2Poly::Reset ; (; Option_t * ; option = """"). overridevirtual . Reset. ; Reimplemented from TH2Poly.; Definition at line 466 of file TProfile2Poly.cxx. ◆ SetContentToAverage(). void TProfile2Poly::SetContentToAverage ; (; ). Set content to average. ; Definition at line 304 of file TProfile2Poly.cxx. ◆ SetContentToError(). void TProfile2Poly::SetContentToError ; (; ). Set content to error. ; Definition at line 322 of file TProfile2Poly.cxx. ◆ SetErrorOption(). void TProfile2Poly::SetErrorOption ; (; EErrorType ; type). Set error option. ; Definition at line 523 of file TProfile2Poly.cxx. ◆ Streamer(). void TProfile2Poly::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TH2. ; Reimplemented from TH2Poly. ◆ StreamerNVirtual(). void TProfile2Poly::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 115 of file TProfile2Poly.h. Friends And Related Symbol Documentation. ◆ TProfile2PolyBin. friend class TProfile2PolyBin. friend . Definition at line 59 of file TProfile2Poly.h. ◆ TProfileHelper. friend class TProfileHelper. friend . Definition at line 62 of file TProfile2Poly.h. Member Data Documentation. ◆ fErrorMode. EErrorType TProfile2Poly::fErrorMode = kERRORMEAN. private . Definition at line 104 of file TProfile2Poly.h. ◆ fOverflowBins. TProfile2PolyBin TProfile2Poly::fOverflowBins[kNOverflow]. private . Definition at line 103 of file TProfile2Poly.h. ◆ fTsumwz. Double_t TProfile2Poly::fTsumwz. private . Definition at line 105 of file TProfile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2Poly.html:71256,error,error,71256,doc/master/classTProfile2Poly.html,https://root.cern,https://root.cern/doc/master/classTProfile2Poly.html,1,['error'],['error']
Availability,":Message(Int_t id, const TObject *obj); 2351{; 2352 TIter next(fMessageHandlers);; 2353 TMessageHandler *mh;; 2354 while ((mh = (TMessageHandler*)next())) {; 2355 mh->HandleMessage(id,obj);; 2356 }; 2357}; 2358 ; 2359////////////////////////////////////////////////////////////////////////////////; 2360/// Process interpreter command via TApplication::ProcessLine().; 2361/// On Win32 the line will be processed asynchronously by sending; 2362/// it to the CINT interpreter thread. For explicit synchronous processing; 2363/// use ProcessLineSync(). On non-Win32 platforms there is no difference; 2364/// between ProcessLine() and ProcessLineSync().; 2365/// The possible error codes are defined by TInterpreter::EErrorCode. In; 2366/// particular, error will equal to TInterpreter::kProcessing until the; 2367/// CINT interpreted thread has finished executing the line.; 2368/// Returns the result of the command, cast to a Longptr_t.; 2369 ; 2370Longptr_t TROOT::ProcessLine(const char *line, Int_t *error); 2371{; 2372 TString sline = line;; 2373 sline = sline.Strip(TString::kBoth);; 2374 ; 2375 if (!fApplication.load()); 2376 TApplication::CreateApplication();; 2377 ; 2378 return (*fApplication).ProcessLine(sline, kFALSE, error);; 2379}; 2380 ; 2381////////////////////////////////////////////////////////////////////////////////; 2382/// Process interpreter command via TApplication::ProcessLine().; 2383/// On Win32 the line will be processed synchronously (i.e. it will; 2384/// only return when the CINT interpreter thread has finished executing; 2385/// the line). On non-Win32 platforms there is no difference between; 2386/// ProcessLine() and ProcessLineSync().; 2387/// The possible error codes are defined by TInterpreter::EErrorCode.; 2388/// Returns the result of the command, cast to a Longptr_t.; 2389 ; 2390Longptr_t TROOT::ProcessLineSync(const char *line, Int_t *error); 2391{; 2392 TString sline = line;; 2393 sline = sline.Strip(TString::kBoth);; 2394 ; 2395 if (!fApplicat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:90270,error,error,90270,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['error'],['error']
Availability,":MinimizerOptions::SetDefaultMinimizer(""GSLMultiMin"",""BFGS"");; will set the usdage of the BFGS algorithm of the GSL multi-dimensional minimization; (implemented in libMathMore). ROOT::Math::MinimizerOptions can be used also to set other; default options, like maximum number of function calls, minimization tolerance or print; level. See the documentation of this class. For fitting linear functions (containing the ""++"" sign"" and polN functions,; the linear fitter is automatically initialized. -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*. void FitPanel(); -*-*-*-*-*Display a panel with all histogram fit options*-*-*-*-*-*. See class TFitPanel for example. TH1 * GetAsymmetry(TH1* h2, Double_t c2 = 1, Double_t dc2 = 0); return an histogram containing the asymmetry of this histogram with h2,; where the asymmetry is defined as:. Asymmetry = (h1 - h2)/(h1 + h2) where h1 = this. works for 1D, 2D, etc. histograms; c2 is an optional argument that gives a relative weight between the two; histograms, and dc2 is the error on this weight. This is useful, for example,; when forming an asymmetry between two histograms from 2 different data sets that; need to be normalized to each other in some way. The function calculates; the errors asumming Poisson statistics on h1 and h2 (that is, dh = sqrt(h)). example: assuming 'h1' and 'h2' are already filled. h3 = h1->GetAsymmetry(h2). then 'h3' is created and filled with the asymmetry between 'h1' and 'h2';; h1 and h2 are left intact. Note that it is the user's responsibility to manage the created histogram. code proposed by Jason Seely (seely@mit.edu) and adapted by R.Brun. clone the histograms so top and bottom will have the; correct dimensions:; Sumw2 just makes sure the errors will be computed properly; when we form sums and ratios below. Int_t GetDefaultBufferSize(); static function; return the default buffer size for automatic histograms; the parameter fgBufferSize may be changed via SetDefaultBufferSize. Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:82278,error,error,82278,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,4,['error'],['error']
Availability,":Minuit2::FCNGradientBase. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::FCNGradientBase. class ROOT::Minuit2::FCNGradientBase: public ROOT::Minuit2::FCNBase. Extension of the FCNBase for providing the analytical Gradient of the; function. The user-Gradient is checked at the beginning of the; minimization against the Minuit internal numerical Gradient in order to; spot problems in the analytical Gradient calculation. This can be turned; off by overriding CheckGradient() to make it return ""false"".; The size of the output Gradient vector must be equal to the size of the; input Parameter vector.; Minuit does a check of the user Gradient at the beginning, if this is not; wanted the method ""CheckGradient()"" has to be overridden to return; ""false"". Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~FCNGradientBase(); virtual boolCheckGradient() const; virtual doubleROOT::Minuit2::FCNBase::ErrorDef() const; virtual vector<double>Gradient(const vector<double>&) const; virtual doubleROOT::Minuit2::FCNBase::operator()(const vector<double>& x) const; ROOT::Minuit2::FCNGradientBase&operator=(const ROOT::Minuit2::FCNGradientBase&); virtual voidROOT::Minuit2::FCNBase::SetErrorDef(double); virtual doubleROOT::Minuit2::FCNBase::Up() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~FCNGradientBase(); {}. std::vector<double> Gradient(const vector<double>& ) const. bool CheckGradient() const; {return true;}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__FCNGradientBase.html:1073,avail,available,1073,root/html534/ROOT__Minuit2__FCNGradientBase.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__FCNGradientBase.html,1,['avail'],['available']
Availability,":Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; ROOT::Minuit2::VariableMetricMinimizer&operator=(const ROOT::Minuit2::VariableMetricMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const; ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(); ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(const ROOT::Minuit2::VariableMetricMinimizer&). Data Members; private:. ROOT::Minuit2::VariableMetricBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableMetricMinimizer(); {}. ~VariableMetricMinimizer(); {}. » Last changed: root/minuit2:$Id: VariableMetricMinimizer.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2009-12-07 13:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__VariableMetricMinimizer.html:3509,toler,toler,3509,root/html526/ROOT__Minuit2__VariableMetricMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__VariableMetricMinimizer.html,1,['toler'],['toler']
Availability,":Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; ROOT::Minuit2::VariableMetricMinimizer&operator=(const ROOT::Minuit2::VariableMetricMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const; ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(); ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(const ROOT::Minuit2::VariableMetricMinimizer&). Data Members; private:. ROOT::Minuit2::VariableMetricBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableMetricMinimizer(); {}. ~VariableMetricMinimizer(); {}. » Last changed: root/minuit2:$Id: VariableMetricMinimizer.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2010-09-23 19:57; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Minuit2__VariableMetricMinimizer.html:3509,toler,toler,3509,root/html528/ROOT__Minuit2__VariableMetricMinimizer.html,https://root.cern,https://root.cern/root/html528/ROOT__Minuit2__VariableMetricMinimizer.html,1,['toler'],['toler']
Availability,":Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; ROOT::Minuit2::VariableMetricMinimizer&operator=(const ROOT::Minuit2::VariableMetricMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const; ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(); ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(const ROOT::Minuit2::VariableMetricMinimizer&). Data Members; private:. ROOT::Minuit2::VariableMetricBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableMetricMinimizer(); {}. ~VariableMetricMinimizer(); {}. » Last changed: root/minuit2:$Id: VariableMetricMinimizer.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2011-07-04 15:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__VariableMetricMinimizer.html:3511,toler,toler,3511,root/html530/ROOT__Minuit2__VariableMetricMinimizer.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__VariableMetricMinimizer.html,1,['toler'],['toler']
Availability,":Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::MnFcn&, const ROOT::Minuit2::GradientCalculator&, const ROOT::Minuit2::MinimumSeed&, const ROOT::Minuit2::MnStrategy&, unsigned int, double) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, unsigned int, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; ROOT::Minuit2::VariableMetricMinimizer&operator=(const ROOT::Minuit2::VariableMetricMinimizer&); virtual const ROOT::Minuit2::MinimumSeedGenerator&SeedGenerator() const; ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(); ROOT::Minuit2::VariableMetricMinimizerVariableMetricMinimizer(const ROOT::Minuit2::VariableMetricMinimizer&). Data Members; private:. ROOT::Minuit2::VariableMetricBuilderfMinBuilder; ROOT::Minuit2::MnSeedGeneratorfMinSeedGen. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; VariableMetricMinimizer(); {}. ~VariableMetricMinimizer(); {}. » Last changed: root/minuit2:$Id: VariableMetricMinimizer.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in g",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__VariableMetricMinimizer.html:3511,toler,toler,3511,root/html532/ROOT__Minuit2__VariableMetricMinimizer.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__VariableMetricMinimizer.html,1,['toler'],['toler']
Availability,":Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.10000000000000001) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnUserCovariance&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Minuit2__CombinedMinimizer.html:2362,toler,toler,2362,root/html602/ROOT__Minuit2__CombinedMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Minuit2__CombinedMinimizer.html,8,['toler'],['toler']
Availability,":MnStrategy& stra); pair<double,double>operator()(unsigned int, unsigned int maxcalls = 0, double toler = 0.1) const; doubleUpper(unsigned int, unsigned int maxcalls = 0, double toler = 0.1) const; ROOT::Minuit2::MnCrossUpval(unsigned int, unsigned int maxcalls = 0, double toler = 0.1) const. protected:. ROOT::Minuit2::MnCrossFindCrossValue(int dir, unsigned int, unsigned int maxcalls, double toler) const. Data Members; private:. const ROOT::Minuit2::FCNBase&fFCN; const ROOT::Minuit2::FunctionMinimum&fMinimum; ROOT::Minuit2::MnStrategyfStrategy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, unsigned int stra = 1); construct from FCN + Minimum + strategy. MnMinos(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::FunctionMinimum& min, const ROOT::Minuit2::MnStrategy& stra); construct from FCN + Minimum + strategy. ~MnMinos(); {}. std::pair<double,double> operator()(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const; returns the negative (pair.first) and the positive (pair.second); Minos Error of the Parameter. double Lower(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const; calculate one side (negative or positive Error) of the Parameter; give as input (optionally) maxcalls and tolerance. double Upper(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const. MnCross Loval(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const. MnCross Upval(unsigned int , unsigned int maxcalls = 0, double toler = 0.1) const. MnCross FindCrossValue(int dir, unsigned int , unsigned int maxcalls, double toler) const; internal method to get crossing value via MnFunctionCross. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:01; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__MnMinos.html:2176,toler,toler,2176,root/html534/ROOT__Minuit2__MnMinos.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__MnMinos.html,7,['toler'],"['toler', 'tolerance']"
Availability,":MsgLogger&Log() const. Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. Int_tfCountnumber of updates contributing to error field; Double_tfDEDwsum of deltas; Double_tfDeltalocal error field; Double_tfLearnRatelearning rate parameter; TMVA::TNeuron*fPostNeuronpointer to post-neuron; TMVA::TNeuron*fPreNeuronpointer to pre-neuron; Double_tfWeightweight of the synapse; static TMVA::MsgLogger*fgLogger! message logger, static to save resources. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSynapse(); constructor. ~TSynapse(); destructor. void SetWeight(Double_t weight); set synapse weight. Double_t GetWeightedValue(); get output of pre-neuron weighted by synapse weight. Double_t GetWeightedDelta(); get error field of post-neuron weighted by synapse weight. void AdjustWeight(); adjust the weight based on the error field all ready calculated by CalculateDelta. void CalculateDelta(); calculate/adjust the error field for this synapse. TSynapse(). Double_t GetWeight(); get the weight of the synapse. { return fWeight; }. void SetLearningRate(Double_t rate); set the learning rate. { fLearnRate = rate; }. Double_t GetLearningRate(); get the learning rate. { return fLearnRate; }. void DecayLearningRate(Double_t rate); decay the learning rate. { fLearnRate *= (1-rate); }. void SetPreNeuron(TMVA::TNeuron* pre); set the pre-neuron. { fPreNeuron = pre; }. void SetPostNeuron(TMVA::TNeuron* post); set hte post-neuron. { fPostNeuron = post; }. void InitDelta(); initialize the error field of the synpase to 0. { fDelta = 0.0; fCount = 0; }. void SetDEDw(Double_t DEDw); { fDEDw = DEDw; }. Double_t GetDEDw(); { return fDEDw; }. Double_t GetDelta(); { return fDelta; }. » Author: Matt Jachowski » Copyright (c) 2005",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__TSynapse.html:6227,error,error,6227,root/html528/TMVA__TSynapse.html,https://root.cern,https://root.cern/root/html528/TMVA__TSynapse.html,4,['error'],['error']
Availability,":Point3D_t>&); virtual~TProofVectorContainer<TProofDrawListOfGraphs::Point3D_t>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; vector<TProofDrawListOfGraphs::Point3D_t>*GetVector() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html:1881,error,error,1881,root/html528/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html,https://root.cern,https://root.cern/root/html528/TProofVectorContainer_TProofDrawListOfGraphs__Point3D_t_.html,4,['error'],['error']
Availability,":RCsvDS which allows to read comma separated files:; 1373~~~{.cpp}; 1374auto tdf = ROOT::RDF::FromCSV(""MuRun2010B.csv"");; 1375auto filteredEvents =; 1376 tdf.Filter(""Q1 * Q2 == -1""); 1377 .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; 1378auto h = filteredEvents.Histo1D(""m"");; 1379h->Draw();; 1380~~~; 1381 ; 1382See also FromNumpy (Python-only), FromRNTuple(), FromArrow(), FromSqlite().; 1383 ; 1384\anchor callgraphs; 1385### Computation graphs (storing and reusing sets of transformations); 1386 ; 1387As we saw, transformed dataframes can be stored as variables and reused multiple times to create modified versions of the dataset. This implicitly defines a **computation graph** in which; 1388several paths of filtering/creation of columns are executed simultaneously, and finally aggregated results are produced.; 1389 ; 1390RDataFrame detects when several actions use the same filter or the same defined column, and **only evaluates each; 1391filter or defined column once per event**, regardless of how many times that result is used down the computation graph.; 1392Objects read from each column are **built once and never copied**, for maximum efficiency.; 1393When ""upstream"" filters are not passed, subsequent filters, temporary column expressions and actions are not evaluated,; 1394so it might be advisable to put the strictest filters first in the graph.; 1395 ; 1396\anchor representgraph; 1397### Visualizing the computation graph; 1398It is possible to print the computation graph from any node to obtain a [DOT (graphviz)](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) representation either on the standard output; 1399or in a file.; 1400 ; 1401Invoking the function ROOT::RDF::SaveGraph() on any node that is not the head node, the computation graph of the branch; 1402the node belongs to is printed. By using the head node, the entire computation graph is printed.; 1403 ; 1404Following there is an exampl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:80640,down,down,80640,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['down'],['down']
Availability,":RCsvDS which allows to read comma separated files:; 1413~~~{.cpp}; 1414auto tdf = ROOT::RDF::FromCSV(""MuRun2010B.csv"");; 1415auto filteredEvents =; 1416 tdf.Filter(""Q1 * Q2 == -1""); 1417 .Define(""m"", ""sqrt(pow(E1 + E2, 2) - (pow(px1 + px2, 2) + pow(py1 + py2, 2) + pow(pz1 + pz2, 2)))"");; 1418auto h = filteredEvents.Histo1D(""m"");; 1419h->Draw();; 1420~~~; 1421 ; 1422See also FromNumpy (Python-only), FromRNTuple(), FromArrow(), FromSqlite().; 1423 ; 1424\anchor callgraphs; 1425### Computation graphs (storing and reusing sets of transformations); 1426 ; 1427As we saw, transformed dataframes can be stored as variables and reused multiple times to create modified versions of the dataset. This implicitly defines a **computation graph** in which; 1428several paths of filtering/creation of columns are executed simultaneously, and finally aggregated results are produced.; 1429 ; 1430RDataFrame detects when several actions use the same filter or the same defined column, and **only evaluates each; 1431filter or defined column once per event**, regardless of how many times that result is used down the computation graph.; 1432Objects read from each column are **built once and never copied**, for maximum efficiency.; 1433When ""upstream"" filters are not passed, subsequent filters, temporary column expressions and actions are not evaluated,; 1434so it might be advisable to put the strictest filters first in the graph.; 1435 ; 1436\anchor representgraph; 1437### Visualizing the computation graph; 1438It is possible to print the computation graph from any node to obtain a [DOT (graphviz)](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) representation either on the standard output; 1439or in a file.; 1440 ; 1441Invoking the function ROOT::RDF::SaveGraph() on any node that is not the head node, the computation graph of the branch; 1442the node belongs to is printed. By using the head node, the entire computation graph is printed.; 1443 ; 1444Following there is an exampl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:82320,down,down,82320,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['down'],['down']
Availability,":ScalarE() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalare() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalarenergy() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::ScalarEt() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::ScalarEt2() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::ScalarEta() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalareta() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::ScalarGamma() const; voidGetCoordinates(Scalar[] dest) const; voidGetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& a, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& b, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& c, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& d) const; boolisLightlike(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar tolerance = 100 * std::numeric_limits<Scalar>::epsilon()) const; boolisSpacelike() const; boolisTimelike() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >LorentzVector<ROOT::Math::PxPyPzE4D<double> >(); ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >LorentzVector<ROOT::Math::PxPyPzE4D<double> >(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >&&); ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >LorentzVector<ROOT::Math::PxPyPzE4D<double> >(const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >&); ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >LorentzVector<ROOT::Math::PxPyPzE4D<double> >(const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& a, const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& b, const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& c, const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzE4D<double> >::Scalar& d); ROOT::Math::LorentzVector<ROOT::Math::PxPy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__LorentzVector_-p1PxPyPzE4D_Double32_t___.html:2437,toler,tolerance,2437,root/html602/ROOT__Math__LorentzVector_-p1PxPyPzE4D_Double32_t___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__LorentzVector_-p1PxPyPzE4D_Double32_t___.html,4,['toler'],['tolerance']
Availability,":ScalarE() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalare() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalarenergy() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::ScalarEt() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::ScalarEt2() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::ScalarEta() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalareta() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::ScalarGamma() const; voidGetCoordinates(Scalar[] dest) const; voidGetCoordinates(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& a, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& b, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& c, ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& d) const; boolisLightlike(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar tolerance = 100 * std::numeric_limits<Scalar>::epsilon()) const; boolisSpacelike() const; boolisTimelike() const; ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >LorentzVector<ROOT::Math::PxPyPzM4D<double> >(); ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >LorentzVector<ROOT::Math::PxPyPzM4D<double> >(ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >&&); ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >LorentzVector<ROOT::Math::PxPyPzM4D<double> >(const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >&); ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >LorentzVector<ROOT::Math::PxPyPzM4D<double> >(const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& a, const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& b, const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& c, const ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> >::Scalar& d); ROOT::Math::LorentzVector<ROOT::Math::PxPy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__LorentzVector_-p1PxPyPzM4D_Double32_t___.html:2437,toler,tolerance,2437,root/html602/ROOT__Math__LorentzVector_-p1PxPyPzM4D_Double32_t___.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__LorentzVector_-p1PxPyPzM4D_Double32_t___.html,4,['toler'],['tolerance']
Availability,":SetBinError(Int_t binx, Int_t biny, Double_t error); virtual voidTH1::SetBinError(Int_t binx, Int_t biny, Int_t binz, Double_t error); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); virtual voidTH1::SetBinsLength(Int_t = -1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTH1::SetBuffer(Int_t buffersize, Option_t* option = """"); virtual voidTH1::SetCellContent(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetCellError(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetContent(const Double_t* content); virtual voidTH1::SetContour(Int_t nlevels, const Double_t* levels = 0); virtual voidTH1::SetContourLevel(Int_t level, Double_t value); static voidTH1::SetDefaultBufferSize(Int_t buffersize = 1000); static voidTH1::SetDefaultSumw2(Bool_t sumw2 = kTRUE); virtual voidTH1::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTH1::SetEntries(Double_t n); virtual voidTH1::SetError(const Double_t* error); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); voidSetFloat(Bool_t flag = true); virtual voidTH1::SetLabelColor(Color_t color = 1, Option_t* axis = ""X""); virtual voidTH1::SetLabelFont(Style_t font = 62, Option_t* axis = ""X""); virtual voidTH1::SetLabelOffset(Float_t offset = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2Poly.html:22146,error,error,22146,root/html528/TH2Poly.html,https://root.cern,https://root.cern/root/html528/TH2Poly.html,3,['error'],['error']
Availability,":SetObjExt(const char* objExt); virtual voidTSystem::SetProgname(const char* name); virtual intTSystem::SetSockOpt(int sock, int kind, int val); virtual voidTSystem::SetSoExt(const char* soExt); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector&); virtual voidTSystem::ShowOutput(RedirectHandle_t* h); virtual Int_tTNamed::Sizeof() const; virtual voidTSystem::Sleep(UInt_t milliSec); virtual TStringTSystem::SplitAclicMode(const char* filename, TString& mode, TString& args, TString& io) const; virtual voidTSystem::StackTrace(); virtual Int_tStage(const char* path, UChar_t priority); virtual Int_tStage(TCollection* files, UChar_t priority); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b); virtual intTSystem::Symlink(const char* from, const char* to); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; virtual voidTSystem::Syslog(ELogLevel level, const char* mess); virtual const char*TSystem::TempDirectory() const; virtual FILE*TSystem::TempFileName(TString& base, const char* dir = 0); Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual intTSystem::Umask(Int_t mask); virtual const char*TSystem::UnixPathName(const char* unixpathname); virtual intUnlink(const char* path); virtual voidTSystem::Unload(const char* module); virtual voidTSystem::Unsetenv(const char* name); virtual voidTObject::UseCurrentStyle(); virtual intTSystem::Utime(const char* file, Long_t modtime, Long_t actime); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual char*TSystem::Which(const char* search, const char* file, EAccessMode mode = kFileExists); virtual const char*TSystem::WorkingDirectory(); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGSystem.html:14529,mask,mask,14529,root/html534/TNetXNGSystem.html,https://root.cern,https://root.cern/root/html534/TNetXNGSystem.html,1,['mask'],['mask']
Availability,":SetRange xBins is supposed to be of length nx+1 ; Reimplemented from TH1.; Definition at line 79 of file TProfile3D.h. ◆ SetBins() [5/7]. void TProfile3D::SetBins ; (; Int_t ; nx, . const Double_t * ; xBins, . Int_t ; ny, . const Double_t * ; yBins . ). inlineoverrideprivatevirtual . Redefine x and y axis parameters with variable bin sizes. ; The X and Y axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange xBins is supposed to be of length nx+1, yBins is supposed to be of length ny+1 ; Reimplemented from TH1.; Definition at line 83 of file TProfile3D.h. ◆ SetBins() [6/7]. void TProfile3D::SetBins ; (; Int_t ; nx, . Double_t ; xmin, . Double_t ; xmax . ). inlineoverrideprivatevirtual . Redefine x axis parameters. ; The X axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange ; Reimplemented from TH1.; Definition at line 77 of file TProfile3D.h. ◆ SetBins() [7/7]. void TProfile3D::SetBins ; (; Int_t ; nx, . Double_t ; xmin, . Double_t ; xmax, . Int_t ; ny, . Double_t ; ymin, . Double_t ; ymax . ). inlineoverrideprivatevirtual . Redefine x and y axis parameters. ; The X and Y axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange ; Reimplemented from TH1.; Definition at line 81 of file TProfile3D.h. ◆ SetBinsLength(). void TProfile3D::SetBinsLength ; (; Int_t ; n = -1). overridevirtual . Set total number of bins including under/overflow. ; Reallocate bin contents array ; Reimplemented from TH3D.; Definition at line 1318 of file TProfile3D.cxx. ◆ SetBuffer(). void TProfile3D::SetBuffer ; (; Int_t ; buffersize, . Option_t * ; opt = """" . ). overridevir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:101715,error,errors,101715,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,2,['error'],['errors']
Availability,":StatOverflows ; (; Bool_t ; flag = kTRUE). static . if flag=kTRUE, underflows and overflows are used by the Fill functions in the computation of statistics (mean value, StdDev). ; By default, underflows or overflows are not used. ; Definition at line 6925 of file TH1.cxx. ◆ Streamer(). void TH1::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TObject.; Reimplemented in TH1C, TH1S, TH1I, TH1L, TH1F, TH1D, TH1K, TH2, TH2C, TH2S, TH2I, TH2L, TH2F, TH2D, TH2Poly, TH3, TH3C, TH3S, TH3I, TH3L, TH3F, TH3D, TProfile, TProfile2D, TProfile2Poly, and TProfile3D.; Definition at line 6933 of file TH1.cxx. ◆ StreamerNVirtual(). void TH1::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 444 of file TH1.h. ◆ Sumw2(). void TH1::Sumw2 ; (; Bool_t ; flag = kTRUE). virtual . Create structure to store sum of squares of weights. ; if histogram is already filled, the sum of squares of weights is filled with the existing bin contents; The error per bin will be computed as sqrt(sum of squares of weight) for each bin.; This function is automatically called when the histogram is created if the static function TH1::SetDefaultSumw2 has been called before. If flag = false the structure containing the sum of the square of weights is rest and it will be empty, but it is not deleted (i.e. GetSumw2()->fN = 0) ; Reimplemented in TProfile, TProfile2D, and TProfile3D.; Definition at line 9020 of file TH1.cxx. ◆ TransformHisto(). TH1 * TH1::TransformHisto ; (; TVirtualFFT * ; fft, . TH1 * ; h_output, . Option_t * ; option . ). static . For a given transform (first parameter), fills the histogram (second parameter) with the transform output data, specified in the third parameter If the 2nd parameter h_output is empty, a new histogram (TH1D or TH2D) is created and the user is responsible for deleting it. ; Available options:; ""RE"" - real part of the output; ""IM"" - imaginary part of the output; ""MAG"" - magnitude of the o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:222430,error,error,222430,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['error']
Availability,":SysError(""TUnixSystem::GetLinuxProcInfo"", ""getrusage failed"");; 5291 } else {; 5292 procinfo->fCpuUser = (Float_t)(ru.ru_utime.tv_sec) +; 5293 ((Float_t)(ru.ru_utime.tv_usec) / 1000000.);; 5294 procinfo->fCpuSys = (Float_t)(ru.ru_stime.tv_sec) +; 5295 ((Float_t)(ru.ru_stime.tv_usec) / 1000000.);; 5296 }; 5297 ; 5298 procinfo->fMemVirtual = -1;; 5299 procinfo->fMemResident = -1;; 5300 TString s;; 5301 FILE *f = fopen(TString::Format(""/proc/%d/statm"", gSystem->GetPid()), ""r"");; 5302 if (f) {; 5303 s.Gets(f);; 5304 fclose(f);; 5305 Long_t total, rss;; 5306 sscanf(s.Data(), ""%ld %ld"", &total, &rss);; 5307 procinfo->fMemVirtual = total * (getpagesize() / 1024);; 5308 procinfo->fMemResident = rss * (getpagesize() / 1024);; 5309 }; 5310}; 5311#endif; 5312 ; 5313////////////////////////////////////////////////////////////////////////////////; 5314/// Returns static system info, like OS type, CPU type, number of CPUs; 5315/// RAM size, etc into the SysInfo_t structure. Returns -1 in case of error,; 5316/// 0 otherwise.; 5317 ; 5318int TUnixSystem::GetSysInfo(SysInfo_t *info) const; 5319{; 5320 if (!info) return -1;; 5321 ; 5322 static SysInfo_t sysinfo;; 5323 ; 5324 if (!sysinfo.fCpus) {; 5325#if defined(R__MACOSX); 5326 GetDarwinSysInfo(&sysinfo);; 5327#elif defined(R__LINUX); 5328 GetLinuxSysInfo(&sysinfo);; 5329#elif defined(R__FBSD); 5330 GetFreeBSDSysInfo(&sysinfo);; 5331#endif; 5332 }; 5333 ; 5334 *info = sysinfo;; 5335 ; 5336 return 0;; 5337}; 5338 ; 5339////////////////////////////////////////////////////////////////////////////////; 5340/// Returns cpu load average and load info into the CpuInfo_t structure.; 5341/// Returns -1 in case of error, 0 otherwise. Use sampleTime to set the; 5342/// interval over which the CPU load will be measured, in ms (default 1000).; 5343 ; 5344int TUnixSystem::GetCpuInfo(CpuInfo_t *info, Int_t sampleTime) const; 5345{; 5346 if (!info) return -1;; 5347 ; 5348#if defined(R__MACOSX); 5349 GetDarwinCpuInfo(info, sampleTime);; 5350#elif d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:172653,error,error,172653,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,":TH3 for explanation of parameters); 4717 ; 4718TH3D::TH3D(const char *name,const char *title,Int_t nbinsx,const Double_t *xbins; 4719 ,Int_t nbinsy,const Double_t *ybins; 4720 ,Int_t nbinsz,const Double_t *zbins); 4721 :TH3(name,title,nbinsx,xbins,nbinsy,ybins,nbinsz,zbins); 4722{; 4723 TArrayD::Set(fNcells);; 4724 if (fgDefaultSumw2) Sumw2();; 4725}; 4726 ; 4727 ; 4728////////////////////////////////////////////////////////////////////////////////; 4729/// Copy constructor.; 4730/// The list of functions is not copied. (Use Clone() if needed); 4731 ; 4732TH3D::TH3D(const TH3D &h3d) : TH3(), TArrayD(); 4733{; 4734 // intentially call virtual Copy method to warn if TProfile3D is copied; 4735 h3d.Copy(*this);; 4736}; 4737 ; 4738 ; 4739////////////////////////////////////////////////////////////////////////////////; 4740/// Copy this 3-D histogram structure to newth3.; 4741 ; 4742void TH3D::Copy(TObject &newth3) const; 4743{; 4744 TH3::Copy(newth3);; 4745}; 4746 ; 4747 ; 4748////////////////////////////////////////////////////////////////////////////////; 4749/// Reset this histogram: contents, errors, etc.; 4750 ; 4751void TH3D::Reset(Option_t *option); 4752{; 4753 TH3::Reset(option);; 4754 TArrayD::Reset();; 4755 // should also reset statistics once statistics are implemented for TH3; 4756}; 4757 ; 4758 ; 4759////////////////////////////////////////////////////////////////////////////////; 4760/// Set total number of bins including under/overflow; 4761/// Reallocate bin contents array; 4762 ; 4763void TH3D::SetBinsLength(Int_t n); 4764{; 4765 if (n < 0) n = (fXaxis.GetNbins()+2)*(fYaxis.GetNbins()+2)*(fZaxis.GetNbins()+2);; 4766 fNcells = n;; 4767 TArrayD::Set(n);; 4768}; 4769 ; 4770 ; 4771////////////////////////////////////////////////////////////////////////////////; 4772/// Stream an object of class TH3D.; 4773 ; 4774void TH3D::Streamer(TBuffer &R__b); 4775{; 4776 if (R__b.IsReading()) {; 4777 UInt_t R__s, R__c;; 4778 if (R__b.GetParent() && R__b.GetVersionOwner",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:175974,error,errors,175974,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['error'],['errors']
Availability,":Types::kRegression@ kRegressionDefinition Types.h:128; TMVA::Types::kTraining@ kTrainingDefinition Types.h:143; TMVA::kFATAL@ kFATALDefinition Types.h:61; TMarker::Printvoid Print(Option_t *option="""") const overrideDump this marker with its attributes.Definition TMarker.cxx:339; TMatrixTBase::Printvoid Print(Option_t *name="""") const overridePrint the matrix as a table of elements.Definition TMatrixTBase.cxx:636; TMatrixTTMatrixT.Definition TMatrixT.h:40; TNamed::Printvoid Print(Option_t *option="""") const overridePrint TNamed name and title.Definition TNamed.cxx:128; TObjArrayAn array of TObjects.Definition TObjArray.h:31; TObjStringCollectable string class.Definition TObjString.h:28; TObjString::GetStringconst TString & GetString() constDefinition TObjString.h:46; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Printvirtual void Print(Option_t *option="""") constThis method must be overridden when a class wants to print itself.Definition TObject.cxx:642; TStringBasic string class.Definition TString.h:139; TString::LengthSsiz_t Length() constDefinition TString.h:417; TString::AtoiInt_t Atoi() constReturn integer value of string.Definition TString.cxx:1988; TString::StripTSubString Strip(EStripType s=kTrailing, char c=' ') constReturn a substring of self stripped at beginning and/or end.Definition TString.cxx:1163; TString::IsFloatBool_t IsFloat() constReturns kTRUE if string contains a floating point or integer number.Definition TString.cxx:1858; TString::FirstSsiz_t First(char c) constFind first occurrence of a character c.Definition TString.cxx:538; TString::Dataconst char * Data() constDefinition TString.h:376; TString::ReplaceAllTString & ReplaceAll(const TString &s1, const TString &s2)Definition TString.h:704; TString::kTrailing@ kTrailingDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:116079,error,error,116079,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['error'],['error']
Availability,":UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfExitStatusQuery exit status ((Int_t)TVirtualProofPlayer::EExitStatus or -1);; set<string,less<string>,allocator<string> >::iteratorfIter!iterator in messages; set<string>fMsgslist of error messages; Long_tfResMaxMstMax resident memory used by the master; Long_tfResMemMaxMax resident memory used by the worker; Long_tfVirtMaxMstMax virtual memory used by the master; Long_tfVirtMemMaxMax virtual memory used by the worker. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStatus(); Default constructor. void Add(const char* mesg); Add an error message. Int_t Merge(TCollection* list); PROOF Merge() function. void Print(Option_t* option = """") const; Standard print function. void Reset(); Reset the iterator on the messages. const char * NextMesg(); Return the next message or 0. void SetMemValues(Long_t vmem = -1, Long_t rmem = -1, Bool_t master = kFALSE); Set max memory values. TStatus(). virtual ~TStatus(); { }. Bool_t IsOk() const; { return fMsgs.empty(); }. Int_t GetExitStatus() const; { return fExitStatus; }. Long_t GetResMemMax(Bool_t master = kFALSE) const; { return ((master) ? fResMaxMst : fResMemMax); }. Long_t GetVirtMemMax(Bool_t master = kFALSE)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStatus.html:6152,error,error,6152,root/html532/TStatus.html,https://root.cern,https://root.cern/root/html532/TStatus.html,1,['error'],['error']
Availability,":Vary ; (; std::string_view ; colName, . std::string_view ; expression, . const std::vector< std::string > & ; variationTags, . std::string_view ; variationName = """" . ). inline . Register systematic variations for a single existing column using custom variation tags. ; Parameters. [in]colNamename of the column for which varied values are provided. ; [in]expressiona string containing valid C++ code that evaluates to an RVec containing the varied values for the specified column. ; [in]variationTagsnames for each of the varied values, e.g. ""up"" and ""down"". ; [in]variationNamea generic name for this set of varied values, e.g. ""ptvariation"". colName is used if none is provided. This overload adds the possibility for the expression used to evaluate the varied values to be just-in-time compiled. The example below shows how Vary() is used while dealing with a single column. The variation tags are defined as {""down"", ""up""}. auto nominal_hx =; df.Vary(""pt"", ""ROOT::RVecD{pt*0.9, pt*1.1}"", {""down"", ""up""}); .Filter(""pt > k""); .Define(""x"", someFunc, {""pt""}); .Histo1D(""x"");; ; auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; hx[""nominal""].Draw();; hx[""pt:down""].Draw(""SAME"");; hx[""pt:up""].Draw(""SAME"");; See alsoThis Vary() overload for more information. ; Definition at line 1074 of file RInterface.hxx. ◆ Vary() [11/11]. template<typename Proxied , typename DataSource = void> . RInterface< Proxied, DS_t > ROOT::RDF::RInterface< Proxied, DataSource >::Vary ; (; std::string_view ; colName, . std::string_view ; expression, . std::size_t ; nVariations, . std::string_view ; variationName = """" . ). inline . Register systematic variations for a single existing column using auto-generated variation tags. ; Parameters. [in]colNamename of the column for which varied values are provided. ; [in]expressiona string containing valid C++ code that evaluates to an RVec containing the varied values for the specified column. ; [in]nVariationsnumber of variations returned by the expressio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:153956,down,down,153956,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['down'],['down']
Availability,":_nullProp ; (; ). staticprotected . Null property. ; Return a dummy object to use when properties are not initialised. ; Definition at line 102 of file RooRealVar.cxx. ◆ attachToTree(). void RooRealVar::attachToTree ; (; TTree & ; t, . Int_t ; bufSize = 32000 . ). overrideprotectedvirtual . Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ; Reimplemented from RooAbsReal.; Definition at line 1102 of file RooRealVar.cxx. ◆ attachToVStore(). void RooRealVar::attachToVStore ; (; RooVectorDataStore & ; vstore). overrideprotectedvirtual . Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ; Reimplemented from RooAbsReal.; Definition at line 1069 of file RooRealVar.cxx. ◆ chopAt(). double RooRealVar::chopAt ; (; double ; what, . Int_t ; where . ); const. protected . Utility to calculate number of decimals to show based on magnitude of error. ; Definition at line 1055 of file RooRealVar.cxx. ◆ Class(). static TClass * RooRealVar::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooRealVar::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooRealVar::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 173 of file RooRealVar.h. ◆ cleanup(). void RooRealVar::cleanup ; (; ). static . Explicitly deletes the shared properties list on exit to avoid problems with the initialization order. ; Meant to be only used internally in RooFit by RooSentinel. ; Definition at line 75 of file RooRealVar.cxx. ◆ clone(). TObject * RooRealVar::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 48 of file RooRealVar.h. ◆ copyCache(). void RooRealVar::copyCache ; (; const RooAbsArg * ; source, . bool ; valueOnly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:75946,error,error,75946,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,1,['error'],['error']
Availability,":fAmpErrY1. protected . [fNPeaks] array of amplitudes errors of 1D ridges in y direction, output parameters ; Definition at line 50 of file TSpectrum2Fit.h. ◆ fAmpInit. Double_t* TSpectrum2Fit::fAmpInit. protected . [fNPeaks] array of initial values of amplitudes of 2D peaks, input parameters ; Definition at line 42 of file TSpectrum2Fit.h. ◆ fAmpInitX1. Double_t* TSpectrum2Fit::fAmpInitX1. protected . [fNPeaks] array of initial values of amplitudes of 1D ridges in x direction, input parameters ; Definition at line 45 of file TSpectrum2Fit.h. ◆ fAmpInitY1. Double_t* TSpectrum2Fit::fAmpInitY1. protected . [fNPeaks] array of initial values of amplitudes of 1D ridges in y direction, input parameters ; Definition at line 48 of file TSpectrum2Fit.h. ◆ fAxCalc. Double_t TSpectrum2Fit::fAxCalc. protected . calculated value of background ax parameter ; Definition at line 90 of file TSpectrum2Fit.h. ◆ fAxErr. Double_t TSpectrum2Fit::fAxErr. protected . error value of background ax parameter ; Definition at line 91 of file TSpectrum2Fit.h. ◆ fAxInit. Double_t TSpectrum2Fit::fAxInit. protected . initial value of background ax parameter(backgroud is estimated as a0+ax*x+ay*y) ; Definition at line 89 of file TSpectrum2Fit.h. ◆ fAyCalc. Double_t TSpectrum2Fit::fAyCalc. protected . calculated value of background ay parameter ; Definition at line 93 of file TSpectrum2Fit.h. ◆ fAyErr. Double_t TSpectrum2Fit::fAyErr. protected . error value of background ay parameter ; Definition at line 94 of file TSpectrum2Fit.h. ◆ fAyInit. Double_t TSpectrum2Fit::fAyInit. protected . initial value of background ay parameter(backgroud is estimated as a0+ax*x+ay*y) ; Definition at line 92 of file TSpectrum2Fit.h. ◆ fBxCalc. Double_t TSpectrum2Fit::fBxCalc. protected . calculated value of b parameter for 1D ridges in x direction ; Definition at line 81 of file TSpectrum2Fit.h. ◆ fBxErr. Double_t TSpectrum2Fit::fBxErr. protected . error value of b parameter for 1D ridges in x direction ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Fit.html:80569,error,error,80569,doc/master/classTSpectrum2Fit.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Fit.html,1,['error'],['error']
Availability,":fClientConnection to display server; Handle_tTGObject::fIdX11/Win32 Window identifier. private:. THashTable*fListhash table of graphics contexts in pool. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGCPool(TGClient* client); Create graphics context pool. ~TGGCPool(); Delete graphics context pool. void ForceFreeGC(const TGGC* gc); Force remove graphics context from list. Is only called via ~TGGC(). void FreeGC(const TGGC* gc); Delete graphics context if it is not used anymore. void FreeGC(GContext_t gc); Delete graphics context if it is not used anymore. TGGC * FindGC(const TGGC* gc); Find graphics context. Returns 0 in case gc is not found. TGGC * FindGC(GContext_t gc); Find graphics context based on its GContext_t handle. Returns 0; in case gc is not found. TGGC * GetGC(GContext_t gct); returns graphics context based on its GContext_t handle. TGGC * GetGC(GCValues_t* values, Bool_t rw = kFALSE); Get the best matching graphics context depending on values.; If rw is false only a readonly, not modifiable graphics context; is returned. If rw is true a new modifiable graphics context is; returned. Int_t MatchGC(const TGGC* gc, GCValues_t* values); Try to find matching graphics context. On success returns the amount; of matching bits (which may be zero if masks have no common bits),; -1 on failure (when there are common bits but not a single match). void UpdateGC(TGGC* gc, GCValues_t* values); Update graphics context with the values spcified in values->fMask. void Print(Option_t* option = """") const; List all graphics contexts in the pool. TGGC & operator=(const TGGCPool& gp). TGGCPool(const TGGCPool& gp); { }. » Author: Fons Rademakers 20/9/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-03-13 19:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGGCPool.html:6944,mask,masks,6944,root/html534/TGGCPool.html,https://root.cern,https://root.cern/root/html534/TGGCPool.html,2,"['failure', 'mask']","['failure', 'masks']"
Availability,":fClientConnection to display server; Handle_tTGObject::fIdX11/Win32 Window identifier. private:. THashTable*fListhash table of graphics contexts in pool. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGCPool(TGClient* client); Create graphics context pool. ~TGGCPool(); Delete graphics context pool. void ForceFreeGC(const TGGC* gc); Force remove graphics context from list. Is only called via ~TGGC(). void FreeGC(const TGGC* gc); Delete graphics context if it is not used anymore. void FreeGC(GContext_t gc); Delete graphics context if it is not used anymore. TGGC * FindGC(const TGGC* gc); Find graphics context. Returns 0 in case gc is not found. TGGC * FindGC(GContext_t gc); Find graphics context based on its GContext_t handle. Returns 0; in case gc is not found. TGGC * GetGC(GContext_t gct); returns graphics context based on its GContext_t handle. TGGC * GetGC(GCValues_t* values, Bool_t rw = kFALSE); Get the best matching graphics context depending on values.; If rw is false only a readonly, not modifiable graphics context; is returned. If rw is true a new modifiable graphics context is; returned. Int_t MatchGC(const TGGC* gc, GCValues_t* values); Try to find matching graphics context. On success returns the amount; of matching bits (which may be zero if masks have no common bits),; -1 on failure (when there are common bits but not a single match). void UpdateGC(TGGC* gc, GCValues_t* values); Update graphics context with the values spcified in values->fMask. void Print(Option_t* option = """") const; List all graphics contexts in the pool. TGGC & operator=(const TGGCPool& gp). TGGCPool(const TGGCPool& gp); { }. » Author: Fons Rademakers 20/9/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-02 15:50; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TGGCPool.html:7405,mask,masks,7405,root/html604/TGGCPool.html,https://root.cern,https://root.cern/root/html604/TGGCPool.html,2,"['failure', 'mask']","['failure', 'masks']"
Availability,":fClientConnection to display server; Handle_tTGObject::fIdX11/Win32 Window identifier. private:. THashTable*fListhash table of graphics contexts in pool. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGGCPool(TGClient* client); Create graphics context pool. ~TGGCPool(); Delete graphics context pool. void ForceFreeGC(const TGGC* gc); Force remove graphics context from list. Is only called via ~TGGC(). void FreeGC(const TGGC* gc); Delete graphics context if it is not used anymore. void FreeGC(GContext_t gc); Delete graphics context if it is not used anymore. TGGC * FindGC(const TGGC* gc); Find graphics context. Returns 0 in case gc is not found. TGGC * FindGC(GContext_t gc); Find graphics context based on its GContext_t handle. Returns 0; in case gc is not found. TGGC * GetGC(GContext_t gct); returns graphics context based on its GContext_t handle. TGGC * GetGC(GCValues_t* values, Bool_t rw = kFALSE); Get the best matching graphics context depending on values.; If rw is false only a readonly, not modifiable graphics context; is returned. If rw is true a new modifiable graphics context is; returned. Int_t MatchGC(const TGGC* gc, GCValues_t* values); Try to find matching graphics context. On success returns the amount; of matching bits (which may be zero if masks have no common bits),; -1 on failure (when there are common bits but not a single match). void UpdateGC(TGGC* gc, GCValues_t* values); Update graphics context with the values spcified in values->fMask. void Print(Option_t* option = """") const; List all graphics contexts in the pool. TGGC & operator=(const TGGCPool& gp). TGGCPool(const TGGCPool& gp); { }. » Author: Fons Rademakers 20/9/2000 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/gui:$Id$ » Last generated: 2015-06-30 14:51; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGGCPool.html:7405,mask,masks,7405,root/html602/TGGCPool.html,https://root.cern,https://root.cern/root/html602/TGGCPool.html,2,"['failure', 'mask']","['failure', 'masks']"
Availability,":fMove1: move min value; const TGWindow*TGWidget::fMsgWindowwindow which handles widget events; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; const TGPicture*fPointerPicpicture to draw pointer; Float_tTGDoubleSlider::fPoslogical position between fVmin and fVmax; Int_tTGDoubleSlider::fPressPointmouse position at button press event; Float_tTGDoubleSlider::fPressSmaxlogical max position at button press event; Float_tTGDoubleSlider::fPressSminlogical min position at button press event; Int_tTGDoubleSlider::fRelPosslider position in pixel coordinates; Bool_tfRelativekTRUE if pointer position is relative to slider; Bool_tTGDoubleSlider::fReversedScalereverse which end is min and max; Float_tfSCzvertical pointer position; Int_tTGDoubleSlider::fScaletick mark scale; Int_tTGDoubleSlider::fScaleTypetick mark scale type (no, downright, both); Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; const TGPicture*TGDoubleSlider::fSliderPicpicture to draw slider ends; Float_tTGDoubleSlider::fSmaxlogical position of max value of Slider; Float_tTGDoubleSlider::fSminlogical position of min value of Slider; Float_tTGDoubleSlider::fVmaxlogical upper limit of slider; Float_tTGDoubleSlider::fVminlogical lower limit of slider; Int_tTGWidget::fWidgetFlagswidget status flags (OR of EWidgetStatus); Int_tTGWidget::fWidgetIdthe widget id (used for event processing); UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGDoubleHSlider::fXphorizontal slider x position in pixel coordinates; Int_tTGFrame::fYframe y position; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTripleHSlider.html:19741,down,downright,19741,root/html528/TGTripleHSlider.html,https://root.cern,https://root.cern/root/html528/TGTripleHSlider.html,6,['down'],['downright']
Availability,":fMove1: move min value; const TGWindow*TGWidget::fMsgWindowwindow which handles widget events; TStringTGWindow::fNamename of the window used in SavePrimitive(); Bool_tTGWindow::fNeedRedrawkTRUE if window needs to be redrawn; UInt_tTGFrame::fOptionsframe options; const TGWindow*TGWindow::fParentParent window; const TGPicture*fPointerPicpicture to draw pointer; Float_tTGDoubleSlider::fPoslogical position between fVmin and fVmax; Int_tTGDoubleSlider::fPressPointmouse position at button press event; Float_tTGDoubleSlider::fPressSmaxlogical max position at button press event; Float_tTGDoubleSlider::fPressSminlogical min position at button press event; Int_tTGDoubleSlider::fRelPosslider position in pixel coordinates; Bool_tfRelativekTRUE if pointer position is relative to slider; Bool_tTGDoubleSlider::fReversedScalereverse which end is min and max; Float_tfSCzvertical pointer position; Int_tTGDoubleSlider::fScaletick mark scale; Int_tTGDoubleSlider::fScaleTypetick mark scale type (no, downright, both); Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; const TGPicture*TGDoubleSlider::fSliderPicpicture to draw slider ends; Float_tTGDoubleSlider::fSmaxlogical position of max value of Slider; Float_tTGDoubleSlider::fSminlogical position of min value of Slider; Float_tTGDoubleSlider::fVmaxlogical upper limit of slider; Float_tTGDoubleSlider::fVminlogical lower limit of slider; Int_tTGWidget::fWidgetFlagswidget status flags (OR of EWidgetStatus); Int_tTGWidget::fWidgetIdthe widget id (used for event processing); UInt_tTGFrame::fWidthframe width; Int_tTGFrame::fXframe x position; Int_tTGFrame::fYframe y position; Int_tTGDoubleVSlider::fYpvertical slider y position in pixel coordinates; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static const TGGC*TGFrame::fgBckgndGC; static const TGGC*TGFrame::fgBlackGC; static Pixel_tTGFrame::fgBlackPixel; static Int_tTGWindow::fgCountercounter of created windows in SavePrimitive; st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTripleVSlider.html:19737,down,downright,19737,root/html528/TGTripleVSlider.html,https://root.cern,https://root.cern/root/html528/TGTripleVSlider.html,6,['down'],['downright']
Availability,":fNameobject identifier; TStringTNamed::fTitleobject title. private:. static Int_t_evalErrorCount; static map<const RooAbsArg*,std::pair<std::string,std::list<EvalError> > >_evalErrorList; static RooAbsReal::ErrorLoggingMode_evalErrorMode. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsReal(); Destructor. Bool_t operator==(Double_t value) const; Equality operator comparing to a Double_t. Bool_t operator==(const RooAbsArg& other); Equality operator when comparing to another RooAbsArg.; Only functional when the other arg is a RooAbsReal. TString getTitle(Bool_t appendUnit = kFALSE) const; Return this variable's title string. If appendUnit is true and; this variable has units, also append a string "" (<unit>)"". Double_t getVal(const RooArgSet* set = 0) const; Return value of object. If the cache is clean, return the; cached value, otherwise recalculate on the fly and refill; the cache. Double_t traceEval(const RooArgSet* set) const; Calculate current value of object, with error tracing wrapper. Int_t getAnalyticalIntegralWN(RooArgSet& allVars, RooArgSet& analVars, const RooArgSet* normSet, const char* rangeName = 0) const; Variant of getAnalyticalIntegral that is also passed the normalization set; that should be applied to the integrand of which the integral is request.; For certain operator p.d.f it is useful to overload this function rather; than analyticalIntegralWN() as the additional normalization information; may be useful in determining a more efficient decomposition of the; requested integral. Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName = 0) const; Interface function getAnalyticalIntergral advertises the; analytical integrals that are supported. 'integSet'; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to anaIntSet and return a unique identification code for; this integra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsReal.html:32489,error,error,32489,root/html528/RooAbsReal.html,https://root.cern,https://root.cern/root/html528/RooAbsReal.html,1,['error'],['error']
Availability,":fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications; static TStringTProofServ::fgLastMsgMessage about status before exception. private:. TXSocketHandler*fInputHandler; TXProofServInterruptHandler*fInterruptHandler; TStringfSockPath; Bool_tfTerminatedtrue if Terminate() has been already called. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TXProofServ(Int_t* argc, char** argv, FILE* flog = 0); Main constructor. Int_t CreateServer(); Finalize the server setup. If master, create the TProof instance to talk; the worker or submaster nodes.; Return 0 on success, -1 on error. ~TXProofServ(); Cleanup. Not really necessary since after this dtor there is no; live anyway. void HandleUrgentData(); Handle high priority data sent by the master or client. void HandleSigPipe(); Called when the client is not alive anymore; terminate the session. void HandleTermination(); Called when the client is not alive anymore; terminate the session. Int_t Setup(); Print the ProofServ logo on standard output.; Return 0 on success, -1 on error. TProofServ::EQueryAction GetWorkers(TList* workers, Int_t& prioritychange, Bool_t resume = kFALSE); Get list of workers to be used from now on.; The list must be provided by the caller. Bool_t HandleError(const void* in = 0); Handle error on the input socket. Bool_t HandleInput(const void* in = 0); Handle asynchronous input on the input socket. void DisableTimeout(); Disable read timeout on the underlying socket. void EnableTimeout(); Enable read timeout on the underlying socket. void Terminate(Int_t status); Terminate the proof server. Int_t LockSession(const char* sessiontag, TProofLockPath** lck); Try locking query area of session tagged sessiontag.; The id of the locking file is returned in fid and must be; unlocked via UnlockQueryFile(fid). void Rele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXProofServ.html:17299,alive,alive,17299,root/html528/TXProofServ.html,https://root.cern,https://root.cern/root/html528/TXProofServ.html,3,['alive'],['alive']
Availability,":fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsString(); Destructor. const char* getVal() const; Return value of object. Calculated if dirty, otherwise cached value is returned. Bool_t operator==(const char* ) const; Equality operator comparing with a TString. Bool_t operator==(const RooAbsArg& other); Equality operator comparing to another RooAbsArg. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream (dummy for now). void writeToStream(ostream& os, Bool_t compact) const; Write object contents to stream (dummy for now). void printValue(ostream& os) const; Print value. Bool_t isValid() const; Check if current value is valid. Bool_t isValidString(const char* , Bool_t printError = kFALSE) const; Check if given string value is valid. Bool_t traceEvalHook(const char* value) const; Hook function for trace evaluation. const char* traceEval() const; Calculate current value of object, with error tracing wrapper. void syncCache(const RooArgSet* nset = 0); Forcibly bring internal cache up-to-date. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE); Copy cache of another RooAbsArg to our cache. Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. void fillTreeBranch(TTree& t); Fill tree branch associated with this object. void setTreeBranchStatus(TTree& t, Bool_t active); (De)Activate associated tree branch. RooAbsArg * createFundamental(const char* newname = 0) const; Create a RooStringVar fundamental object with our properties. TString evaluate() const; { return """" ; }. » Last changed: Mon Jul 4 15:21:31 2011 » Last generated: 2011-07-04 15:21; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooAbsString.html:20121,error,error,20121,root/html530/RooAbsString.html,https://root.cern,https://root.cern/root/html530/RooAbsString.html,1,['error'],['error']
Availability,":fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsString(); Destructor. const char* getVal() const; Return value of object. Calculated if dirty, otherwise cached value is returned. Bool_t operator==(const char* ) const; Equality operator comparing with a TString. Bool_t operator==(const RooAbsArg& other); Equality operator comparing to another RooAbsArg. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream (dummy for now). void writeToStream(ostream& os, Bool_t compact) const; Write object contents to stream (dummy for now). void printValue(ostream& os) const; Print value. Bool_t isValid() const; Check if current value is valid. Bool_t isValidString(const char* , Bool_t printError = kFALSE) const; Check if given string value is valid. Bool_t traceEvalHook(const char* value) const; Hook function for trace evaluation. const char* traceEval() const; Calculate current value of object, with error tracing wrapper. void syncCache(const RooArgSet* nset = 0); Forcibly bring internal cache up-to-date. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE); Copy cache of another RooAbsArg to our cache. Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. void fillTreeBranch(TTree& t); Fill tree branch associated with this object. void setTreeBranchStatus(TTree& t, Bool_t active); (De)Activate associated tree branch. RooAbsArg * createFundamental(const char* newname = 0) const; Create a RooStringVar fundamental object with our properties. TString evaluate() const; { return """" ; }. » Last changed: Sat Oct 9 22:38:32 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsString.html:19999,error,error,19999,root/html528/RooAbsString.html,https://root.cern,https://root.cern/root/html528/RooAbsString.html,1,['error'],['error']
Availability,":fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; ~RooAbsString(); Destructor. const char* getVal() const; Return value of object. Calculated if dirty, otherwise cached value is returned. Bool_t operator==(const char* ) const; Equality operator comparing with a TString. Bool_t operator==(const RooAbsArg& other); Equality operator comparing to another RooAbsArg. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream (dummy for now). void writeToStream(ostream& os, Bool_t compact) const; Write object contents to stream (dummy for now). void printValue(ostream& os) const; Print value. Bool_t isValid() const; Check if current value is valid. Bool_t isValidString(const char* , Bool_t printError = kFALSE) const; Check if given string value is valid. Bool_t traceEvalHook(const char* value) const; Hook function for trace evaluation. const char* traceEval() const; Calculate current value of object, with error tracing wrapper. void syncCache(const RooArgSet* nset = 0); Forcibly bring internal cache up-to-date. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDiry = kTRUE); Copy cache of another RooAbsArg to our cache. Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. void fillTreeBranch(TTree& t); Fill tree branch associated with this object. void setTreeBranchStatus(TTree& t, Bool_t active); (De)Activate associated tree branch. RooAbsArg * createFundamental(const char* newname = 0) const; Create a RooStringVar fundamental object with our properties. TString evaluate() const; { return """" ; }. void attachToVStore(RooVectorDataStore& ); {}. » Last changed: Thu Nov 3 20:06:51 2011 » Last generated: 2011-11-03 20:06; This page has been automatically generated. For com",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooAbsString.html:20480,error,error,20480,root/html532/RooAbsString.html,https://root.cern,https://root.cern/root/html532/RooAbsString.html,1,['error'],['error']
Availability,":fVersionBuffer format version; static Int_tfgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferFile(TBuffer::EMode mode); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. TBufferFile(TBuffer::EMode mode, Int_t bufsiz); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. TBufferFile(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; to TBuffer via the buf argument. By default this buffer will be adopted; unless adopt is false.; If the new buffer is _not_ adopted and no memory allocation routine; is provided, a Fatal error will be issued if the Buffer attempts to; expand. ~TBufferFile(); Delete an I/O buffer object. Int_t GetVersionOwner() const; Return the version number of the owner file. void IncrementLevel(TVirtualStreamerInfo* info); Increment level. void DecrementLevel(TVirtualStreamerInfo* ); Decrement level. void PushDataCache(TVirtualArray* ); Push a new data cache area onto the list of area to be used for; temporarily store 'missing' data members. TVirtualArray * PeekDataCache() const; Return the 'current' data cache area from the list of area to be used for; temporarily store 'missing' data members. TVirtualArray * PopDataCache(); Pop and Return the 'current' data cache area from the list of area to be used for; temporarily store 'missing' data members. void ReadLong(Long_t& l); Read Long from TBuffer. void ReadTString(TString& s); Read string from TBuffer. void WriteTString(const TString& s); Write string to TBuffer. void SetByteCount(UInt_t cntpos, Bool_t packInVersio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBufferFile.html:17986,error,error,17986,root/html526/TBufferFile.html,https://root.cern,https://root.cern/root/html526/TBufferFile.html,1,['error'],['error']
Availability,":fVersionBuffer format version; static Int_tfgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferFile(TBuffer::EMode mode); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. TBufferFile(TBuffer::EMode mode, Int_t bufsiz); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. TBufferFile(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; to TBuffer via the buf argument. By default this buffer will be adopted; unless adopt is false.; If the new buffer is _not_ adopted and no memory allocation routine; is provided, a Fatal error will be issued if the Buffer attempts to; expand. ~TBufferFile(); Delete an I/O buffer object. Int_t GetVersionOwner() const; Return the version number of the owner file. void TagStreamerInfo(TVirtualStreamerInfo* info); Mark the classindex of the current file as using this TStreamerInfo. void IncrementLevel(TVirtualStreamerInfo* info); Increment level. void DecrementLevel(TVirtualStreamerInfo* ); Decrement level. void ReadLong(Long_t& l); Read Long from TBuffer. void ReadTString(TString& s); Read TString from TBuffer. void WriteTString(const TString& s); Write TString to TBuffer. void ReadStdString(string& s); Read std::string from TBuffer. void WriteStdString(const string& s); Write std::string to TBuffer. void SetByteCount(UInt_t cntpos, Bool_t packInVersion = kFALSE); Set byte count at position cntpos in the buffer. Generate warning if; count larger than kMaxMapCount. The count is excluded its own size. Int_t CheckByteCount(UInt_t startpos, UInt_t bcnt, cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBufferFile.html:19474,error,error,19474,root/html534/TBufferFile.html,https://root.cern,https://root.cern/root/html534/TBufferFile.html,2,['error'],['error']
Availability,":fVersionBuffer format version; static Int_tfgMapSizeDefault map size for all TBuffer objects. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TBufferFile(TBuffer::EMode mode); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. TBufferFile(TBuffer::EMode mode, Int_t bufsiz); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. TBufferFile(TBuffer::EMode mode, Int_t bufsiz, void* buf, Bool_t adopt = kTRUE, ReAllocCharFun_t reallocfunc = 0); Create an I/O buffer object. Mode should be either TBuffer::kRead or; TBuffer::kWrite. By default the I/O buffer has a size of; TBuffer::kInitialSize (1024) bytes. An external buffer can be passed; to TBuffer via the buf argument. By default this buffer will be adopted; unless adopt is false.; If the new buffer is _not_ adopted and no memory allocation routine; is provided, a Fatal error will be issued if the Buffer attempts to; expand. ~TBufferFile(); Delete an I/O buffer object. Int_t GetVersionOwner() const; Return the version number of the owner file. void TagStreamerInfo(TVirtualStreamerInfo* info); Mark the classindex of the current file as using this TStreamerInfo. void IncrementLevel(TVirtualStreamerInfo* info); Increment level. void DecrementLevel(TVirtualStreamerInfo* ); Decrement level. void ReadLong(Long_t& l); Read Long from TBuffer. void ReadTString(TString& s); Read string from TBuffer. void WriteTString(const TString& s); Write string to TBuffer. void SetByteCount(UInt_t cntpos, Bool_t packInVersion = kFALSE); Set byte count at position cntpos in the buffer. Generate warning if; count larger than kMaxMapCount. The count is excluded its own size. Int_t CheckByteCount(UInt_t startpos, UInt_t bcnt, const TClass* clss, const char* classname); Check byte count with current buffer position. They should; match. If not print warning and ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBufferFile.html:18736,error,error,18736,root/html528/TBufferFile.html,https://root.cern,https://root.cern/root/html528/TBufferFile.html,4,['error'],['error']
Availability,":fYInput: y; TMatrixD*fYDataInput: fY prior to bgr subtraction. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TUnfoldSys(const TUnfoldSys& ); set all pointers to zero. void DoBackgroundSubtraction(void); performs background subtraction; fY = fYData - fBgrIn; fVyy = fVyyData + fBgrErrUncorr^2 + fBgrErrCorr * fBgrErrCorr#; fVyyinv = fVyy^(-1). Int_t SetInput(const TH1* hist_y, Double_t scaleBias = 0.0, Double_t oneOverZeroError = 0.0, const TH2* hist_vyy = 0, const TH2* hist_vyy_inv = 0); Define the input data for subsequent calls to DoUnfold(Double_t); input: input distribution with errors; scaleBias: scale factor applied to the bias; oneOverZeroError: for bins with zero error, this number defines 1/error.; Return value: number of bins with bad error; +10000*number of unconstrained output bins; Note: return values>=10000 are fatal errors,; for the given input, the unfolding can not be done!; Calls the SetInput method of the base class, then renames the input; vectors fY and fVyy, then performs the background subtraction; Data members modified:; fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; and those modified by TUnfold::SetInput(); and those modified by DoBackgroundSubtraction(). void InitTUnfoldSys(void); initialize pointers and TMaps. ~TUnfoldSys(void); delete all data members. void ClearResults(void); clear all data members which depend on the unfolding results. void PrepareSysError(void); calculations required for syst.error; data members modified; fEmatUncorrX, fEmatUncorrAx, fDeltaCorrX, fDeltaCorrAx. void SetTauError(Double_t delta_tau); set uncertainty on tau. Bool_t GetDeltaSysSource(TH1* hist_delta, const char* source, const Int_t* binMap = 0); calculate systematic shift from a given source; ematrix: output; source: name of the error source; binMap: see method GetEmatrix(). Bool_t GetDeltaSysTau(TH1* delta, const Int_t* binMap = 0); calculate systematic shift from tau variation; ematrix: output; binMap: see method",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfoldSys.html:17490,error,error,17490,root/html534/TUnfoldSys.html,https://root.cern,https://root.cern/root/html534/TUnfoldSys.html,2,['error'],"['error', 'errors']"
Availability,":fZ[fNpoints]; Double_tTGraph2D::fZoutfHistogram bin height for points lying outside the interpolated area. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraph2DErrors(); TGraph2DErrors default constructor. TGraph2DErrors(Int_t n); TGraph2DErrors normal constructor; the arrays are preset to zero. TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); TGraph2DErrors constructor with doubles vectors as input. ~TGraph2DErrors(); TGraph2DErrors destructor. Double_t GetErrorX(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorZ(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetXmaxE() const; Returns the X maximum with errors. Double_t GetXminE() const; Returns the X minimum with errors. Double_t GetYmaxE() const; Returns the Y maximum with errors. Double_t GetYminE() const; Returns the Y minimum with errors. Double_t GetZmaxE() const; Returns the Z maximum with errors. Double_t GetZminE() const; Returns the Z minimum with errors. void Set(Int_t n); Set number of points in the 2D graph.; Existing coordinates are preserved.; New coordinates above fNpoints are preset to 0. void SetPoint(Int_t i, Double_t x, Double_t y, Double_t z); Set x, y and z values for point number i. void SetPointError(Int_t i, Double_t ex, Double_t ey, Double_t ez); Set ex, ey and ez values for point number i. void Streamer(TBuffer& b); Stream an object of class TGraphErrors. TGraph2DErrors(const TGraph2DErrors& ). TGraph2DErrors& operator=(const TGraph2DErrors& ). Double_t * GetEX() const; {return fEX;}. Double_t * GetEY() const; {return fEY;}. Double_t * GetEZ() const; {return fEZ;}. » Author: Olivier C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraph2DErrors.html:13190,error,errors,13190,root/html530/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html530/TGraph2DErrors.html,2,['error'],['errors']
Availability,":fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGContainer(const TGWindow* p = 0, UInt_t w = 1, UInt_t h = 1, UInt_t options = kSunkenFrame, Pixel_t back = GetDefaultFrameBackground()); Create a canvas container. This is the (large) frame that contains; all the list items. It will be shown through a TGViewPort (which is; created by the TGCanvas). TGContainer(TGCanvas* p, UInt_t options = kSunkenFrame, Pixel_t back = GetDefaultFrameBackground()); Create a canvas container. This is the (large) frame that contains; all the list items. It will be shown through a TGViewPort (which is; created by the TGCanvas). ~TGContainer(); Delete canvas container. void Layout(); Layout container entries. void CurrentChanged(Int_t x, Int_t y); Emit signal when current position changed. void CurrentChanged(TGFrame* f); Emit signal when current selected frame changed. void KeyPressed(TGFrame* , UInt_t keysym, UInt_t mask); Signal emitted when keyboard key pressed. frame - activated frame; keysym - defined in ""KeySymbols.h""; mask - modifier key mask, defined in ""GuiTypes.h"". const Mask_t kKeyShiftMask = BIT(0);; const Mask_t kKeyLockMask = BIT(1);; const Mask_t kKeyControlMask = BIT(2);; const Mask_t kKeyMod1Mask = BIT(3); // typically the Alt key; const Mask_t kButton1Mask = BIT(8);; const Mask_t kButton2Mask = BIT(9);; const Mask_t kButton3Mask = BIT(10);; const Mask_t kButton4Mask = BIT(11);; const Mask_t kButton5Mask = BIT(12);; const Mask_t kAnyModifier = BIT(15);. void ReturnPressed(TGFrame* ); Signal emitted when Return/Enter key pressed.; It's equivalent to ""double click"" of mouse button. void SpacePressed(TGFrame* ); Signal emitted when space key pressed.; Pressing space key inverts selection. void OnMouseOver(TGFrame* ); Signal emitted when pointer is over entry. void Clicked(TGFrame* f, Int_t btn); Emit Clicked() signal. void Clicked(TGFrame* f, Int_t btn, Int_t x, Int_t y); Emit Clicke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGContainer.html:24110,mask,mask,24110,root/html528/TGContainer.html,https://root.cern,https://root.cern/root/html528/TGContainer.html,4,['mask'],['mask']
Availability,":getSigma ; (; const char * ; axis); const. Definition at line 493 of file Roo2DKeysPdf.cxx. ◆ highBoundaryCorrection(). double Roo2DKeysPdf::highBoundaryCorrection ; (; double ; thisVar, . double ; thisH, . double ; high, . double ; tVar . ); const. private . Apply the mirror at boundary correction to a dimension given the space position to evaluate at (thisVar), the bandwidth at this position (thisH), the boundary (high/low) and the value of the data kernel that this correction is being applied to tVar (i.e. ; the _x[ix] etc.). Parameters. [in]thisVar; [in]thisH; [in]high; [in]tVar. Definition at line 414 of file Roo2DKeysPdf.cxx. ◆ IsA(). TClass * Roo2DKeysPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 121 of file Roo2DKeysPdf.h. ◆ loadDataSet(). Int_t Roo2DKeysPdf::loadDataSet ; (; RooDataSet & ; data, . TString ; options . ). Loads a new data set into the class instance. ; Returns 1 in case of error, 0 otherwise. Parameters. [in]data; [in]options. Definition at line 131 of file Roo2DKeysPdf.cxx. ◆ lowBoundaryCorrection(). double Roo2DKeysPdf::lowBoundaryCorrection ; (; double ; thisVar, . double ; thisH, . double ; low, . double ; tVar . ); const. private . Definition at line 426 of file Roo2DKeysPdf.cxx. ◆ PrintInfo(). void Roo2DKeysPdf::PrintInfo ; (; std::ostream & ; out); const. Prints out _p[_nPoints][_nPoints] indicating the domain limits. ; Parameters. [out]outOutput stream where to print . Definition at line 610 of file Roo2DKeysPdf.cxx. ◆ setOptions(). void Roo2DKeysPdf::setOptions ; (; TString ; options). Definition at line 226 of file Roo2DKeysPdf.cxx. ◆ setWidthScaleFactor(). void Roo2DKeysPdf::setWidthScaleFactor ; (; double ; widthScaleFactor). inline . Definition at line 124 of file Roo2DKeysPdf.h. ◆ Streamer(). void Roo2DKeysPdf::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRoo2DKeysPdf.html:80609,error,error,80609,doc/master/classRoo2DKeysPdf.html,https://root.cern,https://root.cern/doc/master/classRoo2DKeysPdf.html,1,['error'],['error']
Availability,":initializer_list<T> IL); 699 {; 700 clear();; 701 append(IL);; 702 }; 703 ; 704 iterator erase(const_iterator CI); 705 {; 706 // Just cast away constness because this is a non-const member function.; 707 iterator I = const_cast<iterator>(CI);; 708 ; 709 if (I < this->begin() || I >= this->end()) {; 710 throw std::runtime_error(""The iterator passed to `erase` is out of bounds."");; 711 }; 712 ; 713 iterator N = I;; 714 // Shift all elts down one.; 715 std::move(I + 1, this->end(), I);; 716 // Drop the last elt.; 717 this->pop_back();; 718 return (N);; 719 }; 720 ; 721 iterator erase(const_iterator CS, const_iterator CE); 722 {; 723 // Just cast away constness because this is a non-const member function.; 724 iterator S = const_cast<iterator>(CS);; 725 iterator E = const_cast<iterator>(CE);; 726 ; 727 if (S < this->begin() || E > this->end() || S > E) {; 728 throw std::runtime_error(""Invalid start/end pair passed to `erase` (out of bounds or start > end)."");; 729 }; 730 ; 731 iterator N = S;; 732 // Shift all elts down.; 733 iterator I = std::move(E, this->end(), S);; 734 // Drop the last elts.; 735 if (this->Owns()); 736 this->destroy_range(I, this->end());; 737 this->set_size(I - this->begin());; 738 return (N);; 739 }; 740 ; 741 iterator insert(iterator I, T &&Elt); 742 {; 743 if (I == this->end()) { // Important special case for empty vector.; 744 this->push_back(::std::move(Elt));; 745 return this->end() - 1;; 746 }; 747 ; 748 if (I < this->begin() || I > this->end()) {; 749 throw std::runtime_error(""The iterator passed to `insert` is out of bounds."");; 750 }; 751 ; 752 if (this->size() >= this->capacity()) {; 753 size_t EltNo = I - this->begin();; 754 this->grow();; 755 I = this->begin() + EltNo;; 756 }; 757 ; 758 ::new ((void *)this->end()) T(::std::move(this->back()));; 759 // Push everything else over.; 760 std::move_backward(I, this->end() - 1, this->end());; 761 this->set_size(this->size() + 1);; 762 ; 763 // If we just moved the element we're inserting, be",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RVec_8hxx_source.html:26021,down,down,26021,doc/master/RVec_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RVec_8hxx_source.html,2,['down'],['down']
Availability,":kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TBox::(anonymous)TBox::kCannotMove; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Short_tfBorderModeBordermode (-1=down, 0 = no border, 1=up); Short_tfBorderSizewindow box bordersize in pixels; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Bool_tTBox::fResizing!True if box is being resized; Double_tTBox::fX1X of 1st point; Double_tTBox::fX2X of 2nd point; Double_tTBox::fY1Y of 1st point; Double_tTBox::fY2Y of 2nd point. Class Charts. Inheritance Chart:. TObject. TAttLine. TAttFill. TAttBBox2D. ←; TBox. ←; TWbox. ←. TFrame. TSliderBox. Function documentation; TWbox(); wbox default constructor. TWbox(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Color_t color = 18, Short_t bordersize = 5, Short_t bordermode = 1); wbox normal constructor. a WBOX is a box with a bordersize and a bordermode; the bordersize is in pixels; bordermode = -1 box looks as it is behind the screen; bordermode = 0 no special effects; bordermode = 1 box looks as it is in front of the screen. ~TWbox(); wbox default destructor. TWbox(const TWbox& wbox); wbox copy constructor. void Copy(TObject& wbox) const; Copy this wbox to wbox. void Draw(Option_t* option = """"); Draw this wbox with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TWbox.html:8731,down,down,8731,root/html602/TWbox.html,https://root.cern,https://root.cern/root/html602/TWbox.html,2,['down'],['down']
Availability,":kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfDEDw! the derivative of the total error wrt the synapse weight; TNeuron*fpostthe neuron after the synapse; TNeuron*fprethe neuron before the synapse; Double_tfweightthe weight of the synapse. Class Charts. Inheritance Chart:. TObject. ←; TSynapse. Function documentation; TSynapse(); Default constructor. TSynapse(TNeuron* , TNeuron* , Double_t w = 1); Constructor that connects two neurons. void SetPre(TNeuron* pre); Sets the pre-neuron. void SetPost(TNeuron* post); Sets the post-neuron. Double_t GetValue() const; Returns the value: weithted input. Double_t GetDeDw() const; Computes the derivative of the error wrt the synapse weight. void SetWeight(Double_t w); Sets the weight of the synapse.; This weight is the multiplying factor applied on the; output of a neuron in the linear combination given as input; of another neuron. void SetDEDw(Double_t in); Sets the derivative of the total error wrt the synapse weight. TSynapse(). virtual ~TSynapse(); {}. TNeuron* GetPre() const; { return fpre; }. TNeuron* GetPost() const; { return fpost; }. Double_t GetWeight() const; { return fweight; }. Double_t GetDEDw() const; { return fDEDw; }. » Author: Christophe.Delaere@cern.ch 20/07/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/mlp:$Id$ » Last generated: 2015-06-02 16:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TSynapse.html:6673,error,error,6673,root/html604/TSynapse.html,https://root.cern,https://root.cern/root/html604/TSynapse.html,2,['error'],['error']
Availability,":kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. private:. Double_tfDEDw! the derivative of the total error wrt the synapse weight; TNeuron*fpostthe neuron after the synapse; TNeuron*fprethe neuron before the synapse; Double_tfweightthe weight of the synapse. Class Charts. Inheritance Chart:. TObject. ←; TSynapse. Function documentation; TSynapse(); Default constructor. TSynapse(TNeuron* , TNeuron* , Double_t w = 1); Constructor that connects two neurons. void SetPre(TNeuron* pre); Sets the pre-neuron. void SetPost(TNeuron* post); Sets the post-neuron. Double_t GetValue() const; Returns the value: weithted input. Double_t GetDeDw() const; Computes the derivative of the error wrt the synapse weight. void SetWeight(Double_t w); Sets the weight of the synapse.; This weight is the multiplying factor applied on the; output of a neuron in the linear combination given as input; of another neuron. void SetDEDw(Double_t in); Sets the derivative of the total error wrt the synapse weight. TSynapse(). virtual ~TSynapse(); {}. TNeuron* GetPre() const; { return fpre; }. TNeuron* GetPost() const; { return fpost; }. Double_t GetWeight() const; { return fweight; }. Double_t GetDEDw() const; { return fDEDw; }. » Author: Christophe.Delaere@cern.ch 20/07/2003 » Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; » Last changed: root/mlp:$Id$ » Last generated: 2015-06-30 15:31; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSynapse.html:6673,error,error,6673,root/html602/TSynapse.html,https://root.cern,https://root.cern/root/html602/TSynapse.html,2,['error'],['error']
Availability,":kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; TGCheckButton*fDrawFrameCheckbox for frame rendering.; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGedEditor*TGedFrame::fGedEditormanager of this frame; UInt_tTGFrame::fHeightframe height; TGCheckButton*fHighlightFrameCheckbox for frame rendering.; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TGColorSelect*fLineColorLine color widget.; TGNumberEntry*fLineWidthLine width widget.; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveShape*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TEveShapeEditor.html:18277,mask,mask,18277,root/html602/TEveShapeEditor.html,https://root.cern,https://root.cern/root/html602/TEveShapeEditor.html,2,['mask'],['mask']
Availability,":kMult,B); constructor of \(A.B\). TMatrixD(A, TMatrixD::kTransposeMult,B); constructor of \(A^{T}.B\). TMatrixD(A, TMatrixD::kMultTranspose,B); constructor of \(A.B^{T}\). element wise multiplication; element wise division; ElementMult(A,B); ElementDiv(A,B); A(i,j)*= B(i,j); A(i,j)/= B(i,j). 14.4.2 Arithmetic Operations between Matrices and Real Numbers. Description; Format; Comment. element wise sum; C=r+A C=A+r A+=r; overwrites \(A\). element wise subtraction; C=r-A C=A-r A-=r; overwrites \(A\). matrix multiplication; C=r*A C=A*r A*=r; overwrites \(A\). 14.4.3 Comparisons and Boolean Operations; The following table shows element wise comparisons between two matrices:. Format; Output; Description. A == B; Bool_t; equal to. A != B; A > B; A >= B; A < B; A <= B; matrix; matrix; matrix; matrix; matrix; Not equal; Greater than; Greater than or equal to; Smaller than; Smaller than or equal to. AreCompatible(A,B); Compare(A,B); VerifyMatrixIdentity(A,B,verb, maxDev); Bool_t; Bool_t; Compare matrix properties; return summary of comparison; Check matrix identity within maxDev tolerance. The following table shows element wise comparisons between matrix and real:. Format; Output; Description. A == r; A != r; A > r; A >= r; A < r; A <= r; Bool_t; Bool_t; Bool_t Bool_t; Bool_t Bool_t; equal to; Not equal; Greater than; Greater than or equal to; Smaller than; Smaller than or equal to. VerifyMatrixValue(A,r,verb, maxDev); Bool_t; Compare matrix value with r within maxDev tolerance. 14.4.4 Matrix Norms. Format; Output; Description. A.RowNorm(); A.NormInf(); A.ColNorm(); A.Norm1(); A.E2Norm(); A.NonZeros(); A.Sum(); A.Min(); A.Max(); Double_t; Double_t; Double_t; Double_t; Double_t; Int_t; Double_t; Double_t; Double_t; norm induced by the infinity vector norm, maxi\(\sum_{i}|A_{ij}|\); maxi\(\sum_{i}|A_{ij}|\); norm induced by the 1 vector norm, maxj\(\sum_{i}|A_{ij}|\); maxj\(\sum_{i}|A_{ij}|\); Square of the Euclidean norm,; \(\sum_{ji}(A_{ij}^{2})\); number of elements unequal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:780981,toler,tolerance,780981,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['toler'],['tolerance']
Availability,":kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TStatus::EProcStatuskNotOk; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfExitStatusQuery exit status ((Int_t)TVirtualProofPlayer::EExitStatus or -1);; THashListfInfoMsgslist of info messages; TIterfIter!iterator in messages; TListfMsgslist of error messages; Long_tfResMaxMstMax resident memory used by the master; Long_tfResMemMaxMax resident memory used by the worker; Long_tfVirtMaxMstMax virtual memory used by the master; Long_tfVirtMemMaxMax virtual memory used by the worker. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TStatus. Function documentation; TStatus(); Default constructor. void Add(const char* mesg); Add an error message. void AddInfo(const char* mesg); Add an info message. Int_t Merge(TCollection* list); PROOF Merge() function. void Print(Option_t* option = """") const; Standard print function. void Reset(); Reset the iterator on the messages. const char * NextMesg(); Return the next message or 0. void SetMemValues(Long_t vmem = -1, Long_t rmem = -1, Bool_t master = kFALSE); Set max memory values. void Streamer(TBuffer& ); Stream an object of class TStatus. TStatus(). virtual ~TStatus(); { }. Bool_t IsOk() const; { return TestBit(kNotOk) ? kFALSE : kTRUE; }. Int_t GetExitStatus() const; { return fExitStatus; }. Long_t GetResMemMax(Bool_t master = kFALSE) const; { return ((master) ? fResMaxMst : fResMemMax); }. Long_t GetVirtMemMax(Bool_t master = kFALSE) const; { return ((master) ? fVirtMaxMst : fVirtMemMax); }. void SetExitStatus(Int_t est); { fExitStatus = est; }. » Author: Maarten Ballintijn 12/03/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last change",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStatus.html:7106,error,error,7106,root/html602/TStatus.html,https://root.cern,https://root.cern/root/html602/TStatus.html,2,['error'],['error']
Availability,":kZombie. protected:. TIterator*RooAbsDataStore::_cacheIter! Iterator over cached variables; RooArgSetRooAbsDataStore::_cachedVars; Bool_tRooAbsDataStore::_doDirtyPropSwitch do (de)activate dirty state propagation when loading a data point; TIterator*RooAbsDataStore::_iterator! Iterator over dimension variables; static Int_tRooPrintable::_nameLength; RooArgSetRooAbsDataStore::_vars; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. RooVectorDataStore*_cache! Optimization cache; RooAbsArg*_cacheOwner! Cache owner; vector<RooVectorDataStore::CatVector*>_catStoreList; Double_t_curWgtWeight of current event; Double_t_curWgtErrWeight of current event; Double_t_curWgtErrHiWeight of current event; Double_t_curWgtErrLoWeight of current event; Double_t*_extSumW2Array! External sum of weights array; Double_t*_extWgtArray! External weight array; Double_t*_extWgtErrHiArray! External weight array - high error; Double_t*_extWgtErrLoArray! External weight array - low error; RooVectorDataStore::CatVector**_firstCat! do not persist; RooVectorDataStore::RealVector**_firstReal! do not persist; RooVectorDataStore::RealFullVector**_firstRealF! do not persist; Bool_t_forcedUpdate! Request for forced cache update; Int_t_nCat; Int_t_nEntries; Int_t_nReal; Int_t_nRealF; vector<RooVectorDataStore::RealVector*>_realStoreList; vector<RooVectorDataStore::RealFullVector*>_realfStoreList; Double_t_sumWeight; Double_t_sumWeightCarry; RooArgSet_varsww; RooRealVar*_wgtVarPointer to weight variable (if set). Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooVectorDataStore(). RooVectorDataStore(const char* name, const char* title, const RooArgSet& vars, const char* wgtVarName = 0). void setAllBuffersNative(). RooArgSet varsNoWeight(const RooArgSet& allVars, const char* wgtName); Utility function for constructors; Return RooArgSet that is copy of allVars minus variable matching wgtName if specified. RooRealVar* weightVar(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooVectorDataStore.html:12185,error,error,12185,root/html602/RooVectorDataStore.html,https://root.cern,https://root.cern/root/html602/RooVectorDataStore.html,4,['error'],['error']
Availability,":lsvoid ls(Option_t *option="""") const overrideTo list all objects of the application.Definition TROOT.cxx:2250; TROOT::IsEscapedBool_t IsEscaped() constDefinition TROOT.h:283; TROOT::GetMacroPathstatic const char * GetMacroPath()Get macro search path. Static utility function.Definition TROOT.cxx:2762; TROOT::fFunctionsTCollection * fFunctionsList of analytic functions.Definition TROOT.h:151; TROOT::GetVersionDateInt_t GetVersionDate() constDefinition TROOT.h:226; TROOT::SaveContextvoid SaveContext()Save the current interpreter context.Definition TROOT.cxx:2671; TROOT::GetListOfClassGeneratorsTCollection * GetListOfClassGenerators() constDefinition TROOT.h:251; TROOT::IsExecutingMacroBool_t IsExecutingMacro() constDefinition TROOT.h:280; TROOT::GetTypeTDataType * GetType(const char *name, Bool_t load=kFALSE) constReturn pointer to type with name.Definition TROOT.cxx:1562; TROOT::Initializestatic void Initialize()Initialize ROOT explicitly.Definition TROOT.cxx:2899; TROOT::ShutDownstatic void ShutDown()Shut down ROOT.Definition TROOT.cxx:3136; TROOT::GetFunctionTObject * GetFunction(const char *name) constReturn pointer to function with name.Definition TROOT.cxx:1587; TROOT::ConvertVersionCode2Intstatic Int_t ConvertVersionCode2Int(Int_t code)Convert version code to an integer, i.e. 331527 -> 51507.Definition TROOT.cxx:2922; TROOT::fMessageHandlersTSeqCollection * fMessageHandlersList of message handlers.Definition TROOT.h:158; TROOT::SetStylevoid SetStyle(const char *stylename=""Default"")Change current style to style with name stylename.Definition TROOT.cxx:2730; TROOT::GetListOfMappedFilesTSeqCollection * GetListOfMappedFiles() constDefinition TROOT.h:238; TROOT::SetEditHistogramsvoid SetEditHistograms(Bool_t flag=kTRUE)Definition TROOT.h:322; TROOT::fEnumsAListOfEnums_t fEnumsList of enum types.Definition TROOT.h:165; TROOT::ReadGitInfovoid ReadGitInfo()Read Git commit SHA1 and branch name.Definition TROOT.cxx:2429; TROOT::ForceStylevoid ForceStyle(Bool_t force=kTRU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TROOT_8h_source.html:31116,down,down,31116,doc/v632/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/v632/TROOT_8h_source.html,1,['down'],['down']
Availability,":lsvoid ls(Option_t *option="""") const overrideTo list all objects of the application.Definition TROOT.cxx:2250; TROOT::IsEscapedBool_t IsEscaped() constDefinition TROOT.h:283; TROOT::GetMacroPathstatic const char * GetMacroPath()Get macro search path. Static utility function.Definition TROOT.cxx:2762; TROOT::fFunctionsTCollection * fFunctionsList of analytic functions.Definition TROOT.h:151; TROOT::GetVersionDateInt_t GetVersionDate() constDefinition TROOT.h:226; TROOT::SaveContextvoid SaveContext()Save the current interpreter context.Definition TROOT.cxx:2671; TROOT::GetListOfClassGeneratorsTCollection * GetListOfClassGenerators() constDefinition TROOT.h:251; TROOT::IsExecutingMacroBool_t IsExecutingMacro() constDefinition TROOT.h:280; TROOT::GetTypeTDataType * GetType(const char *name, Bool_t load=kFALSE) constReturn pointer to type with name.Definition TROOT.cxx:1562; TROOT::Initializestatic void Initialize()Initialize ROOT explicitly.Definition TROOT.cxx:2903; TROOT::ShutDownstatic void ShutDown()Shut down ROOT.Definition TROOT.cxx:3140; TROOT::GetFunctionTObject * GetFunction(const char *name) constReturn pointer to function with name.Definition TROOT.cxx:1587; TROOT::ConvertVersionCode2Intstatic Int_t ConvertVersionCode2Int(Int_t code)Convert version code to an integer, i.e. 331527 -> 51507.Definition TROOT.cxx:2926; TROOT::fMessageHandlersTSeqCollection * fMessageHandlersList of message handlers.Definition TROOT.h:158; TROOT::SetStylevoid SetStyle(const char *stylename=""Default"")Change current style to style with name stylename.Definition TROOT.cxx:2730; TROOT::GetListOfMappedFilesTSeqCollection * GetListOfMappedFiles() constDefinition TROOT.h:238; TROOT::SetEditHistogramsvoid SetEditHistograms(Bool_t flag=kTRUE)Definition TROOT.h:322; TROOT::fEnumsAListOfEnums_t fEnumsList of enum types.Definition TROOT.h:165; TROOT::ReadGitInfovoid ReadGitInfo()Read Git commit SHA1 and branch name.Definition TROOT.cxx:2429; TROOT::ForceStylevoid ForceStyle(Bool_t force=kTRU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8h_source.html:31115,down,down,31115,doc/master/TROOT_8h_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8h_source.html,1,['down'],['down']
Availability,":none(), const RooCmdArg& arg8 = RooCmdArg::none()) const; virtual Int_tRooAbsData::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidRooAbsData::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual RooAbsData*RooAbsData::emptyClone(const char* newName = 0, const char* newTitle = 0, const RooArgSet* vars = 0, const char* wgtVarName = 0) const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidRooAbsData::fill(); virtual voidTNamed::FillBuffer(char*& buffer); virtual TH1*RooAbsData::fillHistogram(TH1* hist, const RooArgList& plotVars, const char* cuts = """", const char* cutRange = 0) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*RooAbsData::get() const; virtual const RooArgSet*RooAbsData::get(Int_t index) const; static RooAbsData::StorageTypeRooAbsData::getDefaultStorageType(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Bool_tRooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooTreeData.html:3797,error,error,3797,root/html534/RooTreeData.html,https://root.cern,https://root.cern/root/html534/RooTreeData.html,3,['error'],['error']
Availability,":operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TObject&TObject::operator=(const TObject& rhs); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Int_tTObject::Read(const char* name); virtual Bool_tReadNotify(); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidRemove(); virtual voidTSysEvtHandler::Removed()SIGNAL ; voidTObject::ResetBit(UInt_t f); virtual voidResetReadyMask(); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(basic_ostream<char,char_traits<char> >& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetFd(int fd); virtual voidSetInterest(Int_t mask); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetReadReady(); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetWriteReady(); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const; virtual Bool_tWriteNotify().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileHandler.html:7336,mask,mask,7336,root/html528/TFileHandler.html,https://root.cern,https://root.cern/root/html528/TFileHandler.html,1,['mask'],['mask']
Availability,":operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); voidPopDummy(Int_t ipop = 9999); Bool_tPopPath(); Bool_tPopPath(Int_t index); Bool_tPopPoint(); Bool_tPopPoint(Int_t index); virtual voidTObject::Print(Option_t* option = """") const; Int_tPushPath(Int_t startlevel = 0); Int_tPushPoint(Int_t startlevel = 0); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidResetAll(); voidTObject::ResetBit(UInt_t f); voidResetState(); Double_tSafety(Bool_t inside = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TGeoNode*SearchNode(Bool_t downwards = kFALSE, const TGeoNode* skipnode = 0); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); voidSetCheckingOverlaps(Bool_t flag = kTRUE); voidSetCldirChecked(Double_t* dir); voidSetCurrentDirection(const Double_t* dir); voidSetCurrentDirection(Double_t nx, Double_t ny, Double_t nz); voidSetCurrentPoint(const Double_t* point); voidSetCurrentPoint(Double_t x, Double_t y, Double_t z); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidSetLastPoint(Double_t x, Double_t y, Double_t z); voidSetLastSafetyForPoint(Double_t safe, const Double_t* point); voidSetLastSafetyForPoint(Double_t safe, Double_t x, Double_t y, Double_t z); static voidTObject::SetObjectStat(Bool_t stat); voidSetOutside(Bool_t flag = kTRUE); voidSetStartSafe(Bool_t flag = kTRUE); voidSetStep(Double_t step); virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; TGeoNode*Step(Bool_t is_geom ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGeoNavigator.html:7581,down,downwards,7581,root/html602/TGeoNavigator.html,https://root.cern,https://root.cern/root/html602/TGeoNavigator.html,2,['down'],['downwards']
Availability,":operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGX11&operator=(const TGX11&); virtual voidTObject::Paint(Option_t* option = """"); virtual Bool_tParseColor(Colormap_t cmap, const char* cname, ColorStruct_t& color); virtual Bool_tPointInRegion(Int_t x, Int_t y, Region_t reg); virtual Region_tPolygonRegion(Point_t* points, Int_t np, Bool_t winding); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; virtual voidPutImage(Drawable_t id, GContext_t gc, Drawable_t img, Int_t dx, Int_t dy, Int_t x, Int_t y, UInt_t w, UInt_t h); virtual voidPutPixel(Drawable_t id, Int_t x, Int_t y, ULong_t pixel); virtual voidQueryColor(Colormap_t cmap, ColorStruct_t& color); virtual voidQueryPointer(Int_t& ix, Int_t& iy); virtual voidQueryPointer(Window_t id, Window_t& rootw, Window_t& childw, Int_t& root_x, Int_t& root_y, Int_t& win_x, Int_t& win_y, UInt_t& mask); virtual voidRaiseWindow(Window_t id); virtual Int_tTObject::Read(const char* name); virtual Pixmap_tReadGIF(Int_t x0, Int_t y0, const char* file, Window_t id = 0); virtual Bool_tReadPictureDataFromFile(const char* filename, char*** ret_data); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidRemoveWindow(ULong_t qwid); virtual voidReparentWindow(Window_t id, Window_t pid, Int_t x, Int_t y); virtual Int_tRequestLocator(Int_t mode, Int_t ctyp, Int_t& x, Int_t& y); virtual Int_tRequestString(Int_t x, Int_t y, char* text); virtual voidRescaleWindow(Int_t wid, UInt_t w, UInt_t h); virtual voidTAttFill::ResetAttFill(Option_t* option = """"); virtual voidTAttLine::ResetAttLine(Option_t* option = """"); virtual voidTAttMarker::ResetAttMarker(Option_t* toption = """"); virtual voidTAttText::ResetAttText(Option_t* toption = """"); voidTObject::ResetBit(UInt_t f); virtual Int_tResizePixmap(Int_t wid, UInt_t w, UInt_t h); virtual voidResizeWindow(Int_t wid); virtual voidResizeWindow(Wind",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGX11.html:13139,mask,mask,13139,root/html528/TGX11.html,https://root.cern,https://root.cern/root/html528/TGX11.html,6,['mask'],['mask']
Availability,":pair<UInt_t,Int_t> >& format); Create window with special pixel format. Noop everywhere except Cocoa. Handle_t CreateOpenGLContext(Window_t windowID, Handle_t sharedContext); Creates OpenGL context for window ""windowID"". Bool_t MakeOpenGLContextCurrent(Handle_t ctx, Window_t windowID); Makes context ctx current OpenGL context. Handle_t GetCurrentOpenGLContext(); Asks OpenGL subsystem about the current OpenGL context. void FlushOpenGLBuffer(Handle_t ctx); Flushes OpenGL buffer. void DrawBox(Int_t x1, Int_t y1, Int_t x2, Int_t y2, TVirtualX::EBoxMode mode); Draws a box between [x1,y1] and [x2,y2] according to the ""mode"". mode - drawing mode:; mode = 0 hollow (kHollow); mode = 1 solid (kSolid). void DrawCellArray(Int_t x1, Int_t y1, Int_t x2, Int_t y2, Int_t nx, Int_t ny, Int_t* ic); Draws a cell array. The drawing is done with the pixel presicion; if (x2-x1)/nx (or y) is not a exact pixel number the position of; the top rigth corner may be wrong. x1,y1 - left down corner; x2,y2 - right up corner; nx,ny - array size; ic - array. void DrawFillArea(Int_t n, TPoint* xy); Fills area described by the polygon. n - number of points; xy(2,n) - list of points. void DrawLine(Int_t x1, Int_t y1, Int_t x2, Int_t y2); Draws a line. x1,y1 - begin of line; x2,y2 - end of line. void DrawPolyLine(Int_t n, TPoint* xy); Draws a line through all points in the list. n - number of points; xy - list of points. void DrawPolyMarker(Int_t n, TPoint* xy); Draws ""n"" markers with the current attributes at position [x,y]. n - number of markers to draw; xy - an array of x,y marker coordinates. void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const char* text, TVirtualX::ETextMode mode); Draws a text string using current font. x,y - text position; angle - text angle; mgn - magnification factor; text - text string; mode - drawing mode:; mode = 0 the background is not drawn (kClear); mode = 1 the background is drawn (kOpaque). void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TVirtualX.html:26191,down,down,26191,root/html534/TVirtualX.html,https://root.cern,https://root.cern/root/html534/TVirtualX.html,1,['down'],['down']
Availability,":port].; If port is not specified the default rootd port (1094) will be used.; Using wsize one can specify the tcp window size. Normally this is not; needed when using parallel sockets.; An existing connection (TSocket *sock) can also be used to establish; the FTP session. void Init(const char* url, Int_t parallel, Int_t wsize); Set up the actual connection. ~TFTP(); TFTP dtor. Send close message and close socket. void Print(Option_t* opt = """") const; Print some info about the FTP connection. void PrintError(const char* where, Int_t err) const; Print error string depending on error code. Int_t Recv(Int_t& status, EMessageTypes& kind) const; Return status from rootd server and message kind. Returns -1 in; case of error otherwise 8 (sizeof 2 words, status and kind). void SetBlockSize(Int_t blockSize); Make sure the block size is a power of two, with a minimum of 32768. Long64_t PutFile(const char* file, const char* remoteName = 0); Transfer file to remote host. Returns number of bytes; sent or < 0 in case of error. Error -1 connection is still; open, error -2 connection has been closed. In case of failure; fRestartAt is set to the number of bytes correclty transfered.; Calling PutFile() immediately afterwards will restart at fRestartAt.; If this is not desired call SetRestartAt(0) before calling PutFile().; If rootd reports that the file is locked, and you are sure this is not; the case (e.g. due to a crash), you can force unlock it by prepending; the remoteName with a '-'. Long64_t GetFile(const char* file, const char* localName = 0); Transfer file from remote host. Returns number of bytes; received or < 0 in case of error. Error -1 connection is still; open, error -2 connection has been closed. In case of failure; fRestartAt is set to the number of bytes correclty transfered.; Calling GetFile() immediately afterwards will restart at fRestartAt.; If this is not desired call SetRestartAt(0) before calling GetFile().; If rootd reports that the file is locked, and you ar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFTP.html:9037,error,error,9037,root/html528/TFTP.html,https://root.cern,https://root.cern/root/html528/TFTP.html,6,['error'],['error']
Availability,":string &name) const override;  get index of variable given a variable given a name return always -1 . ;  ; std::string VariableName (unsigned int ivar) const override;  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const; ;  ; const double * X () const override;  return pointer to X values at the minimum ;  ;  Public Member Functions inherited from ROOT::Math::Minimizer;  Minimizer ();  Default constructor. ;  ;  Minimizer (Minimizer &&)=delete;  ;  Minimizer (Minimizer const &)=delete;  ; virtual ~Minimizer ();  Destructor (no operations). ;  ; virtual void Clear ();  reset for consecutive minimization - implement if needed ;  ; virtual double Correlation (unsigned int i, unsigned int j) const;  return correlation coefficient between variable i and j. ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual bool SetCovariance (std::span< const double > cov, unsigned int nrow);  set initial covariance matrix ;  ; virtual bool SetCovarianceDiag (std::span< const double > d2, unsigned int n);  set initial second derivat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:7378,error,error,7378,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['error'],['error']
Availability,":string & ; method = ""auto"" . ). Initialize method for continuous one-dimensional distribution. ; User must provide a distribution object (which is copied inside) and a string for a method. For the list of available method for 1D cont. distribution see the UnuRan doc. A re-initialization is needed whenever distribution parameters have been changed. Note that the method string can contain in addition to the method name all the specific method parameters specified using the UNURAN method string API. For example a valid string can be ""method=arou; max_segments=1000; max_sqhratio = 0.9"" ; Definition at line 76 of file TUnuran.cxx. ◆ Init() [3/5]. bool TUnuran::Init ; (; const TUnuranDiscrDist & ; distr, . const std::string & ; method = ""auto"" . ). Initialize method for continuous one-dimensional discrete distribution. ; User must provide a distribution object (which is copied inside) and a string for a method. For the list of available method for 1D discrete distribution see the UnuRan doc A re-initialization is needed whenever distribution parameters have been changed. ; Definition at line 108 of file TUnuran.cxx. ◆ Init() [4/5]. bool TUnuran::Init ; (; const TUnuranEmpDist & ; distr, . const std::string & ; method = ""empk"" . ). Initialize method for continuous empirical distribution. ; User must provide a distribution object (which is copied inside) and a string for a method. The distribution object can represent binned (only 1D) or unbinned (1D or multi-dim) data The method for the unbinned empirical distribution are based on the kernel smoothing, see UnuRan doc A re-initialization is needed whenever distribution parameters have been changed. ; Definition at line 122 of file TUnuran.cxx. ◆ Init() [5/5]. bool TUnuran::Init ; (; const TUnuranMultiContDist & ; distr, . const std::string & ; method = ""vnrou"" . ). Initialize method for continuous multi-dimensional distribution. ; User must provide a distribution object (which is copied inside) and a string for a method. Fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnuran.html:8281,avail,available,8281,doc/master/classTUnuran.html,https://root.cern,https://root.cern/doc/master/classTUnuran.html,1,['avail'],['available']
Availability,":string_view colName) const finalReturns the C++ type for a given column name, implemented as a linear search through all the columns.Definition RSqliteDS.cxx:500; ROOT::RDF::RSqliteDS::ETypesETypesAll the types known to SQlite. Changes require changing fgTypeNames, too.Definition RSqliteDS.hxx:55; ROOT::RDF::RSqliteDS::ETypes::kText@ kText; ROOT::RDF::RSqliteDS::ETypes::kBlob@ kBlob; ROOT::RDF::RSqliteDS::ETypes::kReal@ kReal; ROOT::RDF::RSqliteDS::ETypes::kInteger@ kInteger; ROOT::RDF::RSqliteDS::ETypes::kNull@ kNull; ROOT::RDF::RSqliteDS::RSqliteDSRSqliteDS(const std::string &fileName, const std::string &query)Build the dataframe.Definition RSqliteDS.cxx:352; ROOT::RDF::RSqliteDS::fNRowULong64_t fNRowDefinition RSqliteDS.hxx:82; ROOT::RDF::RSqliteDS::fDataSetstd::unique_ptr< Internal::RSqliteDSDataSet > fDataSetDefinition RSqliteDS.hxx:80; ROOT::RDF::RSqliteDS::SqliteErrorvoid SqliteError(int errcode)Helper function to throw an exception if there is a fatal sqlite error, e.g. an I/O error.Definition RSqliteDS.cxx:594; ROOT::RDF::RSqliteDS::fValuesstd::vector< Value_t > fValuesThe data source is inherently single-threaded and returns only one row at a time. This vector holds t...Definition RSqliteDS.hxx:86; ROOT::RDataFrameROOT's RDataFrame offers a modern, high-level interface for analysis of data stored in TTree ,...Definition RDataFrame.hxx:41; TRandom::Integervirtual UInt_t Integer(UInt_t imax)Returns a random integer uniformly distributed on the interval [ 0, imax-1 ].Definition TRandom.cxx:361; TSystem::Sleepvirtual void Sleep(UInt_t milliSec)Sleep milliSec milli seconds.Definition TSystem.cxx:437; ROOT::Minuit2::GradientParameterSpace::Internal@ Internal; ROOT::RDF::FromSqliteRDataFrame FromSqlite(std::string_view fileName, std::string_view query)Factory method to create a SQlite RDataFrame.Definition RSqliteDS.cxx:538; ROOTtbb::task_arena is an alias of tbb::interface7::task_arena, which doesn't allow to forward declare tb...Definition EExecutionPolicy.hxx",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSqliteDS_8cxx_source.html:29452,error,error,29452,doc/master/RSqliteDS_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RSqliteDS_8cxx_source.html,1,['error'],['error']
Availability,":string_view variationName="""");  Register systematic variations for a single existing column using auto-generated variation tags. ;  ; RInterface< Proxied, DS_t > Vary (std::string_view colName, std::string_view expression, const std::vector< std::string > &variationTags, std::string_view variationName="""");  Register systematic variations for a single existing column using custom variation tags. ;  ; RInterface< Proxied, DS_t > Vary (std::string_view colName, std::string_view expression, std::size_t nVariations, std::string_view variationName="""");  Register systematic variations for a single existing column using auto-generated variation tags. ;  ;  Public Member Functions inherited from ROOT::RDF::RInterfaceBase;  RInterfaceBase (RDFDetail::RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ;  RInterfaceBase (std::shared_ptr< RDFDetail::RLoopManager > lm);  ; RDFDescription Describe ();  Return information about the dataframe. ;  ; ColumnNames_t GetColumnNames ();  Returns the names of the available columns. ;  ; std::string GetColumnType (std::string_view column);  Return the type of a given column as a string. ;  ; ColumnNames_t GetDefinedColumnNames ();  Returns the names of the defined columns. ;  ; unsigned int GetNFiles ();  ; unsigned int GetNRuns () const;  Gets the number of event loops run. ;  ; unsigned int GetNSlots () const;  Gets the number of data processing slots. ;  ; RVariationsDescription GetVariations () const;  Return a descriptor for the systematic variations registered in this branch of the computation graph. ;  ; bool HasColumn (std::string_view columnName);  Checks if a column is present in the dataset. ;  . Protected Member Functions;  RInterface (const std::shared_ptr< Proxied > &proxied, RLoopManager &lm, const RDFInternal::RColumnRegister &colRegister);  ; const std::shared_ptr< Proxied > & GetProxiedPtr () const;  ;  Protected Member Functions inherited from ROOT::RDF::RInterfaceBase; void AddDefaultColumns ();  ; temp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:21739,avail,available,21739,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['avail'],['available']
Availability,":string_view ; variationName . ). inline . Register systematic variations for multiple existing columns using custom variation tags. ; Parameters. [in]colNamesset of names of the columns for which varied values are provided. ; [in]expressiona string containing valid C++ code that evaluates to an RVec or RVecs containing the varied values for the specified columns. ; [in]variationTagsnames for each of the varied values, e.g. ""up"" and ""down"". ; [in]variationNamea generic name for this set of varied values, e.g. ""ptvariation"". This overload adds the possibility for the expression used to evaluate the varied values to be just-in-time compiled. The example below shows how Vary() is used while dealing with multiple columns. The tags are defined as {""down"", ""up""}. auto nominal_hx =; df.Vary({""x"", ""y""}, ""ROOT::RVec<ROOT::RVecD>{{x*0.9, x*1.1}, {y*0.9, y*1.1}}"", {""down"", ""up""}, ""xy""); .Histo1D(""x"", ""y"");; ; auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; hx[""nominal""].Draw();; hx[""xy:down""].Draw(""SAME"");; hx[""xy:up""].Draw(""SAME"");; See alsoThis Vary() overload for more information. ; Definition at line 1196 of file RInterface.hxx. ◆ Vary() [4/11]. template<typename Proxied , typename DataSource = void> . RInterface< Proxied, DS_t > ROOT::RDF::RInterface< Proxied, DataSource >::Vary ; (; const std::vector< std::string > & ; colNames, . std::string_view ; expression, . std::size_t ; nVariations, . std::string_view ; variationName . ). inline . Register systematic variations for multiple existing columns using auto-generated variation tags. ; Parameters. [in]colNamesset of names of the columns for which varied values are provided. ; [in]expressiona string containing valid C++ code that evaluates to an RVec or RVecs containing the varied values for the specified columns. ; [in]nVariationsnumber of variations returned by the expression. The corresponding tags will be ""0"", ""1"", etc. ; [in]variationNamea generic name for this set of varied values, e.g. ""ptvariation"". ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html:142208,down,down,142208,doc/master/classROOT_1_1RDF_1_1RInterface.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1RDF_1_1RInterface.html,1,['down'],['down']
Availability,":v5::TFormula::kzexpo; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzgaus; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzlandau; static ROOT::v5::TFormula::(anonymous)ROOT::v5::TFormula::kzpol. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFormula(); Default constructor; coverity[UNINIT_CTOR]. RooFormula(const char* name, const char* formula, const RooArgList& varList); Constructor with expression string and list of RooAbsArg variables. RooFormula(const RooFormula& other, const char* name = 0); Copy constructor. Bool_t reCompile(const char* newFormula); Recompile formula with new expression. ~RooFormula(); Destructor. RooArgSet& actualDependents() const; Return list of RooAbsArg dependents that is actually used by formula expression. void dump(); DEBUG: Dump state information. Bool_t changeDependents(const RooAbsCollection& newDeps, Bool_t mustReplaceAll, Bool_t nameChange); Change used variables to those with the same name in given list; If mustReplaceAll is true and error is generated if one of the; elements of newDeps is not found as a server. Double_t eval(const RooArgSet* nset = 0); Evaluate ROOT::v5::TFormula using given normalization set to be used as; observables definition passed to RooAbsReal::getVal(). DefinedValue(Int_t code); Interface to ROOT::v5::TFormula, return value defined by object with id 'code'; Object ids are mapped from object names by method DefinedVariable(). Int_t DefinedVariable(TString& name, int& action); Interface to ROOT::v5::TFormula. If name passed by ROOT::v5::TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. Int_t DefinedVariable(TString& name); Interface to ROOT::v5::TFormula. If name passed by ROOT::v5::TFormula is recognized; as one of our RooAbsArg servers, return a unique id integer; that represent this variable. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFormula.html:22603,error,error,22603,root/html604/RooFormula.html,https://root.cern,https://root.cern/root/html604/RooFormula.html,1,['error'],['error']
Availability,":vector< Pattern > &testPattern, Minimizer &minimizer, Settings &settings)start the trainingDefinition NeuralNet.icc:712; TMVA::DNN::Net::layersconst std::vector< Layer > & layers() constreturns the layers (structure)Definition NeuralNet.h:1245; TMVA::DNN::Net::prepareLayerDatastd::vector< std::vector< LayerData > > prepareLayerData(LayerContainer &layers, Batch &batch, const DropContainer &dropContainer, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t &totalNumWeights) constDefinition NeuralNet.icc:1111; TMVA::DNN::Net::initializeWeightsvoid initializeWeights(WeightInitializationStrategy eInitStrategy, OutIterator itWeight)initialize the weights with the given strategyDefinition NeuralNet.icc:1470; TMVA::DNN::Net::outputSizesize_t outputSize() constoutput size of the DNNDefinition NeuralNet.h:1099; TMVA::DNN::Net::errorFunctiondouble errorFunction(LayerData &layerData, Container truth, ItWeight itWeight, ItWeight itWeightEnd, double patternWeight, double factorWeightDecay, EnumRegularization eRegularization) constcomputes the error of the DNNDefinition NeuralNet.icc:1579; TMVA::DNN::Net::forward_backwarddouble forward_backward(LayerContainer &layers, PassThrough &settingsAndBatch, ItWeight itWeightBegin, ItWeight itWeightEnd, ItGradient itGradientBegin, ItGradient itGradientEnd, size_t trainFromLayer, OutContainer &outputContainer, bool fetchOutput) constmain NN computation functionDefinition NeuralNet.icc:1405; TMVA::DNN::Net::trainCycledouble trainCycle(Minimizer &minimizer, std::vector< double > &weights, Iterator itPatternBegin, Iterator itPatternEnd, Settings &settings, DropContainer &dropContainer)executes one training cycleDefinition NeuralNet.icc:939; TMVA::DNN::Net::fIPyCurrentIterUInt_t * fIPyCurrentIterDefinition NeuralNet.h:1278; TMVA::DNN::Net::operator()double operator()(PassThrough &settingsAndBatch, const Weights &weights) constexecute computation of the DNN for one mini-batch (used by the mi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:64295,error,errorFunctiondouble,64295,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,3,['error'],"['error', 'errorFunction', 'errorFunctiondouble']"
Availability,":vector< double > & Errors() constparameter errors (return st::vector)Definition FitResult.h:162; ROOT::Fit::FitResult::GetErrorsconst double * GetErrors() constparameter errors (return const pointer)Definition FitResult.h:164; ROOT::Fit::FitResult::fMinimizerstd::shared_ptr< ROOT::Math::Minimizer > fMinimizer! minimizer object used for fittingDefinition FitResult.h:353; ROOT::Fit::FitResult::fValidbool fValidflag for indicating valid fitDefinition FitResult.h:343; ROOT::Fit::FitResult::IsParameterFixedbool IsParameterFixed(unsigned int ipar) constquery if a parameter is fixedDefinition FitResult.cxx:365; ROOT::Fit::FitResult::fNdfunsigned int fNdfnumber of degree of freedomDefinition FitResult.h:346; ROOT::Fit::FitResult::GetParamsconst double * GetParams() constparameter values (return const pointer)Definition FitResult.h:169; ROOT::Fit::FitResult::IModelFunctionROOT::Math::IParamMultiFunction IModelFunctionDefinition FitResult.h:51; ROOT::Fit::FitResult::Errordouble Error(unsigned int i) constparameter error by indexDefinition FitResult.h:179; ROOT::Fit::FitResult::CovMatrixdouble CovMatrix(unsigned int i, unsigned int j) constretrieve covariance matrix elementDefinition FitResult.h:215; ROOT::Fit::FitResult::GetConfidenceIntervalsvoid GetConfidenceIntervals(unsigned int n, unsigned int stride1, unsigned int stride2, const double *x, double *ci, double cl=0.95, bool norm=false) constget confidence intervals for an array of n points x.Definition FitResult.cxx:506; ROOT::Fit::FitResult::Valuedouble Value(unsigned int i) constparameter value by indexDefinition FitResult.h:172; ROOT::Fit::FitResult::fCovStatusint fCovStatuscovariance matrix status codeDefinition FitResult.h:349; ROOT::Fit::FitResult::Scanbool Scan(unsigned int ipar, unsigned int &npoints, double *pntsx, double *pntsy, double xmin=0, double xmax=0)scan likelihood value of parameter and fill the given graph.Definition FitResult.cxx:639; ROOT::Fit::FitResult::Parametersconst std::vector< double > & Para",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8h_source.html:19532,error,error,19532,doc/master/FitResult_8h_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8h_source.html,1,['error'],['error']
Availability,":~TGraphMultiErrors ; (; ). override . TGraphMultiErrors default destructor. ; Definition at line 697 of file TGraphMultiErrors.cxx. Member Function Documentation. ◆ AddYError(). void TGraphMultiErrors::AddYError ; (; Int_t ; np, . const Double_t * ; eyL = nullptr, . const Double_t * ; eyH = nullptr . ). virtual . Add a new y error to the graph and fill it with the values from eyL and eyH ; Definition at line 917 of file TGraphMultiErrors.cxx. ◆ Allocate(). Double_t ** TGraphMultiErrors::Allocate ; (; Int_t ; size). overrideprotectedvirtual . Allocate internal data structures for size points. ; Reimplemented from TGraph.; Definition at line 933 of file TGraphMultiErrors.cxx. ◆ Apply(). void TGraphMultiErrors::Apply ; (; TF1 * ; f). overridevirtual . Apply a function to all data points \( y = f(x,y) \). ; Errors are calculated as \( eyh = f(x,y+eyh)-f(x,y) \) and \( eyl = f(x,y)-f(x,y-eyl) \); Only the first error dimension is affected.; Special treatment has to be applied for the functions where the role of ""up"" and ""down"" is reversed.; Function suggested/implemented by Miroslav Helbich helbi.nosp@m.ch@m.nosp@m.ail.d.nosp@m.esy..nosp@m.de ; Reimplemented from TGraph.; Definition at line 951 of file TGraphMultiErrors.cxx. ◆ BayesDivide(). void TGraphMultiErrors::BayesDivide ; (; const TH1 * ; pass, . const TH1 * ; total, . Option_t * ; opt = """" . ). virtual . This function is only kept for backward compatibility. ; You should rather use the Divide method. It calls Divide(pass,total,""cl=0.683 b(1,1) mode"") which is equivalent to the former BayesDivide method. ; Definition at line 990 of file TGraphMultiErrors.cxx. ◆ CalcYErrorsSum(). void TGraphMultiErrors::CalcYErrorsSum ; (; ); const. protected . Recalculates the summed y error arrays. ; Definition at line 822 of file TGraphMultiErrors.cxx. ◆ Class(). static TClass * TGraphMultiErrors::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGraphMultiErrors::Class_Name ; (; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:57735,down,down,57735,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['down'],['down']
Availability,"; # Persist fit result in root file; # -------------------------------------------------------------; ; # Open ROOT file save save result; f = ROOT.TFile(""rf607_fitresult.root"", ""RECREATE""); r.Write(""rf607""); f.Close(); ; # In a clean ROOT session retrieve the persisted fit result as follows:; # r = gDirectory.Get(""rf607""); ; c = ROOT.TCanvas(""rf607_fitresult"", ""rf607_fitresult"", 800, 400); c.Divide(2); c.cd(1); ROOT.gPad.SetLeftMargin(0.15); hcorr.GetYaxis().SetTitleOffset(1.4); hcorr.Draw(""colz""); c.cd(2); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.6); frame.Draw(); ; c.SaveAs(""rf607_fitresult.png""); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 1885.34, estimated distance to minimum: 0.000381082; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 7.2873e-01 +/- 1.13e-01; bkgfrac 4.3445e-01 +/- 8.57e-02; mean 5.0345e+00 +/- 3.36e-02; sig1frac 7.7758e-01 +/- 9.71e-02; sigma1 5.2318e-01 +/- 4.55e-02; sigma2 1.7671e+00 +/- 1.18e+00; ; ; RooFitResult: minimized FCN value: 1885.34, estimated distance to minimum: 0.000381082; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Constant Parameter Value ; -------------------- ------------; a1 -2.0000e-01; ; Floating Parameter InitialValue ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf607__fitresult_8py.html:4326,error,error,4326,doc/master/rf607__fitresult_8py.html,https://root.cern,https://root.cern/doc/master/rf607__fitresult_8py.html,1,['error'],['error']
Availability,"; # using the StoreAsymError() argument; ; x = ROOT.RooRealVar(""x"", ""x"", -11, 11); y = ROOT.RooRealVar(""y"", ""y"", -10, 200); dxy = ROOT.RooDataSet(""dxy"", ""dxy"", {x, y}, StoreError={x, y}); ; # Fill an example dataset with X,err(X),Y,err(Y) values; for i in range(10):; x.setVal(-10 + 2 * i); x.setError((0.5 / 1.0) if (i < 5) else (1.0 / 1.0)); ; # Set Y value and error; y.setVal(x.getVal() * x.getVal() + 4 * abs(ROOT.gRandom.Gaus())); y.setError(math.sqrt(y.getVal())); ; dxy.add({x, y}); ; # Perform chi2 fit to X +/- dX and Y +/- dY values; # ---------------------------------------------------------------------------------------; ; # Make fit function; a = ROOT.RooRealVar(""a"", ""a"", 0.0, -10, 10); b = ROOT.RooRealVar(""b"", ""b"", 0.0, -100, 100); c = ROOT.RooRealVar(""c"", ""c"", 0.0, -100, 100); f = ROOT.RooPolyVar(""f"", ""f"", x, [b, a, c]); ; # Plot dataset in X-Y interpretation; frame = x.frame(Title=""Chi^2 fit of function set of (X#pmdX,Y#pmdY) values""); dxy.plotOnXY(frame, YVar=y); ; # Fit chi^2 using X and Y errors; fit1 = f.chi2FitTo(dxy, YVar=y, Save=True, PrintLevel=-1); fit1.Print(); ; # Overlay fitted function; f.plotOn(frame); ; # Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; # than taking point at center of bin; fit2 = f.chi2FitTo(dxy, YVar=y, Save=True, PrintLevel=-1, Integrate=True); fit2.Print(); ; # Overlay alternate fit result; f.plotOn(frame, LineStyle=""--"", LineColor=""r""); ; # Draw the plot on a canvas; c = ROOT.TCanvas(""rf609_xychi2fit"", ""rf609_xychi2fit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf609_xychi2fit.png""); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 1.16828, estimated distance to minimum: 3.27623e-05; covariance matrix quality: Full, accurate covariance matrix; Sta",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf609__xychi2fit_8py.html:1808,error,errors,1808,doc/master/rf609__xychi2fit_8py.html,https://root.cern,https://root.cern/doc/master/rf609__xychi2fit_8py.html,1,['error'],['errors']
Availability,"; ## Book TMVA BDT; **/; ; if (useTMVA_BDT) {; ; factory->BookMethod(dataloader, TMVA::Types::kBDT, ""BDTG"",; ""!H:!V:NTrees=100:MinNodeSize=2.5%:BoostType=Grad:Shrinkage=0.10:UseBaggedBoost:""; ""BaggedSampleFraction=0.5:nCuts=20:""; ""MaxDepth=2"");; ; }; ; /// Train all methods; factory->TrainAllMethods();; ; std::cout << ""nthreads = "" << ROOT::GetThreadPoolSize() << std::endl;; ; // ---- Evaluate all MVAs using the set of test events; factory->TestAllMethods();; ; // ----- Evaluate and compare performance of all configured MVAs; factory->EvaluateAllMethods();; ; // check method; ; // plot ROC curve; auto c1 = factory->GetROCCurve(dataloader);; c1->Draw();; ; if (outputFile) outputFile->Close();; }; DataLoader.h; DataSetInfo.h; MethodDL.h; f#define f(i)Definition RSha256.hxx:104; Infovoid Info(const char *location, const char *msgfmt,...)Use this function for informational messages.Definition TError.cxx:218; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; TFile.h; x2Option_t Option_t TPoint TPoint const char x2Definition TGWin32VirtualXProxy.cxx:70; x1Option_t Option_t TPoint TPoint const char x1Definition TGWin32VirtualXProxy.cxx:70; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; Formchar * Form(const char *fmt,...)Formats a string in a circular formatting buffer.Definition TString.cxx:2489; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TTree.h; gPad#define gPadDefinition TVirtualPad.h:308; TCanvasThe Canvas class.Definition TCanvas.h:23; TCutA specialized string object used for TTree selections.Definition TCut.h:25; TF11-Dim function classDefinition TF1.h:233; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TFileA ROOT file is an on-disk fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:71898,error,error,71898,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability,"; #include ""TLegend.h""; ; void fitLinearRobust(); {; //First generate a dataset, where 20% of points are spoiled by large; //errors; int npoints = 250;; int fraction = int(0.8*npoints);; double *x = new double[npoints];; double *y = new double[npoints];; double *e = new double[npoints];; TRandom r;; int i;; for (i=0; i<fraction; i++){; //the good part of the sample; x[i]=r.Uniform(-2, 2);; e[i]=1;; y[i]=1 + 2*x[i] + 3*x[i]*x[i] + 4*x[i]*x[i]*x[i] + e[i]*r.Gaus();; }; for (i=fraction; i<npoints; i++){; //the bad part of the sample; x[i]=r.Uniform(-1, 1);; e[i]=1;; y[i] = 1 + 2*x[i] + 3*x[i]*x[i] + 4*x[i]*x[i]*x[i] + r.Landau(10, 5);; }; ; TGraphErrors *grr = new TGraphErrors(npoints, x, y, nullptr, e);; grr->SetMinimum(-30);; grr->SetMaximum(80);; TF1 *ffit1 = new TF1(""ffit1"", ""pol3"", -5, 5);; TF1 *ffit2 = new TF1(""ffit2"", ""pol3"", -5, 5);; ffit1->SetLineColor(kBlue);; ffit2->SetLineColor(kRed);; TCanvas *myc = new TCanvas(""myc"", ""Linear and robust linear fitting"");; myc->SetGrid();; grr->Draw(""ap"");; //first, let's try to see the result sof ordinary least-squares fit:; printf(""Ordinary least squares:\n"");; grr->Fit(ffit1);; //the fitted function doesn't really follow the pattern of the data; //and the coefficients are far from the real ones; ; printf(""Resistant Least trimmed squares fit:\n"");; //Now let's try the resistant regression; //The option ""rob=0.75"" means that we want to use robust fitting and; //we know that at least 75% of data is good points (at least 50% of points; //should be good to use this algorithm). If you don't specify any number; //and just use ""rob"" for the option, default value of (npoints+nparameters+1)/2; //will be taken; grr->Fit(ffit2, ""+rob=0.75"");; //; TLegend *leg = new TLegend(0.6, 0.8, 0.89, 0.89);; leg->AddEntry(ffit1, ""Ordinary least squares"", ""l"");; leg->AddEntry(ffit2, ""LTS regression"", ""l"");; leg->Draw();; ; delete [] x;; delete [] y;; delete [] e;; ; }; e#define e(i)Definition RSha256.hxx:103; kRed@ kRedDefinition Rtypes.h:66; kBl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitLinearRobust_8C.html:2116,robust,robust,2116,doc/master/fitLinearRobust_8C.html,https://root.cern,https://root.cern/doc/master/fitLinearRobust_8C.html,1,['robust'],['robust']
Availability,"; 'Scat' : Draw a scatter-plot (default); 'Palette' : the color palette is drawn. 3d Plot:; 'Type' : ComboBox: set histogram type Lego or Surface-Plot; draw(Lego, Lego1.2, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Cont #' : TGNumberEntry: set the number of Contours (for e.g.; Lego2 drawoption; 3d Plot checkboxes:; 'Errors' : draw errors in a cartesian lego plot; 'Palette' : the color palette is drawn; 'Front' : draw the front box of a cartesian lego plot; 'Back' : draw the back box of a cartesian lego plot; Available for a 3D lego plot:; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; Further Editor:; 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. /*. */. /*. */. Rebinning Tab:; This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do for example:; TFile f(""hsimple.root"");; hpxpy->Draw(""Lego2""); // non ntuple histogram; ntuple->Draw(""px:py"","""",""Lego2""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Sliders (one for the x, one for the y axis); the number of bins (shown in the field below the; Slider) can be changed to any number which divides; the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the rebinned one on the screen.; Pushing 'Ignore' the origin histogram will be restored; Histogram drawn from an ntuple:; 'Rebin' with the sliders the number of bins can be enlarged by; a factor of 2,3,4,5 (moving to the right) or reduced; by a factor of 1/2, 1/3, 1/4, 1/5; 'BinOffset': with the BinOffset slider the origin of the; histogram can be changed within one binwidth; Using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2Editor.html:2408,avail,available,2408,root/html528/TH2Editor.html,https://root.cern,https://root.cern/root/html528/TH2Editor.html,4,['avail'],['available']
Availability,"; (; ). Return the list of all global correlations. ; Definition at line 454 of file RooFitResult.cxx. ◆ globalCorr() [2/3]. double RooFitResult::globalCorr ; (; const char * ; parname). Return the global correlation of the named parameter. ; Definition at line 430 of file RooFitResult.cxx. ◆ globalCorr() [3/3]. double RooFitResult::globalCorr ; (; const RooAbsArg & ; par). inline . Definition at line 137 of file RooFitResult.h. ◆ IsA(). TClass * RooFitResult::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 203 of file RooFitResult.h. ◆ isIdentical(). bool RooFitResult::isIdentical ; (; const RooFitResult & ; other, . double ; tol = 1e-6, . double ; tolCorr = 1e-4, . bool ; verbose = true . ); const. Return true if this fit result is identical to other within tolerances. ; Parameters. [in]otherFit result to test against. ; [in]tolRelative tolerance for parameters and NLL. ; [in]tolCorrabsolute tolerance for correlation coefficients. ; [in]verboseIf this function will log to the standard output when comparisons fail. As the relative tolerance for the parameter errors, the default value of 1e-3 will be used. ; Definition at line 863 of file RooFitResult.cxx. ◆ isIdenticalNoCov(). bool RooFitResult::isIdenticalNoCov ; (; const RooFitResult & ; other, . double ; tol = 1e-6, . double ; tolErr = 1e-3, . bool ; verbose = true . ); const. Return true if this fit result is identical to other within tolerances, ignoring the correlation matrix. ; Parameters. [in]otherFit result to test against. ; [in]tolRelative tolerance for parameters and NLL. ; [in]tolErrRelative tolerance for parameter errors. ; [in]verboseIf this function will log to the standard output when comparisons fail. . Definition at line 801 of file RooFitResult.cxx. ◆ lastMinuitFit(). RooFitResult * RooFitResult::lastMinuitFit ; (; const RooArgList & ; varList = RooArgList()). static . Import the results of the last fit performe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFitResult.html:29818,toler,tolerance,29818,doc/master/classRooFitResult.html,https://root.cern,https://root.cern/doc/master/classRooFitResult.html,1,['toler'],['tolerance']
Availability,; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 61 of file TGraph2DErrors.h. ◆ DeclFileName(). static const char * TGraph2DErrors::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 61 of file TGraph2DErrors.h. ◆ GetErrorX(). Double_t TGraph2DErrors::GetErrorX ; (; Int_t ; i); const. overridevirtual . This function is called by Graph2DFitChisquare. ; It returns the error along X at point i. ; Reimplemented from TGraph2D.; Definition at line 206 of file TGraph2DErrors.cxx. ◆ GetErrorY(). Double_t TGraph2DErrors::GetErrorY ; (; Int_t ; i); const. overridevirtual . This function is called by Graph2DFitChisquare. ; It returns the error along Y at point i. ; Reimplemented from TGraph2D.; Definition at line 218 of file TGraph2DErrors.cxx. ◆ GetErrorZ(). Double_t TGraph2DErrors::GetErrorZ ; (; Int_t ; i); const. overridevirtual . This function is called by Graph2DFitChisquare. ; It returns the error along Z at point i. ; Reimplemented from TGraph2D.; Definition at line 230 of file TGraph2DErrors.cxx. ◆ GetEX(). Double_t * TGraph2DErrors::GetEX ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph2D.; Definition at line 45 of file TGraph2DErrors.h. ◆ GetEY(). Double_t * TGraph2DErrors::GetEY ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph2D.; Definition at line 46 of file TGraph2DErrors.h. ◆ GetEZ(). Double_t * TGraph2DErrors::GetEZ ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph2D.; Definition at line 47 of file TGraph2DErrors.h. ◆ GetXmaxE(). Double_t TGraph2DErrors::GetXmaxE ; (; ); const. overridevirtual . Returns the X maximum with errors. ; Reimplemented from TGraph2D.; Definition at line 241 of file TGraph2DErrors.cxx. ◆ GetXminE(). Double_t TGraph2DErrors::GetXminE ; (; ); const. overridevirtual . Returns the X minimum with errors. ; Reimplemented from TGraph2D.; Definition at line 252 of file TGraph2DErrors.cxx. ◆ GetYmaxE(). ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DErrors.html:30870,error,error,30870,doc/master/classTGraph2DErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DErrors.html,1,['error'],['error']
Availability,"; (; ). protected . Should be called from ctors after fNpoints has been set. ; Definition at line 346 of file TGraphBentErrors.cxx. ◆ DeclFileName(). static const char * TGraphBentErrors::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 101 of file TGraphBentErrors.h. ◆ DoMerge(). Bool_t TGraphBentErrors::DoMerge ; (; const TGraph * ; g). overrideprotectedvirtual . Protected function to perform the merge operation of a graph with asymmetric errors. ; Reimplemented from TGraph.; Definition at line 367 of file TGraphBentErrors.cxx. ◆ FillZero(). void TGraphBentErrors::FillZero ; (; Int_t ; begin, . Int_t ; end, . Bool_t ; from_ctor = kTRUE . ). overrideprotectedvirtual . Set zero values for point arrays in the range [begin, end] ; Reimplemented from TGraph.; Definition at line 474 of file TGraphBentErrors.cxx. ◆ GetErrorX(). Double_t TGraphBentErrors::GetErrorX ; (; Int_t ; bin); const. overridevirtual . It returns the error along X at point i. ; Reimplemented from TGraph.; Definition at line 402 of file TGraphBentErrors.cxx. ◆ GetErrorXhigh(). Double_t TGraphBentErrors::GetErrorXhigh ; (; Int_t ; bin); const. overridevirtual . Get high error on X[i]. ; Reimplemented from TGraph.; Definition at line 430 of file TGraphBentErrors.cxx. ◆ GetErrorXlow(). Double_t TGraphBentErrors::GetErrorXlow ; (; Int_t ; bin); const. overridevirtual . Get low error on X[i]. ; Reimplemented from TGraph.; Definition at line 441 of file TGraphBentErrors.cxx. ◆ GetErrorY(). Double_t TGraphBentErrors::GetErrorY ; (; Int_t ; bin); const. overridevirtual . It returns the error along Y at point i. ; Reimplemented from TGraph.; Definition at line 416 of file TGraphBentErrors.cxx. ◆ GetErrorYhigh(). Double_t TGraphBentErrors::GetErrorYhigh ; (; Int_t ; bin); const. overridevirtual . Get high error on Y[i]. ; Reimplemented from TGraph.; Definition at line 452 of file TGraphBentErrors.cxx. ◆ GetErrorYlow(). Double_t TGraphBentErrors::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:39836,error,error,39836,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,1,['error'],['error']
Availability,"; (; ). pure virtual . ◆ Class(). static TClass * TGridJob::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGridJob::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGridJob::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 47 of file TGridJob.h. ◆ DeclFileName(). static const char * TGridJob::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 47 of file TGridJob.h. ◆ GetJobID(). virtual TString TGridJob::GetJobID ; (; ). inlinevirtual . Definition at line 40 of file TGridJob.h. ◆ GetJobStatus(). virtual TGridJobStatus * TGridJob::GetJobStatus ; (; ); const. pure virtual . ◆ GetOutputSandbox(). Int_t TGridJob::GetOutputSandbox ; (; const char * ; localpath, . Option_t * ; opt = nullptr . ). virtual . Must be implemented by actual GRID job implementation. ; Returns -1 in case of error, 0 otherwise. ; Definition at line 31 of file TGridJob.cxx. ◆ IsA(). TClass * TGridJob::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 47 of file TGridJob.h. ◆ Resubmit(). virtual Bool_t TGridJob::Resubmit ; (; ). pure virtual . ◆ Streamer(). void TGridJob::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGridJob::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 47 of file TGridJob.h. Member Data Documentation. ◆ fJobID. TString TGridJob::fJobID. protected . Definition at line 34 of file TGridJob.h. Libraries for TGridJob:. [legend]; The documentation for this class was generated from the following files:; net/net/inc/TGridJob.h; net/net/src/TGridJob.cxx. TGridJob. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:33 (GVA Time) using Doxygen 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGridJob.html:11623,error,error,11623,doc/master/classTGridJob.html,https://root.cern,https://root.cern/doc/master/classTGridJob.html,1,['error'],['error']
Availability,"; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). virtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented in TGWin32, TGWin32VirtualXProxy, TGX11, and TGCocoa.; Definition at line 1696 of file TVirtualX.cxx. ◆ HasTTFonts(). Bool_t TVirtualX::HasTTFonts ; (; ); const. virtual . Returns True when TrueType fonts are used. ; Reimplemented in TGCocoa, TGWin32, TGWin32VirtualXProxy, and TGX11.; Definition at line 520 of file TVirtualX.cxx. ◆ IconifyWindow(). void TVirtualX::IconifyWindow ; (; Window_t ; id). virtual . Iconifies the window ""id"". ; Reimplemented in TGWin32, TGWin32VirtualXProxy, TGX11, and TGCocoa.; Definition at line 1108 of file TVirtualX.cxx. ◆ Init(). Bool_t TVirtualX::Init ; (; void * ; display = nullptr). virtual . Initializes the X system. ; Returns kFALSE in case of failure. It is implementation dependent. ; Reimplemented in TGCocoa, TGX11, TGX11TTF, TGWin32, and TGWin32VirtualXProxy.; Definition at line 169 of file TVirtualX.cxx. ◆ InitWindow(). Int_t TVirtualX::InitWindow ; (; ULongptr_t ; window). virtual . Creates a new window and return window number. ; Returns -1 if window initialization fails. ; Reimplemented in TGCocoa, TGX11, TGWin32, and TGWin32VirtualXProxy.; Definition at line 539 of file TVirtualX.cxx. ◆ Instance(). TVirtualX *& TVirtualX::Instance ; (; ). static . Returns gVirtualX global. ; Definition at line 57 of file TVirtualX.cxx. ◆ InternAtom(). Atom_t TVirtualX::InternAtom ; (; const char * ; atom_name, . Bool_t ; only_if_exist . ). virtual . Returns the atom identifier associated with the specified ""atom_name"" string. ; If ""only_if_exists"" is False, the atom is created if it does not exist. If the atom name is not in the Host Portable Character Encoding, the result is implementation dependent. Uppercase and lowercas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:96464,failure,failure,96464,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,1,['failure'],['failure']
Availability,"; (; const std::vector< TProfile2Poly * > & ; list). Merge. ; Definition at line 246 of file TProfile2Poly.cxx. ◆ Merge() [2/2]. Long64_t TProfile2Poly::Merge ; (; TCollection * ; in). overridevirtual . Merge. ; Reimplemented from TH2Poly.; Definition at line 230 of file TProfile2Poly.cxx. ◆ OverflowIdxToArrayIdx(). Int_t TProfile2Poly::OverflowIdxToArrayIdx ; (; Int_t ; val). inlineprotected . Definition at line 112 of file TProfile2Poly.h. ◆ PrintOverflowRegions(). void TProfile2Poly::PrintOverflowRegions ; (; ). Print overflow regions. ; Definition at line 449 of file TProfile2Poly.cxx. ◆ Reset(). void TProfile2Poly::Reset ; (; Option_t * ; option = """"). overridevirtual . Reset. ; Reimplemented from TH2Poly.; Definition at line 466 of file TProfile2Poly.cxx. ◆ SetContentToAverage(). void TProfile2Poly::SetContentToAverage ; (; ). Set content to average. ; Definition at line 304 of file TProfile2Poly.cxx. ◆ SetContentToError(). void TProfile2Poly::SetContentToError ; (; ). Set content to error. ; Definition at line 322 of file TProfile2Poly.cxx. ◆ SetErrorOption(). void TProfile2Poly::SetErrorOption ; (; EErrorType ; type). Set error option. ; Definition at line 523 of file TProfile2Poly.cxx. ◆ Streamer(). void TProfile2Poly::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TH2. ; Reimplemented from TH2Poly. ◆ StreamerNVirtual(). void TProfile2Poly::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 115 of file TProfile2Poly.h. Friends And Related Symbol Documentation. ◆ TProfile2PolyBin. friend class TProfile2PolyBin. friend . Definition at line 59 of file TProfile2Poly.h. ◆ TProfileHelper. friend class TProfileHelper. friend . Definition at line 62 of file TProfile2Poly.h. Member Data Documentation. ◆ fErrorMode. EErrorType TProfile2Poly::fErrorMode = kERRORMEAN. private . Definition at line 104 of file TProfile2Poly.h. ◆ fOverflowBins. TProfile2PolyBin TProfile2Poly::fOverflowBins[kNOverflow].",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2Poly.html:71113,error,error,71113,doc/master/classTProfile2Poly.html,https://root.cern,https://root.cern/doc/master/classTProfile2Poly.html,1,['error'],['error']
Availability,"; (; unsigned int ; i); const. inline . parameter error by index ; Definition at line 179 of file FitResult.h. ◆ Errors(). const std::vector< double > & ROOT::Fit::FitResult::Errors ; (; ); const. inline . parameter errors (return st::vector) ; Definition at line 162 of file FitResult.h. ◆ FillResult(). void ROOT::Fit::FitResult::FillResult ; (; const std::shared_ptr< ROOT::Math::Minimizer > & ; min, . const FitConfig & ; fconfig, . const std::shared_ptr< IModelFunction > & ; f, . bool ; isValid, . unsigned int ; sizeOfData = 0, . int ; fitType = 1, . const ROOT::Math::IMultiGenFunction * ; chi2func = nullptr, . unsigned int ; ncalls = 0 . ). Fill the fit result from a Minimizer instance after fitting Run also Minos if requested from the configuration. ; Definition at line 100 of file FitResult.cxx. ◆ FittedBinData(). const BinData * ROOT::Fit::FitResult::FittedBinData ; (; ); const. return BinData used in the fit (return a nullptr in case a different fit is done or the data are not available Pointer is managed internally, it must not be deleted ; Definition at line 631 of file FitResult.cxx. ◆ FittedFunction(). const IModelFunction * ROOT::Fit::FitResult::FittedFunction ; (; ); const. inline . fitting quantities ; Return pointer to model (fit) function with fitted parameter values. Pointer is managed internally. I must not be deleted ; Definition at line 139 of file FitResult.h. ◆ GetConfidenceIntervals() [1/3]. void ROOT::Fit::FitResult::GetConfidenceIntervals ; (; const BinData & ; data, . double * ; ci, . double ; cl = 0.95, . bool ; norm = false . ); const. evaluate confidence interval for the point specified in the passed data sets the confidence interval are returned in the array ci cl is the desired confidence interval value. ; This method is maintained for backward compatibility and will be deprecated ; Definition at line 583 of file FitResult.cxx. ◆ GetConfidenceIntervals() [2/3]. std::vector< double > ROOT::Fit::FitResult::GetConfidenceIntervals ; (; doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html:13740,avail,available,13740,doc/master/classROOT_1_1Fit_1_1FitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html,1,['avail'],['available']
Availability,"; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessRemote(const char* line, Int_t* error = 0); Process the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessLine(const char* line, Bool_t sync = kFALSE, Int_t* error = 0); Process a single command line, either a C++ statement or an interpreter; command starting with a ""."".; Return the return value of the command casted to a long. Long_t ProcessFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Process a file containing a C++ macro. Long_t ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Execute a file containing a C++ macro (static method). Can be used; while TApplication is not yet created. void Run(Bool_t retrn = kFALSE); Main application eventloop. Calls system dependent eventloop via gSystem. void SetIdleTimer(UInt_t idleTimeInSec, const char* command); Set the command to be executed after the system has been idle for; idleTimeInSec seconds. Normally called via TROOT::Idle(...). void RemoveIdleTimer(); Remove idle timer. Normally called via TROOT::Idle(0). void StartIdleing(); Called when system starts idleing. void StopIdleing(); Called when system stops idleing. Int_t TabCompletionHook(char* buf, int* pLoc, ostream& out); What to do when tab is pressed. Re-implemented by TRint.; See TTabCom::Hook() for meaning of return values. void Terminate(Int_t status = 0); Terminate the application by call TSystem::Exit() unless applicatio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TApplication.html:17587,error,error,17587,root/html530/TApplication.html,https://root.cern,https://root.cern/root/html530/TApplication.html,3,['error'],['error']
Availability,"; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessRemote(const char* line, Int_t* error = 0); Process the content of a line starting with "".R"" (already stripped-off); The format is; [user@]host[:dir] [-l user] [-d dbg] [script] | [host] -close; The variable 'dir' is the remote directory to be used as working dir.; The username can be specified in two ways, ""-l"" having the priority; (as in ssh).; A 'dbg' value > 0 gives increasing verbosity.; The last argument 'script' allows to specify an alternative script to; be executed remotely to startup the session. Long_t ProcessLine(const char* line, Bool_t sync = kFALSE, Int_t* error = 0); Process a single command line, either a C++ statement or an interpreter; command starting with a ""."".; Return the return value of the command casted to a long. Long_t ProcessFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Process a file containing a C++ macro. Long_t ExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); Execute a file containing a C++ macro (static method). Can be used; while TApplication is not yet created. void Run(Bool_t retrn = kFALSE); Main application eventloop. Calls system dependent eventloop via gSystem. void SetIdleTimer(UInt_t idleTimeInSec, const char* command); Set the command to be executed after the system has been idle for; idleTimeInSec seconds. Normally called via TROOT::Idle(...). void RemoveIdleTimer(); Remove idle timer. Normally called via TROOT::Idle(0). void StartIdleing(); Called when system starts idleing. void StopIdleing(); Called when system stops idleing. void Terminate(Int_t status = 0); Terminate the application by call TSystem::Exit() unless application has; been told to return from Run(), by a call to SetReturnFromRun(). void LineProcessed(const char* line); Emit signal when a line has been processed. void KeyPressed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplication.html:16880,error,error,16880,root/html526/TApplication.html,https://root.cern,https://root.cern/root/html526/TApplication.html,2,['error'],['error']
Availability,"; (they are also set as transient data members). Double_t Derivative(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; Returns the first derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas. the final estimate ; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". if the argument params is null, the current function parameters are used,; otherwise the parameters in params are used. the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast majority; of functions. Give a smaller value if your function has many changes; of the second derivative in the function range. Getting the error via TF1::DerivativeError:; (total error = roundoff error + interpolation error); the estimate of the roundoff error is taken as follows:. where k is the double precision, ai are coefficients used in; central difference formulas; interpolation error is decreased by making the step size h smaller. Author: Anna Kreshuk. Double_t Derivative2(Double_t x, Double_t* params = 0, Double_t epsilon = 0.001) const; Returns the second derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas. the final estimate ; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". if the argument params is null, the current function parameters are used,; otherwise the parameters in params are used. the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TF1.html:32495,error,error,32495,root/html534/TF1.html,https://root.cern,https://root.cern/root/html534/TF1.html,15,['error'],['error']
Availability,"; ). overridevirtual . Clear input list. ; Implements TVirtualProofPlayer.; Definition at line 468 of file TProofPlayer.cxx. ◆ CreateDrawFeedback(). TDrawFeedback * TProofPlayer::CreateDrawFeedback ; (; TProof * ; p). overridevirtual . Draw feedback creation proxy. ; When accessed via TProof avoids link dependency on libProofPlayer. ; Implements TVirtualProofPlayer.; Definition at line 733 of file TProofPlayer.cxx. ◆ DeclFileName(). static const char * TProofPlayer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 228 of file TProofPlayer.h. ◆ DeleteDrawFeedback(). void TProofPlayer::DeleteDrawFeedback ; (; TDrawFeedback * ; f). overridevirtual . Delete draw feedback object. ; Implements TVirtualProofPlayer.; Definition at line 750 of file TProofPlayer.cxx. ◆ DrawCanvas(). Int_t TProofPlayer::DrawCanvas ; (; TObject * ; obj). protectedvirtual . Draw the object if it is a canvas. ; Return 0 in case of success, 1 if it is not a canvas or libProofDraw is not available. ; Definition at line 1696 of file TProofPlayer.cxx. ◆ DrawSelect(). Long64_t TProofPlayer::DrawSelect ; (; TDSet * ; set, . const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0 . ). overridevirtual . Draw (may not be used in this class). ; Implements TVirtualProofPlayer.; Reimplemented in TProofPlayerRemote.; Definition at line 1658 of file TProofPlayer.cxx. ◆ Feedback(). void TProofPlayer::Feedback ; (; TList * ; objs). overridevirtual . Set feedback list (may not be used in this class). ; Implements TVirtualProofPlayer.; Reimplemented in TProofPlayerRemote.; Definition at line 724 of file TProofPlayer.cxx. ◆ FeedBackCanvas(). void TProofPlayer::FeedBackCanvas ; (; const char * ; name, . Bool_t ; create . ). Create/destroy a named canvas for feedback. ; Definition at line 1765 of file TProofPlayer.cxx. ◆ Finalize() [1/2]. Long64_t TProofPlayer::Finalize ; (; B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayer.html:27881,avail,available,27881,doc/master/classTProofPlayer.html,https://root.cern,https://root.cern/doc/master/classTProofPlayer.html,1,['avail'],['available']
Availability,"; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDSet::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDSet::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 262 of file TDSet.h. ◆ ClearInput(). void TDSet::ClearInput ; (; ). Clear input object list. ; Definition at line 978 of file TDSet.cxx. ◆ Current(). TDSetElement * TDSet::Current ; (; ); const. inline . Definition at line 238 of file TDSet.h. ◆ DeclFileName(). static const char * TDSet::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 262 of file TDSet.h. ◆ Draw() [1/3]. Long64_t TDSet::Draw ; (; const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0 . ). virtual . Draw expression varexp for specified entries. ; Returns -1 in case of error or number of selected events in case of success. For more see TTree::Draw(). ; Definition at line 1501 of file TDSet.cxx. ◆ Draw() [2/3]. Long64_t TDSet::Draw ; (; const char * ; varexp, . const TCut & ; selection, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0 . ). virtual . Draw expression varexp for specified entries. ; Returns -1 in case of error or number of selected events in case of success. This function accepts a TCut objects as argument. Use the operator+ to concatenate cuts. Example: dset.Draw(""x"",cut1+cut2+cut3); ; Definition at line 1490 of file TDSet.cxx. ◆ Draw() [3/3]. void TDSet::Draw ; (; Option_t * ; option). inlineoverridevirtual . Default Draw method for all objects. ; Reimplemented from TObject.; Definition at line 216 of file TDSet.h. ◆ ElementsValid(). Bool_t TDSet::ElementsValid ; (; ). Check if all elements are valid. ; Definition at line 1555 of file TDSet.cxx. ◆ ExportFileList(). Int_t TDSet::ExportFileList ; (; const char * ; fpa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSet.html:22352,error,error,22352,doc/master/classTDSet.html,https://root.cern,https://root.cern/doc/master/classTDSet.html,1,['error'],['error']
Availability,"; ); const. inline . Definition at line 121 of file TSpectrumFit.h. ◆ GetPositions(). Double_t * TSpectrumFit::GetPositions ; (; ); const. inline . Definition at line 122 of file TSpectrumFit.h. ◆ GetPositionsErrors(). Double_t * TSpectrumFit::GetPositionsErrors ; (; ); const. inline . Definition at line 123 of file TSpectrumFit.h. ◆ GetSigma(). void TSpectrumFit::GetSigma ; (; Double_t & ; sigma, . Double_t & ; sigmaErr . ). This function gets the sigma parameter and its error. . sigma - gets the fitted value of sigma parameter; sigmaErr - gets error value of sigma parameter . Definition at line 2727 of file TSpectrumFit.cxx. ◆ GetTailParameters(). void TSpectrumFit::GetTailParameters ; (; Double_t & ; t, . Double_t & ; tErr, . Double_t & ; b, . Double_t & ; bErr, . Double_t & ; s, . Double_t & ; sErr . ). This function gets the tail parameters and their errors. . t - gets the fitted value of t parameter; tErr - gets error value of t parameter; b - gets the fitted value of b parameter; bErr - gets error value of b parameter; s - gets the fitted value of s parameter; sErr - gets error value of s parameter . Definition at line 2762 of file TSpectrumFit.cxx. ◆ IsA(). TClass * TSpectrumFit::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Definition at line 131 of file TSpectrumFit.h. ◆ Ourpowl(). Double_t TSpectrumFit::Ourpowl ; (; Double_t ; a, . Int_t ; pw . ). protected . Power function. ; Definition at line 676 of file TSpectrumFit.cxx. ◆ SetBackgroundParameters(). void TSpectrumFit::SetBackgroundParameters ; (; Double_t ; a0Init, . Bool_t ; fixA0, . Double_t ; a1Init, . Bool_t ; fixA1, . Double_t ; a2Init, . Bool_t ; fixA2 . ). This function sets the following fitting parameters of background: . a0Init - initial value of a0 parameter (background is estimated as a0+a1*x+a2*x*x); fixA0 - logical value of a0 parameter, which allows to fix the parameter (not to fit); a1Init - initial value of a1 parameter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:43928,error,error,43928,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,3,['error'],['error']
Availability,"; ); const. inlineoverridevirtual . Implements TVirtualFitter.; Definition at line 244 of file TLinearFitter.h. ◆ GetParameter() [1/2]. Double_t TLinearFitter::GetParameter ; (; Int_t ; ipar); const. inlineoverridevirtual . Implements TVirtualFitter.; Definition at line 248 of file TLinearFitter.h. ◆ GetParameter() [2/2]. Int_t TLinearFitter::GetParameter ; (; Int_t ; ipar, . char * ; name, . Double_t & ; value, . Double_t & ; , . Double_t & ; , . Double_t & ;  . ); const. overridevirtual . Returns the value and the name of the parameter #ipar NB: In the calling function the argument name must be set large enough. ; Implements TVirtualFitter.; Definition at line 1353 of file TLinearFitter.cxx. ◆ GetParameters(). void TLinearFitter::GetParameters ; (; TVectorD & ; vpar). virtual . Returns parameter values. ; Definition at line 1341 of file TLinearFitter.cxx. ◆ GetParError(). Double_t TLinearFitter::GetParError ; (; Int_t ; ipar); const. overridevirtual . Returns the error of parameter #ipar ; Implements TVirtualFitter.; Definition at line 1371 of file TLinearFitter.cxx. ◆ GetParName(). const char * TLinearFitter::GetParName ; (; Int_t ; ipar); const. overridevirtual . Returns name of parameter #ipar ; Implements TVirtualFitter.; Definition at line 1385 of file TLinearFitter.cxx. ◆ GetParSignificance(). Double_t TLinearFitter::GetParSignificance ; (; Int_t ; ipar). virtual . Returns the significance of parameter #ipar ; Definition at line 1413 of file TLinearFitter.cxx. ◆ GetParTValue(). Double_t TLinearFitter::GetParTValue ; (; Int_t ; ipar). virtual . Returns the t-value for parameter #ipar ; Definition at line 1399 of file TLinearFitter.cxx. ◆ GetStats(). Int_t TLinearFitter::GetStats ; (; Double_t & ; , . Double_t & ; , . Double_t & ; , . Int_t & ; , . Int_t & ;  . ); const. inlineoverridevirtual . Implements TVirtualFitter.; Definition at line 272 of file TLinearFitter.h. ◆ GetSumLog(). Double_t TLinearFitter::GetSumLog ; (; Int_t ; ). inlineoverridevirtual . Imp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLinearFitter.html:43800,error,error,43800,doc/master/classTLinearFitter.html,https://root.cern,https://root.cern/doc/master/classTLinearFitter.html,1,['error'],['error']
Availability,"; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGraph.; Definition at line 213 of file TGraphMultiErrors.h. ◆ operator=(). TGraphMultiErrors & TGraphMultiErrors::operator= ; (; const TGraphMultiErrors & ; tgme). TGraphMultiErrors assignment operator. ; Definition at line 599 of file TGraphMultiErrors.cxx. ◆ Print(). void TGraphMultiErrors::Print ; (; Option_t * ; chopt = """"); const. overridevirtual . Print graph and errors values. ; Reimplemented from TGraph.; Definition at line 1708 of file TGraphMultiErrors.cxx. ◆ SavePrimitive(). void TGraphMultiErrors::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitive as a C++ statement(s) on output stream out. ; Reimplemented from TGraph.; Definition at line 1729 of file TGraphMultiErrors.cxx. ◆ Scale(). void TGraphMultiErrors::Scale ; (; Double_t ; c1 = 1., . Option_t * ; option = ""y"" . ). overridevirtual . Multiply the values and errors of a TGraphMultiErrors by a constant c1. ; If option contains ""x"" the x values and errors are scaled If option contains ""y"" the y values and (multiple) errors are scaled If option contains ""xy"" both x and y values and (multiple) errors are scaled ; Reimplemented from TGraph.; Definition at line 1766 of file TGraphMultiErrors.cxx. ◆ SetAttFill(). void TGraphMultiErrors::SetAttFill ; (; Int_t ; e, . TAttFill * ; taf . ). virtual . Set TAttFill parameters of error e by copying from another TAttFill (-1 = Global and x errors). ; Definition at line 2018 of file TGraphMultiErrors.cxx. ◆ SetAttLine(). void TGraphMultiErrors::SetAttLine ; (; Int_t ; e, . TAttLine * ; tal . ). virtual . Set TAttLine parameters of error e by copying from another TAttLine (-1 = Global and x errors). ; Definition at line 2029 of file TGraphMultiErrors.cxx. ◆ SetEY(). void TGraphMultiErrors::SetEY ; (; Int_t ; e, . Int_t ; np, . const Double_t * ; eyL, . const Double_t * ; eyH . ). virtual . Set error e ey values. ; De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:68907,error,errors,68907,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['errors']
Availability,"; ); const. overridevirtual . Get the bin width associated with this plotable object. ; It is alwats zero for curves ; Implements RooPlotable.; Definition at line 479 of file RooCurve.cxx. ◆ getFitRangeNEvt() [1/2]. double RooCurve::getFitRangeNEvt ; (; ); const. overridevirtual . Return the number of events associated with the plotable object, it is always 1 for curves. ; Implements RooPlotable.; Definition at line 460 of file RooCurve.cxx. ◆ getFitRangeNEvt() [2/2]. double RooCurve::getFitRangeNEvt ; (; double ; xlo, . double ; xhi . ); const. overridevirtual . Return the number of events associated with the plotable object, in the given range. ; It is always 1 for curves ; Implements RooPlotable.; Definition at line 469 of file RooCurve.cxx. ◆ initialize(). void RooCurve::initialize ; (; ). protected . Perform initialization that is common to all curves. ; Definition at line 241 of file RooCurve.cxx. ◆ interpolate(). double RooCurve::interpolate ; (; double ; xvalue, . double ; tolerance = 1e-10 . ); const. Return linearly interpolated value of curve at xvalue. ; If distance to nearest point is less than tolerance, return nearest point value instead ; Definition at line 655 of file RooCurve.cxx. ◆ IsA(). TClass * RooCurve::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 106 of file RooCurve.h. ◆ isIdentical(). bool RooCurve::isIdentical ; (; const RooCurve & ; other, . double ; tol = 1e-6, . bool ; verbose = true . ); const. Return true if curve is identical to other curve allowing for given absolute tolerance on each point compared point. ; Definition at line 851 of file RooCurve.cxx. ◆ makeErrorBand() [1/2]. RooCurve * RooCurve::makeErrorBand ; (; const std::vector< RooCurve * > & ; plusVar, . const std::vector< RooCurve * > & ; minusVar, . const TMatrixD & ; C, . double ; Z = 1 . ); const. Construct filled RooCurve represented error band represent the error added in quadrature ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:47066,toler,tolerance,47066,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,1,['toler'],['tolerance']
Availability,"; ); const. private . Definition at line 1151 of file TKDE.cxx. ◆ ComputeKernelL2Norm(). Double_t TKDE::ComputeKernelL2Norm ; (; ); const. private . Definition at line 1124 of file TKDE.cxx. ◆ ComputeKernelMu(). Double_t TKDE::ComputeKernelMu ; (; ); const. private . Definition at line 1142 of file TKDE.cxx. ◆ ComputeKernelSigma2(). Double_t TKDE::ComputeKernelSigma2 ; (; ); const. private . Definition at line 1133 of file TKDE.cxx. ◆ ComputeMidspread(). Double_t TKDE::ComputeMidspread ; (; ). private . Definition at line 1191 of file TKDE.cxx. ◆ CosineArchKernel(). Double_t TKDE::CosineArchKernel ; (; Double_t ; x); const. inlineprivate . Returns the kernel evaluation at x. ; Definition at line 254 of file TKDE.h. ◆ DeclFileName(). static const char * TKDE::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 301 of file TKDE.h. ◆ Draw(). void TKDE::Draw ; (; const Option_t * ; option = """"). override . Draws either the KDE functions or its errors. ; Definition at line 895 of file TKDE.cxx. ◆ DrawConfidenceInterval(). void TKDE::DrawConfidenceInterval ; (; TString & ; drawOpt, . double ; cl = 0.95 . ). private . // Draws the KDE and its confidence interval ; Definition at line 965 of file TKDE.cxx. ◆ DrawErrors(). void TKDE::DrawErrors ; (; TString & ; drawOpt). private . Draws a TGraphErrors with KDE values and errors. ; Definition at line 931 of file TKDE.cxx. ◆ EpanechnikovKernel(). Double_t TKDE::EpanechnikovKernel ; (; Double_t ; x); const. inlineprivate . Definition at line 244 of file TKDE.h. ◆ Fill() [1/2]. void TKDE::Fill ; (; Double_t ; data). Definition at line 713 of file TKDE.cxx. ◆ Fill() [2/2]. void TKDE::Fill ; (; Double_t ; data, . Double_t ; weight . ). Definition at line 724 of file TKDE.cxx. ◆ GaussianKernel(). Double_t TKDE::GaussianKernel ; (; Double_t ; x); const. inlineprivate . Returns the kernel evaluation at x. ; Definition at line 239 of file TKDE.h. ◆ GetAdaptiveWeights(). cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKDE.html:27570,error,errors,27570,doc/master/classTKDE.html,https://root.cern,https://root.cern/doc/master/classTKDE.html,1,['error'],['errors']
Availability,"; *-* Those pseudo operation are used to implement lazy evaluation of; *-* && and ||. When the left hand of the expression if false; *-* (respectively true), the evaluation of the right is entirely skipped; *-* (since it would not change the value of the expreession).; -; *-* && 142 11 (one operation on right) 142 21 (2 operations on right); *-* || 142 12 (one operation on right) 142 22 (2 operations on right); -; *-* * functions calls (kFunctionCall) :; -; *-* f0 145 0 f1 145 1 etc..; -; *-* errors :; *-* ========; -; *-* 1 : Division By Zero; *-* 2 : Invalid Floating Point Operation; *-* 4 : Empty String; *-* 5 : invalid syntax; *-* 6 : Too many operators; *-* 7 : Too many parameters; *-* 10 : z specified but not x and y; *-* 11 : z and y specified but not x; *-* 12 : y specified but not x; *-* 13 : z and x specified but not y; *-* 20 : non integer value for parameter number; *-* 21 : atan2 requires two arguments; *-* 22 : pow requires two arguments; *-* 23 : degree of polynomial not specified; *-* 24 : Degree of polynomial must be positive; *-* 25 : Degree of polynomial must be less than 20; *-* 26 : Unknown name; *-* 27 : Too many constants in expression; *-* 28 : strstr requires two arguments; *-* 29 : interpreted or compiled function have to return a numerical type; *-* 30 : Bad numerical expression; *-* 31 : Part of the variable exist but some of it is not accessible or useable; *-* 40 : '(' is expected; *-* 41 : ')' is expected; *-* 42 : '[' is expected; *-* 43 : ']' is expected. /*. */. -; *-* Special functions; *-* -----------------; *-* By default, the formula is assigned fNumber=0. However, the following; *-* formula built with simple functions are assigned fNumber:; *-* ""gaus"" 100 (or gausn); *-* ""xygaus"" 110; *-* ""expo"" 200; *-* ""polN"" 300+N; *-* ""landau"" 400; *-* ""xylandau"" 410; *-* Note that expressions like gaus(0), expo(1) will force fNumber=0; -; *-* Warning when deriving a class from TFormula; *-* -------------------------------------------; *-* I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:18982,error,errors,18982,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,3,['error'],['errors']
Availability,"; *-* but cannot be smaller than SLAMBG.; *. void mnmatu(Int_t kode); Prints the covariance matrix v when KODE=1*-; *-* ==========================================; *-* always prints the global correlations, and; *-* calculates and prints the individual correlation coefficients; *. void mnmigr(); Performs a local function minimization*-; *-* ======================================; *-* Performs a local function minimization using basically the; *-* method of Davidon-Fletcher-Powell as modified by Fletcher; *-* ref. -- Fletcher, Comp.J. 13,317 (1970) ""switching method""; *. void mnmnos(); Performs a MINOS error analysis*-; *-* ===============================; *-* Performs a MINOS error analysis on those parameters for; *-* which it is requested on the MINOS command by calling; *-* MNMNOT for each parameter requested.; *. void mnmnot(Int_t ilax, Int_t ilax2, Double_t& val2pl, Double_t& val2mi); Performs a MINOS error analysis on one parameter*-*-*-; *-* ================================================; *-* The parameter ILAX is varied, and the minimum of the; *-* function with respect to the other parameters is followed; *-* until it crosses the value FMIN+UP.; *. void mnparm(Int_t k, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t& ierflg); Implements one parameter definition*-*-*-; *-* ===================================; *-* Called from MNPARS and user-callable; *-* Implements one parameter definition, that is:; *-* K (external) parameter number; *-* CNAMK parameter name; *-* UK starting value; *-* WK starting step size or uncertainty; *-* A, B lower and upper physical parameter limits; *-* and sets up (updates) the parameter lists.; *-* Output: IERFLG=0 if no problems; *-* >0 if MNPARM unable to implement definition; *. void mnpars(TString& crdbuf, Int_t& icondn); Implements one parameter definition*-*-*-*-*-; *-* =========== =======================; *-* Called from MNREAD and user-callable; *-* Implements one parameter definition, that is:; *-*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:47231,error,error,47231,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,6,['error'],['error']
Availability,"; ++i) {; 2929 Double_t c0 = RetrieveBinContent(i);; 2930 Double_t c1 = h1->RetrieveBinContent(i);; 2931 if (c1) UpdateBinContent(i, c0 / c1);; 2932 else UpdateBinContent(i, 0);; 2933 ; 2934 if(fSumw2.fN) {; 2935 if (c1 == 0) { fSumw2.fArray[i] = 0; continue; }; 2936 Double_t c1sq = c1 * c1;; 2937 fSumw2.fArray[i] = (GetBinErrorSqUnchecked(i) * c1sq + h1->GetBinErrorSqUnchecked(i) * c0 * c0) / (c1sq * c1sq);; 2938 }; 2939 }; 2940 ResetStats();; 2941 return kTRUE;; 2942}; 2943 ; 2944////////////////////////////////////////////////////////////////////////////////; 2945/// Replace contents of this histogram by the division of h1 by h2.; 2946///; 2947/// `this = c1*h1/(c2*h2)`; 2948///; 2949/// If errors are defined (see TH1::Sumw2), errors are also recalculated; 2950/// Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; 2951/// if not already set.; 2952/// The resulting errors are calculated assuming uncorrelated histograms.; 2953/// However, if option =""B"" is specified, Binomial errors are computed.; 2954/// In this case c1 and c2 do not make real sense and they are ignored.; 2955///; 2956/// IMPORTANT NOTE: If you intend to use the errors of this histogram later; 2957/// you should call Sumw2 before making this operation.; 2958/// This is particularly important if you fit the histogram after TH1::Divide; 2959///; 2960/// Please note also that in the binomial case errors are calculated using standard; 2961/// binomial statistics, which means when b1 = b2, the error is zero.; 2962/// If you prefer to have efficiency errors not going to zero when the efficiency is 1, you must; 2963/// use the function TGraphAsymmErrors::BayesDivide, which will return an asymmetric and non-zero lower; 2964/// error for the case b1=b2.; 2965///; 2966/// The function return kFALSE if the divide operation failed; 2967 ; 2968Bool_t TH1::Divide(const TH1 *h1, const TH1 *h2, Double_t c1, Double_t c2, Option_t *option); 2969{; 2970 ; 2971 TString opt = option;; 2972 op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:116936,error,errors,116936,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMixMax Class ReferenceMath » MathCore » Interface classes for Random number generation. ; MixMax generator based on ROOT::Math::MixMaxEngine of N=240. ; Definition at line 517 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMixMax ();  ;  ~GSLRngMixMax () override;  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html:1180,avail,available,1180,doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMixMax.html,2,"['avail', 'error']","['available', 'error']"
Availability,"; .  . Loading...; Searching...; No Matches. List of all members |; Classes |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; List of all members ; TTreeCache Class ReferenceTree Library. ; A cache to speed-up the reading of ROOT datasets. . A cache to speed-up the reading of ROOT datasets. Table of Contents. Motivation; General Description; Changes in behaviour; Self-optimization; Examples of usage; Check performance and stats. Motivation: why having a cache is needed?; When writing a TTree, the branch buffers are kept in memory. A typical branch buffersize (before compression) is typically 32 KBytes. After compression, the zipped buffer may be just a few Kbytes. The branch buffers cannot be much larger in case of TTrees with several hundred or thousand branches.; When writing, this does not generate a performance problem because branch buffers are always written sequentially and, thanks to OS optimisations, content is flushed to the output file when a few MBytes of data are available. On the other hand, when reading, one may hit performance problems because of latencies e.g imposed by network. For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each with no cache will imply 10s penalty where a local read of the 10 MBytes would take about 1 second.; The TreeCache tries to prefetch all the buffers for the selected branches in order to transfer a few multi-Megabytes large buffers instead of many multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to be read in increasing order such that the file is read sequentially.; Systems like xrootd, dCache or httpd take advantage of the TTreeCache in reading ahead as much data as they can and return to the application the maximum data specified in the cache and have the next chunk of data ready when the next request comes. Are there cases for which the usage of TTreeCache i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCache.html:1175,avail,available,1175,doc/v632/classTTreeCache.html,https://root.cern,https://root.cern/doc/v632/classTTreeCache.html,2,['avail'],['available']
Availability,"; .rootrc; (look for the string ""Hist.Stats.""). Fit Statistics; The type of information about fit parameters printed in the histogram statistics; box can be selected via the parameter mode. The parameter mode can be; = pcev (default = 0111). p = 1; print Probability; c = 1; print Chisquare/Number of degrees of freedom; e = 1; print errors (if e=1, v must be 1); v = 1; print name/values of parameters. Example:. gStyle->SetOptFit(1011);. print fit probability, parameter names/values and errors. When ""v"" = 1 is specified, only the non-fixed parameters are; shown.; When ""v"" = 2 all parameters are shown. Note: gStyle->SetOptFit(1) means ""default value"", so it is equivalent; to gStyle->SetOptFit(111); The error bars options. ""E""; Default. Shows only the error bars, not a marker. ""E1""; Small lines are drawn at the end of the error bars. ""E2""; Error rectangles are drawn. ""E3""; A filled area is drawn through the end points of the vertical error bars. ""E4""; A smoothed filled area is drawn through the end points of the vertical error; bars. ""E0""; Draw also bins with null contents. Picture; Source. {; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,400);; TH1F *he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he->Fill(gRandom->Gaus(0,1));; gStyle->SetEndErrorSize(3);; gStyle->SetErrorX(1.);; he->SetMarkerStyle(20);; he->Draw(""E1"");; return c1;; }; The options ""E3"" and ""E4"" draw an error band through the end points of the; vertical error bars. With ""E4"" the error band is smoothed. Because of the; smoothing algorithm used some artefacts may appear at the end of the band; like in the following example. In such cases ""E3"" should be used instead; of ""E4"". Picture; Source. {; TCanvas *ce4 = new TCanvas(""ce4"",""ce4"",600,400);; ce4->Divide(2,1);; TH1F *he4 = new TH1F(""he4"",""Distribution drawn with option E4"",100,-3,3);; Int_t i;; for (i=0;i<10000;i++) he4->Fill(gRandom->Gaus(0,1));; he4->SetFillColor(kRed);; he4->GetXaxis()->SetRan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THistPainter.html:20122,error,error,20122,root/html534/THistPainter.html,https://root.cern,https://root.cern/root/html534/THistPainter.html,3,['error'],['error']
Availability,"; // use integral of bin content instead of bin center (default is false).; opt.fBinVolume = true; // normalize data by the bin volume (default is false).; // This is for fitting density functions in histograms with variable bin sizes.; opt.fUseRange =true; // use the function range when creating the fit data (default is false).; opt.fExpErrors = true; // use the expected errors estimated from the function values; // assuming Poisson statistics and not the observed errors (default is false).; opt.fUseEmpty = true; // use empty bins when fitting (default is false). If fExpErrors; // is not set an arbitrary error = 1 is assigned to those bins.; opt.fErrors1 = true; // Set all measured errors to 1 (default is false).; opt.fCoordErrors = false; // When available coordinate errors are not used in the fit; // (default is true: the errors are used when they are available,; // e.g. fitting a TGraphErrors).; opt.fAsymErrors = false; // When available asymmetric errors are considered in the fit; // (default is true, the asymmetric errors are used when they are available,; // e.g. fitting a TGraphAsymmErrors).; The ROOT::Fit::DataRange class supports defining multiple rectangular ranges in each dimension, and supports n-dimension. The function DataRange::AddRange(icoord,xmin,xmax) adds a range in the coordinate icoord with lower value xmin and upper value xmax:; ROOT::Fit::DataRange range;; range.AddRange(icoordinate, xmin, xmax);; 5.7.1.2 Using Un-Binned data; The unbinned data sets are represented with the ROOT::Fit::UnBinData class. For creating un-binned data sets, a ROOT::Fit::UnBinData object, one has two possibilities: 1. Copy the data inside ROOT::Fit::UnBinData. One can create an empty UnBinData object, iterate on the data and add the data point one by one, or directly create the UnBinData object from a data iterator. In this case an input ROOT::Fit::DataRange object is passed in order to copy the data according to the given range. 2. Use ROOT::Fit::UnBinData as a wrap",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:194419,avail,available,194419,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,4,"['avail', 'error']","['available', 'errors']"
Availability,"; 10 *************************************************************************/; 11 ; 12#include ""TROOT.h""; 13#include ""TBuffer.h""; 14#include ""TMethod.h""; 15#include ""TF1.h""; 16#include ""TMethodCall.h""; 17#include <TBenchmark.h>; 18#include ""TError.h""; 19#include ""TInterpreter.h""; 20#include ""TInterpreterValue.h""; 21#include ""TFormula.h""; 22#include ""TRegexp.h""; 23 ; 24#include ""ROOT/StringUtils.hxx""; 25 ; 26#include <array>; 27#include <iostream>; 28#include <memory>; 29#include <unordered_map>; 30#include <functional>; 31#include <set>; 32#include <sstream>; 33 ; 34using std::map, std::pair, std::make_pair, std::list, std::max, std::string;; 35 ; 36#ifdef WIN32; 37#pragma optimize("""",off); 38#endif; 39#include ""v5/TFormula.h""; 40 ; 41ClassImp(TFormula);; 42 ; 43/** \class TFormula TFormula.h ""inc/TFormula.h""; 44 \ingroup Hist; 45 The Formula class; 46 ; 47 This is a new version of the TFormula class based on Cling.; 48 This class is not 100% backward compatible with the old TFormula class, which is still available in ROOT as; 49 `ROOT::v5::TFormula`. Some of the TFormula member functions available in version 5, such as; 50 `Analyze` and `AnalyzeFunction` are not available in the new TFormula.; 51 On the other hand formula expressions which were valid in version 5 are still valid in TFormula version 6; 52 ; 53 This class has been implemented during Google Summer of Code 2013 by Maciej Zimnoch.; 54 ; 55 ### Example of valid expressions:; 56 ; 57 - `sin(x)/x`; 58 - `[0]*sin(x) + [1]*exp(-[2]*x)`; 59 - `x + y**2`; 60 - `x^2 + y^2`; 61 - `[0]*pow([1],4)`; 62 - `2*pi*sqrt(x/y)`; 63 - `gaus(0)*expo(3) + ypol3(5)*x`; 64 - `gausn(0)*expo(3) + ypol3(5)*x`; 65 - `gaus(x, [0..2]) + expo(y, [3..4])`; 66 ; 67 In the last examples above:; 68 ; 69 - `gaus(0)` is a substitute for `[0]*exp(-0.5*((x-[1])/[2])**2)`; 70 and (0) means start numbering parameters at 0; 71 - `gausn(0)` is a substitute for `[0]*exp(-0.5*((x-[1])/[2])**2)/(sqrt(2*pi)*[2]))`; 72 and (0) means start numberin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:1562,avail,available,1562,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['avail'],['available']
Availability,"; 10 *************************************************************************/; 11 ; 12/**; 13\class TKey; 14\ingroup IO; 15 ; 16 Book space in a file, create I/O buffers, to fill them, (un)compress them.; 17 ; 18 The TKey class includes functions to book space in a file, to create I/O; 19 buffers, to fill these buffers, to compress/uncompress data buffers.; 20 Before saving (making persistent) an object in a file, a key must; 21 be created. The key structure contains all the information to; 22 uniquely identify a persistent object in a file.; 23 | Data Member | Explanation |; 24 |-------------|-------------|; 25 | fNbytes | Number of bytes for the compressed object and key. |; 26 | fObjlen | Length of uncompressed object. |; 27 | fDatime | Date/Time when the object was written. |; 28 | fKeylen | Number of bytes for the key structure. |; 29 | fCycle | Cycle number of the object. |; 30 | fSeekKey | Address of the object on file (points to fNbytes). This is a redundant information used to cross-check the data base integrity. |; 31 | fSeekPdir | Pointer to the directory supporting this object.|; 32 | fClassName | Object class name. |; 33 | fName | Name of the object. |; 34 | fTitle | Title of the object. |; 35 ; 36 In the 16 highest bits of fSeekPdir is encoded a pid offset. This; 37 offset is to be added to the pid index stored in the TRef object; 38 and the referenced TObject.; 39 ; 40 The TKey class is used by ROOT to:; 41 - Write an object in the current directory; 42 - Write a new ntuple buffer; 43 ; 44 The structure of a file is shown in TFile::TFile.; 45 The structure of a directory is shown in TDirectoryFile::TDirectoryFile.; 46 The TKey class is used by the TBasket class.; 47 See also TTree.; 48*/; 49 ; 50#include <atomic>; 51#include <iostream>; 52 ; 53#include ""TROOT.h""; 54#include ""TClass.h""; 55#include ""TDirectoryFile.h""; 56#include ""TFile.h""; 57#include ""TKey.h""; 58#include ""TBufferFile.h""; 59#include ""TFree.h""; 60#include ""TBrowser.h""; 61#include ""Bytes.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TKey_8cxx_source.html:1491,redundant,redundant,1491,doc/master/TKey_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TKey_8cxx_source.html,1,['redundant'],['redundant']
Availability,"; 1063 SetBit(kAxisRange, false);; 1064 } else {; 1065 if (first<0) Warning(""TAxis::SetRange"",""first < 0, 0 is used"");; 1066 fFirst = std::max(first, 0);; 1067 if (last>nCells) Warning(""TAxis::SetRange"",""last > fNbins+1, fNbins+1 is used"");; 1068 fLast = std::min(last, nCells);; 1069 SetBit(kAxisRange, true);; 1070 }; 1071 ; 1072}; 1073 ; 1074 ; 1075////////////////////////////////////////////////////////////////////////////////; 1076/// Set the viewing range for the axis from ufirst to ulast (in user coordinates,; 1077/// that is, the ""natural"" axis coordinates).; 1078/// To set a range using the axis bin numbers, use TAxis::SetRange.; 1079 ; 1080void TAxis::SetRangeUser(Double_t ufirst, Double_t ulast); 1081{; 1082 if (!strstr(GetName(),""xaxis"")) {; 1083 TH1 *hobj = (TH1*)GetParent();; 1084 if (hobj &&; 1085 ((hobj->GetDimension() == 2 && strstr(GetName(),""zaxis"")); 1086 || (hobj->GetDimension() == 1 && strstr(GetName(),""yaxis"")))) {; 1087 hobj->SetMinimum(ufirst);; 1088 hobj->SetMaximum(ulast);; 1089 return;; 1090 }; 1091 }; 1092 if (ufirst<fXmin) Warning(""TAxis::SetRangeUser"",""ufirst < fXmin, fXmin is used"");; 1093 if (ulast>fXmax) Warning(""TAxis::SetRangeUser"",""ulast > fXmax, fXmax is used"");; 1094 Int_t ifirst = FindFixBin(ufirst);; 1095 Int_t ilast = FindFixBin(ulast);; 1096 // fixes for numerical error and for https://savannah.cern.ch/bugs/index.php?99777; 1097 if (GetBinUpEdge(ifirst) <= ufirst ) ifirst += 1;; 1098 if (GetBinLowEdge(ilast) >= ulast ) ilast -= 1;; 1099 SetRange(ifirst, ilast);; 1100}; 1101 ; 1102////////////////////////////////////////////////////////////////////////////////; 1103/// Set ticks orientation.; 1104/// option = ""+"" ticks drawn on the ""positive side"" (default); 1105/// option = ""-"" ticks drawn on the ""negative side""; 1106/// option = ""+-"" ticks drawn on both sides; 1107/// option = """" ticks will be drawn as whatever is defined as default. No bit is set internally.; 1108 ; 1109void TAxis::SetTicks(Option_t *option); 1110{; 1111 Re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:37282,error,error,37282,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['error'],['error']
Availability,"; 1145 }; 1146 fClear.invoke(fEnv);; 1147 }; 1148}; 1149 ; 1150////////////////////////////////////////////////////////////////////////////////; 1151/// Return the current size of the container; 1152 ; 1153UInt_t TGenCollectionProxy::Size() const; 1154{; 1155 if ( fEnv && fEnv->fObject ) {; 1156 if (fEnv->fUseTemp) {; 1157 return fEnv->fSize;; 1158 } else {; 1159 return *(size_t*)fSize.invoke(fEnv);; 1160 }; 1161 }; 1162 Fatal(""TGenCollectionProxy"",""Size> Logic error - no proxy object set."");; 1163 return 0;; 1164}; 1165 ; 1166////////////////////////////////////////////////////////////////////////////////; 1167/// Resize the container; 1168 ; 1169void TGenCollectionProxy::Resize(UInt_t n, Bool_t force); 1170{; 1171 if ( fEnv && fEnv->fObject ) {; 1172 if ( force && fPointers ) {; 1173 size_t i, nold = *(size_t*)fSize.invoke(fEnv);; 1174 if ( n != nold ) {; 1175 for (i=n; i<nold; ++i); 1176 DeleteItem(true, *(void**)TGenCollectionProxy::At(i));; 1177 }; 1178 }; 1179 MESSAGE(3, ""Resize(n)"" );; 1180 fEnv->fSize = n;; 1181 fResize(fEnv->fObject,fEnv->fSize);; 1182 return;; 1183 }; 1184 Fatal(""TGenCollectionProxy"",""Resize> Logic error - no proxy object set."");; 1185}; 1186 ; 1187////////////////////////////////////////////////////////////////////////////////; 1188/// Allocate the needed space.; 1189/// For associative collection, this returns a TStaging object that; 1190/// need to be deleted manually __or__ returned by calling Commit(TStaging*); 1191 ; 1192void* TGenCollectionProxy::Allocate(UInt_t n, Bool_t /* forceDelete */ ); 1193{; 1194 if ( fEnv && fEnv->fObject ) {; 1195 switch ( fSTL_type ) {; 1196 case ROOT::kSTLset:; 1197 case ROOT::kSTLunorderedset:; 1198 case ROOT::kSTLmultiset:; 1199 case ROOT::kSTLunorderedmultiset:; 1200 case ROOT::kSTLmap:; 1201 case ROOT::kSTLunorderedmap:; 1202 case ROOT::kSTLmultimap:; 1203 case ROOT::kSTLunorderedmultimap:{; 1204 if ( (fProperties & kNeedDelete) ); 1205 Clear(""force"");; 1206 else; 1207 fClear.invoke(fEnv);; 1208 // Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html:38318,error,error,38318,doc/master/TGenCollectionProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html,1,['error'],['error']
Availability,"; 11783 }; 11784 ; 11785 /* Create response (status_code has been set before) */; 11786 mg_response_header_start(conn, conn->status_code);; 11787 send_no_cache_header(conn);; 11788 send_additional_header(conn);; 11789 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 11790 ; 11791 /* Send all headers - there is no body */; 11792 mg_response_header_send(conn);; 11793}; 11794 ; 11795 ; 11796static void; 11797delete_file(struct mg_connection *conn, const char *path); 11798{; 11799 struct de de;; 11800 memset(&de.file, 0, sizeof(de.file));; 11801 if (!mg_stat(conn, path, &de.file)) {; 11802 /* mg_stat returns 0 if the file does not exist */; 11803 mg_send_http_error(conn,; 11804 404,; 11805 ""Error: Cannot delete file\nFile %s not found"",; 11806 path);; 11807 return;; 11808 }; 11809 ; 11810 if (de.file.is_directory) {; 11811 if (remove_directory(conn, path)) {; 11812 /* Delete is successful: Return 204 without content. */; 11813 mg_send_http_error(conn, 204, ""%s"", """");; 11814 } else {; 11815 /* Delete is not successful: Return 500 (Server error). */; 11816 mg_send_http_error(conn, 500, ""Error: Could not delete %s"", path);; 11817 }; 11818 return;; 11819 }; 11820 ; 11821 /* This is an existing file (not a directory).; 11822 * Check if write permission is granted. */; 11823 if (access(path, W_OK) != 0) {; 11824 /* File is read only */; 11825 mg_send_http_error(; 11826 conn,; 11827 403,; 11828 ""Error: Delete not possible\nDeleting %s is not allowed"",; 11829 path);; 11830 return;; 11831 }; 11832 ; 11833 /* Try to delete it. */; 11834 if (mg_remove(conn, path) == 0) {; 11835 /* Delete was successful: Return 204 without content. */; 11836 mg_response_header_start(conn, 204);; 11837 send_no_cache_header(conn);; 11838 send_additional_header(conn);; 11839 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 11840 mg_response_header_send(conn);; 11841 ; 11842 } else {; 11843 /* Delete not successful (file locked). */; 11844 mg_send_http_error(conn,; 11845 423,; 11846 """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:342079,error,error,342079,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 11784 }; 11785 ; 11786 /* Create response (status_code has been set before) */; 11787 mg_response_header_start(conn, conn->status_code);; 11788 send_no_cache_header(conn);; 11789 send_additional_header(conn);; 11790 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 11791 ; 11792 /* Send all headers - there is no body */; 11793 mg_response_header_send(conn);; 11794}; 11795 ; 11796 ; 11797static void; 11798delete_file(struct mg_connection *conn, const char *path); 11799{; 11800 struct de de;; 11801 memset(&de.file, 0, sizeof(de.file));; 11802 if (!mg_stat(conn, path, &de.file)) {; 11803 /* mg_stat returns 0 if the file does not exist */; 11804 mg_send_http_error(conn,; 11805 404,; 11806 ""Error: Cannot delete file\nFile %s not found"",; 11807 path);; 11808 return;; 11809 }; 11810 ; 11811 if (de.file.is_directory) {; 11812 if (remove_directory(conn, path)) {; 11813 /* Delete is successful: Return 204 without content. */; 11814 mg_send_http_error(conn, 204, ""%s"", """");; 11815 } else {; 11816 /* Delete is not successful: Return 500 (Server error). */; 11817 mg_send_http_error(conn, 500, ""Error: Could not delete %s"", path);; 11818 }; 11819 return;; 11820 }; 11821 ; 11822 /* This is an existing file (not a directory).; 11823 * Check if write permission is granted. */; 11824 if (access(path, W_OK) != 0) {; 11825 /* File is read only */; 11826 mg_send_http_error(; 11827 conn,; 11828 403,; 11829 ""Error: Delete not possible\nDeleting %s is not allowed"",; 11830 path);; 11831 return;; 11832 }; 11833 ; 11834 /* Try to delete it. */; 11835 if (mg_remove(conn, path) == 0) {; 11836 /* Delete was successful: Return 204 without content. */; 11837 mg_response_header_start(conn, 204);; 11838 send_no_cache_header(conn);; 11839 send_additional_header(conn);; 11840 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 11841 mg_response_header_send(conn);; 11842 ; 11843 } else {; 11844 /* Delete not successful (file locked). */; 11845 mg_send_http_error(conn,; 11846 423,; 11847 """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:342112,error,error,342112,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 1230 cursor = notclosed.FirstLink();; 1231 while (cursor) {; 1232 static_cast<TList*>(fSockets)->AddLast(cursor->GetObject());; 1233 cursor = cursor->Next();; 1234 }; 1235 }; 1236 gInterpreter->CallFunc_Delete(socketCloser);; 1237 }; 1238 if (fMappedFiles && fMappedFiles->First()) {; 1239 R__ListSlowClose<TVirtualMapFile>(static_cast<TList*>(fMappedFiles));; 1240 }; 1241 ; 1242}; 1243 ; 1244////////////////////////////////////////////////////////////////////////////////; 1245/// Execute the cleanups necessary at the end of the process, in particular; 1246/// those that must be executed before the library start being unloaded.; 1247 ; 1248void TROOT::EndOfProcessCleanups(); 1249{; 1250 // This will not delete the objects 'held' by the TFiles so that; 1251 // they can still be 'reacheable' when ResetGlobals is run.; 1252 CloseFiles();; 1253 ; 1254 if (gInterpreter) {; 1255 // This might delete some of the objects 'held' by the TFiles (hence; 1256 // `CloseFiles` must not delete them); 1257 gInterpreter->ResetGlobals();; 1258 }; 1259 ; 1260 // Now delete the objects still 'held' by the TFiles so that it; 1261 // is done before the tear down of the libraries.; 1262 if (fClosedObjects && fClosedObjects->First()) {; 1263 R__ListSlowDeleteContent(static_cast<TList*>(fClosedObjects));; 1264 }; 1265 fList->Delete(""slow"");; 1266 ; 1267 // Now a set of simpler things to delete. See the same ordering in; 1268 // TROOT::~TROOT; 1269 fFunctions->Delete();; 1270 fGeometries->Delete();; 1271 fBrowsers->Delete();; 1272 fCanvases->Delete(""slow"");; 1273 fColors->Delete();; 1274 fStyles->Delete();; 1275 ; 1276 TQObject::BlockAllSignals(kTRUE);; 1277 ; 1278 if (gInterpreter) {; 1279 gInterpreter->ShutDown();; 1280 }; 1281}; 1282 ; 1283 ; 1284////////////////////////////////////////////////////////////////////////////////; 1285/// Find an object in one Root folder; 1286 ; 1287TObject *TROOT::FindObject(const TObject *) const; 1288{; 1289 Error(""FindObject"",""Not yet implemented"");; 1290 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:49604,down,down,49604,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['down'],['down']
Availability,"; 1310 deepNet.Print();; 1311 }; 1312 Log() << ""Using "" << nTrainingSamples << "" events for training and "" << nValidationSamples << "" for testing"" << Endl;; 1313 ; 1314 // Loading the training and validation datasets; 1315 TMVAInput_t trainingTuple = std::tie(eventCollectionTraining, DataInfo());; 1316 TensorDataLoader_t trainingData(trainingTuple, nTrainingSamples, batchSize,; 1317 {inputDepth, inputHeight, inputWidth},; 1318 {deepNet.GetBatchDepth(), deepNet.GetBatchHeight(), deepNet.GetBatchWidth()} ,; 1319 deepNet.GetOutputWidth(), nThreads);; 1320 ; 1321 TMVAInput_t validationTuple = std::tie(eventCollectionValidation, DataInfo());; 1322 TensorDataLoader_t validationData(validationTuple, nValidationSamples, batchSize,; 1323 {inputDepth, inputHeight, inputWidth},; 1324 { deepNet.GetBatchDepth(),deepNet.GetBatchHeight(), deepNet.GetBatchWidth()} ,; 1325 deepNet.GetOutputWidth(), nThreads);; 1326 ; 1327 ; 1328 ; 1329 // do an evaluation of the network to compute initial minimum test error; 1330 ; 1331 Bool_t includeRegularization = (R != DNN::ERegularization::kNone);; 1332 ; 1333 Double_t minValError = 0.0;; 1334 Log() << ""Compute initial loss on the validation data "" << Endl;; 1335 for (auto batch : validationData) {; 1336 auto inputTensor = batch.GetInput();; 1337 auto outputMatrix = batch.GetOutput();; 1338 auto weights = batch.GetWeights();; 1339 ; 1340 //std::cout << "" input use count "" << inputTensor.GetBufferUseCount() << std::endl;; 1341 // should we apply droput to the loss ??; 1342 minValError += deepNet.Loss(inputTensor, outputMatrix, weights, false, includeRegularization);; 1343 }; 1344 // add Regularization term; 1345 Double_t regzTerm = (includeRegularization) ? deepNet.RegularizationTerm() : 0.0;; 1346 minValError /= (Double_t)(nValidationSamples / settings.batchSize);; 1347 minValError += regzTerm;; 1348 ; 1349 ; 1350 // create a pointer to base class VOptimizer; 1351 std::unique_ptr<DNN::VOptimizer<Architecture_t, Layer_t, DeepNet_t>> optimizer;; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:52453,error,error,52453,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['error'],['error']
Availability,"; 1342 }; 1343 dictStream << std::endl;; 1344}; 1345 ; 1346////////////////////////////////////////////////////////////////////////////////; 1347/// GrabIndex returns a static string (so use it or copy it immediately, do not; 1348/// call GrabIndex twice in the same expression) containing the size of the; 1349/// array data member.; 1350/// In case of error, or if the size is not specified, GrabIndex returns 0.; 1351 ; 1352llvm::StringRef GrabIndex(const cling::Interpreter& interp, const clang::FieldDecl &member, int printError); 1353{; 1354 int error;; 1355 llvm::StringRef where;; 1356 ; 1357 llvm::StringRef index = ROOT::TMetaUtils::DataMemberInfo__ValidArrayIndex(interp, member, &error, &where);; 1358 if (index.size() == 0 && printError) {; 1359 const char *errorstring;; 1360 switch (error) {; 1361 case TMetaUtils::NOT_INT:; 1362 errorstring = ""is not an integer"";; 1363 break;; 1364 case TMetaUtils::NOT_DEF:; 1365 errorstring = ""has not been defined before the array"";; 1366 break;; 1367 case TMetaUtils::IS_PRIVATE:; 1368 errorstring = ""is a private member of a parent class"";; 1369 break;; 1370 case TMetaUtils::UNKNOWN:; 1371 errorstring = ""is not known"";; 1372 break;; 1373 default:; 1374 errorstring = ""UNKNOWN ERROR!!!!"";; 1375 }; 1376 ; 1377 if (where.size() == 0) {; 1378 ROOT::TMetaUtils::Error(nullptr, ""*** Datamember %s::%s: no size indication!\n"",; 1379 member.getParent()->getName().str().c_str(), member.getName().str().c_str());; 1380 } else {; 1381 ROOT::TMetaUtils::Error(nullptr, ""*** Datamember %s::%s: size of array (%s) %s!\n"",; 1382 member.getParent()->getName().str().c_str(), member.getName().str().c_str(), where.str().c_str(), errorstring);; 1383 }; 1384 }; 1385 return index;; 1386}; 1387 ; 1388////////////////////////////////////////////////////////////////////////////////; 1389 ; 1390void WriteStreamer(const ROOT::TMetaUtils::AnnotatedRecordDecl &cl,; 1391 const cling::Interpreter &interp,; 1392 const ROOT::TMetaUtils::TNormalizedCtxt &normCtxt,; 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:51340,error,errorstring,51340,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,7,['error'],"['error', 'errorstring']"
Availability,"; 1415 double sumError = 0.0;; 1416 double sumWeights = 0.0; // -------------; 1417 ; 1418 ; 1419 // ----------------------------- prepare layer data -------------------------------------; 1420 size_t totalNumWeights (0);; 1421 std::vector<std::vector<LayerData>> layerPatternData = prepareLayerData (_layers,; 1422 batch,; 1423 dropContainer,; 1424 itWeightBegin,; 1425 itWeightEnd,; 1426 itGradientBegin,; 1427 itGradientEnd,; 1428 totalNumWeights);; 1429 ; 1430 ; 1431 ; 1432 // ---------------------------------- propagate forward ------------------------------------------------------------------; 1433 std::vector<double> valuesMean;; 1434 std::vector<double> valuesStdDev;; 1435 forwardBatch (_layers, layerPatternData, valuesMean, valuesStdDev, trainFromLayer);; 1436 ; 1437 ; 1438 // ------------- fetch output ------------------; 1439 if (doFetchOutput); 1440 {; 1441 fetchOutput (layerPatternData.back (), outputContainer);; 1442 }; 1443 ; 1444 ; 1445 // ------------- error computation -------------; 1446 std::tie (sumError, sumWeights) = computeError (settings, layerPatternData.back (), batch, itWeightBegin, itWeightBegin + totalNumWeights);; 1447 ; 1448 ; 1449 // ------------- backpropagation -------------; 1450 backPropagate (layerPatternData, settings, trainFromLayer, totalNumWeights);; 1451 ; 1452 ; 1453 // --- compile the measures; 1454 double batchSize = std::distance (std::begin (batch), std::end (batch));; 1455 for (auto it = itGradientBegin; it != itGradientEnd; ++it); 1456 (*it) /= batchSize;; 1457 ; 1458 ; 1459 sumError /= sumWeights;; 1460 return sumError;; 1461 }; 1462 ; 1463 ; 1464 ; 1465/*! \brief initialization of the weights; 1466 *; 1467 *; 1468 */; 1469 template <typename OutIterator>; 1470 void Net::initializeWeights (WeightInitializationStrategy eInitStrategy, OutIterator itWeight); 1471 {; 1472 if (eInitStrategy == WeightInitializationStrategy::XAVIER); 1473 {; 1474 // input and output properties; 1475 int numInput = inputSize ();; 1476 ; 1477 // ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:48625,error,error,48625,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['error'],['error']
Availability,"; 14861 if (vec->len < sizeof(so->lsa.sun.sun_path)) {; 14862 len = vec->len;; 14863 so->lsa.sun.sun_family = AF_UNIX;; 14864 memset(so->lsa.sun.sun_path, 0, sizeof(so->lsa.sun.sun_path));; 14865 memcpy(so->lsa.sun.sun_path, (char *)vec->ptr + 1, vec->len - 1);; 14866 port = 0;; 14867 *ip_version = 99;; 14868 } else {; 14869 /* String too long */; 14870 len = 0;; 14871 }; 14872#endif; 14873 ; 14874 } else {; 14875 /* Parsing failure. */; 14876 len = 0;; 14877 }; 14878 ; 14879 /* sscanf and the option splitting code ensure the following condition; 14880 * Make sure the port is valid and vector ends with the port, 's' or 'r' */; 14881 if ((len > 0) && is_valid_port(port); 14882 && (((size_t)len == vec->len) || (((size_t)len + 1) == vec->len))) {; 14883 /* Next character after the port number */; 14884 ch = ((size_t)len < vec->len) ? vec->ptr[len] : '\0';; 14885 so->is_ssl = (ch == 's');; 14886 so->ssl_redir = (ch == 'r');; 14887 if ((ch == '\0') || (ch == 's') || (ch == 'r')) {; 14888 return 1;; 14889 }; 14890 }; 14891 ; 14892 /* Reset ip_version to 0 if there is an error */; 14893 *ip_version = 0;; 14894 return 0;; 14895}; 14896 ; 14897 ; 14898/* Is there any SSL port in use? */; 14899static int; 14900is_ssl_port_used(const char *ports); 14901{; 14902 if (ports) {; 14903 /* There are several different allowed syntax variants:; 14904 * - ""80"" for a single port using every network interface; 14905 * - ""localhost:80"" for a single port using only localhost; 14906 * - ""80,localhost:8080"" for two ports, one bound to localhost; 14907 * - ""80,127.0.0.1:8084,[::1]:8086"" for three ports, one bound; 14908 * to IPv4 localhost, one to IPv6 localhost; 14909 * - ""+80"" use port 80 for IPv4 and IPv6; 14910 * - ""+80r,+443s"" port 80 (HTTP) is a redirect to port 443 (HTTPS),; 14911 * for both: IPv4 and IPv4; 14912 * - ""+443s,localhost:8080"" port 443 (HTTPS) for every interface,; 14913 * additionally port 8080 bound to localhost connections; 14914 *; 14915 * If we just look for 's' anywhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:440487,error,error,440487,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 14862 if (vec->len < sizeof(so->lsa.sun.sun_path)) {; 14863 len = vec->len;; 14864 so->lsa.sun.sun_family = AF_UNIX;; 14865 memset(so->lsa.sun.sun_path, 0, sizeof(so->lsa.sun.sun_path));; 14866 memcpy(so->lsa.sun.sun_path, (char *)vec->ptr + 1, vec->len - 1);; 14867 port = 0;; 14868 *ip_version = 99;; 14869 } else {; 14870 /* String too long */; 14871 len = 0;; 14872 }; 14873#endif; 14874 ; 14875 } else {; 14876 /* Parsing failure. */; 14877 len = 0;; 14878 }; 14879 ; 14880 /* sscanf and the option splitting code ensure the following condition; 14881 * Make sure the port is valid and vector ends with the port, 's' or 'r' */; 14882 if ((len > 0) && is_valid_port(port); 14883 && (((size_t)len == vec->len) || (((size_t)len + 1) == vec->len))) {; 14884 /* Next character after the port number */; 14885 ch = ((size_t)len < vec->len) ? vec->ptr[len] : '\0';; 14886 so->is_ssl = (ch == 's');; 14887 so->ssl_redir = (ch == 'r');; 14888 if ((ch == '\0') || (ch == 's') || (ch == 'r')) {; 14889 return 1;; 14890 }; 14891 }; 14892 ; 14893 /* Reset ip_version to 0 if there is an error */; 14894 *ip_version = 0;; 14895 return 0;; 14896}; 14897 ; 14898 ; 14899/* Is there any SSL port in use? */; 14900static int; 14901is_ssl_port_used(const char *ports); 14902{; 14903 if (ports) {; 14904 /* There are several different allowed syntax variants:; 14905 * - ""80"" for a single port using every network interface; 14906 * - ""localhost:80"" for a single port using only localhost; 14907 * - ""80,localhost:8080"" for two ports, one bound to localhost; 14908 * - ""80,127.0.0.1:8084,[::1]:8086"" for three ports, one bound; 14909 * to IPv4 localhost, one to IPv6 localhost; 14910 * - ""+80"" use port 80 for IPv4 and IPv6; 14911 * - ""+80r,+443s"" port 80 (HTTP) is a redirect to port 443 (HTTPS),; 14912 * for both: IPv4 and IPv4; 14913 * - ""+443s,localhost:8080"" port 443 (HTTPS) for every interface,; 14914 * additionally port 8080 bound to localhost connections; 14915 *; 14916 * If we just look for 's' anywhe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:440520,error,error,440520,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 1531{; 1532 if (i < 0 || i >= fNpoints || fEyH.empty()); 1533 return -1.;; 1534 ; 1535 if (fSumErrorsMode == TGraphMultiErrors::kOnlyFirst); 1536 return fEyH[0][i];; 1537 else if (fSumErrorsMode == TGraphMultiErrors::kSquareSum) {; 1538 Double_t sum = 0.;; 1539 for (Int_t j = 0; j < fNYErrors; j++); 1540 sum += fEyH[j][i] * fEyH[j][i];; 1541 return TMath::Sqrt(sum);; 1542 } else if (fSumErrorsMode == TGraphMultiErrors::kAbsSum) {; 1543 Double_t sum = 0.;; 1544 for (Int_t j = 0; j < fNYErrors; j++); 1545 sum += fEyH[j][i];; 1546 return sum;; 1547 }; 1548 ; 1549 return -1.;; 1550}; 1551 ; 1552////////////////////////////////////////////////////////////////////////////////; 1553/// Get low error e on y coordinate for point `i`.; 1554 ; 1555Double_t TGraphMultiErrors::GetErrorYlow(Int_t i, Int_t e) const; 1556{; 1557 if (i < 0 || i >= fNpoints || e >= fNYErrors || fEyL.empty()); 1558 return -1.;; 1559 ; 1560 return fEyL[e][i];; 1561}; 1562 ; 1563////////////////////////////////////////////////////////////////////////////////; 1564/// Get high error e on y coordinate for point `i`.; 1565 ; 1566Double_t TGraphMultiErrors::GetErrorYhigh(Int_t i, Int_t e) const; 1567{; 1568 if (i < 0 || i >= fNpoints || e >= fNYErrors || fEyH.empty()); 1569 return -1.;; 1570 ; 1571 return fEyH[e][i];; 1572}; 1573 ; 1574////////////////////////////////////////////////////////////////////////////////; 1575/// Get all low errors on y coordinates as an array summed according to `fSumErrorsMode`.; 1576 ; 1577Double_t *TGraphMultiErrors::GetEYlow() const; 1578{; 1579 if (!fEyLSum); 1580 CalcYErrorsSum();; 1581 ; 1582 return fEyLSum;; 1583}; 1584 ; 1585////////////////////////////////////////////////////////////////////////////////; 1586/// Get all high errors on y coordinates as an array summed according to `fSumErrorsMode`.; 1587 ; 1588Double_t *TGraphMultiErrors::GetEYhigh() const; 1589{; 1590 if (!fEyHSum); 1591 CalcYErrorsSum();; 1592 ; 1593 return fEyHSum;; 1594}; 1595 ; 1596//////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:53532,error,error,53532,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability,"; 1554 binContent += oldBins[i];; 1555 binCount += oldCount[i];; 1556 binError += oldErrors[i];; 1557 if (fBinSumw2.fN) binSumw2 += oldBinw2[i];; 1558 }; 1559 hnew->fArray[newbins+1] = binContent;; 1560 hnew->fBinEntries[newbins+1] = binCount;; 1561 hnew->fSumw2[newbins+1] = binError;; 1562 if ( fBinSumw2.fN ) hnew->fBinSumw2[newbins+1] = binSumw2;; 1563 ; 1564 ; 1565 delete [] oldBins;; 1566 delete [] oldCount;; 1567 delete [] oldErrors;; 1568 if (oldBinw2) delete [] oldBinw2;; 1569 return hnew;; 1570}; 1571 ; 1572////////////////////////////////////////////////////////////////////////////////; 1573/// Profile histogram is resized along x axis such that x is in the axis range.; 1574/// The new axis limits are recomputed by doubling iteratively; 1575/// the current axis range until the specified value x is within the limits.; 1576/// The algorithm makes a copy of the histogram, then loops on all bins; 1577/// of the old histogram to fill the extended histogram.; 1578/// Takes into account errors (Sumw2) if any.; 1579/// The axis must be extendable before invoking this function.; 1580///; 1581/// Ex: `h->GetXaxis()->SetCanExtend(kTRUE)`; 1582 ; 1583void TProfile::ExtendAxis(Double_t x, TAxis *axis); 1584{; 1585 TProfile* hold = TProfileHelper::ExtendAxis(this, x, axis);; 1586 if ( hold ) {; 1587 fTsumwy = hold->fTsumwy;; 1588 fTsumwy2 = hold->fTsumwy2;; 1589 ; 1590 delete hold;; 1591 }; 1592}; 1593 ; 1594////////////////////////////////////////////////////////////////////////////////; 1595/// Reset contents of a Profile histogram.; 1596 ; 1597void TProfile::Reset(Option_t *option); 1598{; 1599 TH1D::Reset(option);; 1600 fBinEntries.Reset();; 1601 fBinSumw2.Reset();; 1602 TString opt = option;; 1603 opt.ToUpper();; 1604 if (opt.Contains(""ICE"") && !opt.Contains(""S"")) return;; 1605 fTsumwy = 0;; 1606 fTsumwy2 = 0;; 1607}; 1608 ; 1609////////////////////////////////////////////////////////////////////////////////; 1610/// Save primitive as a C++ statement(s) on output str",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:58120,error,errors,58120,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['error'],['errors']
Availability,"; 156/// function is called it will warn the user that the function should; 157/// have been overridden.; 158 ; 159void AbstractMethod(const char *method); 160{; 161 Warning(method, ""this method must be overridden!"");; 162}; 163 ; 164////////////////////////////////////////////////////////////////////////////////; 165/// This function can be used in classes that should override a certain; 166/// function, but in the inherited class the function makes no sense.; 167 ; 168void MayNotUse(const char *method); 169{; 170 Warning(method, ""may not use this method"");; 171}; 172 ; 173////////////////////////////////////////////////////////////////////////////////; 174/// Use this function to declare a function obsolete. Specify as of which version; 175/// the method is obsolete and as from which version it will be removed.; 176 ; 177void Obsolete(const char *function, const char *asOfVers, const char *removedFromVers); 178{; 179 Warning(function, ""obsolete as of %s and will be removed from %s"", asOfVers, removedFromVers);; 180}; 181 ; 182////////////////////////////////////////////////////////////////////////////////; 183/// Use this function in case an error occurred.; 184 ; 185void Error(const char *location, const char *fmt, ...); 186{; 187 std::va_list ap;; 188 va_start(ap, fmt);; 189 ErrorHandler(kError, location, fmt, ap);; 190 va_end(ap);; 191}; 192 ; 193////////////////////////////////////////////////////////////////////////////////; 194/// Use this function in case a system (OS or GUI) related error occurred.; 195 ; 196void SysError(const char *location, const char *fmt, ...); 197{; 198 std::va_list ap;; 199 va_start(ap, fmt);; 200 ErrorHandler(kSysError, location, fmt, ap);; 201 va_end(ap);; 202}; 203 ; 204////////////////////////////////////////////////////////////////////////////////; 205/// Use this function in case an error occurred.; 206 ; 207void Break(const char *location, const char *fmt, ...); 208{; 209 std::va_list ap;; 210 va_start(ap, fmt);; 211 ErrorHand",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8cxx_source.html:6312,error,error,6312,doc/master/TError_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TError_8cxx_source.html,1,['error'],['error']
Availability,"; 1599/// structure must be deleted by the user. In case of error 0 is returned.; 1600 ; 1601UserGroup_t *TSystem::GetUserInfo(Int_t /*uid*/); 1602{; 1603 AbstractMethod(""GetUserInfo"");; 1604 return nullptr;; 1605}; 1606 ; 1607////////////////////////////////////////////////////////////////////////////////; 1608/// Returns all user info in the UserGroup_t structure. If user = 0, returns; 1609/// current user's id info. The returned structure must be deleted by the; 1610/// user. In case of error 0 is returned.; 1611 ; 1612UserGroup_t *TSystem::GetUserInfo(const char * /*user*/); 1613{; 1614 AbstractMethod(""GetUserInfo"");; 1615 return nullptr;; 1616}; 1617 ; 1618////////////////////////////////////////////////////////////////////////////////; 1619/// Returns all group info in the UserGroup_t structure. The only active; 1620/// fields in the UserGroup_t structure for this call are:; 1621/// - fGid and fGroup; 1622/// The returned structure must be deleted by the user. In case of; 1623/// error 0 is returned.; 1624 ; 1625UserGroup_t *TSystem::GetGroupInfo(Int_t /*gid*/); 1626{; 1627 AbstractMethod(""GetGroupInfo"");; 1628 return nullptr;; 1629}; 1630 ; 1631////////////////////////////////////////////////////////////////////////////////; 1632/// Returns all group info in the UserGroup_t structure. The only active; 1633/// fields in the UserGroup_t structure for this call are:; 1634/// - fGid and fGroup; 1635/// If group = 0, returns current user's group. The returned structure; 1636/// must be deleted by the user. In case of error 0 is returned.; 1637 ; 1638UserGroup_t *TSystem::GetGroupInfo(const char * /*group*/); 1639{; 1640 AbstractMethod(""GetGroupInfo"");; 1641 return nullptr;; 1642}; 1643 ; 1644//---- environment manipulation ------------------------------------------------; 1645 ; 1646////////////////////////////////////////////////////////////////////////////////; 1647/// Set environment variable.; 1648 ; 1649void TSystem::Setenv(const char *, const char *); 1650{; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:51740,error,error,51740,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['error'],['error']
Availability,"; 1625/// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; 1626///; 1627/// The default columns are looked at in case no column is specified in the; 1628/// booking of actions or transformations.; 1629/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1630RDataFrame::RDataFrame(TTree &tree, const ColumnNames_t &defaultColumns); 1631 : RInterface(std::make_shared<RDFDetail::RLoopManager>(&tree, defaultColumns)); 1632{; 1633}; 1634 ; 1635//////////////////////////////////////////////////////////////////////////; 1636/// \brief Build a dataframe that generates numEntries entries.; 1637/// \param[in] numEntries The number of entries to generate.; 1638///; 1639/// An empty-source dataframe constructed with a number of entries will; 1640/// generate those entries on the fly when some action is triggered,; 1641/// and it will do so for all the previously-defined columns.; 1642/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1643RDataFrame::RDataFrame(ULong64_t numEntries); 1644 : RInterface(std::make_shared<RDFDetail::RLoopManager>(numEntries)); 1645 ; 1646{; 1647}; 1648 ; 1649//////////////////////////////////////////////////////////////////////////; 1650/// \brief Build dataframe associated to data source.; 1651/// \param[in] ds The data source object.; 1652/// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; 1653///; 1654/// A dataframe associated to a data source will query it to access column values.; 1655/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1656RDataFrame::RDataFrame(std::unique_ptr<ROOT::RDF::RDataSource> ds, const ColumnNames_t &defaultColumns); 1657 : RInterface(std::make_shared<RDFDetail::RLoopManager>(std::move(ds), defaultColumns)); 1658{; 1659}; 1660 ; 1661//////////////////////////////////////////////////////////////////////////; 1662/// \brief Build dat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/RDataFrame_8cxx_source.html:92195,avail,available,92195,doc/v632/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/RDataFrame_8cxx_source.html,1,['avail'],['available']
Availability,"; 1658 pc.defineDouble(""scaleFactor"",""Normalization"",0,1.0) ;; 1659 pc.defineInt(""scaleType"",""Normalization"",0,Relative) ;; 1660 pc.defineSet(""sliceSet"",""SliceVars"",0) ;; 1661 pc.defineObject(""sliceCatList"",""SliceCat"",0,nullptr,true) ;; 1662 // This dummy is needed for plotOn to recognize the ""SliceCatMany"" command.; 1663 // It is not used directly, but the ""SliceCat"" commands are nested in it.; 1664 // Removing this dummy definition results in ""ERROR: unrecognized command: SliceCatMany"".; 1665 pc.defineObject(""dummy1"",""SliceCatMany"",0) ;; 1666 pc.defineSet(""projSet"",""Project"",0) ;; 1667 pc.defineObject(""asymCat"",""Asymmetry"",0) ;; 1668 pc.defineDouble(""precision"",""Precision"",0,1e-3) ;; 1669 pc.defineDouble(""evalErrorVal"",""EvalErrorValue"",0,0) ;; 1670 pc.defineInt(""doEvalError"",""EvalErrorValue"",0,0) ;; 1671 pc.defineInt(""shiftToZero"",""ShiftToZero"",0,0) ;; 1672 pc.defineSet(""projDataSet"",""ProjData"",0) ;; 1673 pc.defineObject(""projData"",""ProjData"",1) ;; 1674 pc.defineObject(""errorFR"",""VisualizeError"",0) ;; 1675 pc.defineDouble(""errorZ"",""VisualizeError"",0,1.) ;; 1676 pc.defineSet(""errorPars"",""VisualizeError"",0) ;; 1677 pc.defineInt(""linearMethod"",""VisualizeError"",0,0) ;; 1678 pc.defineInt(""binProjData"",""ProjData"",0,0) ;; 1679 pc.defineDouble(""rangeLo"",""Range"",0,-999.) ;; 1680 pc.defineDouble(""rangeHi"",""Range"",1,-999.) ;; 1681 pc.defineInt(""numee"",""PrintEvalErrors"",0,10) ;; 1682 pc.defineInt(""rangeAdjustNorm"",""Range"",0,0) ;; 1683 pc.defineInt(""rangeWNAdjustNorm"",""RangeWithName"",0,0) ;; 1684 pc.defineInt(""VLines"",""VLines"",0,2) ; // 2==ExtendedWings; 1685 pc.defineString(""rangeName"",""RangeWithName"",0,"""") ;; 1686 pc.defineString(""normRangeName"",""NormRange"",0,"""") ;; 1687 pc.defineInt(""markerColor"",""MarkerColor"",0,-999) ;; 1688 pc.defineInt(""markerStyle"",""MarkerStyle"",0,-999) ;; 1689 pc.defineDouble(""markerSize"",""MarkerSize"",0,-999) ;; 1690 pc.defineInt(""lineColor"",""LineColor"",0,-999) ;; 1691 pc.defineInt(""lineStyle"",""LineStyle"",0,-999) ;; 1692 pc.defineInt(""lineWidth"",""LineW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:72594,error,errorFR,72594,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['errorFR']
Availability,"; 17245 return NULL;; 17246 }; 17247 ; 17248#if defined(GCC_DIAGNOSTIC); 17249#pragma GCC diagnostic push; 17250#pragma GCC diagnostic ignored ""-Wcast-align""; 17251#endif /* defined(GCC_DIAGNOSTIC) */; 17252 /* conn_size is aligned to 8 bytes */; 17253 ; 17254 conn->phys_ctx = (struct mg_context *)(((char *)conn) + conn_size);; 17255 ; 17256#if defined(GCC_DIAGNOSTIC); 17257#pragma GCC diagnostic pop; 17258#endif /* defined(GCC_DIAGNOSTIC) */; 17259 ; 17260 conn->buf = (((char *)conn) + conn_size + ctx_size);; 17261 conn->buf_size = (int)max_req_size;; 17262 conn->phys_ctx->context_type = CONTEXT_HTTP_CLIENT;; 17263 conn->dom_ctx = &(conn->phys_ctx->dd);; 17264 ; 17265 if (!connect_socket(conn->phys_ctx,; 17266 client_options->host,; 17267 client_options->port,; 17268 use_ssl,; 17269 ebuf,; 17270 ebuf_len,; 17271 &sock,; 17272 &sa)) {; 17273 /* ebuf is set by connect_socket,; 17274 * free all memory and return NULL; */; 17275 mg_free(conn);; 17276 return NULL;; 17277 }; 17278 ; 17279#if !defined(NO_SSL) && !defined(USE_MBEDTLS) // TODO: mbedTLS client; 17280#if (defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0)) \; 17281 && !defined(NO_SSL_DL); 17282 if (use_ssl; 17283 && (conn->dom_ctx->ssl_ctx = SSL_CTX_new(TLS_client_method())); 17284 == NULL) {; 17285 mg_snprintf(NULL,; 17286 NULL, /* No truncation check for ebuf */; 17287 ebuf,; 17288 ebuf_len,; 17289 ""SSL_CTX_new error: %s"",; 17290 ssl_error());; 17291 closesocket(sock);; 17292 mg_free(conn);; 17293 return NULL;; 17294 }; 17295#else; 17296 if (use_ssl; 17297 && (conn->dom_ctx->ssl_ctx = SSL_CTX_new(SSLv23_client_method())); 17298 == NULL) {; 17299 mg_snprintf(NULL,; 17300 NULL, /* No truncation check for ebuf */; 17301 ebuf,; 17302 ebuf_len,; 17303 ""SSL_CTX_new error: %s"",; 17304 ssl_error());; 17305 closesocket(sock);; 17306 mg_free(conn);; 17307 return NULL;; 17308 }; 17309#endif /* OPENSSL_API_1_1 || OPENSSL_API_3_0 */; 17310#endif /* NO_SSL */; 17311 ; 17312 ; 17313#if defined(USE_IPV6); 17314 len = (sa.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:513673,error,error,513673,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['error'],['error']
Availability,"; 17246 return NULL;; 17247 }; 17248 ; 17249#if defined(GCC_DIAGNOSTIC); 17250#pragma GCC diagnostic push; 17251#pragma GCC diagnostic ignored ""-Wcast-align""; 17252#endif /* defined(GCC_DIAGNOSTIC) */; 17253 /* conn_size is aligned to 8 bytes */; 17254 ; 17255 conn->phys_ctx = (struct mg_context *)(((char *)conn) + conn_size);; 17256 ; 17257#if defined(GCC_DIAGNOSTIC); 17258#pragma GCC diagnostic pop; 17259#endif /* defined(GCC_DIAGNOSTIC) */; 17260 ; 17261 conn->buf = (((char *)conn) + conn_size + ctx_size);; 17262 conn->buf_size = (int)max_req_size;; 17263 conn->phys_ctx->context_type = CONTEXT_HTTP_CLIENT;; 17264 conn->dom_ctx = &(conn->phys_ctx->dd);; 17265 ; 17266 if (!connect_socket(conn->phys_ctx,; 17267 client_options->host,; 17268 client_options->port,; 17269 use_ssl,; 17270 ebuf,; 17271 ebuf_len,; 17272 &sock,; 17273 &sa)) {; 17274 /* ebuf is set by connect_socket,; 17275 * free all memory and return NULL; */; 17276 mg_free(conn);; 17277 return NULL;; 17278 }; 17279 ; 17280#if !defined(NO_SSL) && !defined(USE_MBEDTLS) // TODO: mbedTLS client; 17281#if (defined(OPENSSL_API_1_1) || defined(OPENSSL_API_3_0)) \; 17282 && !defined(NO_SSL_DL); 17283 if (use_ssl; 17284 && (conn->dom_ctx->ssl_ctx = SSL_CTX_new(TLS_client_method())); 17285 == NULL) {; 17286 mg_snprintf(NULL,; 17287 NULL, /* No truncation check for ebuf */; 17288 ebuf,; 17289 ebuf_len,; 17290 ""SSL_CTX_new error: %s"",; 17291 ssl_error());; 17292 closesocket(sock);; 17293 mg_free(conn);; 17294 return NULL;; 17295 }; 17296#else; 17297 if (use_ssl; 17298 && (conn->dom_ctx->ssl_ctx = SSL_CTX_new(SSLv23_client_method())); 17299 == NULL) {; 17300 mg_snprintf(NULL,; 17301 NULL, /* No truncation check for ebuf */; 17302 ebuf,; 17303 ebuf_len,; 17304 ""SSL_CTX_new error: %s"",; 17305 ssl_error());; 17306 closesocket(sock);; 17307 mg_free(conn);; 17308 return NULL;; 17309 }; 17310#endif /* OPENSSL_API_1_1 || OPENSSL_API_3_0 */; 17311#endif /* NO_SSL */; 17312 ; 17313 ; 17314#if defined(USE_IPV6); 17315 len = (sa.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:513706,error,error,513706,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['error'],['error']
Availability,"; 1758Longptr_t TApplication::ExecuteFile(const char *file, Int_t *error, Bool_t keep); 1759{; 1760 static const Int_t kBufSize = 1024;; 1761 ; 1762 if (!file || !*file) return 0;; 1763 ; 1764 TString aclicMode;; 1765 TString arguments;; 1766 TString io;; 1767 TString fname = gSystem->SplitAclicMode(file, aclicMode, arguments, io);; 1768 ; 1769 char *exnam = gSystem->Which(TROOT::GetMacroPath(), fname, kReadPermission);; 1770 if (!exnam) {; 1771 ::Error(""TApplication::ExecuteFile"", ""macro %s not found in path %s"", fname.Data(),; 1772 TROOT::GetMacroPath());; 1773 delete [] exnam;; 1774 if (error); 1775 *error = (Int_t)TInterpreter::kRecoverable;; 1776 return 0;; 1777 }; 1778 ; 1779 ::std::ifstream macro(exnam, std::ios::in);; 1780 if (!macro.good()) {; 1781 ::Error(""TApplication::ExecuteFile"", ""%s no such file"", exnam);; 1782 if (error); 1783 *error = (Int_t)TInterpreter::kRecoverable;; 1784 delete [] exnam;; 1785 return 0;; 1786 }; 1787 ; 1788 char currentline[kBufSize];; 1789 char dummyline[kBufSize];; 1790 int tempfile = 0;; 1791 int comment = 0;; 1792 int ifndefc = 0;; 1793 int ifdef = 0;; 1794 char *s = nullptr;; 1795 Bool_t execute = kFALSE;; 1796 Longptr_t retval = 0;; 1797 ; 1798 while (1) {; 1799 bool res = (bool)macro.getline(currentline, kBufSize);; 1800 if (macro.eof()) break;; 1801 if (!res) {; 1802 // Probably only read kBufSize, let's ignore the remainder of; 1803 // the line.; 1804 macro.clear();; 1805 while (!macro.getline(dummyline, kBufSize) && !macro.eof()) {; 1806 macro.clear();; 1807 }; 1808 }; 1809 s = currentline;; 1810 while (s && (*s == ' ' || *s == '\t')) s++; // strip-off leading blanks; 1811 ; 1812 // very simple minded pre-processor parsing, only works in case macro file; 1813 // starts with ""#ifndef __CINT__"". In that case everything till next; 1814 // ""#else"" or ""#endif"" will be skipped.; 1815 if (*s == '#') {; 1816 char *cs = Compress(currentline);; 1817 if (strstr(cs, ""#ifndef__CINT__"") ||; 1818 strstr(cs, ""#if!defined(__CINT__)""));",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:69091,error,error,69091,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,2,['error'],['error']
Availability,"; 1802/// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; 1803///; 1804/// The default columns are looked at in case no column is specified in the; 1805/// booking of actions or transformations.; 1806/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1807RDataFrame::RDataFrame(TTree &tree, const ColumnNames_t &defaultColumns); 1808 : RInterface(std::make_shared<RDFDetail::RLoopManager>(&tree, defaultColumns)); 1809{; 1810}; 1811 ; 1812//////////////////////////////////////////////////////////////////////////; 1813/// \brief Build a dataframe that generates numEntries entries.; 1814/// \param[in] numEntries The number of entries to generate.; 1815///; 1816/// An empty-source dataframe constructed with a number of entries will; 1817/// generate those entries on the fly when some action is triggered,; 1818/// and it will do so for all the previously-defined columns.; 1819/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1820RDataFrame::RDataFrame(ULong64_t numEntries); 1821 : RInterface(std::make_shared<RDFDetail::RLoopManager>(numEntries)); 1822 ; 1823{; 1824}; 1825 ; 1826//////////////////////////////////////////////////////////////////////////; 1827/// \brief Build dataframe associated to data source.; 1828/// \param[in] ds The data source object.; 1829/// \param[in] defaultColumns Collection of default column names to fall back to when none is specified.; 1830///; 1831/// A dataframe associated to a data source will query it to access column values.; 1832/// \see ROOT::RDF::RInterface for the documentation of the methods available.; 1833RDataFrame::RDataFrame(std::unique_ptr<ROOT::RDF::RDataSource> ds, const ColumnNames_t &defaultColumns); 1834 : RInterface(std::make_shared<RDFDetail::RLoopManager>(std::move(ds), defaultColumns)); 1835{; 1836}; 1837 ; 1838//////////////////////////////////////////////////////////////////////////; 1839/// \brief Build dat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RDataFrame_8cxx_source.html:100034,avail,available,100034,doc/master/RDataFrame_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RDataFrame_8cxx_source.html,1,['avail'],['available']
Availability,"; 1880/// The user must delete returned string (delete []).; 1881 ; 1882char *TUnixSystem::ExpandPathName(const char *path); 1883{; 1884 TString patbuf = path;; 1885 if (ExpandPathName(patbuf)); 1886 return nullptr;; 1887 return StrDup(patbuf.Data());; 1888}; 1889 ; 1890////////////////////////////////////////////////////////////////////////////////; 1891/// Set the file permission bits. Returns -1 in case or error, 0 otherwise.; 1892 ; 1893int TUnixSystem::Chmod(const char *file, UInt_t mode); 1894{; 1895 return ::chmod(file, mode);; 1896}; 1897 ; 1898////////////////////////////////////////////////////////////////////////////////; 1899/// Set the process file creation mode mask.; 1900 ; 1901int TUnixSystem::Umask(Int_t mask); 1902{; 1903 return ::umask(mask);; 1904}; 1905 ; 1906////////////////////////////////////////////////////////////////////////////////; 1907/// Set a files modification and access times. If actime = 0 it will be; 1908/// set to the modtime. Returns 0 on success and -1 in case of error.; 1909 ; 1910int TUnixSystem::Utime(const char *file, Long_t modtime, Long_t actime); 1911{; 1912 if (!actime); 1913 actime = modtime;; 1914 ; 1915 struct utimbuf t;; 1916 t.actime = (time_t)actime;; 1917 t.modtime = (time_t)modtime;; 1918 return ::utime(file, &t);; 1919}; 1920 ; 1921////////////////////////////////////////////////////////////////////////////////; 1922/// Find location of file ""wfil"" in a search path.; 1923/// The search path is specified as a : separated list of directories.; 1924/// Return value is pointing to wfile for compatibility with; 1925/// Which(const char*,const char*,EAccessMode) version.; 1926 ; 1927const char *TUnixSystem::FindFile(const char *search, TString& wfil, EAccessMode mode); 1928{; 1929 TString show;; 1930 if (gEnv->GetValue(""Root.ShowPath"", 0)); 1931 show.Form(""Which: %s ="", wfil.Data());; 1932 ; 1933 gSystem->ExpandPathName(wfil);; 1934 ; 1935 if (wfil[0] == '/') {; 1936#if defined(R__SEEK64); 1937 struct stat64 finfo;; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:58698,error,error,58698,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,"; 19577 uname(&name);; 19578 *sysName = mg_strdup(name.sysname);; 19579#endif; 19580}; 19581 ; 19582 ; 19583static void; 19584legacy_init(const char **options); 19585{; 19586 const char *ports_option = config_options[LISTENING_PORTS].default_value;; 19587 ; 19588 if (options) {; 19589 const char **run_options = options;; 19590 const char *optname = config_options[LISTENING_PORTS].name;; 19591 ; 19592 /* Try to find the ""listening_ports"" option */; 19593 while (*run_options) {; 19594 if (!strcmp(*run_options, optname)) {; 19595 ports_option = run_options[1];; 19596 }; 19597 run_options += 2;; 19598 }; 19599 }; 19600 ; 19601 if (is_ssl_port_used(ports_option)) {; 19602 /* Initialize with SSL support */; 19603 mg_init_library(MG_FEATURES_TLS);; 19604 } else {; 19605 /* Initialize without SSL support */; 19606 mg_init_library(MG_FEATURES_DEFAULT);; 19607 }; 19608}; 19609 ; 19610 ; 19611struct mg_context *; 19612mg_start2(struct mg_init_data *init, struct mg_error_data *error); 19613{; 19614 struct mg_context *ctx;; 19615 const char *name, *value, *default_value;; 19616 int idx, ok, workerthreadcount;; 19617 unsigned int i;; 19618 int itmp;; 19619 void (*exit_callback)(const struct mg_context *ctx) = 0;; 19620 const char **options =; 19621 ((init != NULL) ? (init->configuration_options) : (NULL));; 19622 ; 19623 struct mg_workerTLS tls;; 19624 ; 19625 if (error != NULL) {; 19626 error->code = 0;; 19627 if (error->text_buffer_size > 0) {; 19628 *error->text = 0;; 19629 }; 19630 }; 19631 ; 19632 if (mg_init_library_called == 0) {; 19633 /* Legacy INIT, if mg_start is called without mg_init_library.; 19634 * Note: This will cause a memory leak when unloading the library.; 19635 */; 19636 legacy_init(options);; 19637 }; 19638 if (mg_init_library_called == 0) {; 19639 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19640 mg_snprintf(NULL,; 19641 NULL, /* No truncation check for error buffers */; 19642 error->text,; 19643 error->text_buffer_size,; 19644 ""%s"",; 19645 ""L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:584489,error,error,584489,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,5,['error'],['error']
Availability,"; 19578 uname(&name);; 19579 *sysName = mg_strdup(name.sysname);; 19580#endif; 19581}; 19582 ; 19583 ; 19584static void; 19585legacy_init(const char **options); 19586{; 19587 const char *ports_option = config_options[LISTENING_PORTS].default_value;; 19588 ; 19589 if (options) {; 19590 const char **run_options = options;; 19591 const char *optname = config_options[LISTENING_PORTS].name;; 19592 ; 19593 /* Try to find the ""listening_ports"" option */; 19594 while (*run_options) {; 19595 if (!strcmp(*run_options, optname)) {; 19596 ports_option = run_options[1];; 19597 }; 19598 run_options += 2;; 19599 }; 19600 }; 19601 ; 19602 if (is_ssl_port_used(ports_option)) {; 19603 /* Initialize with SSL support */; 19604 mg_init_library(MG_FEATURES_TLS);; 19605 } else {; 19606 /* Initialize without SSL support */; 19607 mg_init_library(MG_FEATURES_DEFAULT);; 19608 }; 19609}; 19610 ; 19611 ; 19612struct mg_context *; 19613mg_start2(struct mg_init_data *init, struct mg_error_data *error); 19614{; 19615 struct mg_context *ctx;; 19616 const char *name, *value, *default_value;; 19617 int idx, ok, workerthreadcount;; 19618 unsigned int i;; 19619 int itmp;; 19620 void (*exit_callback)(const struct mg_context *ctx) = 0;; 19621 const char **options =; 19622 ((init != NULL) ? (init->configuration_options) : (NULL));; 19623 ; 19624 struct mg_workerTLS tls;; 19625 ; 19626 if (error != NULL) {; 19627 error->code = 0;; 19628 if (error->text_buffer_size > 0) {; 19629 *error->text = 0;; 19630 }; 19631 }; 19632 ; 19633 if (mg_init_library_called == 0) {; 19634 /* Legacy INIT, if mg_start is called without mg_init_library.; 19635 * Note: This will cause a memory leak when unloading the library.; 19636 */; 19637 legacy_init(options);; 19638 }; 19639 if (mg_init_library_called == 0) {; 19640 if ((error != NULL) && (error->text_buffer_size > 0)) {; 19641 mg_snprintf(NULL,; 19642 NULL, /* No truncation check for error buffers */; 19643 error->text,; 19644 error->text_buffer_size,; 19645 ""%s"",; 19646 ""L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:584522,error,error,584522,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,5,['error'],['error']
Availability,"; 1986 break;; 1987 }; 1988 }; 1989 }; 1990 ; 1991 if (found) {; 1992 delete pid;; 1993 pids->AddAtAndExpand(p,pidf);; 1994 p->IncrementCount();; 1995 return p;; 1996 }; 1997 ; 1998 pids->AddAtAndExpand(pid,pidf);; 1999 pid->IncrementCount();; 2000 ; 2001 {; 2002 R__WRITE_LOCKGUARD(ROOT::gCoreMutex);; 2003 pidslist->Add(pid);; 2004 Int_t ind = pidslist->IndexOf(pid);; 2005 pid->SetUniqueID((UInt_t)ind);; 2006 }; 2007 ; 2008 return pid;; 2009}; 2010 ; 2011 ; 2012////////////////////////////////////////////////////////////////////////////////; 2013/// Attempt to recover file if not correctly closed; 2014///; 2015/// The function returns the number of keys that have been recovered.; 2016/// If no keys can be recovered, the file will be declared Zombie by; 2017/// the calling function. This function is automatically called when; 2018/// opening a file.; 2019/// If the file is open in read only mode, the file is not modified.; 2020/// If open in update mode and the function finds something to recover,; 2021/// a new directory header is written to the file. When opening the file gain; 2022/// no message from Recover will be reported.; 2023/// If keys have been recovered, the file is usable and you can safely; 2024/// read the corresponding objects.; 2025/// If the file is not usable (a zombie), you can test for this case; 2026/// with code like:; 2027///; 2028/// ~~~{.cpp}; 2029/// TFile f(""myfile.root"");; 2030/// if (f.IsZombie()) {<actions to take if file is unusable>}; 2031/// ~~~; 2032///; 2033/// If the file has been recovered, the bit kRecovered is set in the TFile object in memory.; 2034/// You can test if the file has been recovered with; 2035///; 2036/// if (f.TestBit(TFile::kRecovered)) {... the file has been recovered}; 2037///; 2038/// When writing TTrees to a file, it is important to save the Tree header; 2039/// at regular intervals (see TTree::AutoSave). If a file containing a Tree; 2040/// is recovered, the last Tree header written to the file will be used.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:72095,recover,recover,72095,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['recover'],['recover']
Availability,"; 202 void Add( const double* x, double val, const double* ex, double eval );; 203 ; 204 /**; 205 add multi-dim coordinate data with both error in coordinates and value; 206 */; 207 void Add( const double* x, double val, const double* ex, double elval, double ehval );; 208 ; 209 /**; 210 add the bin width data, a pointer to an array with the bin upper edge information.; 211 This is needed when fitting with integral options; 212 The information is added for the previously inserted point.; 213 BinData::Add must be called before; 214 */; 215 void AddBinUpEdge( const double* xup );; 216 ; 217 /**; 218 return the value for the given fit point; 219 */; 220 double Value( unsigned int ipoint ) const; 221 {; 222 assert( ipoint < fMaxPoints );; 223 assert( fDataPtr );; 224 assert( fData.empty() || &fData.front() == fDataPtr );; 225 ; 226 return fDataPtr[ipoint];; 227 }; 228 ; 229 /**; 230 return a pointer to the value for the given fit point; 231 */; 232 const double *ValuePtr( unsigned int ipoint ) const; 233 {; 234 return &fDataPtr[ipoint];; 235 }; 236 ; 237 /**; 238 Return a pointer to the error (or the inverse error) on the value for a given point; 239 depending on the type of data.; 240 - If the data contains only value error (e.g. from histograms) returns a pointer to; 241 the inverse of the errors.; 242 - If the data contains errors in coordinates and value (e.g from TGraphErrors) returns a; 243 pointer to the corresponding value error (NOT the inverse).; 244 - If the data contains asymmetric errors return a pointer to the average error (NOT the inverse):; 245 0.5(eu + el).; 246 - If the data does not contain errors return a nullptr.; 247 */; 248 ; 249 const double * ErrorPtr(unsigned int ipoint) const{; 250 assert( ipoint < fMaxPoints );; 251 assert( kValueError == fErrorType || kCoordError == fErrorType ||; 252 kAsymError == fErrorType || kNoError == fErrorType );; 253 ; 254 if ( fErrorType == kNoError ); 255 return nullptr;; 256 return &fDataErrorPtr[ ipoint ];; 257 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:7885,error,error,7885,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,2,['error'],['error']
Availability,"; 20310 if (error != NULL) {; 20311 error->code = 0;; 20312 if (error->text_buffer_size > 0) {; 20313 *error->text = 0;; 20314 }; 20315 }; 20316 ; 20317 if ((ctx == NULL) || (options == NULL)) {; 20318 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20319 mg_snprintf(NULL,; 20320 NULL, /* No truncation check for error buffers */; 20321 error->text,; 20322 error->text_buffer_size,; 20323 ""%s"",; 20324 ""Invalid parameters"");; 20325 }; 20326 return -1;; 20327 }; 20328 ; 20329 if (!STOP_FLAG_IS_ZERO(&ctx->stop_flag)) {; 20330 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20331 mg_snprintf(NULL,; 20332 NULL, /* No truncation check for error buffers */; 20333 error->text,; 20334 error->text_buffer_size,; 20335 ""%s"",; 20336 ""Server already stopped"");; 20337 }; 20338 return -1;; 20339 }; 20340 ; 20341 new_dom = (struct mg_domain_context *); 20342 mg_calloc_ctx(1, sizeof(struct mg_domain_context), ctx);; 20343 ; 20344 if (!new_dom) {; 20345 /* Out of memory */; 20346 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20347 mg_snprintf(NULL,; 20348 NULL, /* No truncation check for error buffers */; 20349 error->text,; 20350 error->text_buffer_size,; 20351 ""%s"",; 20352 ""Out or memory"");; 20353 }; 20354 return -6;; 20355 }; 20356 ; 20357 /* Store options - TODO: unite duplicate code */; 20358 while (options && (name = *options++) != NULL) {; 20359 if ((idx = get_option_index(name)) == -1) {; 20360 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 20361 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20362 mg_snprintf(NULL,; 20363 NULL, /* No truncation check for error buffers */; 20364 error->text,; 20365 error->text_buffer_size,; 20366 ""Invalid option: %s"",; 20367 name);; 20368 }; 20369 mg_free(new_dom);; 20370 return -2;; 20371 } else if ((value = *options++) == NULL) {; 20372 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 20373 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20374 mg_snprintf(NULL,; 20375 N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:608113,error,error,608113,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 20311 if (error != NULL) {; 20312 error->code = 0;; 20313 if (error->text_buffer_size > 0) {; 20314 *error->text = 0;; 20315 }; 20316 }; 20317 ; 20318 if ((ctx == NULL) || (options == NULL)) {; 20319 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20320 mg_snprintf(NULL,; 20321 NULL, /* No truncation check for error buffers */; 20322 error->text,; 20323 error->text_buffer_size,; 20324 ""%s"",; 20325 ""Invalid parameters"");; 20326 }; 20327 return -1;; 20328 }; 20329 ; 20330 if (!STOP_FLAG_IS_ZERO(&ctx->stop_flag)) {; 20331 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20332 mg_snprintf(NULL,; 20333 NULL, /* No truncation check for error buffers */; 20334 error->text,; 20335 error->text_buffer_size,; 20336 ""%s"",; 20337 ""Server already stopped"");; 20338 }; 20339 return -1;; 20340 }; 20341 ; 20342 new_dom = (struct mg_domain_context *); 20343 mg_calloc_ctx(1, sizeof(struct mg_domain_context), ctx);; 20344 ; 20345 if (!new_dom) {; 20346 /* Out of memory */; 20347 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20348 mg_snprintf(NULL,; 20349 NULL, /* No truncation check for error buffers */; 20350 error->text,; 20351 error->text_buffer_size,; 20352 ""%s"",; 20353 ""Out or memory"");; 20354 }; 20355 return -6;; 20356 }; 20357 ; 20358 /* Store options - TODO: unite duplicate code */; 20359 while (options && (name = *options++) != NULL) {; 20360 if ((idx = get_option_index(name)) == -1) {; 20361 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 20362 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20363 mg_snprintf(NULL,; 20364 NULL, /* No truncation check for error buffers */; 20365 error->text,; 20366 error->text_buffer_size,; 20367 ""Invalid option: %s"",; 20368 name);; 20369 }; 20370 mg_free(new_dom);; 20371 return -2;; 20372 } else if ((value = *options++) == NULL) {; 20373 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 20374 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20375 mg_snprintf(NULL,; 20376 N",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:608146,error,error,608146,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 210 TString fStdErrTty; // tty associated with stderr, if any (e.g. from ttyname(...)); 211 Int_t fStdOutDup{-1}; // Duplicated descriptor for stdout; 212 Int_t fStdErrDup{-1}; // Duplicated descriptor for stderr; 213 Int_t fReadOffSet{-1}; // Offset where to start reading the file (used by ShowOutput(...)); 214 RedirectHandle_t(const char *n = nullptr) : fFile(n) { }; 215 void Reset() { fFile = """"; fStdOutTty = """"; fStdErrTty = """";; 216 fStdOutDup = -1; fStdErrDup = -1; fReadOffSet = -1; }; 217};; 218 ; 219enum ESockOptions {; 220 kSendBuffer, // size of send buffer; 221 kRecvBuffer, // size of receive buffer; 222 kOobInline, // OOB message inline; 223 kKeepAlive, // keep socket alive; 224 kReuseAddr, // allow reuse of local portion of address 5-tuple; 225 kNoDelay, // send without delay; 226 kNoBlock, // non-blocking I/O; 227 kProcessGroup, // socket process group (used for SIGURG and SIGIO); 228 kAtMark, // are we at out-of-band mark (read only); 229 kBytesToRead // get number of bytes to read, FIONREAD (read only); 230};; 231 ; 232enum ESendRecvOptions {; 233 kDefault, // default option (= 0); 234 kOob, // send or receive out-of-band data; 235 kPeek, // peek at incoming message (receive only); 236 kDontBlock // send/recv as much data as possible without blocking; 237};; 238 ; 239typedef void (*Func_t)();; 240 ; 241R__EXTERN const char *gRootDir;; 242R__EXTERN const char *gProgName;; 243R__EXTERN const char *gProgPath;; 244R__EXTERN TVirtualMutex *gSystemMutex;; 245 ; 246 ; 247//////////////////////////////////////////////////////////////////////////; 248// //; 249// Asynchronous timer used for processing pending GUI and timer events //; 250// every delay ms. Call in a tight computing loop //; 251// TProcessEventTimer::ProcessEvent(). If the timer did timeout this //; 252// call will process the pending events and return kTRUE if the //; 253// TROOT::IsInterrupted() flag is set (can be done by hitting key in //; 254// canvas or selecting canvas menu item View/I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:8240,alive,alive,8240,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['alive'],['alive']
Availability,"; 21{; 22 TCanvas *myc = new TCanvas(""myc"",; 23 ""Confidence intervals on the fitted function"",1000, 500);; 24 myc->Divide(3,1);; 25 ; 26//### 1. A graph; 27 //Create and fill a graph; 28 int ngr = 100;; 29 TGraph *gr = new TGraph(ngr);; 30 gr->SetName(""GraphNoError"");; 31 double x, y;; 32 int i;; 33 for (i=0; i<ngr; i++){; 34 x = gRandom->Uniform(-1, 1);; 35 y = -1 + 2*x + gRandom->Gaus(0, 1);; 36 gr->SetPoint(i, x, y);; 37 }; 38 //Create the fitting function; 39 TF1 *fpol = new TF1(""fpol"", ""pol1"", -1, 1);; 40 fpol->SetLineWidth(2);; 41 gr->Fit(fpol, ""Q"");; 42 ; 43 /*Create a TGraphErrors to hold the confidence intervals*/; 44 TGraphErrors *grint = new TGraphErrors(ngr);; 45 grint->SetTitle(""Fitted line with .95 conf. band"");; 46 for (i=0; i<ngr; i++); 47 grint->SetPoint(i, gr->GetX()[i], 0);; 48 /*Compute the confidence intervals at the x points of the created graph*/; 49 (TVirtualFitter::GetFitter())->GetConfidenceIntervals(grint);; 50 //Now the ""grint"" graph contains function values as its y-coordinates; 51 //and confidence intervals as the errors on these coordinates; 52 //Draw the graph, the function and the confidence intervals; 53 myc->cd(1);; 54 grint->SetLineColor(kRed);; 55 grint->Draw(""ap"");; 56 gr->SetMarkerStyle(5);; 57 gr->SetMarkerSize(0.7);; 58 gr->Draw(""psame"");; 59 ; 60//### 2. A histogram; 61 myc->cd(2);; 62 //Create, fill and fit a histogram; 63 int nh=5000;; 64 TH1D *h = new TH1D(""h"",; 65 ""Fitted Gaussian with .95 conf.band"", 100, -3, 3);; 66 h->FillRandom(""gaus"", nh);; 67 TF1 *f = new TF1(""fgaus"", ""gaus"", -3, 3);; 68 f->SetLineWidth(2);; 69 h->Fit(f, ""Q"");; 70 h->Draw();; 71 ; 72 /*Create a histogram to hold the confidence intervals*/; 73 TH1D *hint = new TH1D(""hint"",; 74 ""Fitted Gaussian with .95 conf.band"", 100, -3, 3);; 75 (TVirtualFitter::GetFitter())->GetConfidenceIntervals(hint);; 76 //Now the ""hint"" histogram has the fitted function values as the; 77 //bin contents and the confidence intervals as bin errors; 78 hint->SetStats(false);; 79",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ConfidenceIntervals_8C_source.html:1735,error,errors,1735,doc/master/ConfidenceIntervals_8C_source.html,https://root.cern,https://root.cern/doc/master/ConfidenceIntervals_8C_source.html,1,['error'],['errors']
Availability,"; 2238 // Fill the projected histogram excluding underflow/overflows if considered in the option; 2239 // if specified in the option (by default they considered); 2240 Double_t totcont = 0;; 2241 ; 2242 Int_t outmin = out->GetFirst();; 2243 Int_t outmax = out->GetLast();; 2244 // GetFirst(), GetLast() can return (0,0) when the range bit is set artificially (see TAxis::SetRange); 2245 if (outmin == 0 && outmax == 0) { outmin = 1; outmax = out->GetNbins(); }; 2246 // correct for underflow/overflows; 2247 if (useUF && !out->TestBit(TAxis::kAxisRange) ) outmin -= 1;; 2248 if (useOF && !out->TestBit(TAxis::kAxisRange) ) outmax += 1;; 2249 ; 2250 for (ixbin=0;ixbin<=1+projX->GetNbins();ixbin++) {; 2251 if ( projX->TestBit(TAxis::kAxisRange) && ( ixbin < ixmin || ixbin > ixmax )) continue;; 2252 Int_t ix = h2->GetYaxis()->FindBin( projX->GetBinCenter(ixbin) );; 2253 ; 2254 for (iybin=0;iybin<=1+projY->GetNbins();iybin++) {; 2255 if ( projY->TestBit(TAxis::kAxisRange) && ( iybin < iymin || iybin > iymax )) continue;; 2256 Int_t iy = h2->GetXaxis()->FindBin( projY->GetBinCenter(iybin) );; 2257 ; 2258 Double_t cont = 0;; 2259 Double_t err2 = 0;; 2260 ; 2261 // loop on the bins to be integrated (outbin should be called inbin); 2262 for (outbin = outmin; outbin <= outmax; outbin++) {; 2263 ; 2264 Int_t bin = GetBin(*refX,*refY,*refZ);; 2265 ; 2266 // sum the bin contents and errors if needed; 2267 cont += RetrieveBinContent(bin);; 2268 if (computeErrors) {; 2269 Double_t exyz = GetBinError(bin);; 2270 err2 += exyz*exyz;; 2271 }; 2272 ; 2273 }; 2274 ; 2275 // remember axis are inverted; 2276 h2->SetBinContent(iy , ix, cont);; 2277 if (computeErrors) h2->SetBinError(iy, ix, TMath::Sqrt(err2) );; 2278 // sum all content; 2279 totcont += cont;; 2280 ; 2281 }; 2282 }; 2283 ; 2284 // since we use fill we need to reset and recalculate the statistics (see comment in DoProject1D ); 2285 // or keep original statistics if consistent sumw2; 2286 bool resetStats = true;; 2287 double eps = 1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:89943,error,errors,89943,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['error'],['errors']
Availability,"; 2239/// Print the header information of each tree in the chain.; 2240/// See TTree::Print for a list of options.; 2241 ; 2242void TChain::Print(Option_t *option) const; 2243{; 2244 TIter next(fFiles);; 2245 TChainElement *element;; 2246 while ((element = (TChainElement*)next())) {; 2247 Printf(""******************************************************************************"");; 2248 Printf(""*Chain :%-10s: %-54s *"", GetName(), element->GetTitle());; 2249 Printf(""******************************************************************************"");; 2250 TFile *file = TFile::Open(element->GetTitle());; 2251 if (file && !file->IsZombie()) {; 2252 TTree *tree = (TTree*)file->Get(element->GetName());; 2253 if (tree) tree->Print(option);; 2254 }; 2255 delete file;; 2256 }; 2257}; 2258 ; 2259////////////////////////////////////////////////////////////////////////////////; 2260/// Process all entries in this chain, calling functions in filename.; 2261/// The return value is -1 in case of error and TSelector::GetStatus() in; 2262/// in case of success.; 2263/// See TTree::Process.; 2264 ; 2265Long64_t TChain::Process(const char *filename, Option_t *option, Long64_t nentries, Long64_t firstentry); 2266{; 2267 if (fProofChain) {; 2268 // Make sure the element list is up to date; 2269 if (!TestBit(kProofUptodate)); 2270 SetProof(true, true);; 2271 fProofChain->SetEventList(fEventList);; 2272 fProofChain->SetEntryList(fEntryList);; 2273 return fProofChain->Process(filename, option, nentries, firstentry);; 2274 }; 2275 ; 2276 if (LoadTree(firstentry) < 0) {; 2277 return 0;; 2278 }; 2279 return TTree::Process(filename, option, nentries, firstentry);; 2280}; 2281 ; 2282////////////////////////////////////////////////////////////////////////////////; 2283/// Process this chain executing the code in selector.; 2284/// The return value is -1 in case of error and TSelector::GetStatus() in; 2285/// in case of success.; 2286 ; 2287Long64_t TChain::Process(TSelector* selector, Option_t* option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:81825,error,error,81825,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['error'],['error']
Availability,"; 226 virtual void UpdateListOfMethods(TClass *cl) const = 0;; 227 virtual TString GetMangledName(TClass *cl, const char *method, const char *params, Bool_t objectIsConst = kFALSE) = 0;; 228 virtual TString GetMangledNameWithPrototype(TClass *cl, const char *method, const char *proto, Bool_t objectIsConst = kFALSE, ROOT::EFunctionMatchMode /* mode */ = ROOT::kConversionMatch) = 0;; 229 virtual void GetInterpreterTypeName(const char *name, std::string &output, Bool_t full = kFALSE) = 0;; 230 virtual void *GetInterfaceMethod(TClass *cl, const char *method, const char *params, Bool_t objectIsConst = kFALSE) = 0;; 231 virtual void *GetInterfaceMethodWithPrototype(TClass *cl, const char *method, const char *proto, Bool_t objectIsConst = kFALSE, ROOT::EFunctionMatchMode /* mode */ = ROOT::kConversionMatch) = 0;; 232 void Execute(const char *function, const char *params, int *error = nullptr) override = 0;; 233 virtual void Execute(TObject *obj, TClass *cl, const char *method, const char *params, int *error = nullptr) = 0;; 234 virtual void Execute(TObject *obj, TClass *cl, TMethod *method, TObjArray *params, int *error = nullptr) = 0;; 235 virtual void ExecuteWithArgsAndReturn(TMethod *method, void* address, const void* args[] = nullptr, int /*nargs*/ = 0, void *ret= nullptr) const = 0;; 236 virtual Longptr_t ExecuteMacro(const char *filename, EErrorCode *error = nullptr) = 0;; 237 virtual Bool_t IsErrorMessagesEnabled() const = 0;; 238 virtual Bool_t SetErrorMessages(Bool_t enable = kTRUE) = 0;; 239 virtual Bool_t IsProcessLineLocked() const = 0;; 240 virtual void SetProcessLineLock(Bool_t lock = kTRUE) = 0;; 241 virtual const char *TypeName(const char *s) = 0;; 242 virtual std::string ToString(const char *type, void *obj) = 0;; 243 ; 244 virtual void SnapshotMutexState(ROOT::TVirtualRWMutex* mtx) = 0;; 245 virtual void ForgetMutexState() = 0;; 246 ; 247 // All the functions below must be virtual with a dummy implementation; 248 // These functions are redefined in TCling.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:10186,error,error,10186,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,3,['error'],['error']
Availability,"; 2260/// Process all entries in this chain, calling functions in filename.; 2261/// The return value is -1 in case of error and TSelector::GetStatus() in; 2262/// in case of success.; 2263/// See TTree::Process.; 2264 ; 2265Long64_t TChain::Process(const char *filename, Option_t *option, Long64_t nentries, Long64_t firstentry); 2266{; 2267 if (fProofChain) {; 2268 // Make sure the element list is up to date; 2269 if (!TestBit(kProofUptodate)); 2270 SetProof(true, true);; 2271 fProofChain->SetEventList(fEventList);; 2272 fProofChain->SetEntryList(fEntryList);; 2273 return fProofChain->Process(filename, option, nentries, firstentry);; 2274 }; 2275 ; 2276 if (LoadTree(firstentry) < 0) {; 2277 return 0;; 2278 }; 2279 return TTree::Process(filename, option, nentries, firstentry);; 2280}; 2281 ; 2282////////////////////////////////////////////////////////////////////////////////; 2283/// Process this chain executing the code in selector.; 2284/// The return value is -1 in case of error and TSelector::GetStatus() in; 2285/// in case of success.; 2286 ; 2287Long64_t TChain::Process(TSelector* selector, Option_t* option, Long64_t nentries, Long64_t firstentry); 2288{; 2289 if (fProofChain) {; 2290 // Make sure the element list is up to date; 2291 if (!TestBit(kProofUptodate)); 2292 SetProof(true, true);; 2293 fProofChain->SetEventList(fEventList);; 2294 fProofChain->SetEntryList(fEntryList);; 2295 return fProofChain->Process(selector, option, nentries, firstentry);; 2296 }; 2297 ; 2298 return TTree::Process(selector, option, nentries, firstentry);; 2299}; 2300 ; 2301////////////////////////////////////////////////////////////////////////////////; 2302/// Make sure that obj (which is being deleted or will soon be) is no; 2303/// longer referenced by this TTree.; 2304 ; 2305void TChain::RecursiveRemove(TObject *obj); 2306{; 2307 if (fFile == obj) {; 2308 fFile = nullptr;; 2309 fDirectory = nullptr;; 2310 fTree = nullptr;; 2311 }; 2312 if (fDirectory == obj) {; 2313 fDirectory",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TChain_8cxx_source.html:82696,error,error,82696,doc/master/TChain_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TChain_8cxx_source.html,1,['error'],['error']
Availability,"; 233 if (!fCachedDescriptor || fCachedDescriptor->GetGeneration() != descriptorGuard->GetGeneration()); 234 fCachedDescriptor = descriptorGuard->Clone();; 235 return *fCachedDescriptor;; 236}; 237 ; 238ROOT::Experimental::DescriptorId_t ROOT::Experimental::RNTupleReader::RetrieveFieldId(std::string_view fieldName) const; 239{; 240 auto fieldId = fSource->GetSharedDescriptorGuard()->FindFieldId(fieldName);; 241 if (fieldId == kInvalidDescriptorId) {; 242 throw RException(R__FAIL(""no field named '"" + std::string(fieldName) + ""' in RNTuple '"" +; 243 fSource->GetSharedDescriptorGuard()->GetName() + ""'""));; 244 }; 245 return fieldId;; 246}; R__FAIL#define R__FAIL(msg)Short-hand to return an RResult<T> in an error state; the RError is implicitly converted into RResult...Definition RError.hxx:290; RFieldVisitor.hxx; RField.hxx; RNTupleImtTaskScheduler.hxx; RNTupleModel.hxx; RNTupleReader.hxx; RNTuple.hxx; RPageSourceFriends.hxx; RPageStorageFile.hxx; R__ASSERT#define R__ASSERT(e)Checks condition e and reports a fatal error if it's false.Definition TError.h:125; indexOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t indexDefinition TGWin32VirtualXProxy.cxx:168; widthOption_t Option_t widthDefinition TGWin32VirtualXProxy.cxx:56; namechar name[80]Definition TGX11.cxx:110; TROOT.h; ROOT::Experimental::Internal::RPageSourceFile::CreateFromAnchorstatic std::unique_ptr< RPageSourceFile > CreateFromAnchor(const RNTuple &anchor, const RNTupleReadOptions &options=RNTupleReadOptions())Used from the RNTuple class to build a datasource if the anchor is already available.Definition RPageStorageFile.cxx:283; ROOT::Experimental::Internal::RPageSource::Createstatic std::unique_ptr< RPageSource > Create(std::string_view ntupleName, std::string_view location, const RNTupleReadOptions &options=RNTupleReadOptions())Guess the concrete derived pag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleReader_8cxx_source.html:10550,error,error,10550,doc/master/RNTupleReader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleReader_8cxx_source.html,1,['error'],['error']
Availability,"; 236 constructor) for the lifetime of this object.; 237 Example:; 238~~~ {.cpp}; 239 RLogScopedVerbosity debugThis(gFooLog, ELogLevel::kDebug);; 240 Foo::SomethingToDebug();; 241~~~; 242 */; 243class RLogScopedVerbosity {; 244 RLogChannel *fChannel;; 245 ELogLevel fPrevLevel;; 246 ; 247public:; 248 RLogScopedVerbosity(RLogChannel &channel, ELogLevel verbosity); 249 : fChannel(&channel), fPrevLevel(channel.SetVerbosity(verbosity)); 250 {; 251 }; 252 explicit RLogScopedVerbosity(ELogLevel verbosity) : RLogScopedVerbosity(RLogManager::Get(), verbosity) {}; 253 ~RLogScopedVerbosity() { fChannel->SetVerbosity(fPrevLevel); }; 254};; 255 ; 256/**; 257 Object to count the number of warnings and errors emitted by a section of code,; 258 after construction of this type.; 259 */; 260class RLogScopedDiagCount {; 261 RLogDiagCount *fCounter = nullptr;; 262 /// The number of the RLogDiagCount's emitted warnings at construction time of *this.; 263 long long fInitialWarnings = 0;; 264 /// The number of the RLogDiagCount's emitted errors at construction time.; 265 long long fInitialErrors = 0;; 266 /// The number of the RLogDiagCount's emitted fatal errors at construction time.; 267 long long fInitialFatalErrors = 0;; 268 ; 269public:; 270 /// Construct the scoped count given a counter (e.g. a channel or RLogManager).; 271 /// The counter's lifetime must exceed the lifetime of this object!; 272 explicit RLogScopedDiagCount(RLogDiagCount &cnt); 273 : fCounter(&cnt), fInitialWarnings(cnt.GetNumWarnings()), fInitialErrors(cnt.GetNumErrors()),; 274 fInitialFatalErrors(cnt.GetNumFatalErrors()); 275 {; 276 }; 277 ; 278 /// Construct the scoped count for any diagnostic, whatever its channel.; 279 RLogScopedDiagCount() : RLogScopedDiagCount(RLogManager::Get()) {}; 280 ; 281 /// Get the number of warnings that the RLogDiagCount has emitted since construction of *this.; 282 long long GetAccumulatedWarnings() const { return fCounter->GetNumWarnings() - fInitialWarnings; }; 283 ; 284 /// Get th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx_source.html:9364,error,errors,9364,doc/master/RLogger_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx_source.html,1,['error'],['errors']
Availability,"; 236RETURN_METHOD_ARG3(VirtualX,Pixmap_t,CreatePixmap,Drawable_t,wid,UInt_t,w,UInt_t,h); 237RETURN_METHOD_ARG1(VirtualX,ULong_t,GetPixel,Color_t,cindex); 238RETURN_METHOD_ARG5(VirtualX,unsigned char*,GetColorBits,Drawable_t,wid,Int_t,x,Int_t,y,UInt_t,width,UInt_t,height); 239RETURN_METHOD_ARG3(VirtualX,Pixmap_t,CreatePixmapFromData,unsigned char*,bits,UInt_t,width,UInt_t,height); 240RETURN_METHOD_ARG3(VirtualX,Int_t,AddWindow,ULongptr_t,qwid,UInt_t,w,UInt_t,h); 241VOID_METHOD_ARG1(VirtualX,RemoveWindow,ULongptr_t,qwid,1); 242VOID_METHOD_ARG4(VirtualX,ShapeCombineMask,Window_t,id,Int_t,x,Int_t,y,Pixmap_t,mask,1); 243 ; 244VOID_METHOD_ARG2(VirtualX,DeleteProperty,Window_t,win,Atom_t&,prop,1); 245RETURN_METHOD_ARG11(VirtualX,Int_t,GetProperty,Window_t,win,Atom_t,prop,Long_t,offset,Long_t,length,Bool_t,del,Atom_t,req_type,Atom_t*,act_type,Int_t*,act_format,ULong_t*,nitems,ULong_t*,bytes,unsigned char**,prop_list); 246VOID_METHOD_ARG3(VirtualX,ChangeActivePointerGrab,Window_t,win,UInt_t,mask,Cursor_t,cur,1); 247VOID_METHOD_ARG5(VirtualX,ConvertSelection,Window_t,win,Atom_t&,sel,Atom_t&,target,Atom_t&,prop,Time_t&,stamp,1); 248RETURN_METHOD_ARG2(VirtualX,Bool_t,SetSelectionOwner,Window_t,win,Atom_t&,prop); 249VOID_METHOD_ARG6(VirtualX,ChangeProperties,Window_t,id,Atom_t,property,Atom_t,type,Int_t,format,UChar_t*,data,Int_t,len,1); 250VOID_METHOD_ARG2(VirtualX,SetDNDAware,Window_t,id,Atom_t*,typelist,1); 251VOID_METHOD_ARG3(VirtualX,SetTypeList,Window_t,win,Atom_t,prop,Atom_t*,typelist,1);; 252RETURN_METHOD_ARG6(VirtualX,Window_t,FindRWindow,Window_t,win,Window_t,dragwin,Window_t,input,int,x,int,y,int,maxd);; 253RETURN_METHOD_ARG2(VirtualX,Bool_t,IsDNDAware,Window_t,win,Atom_t*,typelist);; 254 ; 255//VOID_METHOD_ARG1(VirtualX,CreateOpenGLContext,Int_t,wid,1); 256//VOID_METHOD_ARG1(VirtualX,DeleteOpenGLContext,Int_t,wid,1); 257//VOID_METHOD_ARG1(VirtualX,RemoveWindow,ULongptr_t,qwid,1); 258//RETURN_METHOD_ARG1(VirtualX,ExecCommand,UInt_t,TGWin32Command*,code); 259//RETURN_M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx_source.html:17672,mask,mask,17672,doc/master/TGWin32VirtualXProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGWin32VirtualXProxy_8cxx_source.html,1,['mask'],['mask']
Availability,"; 2483/// graph->Sort(&CompareErrors, kFALSE);; 2484/// ~~~; 2485 ; 2486void TGraph::Sort(Bool_t (*greaterfunc)(const TGraph *, Int_t, Int_t) /*=TGraph::CompareX()*/,; 2487 Bool_t ascending /*=kTRUE*/, Int_t low /*=0*/, Int_t high /*=-1111*/); 2488{; 2489 // set the bit in case of an ascending =sort in X; 2490 if (greaterfunc == TGraph::CompareX && ascending && low == 0 && high == -1111); 2491 SetBit(TGraph::kIsSortedX);; 2492 ; 2493 if (high == -1111); 2494 high = fNpoints - 1;; 2495 ; 2496 // Create a vector to store the indices of the graph data points.; 2497 // We use std::vector<Int_t> instead of std::vector<ULong64_t> to match the input type; 2498 // required by the comparison operator's signature provided as `greaterfunc`; 2499 std::vector<Int_t> sorting_indices(fNpoints);; 2500 std::iota(sorting_indices.begin(), sorting_indices.end(), 0);; 2501 ; 2502 // Sort the indices using the provided comparison function; 2503 // We use std::stable_sort here because the libc++ implementation of std::sort; 2504 // is not standard-compliant until LLVM 14 which caused errors on the mac nodes; 2505 // of our CI, related issue: https://github.com/llvm/llvm-project/issues/21211; 2506 std::stable_sort(sorting_indices.begin() + low, sorting_indices.begin() + high + 1,; 2507 [&](const auto &left, const auto &right) { return greaterfunc(this, left, right) != ascending; });; 2508 ; 2509 Int_t numSortedPoints = high - low + 1;; 2510 UpdateArrays(sorting_indices, numSortedPoints, low);; 2511}; 2512 ; 2513////////////////////////////////////////////////////////////////////////////////; 2514/// Stream an object of class TGraph.; 2515 ; 2516void TGraph::Streamer(TBuffer &b); 2517{; 2518 if (b.IsReading()) {; 2519 UInt_t R__s, R__c;; 2520 Version_t R__v = b.ReadVersion(&R__s, &R__c);; 2521 if (R__v > 2) {; 2522 b.ReadClassBuffer(TGraph::Class(), this, R__v, R__s, R__c);; 2523 if (fHistogram) fHistogram->SetDirectory(nullptr);; 2524 TIter next(fFunctions);; 2525 TObject *obj;; 2526 while",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph_8cxx_source.html:89800,error,errors,89800,doc/master/TGraph_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph_8cxx_source.html,1,['error'],['errors']
Availability,"; 2486 return prob;; 2487 }; 2488 return 0;; 2489}; 2490////////////////////////////////////////////////////////////////////////////////; 2491/// Compute and return the chisquare of this histogram with respect to a function; 2492/// The chisquare is computed by weighting each histogram point by the bin error; 2493/// By default the full range of the histogram is used.; 2494/// Use option ""R"" for restricting the chisquare calculation to the given range of the function; 2495/// Use option ""L"" for using the chisquare based on the poisson likelihood (Baker-Cousins Chisquare); 2496/// Use option ""P"" for using the Pearson chisquare based on the expected bin errors; 2497 ; 2498Double_t TH1::Chisquare(TF1 * func, Option_t *option) const; 2499{; 2500 if (!func) {; 2501 Error(""Chisquare"",""Function pointer is Null - return -1"");; 2502 return -1;; 2503 }; 2504 ; 2505 TString opt(option); opt.ToUpper();; 2506 bool useRange = opt.Contains(""R"");; 2507 ROOT::Fit::EChisquareType type = ROOT::Fit::EChisquareType::kNeyman; // default chi2 with observed error; 2508 if (opt.Contains(""L"")) type = ROOT::Fit::EChisquareType::kPLikeRatio;; 2509 else if (opt.Contains(""P"")) type = ROOT::Fit::EChisquareType::kPearson;; 2510 ; 2511 return ROOT::Fit::Chisquare(*this, *func, useRange, type);; 2512}; 2513 ; 2514////////////////////////////////////////////////////////////////////////////////; 2515/// Remove all the content from the underflow and overflow bins, without changing the number of entries; 2516/// After calling this method, every undeflow and overflow bins will have content 0.0; 2517/// The Sumw2 is also cleared, since there is no more content in the bins; 2518 ; 2519void TH1::ClearUnderflowAndOverflow(); 2520{; 2521 for (Int_t bin = 0; bin < fNcells; ++bin); 2522 if (IsBinUnderflow(bin) || IsBinOverflow(bin)) {; 2523 UpdateBinContent(bin, 0.0);; 2524 if (fSumw2.fN) fSumw2.fArray[bin] = 0.0;; 2525 }; 2526}; 2527 ; 2528///////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:99403,error,error,99403,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability,"; 2498{; 2499 // Assign the char* value to the TString and then delete it.; 2500 ; 2501 target = tobedeleted;; 2502 delete [] tobedeleted;; 2503}; 2504 ; 2505#ifdef WIN32; 2506 ; 2507static TString R__Exec(const char *cmd); 2508{; 2509 // Execute a command and return the stdout in a string.; 2510 ; 2511 FILE * f = gSystem->OpenPipe(cmd,""r"");; 2512 if (!f) {; 2513 return """";; 2514 }; 2515 TString result;; 2516 ; 2517 char x;; 2518 while ((x = fgetc(f))!=EOF ) {; 2519 if (x=='\n' || x=='\r') break;; 2520 result += x;; 2521 }; 2522 ; 2523 fclose(f);; 2524 return result;; 2525}; 2526 ; 2527static void R__FixLink(TString &cmd); 2528{; 2529 // Replace the call to 'link' by a full path name call based on where cl.exe is.; 2530 // This prevents us from using inadvertently the link.exe provided by cygwin.; 2531 ; 2532 // check if link is the microsoft one...; 2533 TString res = R__Exec(""link 2>&1"");; 2534 if (res.Length()) {; 2535 if (res.Contains(""Microsoft (R) Incremental Linker"")); 2536 return;; 2537 }; 2538 // else check availability of cygpath...; 2539 res = R__Exec(""cygpath . 2>&1"");; 2540 if (res.Length()) {; 2541 if (res != "".""); 2542 return;; 2543 }; 2544 ; 2545 res = R__Exec(""which cl.exe 2>&1|grep cl|sed 's,cl\\.exe$,link\\.exe,' 2>&1"");; 2546 if (res.Length()) {; 2547 res = R__Exec(Form(""cygpath -w '%s' 2>&1"",res.Data()));; 2548 if (res.Length()) {; 2549 cmd.ReplaceAll("" link "",Form("" \""%s\"" "",res.Data()));; 2550 }; 2551 }; 2552}; 2553#endif; 2554 ; 2555#if defined(__CYGWIN__); 2556static void R__AddPath(TString &target, const TString &path) {; 2557 if (path.Length() > 2 && path[1]==':') {; 2558 target += TString::Format(""/cygdrive/%c"",path[0]) + path(2,path.Length()-2);; 2559 } else {; 2560 target += path;; 2561 }; 2562}; 2563#else; 2564static void R__AddPath(TString &target, const TString &path) {; 2565 target += path;; 2566}; 2567#endif; 2568 ; 2569static void R__WriteDependencyFile(const TString & build_loc, const TString &depfilename, const TString &filename",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:81659,avail,availability,81659,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['avail'],['availability']
Availability,"; 2570 pp[0] = prob;; 2571 ; 2572 TH1D * slice = nullptr;; 2573 for (int ibin = outAxis->GetFirst() ; ibin <= outAxis->GetLast() ; ++ibin) {; 2574 Double_t qq[1];; 2575 // do a projection on the opposite axis; 2576 slice = DoProjection(!onX, ""tmp"",ibin,ibin,"""");; 2577 if (!slice) break;; 2578 if (slice->GetSum() == 0) continue;; 2579 slice->GetQuantiles(1,qq,pp);; 2580 h1->SetBinContent(ibin,qq[0]);; 2581 // compute error using normal approximation; 2582 // quantile error ~ sqrt (q*(1-q)/ *( n * f(xq)^2 ) from Kendall; 2583 // where f(xq) is the p.d.f value at the quantile xq; 2584 Double_t n = slice->GetEffectiveEntries();; 2585 Double_t f = TMath::Gaus(qq[0], slice->GetMean(), slice->GetStdDev(), kTRUE);; 2586 Double_t error = 0;; 2587 // set the errors to zero in case of small statistics; 2588 if (f > 0 && n > 1); 2589 error = TMath::Sqrt( prob*(1.-prob)/ (n * f * f) );; 2590 h1->SetBinError(ibin, error);; 2591 }; 2592 if (slice) delete slice;; 2593 return h1;; 2594}; 2595 ; 2596 ; 2597////////////////////////////////////////////////////////////////////////////////; 2598/// Reset this histogram: contents, errors, etc.; 2599 ; 2600void TH2::Reset(Option_t *option); 2601{; 2602 TH1::Reset(option);; 2603 TString opt = option;; 2604 opt.ToUpper();; 2605 ; 2606 if (opt.Contains(""ICE"") && !opt.Contains(""S"")) return;; 2607 fTsumwy = 0;; 2608 fTsumwy2 = 0;; 2609 fTsumwxy = 0;; 2610}; 2611 ; 2612 ; 2613////////////////////////////////////////////////////////////////////////////////; 2614/// Set bin content; 2615 ; 2616void TH2::SetBinContent(Int_t bin, Double_t content); 2617{; 2618 fEntries++;; 2619 fTsumw = 0;; 2620 if (bin < 0) return;; 2621 if (bin >= fNcells) return;; 2622 UpdateBinContent(bin, content);; 2623}; 2624 ; 2625 ; 2626////////////////////////////////////////////////////////////////////////////////; 2627/// When the mouse is moved in a pad containing a 2-d view of this histogram; 2628/// a second canvas shows the projection along X corresponding to the; 262",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:106346,error,error,106346,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,"; 2605 }; 2606 } else {; 2607 builddep += "" \""-p"";; 2608 R__AddPath(builddep, build_loc);; 2609 builddep += ""/\"" "";; 2610 }; 2611 builddep += "" -Y -- "";; 2612 TString rootsysInclude = TROOT::GetIncludeDir();; 2613 builddep += "" \""-I""+rootsysInclude+""\"" ""; // cflags; 2614 builddep += includes;; 2615 builddep += defines;; 2616 builddep += "" -- \"""";; 2617 builddep += filename;; 2618 builddep += ""\"" "";; 2619 TString targetname;; 2620 if (library.BeginsWith(gSystem->WorkingDirectory())) {; 2621 Int_t len = strlen(gSystem->WorkingDirectory());; 2622 if ( library.Length() > (len+1) ) {; 2623 if (library[len] == '/' || library[len+1] != '\\' ) {; 2624 targetname = library.Data() + len + 1;; 2625 } else {; 2626 targetname = library.Data() + len + 2;; 2627 }; 2628 } else {; 2629 targetname = library;; 2630 }; 2631 } else {; 2632 targetname = library;; 2633 }; 2634 builddep += "" \"""";; 2635 builddep += ""-t"";; 2636 R__AddPath(builddep, targetname);; 2637 builddep += ""\"" > "";; 2638 builddep += stderrfile;; 2639 builddep += "" 2>&1 "";; 2640 ; 2641 TString adddictdep = ""echo "";; 2642 R__AddPath(adddictdep,targetname);; 2643 adddictdep += "": "";; 2644#if defined(R__HAS_CLING_DICTVERSION); 2645 {; 2646 char *clingdictversion = gSystem->Which(incPath,""clingdictversion.h"");; 2647 if (clingdictversion) {; 2648 R__AddPath(adddictdep,clingdictversion);; 2649 adddictdep += "" "";; 2650 delete [] clingdictversion;; 2651 } else {; 2652 R__AddPath(adddictdep,rootsysInclude+""/clingdictversion.h "");; 2653 }; 2654 }; 2655#endif; 2656 {; 2657 const char *dictHeaders[] = { ""RVersion.h"", ""ROOT/RConfig.hxx"", ""TClass.h"",; 2658 ""TDictAttributeMap.h"",""TInterpreter.h"",""TROOT.h"",""TBuffer.h"",; 2659 ""TMemberInspector.h"",""TError.h"",""RtypesImp.h"",""TIsAProxy.h"",; 2660 ""TFileMergeInfo.h"",""TCollectionProxyInfo.h""};; 2661 ; 2662 for (unsigned int h=0; h < sizeof(dictHeaders)/sizeof(dictHeaders[0]); ++h); 2663 {; 2664 char *rootVersion = gSystem->Which(incPath,dictHeaders[h]);; 2665 if (rootVersion) {; 2666 R__AddPath",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:85221,echo,echo,85221,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['echo'],['echo']
Availability,"; 264 /// The number of the RLogDiagCount's emitted errors at construction time.; 265 long long fInitialErrors = 0;; 266 /// The number of the RLogDiagCount's emitted fatal errors at construction time.; 267 long long fInitialFatalErrors = 0;; 268 ; 269public:; 270 /// Construct the scoped count given a counter (e.g. a channel or RLogManager).; 271 /// The counter's lifetime must exceed the lifetime of this object!; 272 explicit RLogScopedDiagCount(RLogDiagCount &cnt); 273 : fCounter(&cnt), fInitialWarnings(cnt.GetNumWarnings()), fInitialErrors(cnt.GetNumErrors()),; 274 fInitialFatalErrors(cnt.GetNumFatalErrors()); 275 {; 276 }; 277 ; 278 /// Construct the scoped count for any diagnostic, whatever its channel.; 279 RLogScopedDiagCount() : RLogScopedDiagCount(RLogManager::Get()) {}; 280 ; 281 /// Get the number of warnings that the RLogDiagCount has emitted since construction of *this.; 282 long long GetAccumulatedWarnings() const { return fCounter->GetNumWarnings() - fInitialWarnings; }; 283 ; 284 /// Get the number of errors that the RLogDiagCount has emitted since construction of *this.; 285 long long GetAccumulatedErrors() const { return fCounter->GetNumErrors() - fInitialErrors; }; 286 ; 287 /// Get the number of errors that the RLogDiagCount has emitted since construction of *this.; 288 long long GetAccumulatedFatalErrors() const { return fCounter->GetNumFatalErrors() - fInitialFatalErrors; }; 289 ; 290 /// Whether the RLogDiagCount has emitted a warnings since construction time of *this.; 291 bool HasWarningOccurred() const { return GetAccumulatedWarnings(); }; 292 ; 293 /// Whether the RLogDiagCount has emitted an error (fatal or not) since construction time of *this.; 294 bool HasErrorOccurred() const { return GetAccumulatedErrors() + GetAccumulatedFatalErrors(); }; 295 ; 296 /// Whether the RLogDiagCount has emitted an error or a warning since construction time of *this.; 297 bool HasErrorOrWarningOccurred() const { return HasWarningOccurred() || HasErrorOcc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RLogger_8hxx_source.html:10346,error,errors,10346,doc/master/RLogger_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RLogger_8hxx_source.html,1,['error'],['errors']
Availability,"; 274 double xmin = 0, double xmax = 0);; 275 virtual bool Contour(unsigned int ivar , unsigned int jvar, unsigned int & npoints,; 276 double * xi , double * xj );; 277 ; 278 /// return reference to the objective function; 279 ///virtual const ROOT::Math::IGenFunction & Function() const = 0;; 280 ; 281 /// print the result according to set level (implemented for TMinuit for maintaining Minuit-style printing); 282 virtual void PrintResults() {}; 283 ; 284 virtual std::string VariableName(unsigned int ivar) const;; 285 ; 286 virtual int VariableIndex(const std::string & name) const;; 287 ; 288 /** minimizer configuration parameters **/; 289 ; 290 /// set print level; 291 int PrintLevel() const { return fOptions.PrintLevel(); }; 292 ; 293 /// max number of function calls; 294 unsigned int MaxFunctionCalls() const { return fOptions.MaxFunctionCalls(); }; 295 ; 296 /// max iterations; 297 unsigned int MaxIterations() const { return fOptions.MaxIterations(); }; 298 ; 299 /// absolute tolerance; 300 double Tolerance() const { return fOptions.Tolerance(); }; 301 ; 302 /// precision of minimizer in the evaluation of the objective function; 303 /// ( a value <=0 corresponds to the let the minimizer choose its default one); 304 double Precision() const { return fOptions.Precision(); }; 305 ; 306 /// strategy; 307 int Strategy() const { return fOptions.Strategy(); }; 308 ; 309 /// status code of minimizer; 310 int Status() const { return fStatus; }; 311 ; 312 /// status code of Minos (to be re-implemented by the minimizers supporting Minos); 313 virtual int MinosStatus() const { return -1; }; 314 ; 315 /// return the statistical scale used for calculate the error; 316 /// is typically 1 for Chi2 and 0.5 for likelihood minimization; 317 double ErrorDef() const { return fOptions.ErrorDef(); }; 318 ; 319 ///return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit); 320 bool IsValidError() const { return fValidError; }; 321 ; 322 /// retrieve the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Minimizer_8h_source.html:13456,toler,tolerance,13456,doc/master/Minimizer_8h_source.html,https://root.cern,https://root.cern/doc/master/Minimizer_8h_source.html,1,['toler'],['tolerance']
Availability,"; 2770 {; 2771 if(fStatisticOption != kFNormal); 2772 {; 2773 Warning(""GetEfficiencyErrorLow"",""frequentist confidence intervals for weights are only supported by the normal approximation"");; 2774 Info(""GetEfficiencyErrorLow"",""setting statistic option to kFNormal"");; 2775 const_cast<TEfficiency*>(this)->SetStatisticOption(kFNormal);; 2776 }; 2777 ; 2778 Double_t variance = ( pw2 * (1. - 2 * eff) + tw2 * eff *eff ) / ( tw * tw) ;; 2779 Double_t sigma = sqrt(variance);; 2780 ; 2781 Double_t prob = 0.5 * (1.- fConfLevel);; 2782 Double_t delta = ROOT::Math::normal_quantile_c(prob, sigma);; 2783 ; 2784 // avoid to return errors which makes eff-err < 0; 2785 return (eff - delta < 0) ? eff : delta;; 2786 }; 2787 }; 2788 else; 2789 {; 2790 if(TestBit(kIsBayesian)); 2791 {; 2792 // parameters for the beta prior distribution; 2793 Double_t alpha = TestBit(kUseBinPrior) ? GetBetaAlpha(bin) : GetBetaAlpha();; 2794 Double_t beta = TestBit(kUseBinPrior) ? GetBetaBeta(bin) : GetBetaBeta();; 2795 return (eff - Bayesian(total,passed,fConfLevel,alpha,beta,false,TestBit(kShortestInterval)));; 2796 }; 2797 else; 2798 return (eff - fBoundary(total,passed,fConfLevel,false));; 2799 }; 2800}; 2801 ; 2802////////////////////////////////////////////////////////////////////////////////; 2803/// Returns the upper error on the efficiency in the given global bin; 2804///; 2805/// The result depends on the current confidence level fConfLevel and the; 2806/// chosen statistic option fStatisticOption. See SetStatisticOption(Int_t) for; 2807/// more details.; 2808///; 2809/// Note: If the histograms are filled with weights, only bayesian methods and the; 2810/// normal approximation are supported.; 2811 ; 2812Double_t TEfficiency::GetEfficiencyErrorUp(Int_t bin) const; 2813{; 2814 Double_t total = fTotalHistogram->GetBinContent(bin);; 2815 Double_t passed = fPassedHistogram->GetBinContent(bin);; 2816 ; 2817 Double_t eff = GetEfficiency(bin);; 2818 ; 2819 // check whether weights have been used; 2820 i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:111743,error,errors,111743,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability,"; 2800/// The user may sometimes try to compile a script before it has loaded all the; 2801/// needed shared libraries. In this case we want to be helpful and output a; 2802/// list of the unresolved symbols. So if the loading of the created shared; 2803/// library fails, we will try to build a executable that contains the; 2804/// script. The linker should then output a list of missing symbols.; 2805///; 2806/// To support this we provide a TSystem::SetMakeExe() function, that sets the; 2807/// directive telling how to create an executable. The loader will need; 2808/// to be informed of all the libraries available. The information about; 2809/// the libraries that has been loaded by .L and TSystem::Load() is accessible; 2810/// to the script compiler. However, the information about; 2811/// the libraries that have been selected at link time by the application; 2812/// builder (like the root libraries for root.exe) are not available and need; 2813/// to be explicitly listed in fLinkedLibs (either by default or by a call to; 2814/// TSystem::SetLinkedLibs()).; 2815///; 2816/// To simplify customization we could also add to the .rootrc support for the; 2817/// variables; 2818/// ~~~ {.cpp}; 2819/// Unix.*.Root.IncludePath: -I$ROOTSYS/include; 2820/// WinNT.*.Root.IncludePath: -I%ROOTSYS%/include; 2821///; 2822/// Unix.*.Root.LinkedLibs: -L$ROOTSYS/lib -lBase ....; 2823/// WinNT.*.Root.LinkedLibs: %ROOTSYS%/lib/*.lib msvcrt.lib ....; 2824/// ~~~; 2825/// And also support for MakeSharedLibs() and MakeExe().; 2826///; 2827/// (the ... have to be replaced by the actual values and are here only to; 2828/// shorten this comment).; 2829///; 2830/// Note that the default behavior is to remove libraries when closing ROOT,; 2831/// ie TSystem::CleanCompiledMacros() is called in the TROOT destructor.; 2832/// The default behavior of .L script.C+ is the opposite one, leaving things; 2833/// after closing, without removing. In other words, .L always passes the 'k'; 2834/// option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:92910,avail,available,92910,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['avail'],['available']
Availability,"; 2882 while (otool.Gets(p)) {; 2883 TString delim("" \t"");; 2884 TObjArray *tok = otool.Tokenize(delim);; 2885 TString dylib = ((TObjString*)tok->At(0))->String();; 2886 if (dylib.EndsWith("".dylib"") && !dylib.Contains(""/libSystem.B.dylib"")) {; 2887 if (!linkedLibs.IsNull()); 2888 linkedLibs += "" "";; 2889 linkedLibs += dylib;; 2890 }; 2891 delete tok;; 2892 }; 2893 if (p) {; 2894 ClosePipe(p);; 2895 }; 2896#endif; 2897#elif defined(R__LINUX) || defined(R__SOLARIS) || defined(R__AIX); 2898#if defined(R__WINGCC ); 2899 const char *cLDD=""cygcheck"";; 2900 const char *cSOEXT="".dll"";; 2901 size_t lenexe = strlen(exe);; 2902 if (strcmp(exe + lenexe - 4, "".exe""); 2903 && strcmp(exe + lenexe - 4, "".dll"")) {; 2904 // it's not a dll and exe doesn't end on "".exe"";; 2905 // need to add it for cygcheck to find it:; 2906 char* longerexe = new char[lenexe + 5];; 2907 strlcpy(longerexe, exe,lenexe+5);; 2908 strlcat(longerexe, "".exe"",lenexe+5);; 2909 exe = longerexe; // memory leak; 2910 #error ""unsupported platform, fix memory leak to use it""; 2911 }; 2912 TRegexp sovers = ""\\.so\\.[0-9]+"";; 2913#else; 2914 const char *cLDD=""ldd"";; 2915#if defined(R__AIX); 2916 const char *cSOEXT="".a"";; 2917 TRegexp sovers = ""\\.a\\.[0-9]+"";; 2918#else; 2919 const char *cSOEXT="".so"";; 2920 TRegexp sovers = ""\\.so\\.[0-9]+"";; 2921#endif; 2922#endif; 2923 FILE *p = OpenPipe(TString::Format(""%s '%s'"", cLDD, exe), ""r"");; 2924 if (p) {; 2925 TString ldd;; 2926 while (ldd.Gets(p)) {; 2927 TString delim("" \t"");; 2928 TObjArray *tok = ldd.Tokenize(delim);; 2929 ; 2930 // expected format:; 2931 // libCore.so => /home/rdm/root/lib/libCore.so (0x40017000); 2932 TObjString *solibName = (TObjString*)tok->At(2);; 2933 if (!solibName) {; 2934 // case where there is only one name of the list:; 2935 // /usr/platform/SUNW,UltraAX-i2/lib/libc_psr.so.1; 2936 solibName = (TObjString*)tok->At(0);; 2937 }; 2938 if (solibName) {; 2939 TString solib = solibName->String();; 2940 Ssiz_t idx = solib.Index(sovers);; 2941 if (sol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:92031,error,error,92031,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability,"; 29 number of parameters.; 30 ; 31 - The include file Minuit.h has been commented as much as possible; 32 using existing comments in the code or the printed documentation; 33 ; 34 - The original Minuit subroutines are now member functions.; 35 ; 36 - Constructors and destructor have been added.; 37 ; 38 - Instead of passing the FCN function in the argument; 39 list, the addresses of this function is stored as pointer; 40 in the data members of the class. This is by far more elegant; 41 and flexible in an interactive environment.; 42 The member function SetFCN can be used to define this pointer.; 43 ; 44 - The ROOT static function Printf is provided to replace all; 45 format statements and to print on currently defined output file.; 46 - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; 47 used inside the FCN function to set/get a referenced object; 48 instead of using global variables.; 49 ; 50 ; 51## Basic concepts of MINUIT; 52 ; 53The [MINUIT](https://root.cern/download/minuit.pdf); 54package acts on a multiparameter Fortran function to which one; 55must give the generic name <TT>FCN</TT>. In the ROOT implementation,; 56the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; 57when an Histogram.Fit command is invoked.; 58The value of <TT>FCN</TT> will in general depend on one; 59or more variable parameters.; 60 ; 61To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); 62the Fit function defines the Minuit fitting function as being H1FitChisquare; 63or H1FitLikelihood depending on the options selected.; 64H1FitChisquare; 65calculates the chisquare between the user fitting function (gaussian, polynomial,; 66user defined,etc) and the data for given values of the parameters.; 67It is the task of MINUIT to find those values of the parameters; 68which give the lowest value of chisquare.; 69 ; 70### Basic concepts - The transformation for parameters with limits.; 71 ; 72For variable parameters with limits,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:2309,down,download,2309,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['down'],['download']
Availability,"; 328 fExH[i] = exH[i];; 329 else; 330 fExH[i] = 0.;; 331 ; 332 for (Int_t j = 0; j < fNYErrors; j++) {; 333 if (Int_t(eyL.size()) > j && eyL[j].GetSize() > i); 334 fEyL[j][i] = eyL[j][i];; 335 else; 336 fEyL[j][i] = 0.;; 337 if (Int_t(eyH.size()) > j && eyH[j].GetSize() > i); 338 fEyH[j][i] = eyH[j][i];; 339 else; 340 fEyH[j][i] = 0.;; 341 }; 342 }; 343 ; 344 CalcYErrorsSum();; 345}; 346 ; 347////////////////////////////////////////////////////////////////////////////////; 348/// TGraphMultiErrors normal constructor with name, title, `np` points and `ne` y-errors.; 349///; 350/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 351/// The multiple y-errors are passed as std::vectors of TArrayF objects.; 352 ; 353TGraphMultiErrors::TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Float_t *x,; 354 const Float_t *y, const Float_t *exL, const Float_t *exH, std::vector<TArrayF> eyL,; 355 std::vector<TArrayF> eyH, Int_t m); 356 : TGraphMultiErrors(np, ne, x, y, exL, exH, eyL, eyH, m); 357{; 358 SetNameTitle(name, title);; 359}; 360 ; 361////////////////////////////////////////////////////////////////////////////////; 362/// TGraphMultiErrors normal constructor with `np` points and `ne` y-errors.; 363///; 364/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 365/// The multiple y-errors are passed as std::vectors of TArrayD objects.; 366 ; 367TGraphMultiErrors::TGraphMultiErrors(Int_t np, Int_t ne, const Double_t *x, const Double_t *y, const Double_t *exL,; 368 const Double_t *exH, std::vector<TArrayD> eyL, std::vector<TArrayD> eyH, Int_t m); 369 : TGraph(np, x, y), fNYErrors(ne), fSumErrorsMode(m); 370{; 371 if (!CtorAllocate()); 372 return;; 373 ; 374 Int_t n = fNpoints * sizeof(Double_t);; 375 ; 376 if (exL); 377 memcpy(fExL, exL, n);; 378 else; 379 memset(fExL, 0, n);; 380 if (exH); 381 memcpy(fExH, exH, n);; 382 else; 383 memset(fExH, 0, n);; 384 ; 385 for (Int_t i = 0; i < fNpoints; i++",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:13082,error,errors,13082,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['errors']
Availability,"; 336 if (Use[""LD"" ]) histLD ->Fill( reader->EvaluateMVA( ""LD method"" ) );; 337 if (Use[""MLP"" ]) histNn ->Fill( reader->EvaluateMVA( ""MLP method"" ) );; 338 if (Use[""MLPBFGS"" ]) histNnbfgs ->Fill( reader->EvaluateMVA( ""MLPBFGS method"" ) );; 339 if (Use[""MLPBNN"" ]) histNnbnn ->Fill( reader->EvaluateMVA( ""MLPBNN method"" ) );; 340 if (Use[""CFMlpANN"" ]) histNnC ->Fill( reader->EvaluateMVA( ""CFMlpANN method"" ) );; 341 if (Use[""TMlpANN"" ]) histNnT ->Fill( reader->EvaluateMVA( ""TMlpANN method"" ) );; 342 if (Use[""DNN_GPU""]) histDnnGpu->Fill(reader->EvaluateMVA(""DNN_GPU method""));; 343 if (Use[""DNN_CPU""]) histDnnCpu->Fill(reader->EvaluateMVA(""DNN_CPU method""));; 344 if (Use[""BDT"" ]) histBdt ->Fill( reader->EvaluateMVA( ""BDT method"" ) );; 345 if (Use[""BDTG"" ]) histBdtG ->Fill( reader->EvaluateMVA( ""BDTG method"" ) );; 346 if (Use[""BDTB"" ]) histBdtB ->Fill( reader->EvaluateMVA( ""BDTB method"" ) );; 347 if (Use[""BDTD"" ]) histBdtD ->Fill( reader->EvaluateMVA( ""BDTD method"" ) );; 348 if (Use[""BDTF"" ]) histBdtF ->Fill( reader->EvaluateMVA( ""BDTF method"" ) );; 349 if (Use[""RuleFit"" ]) histRf ->Fill( reader->EvaluateMVA( ""RuleFit method"" ) );; 350 if (Use[""SVM_Gauss"" ]) histSVMG ->Fill( reader->EvaluateMVA( ""SVM_Gauss method"" ) );; 351 if (Use[""SVM_Poly"" ]) histSVMP ->Fill( reader->EvaluateMVA( ""SVM_Poly method"" ) );; 352 if (Use[""SVM_Lin"" ]) histSVML ->Fill( reader->EvaluateMVA( ""SVM_Lin method"" ) );; 353 if (Use[""FDA_MT"" ]) histFDAMT ->Fill( reader->EvaluateMVA( ""FDA_MT method"" ) );; 354 if (Use[""FDA_GA"" ]) histFDAGA ->Fill( reader->EvaluateMVA( ""FDA_GA method"" ) );; 355 if (Use[""Category"" ]) histCat ->Fill( reader->EvaluateMVA( ""Category method"" ) );; 356 if (Use[""Plugin"" ]) histPBdt ->Fill( reader->EvaluateMVA( ""P_BDT method"" ) );; 357 ; 358 // Retrieve also per-event error; 359 if (Use[""PDEFoam""]) {; 360 Double_t val = reader->EvaluateMVA( ""PDEFoam method"" );; 361 Double_t err = reader->GetMVAError();; 362 histPDEFoam ->Fill( val );; 363 histPDEFoamErr->Fill( err );; 364 if (err>1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassificationApplication_8C_source.html:16555,error,error,16555,doc/master/TMVAClassificationApplication_8C_source.html,https://root.cern,https://root.cern/doc/master/TMVAClassificationApplication_8C_source.html,1,['error'],['error']
Availability,"; 341/// fY1 0.15 Y of 1st point; 342/// fX2 0.67 X of 2nd point; 343/// fY2 0.83 Y of 2nd point; 344/// fUniqueID 0 object unique identifier; 345/// fBits 50331648 bit field status word; 346/// fLineColor 1 line color; 347/// fLineStyle 1 line style; 348/// fLineWidth 1 line width; 349/// fFillColor 19 fill area color; 350/// fFillStyle 1001 fill area style; 351/// ~~~; 352 ; 353void TObject::Dump() const; 354{; 355 // Get the actual address of the object.; 356 const void *actual = IsA()->DynamicCast(TObject::Class(),this,kFALSE);; 357 IsA()->Dump(actual);; 358}; 359 ; 360////////////////////////////////////////////////////////////////////////////////; 361/// Execute method on this object with the given parameter string, e.g.; 362/// ""3.14,1,\""text\"""".; 363 ; 364void TObject::Execute(const char *method, const char *params, Int_t *error); 365{; 366 if (!IsA()) return;; 367 ; 368 Bool_t must_cleanup = TestBit(kMustCleanup);; 369 ; 370 gInterpreter->Execute(this, IsA(), method, params, error);; 371 ; 372 if (gPad && must_cleanup) gPad->Modified();; 373}; 374 ; 375////////////////////////////////////////////////////////////////////////////////; 376/// Execute method on this object with parameters stored in the TObjArray.; 377/// The TObjArray should contain an argv vector like:; 378/// ~~~ {.cpp}; 379/// argv[0] ... argv[n] = the list of TObjString parameters; 380/// ~~~; 381 ; 382void TObject::Execute(TMethod *method, TObjArray *params, Int_t *error); 383{; 384 if (!IsA()) return;; 385 ; 386 Bool_t must_cleanup = TestBit(kMustCleanup);; 387 ; 388 gInterpreter->Execute(this, IsA(), method, params, error);; 389 ; 390 if (gPad && must_cleanup) gPad->Modified();; 391}; 392 ; 393 ; 394////////////////////////////////////////////////////////////////////////////////; 395/// Execute action corresponding to an event at (px,py). This method; 396/// must be overridden if an object can react to graphics events.; 397 ; 398void TObject::ExecuteEvent(Int_t, Int_t, Int_t); 399{; 400 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:12738,error,error,12738,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,2,['error'],['error']
Availability,"; 3410 ; 3411static void R__WriteConstructorBody(FILE *file, TIter &next); 3412{; 3413 TStreamerElement *element = 0;; 3414 next.Reset();; 3415 while ((element = (TStreamerElement*)next())) {; 3416 if (element->GetType() == TVirtualStreamerInfo::kObjectp || element->GetType() == TVirtualStreamerInfo::kObjectP ||; 3417 element->GetType() == TVirtualStreamerInfo::kAnyp || element->GetType() == TVirtualStreamerInfo::kAnyP ||; 3418 element->GetType() == TVirtualStreamerInfo::kCharStar || element->GetType() == TVirtualStreamerInfo::kSTLp ||; 3419 element->GetType() == TVirtualStreamerInfo::kStreamLoop) {; 3420 if(element->GetArrayLength() <= 1) {; 3421 fprintf(file,"" %s = 0;\n"",element->GetName());; 3422 } else {; 3423 fprintf(file,"" memset(%s,0,%d);\n"",element->GetName(),element->GetSize());; 3424 }; 3425 }; 3426 if (TVirtualStreamerInfo::kOffsetP <= element->GetType() && element->GetType() < TVirtualStreamerInfo::kObject ) {; 3427 fprintf(file,"" %s = 0;\n"",element->GetName());; 3428 }; 3429 }; 3430}; 3431 ; 3432static constexpr int str_length(const char* str); 3433{; 3434 return *str ? 1 + str_length(str + 1) : 0;; 3435}; 3436 ; 3437////////////////////////////////////////////////////////////////////////////////; 3438/// Return true if the element is auto_ptr or unique_ptr; 3439 ; 3440static bool R__IsUniquePtr(TStreamerElement *element) {; 3441 ; 3442 constexpr auto auto_ptr_len = str_length(""auto_ptr<"");; 3443 constexpr auto unique_ptr_len = str_length(""unique_ptr<"");; 3444 ; 3445 const char *name = element->GetTypeNameBasic();; 3446 ; 3447 return ((strncmp(name, ""auto_ptr<"", auto_ptr_len) == 0); 3448 || (strncmp(name, ""unique_ptr<"", unique_ptr_len) == 0));; 3449}; 3450 ; 3451////////////////////////////////////////////////////////////////////////////////; 3452/// Write down the pointers and arrays part of the body of the 'move' constructor.; 3453 ; 3454static void R__WriteMoveBodyPointersArrays(FILE *file, const TString &protoname, TIter &next); 3455{; 3456 TStreamer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:139063,down,down,139063,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['down'],['down']
Availability,"; 3415ROOT::Double_v TFormula::DoEvalVec(const ROOT::Double_v *x, const double *params) const; 3416{; 3417 if (!fReadyToExecute) {; 3418 Error(""Eval"", ""Formula is invalid and not ready to execute "");; 3419 for (auto it = fFuncs.begin(); it != fFuncs.end(); ++it) {; 3420 TFormulaFunction fun = *it;; 3421 if (!fun.fFound) {; 3422 printf(""%s is unknown.\n"", fun.GetName());; 3423 }; 3424 }; 3425 return TMath::QuietNaN();; 3426 }; 3427 // todo maybe save lambda ptr stuff for later; 3428 ; 3429 if (!fClingInitialized && fLazyInitialization) {; 3430 // try recompiling the formula. We need to lock because this is not anymore thread safe; 3431 R__LOCKGUARD(gROOTMutex);; 3432 // check again in case another thread has initialized the formula (see ROOT-10994); 3433 if (!fClingInitialized) {; 3434 auto thisFormula = const_cast<TFormula*>(this);; 3435 thisFormula->ReInitializeEvalMethod();; 3436 }; 3437 if (!fClingInitialized) {; 3438 Error(""DoEval"", ""Formula has error and it is not properly initialized "");; 3439 ROOT::Double_v res = TMath::QuietNaN();; 3440 return res;; 3441 }; 3442 }; 3443 ; 3444 ROOT::Double_v result = 0;; 3445 void *args[2];; 3446 ; 3447 ROOT::Double_v *vars = const_cast<ROOT::Double_v *>(x);; 3448 args[0] = &vars;; 3449 if (fNpar <= 0) {; 3450 (*fFuncPtr)(0, 1, args, &result);; 3451 }else {; 3452 double *pars = (params) ? const_cast<double *>(params) : const_cast<double *>(fClingParameters.data());; 3453 args[1] = &pars;; 3454 (*fFuncPtr)(0, 2, args, &result);; 3455 }; 3456 return result;; 3457}; 3458#endif // R__HAS_VECCORE; 3459 ; 3460 ; 3461//////////////////////////////////////////////////////////////////////////////; 3462/// Re-initialize eval method; 3463///; 3464/// This function is called by DoEval and DoEvalVector in case of a previous failure; 3465/// or in case of reading from a file; 3466////////////////////////////////////////////////////////////////////////////////; 3467void TFormula::ReInitializeEvalMethod() {; 3468 ; 3469 ; 3470 if (TestBit(TF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:130914,error,error,130914,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['error'],['error']
Availability,"; 3490 bool first(true) ;; 3491 for (Int_t i=0 ; i<numProxies() ; i++) {; 3492 RooAbsProxy* p = getProxy(i) ;; 3493 if (!p) continue ;; 3494 //if (p->name()[0]=='!') continue ;; 3495 if (first) {; 3496 first=false ;; 3497 } else {; 3498 oss << "", "" ;; 3499 }; 3500 p->print(oss,true) ;; 3501 }; 3502 ee.setServerValues(oss.str().c_str()) ;; 3503 }; 3504 ; 3505 std::ostringstream oss2 ;; 3506 printStream(oss2,kName|kClassName|kArgs,kInline) ;; 3507 ; 3508 if (evalErrorData().mode == PrintErrors) {; 3509 coutE(Eval) << ""RooAbsReal::logEvalError("" << GetName() << "") evaluation error, "" << std::endl; 3510 << "" origin : "" << oss2.str() << std::endl; 3511 << "" message : "" << ee._msg << std::endl; 3512 << "" server values: "" << ee._srvval << std::endl ;; 3513 } else if (evalErrorData().mode == CollectErrors) {; 3514 auto &evalErrorList = evalErrorData().errorList[this];; 3515 if (evalErrorList.second.size() >= 2048) {; 3516 // avoid overflowing the error list, so if there are very many, print; 3517 // the oldest one first, and pop it off the list; 3518 const EvalError& oee = evalErrorList.second.front();; 3519 // print to debug stream, since these would normally be suppressed, and; 3520 // we do not want to increase the error count in the message service...; 3521 ccoutD(Eval) << ""RooAbsReal::logEvalError("" << GetName(); 3522 << "") delayed evaluation error, "" << std::endl; 3523 << "" origin : "" << oss2.str() << std::endl; 3524 << "" message : "" << oee._msg << std::endl; 3525 << "" server values: "" << oee._srvval << std::endl ;; 3526 evalErrorList.second.pop_front();; 3527 }; 3528 evalErrorList.first = oss2.str() ;; 3529 evalErrorList.second.push_back(ee) ;; 3530 }; 3531 ; 3532 inLogEvalError = false ;; 3533 //coutE(Tracing) << ""RooAbsReal::logEvalError("" << GetName() << "") message = "" << message << std::endl ;; 3534}; 3535 ; 3536 ; 3537 ; 3538 ; 3539////////////////////////////////////////////////////////////////////////////////; 3540/// Clear the stack of evaluation error messag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:150349,error,error,150349,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['error']
Availability,"; 350 isLineToBeSkipped = kFALSE;; 351 token = nullptr;; 352 token_idx = 0;; 353 value_idx = 0;; 354 }; 355 Set(np) ;; 356 ; 357 // Cleaning; 358 delete [] isTokenToBeSaved;; 359 delete token;; 360 }; 361 infile.close();; 362}; 363 ; 364 ; 365////////////////////////////////////////////////////////////////////////////////; 366/// TGraphErrors default destructor.; 367 ; 368TGraphErrors::~TGraphErrors(); 369{; 370 delete [] fEX;; 371 delete [] fEY;; 372}; 373 ; 374////////////////////////////////////////////////////////////////////////////////; 375/// Add a point with errorbars to the graph.; 376 ; 377void TGraphErrors::AddPointError(Double_t x, Double_t y, Double_t ex, Double_t ey); 378{; 379 AddPoint(x, y); // fNpoints will increase automatically; 380 SetPointError(fNpoints - 1, ex, ey);; 381}; 382 ; 383////////////////////////////////////////////////////////////////////////////////; 384/// Apply function to all the data points \f$ y = f(x,y) \f$.; 385///; 386/// The error is calculated as \f$ ey=(f(x,y+ey)-f(x,y-ey))/2 \f$.; 387/// This is the same as \f$ error(fy) = df/dy * ey \f$ for small errors.; 388///; 389/// For generic functions the symmetric errors might become non-symmetric; 390/// and are averaged here. Use TGraphAsymmErrors if desired.; 391///; 392/// Error on \f$ x \f$ doesn't change.; 393///; 394/// function suggested/implemented by Miroslav Helbich <helbich@mail.desy.de>; 395 ; 396void TGraphErrors::Apply(TF1 *f); 397{; 398 Double_t x, y, ex, ey;; 399 ; 400 if (fHistogram) {; 401 delete fHistogram;; 402 fHistogram = nullptr;; 403 }; 404 for (Int_t i = 0; i < GetN(); i++) {; 405 GetPoint(i, x, y);; 406 ex = GetErrorX(i);; 407 ey = GetErrorY(i);; 408 ; 409 SetPoint(i, x, f->Eval(x, y));; 410 SetPointError(i, ex, TMath::Abs(f->Eval(x, y + ey) - f->Eval(x, y - ey)) / 2.);; 411 }; 412 if (gPad) gPad->Modified();; 413}; 414 ; 415////////////////////////////////////////////////////////////////////////////////; 416/// Apply function to all the data points \f$",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:12837,error,error,12837,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['error']
Availability,"; 3563//______________________________________________________________________________; 3564//; 3565// Command IMPROVE; 3566//; 3567 if( !strncmp(comd.Data(),""IMP"",3) ) {; 3568 Printf("" ***>IMPROVE [maxcalls]"");; 3569 Printf("" If a previous minimization has converged, and the current"");; 3570 Printf("" values of the parameters therefore correspond to a local"");; 3571 Printf("" minimum of the function, this command requests a search for"");; 3572 Printf("" additional distinct local minima."");; 3573 Printf("" The optional argument [maxcalls] specifies the (approximate"");; 3574 Printf("" maximum number of function calls after which the calculation"");; 3575 Printf("" will be stopped."");; 3576 goto L99;; 3577 }; 3578//______________________________________________________________________________; 3579//; 3580// Command MIGRAD; 3581//; 3582 if( !strncmp(comd.Data(),""MIG"",3) ) {; 3583 Printf("" ***>MIGrad [maxcalls] [tolerance]"");; 3584 Printf("" Causes minimization of the function by the method of Migrad,"");; 3585 Printf("" the most efficient and complete single method, recommended"");; 3586 Printf("" for general functions (see also MINImize)."");; 3587 Printf("" The minimization produces as a by-product the error matrix"");; 3588 Printf("" of the parameters, which is usually reliable unless warning"");; 3589 Printf("" messages are produced."");; 3590 Printf("" The optional argument [maxcalls] specifies the (approximate)"");; 3591 Printf("" maximum number of function calls after which the calculation"");; 3592 Printf("" will be stopped even if it has not yet converged."");; 3593 Printf("" The optional argument [tolerance] specifies required tolerance"");; 3594 Printf("" on the function value at the minimum."");; 3595 Printf("" The default tolerance is 0.1, and the minimization will stop"");; 3596 Printf("" when the estimated vertical distance to the minimum (EDM) is"");; 3597 Printf("" less than 0.001*[tolerance]*UP (see [SET ERRordef])."");; 3598 goto L99;; 3599 }; 3600//___________________________________",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:114969,toler,tolerance,114969,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['toler'],['tolerance']
Availability,"; 388/// Initialize a THnSparseCompactBinCoord object with ""dim"" dimensions; 389/// and ""bins"" holding the number of bins for each dimension.; 390 ; 391THnSparseCompactBinCoord::THnSparseCompactBinCoord(Int_t dim, const Int_t* nbins):; 392 THnSparseCoordCompression(dim, nbins),; 393 fHash(0), fCoordBuffer(nullptr), fCurrentBin(nullptr); 394{; 395 fCurrentBin = new Int_t[dim];; 396 size_t bufAllocSize = GetBufferSize();; 397 if (bufAllocSize < sizeof(Long64_t)); 398 bufAllocSize = sizeof(Long64_t);; 399 fCoordBuffer = new Char_t[bufAllocSize];; 400}; 401 ; 402 ; 403////////////////////////////////////////////////////////////////////////////////; 404/// destruct a THnSparseCompactBinCoord; 405 ; 406THnSparseCompactBinCoord::~THnSparseCompactBinCoord(); 407{; 408 delete [] fCoordBuffer;; 409 delete [] fCurrentBin;; 410}; 411 ; 412/** \class THnSparseArrayChunk; 413THnSparseArrayChunk is used internally by THnSparse.; 414THnSparse stores its (dynamic size) array of bin coordinates and their; 415contents (and possibly errors) in a TObjArray of THnSparseArrayChunk. Each; 416of the chunks holds an array of THnSparseCompactBinCoord and the content; 417(a TArray*), which is created outside (by the templated derived classes of; 418THnSparse) and passed in at construction time.; 419*/; 420 ; 421ClassImp(THnSparseArrayChunk);; 422 ; 423////////////////////////////////////////////////////////////////////////////////; 424/// (Default) initialize a chunk. Takes ownership of cont (~THnSparseArrayChunk deletes it),; 425/// and create an ArrayF for errors if ""errors"" is true.; 426 ; 427THnSparseArrayChunk::THnSparseArrayChunk(Int_t coordsize, bool errors, TArray* cont):; 428 fCoordinateAllocationSize(-1), fSingleCoordinateSize(coordsize), fCoordinatesSize(0),; 429 fCoordinates(nullptr), fContent(cont),; 430 fSumw2(nullptr); 431{; 432 fCoordinateAllocationSize = fSingleCoordinateSize * cont->GetSize();; 433 fCoordinates = new Char_t[fCoordinateAllocationSize];; 434 if (errors) Sumw2();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THnSparse_8cxx_source.html:14328,error,errors,14328,doc/master/THnSparse_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THnSparse_8cxx_source.html,1,['error'],['errors']
Availability,"; 399(`tx = ty = 0`); 400 ; 401`TPad::SetTicks(tx,ty)` allows to set these options.; 402See also The `TAxis` functions to set specific axis attributes.; 403 ; 404In case multiple color filled histograms are drawn on the same pad, the fill; 405area may hide the axis tick marks. One can force a redraw of the axis over all; 406the histograms by calling:; 407 ; 408 gPad->RedrawAxis();; 409 ; 410 ; 411\anchor HP05; 412### Giving titles to the X, Y and Z axis; 413 ; 414 ; 415 h->GetXaxis()->SetTitle(""X axis title"");; 416 h->GetYaxis()->SetTitle(""Y axis title"");; 417 ; 418The histogram title and the axis titles can be any `TLatex` string.; 419The titles are part of the persistent histogram.; 420 ; 421 ; 422\anchor HP060; 423### The option ""SAME""; 424 ; 425 ; 426By default, when an histogram is drawn, the current pad is cleared before; 427drawing. In order to keep the previous drawing and draw on top of it the; 428option `SAME` should be use. The histogram drawn with the option; 429`SAME` uses the coordinates system available in the current pad.; 430 ; 431This option can be used alone or combined with any valid drawing option but; 432some combinations must be use with care.; 433 ; 434\anchor HP060a; 435#### Limitations; 436 ; 437- It does not work when combined with the `LEGO` and `SURF` options unless the; 438 histogram plotted with the option `SAME` has exactly the same; 439 ranges on the X, Y and Z axis as the currently drawn histogram. To superimpose; 440 lego plots [histograms' stacks](\ref HP26) should be used.; 441 ; 442 ; 443\anchor HP061; 444### Colors automatically picked in palette; 445 ; 446\since **ROOT version 6.09/01**; 447 ; 448When several histograms are painted in the same canvas thanks to the option ""SAME""; 449or via a `THStack` it might be useful to have an easy and automatic way to choose; 450their color. The simplest way is to pick colors in the current active color; 451palette. Palette coloring for histogram is activated thanks to the options `PFC`; 45",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:21347,avail,available,21347,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['avail'],['available']
Availability,"; 40 grP1->SetTitle(""TGraphPolar Example"");; 41 ; 42 grP1->SetMarkerStyle(20);; 43 grP1->SetMarkerSize(2.);; 44 grP1->SetMarkerColor(4);; 45 grP1->SetLineColor(2);; 46 grP1->SetLineWidth(3);; 47 grP1->Draw(""PE"");; 48 ; 49 // Update, otherwise GetPolargram returns 0; 50 CPol->Update();; 51 grP1->GetPolargram()->SetToRadian();; 52 ; 53 return CPol;; 54}; 55End_Macro; 56*/; 57 ; 58#include ""TGraphPolar.h""; 59#include ""TGraphPolargram.h""; 60 ; 61ClassImp(TGraphPolar);; 62 ; 63////////////////////////////////////////////////////////////////////////////////; 64/// TGraphPolar default constructor.; 65 ; 66TGraphPolar::TGraphPolar() : TGraphErrors(),; 67 fOptionAxis(kFALSE),fPolargram(nullptr),fXpol(nullptr),fYpol(nullptr); 68{; 69}; 70 ; 71////////////////////////////////////////////////////////////////////////////////; 72/// TGraphPolar constructor.; 73///; 74/// \param[in] n number of points.; 75/// \param[in] theta angular values.; 76/// \param[in] r radial values.; 77/// \param[in] etheta errors on angular values.; 78/// \param[in] er errors on radial values.; 79 ; 80TGraphPolar::TGraphPolar(Int_t n, const Double_t* theta, const Double_t* r,; 81 const Double_t *etheta, const Double_t* er); 82 : TGraphErrors(n,theta,r,etheta,er),; 83 fOptionAxis(kFALSE),fPolargram(nullptr),fXpol(nullptr),fYpol(nullptr); 84{; 85 SetEditable(kFALSE);; 86}; 87 ; 88////////////////////////////////////////////////////////////////////////////////; 89/// TGraphPolar destructor.; 90 ; 91TGraphPolar::~TGraphPolar(); 92{; 93 delete [] fXpol;; 94 delete [] fYpol;; 95}; 96 ; 97////////////////////////////////////////////////////////////////////////////////; 98/// Draw TGraphPolar.; 99 ; 100void TGraphPolar::Draw(Option_t* options); 101{; 102 // Process options; 103 TString opt = options;; 104 opt.ToUpper();; 105 ; 106 // Ignore same; 107 opt.ReplaceAll(""SAME"","""");; 108 ; 109 // ReDraw polargram if required by options; 110 if (opt.Contains(""A"")) fOptionAxis = kTRUE;; 111 opt.ReplaceAll(""A"","""");; 112 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolar_8cxx_source.html:2395,error,errors,2395,doc/master/TGraphPolar_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolar_8cxx_source.html,1,['error'],['errors']
Availability,"; 404 if (i < 0 || i >= fNpoints) return -1;; 405 if (!fEXlow && !fEXhigh) return -1;; 406 Double_t elow = 0, ehigh = 0;; 407 if (fEXlow) elow = fEXlow[i];; 408 if (fEXhigh) ehigh = fEXhigh[i];; 409 return TMath::Sqrt(0.5*(elow*elow + ehigh*ehigh));; 410}; 411 ; 412 ; 413////////////////////////////////////////////////////////////////////////////////; 414/// It returns the error along Y at point `i`.; 415 ; 416Double_t TGraphBentErrors::GetErrorY(Int_t i) const; 417{; 418 if (i < 0 || i >= fNpoints) return -1;; 419 if (!fEYlow && !fEYhigh) return -1;; 420 Double_t elow=0, ehigh=0;; 421 if (fEYlow) elow = fEYlow[i];; 422 if (fEYhigh) ehigh = fEYhigh[i];; 423 return TMath::Sqrt(0.5*(elow*elow + ehigh*ehigh));; 424}; 425 ; 426 ; 427////////////////////////////////////////////////////////////////////////////////; 428/// Get high error on X[i].; 429 ; 430Double_t TGraphBentErrors::GetErrorXhigh(Int_t i) const; 431{; 432 if (i<0 || i>fNpoints) return -1;; 433 if (fEXhigh) return fEXhigh[i];; 434 return -1;; 435}; 436 ; 437 ; 438////////////////////////////////////////////////////////////////////////////////; 439/// Get low error on X[i].; 440 ; 441Double_t TGraphBentErrors::GetErrorXlow(Int_t i) const; 442{; 443 if (i<0 || i>fNpoints) return -1;; 444 if (fEXlow) return fEXlow[i];; 445 return -1;; 446}; 447 ; 448 ; 449////////////////////////////////////////////////////////////////////////////////; 450/// Get high error on Y[i].; 451 ; 452Double_t TGraphBentErrors::GetErrorYhigh(Int_t i) const; 453{; 454 if (i<0 || i>fNpoints) return -1;; 455 if (fEYhigh) return fEYhigh[i];; 456 return -1;; 457}; 458 ; 459 ; 460////////////////////////////////////////////////////////////////////////////////; 461/// Get low error on Y[i].; 462 ; 463Double_t TGraphBentErrors::GetErrorYlow(Int_t i) const; 464{; 465 if (i<0 || i>fNpoints) return -1;; 466 if (fEYlow) return fEYlow[i];; 467 return -1;; 468}; 469 ; 470 ; 471/////////////////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html:14528,error,error,14528,doc/master/TGraphBentErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html,1,['error'],['error']
Availability,"; 4699 Printf("" NO LIMITS SPECIFIED. PARAMETER %3d IS ALREADY UNLIMITED. NO CHANGE."",i2);; 4700 }; 4701 goto L900;; 4702// put on limits; 4703L235:; 4704 fAlim[i2-1] = TMath::Min(fWord7[1],fWord7[2]);; 4705 fBlim[i2-1] = TMath::Max(fWord7[1],fWord7[2]);; 4706 fNvarl[i2-1] = 4;; 4707 if (fISW[4] > 0) {; 4708 Printf("" PARAMETER %3d LIMITS SET TO %15.5g%15.5g"",i2,fAlim[i2-1],fBlim[i2-1]);; 4709 }; 4710 fCstatu = ""NEW LIMITS"";; 4711 if (kint <= 0) fGsteps[ifx-1] = -.1;; 4712 else fGstep[kint-1] = -.1;; 4713 ; 4714L900:; 4715 if (fCstatu != ""NO CHANGE "") {; 4716 mnexin(fX);; 4717 mnrset(1);; 4718 }; 4719}; 4720 ; 4721////////////////////////////////////////////////////////////////////////////////; 4722/// Perform a line search from position START; 4723///; 4724/// along direction STEP, where the length of vector STEP; 4725/// gives the expected position of minimum.; 4726/// - FSTART is value of function at START; 4727/// - SLOPE (if non-zero) is df/dx along STEP at START; 4728/// - TOLER is initial tolerance of minimum in direction STEP; 4729///; 4730/// SLAMBG and ALPHA control the maximum individual steps allowed.; 4731/// The first step is always =1. The max length of second step is SLAMBG.; 4732/// The max size of subsequent steps is the maximum previous successful; 4733/// step multiplied by ALPHA + the size of most recent successful step,; 4734/// but cannot be smaller than SLAMBG.; 4735 ; 4736void TMinuit::mnline(Double_t *start, Double_t fstart, Double_t *step, Double_t slope, Double_t toler); 4737{; 4738 /* Local variables */; 4739 Double_t xpq[12], ypq[12], slam, sdev, coeff[3], denom, flast;; 4740 Double_t fvals[3], xvals[3], f1, fvmin, xvmin, ratio, f2, f3 = 0., fvmax;; 4741 Double_t toler8, toler9, overal, undral, slamin, slamax, slopem;; 4742 Int_t i, nparx=0, nvmax=0, nxypt, kk, ipt;; 4743 Bool_t ldebug;; 4744 TString cmess;; 4745 char chpq[13];; 4746 int l65, l70, l80;; 4747 ; 4748 /* Function Body */; 4749 l65 = 0; l70 = 0; l80 = 0;; 4750 ldebug = fIdbg[",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:156858,toler,tolerance,156858,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['toler'],['tolerance']
Availability,"; 4775 TClingClassInfo *cl = (TClingClassInfo*)opaque_cl;; 4776 ; 4777 // Could trigger deserialization of decls.; 4778 cling::Interpreter::PushTransactionRAII RAII(GetInterpreterImpl());; 4779 ; 4780 if (cl) {; 4781 d = cl->GetDataMember(name);; 4782 // We check if the decl of the data member has an annotation which indicates; 4783 // an ioname.; 4784 // In case this is true, if the name requested is not the ioname, we; 4785 // return 0, as if the member did not exist. In some sense we override; 4786 // the information in the TClassInfo instance, isolating the typesystem in; 4787 // TClass from the one in the AST.; 4788 if (const ValueDecl* decl = (const ValueDecl*) d){; 4789 std::string ioName;; 4790 bool hasIoName = ROOT::TMetaUtils::ExtractAttrPropertyFromName(*decl,""ioname"",ioName);; 4791 if (hasIoName && ioName != name) return nullptr;; 4792 }; 4793 return d;; 4794 }; 4795 // We are looking up for something on the TU scope.; 4796 // FIXME: We do not want to go through TClingClassInfo(fInterpreter) because of redundant deserializations. That; 4797 // interface will actually construct iterators and walk over the decls on the global scope. In would return the first; 4798 // occurrence of a decl with the looked up name. However, that's not what C++ lookup would do: if we want to switch; 4799 // to a more complete C++ lookup interface we need sift through the found names and pick up the declarations which; 4800 // are only fulfilling ROOT's understanding for a Data Member.; 4801 // FIXME: We should probably deprecate the TClingClassInfo(fInterpreter) interface and replace it withe something; 4802 // similar as below.; 4803 using namespace clang;; 4804 Sema& SemaR = fInterpreter->getSema();; 4805 DeclarationName DName = &SemaR.Context.Idents.get(name);; 4806 ; 4807 LookupResult R(SemaR, DName, SourceLocation(), Sema::LookupOrdinaryName,; 4808 Sema::ForExternalRedeclaration);; 4809 ; 4810 cling::utils::Lookup::Named(&SemaR, R);; 4811 ; 4812 LookupResult::Filter F = R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:186721,redundant,redundant,186721,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['redundant'],['redundant']
Availability,"; 488 Return true if inversion is successful.; 489 The method used is based on direct inversion using the Cramer rule for; 490 matrices upto 5x5. Afterwards the same default algorithm of Invert() is used.; 491 Note that this method is faster but can suffer from much larger numerical accuracy; 492 when the condition of the matrix is large; 493 */; 494 bool InvertFast();; 495 ; 496 /**; 497 Invert a square Matrix and returns a new matrix. In case the inversion fails; 498 the current matrix is returned.; 499 \param ifail . ifail will be set to 0 when inversion is successful.; 500 See ROOT::Math::SMatrix::InvertFast for the inversion algorithm; 501 */; 502 SMatrix<T,D1,D2,R> InverseFast(int & ifail ) const;; 503 ; 504 /**; 505 Inversion of a symmetric positive defined Matrix using Choleski decomposition.; 506 ( this method changes the current matrix).; 507 Return true if inversion is successful.; 508 The method used is based on Choleski decomposition; 509 A compile error is given if the matrix is not of type symmetric and a run-time failure if the; 510 matrix is not positive defined.; 511 For solving a linear system, it is possible to use also the function; 512 ROOT::Math::SolveChol(matrix, vector) which will be faster than performing the inversion; 513 */; 514 bool InvertChol();; 515 ; 516 /**; 517 Invert of a symmetric positive defined Matrix using Choleski decomposition.; 518 A compile error is given if the matrix is not of type symmetric and a run-time failure if the; 519 matrix is not positive defined.; 520 In case the inversion fails the current matrix is returned.; 521 \param ifail . ifail will be set to 0 when inversion is successful.; 522 See ROOT::Math::SMatrix::InvertChol for the inversion algorithm; 523 */; 524 SMatrix<T,D1,D2,R> InverseChol(int & ifail ) const;; 525 ; 526 /**; 527 determinant of square Matrix via Dfact.; 528 Return true when the calculation is successful.; 529 \param det will contain the calculated determinant value; 530 \b Note: this will ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SMatrix_8h_source.html:17231,error,error,17231,doc/master/SMatrix_8h_source.html,https://root.cern,https://root.cern/doc/master/SMatrix_8h_source.html,2,"['error', 'failure']","['error', 'failure']"
Availability,"; 4886{; 4887 if (!cl) return kFALSE;; 4888 if (cl == this) return kTRUE;; 4889 ; 4890 if (!HasDataMemberInfo()) {; 4891 TVirtualStreamerInfo *sinfo = ((TClass *)this)->GetCurrentStreamerInfo();; 4892 if (sinfo==nullptr) sinfo = GetStreamerInfo();; 4893 TIter next(sinfo->GetElements());; 4894 TStreamerElement *element;; 4895 while ((element = (TStreamerElement*)next())) {; 4896 if (element->IsA() == TStreamerBase::Class()) {; 4897 TClass *clbase = element->GetClassPointer();; 4898 if (!clbase) return kFALSE; //missing class; 4899 if (clbase->InheritsFrom(cl)) return kTRUE;; 4900 }; 4901 }; 4902 return kFALSE;; 4903 }; 4904 // cast const away (only for member fBase which can be set in GetListOfBases()); 4905 if (((TClass *)this)->GetBaseClass(cl)) return kTRUE;; 4906 return kFALSE;; 4907}; 4908 ; 4909////////////////////////////////////////////////////////////////////////////////; 4910/// Cast obj of this class type up to baseclass cl if up is true.; 4911/// Cast obj of this class type down from baseclass cl if up is false.; 4912/// If this class is not a baseclass of cl return 0, else the pointer; 4913/// to the cl part of this (up) or to this (down).; 4914 ; 4915void *TClass::DynamicCast(const TClass *cl, void *obj, Bool_t up); 4916{; 4917 if (cl == this) return obj;; 4918 ; 4919 if (!HasDataMemberInfo()) return nullptr;; 4920 ; 4921 Int_t off;; 4922 if ((off = GetBaseClassOffset(cl, obj)) != -1) {; 4923 if (up); 4924 return (void*)((Longptr_t)obj+off);; 4925 else; 4926 return (void*)((Longptr_t)obj-off);; 4927 }; 4928 return nullptr;; 4929}; 4930 ; 4931////////////////////////////////////////////////////////////////////////////////; 4932/// Cast obj of this class type up to baseclass cl if up is true.; 4933/// Cast obj of this class type down from baseclass cl if up is false.; 4934/// If this class is not a baseclass of cl return 0, else the pointer; 4935/// to the cl part of this (up) or to this (down).; 4936 ; 4937const void *TClass::DynamicCast(const TClass *cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:187179,down,down,187179,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['down'],['down']
Availability,"; 4906 return kFALSE;; 4907}; 4908 ; 4909////////////////////////////////////////////////////////////////////////////////; 4910/// Cast obj of this class type up to baseclass cl if up is true.; 4911/// Cast obj of this class type down from baseclass cl if up is false.; 4912/// If this class is not a baseclass of cl return 0, else the pointer; 4913/// to the cl part of this (up) or to this (down).; 4914 ; 4915void *TClass::DynamicCast(const TClass *cl, void *obj, Bool_t up); 4916{; 4917 if (cl == this) return obj;; 4918 ; 4919 if (!HasDataMemberInfo()) return nullptr;; 4920 ; 4921 Int_t off;; 4922 if ((off = GetBaseClassOffset(cl, obj)) != -1) {; 4923 if (up); 4924 return (void*)((Longptr_t)obj+off);; 4925 else; 4926 return (void*)((Longptr_t)obj-off);; 4927 }; 4928 return nullptr;; 4929}; 4930 ; 4931////////////////////////////////////////////////////////////////////////////////; 4932/// Cast obj of this class type up to baseclass cl if up is true.; 4933/// Cast obj of this class type down from baseclass cl if up is false.; 4934/// If this class is not a baseclass of cl return 0, else the pointer; 4935/// to the cl part of this (up) or to this (down).; 4936 ; 4937const void *TClass::DynamicCast(const TClass *cl, const void *obj, Bool_t up); 4938{; 4939 return DynamicCast(cl,const_cast<void*>(obj),up);; 4940}; 4941 ; 4942////////////////////////////////////////////////////////////////////////////////; 4943/// Return a pointer to a newly allocated object of this class.; 4944/// The class must have a default constructor. For meaning of; 4945/// defConstructor, see TClass::IsCallingNew().; 4946///; 4947/// If quiet is true, do no issue a message via Error on case; 4948/// of problems, just return 0.; 4949///; 4950/// The constructor actually called here can be customized by; 4951/// using the rootcint pragma:; 4952/// ~~~ {.cpp}; 4953/// #pragma link C++ ioctortype UserClass;; 4954/// ~~~; 4955/// For example, with this pragma and a class named MyClass,; 4956/// this me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/TClass_8cxx_source.html:187949,down,down,187949,doc/v632/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/v632/TClass_8cxx_source.html,1,['down'],['down']
Availability,"; 4953{; 4954 if (!cl) return kFALSE;; 4955 if (cl == this) return kTRUE;; 4956 ; 4957 if (!HasDataMemberInfo()) {; 4958 TVirtualStreamerInfo *sinfo = ((TClass *)this)->GetCurrentStreamerInfo();; 4959 if (sinfo==nullptr) sinfo = GetStreamerInfo();; 4960 TIter next(sinfo->GetElements());; 4961 TStreamerElement *element;; 4962 while ((element = (TStreamerElement*)next())) {; 4963 if (element->IsA() == TStreamerBase::Class()) {; 4964 TClass *clbase = element->GetClassPointer();; 4965 if (!clbase) return kFALSE; //missing class; 4966 if (clbase->InheritsFrom(cl)) return kTRUE;; 4967 }; 4968 }; 4969 return kFALSE;; 4970 }; 4971 // cast const away (only for member fBase which can be set in GetListOfBases()); 4972 if (((TClass *)this)->GetBaseClass(cl)) return kTRUE;; 4973 return kFALSE;; 4974}; 4975 ; 4976////////////////////////////////////////////////////////////////////////////////; 4977/// Cast obj of this class type up to baseclass cl if up is true.; 4978/// Cast obj of this class type down from baseclass cl if up is false.; 4979/// If this class is not a baseclass of cl return 0, else the pointer; 4980/// to the cl part of this (up) or to this (down).; 4981 ; 4982void *TClass::DynamicCast(const TClass *cl, void *obj, Bool_t up); 4983{; 4984 if (cl == this) return obj;; 4985 ; 4986 if (!HasDataMemberInfo()) return nullptr;; 4987 ; 4988 Int_t off;; 4989 if ((off = GetBaseClassOffset(cl, obj)) != -1) {; 4990 if (up); 4991 return (void*)((Longptr_t)obj+off);; 4992 else; 4993 return (void*)((Longptr_t)obj-off);; 4994 }; 4995 return nullptr;; 4996}; 4997 ; 4998////////////////////////////////////////////////////////////////////////////////; 4999/// Cast obj of this class type up to baseclass cl if up is true.; 5000/// Cast obj of this class type down from baseclass cl if up is false.; 5001/// If this class is not a baseclass of cl return 0, else the pointer; 5002/// to the cl part of this (up) or to this (down).; 5003 ; 5004const void *TClass::DynamicCast(const TClass *cl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:189930,down,down,189930,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['down'],['down']
Availability,"; 4973 return kFALSE;; 4974}; 4975 ; 4976////////////////////////////////////////////////////////////////////////////////; 4977/// Cast obj of this class type up to baseclass cl if up is true.; 4978/// Cast obj of this class type down from baseclass cl if up is false.; 4979/// If this class is not a baseclass of cl return 0, else the pointer; 4980/// to the cl part of this (up) or to this (down).; 4981 ; 4982void *TClass::DynamicCast(const TClass *cl, void *obj, Bool_t up); 4983{; 4984 if (cl == this) return obj;; 4985 ; 4986 if (!HasDataMemberInfo()) return nullptr;; 4987 ; 4988 Int_t off;; 4989 if ((off = GetBaseClassOffset(cl, obj)) != -1) {; 4990 if (up); 4991 return (void*)((Longptr_t)obj+off);; 4992 else; 4993 return (void*)((Longptr_t)obj-off);; 4994 }; 4995 return nullptr;; 4996}; 4997 ; 4998////////////////////////////////////////////////////////////////////////////////; 4999/// Cast obj of this class type up to baseclass cl if up is true.; 5000/// Cast obj of this class type down from baseclass cl if up is false.; 5001/// If this class is not a baseclass of cl return 0, else the pointer; 5002/// to the cl part of this (up) or to this (down).; 5003 ; 5004const void *TClass::DynamicCast(const TClass *cl, const void *obj, Bool_t up); 5005{; 5006 return DynamicCast(cl,const_cast<void*>(obj),up);; 5007}; 5008 ; 5009////////////////////////////////////////////////////////////////////////////////; 5010/// Return a pointer to a newly allocated object of this class.; 5011/// The class must have a default constructor. For meaning of; 5012/// defConstructor, see TClass::IsCallingNew().; 5013///; 5014/// If quiet is true, do no issue a message via Error on case; 5015/// of problems, just return 0.; 5016///; 5017/// The constructor actually called here can be customized by; 5018/// using the rootcint pragma:; 5019/// ~~~ {.cpp}; 5020/// #pragma link C++ ioctortype UserClass;; 5021/// ~~~; 5022/// For example, with this pragma and a class named MyClass,; 5023/// this me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TClass_8cxx_source.html:190700,down,down,190700,doc/master/TClass_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TClass_8cxx_source.html,1,['down'],['down']
Availability,"; 505 ; 506 // draw an axis on the right side; 507 auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; 508 gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; 509 axis->SetLineColor(kRed);; 510 axis->SetTextColor(kRed);; 511 axis->Draw();; 512}; 513End_Macro; 514 ; 515 ; 516\anchor HP07; 517### Statistics Display; 518 ; 519 ; 520The type of information shown in the histogram statistics box can be selected; 521with:; 522 ; 523 gStyle->SetOptStat(mode);; 524 ; 525The `mode` has up to nine digits that can be set to on (1 or 2), off (0).; 526 ; 527 mode = ksiourmen (default = 000001111); 528 k = 1; kurtosis printed; 529 k = 2; kurtosis and kurtosis error printed; 530 s = 1; skewness printed; 531 s = 2; skewness and skewness error printed; 532 i = 1; integral of bins printed; 533 i = 2; integral of bins with option ""width"" printed; 534 o = 1; number of overflows printed; 535 u = 1; number of underflows printed; 536 r = 1; standard deviation printed; 537 r = 2; standard deviation and standard deviation error printed; 538 m = 1; mean value printed; 539 m = 2; mean and mean error values printed; 540 e = 1; number of entries printed; 541 n = 1; name of histogram is printed; 542 ; 543For example:; 544 ; 545 gStyle->SetOptStat(11);; 546 ; 547displays only the name of histogram and the number of entries, whereas:; 548 ; 549 gStyle->SetOptStat(1101);; 550 ; 551displays the name of histogram, mean value and standard deviation.; 552 ; 553<b>WARNING 1:</b> never do:; 554 ; 555 gStyle->SetOptStat(0001111);; 556 ; 557but instead do:; 558 ; 559 gStyle->SetOptStat(1111);; 560 ; 561because `0001111` will be taken as an octal number!; 562 ; 563<b>WARNING 2:</b> for backward compatibility with older versions; 564 ; 565 gStyle->SetOptStat(1);; 566 ; 567is taken as:; 568 ; 569 gStyle->SetOptStat(1111); 570 ; 571To print only the name of the histogram do:; 572 ; 573 gStyle->SetOptStat(1000000001);; 574 ; 575<b>NOTE</b> that in case of 2D histograms, when selecting only underflow;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:24900,error,error,24900,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,4,['error'],['error']
Availability,"; 505 bool zeroErrorY = true;; 506 while (i < gr->GetN() && (zeroErrorX || zeroErrorY)) {; 507 double e2X = ( gr->GetErrorXlow(i) + gr->GetErrorXhigh(i) );; 508 double e2Y = eyl[i] + eyh[i];; 509 zeroErrorX &= (e2X <= 0);; 510 zeroErrorY &= (e2Y <= 0);; 511 ++i;; 512 }; 513 if (zeroErrorX && zeroErrorY); 514 type = BinData::kNoError;; 515 else if (!zeroErrorX && zeroErrorY); 516 type = BinData::kCoordError;; 517 else if (zeroErrorX && !zeroErrorY) {; 518 type = BinData::kAsymError;; 519 fitOpt.fCoordErrors = false;; 520 }; 521 else {; 522 type = BinData::kAsymError;; 523 }; 524 }; 525 ; 526 // need to look also a case when all errors in y are zero; 527 if ( ey != nullptr && type != BinData::kCoordError ) {; 528 int i = 0;; 529 bool zeroError = true;; 530 while (i < gr->GetN() && zeroError) {; 531 if (ey[i] > 0) zeroError = false;; 532 ++i;; 533 }; 534 if (zeroError) type = BinData::kNoError;; 535 }; 536 ; 537 ; 538#ifdef DEBUG; 539 std::cout << ""type is "" << type << "" graph type is "" << gr->IsA()->GetName() << std::endl;; 540#endif; 541 ; 542 return type;; 543}; 544 ; 545BinData::ErrorType GetDataType(const TGraph2D * gr, const DataOptions & fitOpt) {; 546 // get type of data for TGraph2D object; 547 double *ex = gr->GetEX();; 548 double *ey = gr->GetEY();; 549 double *ez = gr->GetEZ();; 550 ; 551 // default case for graphs (when they have errors); 552 BinData::ErrorType type = BinData::kValueError;; 553 // if all errors are zero set option of using errors to 1; 554 if (fitOpt.fErrors1 || ez == nullptr ) {; 555 type = BinData::kNoError;; 556 }; 557 else if ( ex != nullptr && ey!=nullptr && fitOpt.fCoordErrors) {; 558 // check that all errors are not zero; 559 int i = 0;; 560 while (i < gr->GetN() && type != BinData::kCoordError) {; 561 if (ex[i] > 0 || ey[i] > 0) type = BinData::kCoordError;; 562 ++i;; 563 }; 564 }; 565 ; 566 ; 567#ifdef DEBUG; 568 std::cout << ""type is "" << type << "" graph2D type is "" << gr->IsA()->GetName() << std::endl;; 569#endif; 570 ; 571 retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:17029,error,errors,17029,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,4,['error'],['errors']
Availability,"; 547 ; 548Double_t TMVA::Reader::EvaluateMVA( MethodBase* method, Double_t aux ); 549{; 550 // the aux value is only needed for MethodCuts: it sets the; 551 // required signal efficiency; 552 if (method->GetMethodType() == TMVA::Types::kCuts) {; 553 TMVA::MethodCuts* mc = dynamic_cast<TMVA::MethodCuts*>(method);; 554 if(mc); 555 mc->SetTestSignalEfficiency( aux );; 556 }; 557 ; 558 return method->GetMvaValue( (fCalculateError?&fMvaEventError:0),; 559 (fCalculateError?&fMvaEventErrorUpper:0) );; 560}; 561 ; 562////////////////////////////////////////////////////////////////////////////////; 563/// evaluates MVA for given set of input variables; 564 ; 565const std::vector< Float_t >& TMVA::Reader::EvaluateRegression( const TString& methodTag, Double_t aux ); 566{; 567 IMethod* method = 0;; 568 ; 569 std::map<TString, IMethod*>::iterator it = fMethodMap.find( methodTag );; 570 if (it == fMethodMap.end()) {; 571 Log() << kINFO << ""<EvaluateMVA> unknown method in map; ""; 572 << ""you looked for \"""" << methodTag << ""\"" within available methods: "" << Endl;; 573 for (it = fMethodMap.begin(); it!=fMethodMap.end(); ++it) Log() << ""--> "" << it->first << Endl;; 574 Log() << ""Check calling string"" << kFATAL << Endl;; 575 }; 576 else method = it->second;; 577 ; 578 MethodBase * kl = dynamic_cast<TMVA::MethodBase*>(method);; 579 ; 580 if(kl==0); 581 Log() << kFATAL << methodTag << "" is not a method"" << Endl;; 582 // check for NaN in event data: (note: in the factory, this check was done already at the creation of the datasets, hence; 583 // it is not again checked in each of these subsequent calls..; 584 const Event* ev = kl->GetEvent();; 585 for (UInt_t i=0; i<ev->GetNVariables(); i++){; 586 if (TMath::IsNaN(ev->GetValue(i))) {; 587 Log() << kERROR << i << ""-th variable of the event is NaN, \n regression values might evaluate to .. what do I know. \n sorry this warning is all I can do, please fix or remove this event."" << Endl;; 588 }; 589 }; 590 ; 591 return this->EvaluateRegress",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Reader_8cxx_source.html:21728,avail,available,21728,doc/master/Reader_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Reader_8cxx_source.html,1,['avail'],['available']
Availability,"; 585 if (nSlots > 1) {; 586 ::Warning(""SetNSlots"", ""Currently the SQlite data source faces performance degradation in multi-threaded mode. ""; 587 ""Consider turning off IMT."");; 588 }; 589 fNSlots = nSlots;; 590}; 591 ; 592////////////////////////////////////////////////////////////////////////////////////////////////; 593/// Helper function to throw an exception if there is a fatal sqlite error, e.g. an I/O error.; 594void RSqliteDS::SqliteError(int errcode); 595{; 596 std::string errmsg = ""SQlite error: "";; 597#if SQLITE_VERSION_NUMBER < 3007015; 598 errmsg += std::to_string(errcode);; 599#else; 600 errmsg += sqlite3_errstr(errcode);; 601#endif; 602 throw std::runtime_error(errmsg);; 603}; 604 ; 605} // namespace RDF; 606 ; 607} // namespace ROOT; RRawFile.hxx; RSqliteDS.hxx; Long64_tlong long Long64_tDefinition RtypesCore.h:69; ULong64_tunsigned long long ULong64_tDefinition RtypesCore.h:70; TError.h; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; N#define N; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char Pixmap_t Pixmap_t PictureAttributes_t attr const char char ret_data h unsigned char height h offsetDefinitio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSqliteDS_8cxx_source.html:25327,error,error,25327,doc/master/RSqliteDS_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RSqliteDS_8cxx_source.html,1,['error'],['error']
Availability,"; 607 ; 608 if (useRange && ( x[0] < xmin || x[0] > xmax) ) continue;; 609 ; 610 // need to evaluate function to know about rejected points; 611 // hugly but no other solutions; 612 if (func) {; 613 TF1::RejectPoint(false);; 614 (*func)( x ); // evaluate using stored function parameters; 615 if (TF1::RejectedPoint() ) continue;; 616 }; 617 ; 618 ; 619 if (fitOpt.fErrors1); 620 dv.Add( gx[i], gy[i] );; 621 ; 622 // for the errors use the getters by index to avoid cases when the arrays are zero; 623 // (like in a case of a graph); 624 else if (type == BinData::kValueError) {; 625 double errorY = gr->GetErrorY(i);; 626 // should consider error = 0 as 1 ? Decide to skip points with zero errors; 627 // in case want to keep points with error = 0 as errrors=1 need to set the option UseEmpty; 628 if (!HFitInterface::AdjustError(fitOpt,errorY) ) continue;; 629 dv.Add( gx[i], gy[i], errorY );; 630 ; 631#ifdef DEBUG; 632 std::cout << ""Point "" << i << "" "" << gx[i] << "" "" << gy[i] << "" "" << errorY << std::endl;; 633#endif; 634 ; 635 ; 636 }; 637 else { // case use error in x or asym errors; 638 double errorX = 0;; 639 if (fitOpt.fCoordErrors); 640 // shoulkd take combined average (sqrt(0.5(e1^2+e2^2)) or math average ?; 641 // gr->GetErrorX(i) returns combined average; 642 // use math average for same behaviour as before; 643 errorX = std::max( 0.5 * ( gr->GetErrorXlow(i) + gr->GetErrorXhigh(i) ) , 0. ) ;; 644 ; 645 ; 646 // adjust error in y according to option; 647 double errorY = std::max(gr->GetErrorY(i), 0.);; 648 // we do not check the return value since we check later if error in X and Y is zero for skipping the point; 649 HFitInterface::AdjustError(fitOpt, errorY);; 650 ; 651 // skip points with total error = 0; 652 if ( errorX <=0 && errorY <= 0 ) continue;; 653 ; 654 ; 655 if (type == BinData::kAsymError) {; 656 // asymmetric errors; 657 dv.Add( gx[i], gy[i], errorX, gr->GetErrorYlow(i), gr->GetErrorYhigh(i) );; 658 }; 659 else {; 660 // case symmetric Y errors; 661 dv.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:20233,error,errorY,20233,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,5,['error'],"['error', 'errorX', 'errorY', 'errors']"
Availability,"; 6580 // Rely on TROOT::RecursiveRemove to take the readlock.; 6581 ; 6582 if (fFunctions) {; 6583 if (!fFunctions->TestBit(kInvalidObject)) fFunctions->RecursiveRemove(obj);; 6584 }; 6585}; 6586 ; 6587////////////////////////////////////////////////////////////////////////////////; 6588/// Multiply this histogram by a constant c1.; 6589///; 6590/// `this = c1*this`; 6591///; 6592/// Note that both contents and errors (if any) are scaled.; 6593/// This function uses the services of TH1::Add; 6594///; 6595/// IMPORTANT NOTE: Sumw2() is called automatically when scaling.; 6596/// If you are not interested in the histogram statistics you can call; 6597/// Sumw2(kFALSE) or use the option ""nosw2""; 6598///; 6599/// One can scale a histogram such that the bins integral is equal to; 6600/// the normalization parameter via TH1::Scale(Double_t norm), where norm; 6601/// is the desired normalization divided by the integral of the histogram.; 6602///; 6603/// If option contains ""width"" the bin contents and errors are divided; 6604/// by the bin width.; 6605 ; 6606void TH1::Scale(Double_t c1, Option_t *option); 6607{; 6608 ; 6609 TString opt = option; opt.ToLower();; 6610 // store bin errors when scaling since cannot anymore be computed as sqrt(N); 6611 if (!opt.Contains(""nosw2"") && GetSumw2N() == 0) Sumw2();; 6612 if (opt.Contains(""width"")) Add(this, this, c1, -1);; 6613 else {; 6614 if (fBuffer) BufferEmpty(1);; 6615 for(Int_t i = 0; i < fNcells; ++i) UpdateBinContent(i, c1 * RetrieveBinContent(i));; 6616 if (fSumw2.fN) for(Int_t i = 0; i < fNcells; ++i) fSumw2.fArray[i] *= (c1 * c1); // update errors; 6617 // update global histograms statistics; 6618 Double_t s[kNstat] = {0};; 6619 GetStats(s);; 6620 for (Int_t i=0 ; i < kNstat; i++) {; 6621 if (i == 1) s[i] = c1*c1*s[i];; 6622 else s[i] = c1*s[i];; 6623 }; 6624 PutStats(s);; 6625 SetMinimum(); SetMaximum(); // minimum and maximum value will be recalculated the next time; 6626 }; 6627 ; 6628 // if contours set, must also sca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:260162,error,errors,260162,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability,"; 6635 ; 6636 do {; 6637 next_seed = inseed = starting_seed;; 6638 ; 6639 // Determine the next seed.; 6640 k = next_seed / 53668;; 6641 next_seed = (next_seed - k*53668)*40014 - k*12211;; 6642 if (next_seed < 0) next_seed += 2147483563;; 6643 ; 6644 val = Double_t(next_seed*4.656613e-10);; 6645 ; 6646 // If more than one thread gets here, one will manage the update; 6647 // of g_iseed the other we go for at least one more round.; 6648 // This is not reproduceable; 6649 } while (! g_iseed.compare_exchange_strong(starting_seed, next_seed) );; 6650 }; 6651}; 6652 ; 6653////////////////////////////////////////////////////////////////////////////////; 6654/// Resets function value and errors to UNDEFINED; 6655///; 6656/// - If IOPT=1,; 6657/// - If IOPT=0, sets only MINOS errors to undefined; 6658/// Called from MNCLER and whenever problem changes, for example; 6659/// after SET LIMITS, SET PARAM, CALL FCN 6; 6660 ; 6661void TMinuit::mnrset(Int_t iopt); 6662{; 6663 Int_t iext, i;; 6664 ; 6665 fCstatu = ""RESET "";; 6666 if (iopt >= 1) {; 6667 fAmin = fUndefi;; 6668 fFval3 = TMath::Abs(fAmin)*2 + 1;; 6669 fEDM = fBigedm;; 6670 fISW[3] = 0;; 6671 fISW[1] = 0;; 6672 fDcovar = 1;; 6673 fISW[0] = 0;; 6674 }; 6675 fLnolim = kTRUE;; 6676 for (i = 1; i <= fNpar; ++i) {; 6677 iext = fNexofi[i-1];; 6678 if (fNvarl[iext-1] >= 4) fLnolim = kFALSE;; 6679 fErp[i-1] = 0;; 6680 fErn[i-1] = 0;; 6681 fGlobcc[i-1] = 0;; 6682 }; 6683 if (fISW[1] >= 1) {; 6684 fISW[1] = 1;; 6685 fDcovar = TMath::Max(fDcovar,.5);; 6686 }; 6687}; 6688 ; 6689////////////////////////////////////////////////////////////////////////////////; 6690/// Writes current parameter values and step sizes onto file ISYSSA; 6691///; 6692/// in format which can be reread by Minuit for restarting.; 6693/// The covariance matrix is also output if it exists.; 6694 ; 6695void TMinuit::mnsave(); 6696{; 6697 Printf(""mnsave is dummy in TMinuit"");; 6698 ; 6699}; 6700 ; 6701///////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:215865,error,errors,215865,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,2,['error'],['errors']
Availability,"; 70 kIsFundamental = 0x00000020,; 71 kIsAbstract = 0x00000040,; 72 kIsVirtual = 0x00000080,; 73 kIsPureVirtual = 0x00000100,; 74 kIsUnionMember = 0x00000100,; 75 kIsPublic = 0x00000200,; 76 kIsProtected = 0x00000400,; 77 kIsPrivate = 0x00000800,; 78 kIsPointer = 0x00001000,; 79 kIsArray = 0x00002000,; 80 kIsStatic = 0x00004000,; 81 kIsDefault = 0x00008000,; 82 kIsReference = 0x00010000,; 83 kIsDirectInherit = 0x00020000,; 84 kIsCCompiled = 0x00040000,; 85 kIsCPPCompiled = kIsCCompiled,; 86 kIsCompiled = kIsCCompiled,; 87 kIsNotReacheable = 0x00080000, // Indicate that the entity can not be used from the Global Namespace; 88 kIsConstant = 0x00100000,; 89 kIsVirtualBase = 0x00200000,; 90 kIsConstPointer = 0x00400000,; 91 kIsScopedEnum = 0x00800000,; 92 // 0x01000000 is available; 93 kIsConstexpr = 0x02000000,; 94 kIsExplicit = 0x04000000,; 95 kIsNamespace = 0x08000000,; 96 kIsConstMethod = 0x10000000,; 97 kIsUsing = 0x20000000,; 98 kIsDefinedInStd = 0x40000000; 99 // 0x80000000 is available; 100};; 101 ; 102enum EFunctionProperty {; 103/* The following are already defined; 104 in EProperty and 'could' be part of this enums */; 105/*; 106 kIsAbstract = 0x00000040,; 107 kIsVirtual = 0x00000080,; 108 kIsPureVirtual = 0x00000100,; 109 kIsPublic = 0x00000200,; 110 kIsProtected = 0x00000400,; 111 kIsPrivate = 0x00000800,; 112 kIsStatic = 0x00004000,; 113 kIsDefault = 0x00008000,; 114 kIsConstexpr = 0x02000000; 115 kIsExplicit = 0x04000000,; 116 kIsConstMethod = 0x10000000,; 117*/; 118/* The following are already defined; 119 in EProperty and related to the type of the return value */; 120/*; 121 kIsConstant = 0x00100000,; 122 kIsPointer = 0x00001000,; 123 kIsArray = 0x00002000,; 124 kIsReference = 0x00010000,; 125 kIsConstPointer = 0x00400000,; 126*/; 127 kIsConstructor = 0x00000001,; 128 kIsConversion = 0x00000002,; 129 kIsDestructor = 0x00000004,; 130 kIsOperator = 0x00000008,; 131 kIsInlined = 0x00000010,; 132 kIsTemplateSpec= 0x00000020; 133};; 134 ; 135enum EClassProp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDictionary_8h_source.html:3558,avail,available,3558,doc/master/TDictionary_8h_source.html,https://root.cern,https://root.cern/doc/master/TDictionary_8h_source.html,2,['avail'],['available']
Availability,"; 7575 assert(fClingCallbacks && ""We must have callbacks!"");; 7576 bool oldVal = fClingCallbacks->IsAutoLoadingEnabled();; 7577 fClingCallbacks->SetAutoLoadingEnabled(autoload);; 7578 return oldVal;; 7579}; 7580 ; 7581////////////////////////////////////////////////////////////////////////////////; 7582/// Enable/Disable the Autoparsing of headers.; 7583/// Returns the old value, i.e whether it was enabled or not.; 7584 ; 7585int TCling::SetClassAutoparsing(int autoparse); 7586{; 7587 bool oldVal = fHeaderParsingOnDemand;; 7588 fHeaderParsingOnDemand = autoparse;; 7589 return oldVal;; 7590}; 7591 ; 7592////////////////////////////////////////////////////////////////////////////////; 7593/// Suspend the Autoparsing of headers.; 7594/// Returns the old value, i.e whether it was suspended or not.; 7595 ; 7596Bool_t TCling::SetSuspendAutoParsing(Bool_t value) {; 7597 Bool_t old = fIsAutoParsingSuspended;; 7598 fIsAutoParsingSuspended = value;; 7599 if (fClingCallbacks) fClingCallbacks->SetAutoParsingSuspended(value);; 7600 return old;; 7601}; 7602 ; 7603////////////////////////////////////////////////////////////////////////////////; 7604/// Set a callback to receive error messages.; 7605 ; 7606void TCling::SetErrmsgcallback(void* p) const; 7607{; 7608#if defined(R__MUST_REVISIT); 7609#if R__MUST_REVISIT(6,2); 7610 Warning(""SetErrmsgcallback"", ""Interface not available yet."");; 7611#endif; 7612#endif; 7613}; 7614 ; 7615void TCling::ReportDiagnosticsToErrorHandler(bool enable); 7616{; 7617 if (enable) {; 7618 auto consumer = new TClingDelegateDiagnosticPrinter(; 7619 &fInterpreter->getDiagnostics().getDiagnosticOptions(),; 7620 fInterpreter->getCI()->getLangOpts(),; 7621 [] (clang::DiagnosticsEngine::Level Level, const std::string &Info) {; 7622 if (Level == clang::DiagnosticsEngine::Warning) {; 7623 ::Warning(""cling"", ""%s"", Info.c_str());; 7624 } else if (Level == clang::DiagnosticsEngine::Error; 7625 || Level == clang::DiagnosticsEngine::Fatal) {; 7626 ::Error(""cling"", """,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:296719,error,error,296719,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['error'],['error']
Availability,"; 834};; 835static double erfR[] = {; 836 5.64189583547755073984E-1,; 837 1.27536670759978104416E0,; 838 5.01905042251180477414E0,; 839 6.16021097993053585195E0,; 840 7.40974269950448939160E0,; 841 2.97886665372100240670E0; 842};; 843static double erfS[] = {; 844/* 1.00000000000000000000E0,*/; 845 2.26052863220117276590E0,; 846 9.39603524938001434673E0,; 847 1.20489539808096656605E1,; 848 1.70814450747565897222E1,; 849 9.60896809063285878198E0,; 850 3.36907645100081516050E0; 851};; 852static double erfT[] = {; 853 9.60497373987051638749E0,; 854 9.00260197203842689217E1,; 855 2.23200534594684319226E3,; 856 7.00332514112805075473E3,; 857 5.55923013010394962768E4; 858};; 859static double erfU[] = {; 860/* 1.00000000000000000000E0,*/; 861 3.35617141647503099647E1,; 862 5.21357949780152679795E2,; 863 4.59432382970980127987E3,; 864 2.26290000613890934246E4,; 865 4.92673942608635921086E4; 866};; 867 ; 868/*---------------------------------------------------------------------------*/; 869/* complementary error function */; 870/* For small x, erfc(x) = 1 - erf(x); otherwise rational */; 871/* approximations are computed. */; 872 ; 873 ; 874double erfc( double a ); 875{; 876 double p,q,x,y,z;; 877 ; 878 ; 879 if( a < 0.0 ); 880 x = -a;; 881 else; 882 x = a;; 883 ; 884 if( x < 1.0 ); 885 return( 1.0 - ROOT::Math::Cephes::erf(a) );; 886 ; 887 z = -a * a;; 888 ; 889 if( z < -kMAXLOG ); 890 {; 891 under:; 892 if( a < 0 ); 893 return( 2.0 );; 894 else; 895 return( 0.0 );; 896 }; 897 ; 898 z = exp(z);; 899 ; 900 if( x < 8.0 ); 901 {; 902 p = Polynomialeval( x, erfP, 8 );; 903 q = Polynomial1eval( x, erfQ, 8 );; 904 }; 905 else; 906 {; 907 p = Polynomialeval( x, erfR, 5 );; 908 q = Polynomial1eval( x, erfS, 6 );; 909 }; 910 y = (z * p)/q;; 911 ; 912 if( a < 0 ); 913 y = 2.0 - y;; 914 ; 915 if( y == 0 ); 916 goto under;; 917 ; 918 return(y);; 919}; 920 ; 921/*---------------------------------------------------------------------------*/; 922/* error function */; 923/* For 0 <= |x| < 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SpecFuncCephes_8cxx_source.html:19363,error,error,19363,doc/master/SpecFuncCephes_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SpecFuncCephes_8cxx_source.html,1,['error'],['error']
Availability,"; 8676 ; 8677 if (!conn || !conn->dom_ctx) {; 8678 return 0;; 8679 }; 8680 ; 8681 list = conn->dom_ctx->config[PROTECT_URI];; 8682 while ((list = next_option(list, &uri_vec, &filename_vec)) != NULL) {; 8683 if (!memcmp(conn->request_info.local_uri, uri_vec.ptr, uri_vec.len)) {; 8684 mg_snprintf(conn,; 8685 &truncated,; 8686 fname,; 8687 sizeof(fname),; 8688 ""%.*s"",; 8689 (int)filename_vec.len,; 8690 filename_vec.ptr);; 8691 ; 8692 if (truncated; 8693 || !mg_fopen(conn, fname, MG_FOPEN_MODE_READ, &file)) {; 8694 mg_cry_internal(conn,; 8695 ""%s: cannot open %s: %s"",; 8696 __func__,; 8697 fname,; 8698 strerror(errno));; 8699 }; 8700 break;; 8701 }; 8702 }; 8703 ; 8704 if (!is_file_opened(&file.access)) {; 8705 open_auth_file(conn, path, &file);; 8706 }; 8707 ; 8708 if (is_file_opened(&file.access)) {; 8709 authorized = authorize(conn, &file, NULL);; 8710 (void)mg_fclose(&file.access); /* ignore error on read only file */; 8711 }; 8712 ; 8713 return authorized;; 8714#else; 8715 (void)conn;; 8716 (void)path;; 8717 return 1;; 8718#endif /* NO_FILESYSTEMS */; 8719}; 8720 ; 8721 ; 8722/* Internal function. Assumes conn is valid */; 8723static void; 8724send_authorization_request(struct mg_connection *conn, const char *realm); 8725{; 8726 uint64_t nonce = (uint64_t)(conn->phys_ctx->start_time);; 8727 int trunc = 0;; 8728 char buf[128];; 8729 ; 8730 if (!realm) {; 8731 realm = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 8732 }; 8733 ; 8734 mg_lock_context(conn->phys_ctx);; 8735 nonce += conn->dom_ctx->nonce_count;; 8736 ++conn->dom_ctx->nonce_count;; 8737 mg_unlock_context(conn->phys_ctx);; 8738 ; 8739 nonce ^= conn->dom_ctx->auth_nonce_mask;; 8740 conn->must_close = 1;; 8741 ; 8742 /* Create 401 response */; 8743 mg_response_header_start(conn, 401);; 8744 send_no_cache_header(conn);; 8745 send_additional_header(conn);; 8746 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 8747 ; 8748 /* Content for ""WWW-Authenticate"" header */; 8749 mg_snprintf(conn,; 8750 &trunc,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:251008,error,error,251008,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 8677 ; 8678 if (!conn || !conn->dom_ctx) {; 8679 return 0;; 8680 }; 8681 ; 8682 list = conn->dom_ctx->config[PROTECT_URI];; 8683 while ((list = next_option(list, &uri_vec, &filename_vec)) != NULL) {; 8684 if (!memcmp(conn->request_info.local_uri, uri_vec.ptr, uri_vec.len)) {; 8685 mg_snprintf(conn,; 8686 &truncated,; 8687 fname,; 8688 sizeof(fname),; 8689 ""%.*s"",; 8690 (int)filename_vec.len,; 8691 filename_vec.ptr);; 8692 ; 8693 if (truncated; 8694 || !mg_fopen(conn, fname, MG_FOPEN_MODE_READ, &file)) {; 8695 mg_cry_internal(conn,; 8696 ""%s: cannot open %s: %s"",; 8697 __func__,; 8698 fname,; 8699 strerror(errno));; 8700 }; 8701 break;; 8702 }; 8703 }; 8704 ; 8705 if (!is_file_opened(&file.access)) {; 8706 open_auth_file(conn, path, &file);; 8707 }; 8708 ; 8709 if (is_file_opened(&file.access)) {; 8710 authorized = authorize(conn, &file, NULL);; 8711 (void)mg_fclose(&file.access); /* ignore error on read only file */; 8712 }; 8713 ; 8714 return authorized;; 8715#else; 8716 (void)conn;; 8717 (void)path;; 8718 return 1;; 8719#endif /* NO_FILESYSTEMS */; 8720}; 8721 ; 8722 ; 8723/* Internal function. Assumes conn is valid */; 8724static void; 8725send_authorization_request(struct mg_connection *conn, const char *realm); 8726{; 8727 uint64_t nonce = (uint64_t)(conn->phys_ctx->start_time);; 8728 int trunc = 0;; 8729 char buf[128];; 8730 ; 8731 if (!realm) {; 8732 realm = conn->dom_ctx->config[AUTHENTICATION_DOMAIN];; 8733 }; 8734 ; 8735 mg_lock_context(conn->phys_ctx);; 8736 nonce += conn->dom_ctx->nonce_count;; 8737 ++conn->dom_ctx->nonce_count;; 8738 mg_unlock_context(conn->phys_ctx);; 8739 ; 8740 nonce ^= conn->dom_ctx->auth_nonce_mask;; 8741 conn->must_close = 1;; 8742 ; 8743 /* Create 401 response */; 8744 mg_response_header_start(conn, 401);; 8745 send_no_cache_header(conn);; 8746 send_additional_header(conn);; 8747 mg_response_header_add(conn, ""Content-Length"", ""0"", -1);; 8748 ; 8749 /* Content for ""WWW-Authenticate"" header */; 8750 mg_snprintf(conn,; 8751 &trunc,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:251040,error,error,251040,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability,"; 9047/// Return pointer to function with name.; 9048///; 9049///; 9050/// Functions such as TH1::Fit store the fitted function in the list of; 9051/// functions of this histogram.; 9052 ; 9053TF1 *TH1::GetFunction(const char *name) const; 9054{; 9055 return (TF1*)fFunctions->FindObject(name);; 9056}; 9057 ; 9058////////////////////////////////////////////////////////////////////////////////; 9059/// Return value of error associated to bin number bin.; 9060///; 9061/// if the sum of squares of weights has been defined (via Sumw2),; 9062/// this function returns the sqrt(sum of w2).; 9063/// otherwise it returns the sqrt(contents) for this bin.; 9064 ; 9065Double_t TH1::GetBinError(Int_t bin) const; 9066{; 9067 if (bin < 0) bin = 0;; 9068 if (bin >= fNcells) bin = fNcells-1;; 9069 if (fBuffer) ((TH1*)this)->BufferEmpty();; 9070 if (fSumw2.fN) return TMath::Sqrt(fSumw2.fArray[bin]);; 9071 ; 9072 return TMath::Sqrt(TMath::Abs(RetrieveBinContent(bin)));; 9073}; 9074 ; 9075////////////////////////////////////////////////////////////////////////////////; 9076/// Return lower error associated to bin number bin.; 9077///; 9078/// The error will depend on the statistic option used will return; 9079/// the binContent - lower interval value; 9080 ; 9081Double_t TH1::GetBinErrorLow(Int_t bin) const; 9082{; 9083 if (fBinStatErrOpt == kNormal) return GetBinError(bin);; 9084 // in case of weighted histogram check if it is really weighted; 9085 if (fSumw2.fN && fTsumw != fTsumw2) return GetBinError(bin);; 9086 ; 9087 if (bin < 0) bin = 0;; 9088 if (bin >= fNcells) bin = fNcells-1;; 9089 if (fBuffer) ((TH1*)this)->BufferEmpty();; 9090 ; 9091 Double_t alpha = 1.- 0.682689492;; 9092 if (fBinStatErrOpt == kPoisson2) alpha = 0.05;; 9093 ; 9094 Double_t c = RetrieveBinContent(bin);; 9095 Int_t n = int(c);; 9096 if (n < 0) {; 9097 Warning(""GetBinErrorLow"",""Histogram has negative bin content-force usage to normal errors"");; 9098 ((TH1*)this)->fBinStatErrOpt = kNormal;; 9099 return GetBinErr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:353855,error,error,353855,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability,"; 91 fM[kXZ] = bgamma * bx * bz;; 92 fM[kYZ] = bgamma * by * bz;; 93 fM[kXT] = gamma * bx;; 94 fM[kYT] = gamma * by;; 95 fM[kZT] = gamma * bz;; 96 fM[kTT] = gamma;; 97}; 98 ; 99void Boost::GetComponents (Scalar& bx, Scalar& by, Scalar& bz) const {; 100 // get beta of the boots as 3 components; 101 Scalar gaminv = 1.0/fM[kTT];; 102 bx = fM[kXT]*gaminv;; 103 by = fM[kYT]*gaminv;; 104 bz = fM[kZT]*gaminv;; 105}; 106 ; 107DisplacementVector3D< Cartesian3D<Boost::Scalar> >; 108Boost::BetaVector() const {; 109 // get boost beta vector; 110 Scalar gaminv = 1.0/fM[kTT];; 111 return DisplacementVector3D< Cartesian3D<Scalar> >; 112 ( fM[kXT]*gaminv, fM[kYT]*gaminv, fM[kZT]*gaminv );; 113}; 114 ; 115void Boost::GetLorentzRotation (Scalar r[]) const {; 116 // get Lorentz rotation corresponding to this boost as an array of 16 values; 117 r[kLXX] = fM[kXX]; r[kLXY] = fM[kXY]; r[kLXZ] = fM[kXZ]; r[kLXT] = fM[kXT];; 118 r[kLYX] = fM[kXY]; r[kLYY] = fM[kYY]; r[kLYZ] = fM[kYZ]; r[kLYT] = fM[kYT];; 119 r[kLZX] = fM[kXZ]; r[kLZY] = fM[kYZ]; r[kLZZ] = fM[kZZ]; r[kLZT] = fM[kZT];; 120 r[kLTX] = fM[kXT]; r[kLTY] = fM[kYT]; r[kLTZ] = fM[kZT]; r[kLTT] = fM[kTT];; 121}; 122 ; 123void Boost::Rectify() {; 124 // Assuming the representation of this is close to a true Lorentz Rotation,; 125 // but may have drifted due to round-off error from many operations,; 126 // this forms an ""exact"" orthosymplectic matrix for the Lorentz Rotation; 127 // again.; 128 ; 129 if (fM[kTT] <= 0) {; 130 GenVector::Throw (; 131 ""Attempt to rectify a boost with non-positive gamma"");; 132 return;; 133 }; 134 DisplacementVector3D< Cartesian3D<Scalar> > beta ( fM[kXT], fM[kYT], fM[kZT] );; 135 beta /= fM[kTT];; 136 if ( beta.mag2() >= 1 ) {; 137 beta /= ( beta.R() * ( 1.0 + 1.0e-16 ) );; 138 }; 139 SetComponents ( beta );; 140}; 141 ; 142LorentzVector< PxPyPzE4D<double> >; 143Boost::operator() (const LorentzVector< PxPyPzE4D<double> > & v) const {; 144 // apply bosost to a PxPyPzE LorentzVector; 145 Scalar x = v.Px();; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Boost_8cxx_source.html:4345,error,error,4345,doc/master/Boost_8cxx_source.html,https://root.cern,https://root.cern/doc/master/Boost_8cxx_source.html,1,['error'],['error']
Availability,"; 9104 ; 9105////////////////////////////////////////////////////////////////////////////////; 9106/// Set number of entries to estimate variable limits.; 9107/// If n is -1, the estimate is set to be the current maximum; 9108/// for the tree (i.e. GetEntries() + 1); 9109/// If n is less than -1, the behavior is undefined.; 9110 ; 9111void TTree::SetEstimate(Long64_t n /* = 1000000 */); 9112{; 9113 if (n == 0) {; 9114 n = 10000;; 9115 } else if (n < 0) {; 9116 n = fEntries - n;; 9117 }; 9118 fEstimate = n;; 9119 GetPlayer();; 9120 if (fPlayer) {; 9121 fPlayer->SetEstimate(n);; 9122 }; 9123}; 9124 ; 9125////////////////////////////////////////////////////////////////////////////////; 9126/// Provide the end-user with the ability to enable/disable various experimental; 9127/// IO features for this TTree.; 9128///; 9129/// Returns all the newly-set IO settings.; 9130 ; 9131ROOT::TIOFeatures TTree::SetIOFeatures(const ROOT::TIOFeatures &features); 9132{; 9133 // Purposely ignore all unsupported bits; TIOFeatures implementation already warned the user about the; 9134 // error of their ways; this is just a safety check.; 9135 UChar_t featuresRequested = features.GetFeatures() & static_cast<UChar_t>(TBasket::EIOBits::kSupported);; 9136 ; 9137 UChar_t curFeatures = fIOFeatures.GetFeatures();; 9138 UChar_t newFeatures = ~curFeatures & featuresRequested;; 9139 curFeatures |= newFeatures;; 9140 fIOFeatures.Set(curFeatures);; 9141 ; 9142 ROOT::TIOFeatures newSettings(newFeatures);; 9143 return newSettings;; 9144}; 9145 ; 9146////////////////////////////////////////////////////////////////////////////////; 9147/// Set fFileNumber to number.; 9148/// fFileNumber is used by TTree::Fill to set the file name; 9149/// for a new file to be created when the current file exceeds fgTreeMaxSize.; 9150/// (see TTree::ChangeFile); 9151/// if fFileNumber=10, the new file name will have a suffix ""_11"",; 9152/// ie, fFileNumber is incremented before setting the file name; 9153 ; 9154void TTree:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:353021,error,error,353021,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['error'],['error']
Availability,"; 911 range.GetRange(xmin,xmax,ymin,ymax);; 912 ; 913 dv.Initialize(nPoints,2, type);; 914 ; 915 for ( int i = 0; i < nPoints; ++i) {; 916 ; 917 x[0] = gx[i];; 918 x[1] = gy[i];; 919 ; 920 //if (fitOpt.fUseRange && HFitInterface::IsPointOutOfRange(func, x) ) continue;; 921 if (useRangeX && ( x[0] < xmin || x[0] > xmax) ) continue;; 922 if (useRangeY && ( x[1] < ymin || x[1] > ymax) ) continue;; 923 ; 924 // need to evaluate function to know about rejected points; 925 // hugly but no other solutions; 926 if (func) {; 927 TF1::RejectPoint(false);; 928 (*func)( x ); // evaluate using stored function parameters; 929 if (TF1::RejectedPoint() ) continue;; 930 }; 931 ; 932 if (type == BinData::kNoError) {; 933 dv.Add( x, gz[i] );; 934 continue;; 935 }; 936 ; 937 double errorZ = gr->GetErrorZ(i);; 938 if (!HFitInterface::AdjustError(fitOpt,errorZ) ) continue;; 939 ; 940 if (type == BinData::kValueError) {; 941 dv.Add( x, gz[i], errorZ );; 942 }; 943 else if (type == BinData::kCoordError) { // case use error in coordinates (x and y); 944 ex[0] = std::max(gr->GetErrorX(i), 0.);; 945 ex[1] = std::max(gr->GetErrorY(i), 0.);; 946 dv.Add( x, gz[i], ex, errorZ );; 947 }; 948 else; 949 assert(0); // should not go here; 950 ; 951#ifdef DEBUG; 952 std::cout << ""Point "" << i << "" "" << gx[i] << "" "" << gy[i] << "" "" << errorZ << std::endl;; 953#endif; 954 ; 955 }; 956 ; 957#ifdef DEBUG; 958 std::cout << ""THFitInterface::FillData Graph2D FitData size is "" << dv.Size() << std::endl;; 959#endif; 960 ; 961}; 962 ; 963 ; 964// confidence intervals; 965bool GetConfidenceIntervals(const TH1 * h1, const ROOT::Fit::FitResult & result, TGraphErrors * gr, double cl ) {; 966 if (h1->GetDimension() != 1) {; 967 Error(""GetConfidenceIntervals"",""Invalid object used for storing confidence intervals"");; 968 return false;; 969 }; 970 // fill fit data sets with points to estimate cl.; 971 BinData d;; 972 FillData(d,h1,nullptr);; 973 gr->Set(d.NPoints() );; 974 double * ci = gr->GetEY(); // make CL values err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:30640,error,errorZ,30640,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,2,['error'],"['error', 'errorZ']"
Availability,"; 960 ::ErrorHandler(level, Form(""%s::%s"", classname, location), fmt, va);; 961}; 962 ; 963////////////////////////////////////////////////////////////////////////////////; 964/// Issue info message. Use ""location"" to specify the method where the; 965/// warning occurred. Accepts standard printf formatting arguments.; 966 ; 967void TObject::Info(const char *location, const char *va_(fmt), ...) const; 968{; 969 va_list ap;; 970 va_start(ap, va_(fmt));; 971 DoError(kInfo, location, va_(fmt), ap);; 972 va_end(ap);; 973}; 974 ; 975////////////////////////////////////////////////////////////////////////////////; 976/// Issue warning message. Use ""location"" to specify the method where the; 977/// warning occurred. Accepts standard printf formatting arguments.; 978 ; 979void TObject::Warning(const char *location, const char *va_(fmt), ...) const; 980{; 981 va_list ap;; 982 va_start(ap, va_(fmt));; 983 DoError(kWarning, location, va_(fmt), ap);; 984 va_end(ap);; 985 if (TROOT::Initialized()); 986 gROOT->Message(1001, this);; 987}; 988 ; 989////////////////////////////////////////////////////////////////////////////////; 990/// Issue error message. Use ""location"" to specify the method where the; 991/// error occurred. Accepts standard printf formatting arguments.; 992 ; 993void TObject::Error(const char *location, const char *va_(fmt), ...) const; 994{; 995 va_list ap;; 996 va_start(ap, va_(fmt));; 997 DoError(kError, location, va_(fmt), ap);; 998 va_end(ap);; 999 if (TROOT::Initialized()); 1000 gROOT->Message(1002, this);; 1001}; 1002 ; 1003////////////////////////////////////////////////////////////////////////////////; 1004/// Issue system error message. Use ""location"" to specify the method where; 1005/// the system error occurred. Accepts standard printf formatting arguments.; 1006 ; 1007void TObject::SysError(const char *location, const char *va_(fmt), ...) const; 1008{; 1009 va_list ap;; 1010 va_start(ap, va_(fmt));; 1011 DoError(kSysError, location, va_(fmt), ap);; 10",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TObject_8cxx_source.html:36557,error,error,36557,doc/master/TObject_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TObject_8cxx_source.html,1,['error'],['error']
Availability,; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 | 3.05672 2.86026 0.0203982 0.00182711 43077.7 0; : 1068 | 3.10603 3.29637 0.020205 0.00184144 43564.6 1; : 1069 | 2.88449 4.01918 0.0203768 0.00179741 43058.4 2; : 1070 | 2.97807 3.34364 0.0200746 0.00174903 43654.8 3; : 1071 | 3.12106 3.50221 0.0203054 0.0017782 43179.8 4; : 1072 | 2.87393 2.91962 0.020149 0.001768 43523.2 5; : 1073 | 2.90826 3.29161 0.0202848 0.00180763 43296.8 6; : 1074 | 3.06053 3.26664 0.0201588 0.00175733 43474.8 7; : 1075 Minimum Test error found - save the configuration ; : 1075 | 2.97935 2.76485 0.0202008 0.00187279 43649.1 0; : 1076 | 2.74949 3.00321 0.0203478 0.00181324 43162.6 1; : 1077 | 2.76284 3.75591 0.0207943 0.00180912 42138.1 2; : 1078 Minimum Test error found - save the configuration ; : 1078 | 3.00913 2.73577 0.0203661 0.0018517 43209.6 0; : 1079 | 2.90364 3.01716 0.0202612 0.00175591 43230.9 1; : 1080 | 2.84249 3.41706 0.0201644 0.00176658 43483.3 2; : 1081 | 2.8573 3.42383 0.0204284 0.00175777 42848.1 3; : 1082 | 2.95876 3.1107 0.0202233 0.0017991 43421.1 4; : 1083 | 3.17127 3.26207 0.0202854 0.00175889 43181.4 5; : 1084 | 2.91564 2.7548 0.0203094 0.00175846 43124.6 6; : 1085 Minimum Test error found - save the configuration ; : 1085 | 2.63022 2.66906 0.0203531 0.00186599 43273.3 0; : 1086 | 3.10333 2.86337 0.0200994 0.00175565 43611.6 1; : 1087 | 2.9523 3.05621 0.0202345 0.00180564 43410.1 2; : 1088 | 2.96621 3.82134 0.0204023 0.0017658 42926.6 3; : 1089 | 2.9107 3.10267 0.0201393 0.00176662 43542.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.7,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:118252,error,error,118252,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2.28835 2.14929 0.0200647 0.00175706 43697.6 6; : 1154 Minimum Test error found - save the configuration ; : 1154 | 2.32858 2.0616 0.0201066 0.00182104 43750.5 0; : 1155 | 2.28245 2.19923 0.0201625 0.00180627 43581.8 1; : 1156 | 2.38727 2.77806 0.0202008 0.00175311 43365.8 2; : 1157 | 2.61021 2.4986 0.0209687 0.00176336 41655.1 3; : 1158 | 2.53941 2.59597 0.020405 0.00180555 43012.1 4; : 1159 | 2.53249 2.63389 0.0200503 0.0017649 43750.8 5; : 1160 | 2.39348 2.24444 0.0200488 0.00176513 43755 6; : 1161 | 2.30038 2.13197 0.0204918 0.00181558 42835.3 7; : 1162 Minimum Test error found - save the configuration ; : 1162 | 2.21969 1.9774 0.0206437 0.00187006 42613 0; : 1163 | 2.20889 2.16481 0.0203089 0.00190977 43480.4 1; : 1164 | 2.32653 2.11805 0.0202989 0.00175782 43147.4 2; : 1165 | 2.26223 2.61923 0.0203169 0.00186365 43352.9 3; : 1166 | 2.59301 2.86154 0.0206764 0.00184185 42475.2 4; : 1167 | 2.39489 2.21164 0.0202088 0.00175636 43354.8 5; : 1168 | 2.45742 2.7258 0.0202361 0.0017857 43359.5 6; : 1169 | 2.47938 2.08631 0.0200606 0.0017639 43723.7 7; : 1170 | 2.25795 2.35353 0.0205688 0.00182589 42682.7 8; : 1171 | 2.33921 2.38906 0.0208707 0.00178716 41921 9; : 1172 | 2.37002 2.34399 0.0201553 0.00175633 43480.6 10; : 1173 | 2.42741 2.58076 0.0200421 0.00174997 43734.7 11; : 1174 | 2.37753 2.26267 0.0200588 0.00177748 43760.5 12; : 1175 | 2.22445 2.16696 0.0202566 0.0017593 43249.6 13; : 1176 | 2.40448 2.17977 0.0200526 0.00175764 43727.8 14; : 1177 | 2.49342 2.82323 0.0202598 0.00176322 43251.3 15; : 1178 | 2.31353 3.17049 0.0200462 0.00175709 43741.9 16; : 1179 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:123589,error,error,123589,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 188 | 6552.47 5592.04 0.0200898 0.00181079 43766 0; : 189 Minimum Test error found - save the configuration ; : 189 | 6500.15 5537.2 0.0201183 0.00181031 43696.6 0; : 190 Minimum Test error found - save the configuration ; : 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33187,error,error,33187,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:34772,error,error,34772,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:34885,error,error,34885,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:35112,error,error,35112,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum Test error found - save the configuration ; : 222 | 4960.27 4023.61 0.020233 0.0018342 43481.1 0; : 223 Minimum Test error found - save the configuration ; : 223 | 4919.35 3984.02 0.0201371 0.00181764 43669.4 0; : 224 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:35226,error,error,35226,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 227 | 4760.29 3830.98 0.0201923 0.00181512 43532.4 0; : 228 Minimum Test error found - save the configuration ; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37604,error,error,37604,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 228 | 4721.11 3793.89 0.0201034 0.00181119 43734.4 0; : 229 Minimum Test error found - save the configuration ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37718,error,error,37718,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38173,error,error,38173,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38741,error,error,38741,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 260 | 3624.6 2748.54 0.0206258 0.00186298 42637.5 0; : 261 Minimum Test error found - save the configuration ; : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41343,error,error,41343,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41570,error,error,41570,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41684,error,error,41684,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42024,error,error,42024,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42138,error,error,42138,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42252,error,error,42252,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42366,error,error,42366,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42480,error,error,42480,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45653,error,error,45653,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45767,error,error,45767,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47359,error,error,47359,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57885,error,error,57885,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57999,error,error,57999,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58113,error,error,58113,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58227,error,error,58227,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58341,error,error,58341,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58455,error,error,58455,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58796,error,error,58796,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:59023,error,error,59023,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Test error found - save the configuration ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:59137,error,error,59137,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test error found - save the configuration ; : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test error found - save the configuration ; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test error found - save the configuration ; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test e,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:61178,error,error,61178,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test error found - save the configuration ; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test error found - save the configuration ; : 453 | 615.499 330.282 0.0202258 0.00184415 43521.7 0; : 454 Minimum Test error found - save the configuration ; : 454 | 608.831 326.391 0.0201257 0.00180567 43668.1 0; : 455 Minimum Test error found - save the configuration ; : 455 | 602.478 323.085 0.0201467 0.00181706 43645.1 0; : 456 Minimum Test error found - save the configuration ; : 456 | 596.625 319.828 0.0201415 0.00181382 43649.8 0; : 457 Minimum Test error found - save the configuration ; : 457 | 590.662 316.621 0.0201112 0.00181253 43718.9 0; : 458 Minimum Test error found - save the configuration ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:62988,error,error,62988,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test error found - save the configuration ; : 453 | 615.499 330.282 0.0202258 0.00184415 43521.7 0; : 454 Minimum Test error found - save the configuration ; : 454 | 608.831 326.391 0.0201257 0.00180567 43668.1 0; : 455 Minimum Test error found - save the configuration ; : 455 | 602.478 323.085 0.0201467 0.00181706 43645.1 0; : 456 Minimum Test error found - save the configuration ; : 456 | 596.625 319.828 0.0201415 0.00181382 43649.8 0; : 457 Minimum Test error found - save the configuration ; : 457 | 590.662 316.621 0.0201112 0.00181253 43718.9 0; : 458 Minimum Test error found - save the configuration ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:63102,error,error,63102,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 472 | 505.541 272.006 0.0201116 0.0018163 43727.1 0; : 473 Minimum Test error found - save the configuration ; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Test error found - save the configuration ; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Test error found - save the configuration ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Test error found - save the configuration ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum Test error found - save the configuration ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:65368,error,error,65368,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 473 | 500.494 269.395 0.0201254 0.00181777 43697.5 0; : 474 Minimum Test error found - save the configuration ; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Test error found - save the configuration ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Test error found - save the configuration ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum Test error found - save the configuration ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:65481,error,error,65481,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 474 | 495.466 266.483 0.0201058 0.00181722 43743.1 0; : 475 Minimum Test error found - save the configuration ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Test error found - save the configuration ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum Test error found - save the configuration ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:65595,error,error,65595,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66732,error,error,66732,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70475,error,error,70475,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70589,error,error,70589,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70703,error,error,70703,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70817,error,error,70817,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85480,error,error,85480,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85594,error,error,85594,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86048,error,error,86048,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86218,error,error,86218,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error found - save the configuration ; : 783 | 12.8267 16.1842 0.0201195 0.00182779 43735.8 0; : 784 Minimum Test error found - save the configuration ; : 784 | 12.4995 16.0856 0.0201584 0.00184241 43677.8 0; : 785 Minimum Test error found - save the configuration ; : 785 | 12.0807 15.9892 0.0201102 0.00181891 43736.6 0; : 786 Minimum Test error found - save the configuration ; : 786 | 12.1859 15.8365 0.0202015 0.00183664 43561.5 0; : 787 Minimum Test error found - save the configuration ; : 787 | 12.2089 15.7994 0.0201254 0.00182497 43714.8 0; : 788 Minimum Test error found - save the configuration ; : 788 | 11.8962 15.4841 0.0201259 0.00183192 43730.1 0; : 789 | 11.7703 15.6571 0.0200815 0.00176624 43679.3 1; : 790 Minimum Test error found - save the configuration ; : 790 | 11.5659 15.3611 0.0201716 0.00184466 43651.5 0; : 791 Minimum Test error found - save the configuration ; : 791 | 11.5078 15.2368 0.0201178 0.00182919 43743 0; : 792 | 11.3858 15.3308 0.0200358 0.001762 43778.5 1; : 793 Minimum Test error found - save the configuration ; : 793 | 11.148 14.9168 0.0201055 0.00182242 43756.2 0; : 794 Minimum Test error found - save the configuration ; : 794 | 10.9366 14.9107 0.0201153 0.00182387 43736.3 0; : 795 | 11.1392 14.953 0.020041 0.00176266 43767.6 1; : 796 | 11.1019 15.4101 0.0200549 0.00175791 43723.2 2; : 797 | 11.12 15.292 0.0200628 0.00175972 43708.5 3; : 798 | 10.8935 14.9786 0.0200585 0.0017545 43706.3 4; : 799 Minimum Test error found - save the configuration ; : 799 | 10.7942 14.6749 0.0201633 0.00182171 43616.6 0; : 800 Minimum Test error found - save the configuration ; : 800 | 10.3317 14.1583 0.0201165 0.00182126 43727.2 0; : 801 | 10.3503 14.2866 0.0200523 0.00175781 43729 1; : 802 | 10.3453 15.2815 0.0200406 0.00175563 43751.8 2; : 803 | 10.2123 14.6873 0.0200478 0.00175638 43736.3 3; : 804 | 10.1133 14.2109 0.0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:97678,error,error,97678,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability,"; Add line with text in the list of lines of this macro. Returns 0 in; case of error, otherwise the added TObjString. void Browse(TBrowser* b); When clicking in the browser, the following action is performed; on this macro, depending the content of the variable TMacro.Browse.; TMacro.Browse can be set in the system.rootrc or .rootrc file like; TMacro.Browse : Action; or set via gEnv->SetValue, eg; gEnv->SetValue(""TMacro.Browse"",""Print"");; By default TMacro.Browse=""""; -if TMacro.Browse ="""" the macro is executed; -if TMacro.Browse =""Print"" the macro is printed in stdout; -if TMacro.Browse is of the form ""mymacro.C""; the macro void mymacro.C(TMacro *m) is called where m=this macro; An example of macro.C saving the macro into a file and viewing it; with emacs is shown below:; void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }. TMD5 * Checksum(); Returns checksum of the current content. The returned TMD5 object must; be deleted by the user. Returns 0 in case of error. Long_t Exec(const char* params = 0, Int_t* error = 0); Execute this macro with params, if params is 0, default parameters; (set via SetParams) are used.; error is set to an TInterpreter::EErrorCode by TApplication::ProcessLine().; Returns the result of the macro (return value or value of the last; expression), cast to a Long_t. TObjString * GetLineWith(const char* text) const; Search the first line containing text. void Paint(Option_t* option = """"); Execute this macro (called by TPad::Paint). void Print(Option_t* option = """") const; Print contents of this macro. Int_t ReadFile(const char* filename); Read lines in filename in this macro. void SaveSource(const char* filename); Save macro source in filename. void SaveSource(FILE* fp); Save macro source in file pointer fp. void SavePrimitive(ostream& out, Option_t* option = """"); Save macro source on stream out. void SetParams(const char* params = 0); Set default parameters to execute this macro. TList * GetListOfLines() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMacro.html:8645,error,error,8645,root/html534/TMacro.html,https://root.cern,https://root.cern/root/html534/TMacro.html,1,['error'],['error']
Availability,"; Any command entered in the Command combo box will be passed to the CINT interpreter. This combo box will keep the commands history and will allow you to re-execute the same commands during an editor session.; Keyboard Bindings; The following table lists the keyboard shortcuts and accelerator keys. Key: Action . Up Move cursor up. . Shift+Up Move cursor up and extend selection. . Down Move cursor down. . Shift+Down Move cursor down and extend selection. . Left Move cursor left. . Shift+Left Move cursor left and extend selection. . Right Move cursor right. . Shift+Right Move cursor right and extend selection. . Home Move cursor to begin of line. . Shift+Home Move cursor to begin of line and extend selection. . Ctrl+Home Move cursor to top of page. . End Move cursor to end of line. . Shift+End Move cursor to end of line and extend selection. . Ctrl+End Move cursor to end of page. . PgUp Move cursor up one page. . Shift+PgUp Move cursor up one page and extend selection. . PgDn Move cursor down one page. . Shift+PgDn Move cursor down one page and extend selection. . Delete Delete character after cursor, or text selection. . BackSpace Delete character before cursor, or text selection. . Ctrl+B Move cursor left. . Ctrl+D Delete character after cursor, or text selection. . Ctrl+E Move cursor to end of line. . Ctrl+H Delete character before cursor, or text selection. . Ctrl+K Delete characters from current position to the end of line. . Ctrl+U Delete current line. . Definition at line 33 of file TGTextEditor.h. Public Member Functions;  TGTextEditor (const char *filename=nullptr, const TGWindow *p=nullptr, UInt_t w=900, UInt_t h=600);  TGTextEditor constructor with file name as first argument. ;  ;  TGTextEditor (TMacro *macro, const TGWindow *p=nullptr, UInt_t w=0, UInt_t h=0);  TGTextEditor constructor with pointer to a TMacro as first argument. ;  ;  ~TGTextEditor () override;  TGTextEditor destructor. ;  ; void About ();  Display ROOT splash screen. ;  ; void AddLine (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEditor.html:4203,down,down,4203,doc/master/classTGTextEditor.html,https://root.cern,https://root.cern/doc/master/classTGTextEditor.html,1,['down'],['down']
Availability,"; Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgrThe cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Int_t_ipOrderInterpolation order for cache histograms; Bool_tRooAbsArg::_isConstant! Cached isConstant status; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsCachedPdf.html:43553,error,errors,43553,root/html602/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsCachedPdf.html,2,['error'],['errors']
Availability,"; Bool_t_profile; Int_t_status; static TVirtualFitter*_theFitter; TStopwatch_timer; Bool_t_verbose; Int_t_warnLevel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup method called by atexit handler installed by RooSentinel; to delete all global heap objects when the program is terminated. RooMinuit(RooAbsReal& function); Construct MINUIT interface to given function. Function can be anything,; but is typically a -log(likelihood) implemented by RooNLLVar or a chi^2; (implemented by RooChi2Var). Other frequent use cases are a RooAddition; of a RooNLLVar plus a penalty or constraint term. This class propagates; all RooFit information (floating parameters, their values and errors); to MINUIT before each MINUIT call and propagates all MINUIT information; back to the RooFit object at the end of each call (updated parameter; values, their (asymmetric errors) etc. The default MINUIT error level; for HESSE and MINOS error analysis is taken from the defaultErrorLevel(); value of the input function. ~RooMinuit(); Destructor. void setStrategy(Int_t strat); Change MINUIT strategy to istrat. Accepted codes; are 0,1,2 and represent MINUIT strategies for dealing; most efficiently with fast FCNs (0), expensive FCNs (2); and 'intermediate' FCNs (1). void setErrorLevel(Double_t level); Set the level for MINUIT error analysis to the given; value. This function overrides the default value; that is taken in the RooMinuit constructor from; the defaultErrorLevel() method of the input function. void setEps(Double_t eps); Change MINUIT epsilon. RooFitResult* fit(const char* options); Parse traditional RooAbsPdf::fitTo driver options. s - Run Hesse first to estimate initial step size; m - Run Migrad only; h - Run Hesse to estimate errors; v - Verbose mode; l - Log parameters after each Minuit steps to file; t - Activate profile timer; r - Save fit result; 0 - Run Migrad with strategy 0. Int_t migrad(); Execute MIGRAD. Changes in ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMinuit.html:8663,error,error,8663,root/html526/RooMinuit.html,https://root.cern,https://root.cern/root/html526/RooMinuit.html,6,['error'],['error']
Availability,"; Bool_tfIsRemoteTrue if the repository is remote; TStringfListFileFile to check repository updates; TStringfLocalCacheDirLocal cache when the repository is remote; Int_tfLockFileTimeLimitLimit in seconds after a lock automatically expires; TStringfMSSUrlURL for the Mass Storage System; TStringfStageOptsOption string to be used in issuing staging requests; Bool_tfUseCacheTrue if the cache is used for browsing remote repositories. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TDataSetManagerFile(const char* group, const char* user, const char* ins). Main constructor. TDataSetManagerFile(const char* ins). Main constructor. void Init(); Do the real inititialization. void InitLocalCache(); Init the local cache if required. void ParseInitOpts(const char* opts); Parse the input string and set the init bits accordingly; Format is; dir:<datasetdir> [mss:<mss-url>] [opt:<base-options>]; The <datasetdir> is mandatory.; See TDataSetManager::ParseInitOpts for the available; base options.; The base options are laready initialized by the base constructor. const char * GetDataSetPath(const char* group, const char* user, const char* dsName, TString& md5path, Bool_t local = kFALSE); Returns path of the indicated dataset. The extension is '.root' for all files; except for 'dsName==ls' which have extension '.txt'.; If 'local' is kTRUE the local cache path is returned instead in the form; <cachedir>/<group>.<user>.<dsName>.<ext>.; NB: contains a static TString for result, so copy result before using twice. Int_t NotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated; or created or modified dataset. For still existing datasets, fill the; modification date in seconds anf the checksum.; Returns 0 on success, -1 on error. Int_t CreateLsFile(const char* group, const char* user, Long_t& mtime, TString& checksum); Crea",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:12294,avail,available,12294,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,3,['avail'],['available']
Availability,"; Bool_t HandleButton (Event_t *event) override;  Handle mouse button event in text edit widget. ;  ; Bool_t HandleCrossing (Event_t *event) override;  Handle mouse crossing event. ;  ; Bool_t HandleDoubleClick (Event_t *event) override;  Handle double click event. ;  ; Bool_t HandleFocusChange (Event_t *event) override;  Handle focus change event in text edit widget. ;  ; Bool_t HandleKey (Event_t *event) override;  The key press event handler converts a key press to some line editor action. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion event in text edit widget. ;  ; Bool_t HandleSelection (Event_t *event) override;  Handle selection notify event. ;  ; Bool_t HandleTimer (TTimer *t) override;  Handle timer cursor blink timer. ;  ; virtual void Home ();  Move to beginning of line. ;  ; virtual void InsChar (char character);  Insert a character in the text edit widget. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsCursorEnabledithoutFocus () const;  ; virtual Bool_t IsMenuEnabled () const;  ; virtual void LineDown ();  Move one line down. ;  ; virtual void LineUp ();  Make current position first line in window by scrolling up. ;  ; virtual void NextChar ();  Go to next character. ;  ; virtual void Opened ();  ; virtual Bool_t Paste ();  Paste text into widget. ;  ; virtual void PrevChar ();  Go to the previous character. ;  ; void Print (Option_t *="""") const override;  Send current buffer to printer. ;  ; Bool_t ProcessMessage (Longptr_t msg, Longptr_t parm1, Longptr_t parm2) override;  Process context menu messages. ;  ; virtual Bool_t Replace (TGLongPosition pos, const char *oldText, const char *newText, Bool_t direction, Bool_t caseSensitive);  Replace text starting at textPos. ;  ; Long_t ReturnLongestLineWidth () override;  Return width of longest line in widget. ;  ; virtual void Saved ();  ; virtual void SavedAs ();  ; virtual Bool_t SaveFile (const char *fname, Bool_t saveas=kFALSE);  Save file. ;  ; void SavePrimitive (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:4943,down,down,4943,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,1,['down'],['down']
Availability,"; By default np=1. (np represents the number of pixels).; TGraphErrors; A TGraphErrors is a TGraph with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Picture; Source. {; TCanvas *c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->Draw(""ap"");; return c4;; }; The option ""0"" shows the error bars for data points outside range. Picture; Source. {; TCanvas *c48 = new TCanvas(""c48"",""c48"",200,10,600,400);; float x[] = {1,2,3};; float err_x[] = {0,0,0};; float err_y[] = {5,5,5};; float y[] = {1,4,9};; TGraphErrors tg(3,x,y,err_x,err_y);; c48->Divide(2,1);; c48->cd(1); gPad->DrawFrame(0,0,4,8); tg.Draw(""PC"");; c48->cd(2); gPad->DrawFrame(0,0,4,8); tg.Draw(""0PC"");; return c48;; }; The option ""3"" shows the errors as a band. Picture; Source. {; TCanvas *c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; return c41;; }; The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Picture; Source. {; TCanvas *c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetFillColor(6);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphPainter.html:8122,error,errors,8122,root/html532/TGraphPainter.html,https://root.cern,https://root.cern/root/html532/TGraphPainter.html,4,['error'],['errors']
Availability,"; Calculate the index for the weights array corresponding to; to the bin enclosing the current coordinates of the internal argset. void dump2(); Debug stuff, should go... RooPlot * plotOn(RooPlot* frame, RooAbsData::PlotOpt o) const; Back end function to plotting functionality. Plot RooDataHist on given; frame in mode specified by plot options 'o'. The main purpose of; this function is to match the specified binning on 'o' to the; internal binning of the plot observable in this RooDataHist. Double_t weightSquared() const. Double_t weight(const RooArgSet& bin, Int_t intOrder = 1, Bool_t correctForBinSize = kFALSE, Bool_t cdfBoundaries = kFALSE, Bool_t oneSafe = kFALSE); Return the weight at given coordinates with optional; interpolation. If intOrder is zero, the weight; for the bin enclosing the coordinates; contained in 'bin' is returned. For higher values,; the result is interpolated in the real dimensions; of the dataset. void weightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = Poisson) const; Return the error on current weight. Double_t interpolateDim(RooRealVar& dim, const RooAbsBinning* binning, Double_t xval, Int_t intOrder, Bool_t correctForBinSize, Bool_t cdfBoundaries); Perform boundary safe 'intOrder'-th interpolation of weights in dimension 'dim'; at current value 'xval'. void add(const RooArgSet& row, Double_t weight, Double_t sumw2); Increment the weight of the bin enclosing the coordinates given; by 'row' by the specified amount. Add the sum of weights squared; for the bin by 'sumw2' rather than wgt^2. void set(const RooArgSet& row, Double_t weight, Double_t wgtErrLo, Double_t wgtErrHi); Increment the weight of the bin enclosing the coordinates; given by 'row' by the specified amount. Associate errors; [wgtErrLo,wgtErrHi] with the event weight on this bin. void set(Double_t weight, Double_t wgtErr = -1); Increment the weight of the bin enclosing the coordinates; given by 'row' by the specified amount. Associate errors; [wgtErrLo,wgtErr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooDataHist.html:29428,error,error,29428,root/html534/RooDataHist.html,https://root.cern,https://root.cern/root/html534/RooDataHist.html,3,['error'],['error']
Availability,"; Chebyshev(const ROOT::Math::IGenFunction& f, double a, double b, size_t n). Construct a Chebyshev series approximation to a Function f in range [a,b];; constructor based on functions of type IGenFunction. Chebyshev(ROOT::Math::GSLFuncPointer f, void* p, double a, double b, size_t n). Construct a Chebyshev series approximation to a Function f in range [a,b];; constructor based on free functions with gsl_function type signature. virtual ~Chebyshev(); destructor. Chebyshev(size_t n). construct a Chebyshev series or order n; The series must be initialized from a function. Chebyshev(const ROOT::Math::Chebyshev& ); usually copying is non trivial, so we make this unaccessible. double operator()(double x) const. Evaluate the series at a given point x. std::pair<double, double> EvalErr(double x) const. Evaluate the series at a given point x estimating both the series result and its absolute error.; The error estimate is made from the first neglected term in the series.; A pair containing result and error is returned. double operator()(double x, size_t n) const. Evaluate the series at a given point, to (at most) the given order n. std::pair<double, double> EvalErr(double x, size_t n) const. evaluate the series at a given point x to the given order n,; estimating both the series result and its absolute error.; The error estimate is made from the first neglected term in the series.; A pair containing result and error is returned. Chebyshev * Deriv(). Compute the derivative of the series and return a pointer to a new Chebyshev series with the; derivatives coefficients. The returned pointer must be managed by the user. TO DO: implement copying to return by value. Chebyshev * Integral(). Compute the integral of the series and return a pointer to a new Chebyshev series with the; integral coefficients. The lower limit of the integration is the left range value a.; The returned pointer must be managed by the user. TO DO: implement copying to return by value. void Initialize(ROOT::Ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__Chebyshev.html:2602,error,error,2602,root/html528/ROOT__Math__Chebyshev.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__Chebyshev.html,3,['error'],['error']
Availability,"; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::FCNGradientBase. class ROOT::Minuit2::FCNGradientBase: public ROOT::Minuit2::FCNBase. Extension of the FCNBase for providing the analytical Gradient of the; function. The user-Gradient is checked at the beginning of the; minimization against the Minuit internal numerical Gradient in order to; spot problems in the analytical Gradient calculation. This can be turned; off by overriding CheckGradient() to make it return ""false"".; The size of the output Gradient vector must be equal to the size of the; input Parameter vector.; Minuit does a check of the user Gradient at the beginning, if this is not; wanted the method ""CheckGradient()"" has to be overridden to return; ""false"". Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~FCNGradientBase(); virtual boolCheckGradient() const; virtual doubleROOT::Minuit2::FCNBase::ErrorDef() const; virtual vector<double>Gradient(const vector<double>&) const; virtual doubleROOT::Minuit2::FCNBase::operator()(const vector<double>& x) const; ROOT::Minuit2::FCNGradientBase&operator=(const ROOT::Minuit2::FCNGradientBase&); virtual voidROOT::Minuit2::FCNBase::SetErrorDef(double); virtual doubleROOT::Minuit2::FCNBase::Up() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~FCNGradientBase(); {}. std::vector<double> Gradient(const vector<double>& ) const. bool CheckGradient() const; {return true;}. » Last changed: root/minuit2:$Id: FCNGradientBase.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2011-07-04 15:20; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Minuit2__FCNGradientBase.html:1073,avail,available,1073,root/html530/ROOT__Minuit2__FCNGradientBase.html,https://root.cern,https://root.cern/root/html530/ROOT__Minuit2__FCNGradientBase.html,1,['avail'],['available']
Availability,"; Class Index; Class Hierarchy. Search. Source:; header file; ; viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::FCNGradientBase. class ROOT::Minuit2::FCNGradientBase: public ROOT::Minuit2::FCNBase. Extension of the FCNBase for providing the analytical Gradient of the; function. The user-Gradient is checked at the beginning of the; minimization against the Minuit internal numerical Gradient in order to; spot problems in the analytical Gradient calculation. This can be turned; off by overriding CheckGradient() to make it return ""false"".; The size of the output Gradient vector must be equal to the size of the; input Parameter vector.; Minuit does a check of the user Gradient at the beginning, if this is not; wanted the method ""CheckGradient()"" has to be overridden to return; ""false"". Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~FCNGradientBase(); virtual boolCheckGradient() const; virtual doubleROOT::Minuit2::FCNBase::ErrorDef() const; virtual vector<double>Gradient(const vector<double>&) const; virtual doubleROOT::Minuit2::FCNBase::operator()(const vector<double>& x) const; ROOT::Minuit2::FCNGradientBase&operator=(const ROOT::Minuit2::FCNGradientBase&); virtual voidROOT::Minuit2::FCNBase::SetErrorDef(double); virtual doubleROOT::Minuit2::FCNBase::Up() const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~FCNGradientBase(); {}. std::vector<double> Gradient(const vector<double>& ) const. bool CheckGradient() const; {return true;}. » Last changed: root/minuit2:$Id: FCNGradientBase.h 21530 2007-12-20 11:14:35Z moneta $ » Last generated: 2011-11-03 20:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Minuit2__FCNGradientBase.html:1073,avail,available,1073,root/html532/ROOT__Minuit2__FCNGradientBase.html,https://root.cern,https://root.cern/root/html532/ROOT__Minuit2__FCNGradientBase.html,1,['avail'],['available']
Availability,"; Create a socket. The socket will adopt previously opened Unix socket with; descriptor desc. The sockpath arg is for info purposes only. Use; this method to adopt e.g. a socket created via socketpair(). TSocket(const TSocket& s); TSocket copy ctor. void Close(Option_t* opt = """"); Close the socket. If option is ""force"", calls shutdown(id,2) to; shut down the connection. This will close the connection also; for the parent of this process. Also called via the dtor (without; option ""force"", call explicitly Close(""force"") if this is desired). TInetAddress GetLocalInetAddress(); Return internet address of local host to which the socket is bound.; In case of error TInetAddress::IsValid() returns kFALSE. Int_t GetLocalPort(); Return the local port # to which the socket is bound.; In case of error return -1. Int_t Select(Int_t interest = kRead, Long_t timeout = -1); Waits for this socket to change status. If interest=kRead,; the socket will be watched to see if characters become available for; reading; if interest=kWrite the socket will be watched to; see if a write will not block.; The argument 'timeout' specifies a maximum time to wait in millisec.; Default no timeout.; Returns 1 if a change of status of interest has been detected within; timeout; 0 in case of timeout; < 0 if an error occured. Int_t Send(Int_t kind); Send a single message opcode. Use kind (opcode) to set the; TMessage ""what"" field. Returns the number of bytes that were sent; (always sizeof(Int_t)) and -1 in case of error. In case the kind has; been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous. Int_t Send(Int_t status, Int_t kind); Send a status and a single message opcode. Use kind (opcode) to set the; TMessage ""what"" field. Returns the number of bytes that were sent; (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has; been or'ed with kMESS_ACK, the call will only return after having; received an ackno",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSocket.html:13695,avail,available,13695,root/html534/TSocket.html,https://root.cern,https://root.cern/root/html534/TSocket.html,3,['avail'],['available']
Availability,"; Creates a TFileCacheRead data structure. ~TFileCacheRead(); Destructor. void Prefetch(Long64_t pos, Int_t len); Add block of length len at position pos in the list of blocks to; be prefetched. If pos <= 0 the current blocks (if any) are reset. void Print(Option_t* option = """") const; Print cache statistics, like; ******TreeCache statistics for file: cms2.root ******; Reading............................: 72761843 bytes in 7 transactions; Readahead..........................: 256000 bytes with overhead = 0 bytes; Average transaction................: 10394.549000 Kbytes; Number of blocks in current cache..: 210, total size: 6280352. if option = ""a"" the list of blocks in the cache is printed; NB: this function is automatically called by TTreeCache::Print. Int_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Read buffer at position pos.; If pos is in the list of prefetched blocks read from fBuffer,; otherwise need to make a normal read from file. Returns -1 in case of; read error, 0 in case not in cache, 1 in case read from cache. Int_t ReadBufferExt(char* buf, Long64_t pos, Int_t len, Int_t& loc); Base function for ReadBuffer. Also gives out the position; of the block in the internal buffer. This helps TTreeCacheUnzip to avoid; doing twice the binary search. void SetFile(TFile* file); Set the file using this cache and reset the current blocks (if any). void Sort(); Sort buffers to be prefetched in increasing order of positions.; Merge consecutive blocks if necessary. TFileCacheRead(const TFileCacheRead& ). TFileCacheRead& operator=(const TFileCacheRead& ). void AddBranch(TBranch* , Bool_t = kFALSE); {}. void AddBranch(const char* , Bool_t = kFALSE); {}. Int_t GetBufferSize() const; { return fBufferSize; }. Int_t GetUnzipBuffer(char** , Long64_t , Int_t , Bool_t* ); { return -1; }. Bool_t IsAsyncReading() const; { return fAsyncReading; }. Bool_t IsLearning() const; {return kFALSE;}. void SetSkipZip(Bool_t = kTRUE); {}. » Author: Rene Brun 19/05/2006 » Copyright (C) 199",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileCacheRead.html:8370,error,error,8370,root/html528/TFileCacheRead.html,https://root.cern,https://root.cern/root/html528/TFileCacheRead.html,1,['error'],['error']
Availability,"; Definition at line 110 of file RooDataHist.h. ◆ weightArray(). double const * RooDataHist::weightArray ; (; ); const. inline . Definition at line 216 of file RooDataHist.h. ◆ weightError() [1/2]. void RooDataHist::weightError ; (; double & ; lo, . double & ; hi, . ErrorType ; etype = Poisson . ); const. overridevirtual . Return the asymmetric errors on the current weight. ; See alsoweightError(ErrorType) const for symmetric error. ; Parameters. [out]loLow error. ; [out]hiHigh error. ; [in]etypeType of error to compute. May throw if not supported. Supported errors are; Poisson Default. Asymmetric Poisson errors (68% CL).; SumW2 The square root of the sum of weights. (Symmetric).; None Return zero. . Reimplemented from RooAbsData.; Definition at line 1570 of file RooDataHist.cxx. ◆ weightError() [2/2]. double RooDataHist::weightError ; (; ErrorType ; etype = Poisson); const. inlineoverridevirtual . Return the symmetric error on the current weight. ; See also weightError(double&,double&,ErrorType) const for asymmetric errors. ; Reimplemented from RooAbsData.; Definition at line 125 of file RooDataHist.h. ◆ weightFast(). double RooDataHist::weightFast ; (; const RooArgSet & ; bin, . int ; intOrder, . bool ; correctForBinSize, . bool ; cdfBoundaries . ). A faster version of RooDataHist::weight that assumes the passed arguments are aligned with the histogram variables. ; Parameters. [in]binCoordinates for which the weight should be calculated. Has to be aligned with the internal histogram variables. ; [in]intOrderInterpolation order, i.e. how many neighbouring bins are used for the interpolation. If zero, the bare weight for the bin enclosing the coordinatesis returned. ; [in]correctForBinSizeEnable the inverse bin volume correction factor. ; [in]cdfBoundariesEnable the special boundary condition for a cdf: underflow bins are assumed to have weight zero and overflow bins have weight one. Otherwise, the histogram is mirrored at the boundaries for the interpolation. . Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataHist.html:82667,error,errors,82667,doc/master/classRooDataHist.html,https://root.cern,https://root.cern/doc/master/classRooDataHist.html,1,['error'],['errors']
Availability,"; Definition at line 124 of file TEveBrowser.h. ◆ DisconnectSignals(). void TEveGListTreeEditorFrame::DisconnectSignals ; (; ). Disconnect list-tree signals. ; Definition at line 214 of file TEveBrowser.cxx. ◆ GetEditor(). TEveGedEditor * TEveGListTreeEditorFrame::GetEditor ; (; ); const. inline . Definition at line 115 of file TEveBrowser.h. ◆ GetListTree(). TGListTree * TEveGListTreeEditorFrame::GetListTree ; (; ); const. inline . Definition at line 114 of file TEveBrowser.h. ◆ IsA(). TClass * TEveGListTreeEditorFrame::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 124 of file TEveBrowser.h. ◆ ItemBelowMouse(). void TEveGListTreeEditorFrame::ItemBelowMouse ; (; TGListTreeItem * ; entry, . UInt_t ; mask . ). Different item is below mouse. ; Definition at line 315 of file TEveBrowser.cxx. ◆ ItemClicked(). void TEveGListTreeEditorFrame::ItemClicked ; (; TGListTreeItem * ; item, . Int_t ; btn, . UInt_t ; mask, . Int_t ; x, . Int_t ; y . ). Item has been clicked, based on mouse button do: . M1 - select, show in editor;; M2 - paste (call gEve->ElementPaste();; M3 - popup context menu. . Definition at line 327 of file TEveBrowser.cxx. ◆ ItemDblClicked(). void TEveGListTreeEditorFrame::ItemDblClicked ; (; TGListTreeItem * ; item, . Int_t ; btn . ). Item has been double-clicked, potentially expand the children. ; Definition at line 365 of file TEveBrowser.cxx. ◆ ItemKeyPress(). void TEveGListTreeEditorFrame::ItemKeyPress ; (; TGListTreeItem * ; entry, . UInt_t ; keysym, . UInt_t ; mask . ). A key has been pressed for an item. ; Only <Delete>, <Enter> and <Return> keys are handled here, otherwise the control is passed back to TGListTree. ; Definition at line 407 of file TEveBrowser.cxx. ◆ operator=(). TEveGListTreeEditorFrame & TEveGListTreeEditorFrame::operator= ; (; const TEveGListTreeEditorFrame & ; ). private . ◆ ReconfToHorizontal(). void TEveGListTreeEditorFrame::ReconfToHorizontal ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html:39089,mask,mask,39089,doc/master/classTEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability,"; Definition at line 197 of file TEveBrowser.cxx. ◆ DeclFileName(). static const char * TEveGListTreeEditorFrame::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 124 of file TEveBrowser.h. ◆ DisconnectSignals(). void TEveGListTreeEditorFrame::DisconnectSignals ; (; ). Disconnect list-tree signals. ; Definition at line 214 of file TEveBrowser.cxx. ◆ GetEditor(). TEveGedEditor * TEveGListTreeEditorFrame::GetEditor ; (; ); const. inline . Definition at line 115 of file TEveBrowser.h. ◆ GetListTree(). TGListTree * TEveGListTreeEditorFrame::GetListTree ; (; ); const. inline . Definition at line 114 of file TEveBrowser.h. ◆ IsA(). TClass * TEveGListTreeEditorFrame::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 124 of file TEveBrowser.h. ◆ ItemBelowMouse(). void TEveGListTreeEditorFrame::ItemBelowMouse ; (; TGListTreeItem * ; entry, . UInt_t ; mask . ). Different item is below mouse. ; Definition at line 315 of file TEveBrowser.cxx. ◆ ItemClicked(). void TEveGListTreeEditorFrame::ItemClicked ; (; TGListTreeItem * ; item, . Int_t ; btn, . UInt_t ; mask, . Int_t ; x, . Int_t ; y . ). Item has been clicked, based on mouse button do: . M1 - select, show in editor;; M2 - paste (call gEve->ElementPaste();; M3 - popup context menu. . Definition at line 327 of file TEveBrowser.cxx. ◆ ItemDblClicked(). void TEveGListTreeEditorFrame::ItemDblClicked ; (; TGListTreeItem * ; item, . Int_t ; btn . ). Item has been double-clicked, potentially expand the children. ; Definition at line 365 of file TEveBrowser.cxx. ◆ ItemKeyPress(). void TEveGListTreeEditorFrame::ItemKeyPress ; (; TGListTreeItem * ; entry, . UInt_t ; keysym, . UInt_t ; mask . ). A key has been pressed for an item. ; Only <Delete>, <Enter> and <Return> keys are handled here, otherwise the control is passed back to TGListTree. ; Definition at line 407 of file TEveBrowser.cxx.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html:38882,mask,mask,38882,doc/master/classTEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability,; Definition at line 30 of file TAttFill.h. ◆ GetFillColor() [2/2]. Color_t TGraphMultiErrors::GetFillColor ; (; Int_t ; e); const. virtual . Get Fill Color for specified error e (-1 = Global and x errors). ; Definition at line 1643 of file TGraphMultiErrors.cxx. ◆ GetFillStyle() [1/2]. virtual Style_t TAttFill::GetFillStyle ; (; ); const. inlinevirtual . Return the fill area style. ; Reimplemented from TAttFill.; Definition at line 31 of file TAttFill.h. ◆ GetFillStyle() [2/2]. Style_t TGraphMultiErrors::GetFillStyle ; (; Int_t ; e); const. virtual . Get Fill Style for specified error e (-1 = Global and x errors). ; Definition at line 1656 of file TGraphMultiErrors.cxx. ◆ GetLineColor() [1/2]. virtual Color_t TAttLine::GetLineColor ; (; ); const. inlinevirtual . Return the line color. ; Reimplemented from TAttLine.; Definition at line 33 of file TAttLine.h. ◆ GetLineColor() [2/2]. Color_t TGraphMultiErrors::GetLineColor ; (; Int_t ; e); const. virtual . Get Line Color for specified error e (-1 = Global and x errors). ; Definition at line 1669 of file TGraphMultiErrors.cxx. ◆ GetLineStyle() [1/2]. virtual Style_t TAttLine::GetLineStyle ; (; ); const. inlinevirtual . Return the line style. ; Reimplemented from TAttLine.; Definition at line 34 of file TAttLine.h. ◆ GetLineStyle() [2/2]. Style_t TGraphMultiErrors::GetLineStyle ; (; Int_t ; e); const. virtual . Get Line Style for specified error e (-1 = Global and x errors). ; Definition at line 1682 of file TGraphMultiErrors.cxx. ◆ GetLineWidth() [1/2]. virtual Width_t TAttLine::GetLineWidth ; (; ); const. inlinevirtual . Return the line width. ; Reimplemented from TAttLine.; Definition at line 35 of file TAttLine.h. ◆ GetLineWidth() [2/2]. Width_t TGraphMultiErrors::GetLineWidth ; (; Int_t ; e); const. virtual . Get Line Width for specified error e (-1 = Global and x errors). ; Definition at line 1695 of file TGraphMultiErrors.cxx. ◆ GetNYErrors(). Int_t TGraphMultiErrors::GetNYErrors ; (; ); const. inline . Definition,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:66689,error,error,66689,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,2,['error'],"['error', 'errors']"
Availability,"; Definition at line 32 of file TFoamMaxwt.h. ◆ DeclFileName(). static const char * TFoamMaxwt::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 32 of file TFoamMaxwt.h. ◆ Fill(). void TFoamMaxwt::Fill ; (; Double_t ; wt). Filling analyzed weight. ; Definition at line 93 of file TFoamMaxwt.cxx. ◆ GetMCeff(). void TFoamMaxwt::GetMCeff ; (; Double_t ; eps, . Double_t & ; MCeff, . Double_t & ; wtLim . ). Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1 using information stored in two histograms. ; To be called at the end of the MC run. ; Definition at line 120 of file TFoamMaxwt.cxx. ◆ IsA(). TClass * TFoamMaxwt::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 32 of file TFoamMaxwt.h. ◆ Make(). void TFoamMaxwt::Make ; (; Double_t ; eps, . Double_t & ; MCeff . ). Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1 To be called at the end of the MC run. ; Definition at line 104 of file TFoamMaxwt.cxx. ◆ operator=(). TFoamMaxwt & TFoamMaxwt::operator= ; (; const TFoamMaxwt & ; From). substitution = ; Definition at line 80 of file TFoamMaxwt.cxx. ◆ Reset(). void TFoamMaxwt::Reset ; (; ). Resetting weight analysis. ; Definition at line 70 of file TFoamMaxwt.cxx. ◆ Streamer(). void TFoamMaxwt::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TFoamMaxwt::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 32 of file TFoamMaxwt.h. Member Data Documentation. ◆ fnBin. Int_t TFoamMaxwt::fnBin. private . No. of bins on the weight distribution. ; Definition at line 15 of file TFoamMaxwt.h. ◆ fNent. Double_t TFoamMaxwt::fNent. private . No. of MC events. ; Definition at line 14 of file TFoamMaxwt.h. ◆ fwmax. Double_t TFoamMaxwt::fwmax. private . Maximum analy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoamMaxwt.html:13238,toler,tolerance,13238,doc/master/classTFoamMaxwt.html,https://root.cern,https://root.cern/doc/master/classTFoamMaxwt.html,1,['toler'],['tolerance']
Availability,"; Definition at line 375 of file PyMethodBase.cxx. ◆ GetMvaValue(). virtual Double_t TMVA::PyMethodBase::GetMvaValue ; (; Double_t * ; errLower = nullptr, . Double_t * ; errUpper = nullptr . ). pure virtual . Implements TMVA::MethodBase.; Implemented in TMVA::MethodPyKeras, TMVA::MethodPyTorch, TMVA::MethodPyAdaBoost, TMVA::MethodPyGTB, and TMVA::MethodPyRandomForest. ◆ GetMvaValues(). virtual std::vector< Double_t > TMVA::PyMethodBase::GetMvaValues ; (; Long64_t ; firstEvt = 0, . Long64_t ; lastEvt = -1, . Bool_t ; logProgress = false . ). protectedpure virtual . get all the MVA values for the events of the current Data type ; Reimplemented from TMVA::MethodBase.; Implemented in TMVA::MethodPyKeras, TMVA::MethodPyTorch, TMVA::MethodPyAdaBoost, TMVA::MethodPyGTB, and TMVA::MethodPyRandomForest. ◆ GetValueFromDict(). PyObject * PyMethodBase::GetValueFromDict ; (; PyObject * ; dict, . const char * ; key . ). static . Utility function which checks if a given key is present in a Python dictionary object and returns the associated value or throws runtime error. ; Parameters. [in]listObjectPython Dict object . ReturnsAssociated value PyObject ; Definition at line 409 of file PyMethodBase.cxx. ◆ HasAnalysisType(). Bool_t TMVA::PyMethodBase::HasAnalysisType ; (; Types::EAnalysisType ; type, . UInt_t ; numberClasses, . UInt_t ; numberTargets . ). pure virtual . Implements TMVA::IMethod.; Implemented in TMVA::MethodPyAdaBoost, TMVA::MethodPyGTB, TMVA::MethodPyRandomForest, TMVA::MethodPyKeras, and TMVA::MethodPyTorch. ◆ Init(). virtual void TMVA::PyMethodBase::Init ; (; ). pure virtual . Implements TMVA::MethodBase.; Implemented in TMVA::MethodPyAdaBoost, TMVA::MethodPyGTB, TMVA::MethodPyKeras, TMVA::MethodPyRandomForest, and TMVA::MethodPyTorch. ◆ IsA(). virtual TClass * TMVA::PyMethodBase::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TMVA::MethodBase.; Reimplemented in TMVA::MethodPyAdaBoost.; Definition at line 142 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html:33459,error,error,33459,doc/master/classTMVA_1_1PyMethodBase.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1PyMethodBase.html,1,['error'],['error']
Availability,"; Definition at line 692 of file TWebFile.cxx. ◆ GetHead(). Int_t TWebFile::GetHead ; (; ). protectedvirtual . Get the HTTP header. ; Depending on the return code we can see if the file exists and if the server uses mod_root. Returns -1 in case of an error, -2 in case the file does not exists, -3 in case HEAD is not supported (dCache HTTP door) and 0 in case of success. ; Reimplemented in TS3WebFile.; Definition at line 1045 of file TWebFile.cxx. ◆ GetHunk(). Int_t TWebFile::GetHunk ; (; TSocket * ; s, . char * ; hunk, . Int_t ; maxsize . ). protectedvirtual . Read a hunk of data from the socket, up until a terminator. ; The hunk is limited by whatever the TERMINATOR callback chooses as its terminator. For example, if terminator stops at newline, the hunk will consist of a line of data; if terminator stops at two newlines, it can be used to read the head of an HTTP response. Upon determining the boundary, the function returns the data (up to the terminator) in hunk.; In case of read error, -1 is returned. In case of having read some data, but encountering EOF before seeing the terminator, the data that has been read is returned, but it will (obviously) not contain the terminator.; The TERMINATOR function is called with three arguments: the beginning of the data read so far, the beginning of the current block of peeked-at data, and the length of the current block. Depending on its needs, the function is free to choose whether to analyze all data or just the newly arrived data. If TERMINATOR returns 0, it means that the terminator has not been seen. Otherwise it should return a pointer to the character immediately following the terminator.; The idea is to be able to read a line of input, or otherwise a hunk of text, such as the head of an HTTP request, without crossing the boundary, so that the next call to RecvRaw() etc. reads the data after the hunk. To achieve that, this function does the following:. Peek at incoming data.; Determine whether the peeked data, along ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:48938,error,error,48938,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['error'],['error']
Availability,"; DeleteText()TPaveTextvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTPavevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTPavesTextvirtual; DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TBoxvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawFile(const char *filename, Option_t *option="""")TPaveTextvirtual; DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize=4, Option_t *option=""br"")TPavevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; EditText()TPaveTextvirtual; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTPavevirtual; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBorderSizeTPaveprotected; fCornerRadiusTPaveprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fInitTPaveprotected; fLabelTPaveTextprotected; fLineColorTAttLineprotected; fLinesTPaveTextprotected; fLineStyleTAttLineprotected; fLineWidthTAttLineprotected; fLongestTPaveTextprotected; fMarginTPaveTextprotected; fNameTPaveprotected; fNpavesTPavesTextprotected; fOptionTPaveprotected; fResizingTBoxprotected; fShadowColorTPaveprotected; fTextAlignTAttTextprotected; fTextAngleTAttTextprotected; fTextColorTAttTextprotected; fTextFontTAttTextprotected; fTextSizeTAttTextprotected; fTipTBoxprivate; fUnique",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPavesText-members.html:2249,error,error,2249,doc/master/classTPavesText-members.html,https://root.cern,https://root.cern/doc/master/classTPavesText-members.html,2,['error'],['error']
Availability,"; DirReadKeys(TDirectory *)TFileinlineprotectedvirtual; DirWriteHeader(TDirectory *)TFileinlineprotectedvirtual; DirWriteKeys(TDirectory *)TFileinlineprotectedvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTFilevirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawMap(const char *keys=""*"", Option_t *option="""")TFilevirtual; Dump() constTObjectvirtual; EAsyncOpenStatus enum nameTFile; ECacheAction enum nameTFile; EDeprecatedStatusBits enum nameTObject; EFileType enum nameTFile; EOpenTimeOut enum nameTFile; ERelativeTo enum nameTFile; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTFile; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fArchiveTFileprotected; fArchiveOffsetTFileprotected; fAsyncHandleTFileprotected; fAsyncOpenStatusTFileprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBEGINTFileprotected; fBitsTObjectprivate; fBufferSizeTDirectoryFileprotected; fBytesReadTFileprotected; fBytesReadExtraTFileprotected; fBytesWriteTFileprotected; fCacheReadTFileprotected; fCacheReadMapTFileprotected; fCacheWriteTFileprotected; fClassIndexTFileprotected; fCompressTFileprotected; fContextTDirectoryprotected; fContextPegTDirectoryprotected; fDTFileprotected; fDatimeCTDirectoryFileprotected; fDatimeMTDirectoryFileprotected; fENDTFileprotected; fFileTDirectoryFileprotected; fFreeTFileprotected; fgAddDirectoryTDirectoryprotectedstatic; fgAsyncOpenRequestsTFileprotectedstatic; fgBytesReadTFileprotectedstatic; fgBytesWriteTFileprotectedstatic; fgCacheFileDirTFileprotectedstatic; fgCacheFileDisconnectedTFileprotectedstatic; fgCacheFileFo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFile-members.html:3604,error,error,3604,doc/master/classTFile-members.html,https://root.cern,https://root.cern/doc/master/classTFile-members.html,2,['error'],['error']
Availability,"; Double_t * GetEYlow () const override;  ; Double_t * GetEZhigh () const override;  ; Double_t * GetEZlow () const override;  ; Double_t GetXmaxE () const override;  Returns the X maximum with errors. ;  ; Double_t GetXminE () const override;  Returns the X minimum with errors. ;  ; Double_t GetYmaxE () const override;  Returns the Y maximum with errors. ;  ; Double_t GetYminE () const override;  Returns the Y minimum with errors. ;  ; Double_t GetZmaxE () const override;  Returns the Z maximum with errors. ;  ; Double_t GetZminE () const override;  Returns the Z minimum with errors. ;  ; TClass * IsA () const override;  ; TGraph2DAsymmErrors & operator= (const TGraph2DAsymmErrors &);  Assignment operator Copy everything except list of functions. ;  ; void Print (Option_t *chopt="""") const override;  Print 2D graph and errors values. ;  ; Int_t RemovePoint (Int_t ipoint);  Deletes point number ipoint. ;  ; void Scale (Double_t c1=1., Option_t *option=""z"") override;  Multiply the values and errors of a TGraph2DAsymmErrors by a constant c1. ;  ; void Set (Int_t n) override;  Set number of points in the 2D graph. ;  ; void SetPoint (Int_t i, Double_t x, Double_t y, Double_t z) override;  Set x, y and z values for point number i. ;  ; virtual void SetPointError (Int_t i, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t ezl, Double_t ezh);  Set ex, ey and ez values for point number i. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TGraph2DAsymmErrors. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGraph2D;  TGraph2D ();  Graph2D default constructor. ;  ;  TGraph2D (const char *filename, const char *format=""%lg %lg %lg"", Option_t *option="""");  Graph2D constructor reading input from filename filename is assumed to contain at least three columns of numbers. ;  ;  TGraph2D (const char *name, const char *title, Int_t n, Double_t *x, Double_t *y, Double_t *z);  Graph2D construc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DAsymmErrors.html:6075,error,errors,6075,doc/master/classTGraph2DAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DAsymmErrors.html,1,['error'],['errors']
Availability,"; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; TGraphBentErrors *gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""TGraphBentErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; return c3;; }; TGraphPolar options; The drawing options for the polar graphs are the following values:. ""O""; Polar labels are paint orthogonally to the polargram radius. ""P""; Polymarker are paint at each point position. ""E""; Paint error bars. ""F""; Paint fill area (closed polygon). ""A""; Force axis redrawing even if a polargram already exists. ""N""; Disable the display of the polar labels. Picture; Source. {; TCanvas *c1 = new TCanvas(""c1"",""c1"",500,500);; TGraphPolar * grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c1->Update();; grP1->GetPolargram()->SetToRadian();. return c1;; }; . Function Members (Methods); public:. TGraphPainter(); TGraphPainter(const TGraphPainter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphPainter.html:11328,error,error,11328,root/html528/TGraphPainter.html,https://root.cern,https://root.cern/root/html528/TGraphPainter.html,1,['error'],['error']
Availability,"; Double_tSin(Double_t); Double_tSinH(Double_t); Double_tSqrt(Double_t x); Double_tSqrt2(); Double_tStruveH0(Double_t x); Double_tStruveH1(Double_t x); Double_tStruveL0(Double_t x); Double_tStruveL1(Double_t x); Double_tStudent(Double_t T, Double_t ndf); Double_tStudentI(Double_t T, Double_t ndf); Double_tStudentQuantile(Double_t p, Double_t ndf, Bool_t lower_tail = kTRUE); Double_tTan(Double_t); Double_tTanH(Double_t); Double_tTwoPi(); Double_tVavilov(Double_t x, Double_t kappa, Double_t beta2); Double_tVavilovI(Double_t x, Double_t kappa, Double_t beta2); Double_tVoigt(Double_t x, Double_t sigma, Double_t lg, Int_t r = 4). Class Charts; Function documentation; Long_t Hypot(Long_t x, Long_t y). Double_t Hypot(Double_t x, Double_t y). Double_t ASinH(Double_t ). Double_t ACosH(Double_t ). Double_t ATanH(Double_t ). Double_t Log2(Double_t x). Double_t DiLog(Double_t x); The DiLogarithm function; Code translated by R.Brun from CERNLIB DILOG function C332. Double_t Erf(Double_t x); Computation of the error function erf(x).; Erf(x) = (2/sqrt(pi)) Integral(exp(-t^2))dt between 0 and x. Double_t Erfc(Double_t x); Compute the complementary error function erfc(x).; Erfc(x) = (2/sqrt(pi)) Integral(exp(-t^2))dt between x and infinity. Double_t ErfInverse(Double_t x); returns the inverse error function; x must be <-1<x<1. Double_t ErfcInverse(Double_t x); returns the inverse of the complementary error function; x must be 0<x<2; implement using the quantile of the normal distribution; instead of ErfInverse for better numerical precision for large x. Double_t Factorial(Int_t i); Compute factorial(n). Double_t Freq(Double_t x); Computation of the normal frequency function freq(x).; Freq(x) = (1/sqrt(2pi)) Integral(exp(-t^2/2))dt between -infinity and x. Translated from CERNLIB C300 by Rene Brun. Double_t Gamma(Double_t z); Computation of gamma(z) for all z. C.Lanczos, SIAM Journal of Numerical Analysis B1 (1964), 86. Double_t Gamma(Double_t a, Double_t x); Computation of the norma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMath.html:7081,error,error,7081,root/html602/TMath.html,https://root.cern,https://root.cern/root/html602/TMath.html,1,['error'],['error']
Availability,"; Double_tfNullPValueErrorerror of p-value for the null hypothesis (small number means disfavored); Bool_tfPValueIsRightTail; Double_tfTestStatisticDataresult of the test statistic evaluated on data; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; HypoTestResult(const char* name = 0); Default constructor. HypoTestResult(const char* name, Double_t nullp, Double_t altp); Alternate constructor. ~HypoTestResult(); Destructor. void Append(const RooStats::HypoTestResult* other); Add additional toy-MC experiments to the current results.; Use the data test statistics of the added object if it is not already; set (otherwise, ignore the new one). void SetAltDistribution(RooStats::SamplingDistribution* alt). void SetNullDistribution(RooStats::SamplingDistribution* null). void SetTestStatisticData(const Double_t tsd). void SetPValueIsRightTail(Bool_t pr). Bool_t HasTestStatisticData(void). Double_t NullPValueError() const; compute error on Null pvalue. Double_t CLbError() const; compute CLb error; Clb = 1 - NullPValue(); must use opposite condition that routine above. Double_t CLsplusbError() const. Double_t CLsError() const; Returns an estimate of the error on CLs through combination of the; errors on CLb and CLsplusb:. void UpdatePValue(const RooStats::SamplingDistribution* distr, Double_t& pvalue, Double_t& perror, Bool_t pIsRightTail); updates the pvalue if sufficient data is available. explicit HypoTestResult(const char* name = 0); default constructor. Double_t NullPValue() const; Return p-value for null hypothesis. { return fNullPValue; }. Double_t AlternatePValue() const; Return p-value for alternate hypothesis. { return fAlternatePValue; }. Double_t CLb() const; Convert NullPValue into a ""confidence level"". { return !fBackgroundIsAlt ? NullPValue() : AlternatePValue(); }. Double_t CLsplusb() const; Convert AlternatePValue into a ""confidence level"". { return !fBackgroundIsAlt ? AlternatePValue(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__HypoTestResult.html:8648,error,error,8648,root/html530/RooStats__HypoTestResult.html,https://root.cern,https://root.cern/root/html530/RooStats__HypoTestResult.html,2,['error'],['error']
Availability,"; Double_t Root (Double_t);  Root finding using Brents algorithm; taken from CERNLIB function RZERO. ;  . Private Attributes; TH1D * effBvsS;  ; Double_t fAbsTol;  absolute tolerance deviation ;  ; Int_t fCutOrientation;  +1 if larger mva value means more signal like, -1 otherwise ;  ; MsgLogger * fLogger;  ; Int_t fMaxIter;  maximum number of iterations ;  ; TH1 * fmvaB;  the input mva distributions ;  ; TH1 * fmvaBcumul;  ; TH1 * fmvaBpdf;  the normalized (and rebinned) input mva distributions ;  ; TH1 * fmvaS;  ; TH1 * fmvaScumul;  ; TH1 * fmvaSpdf;  ; UInt_t fNbins;  ; Int_t fnBtot;  ; Double_t fNevtS;  number of signal events (used in error calculation) ;  ; Int_t fnStot;  ; TH1 * fPurity;  ; Double_t fSignalCut;  MVA cut value for last demanded background rejection or signal efficiency. ;  ; TH1 * fSignificance;  ; TSpline * fSplB;  ; TSpline * fSpleffBvsS;  ; TSpline * fSplmvaCumB;  spline of cumulated mva distributions ;  ; TSpline * fSplmvaCumS;  ; TSpline * fSplS;  ; Bool_t fStatus;  false if is found some error in mvaS or mvaB ;  ; Bool_t fUseSplines;  ; Float_t fXmax;  min and max of the mva distribution ;  ; Float_t fXmin;  ; TH1D * inveffBvsS;  ; TH1D * rejBvsS;  . #include <TMVA/ROCCalc.h>; Constructor & Destructor Documentation. ◆ ROCCalc(). TMVA::ROCCalc::ROCCalc ; (; TH1 * ; mvaS, . TH1 * ; mvaB . ). Definition at line 42 of file ROCCalc.cxx. ◆ ~ROCCalc(). TMVA::ROCCalc::~ROCCalc ; (; ). destructor ; Definition at line 160 of file ROCCalc.cxx. Member Function Documentation. ◆ ApplySignalAndBackgroundStyle(). void TMVA::ROCCalc::ApplySignalAndBackgroundStyle ; (; TH1 * ; sig, . TH1 * ; bkg, . TH1 * ; any = nullptr . ). Definition at line 113 of file ROCCalc.cxx. ◆ GetEffForRoot(). Double_t TMVA::ROCCalc::GetEffForRoot ; (; Double_t ; theCut). private . returns efficiency as function of cut ; Definition at line 323 of file ROCCalc.cxx. ◆ GetEffSForEffBof(). Double_t TMVA::ROCCalc::GetEffSForEffBof ; (; Double_t ; effBref, . Double_t & ; effSerr . ). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1ROCCalc.html:2300,error,error,2300,doc/master/classTMVA_1_1ROCCalc.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1ROCCalc.html,1,['error'],['error']
Availability,"; Double_t fTauSquared;  regularisation parameter tau squared ;  ; TMatrixDSparse * fVyy;  covariance matrix Vyy corresponding to y ;  ; TMatrixD * fX0;  bias vector x0 ;  ; TArrayI fXToHist;  mapping of matrix indices to histogram bins ;  ; TMatrixD * fY;  input (measured) data y ;  . Private Member Functions; void InitTUnfold (void);  initialize data menbers, for use in constructors ;  . Private Attributes; TMatrixDSparse * fAx;  result x folded back A*x ;  ; Double_t fChi2A;  chi**2 contribution from (y-Ax)Vyy-1(y-Ax) ;  ; TMatrixDSparse * fDXDAM [2];  matrix contribution to the of derivative dx_k/dA_ij ;  ; TMatrixDSparse * fDXDAZ [2];  vector contribution to the of derivative dx_k/dA_ij ;  ; TMatrixDSparse * fDXDtauSquared;  derivative of the result wrt tau squared ;  ; TMatrixDSparse * fDXDY;  derivative of the result wrt dx/dy ;  ; TMatrixDSparse * fE;  matrix E ;  ; TMatrixDSparse * fEinv;  matrix E^(-1) ;  ; Double_t fEpsMatrix;  machine accuracy used to determine matrix rank after eigenvalue analysis ;  ; Int_t fIgnoredBins;  number of input bins which are dropped because they have error=nullptr ;  ; Double_t fLXsquared;  chi**2 contribution from (x-s*x0)TLTL(x-s*x0) ;  ; Int_t fNdf;  number of degrees of freedom ;  ; Double_t fRhoAvg;  average global correlation coefficient ;  ; Double_t fRhoMax;  maximum global correlation coefficient ;  ; TMatrixDSparse * fVxx;  covariance matrix Vxx ;  ; TMatrixDSparse * fVxxInv;  inverse of covariance matrix Vxx-1 ;  ; TMatrixDSparse * fVyyInv;  inverse of the input covariance matrix Vyy-1 ;  ; TMatrixD * fX;  unfolding result x ;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TUnfold.h>. Inheritance diagram for TUnfold:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ EConstraint. enum TUnfold::EConstraint. type of extra constraint . EnumeratorkEConstr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfold.html:22767,error,error,22767,doc/master/classTUnfold.html,https://root.cern,https://root.cern/doc/master/classTUnfold.html,1,['error'],['error']
Availability,"; Double_t� fSigmaCalc;��������� �������//calculated value of sigma parameter; ��; Double_t� fSigmaErr;����������������� //error value of sigma parameter; ��; Double_t� fTInit;�������������������� //initial value of t parameter (relative; amplitude of tail), for details see html manual and references; ��; Double_t� fTCalc;�������������������� //calculated value of t parameter; ��; Double_t� fTErr;��������������������� //error value of t parameter; ��; Double_t� fBInit;�������������������� //initial value of b parameter (slope),; for details see html manual and references; ��; Double_t� fBCalc;�������������������� //calculated value of b parameter; ��; Double_t� fBErr;��������������������� //error value of b parameter; ��; Double_t� fSInit;�������������������� //initial value of s parameter (relative; amplitude of step), for details see html manual and references; ��; Double_t� fSCalc;�������������������� //calculated value of s parameter; ��; Double_t� fSErr;��������������������� //error value of s parameter; ��; Double_t� fA0Init;������������������� //initial value of background a0; parameter(backgroud is estimated as a0+a1*x+a2*x*x); ��; Double_t� fA0Calc;������������������� //calculated value of background a0; parameter; ��; Double_t� fA0Err;�������������������� //error value of background a0 parameter; ��; Double_t� fA1Init;������������������� //initial value of background a1; parameter(backgroud is estimated as a0+a1*x+a2*x*x); ��; Double_t� fA1Calc;������������������� //calculated value of background a1; parameter; ��; Double_t� fA1Err;�������������������� //error value of background a1 parameter; ��; Double_t� fA2Init;������������������� //initial value of background a2; parameter(backgroud is estimated as a0+a1*x+a2*x*x); ��; Double_t� fA2Calc;������������������� //calculated value of background a2; parameter; ��; Double_t� fA2Err; ��������������������//error value of background a2 parameter; ��; Bool_t�� *fFixPosition;�������������� //[fNPeaks] array of log",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrumFit.html:24130,error,error,24130,root/html528/TSpectrumFit.html,https://root.cern,https://root.cern/root/html528/TSpectrumFit.html,6,['error'],['error']
Availability,"; Foption_t::Boundint BoundDefinition Foption.h:31; Foption_t::Nostoreint NostoreDefinition Foption.h:41; Foption_t::Moreint MoreDefinition Foption.h:38; Foption_t::PChi2int PChi2Definition Foption.h:33; Foption_t::Chi2int Chi2Definition Foption.h:32; Foption_t::Minuitint MinuitDefinition Foption.h:46; Foption_t::Errorsint ErrorsDefinition Foption.h:37; Foption_t::NoErrXint NoErrXDefinition Foption.h:47; Foption_t::Verboseint VerboseDefinition Foption.h:30; Foption_t::Userint UserDefinition Foption.h:35; Foption_t::BinVolumeint BinVolumeDefinition Foption.h:50; ROOT::Fit::DataOptionsDataOptions : simple structure holding the options on how the data are filled.Definition DataOptions.h:28; ROOT::Fit::DataOptions::fErrors1bool fErrors1use all errors equal to 1, i.e. fit without errors (default is false)Definition DataOptions.h:52; ROOT::Fit::DataOptions::fNormBinVolumebool fNormBinVolumenormalize data by a normalized the bin volume (bin volume divided by a reference value)Definition DataOptions.h:49; ROOT::Fit::DataOptions::fUseRangebool fUseRangeuse the function range when creating the fit data (default is false)Definition DataOptions.h:51; ROOT::Fit::DataOptions::fUseEmptybool fUseEmptyuse empty bins (default is false) with a fixed error of 1Definition DataOptions.h:50; ROOT::Fit::DataOptions::fIntegralbool fIntegraluse integral of bin content instead of bin center (default is false)Definition DataOptions.h:47; ROOT::Fit::DataOptions::fExpErrorsbool fExpErrorsuse expected errors from the function and not from the dataDefinition DataOptions.h:53; ROOT::Fit::DataOptions::fBinVolumebool fBinVolumenormalize data by the bin volume (it is used in the Poisson likelihood fits)Definition DataOptions.h:48; ROOT::Fit::DataOptions::fCoordErrorsbool fCoordErrorsuse errors on the x coordinates when available (default is true)Definition DataOptions.h:54. histhistsrcHFitImpl.cxx. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:32 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:65254,error,error,65254,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,4,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"; For more details about parameter interaction see [api:parameters].; 2.3.1 The transformation for parameters with limits; [intro:limits]; For variable parameters with double sided limits \(a\) (lower) and \(b\) (upper), M uses the following transformation:; \[\begin{aligned}; P_{\mathrm{int}} &=& \arcsin; \left( 2\: \frac{ P_{\mathrm{ext}}-a}{ b-a} - 1 \right) \\; P_{\mathrm{ext}} &=& a + \frac{ b - a}{ 2}; \left( \sin P_{\mathrm{int}} + 1 \right) \end{aligned}\]; so that the internal value \(P_{\mathrm{int}}\) can take on any value, while the external value \(P_{\mathrm{ext}}\) can take on values only between the lower limit \(a\) and the upper limit \(b\). Since the transformation is necessarily non-linear, it would transform a nice linear problem into a nasty non-linear one, which is the reason why limits should be avoided if not necessary. In addition, the transformation does require some computer time, so it slows down the computation a little bit, and more importantly, it introduces additional numerical inaccuracy into the problem in addition to what is introduced in the numerical calculation of the \(\mbox{FCN}\) value. The effects of non-linearity and numerical roundoff both become more important as the external value gets closer to one of the limits (expressed as the distance to nearest limit divided by distance between limits). The user must therefore be aware of the fact that, for example, if he puts limits of \((0,10^{10})\) on a parameter, then the values \(0.0\) and \(1.0\) will be indistinguishable to the accuracy of most machines.; For this purpose single sided limits on parameters are provided by M , with their transformation being:; Lower bound \(a\):; \[\begin{aligned}; P_{\mathrm{int}} &=& \pm\sqrt{(P_{\mathrm{ext}} - a + 1)^2 - 1} \\; P_{\mathrm{ext}} &=& a - 1 + \sqrt{P_{\mathrm{int}}^2 + 1} \end{aligned}\]; Upper bound \(b\):; \[\begin{aligned}; P_{\mathrm{int}} &=& \pm\sqrt{(b - P_{\mathrm{ext}} + 1)^2 - 1} \\; P_{\mathrm{ext}} &=& b + 1 - \s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:14407,down,down,14407,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,1,['down'],['down']
Availability,"; For more details about parameter interaction see [api:parameters].; 2.3.1 The transformation for parameters with limits; [intro:limits]; For variable parameters with double sided limits \(a\) (lower) and \(b\) (upper), M uses the following transformation:; \[\begin{aligned}; P_{\mathrm{int}} &=& \arcsin; \left( 2\: \frac{ P_{\mathrm{ext}}-a}{ b-a} - 1 \right) \\; P_{\mathrm{ext}} &=& a + \frac{ b - a}{ 2}; \left( \sin P_{\mathrm{int}} + 1 \right) \end{aligned}\]; so that the internal value \(P_{\mathrm{int}}\) can take on any value, while the external value \(P_{\mathrm{ext}}\) can take on values only between the lower limit \(a\) and the upper limit \(b\). Since the transformation is necessarily non-linear, it would transform a nice linear problem into a nasty non-linear one, which is the reason why limits should be avoided if not necessary. In addition, the transformation does require some computer time, so it slows down the computation a little bit, and more importantly, it introduces additional numerical inaccuracy into the problem in addition to what is introduced in the numerical calculation of the \(\mbox{FCN}\) value. The effects of non-linearity and numerical roundoff both become more important as the external value gets closer to one of the limits (expressed as the distance to nearest limit divided by distance between limits). The user must therefore be aware of the fact that, for example, if they put limits of \((0,10^{10})\) on a parameter, then the values \(0.0\) and \(1.0\) will be indistinguishable to the accuracy of most machines.; For this purpose single sided limits on parameters are provided by M , with their transformation being:; Lower bound \(a\):; \[\begin{aligned}; P_{\mathrm{int}} &=& \pm\sqrt{(P_{\mathrm{ext}} - a + 1)^2 - 1} \\; P_{\mathrm{ext}} &=& a - 1 + \sqrt{P_{\mathrm{int}}^2 + 1} \end{aligned}\]; Upper bound \(b\):; \[\begin{aligned}; P_{\mathrm{int}} &=& \pm\sqrt{(b - P_{\mathrm{ext}} + 1)^2 - 1} \\; P_{\mathrm{ext}} &=& b + 1 - \",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html:10376,down,down,10376,root/htmldoc/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/htmldoc/guides/minuit2/Minuit2.html,1,['down'],['down']
Availability,"; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Building ROOT. Introduction; ROOT uses the CMake cross-platform build-generator tool as a primary build system. CMake does not build the project, it generates the files needed by your build tool (GNU make, Ninja, Visual Studio, etc) for building ROOT. The classic build with configure/make is is still available but it will not be evolving with the new features of ROOT. The instructions can be found here.; If you are really anxious about getting a functional ROOT build, go to the Quick Start section. If you are a CMake novice, start on Basic CMake usage and then go back to the Quick Start once you know what you are doing. The Options and Variables section is a reference for customizing your build. If you already have experience with CMake, this is the recommended starting point.; Preparation; Check the prerequisites and supported platforms for the list of packages needed for your setup before starting the build.; Quick Start; The following are the basic instructions for UNIX systems. We use here the command-line, non-interactive CMake interface. Download and unpack the ROOT's sources from the download area or using directly the Git repository. Follow the instructions for getting the ROOT sources; Open a shell. Your development tools must be reachable from this shell through the PATH environme",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/building-root.html:2166,avail,available,2166,d/building-root.html,https://root.cern,https://root.cern/d/building-root.html,1,['avail'],['available']
Availability,"; Function parameters:; numOfFittedPeaks-number of fitted peaks; x,y-position of channel; parameter-array of peaks parameters (amplitudes and positions); sigmax-sigmax of peaks; sigmay-sigmay of peaks; ro-correlation coefficient . Definition at line 987 of file TSpectrum2Fit.cxx. ◆ Derdersigmay(). Double_t TSpectrum2Fit::Derdersigmay ; (; Int_t ; numOfFittedPeaks, . Double_t ; x, . Double_t ; y, . const Double_t * ; parameter, . Double_t ; sigmax, . Double_t ; sigmay, . Double_t ; ro . ). protected . This function calculates second derivative of peaks shape function (see manual) according to sigmay of peaks. ; Function parameters:; numOfFittedPeaks-number of fitted peaks; x,y-position of channel; parameter-array of peaks parameters (amplitudes and positions); sigmax-sigmax of peaks; sigmay-sigmay of peaks; ro-correlation coefficient . Definition at line 1134 of file TSpectrum2Fit.cxx. ◆ Derfc(). Double_t TSpectrum2Fit::Derfc ; (; Double_t ; x). protected . This function calculates derivative of error function of x. ; Definition at line 324 of file TSpectrum2Fit.cxx. ◆ Deri01(). Double_t TSpectrum2Fit::Deri01 ; (; Double_t ; x, . Double_t ; ax, . Double_t ; x0, . Double_t ; sigmax, . Double_t ; tx, . Double_t ; sx, . Double_t ; bx . ). protected . This function calculates derivative of 2D peaks shape function (see manual) according to x position of 1D ridge. ; Function parameters:; x-channel in x-dimension; ax-amplitude of ridge; x0-position of peak in x-dimension; sigmax-sigmax of peaks; ro-correlation coefficient; tx, sx-relative amplitudes; bx-slope . Definition at line 823 of file TSpectrum2Fit.cxx. ◆ Deri02(). Double_t TSpectrum2Fit::Deri02 ; (; Double_t ; x, . Double_t ; y, . Double_t ; a, . Double_t ; x0, . Double_t ; y0, . Double_t ; sigmax, . Double_t ; sigmay, . Double_t ; ro, . Double_t ; txy, . Double_t ; sxy, . Double_t ; bx, . Double_t ; by . ). protected . This function calculates derivative of 2D peaks shape function (see manual) according to x positi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrum2Fit.html:41326,error,error,41326,doc/master/classTSpectrum2Fit.html,https://root.cern,https://root.cern/doc/master/classTSpectrum2Fit.html,1,['error'],['error']
Availability,"; Helper function used by TClass::GetClass().; This function attempts to load the dictionary for 'classname'; either from the TClassTable or from the list of generator.; If silent is 'true', do not warn about missing dictionary for the class.; (typically used for class that are used only for transient members). Int_t LoadClass(const char* classname, const char* libname, Bool_t check = kFALSE); Check if class ""classname"" is known to the interpreter (in fact,; this check is not needed anymore, so classname is ignored). If; not it will load library ""libname"". If the library name does; not start with ""lib"", ""lib"" will be prepended and a search will; be made in the DynamicPath (see .rootrc). If not found a search; will be made on libname (without ""lib"" prepended) and if not found; a direct try of libname will be made (in case it contained an; absolute path).; If check is true it will only check if libname exists and is; readable.; Returns 0 on successful loading, -1 in case libname does not; exist or in case of error and -2 in case of version mismatch. void ls(Option_t* option = """") const; To list all objects of the application.; Loop on all objects created in the ROOT linked lists.; Objects may be files and windows or any other object directly; attached to the ROOT linked list. Int_t LoadMacro(const char* filename, Int_t* error = 0, Bool_t check = kFALSE); Load a macro in the interpreter's memory. Equivalent to the command line; command "".L filename"". If the filename has ""+"" or ""++"" appended; the macro will be compiled by ACLiC. The filename must have the format:; [path/]macro.C[+|++[g|O]].; The possible error codes are defined by TInterpreter::EErrorCode.; If check is true it will only check if filename exists and is; readable.; Returns 0 on successful loading and -1 in case filename does not; exist or in case of error. Long_t Macro(const char* filename, Int_t* error = 0, Bool_t padUpdate = kTRUE); Execute a macro in the interpreter. Equivalent to the command line; comm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TROOT.html:27258,error,error,27258,root/html528/TROOT.html,https://root.cern,https://root.cern/root/html528/TROOT.html,4,['error'],['error']
Availability,"; IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Multiply. The function return kFALSE if the Multiply operation failed. Bool_t Multiply(const TH1* h1); Multiply this histogram by h1. this = this*h1. If errors of this are available (TH1::Sumw2), errors are recalculated.; Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; if not already set. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Multiply. The function return kFALSE if the Multiply operation failed. Bool_t Multiply(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """"); Replace contents of this histogram by multiplication of h1 by h2. this = (c1*h1)*(c2*h2). If errors of this are available (TH1::Sumw2), errors are recalculated.; Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; if not already set. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Multiply. The function return kFALSE if the Multiply operation failed. void Paint(Option_t* option = """"); Control routine to paint any kind of histograms. This function is automatically called by TCanvas::Update.; (see TH1::Draw for the list of options). TH1 * Rebin(Int_t ngroup = 2, const char* newname = """", const Double_t* xbins = 0); Rebin this histogram. -case 1 xbins=0; If newname is blank (default), the current histogram is modified and; a pointer to it is returned. If newname is not blank, the current histogram is not modified, and a; new histogram is returned which is a Clone of the current histogram; with its name set to newname. The parameter ngroup indi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:101845,error,errors,101845,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,6,"['avail', 'error']","['available', 'errors']"
Availability,"; If a draw option is specified, it will be used to draw the graph,; otherwise the graph will be drawn with the option specified in; TMultiGraph::Draw. Use GetDrawOption to return the option specified; when drawin the TMultiGraph. TFitResultPtr Fit(const char* formula, Option_t* option = """", Option_t* goption = """", Axis_t xmin = 0, Axis_t xmax = 0); Fit this graph with function with name fname. interface to TF1::Fit(TF1 *f1... TFitResultPtr Fit(TF1* f1, Option_t* option = """", Option_t* goption = """", Axis_t rxmin = 0, Axis_t rxmax = 0); Fit this multigraph with function f1. In this function all graphs of the multigraph are fitted simultaneously. f1 is an already predefined function created by TF1.; Predefined functions such as gaus, expo and poln are automatically; created by ROOT. The list of fit options is given in parameter option.; option = ""W"" Set all errors to 1; = ""U"" Use a User specified fitting algorithm (via SetFCN); = ""Q"" Quiet mode (minimum printing); = ""V"" Verbose mode (default is between Q and V); = ""B"" Use this option when you want to fix one or more parameters; and the fitting function is like ""gaus"",""expo"",""poln"",""landau"".; = ""R"" Use the Range specified in the function range; = ""N"" Do not store the graphics function, do not draw; = ""0"" Do not plot the result of the fit. By default the fitted function; is drawn unless the option""N"" above is specified.; = ""+"" Add this new fitted function to the list of fitted functions; (by default, any previous function is deleted); = ""C"" In case of linear fitting, not calculate the chisquare; (saves time); = ""F"" If fitting a polN, switch to minuit fitter; = ""ROB"" In case of linear fitting, compute the LTS regression; coefficients (robust(resistant) regression), using; the default fraction of good points; ""ROB=0.x"" - compute the LTS regression coefficients, using; 0.x as a fraction of good points. When the fit is drawn (by default), the parameter goption may be used; to specify a list of graphics options. See TGraph::P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiGraph.html:9490,error,errors,9490,root/html528/TMultiGraph.html,https://root.cern,https://root.cern/root/html528/TMultiGraph.html,1,['error'],['errors']
Availability,"; If opt == 0, both the preparation and building phases are run.; If opt == 1, only the preparation phase (asserting and, eventually, downloading; of the package) is done; '*path' contains the full path to the; package to be passed in the next call; If opt == 2, only the building phase is run using *path .; Returns 0 in case of success and -1 in case of error.; The code is equivalent to the one in TProofServ.cxx (TProof::kBuildPackage; case). Keep in sync in case of changes. Int_t LoadPackage(const char* package, Bool_t notOnClient = kFALSE, TList* loadopts = 0, TList* workers = 0); Load specified package. Executes the PROOF-INF/SETUP.C script; on all active nodes. If notOnClient = true, don't load package; on the client. The default is to load the package also on the client.; The argument 'loadopts' specify a list of objects to be passed to the SETUP.; The objects in the list must be streamable; the SETUP macro will be executed; like this: SETUP.C(loadopts).; Returns 0 in case of success and -1 in case of error. Int_t LoadPackageOnClient(const char* package, TList* loadopts = 0); Load specified package in the client. Executes the PROOF-INF/SETUP.C; script on the client. Returns 0 in case of success and -1 in case of error.; The code is equivalent to the one in TProofServ.cxx (TProof::kLoadPackage; case). Keep in sync in case of changes.; The argument 'loadopts' specify a list of objects to be passed to the SETUP.; The objects in the list must be streamable; the SETUP macro will be executed; like this: SETUP.C(loadopts).; Returns 0 in case of success and -1 in case of error. Int_t UnloadPackage(const char* package); Unload specified package.; Returns 0 in case of success and -1 in case of error. Int_t UnloadPackageOnClient(const char* package); Unload a specific package on the client.; Returns 0 in case of success and -1 in case of error.; The code is equivalent to the one in TProofServ.cxx (TProof::UnloadPackage; case). Keep in sync in case of changes. Int_t UnloadP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProof.html:72802,error,error,72802,root/html534/TProof.html,https://root.cern,https://root.cern/root/html534/TProof.html,3,['error'],['error']
Availability,"; If overflows are present and limits are different the function will fail.; The function returns the total number of entries in the result histogram; if the merge is successfull, -1 otherwise. IMPORTANT remark. The 2 axis x and y may have different number; of bins and different limits, BUT the largest bin width must be; a multiple of the smallest bin width and the upper limit must also; be a multiple of the bin width. TH2 * RebinX(Int_t ngroup = 2, const char* newname = """"); Rebin only the X axis; see Rebin2D. TH2 * RebinY(Int_t ngroup = 2, const char* newname = """"); Rebin only the Y axis; see Rebin2D. TH2 * Rebin2D(Int_t nxgroup = 2, Int_t nygroup = 2, const char* newname = """"); -*-*-*Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together*-*-*-*-. if newname is not blank a new temporary histogram hnew is created.; else the current histogram is modified (default); The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this; have to me merged into one bin of hnew; If the original histogram has errors stored (via Sumw2), the resulting; histograms has new errors correctly calculated. examples: if hpxpy is an existing TH2 histogram with 40 x 40 bins; hpxpy->Rebin2D(); // merges two bins along the xaxis and yaxis in one in hpxpy; // Carefull: previous contents of hpxpy are lost; hpxpy->RebinX(5); //merges five bins along the xaxis in one in hpxpy; TH2 *hnew = hpxpy->RebinY(5,""hnew""); // creates a new histogram hnew; // merging 5 bins of h1 along the yaxis in one bin. NOTE : If nxgroup/nygroup is not an exact divider of the number of bins,; along the xaxis/yaxis the top limit(s) of the rebinned histogram; is changed to the upper edge of the xbin=newxbins*nxgroup resp.; ybin=newybins*nygroup and the corresponding bins are added to; the overflow bin.; Statistics will be recomputed from the new bin contents. TProfile * DoProfile(bool onX, const char* name, Int_t firstbin, Int_t lastbin, Option_t* option) const. TProfile * Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2.html:41709,error,errors,41709,root/html528/TH2.html,https://root.cern,https://root.cern/root/html528/TH2.html,8,['error'],['errors']
Availability,"; If the Migrad method fails at first attempt, a simplex; minimization is performed and then migrad is tried again. Function Members (Methods); public:. virtual~CombinedMinimizer(); virtual const ROOT::Minuit2::MinimumBuilder&Builder() const; ROOT::Minuit2::CombinedMinimizerCombinedMinimizer(); ROOT::Minuit2::CombinedMinimizerCombinedMinimizer(const ROOT::Minuit2::CombinedMinimizer&); virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__CombinedMinimizer.html:1537,toler,toler,1537,root/html526/ROOT__Minuit2__CombinedMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__CombinedMinimizer.html,4,['toler'],['toler']
Availability,"; In case of an unweighted profile, it is equivalent to the number of entries per bin The effective entries is defined as the square of the sum of the weights divided by the sum of the weights square. TProfile::Sumw2() must be called before filling the profile with weights. Only by calling this method the sum of the square of the weights per bin is stored. ; Definition at line 853 of file TProfile.cxx. ◆ GetBinEntries(). Double_t TProfile::GetBinEntries ; (; Int_t ; bin); const. virtual . Return bin entries of a Profile histogram. ; Definition at line 837 of file TProfile.cxx. ◆ GetBinError() [1/3]. Double_t TProfile::GetBinError ; (; Int_t ; bin); const. overridevirtual . Return bin error of a Profile histogram. ; Computing errors: A moving field; The computation of errors for a TProfile has evolved with the versions of ROOT. The difficulty is in computing errors for bins with low statistics. prior to version 3.00, we had no special treatment of low statistic bins. As a result, these bins had huge errors. The reason is that the expression eprim2 is very close to 0 (rounding problems) or 0.; in version 3.00 (18 Dec 2000), the algorithm is protected for values of eprim2 very small and the bin errors set to the average bin errors, following recommendations from a group of users.; in version 3.01 (19 Apr 2001), it is realized that the algorithm above should be applied only to low statistic bins.; in version 3.02 (26 Sep 2001), the same group of users recommend instead to take two times the average error on all bins for these low statistics bins giving a very small value for eprim2.; in version 3.04 (Nov 2002), the algorithm is modified/protected for the case when a TProfile is projected (ProjectionX). The previous algorithm generated a N^2 problem when projecting a TProfile with a large number of bins (eg 100000).; in version 3.05/06, a new static function TProfile::Approximate is introduced to enable or disable (default) the approximation. Ideas for improvements of thi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:73453,error,errors,73453,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['error'],['errors']
Availability,"; Inherited Members; Includes; Libraries. Function documentation; TBuffer3D(Int_t type, UInt_t reqPnts = 0, UInt_t reqPntsCapacity = 0, UInt_t reqSegs = 0, UInt_t reqSegsCapacity = 0, UInt_t reqPols = 0, UInt_t reqPolsCapacity = 0); Destructor; Construct from supplied shape type and raw sizes. ~TBuffer3D(); Destructor. void Init(); Initialise buffer. void ClearSectionsValid(); Clear any sections marked valid. void SetLocalMasterIdentity(); Set kRaw tesselation section of buffer with supplied sizes; Set fLocalMaster in section kCore to identity. void SetAABoundingBox(const Double_t* origin, const Double_t* halfLengths); Set fBBVertex in kBoundingBox section to a axis aligned (local) BB; using supplied origin and box half lengths. 7-------6; /| /|; 3-------2 |; | 4-----|-5; |/ |; 0-------1. Bool_t SetRawSizes(UInt_t reqPnts, UInt_t reqPntsCapacity, UInt_t reqSegs, UInt_t reqSegsCapacity, UInt_t reqPols, UInt_t reqPolsCapacity); Set kRaw tesselation section of buffer with supplied sizes. UInt_t GetCSLevel(); return CS level. void IncCSLevel(); increment CS level. UInt_t DecCSLevel(); decrement CS level. TBuffer3D(const TBuffer3D& ); Non-copyable class. const TBuffer3D & operator=(const TBuffer3D& ). void SetSectionsValid(UInt_t mask); Section validity flags. { fSections |= mask & kAll; }. Bool_t SectionsValid(UInt_t mask) const; { return (Bool_t) (GetSections(mask) == mask); }. UInt_t GetSections(UInt_t mask) const; { return (UInt_t) (fSections & mask); }. UInt_t NbPnts() const; { return fNbPnts; }. UInt_t NbSegs() const; { return fNbSegs; }. UInt_t NbPols() const; { return fNbPols; }. Int_t Type() const; SECTION: kCore. { return fType; }. » Author: Olivier Couet 05/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TBuffer3D.h,v 1.00 » Last generated: 2009-12-07 15:44; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBuffer3D.html:16990,mask,mask,16990,root/html526/TBuffer3D.html,https://root.cern,https://root.cern/root/html526/TBuffer3D.html,7,['mask'],['mask']
Availability,"; Inherited Members; Includes; Libraries. Function documentation; TBuffer3D(Int_t type, UInt_t reqPnts = 0, UInt_t reqPntsCapacity = 0, UInt_t reqSegs = 0, UInt_t reqSegsCapacity = 0, UInt_t reqPols = 0, UInt_t reqPolsCapacity = 0); Destructor; Construct from supplied shape type and raw sizes. ~TBuffer3D(); Destructor. void Init(); Initialise buffer. void ClearSectionsValid(); Clear any sections marked valid. void SetLocalMasterIdentity(); Set kRaw tesselation section of buffer with supplied sizes; Set fLocalMaster in section kCore to identity. void SetAABoundingBox(const Double_t* origin, const Double_t* halfLengths); Set fBBVertex in kBoundingBox section to a axis aligned (local) BB; using supplied origin and box half lengths. 7-------6; /| /|; 3-------2 |; | 4-----|-5; |/ |; 0-------1. Bool_t SetRawSizes(UInt_t reqPnts, UInt_t reqPntsCapacity, UInt_t reqSegs, UInt_t reqSegsCapacity, UInt_t reqPols, UInt_t reqPolsCapacity); Set kRaw tesselation section of buffer with supplied sizes. UInt_t GetCSLevel(); return CS level. void IncCSLevel(); increment CS level. UInt_t DecCSLevel(); decrement CS level. TBuffer3D(const TBuffer3D& ); Non-copyable class. const TBuffer3D & operator=(const TBuffer3D& ). void SetSectionsValid(UInt_t mask); Section validity flags. { fSections |= mask & kAll; }. Bool_t SectionsValid(UInt_t mask) const; { return (Bool_t) (GetSections(mask) == mask); }. UInt_t GetSections(UInt_t mask) const; { return (UInt_t) (fSections & mask); }. UInt_t NbPnts() const; { return fNbPnts; }. UInt_t NbSegs() const; { return fNbSegs; }. UInt_t NbPols() const; { return fNbPols; }. Int_t Type() const; SECTION: kCore. { return fType; }. » Author: Olivier Couet 05/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TBuffer3D.h,v 1.00 » Last generated: 2010-09-23 20:02; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBuffer3D.html:16976,mask,mask,16976,root/html528/TBuffer3D.html,https://root.cern,https://root.cern/root/html528/TBuffer3D.html,7,['mask'],['mask']
Availability,"; Inherited Members; Includes; Libraries. Function documentation; TBuffer3D(Int_t type, UInt_t reqPnts = 0, UInt_t reqPntsCapacity = 0, UInt_t reqSegs = 0, UInt_t reqSegsCapacity = 0, UInt_t reqPols = 0, UInt_t reqPolsCapacity = 0); Destructor; Construct from supplied shape type and raw sizes. ~TBuffer3D(); Destructor. void Init(); Initialise buffer. void ClearSectionsValid(); Clear any sections marked valid. void SetLocalMasterIdentity(); Set kRaw tesselation section of buffer with supplied sizes; Set fLocalMaster in section kCore to identity. void SetAABoundingBox(const Double_t* origin, const Double_t* halfLengths); Set fBBVertex in kBoundingBox section to a axis aligned (local) BB; using supplied origin and box half lengths. 7-------6; /| /|; 3-------2 |; | 4-----|-5; |/ |; 0-------1. Bool_t SetRawSizes(UInt_t reqPnts, UInt_t reqPntsCapacity, UInt_t reqSegs, UInt_t reqSegsCapacity, UInt_t reqPols, UInt_t reqPolsCapacity); Set kRaw tesselation section of buffer with supplied sizes. UInt_t GetCSLevel(); return CS level. void IncCSLevel(); increment CS level. UInt_t DecCSLevel(); decrement CS level. TBuffer3D(const TBuffer3D& ); Non-copyable class. const TBuffer3D & operator=(const TBuffer3D& ). void SetSectionsValid(UInt_t mask); Section validity flags. { fSections |= mask & kAll; }. Bool_t SectionsValid(UInt_t mask) const; { return (Bool_t) (GetSections(mask) == mask); }. UInt_t GetSections(UInt_t mask) const; { return (UInt_t) (fSections & mask); }. UInt_t NbPnts() const; { return fNbPnts; }. UInt_t NbSegs() const; { return fNbSegs; }. UInt_t NbPols() const; { return fNbPols; }. Int_t Type() const; SECTION: kCore. { return fType; }. » Author: Olivier Couet 05/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TBuffer3D.h,v 1.00 » Last generated: 2011-07-04 15:25; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBuffer3D.html:17045,mask,mask,17045,root/html530/TBuffer3D.html,https://root.cern,https://root.cern/root/html530/TBuffer3D.html,7,['mask'],['mask']
Availability,"; Inherited Members; Includes; Libraries. Function documentation; TBuffer3D(Int_t type, UInt_t reqPnts = 0, UInt_t reqPntsCapacity = 0, UInt_t reqSegs = 0, UInt_t reqSegsCapacity = 0, UInt_t reqPols = 0, UInt_t reqPolsCapacity = 0); Destructor; Construct from supplied shape type and raw sizes. ~TBuffer3D(); Destructor. void Init(); Initialise buffer. void ClearSectionsValid(); Clear any sections marked valid. void SetLocalMasterIdentity(); Set kRaw tesselation section of buffer with supplied sizes; Set fLocalMaster in section kCore to identity. void SetAABoundingBox(const Double_t* origin, const Double_t* halfLengths); Set fBBVertex in kBoundingBox section to a axis aligned (local) BB; using supplied origin and box half lengths. 7-------6; /| /|; 3-------2 |; | 4-----|-5; |/ |; 0-------1. Bool_t SetRawSizes(UInt_t reqPnts, UInt_t reqPntsCapacity, UInt_t reqSegs, UInt_t reqSegsCapacity, UInt_t reqPols, UInt_t reqPolsCapacity); Set kRaw tesselation section of buffer with supplied sizes. UInt_t GetCSLevel(); return CS level. void IncCSLevel(); increment CS level. UInt_t DecCSLevel(); decrement CS level. TBuffer3D(const TBuffer3D& ); Non-copyable class. const TBuffer3D & operator=(const TBuffer3D& ). void SetSectionsValid(UInt_t mask); Section validity flags. { fSections |= mask & kAll; }. Bool_t SectionsValid(UInt_t mask) const; { return (Bool_t) (GetSections(mask) == mask); }. UInt_t GetSections(UInt_t mask) const; { return (UInt_t) (fSections & mask); }. UInt_t NbPnts() const; { return fNbPnts; }. UInt_t NbSegs() const; { return fNbSegs; }. UInt_t NbPols() const; { return fNbPols; }. Int_t Type() const; SECTION: kCore. { return fType; }. » Author: Olivier Couet 05/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TBuffer3D.h,v 1.00 » Last generated: 2011-11-03 20:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBuffer3D.html:17045,mask,mask,17045,root/html532/TBuffer3D.html,https://root.cern,https://root.cern/root/html532/TBuffer3D.html,7,['mask'],['mask']
Availability,"; Inherited Members; Includes; Libraries. Function documentation; TBuffer3D(Int_t type, UInt_t reqPnts = 0, UInt_t reqPntsCapacity = 0, UInt_t reqSegs = 0, UInt_t reqSegsCapacity = 0, UInt_t reqPols = 0, UInt_t reqPolsCapacity = 0); Destructor; Construct from supplied shape type and raw sizes. ~TBuffer3D(); Destructor. void Init(); Initialise buffer. void ClearSectionsValid(); Clear any sections marked valid. void SetLocalMasterIdentity(); Set kRaw tesselation section of buffer with supplied sizes; Set fLocalMaster in section kCore to identity. void SetAABoundingBox(const Double_t* origin, const Double_t* halfLengths); Set fBBVertex in kBoundingBox section to a axis aligned (local) BB; using supplied origin and box half lengths. 7-------6; /| /|; 3-------2 |; | 4-----|-5; |/ |; 0-------1. Bool_t SetRawSizes(UInt_t reqPnts, UInt_t reqPntsCapacity, UInt_t reqSegs, UInt_t reqSegsCapacity, UInt_t reqPols, UInt_t reqPolsCapacity); Set kRaw tesselation section of buffer with supplied sizes. UInt_t GetCSLevel(); return CS level. void IncCSLevel(); increment CS level. UInt_t DecCSLevel(); decrement CS level. TBuffer3D(const TBuffer3D& ); Non-copyable class. const TBuffer3D & operator=(const TBuffer3D& ). void SetSectionsValid(UInt_t mask); Section validity flags. { fSections |= mask & kAll; }. Bool_t SectionsValid(UInt_t mask) const; { return (Bool_t) (GetSections(mask) == mask); }. UInt_t GetSections(UInt_t mask) const; { return (UInt_t) (fSections & mask); }. UInt_t NbPnts() const; { return fNbPnts; }. UInt_t NbSegs() const; { return fNbSegs; }. UInt_t NbPols() const; { return fNbPols; }. Int_t Type() const; SECTION: kCore. { return fType; }. » Author: Olivier Couet 05/05/04 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id: TBuffer3D.h,v 1.00 » Last generated: 2015-03-12 16:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBuffer3D.html:17064,mask,mask,17064,root/html534/TBuffer3D.html,https://root.cern,https://root.cern/root/html534/TBuffer3D.html,7,['mask'],['mask']
Availability,"; Inherited Members; Includes; Libraries. Function documentation; TSAXParser(); Create SAX parser. ~TSAXParser(); TSAXParser desctructor. void OnStartDocument(); Emit a signal for OnStartDocument. void OnEndDocument(); Emit a signal for OnEndDocument. void OnStartElement(const char* name, const TList* attr); Emit a signal for OnStarElement, where name is the Element's name and; attribute is a TList of (TObjString*, TObjString *) TPair's.; The TPair's key is the attribute's name and value is the attribute's; value. void OnEndElement(const char* name); Emit a signal for OnEndElement, where name is the Element's name. void OnCharacters(const char* characters); Emit a signal for OnCharacters, where characters are the characters; outside of tags. void OnComment(const char* text); Emit a signal for OnComment, where text is the comment. void OnWarning(const char* text); Emit a signal for OnWarning, where text is the warning. Int_t OnError(const char* text); Emit a signal for OnError, where text is the error and it returns the; Parse Error Code, see TXMLParser. Int_t OnFatalError(const char* text); Emit a signal for OnFactalError, where text is the error and it; returns the Parse Error Code, see TXMLParser. void OnCdataBlock(const char* text, Int_t len); Emit a signal for OnCdataBlock. Int_t Parse(); This function parses the xml file, by initializing the parser and checks; whether the parse context is created or not, it will check as well; whether the document is well formated.; It returns the parse error code, see TXMLParser. Int_t ParseFile(const char* filename); It creates the parse context of the xml file, where the xml file name is; filename. If context is created sucessfully, it will call Parse(); It returns parse error code, see TXMLParser. Int_t ParseBuffer(const char* contents, Int_t len); It parse the contents, instead of a file.; It will return error if is attempted to parse a second file while; a parse is in progres.; It returns parse code error, see TXMLParser.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSAXParser.html:11987,error,error,11987,root/html528/TSAXParser.html,https://root.cern,https://root.cern/root/html528/TSAXParser.html,4,['error'],['error']
Availability,"; Int_tfNumParnumber of parameters; vector<Double_t>fParametersvector holding the current parameters. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinuitWrapper(TMVA::IFitterTarget& target, Int_t maxpar); constructor. Int_t Eval(Int_t , Double_t* , Double_t& , Double_t* , Int_t ); std::vector<Double_t> parameters( npar );. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); Execute a fitter command;; command : command string; args : list of nargs command arguments. void Clear(Option_t* = 0); reset the fitter environment. Int_t GetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx); return global fit parameters; amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc); return current errors for a parameter; ipar : parameter number; eplus : upper error; eminus : lower error; eparab : parabolic error; globcc : global correlation coefficient. Int_t SetParameter(Int_t ipar, const char* parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh); set initial values for a parameter; ipar : parameter number; parname : parameter name; value : initial parameter value; verr : initial error for this parameter; vlow : lower value for the parameter; vhigh : upper value for the parameter. TObject * Clone(const char* ) const; produces a clone of this MinuitWrapper. MinuitWrapper(TMVA::IFitterTarget& target, Int_t maxpar). virtual ~MinuitWrapper(); {}. void SetFitterTarget(TMVA::IFitterTarget& target); { fFitterTarget = target; }. » Author: Peter Speckmayer » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-02 16:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMVA__MinuitWrapper.html:19925,error,error,19925,root/html604/TMVA__MinuitWrapper.html,https://root.cern,https://root.cern/root/html604/TMVA__MinuitWrapper.html,1,['error'],['error']
Availability,"; Int_tfNumParnumber of parameters; vector<Double_t>fParametersvector holding the current parameters. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MinuitWrapper(TMVA::IFitterTarget& target, Int_t maxpar); constructor. Int_t Eval(Int_t , Double_t* , Double_t& , Double_t* , Int_t ); std::vector<Double_t> parameters( npar );. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); Execute a fitter command;; command : command string; args : list of nargs command arguments. void Clear(Option_t* = 0); reset the fitter environment. Int_t GetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx); return global fit parameters; amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc); return current errors for a parameter; ipar : parameter number; eplus : upper error; eminus : lower error; eparab : parabolic error; globcc : global correlation coefficient. Int_t SetParameter(Int_t ipar, const char* parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh); set initial values for a parameter; ipar : parameter number; parname : parameter name; value : initial parameter value; verr : initial error for this parameter; vlow : lower value for the parameter; vhigh : upper value for the parameter. TObject * Clone(const char* ) const; produces a clone of this MinuitWrapper. MinuitWrapper(TMVA::IFitterTarget& target, Int_t maxpar). virtual ~MinuitWrapper(); {}. void SetFitterTarget(TMVA::IFitterTarget& target); { fFitterTarget = target; }. » Author: Peter Speckmayer » Copyright (c) 2005: *; » Last changed: root/tmva $Id$ » Last generated: 2015-06-30 15:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMVA__MinuitWrapper.html:19908,error,error,19908,root/html602/TMVA__MinuitWrapper.html,https://root.cern,https://root.cern/root/html602/TMVA__MinuitWrapper.html,1,['error'],['error']
Availability,"; Int_t ; e, . Color_t ; fcolor . ). virtual . Set Fill Color of error e (-1 = Global and x errors). ; Definition at line 2040 of file TGraphMultiErrors.cxx. ◆ SetFillColorAlpha() [1/2]. void TAttFill::SetFillColorAlpha ; (; Color_t ; fcolor, . Float_t ; falpha . ). virtual . Set a transparent fill color. ; Parameters. fcolordefines the fill color ; falphadefines the percentage of opacity from 0. (fully transparent) to 1. (fully opaque). . Notefalpha is ignored (treated as 1) if the TCanvas has no GL support activated. ; Reimplemented from TAttFill.; Definition at line 38 of file TAttFill.cxx. ◆ SetFillColorAlpha() [2/2]. void TGraphMultiErrors::SetFillColorAlpha ; (; Int_t ; e, . Color_t ; fcolor, . Float_t ; falpha . ). virtual . Set Fill Color and Alpha of error e (-1 = Global and x errors). ; Definition at line 2051 of file TGraphMultiErrors.cxx. ◆ SetFillStyle() [1/2]. void TGraphMultiErrors::SetFillStyle ; (; Int_t ; e, . Style_t ; fstyle . ). virtual . Set Fill Style of error e (-1 = Global and x errors). ; Definition at line 2062 of file TGraphMultiErrors.cxx. ◆ SetFillStyle() [2/2]. virtual void TAttFill::SetFillStyle ; (; Style_t ; fstyle). inlinevirtual . Set the fill area style. ; Reimplemented from TAttFill.; Definition at line 39 of file TAttFill.h. ◆ SetLineColor() [1/2]. virtual void TAttLine::SetLineColor ; (; Color_t ; lcolor). inlinevirtual . Set the line color. ; Reimplemented from TAttLine.; Definition at line 40 of file TAttLine.h. ◆ SetLineColor() [2/2]. void TGraphMultiErrors::SetLineColor ; (; Int_t ; e, . Color_t ; lcolor . ). virtual . Set Line Color of error e (-1 = Global and x errors). ; Definition at line 2073 of file TGraphMultiErrors.cxx. ◆ SetLineColorAlpha() [1/2]. void TAttLine::SetLineColorAlpha ; (; Color_t ; lcolor, . Float_t ; lalpha . ). virtual . Set a transparent line color. ; Parameters. lcolordefines the line color ; lalphadefines the percentage of opacity from 0. (fully transparent) to 1. (fully opaque). . Notelalpha is ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:71624,error,error,71624,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,2,['error'],"['error', 'errors']"
Availability,"; Int_t ; e, . Color_t ; lcolor . ). virtual . Set Line Color of error e (-1 = Global and x errors). ; Definition at line 2073 of file TGraphMultiErrors.cxx. ◆ SetLineColorAlpha() [1/2]. void TAttLine::SetLineColorAlpha ; (; Color_t ; lcolor, . Float_t ; lalpha . ). virtual . Set a transparent line color. ; Parameters. lcolordefines the line color ; lalphadefines the percentage of opacity from 0. (fully transparent) to 1. (fully opaque). . Notelalpha is ignored (treated as 1) if the TCanvas has no GL support activated. ; Reimplemented from TAttLine.; Definition at line 41 of file TAttLine.cxx. ◆ SetLineColorAlpha() [2/2]. void TGraphMultiErrors::SetLineColorAlpha ; (; Int_t ; e, . Color_t ; lcolor, . Float_t ; lalpha . ). virtual . Set Line Color and Alpha of error e (-1 = Global and x errors). ; Definition at line 2084 of file TGraphMultiErrors.cxx. ◆ SetLineStyle() [1/2]. void TGraphMultiErrors::SetLineStyle ; (; Int_t ; e, . Style_t ; lstyle . ). virtual . Set Line Style of error e (-1 = Global and x errors). ; Definition at line 2095 of file TGraphMultiErrors.cxx. ◆ SetLineStyle() [2/2]. virtual void TAttLine::SetLineStyle ; (; Style_t ; lstyle). inlinevirtual . Set the line style. ; Reimplemented from TAttLine.; Definition at line 42 of file TAttLine.h. ◆ SetLineWidth() [1/2]. void TGraphMultiErrors::SetLineWidth ; (; Int_t ; e, . Width_t ; lwidth . ). virtual . Set Line Width of error e (-1 = Global and x errors). ; Definition at line 2106 of file TGraphMultiErrors.cxx. ◆ SetLineWidth() [2/2]. virtual void TAttLine::SetLineWidth ; (; Width_t ; lwidth). inlinevirtual . Set the line width. ; Reimplemented from TAttLine.; Definition at line 43 of file TAttLine.h. ◆ SetPointError() [1/2]. void TGraphMultiErrors::SetPointError ; (; Double_t ; exL, . Double_t ; exH, . Double_t ; eyL1, . Double_t ; eyH1, . Double_t ; eyL2 = 0., . Double_t ; eyH2 = 0., . Double_t ; eyL3 = 0., . Double_t ; eyH3 = 0. . ). virtual . Set ex and ey values for point pointed by the mouse. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:73166,error,error,73166,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,2,['error'],"['error', 'errors']"
Availability,"; Int_t GetClientProtocol () const;  ; const char * GetConfDir () const;  ; const char * GetConfFile () const;  ; Float_t GetCpuTime () const;  ; const char * GetDataPoolUrl () const;  ; TMap * GetDataSetQuota (const char *optStr="""");  returns a map of the quotas of all groups ;  ; TString Getenv (const char *env, const char *ord=""0"");  Get value of environment variable 'env' on node 'ord'. ;  ; TList * GetFeedbackList () const;  Return feedback list. ;  ; const char * GetGroup () const;  ; const char * GetImage () const;  ; TList * GetInputList ();  Get input list. ;  ; TMacro * GetLastLog ();  Fill a TMacro with the log lines since the last reading (fLogFileR) Return (TMacro *)0 if no line was logged. ;  ; TList * GetListOfEnabledPackages ();  Get from the master the list of names of the packages enabled. ;  ; TList * GetListOfPackages ();  Get from the master the list of names of the packages available. ;  ; TList * GetListOfSlaveInfos ();  Returns list of TSlaveInfo's. In case of error return 0. ;  ; TList * GetLoadedMacros () const;  ; void GetLog (Int_t start=-1, Int_t end=-1);  Ask for remote logs in the range [start, end]. ;  ; Int_t GetLogLevel () const;  ; TMacro * GetMacroLog ();  ; TProofMgr * GetManager ();  ; const char * GetMaster () const;  ; void GetMaxQueries ();  Get max number of queries whose full results are kept in the remote sandbox. ;  ; TFileCollection * GetMissingFiles (TQueryResult *qr=0);  Get a TFileCollection with the files missing in the query described by 'qr' or the last query if qr is null (default). ;  ; Int_t GetNumberOfDrawQueries ();  ; Int_t GetNumberOfQueries ();  Number of queries processed by this session. ;  ; TObject * GetOutput (const char *name);  Get specified object that has been produced during the processing (see Process()). ;  ; TList * GetOutputList ();  Get list with all object created during processing (see Process()). ;  ; TList * GetOutputNames ();  FIXME: to be written. ;  ; Int_t GetParallel () const;  Return",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:11455,error,error,11455,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['error'],['error']
Availability,"; Level is the logging level and mess the message that will be written on the log. ; Reimplemented from TSystem.; Definition at line 2654 of file TUnixSystem.cxx. ◆ TempDirectory(). const char * TUnixSystem::TempDirectory ; (; ); const. overridevirtual . Return a user configured or systemwide directory to create temporary files in. ; Reimplemented from TSystem.; Definition at line 1503 of file TUnixSystem.cxx. ◆ TempFileName(). FILE * TUnixSystem::TempFileName ; (; TString & ; base, . const char * ; dir = nullptr, . const char * ; suffix = nullptr . ). overridevirtual . Create a secure temporary file by appending a unique 6 letter string to base. ; The file will be created in a standard (system) directory or in the directory provided in dir. Optionally one can provide suffix append to the final name - like extension "".txt"" or "".html"". The full filename is returned in base and a filepointer is returned for safely writing to the file (this avoids certain security problems). Returns 0 in case of error. ; Reimplemented from TSystem.; Definition at line 1523 of file TUnixSystem.cxx. ◆ Umask(). int TUnixSystem::Umask ; (; Int_t ; mask). overridevirtual . Set the process file creation mode mask. ; Reimplemented from TSystem.; Definition at line 1901 of file TUnixSystem.cxx. ◆ UnixFilestat(). int TUnixSystem::UnixFilestat ; (; const char * ; fpath, . FileStat_t & ; buf . ). staticprotected . Get info about a file. ; Info is returned in the form of a FileStat_t structure (see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Definition at line 4039 of file TUnixSystem.cxx. ◆ UnixFSstat(). int TUnixSystem::UnixFSstat ; (; const char * ; path, . Long_t * ; id, . Long_t * ; bsize, . Long_t * ; blocks, . Long_t * ; bfree . ). staticprotected . Get info about a file system: id, bsize, bfree, blocks. ; Id is file system type (machine dependend, see statfs()) Bsize is block size of file system Blocks is total number of blocks in file sy",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:71121,error,error,71121,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['error'],['error']
Availability,"; Libraries. Function documentation; THtml(); Create a THtml object.; In case output directory does not exist an error; will be printed and gHtml stays 0 also zombie bit will be set. ~THtml(); Default destructor. void AddMacroPath(const char* path); Add path to the directories to be searched for macro files; that are to be executed via the TDocMacroDirective; (""Begin_Macro""/""End_Macro""); relative to the source file; that the directive is run on. void CreateAuxiliaryFiles() const; copy CSS, javascript file, etc to the output dir. const char* GetEtcDir() const; Get the directory containing THtml's auxiliary files ($ROOTSYS/etc/html). TClassDocInfo * GetNextClass(); Return the next class to be generated for MakeClassThreaded. const char* GetURL(const char* lib = 0) const; Get the documentation URL for library lib.; If lib == 0 or no documentation URL has been set for lib, return the ROOT; documentation URL. The return value is always != 0. Bool_t HaveDot(); Check whether dot is available in $PATH or in the directory set; by SetDotPath(). void HelperDeleted(THtml::THelperBase* who); Inform the THtml object that one of its helper objects was deleted.; Called by THtml::HelperBase::~HelperBase(). void Convert(const char* filename, const char* title, const char* dirname = """", const char* relpath = ""../"", Int_t includeOutput = kNoOutput, const char* context = """"); It converts a single text file to HTML. Input: filename - name of the file to convert; title - title which will be placed at the top of the HTML file; dirname - optional parameter, if it's not specified, output will; be placed in htmldoc/examples directory.; relpath - optional parameter pointing to the THtml generated doc; on the server, relative to the current page.; includeOutput - if != kNoOutput, run the script passed as filename and; store all created canvases in PNG files that are; shown next to the converted source. Bitwise-ORing with; kForceOutput re-runs the script even if output PNGs exist; that are newer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/THtml.html:28392,avail,available,28392,root/html530/THtml.html,https://root.cern,https://root.cern/root/html530/THtml.html,5,['avail'],['available']
Availability,"; Libraries. Function documentation; THtml(); Create a THtml object.; In case output directory does not exist an error; will be printed and gHtml stays 0 also zombie bit will be set. ~THtml(); Default destructor. void AddMacroPath(const char* path); Add path to the directories to be searched for macro files; that are to be executed via the TDocMacroDirective; (""Begin_Macro""/""End_Macro""); relative to the source file; that the directive is run on. void CreateAuxiliaryFiles() const; copy CSS, javascript file, etc to the output dir. const char* GetEtcDir() const; Get the directory containing THtml's auxiliary files ($ROOTSYS/etc/html). TClassDocInfo * GetNextClass(); Return the next class to be generated for MakeClassThreaded. const char* GetURL(const char* lib = 0) const; Get the documentation URL for library lib.; If lib == 0 or no documentation URL has been set for lib, return the ROOT; documentation URL. The return value is always != 0. Bool_t HaveDot(); Check whether dot is available in $PATH or in the directory set; by SetDotPath(). void HelperDeleted(THtml::THelperBase* who); Inform the THtml object that one of its helper objects was deleted.; Called by THtml::HelperBase::~HelperBase(). void Convert(const char* filename, const char* title, const char* dirname = """", const char* relpath = ""../"", Int_t includeOutput = kNoOutput, const char* context = """"); It converts a single text file to HTML. Input: filename - name of the file to convert; title - title which will be placed at the top of the HTML file; dirname - optional parameter, if it's not specified, output will; be placed in htmldoc/examples directory.; relpath - optional parameter pointing to the THtml generated doc; on the server, relative to the current page.; includeOutput - if != kNoOutput, run the script passed as filename and; store all created canvases in PNG files that are; shown next to the converted source. Bitwise-ORing with; re-runs the script even if output PNGs exist that are newer; than the scr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THtml.html:28522,avail,available,28522,root/html528/THtml.html,https://root.cern,https://root.cern/root/html528/THtml.html,1,['avail'],['available']
Availability,"; No Matches. Compression.h. Go to the documentation of this file. 1// @(#)root/zip:$Id$; 2// Author: David Dagenhart May 2011; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#ifndef ROOT_Compression; 13#define ROOT_Compression; 14 ; 15#include ""RtypesCore.h""; 16 ; 17#include <string>; 18 ; 19namespace ROOT {; 20 ; 21/// The global settings depend on a global variable named R__ZipMode which can be; 22/// modified by a global function named R__SetZipMode. Both are defined in Bits.h.; 23///; 24/// - The default is to use the global setting and the default of the global; 25/// setting is to use the ZLIB compression algorithm.; 26/// - The LZMA algorithm (from the XZ package) is also available. The LZMA; 27/// compression usually results in greater compression factors, but takes; 28/// more CPU time and memory when compressing. LZMA memory usage is particularly; 29/// high for compression levels 8 and 9.; 30/// - Finally, the LZ4 package results in worse compression ratios; 31/// than ZLIB but achieves much faster decompression rates.; 32///; 33/// The current algorithms support level 1 to 9. The higher the level the greater; 34/// the compression and more CPU time and memory resources used during compression.; 35/// Level 0 means no compression.; 36///; 37/// Recommendation for the compression algorithm's levels:; 38/// - ZLIB is recommended to be used with compression level 1 [101]; 39/// - LZMA is recommended to be used with compression level 7-8 (higher is better,; 40/// since in the case of LZMA we don't care about compression/decompression speed); 41/// [207 - 208]; 42/// - LZ4 is recommended to be used with compression level 4 [404]; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Compression_8h_source.html:1139,avail,available,1139,doc/v632/Compression_8h_source.html,https://root.cern,https://root.cern/doc/v632/Compression_8h_source.html,1,['avail'],['available']
Availability,"; Open()TApplicationinlinevirtual; OpenForumTopic(const TString &type)TApplication; OpenGitHubIssue(const TString &type)TApplication; OpenInBrowser(const TString &url)TApplication; OpenReferenceGuideFor(const TString &strippedClass)TApplication; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TRint &)=deleteTRintprivate; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; ParseRemoteLine(const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script)TApplicationprotectedstatic; Pop()TObjectvirtual; Print(Option_t *option="""") constTObjectvirtual; PrintLogo(Bool_t lite=kFALSE)TRintvirtual; ProcessFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationvirtual; ProcessLine(const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr)TApplicationvirtual; ProcessLineNr(const char *filestem, const char *line, Int_t *error=nullptr)TRintprivate; ProcessRemote(const char *line, Int_t *error=nullptr) overrideTRintprivatevirtual; QuitOpt() constTApplicationinline; Raise()TApplicationinlinevirtual; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RemoveIdleTimer()TApplicationvirtual; ResetBit(UInt_t f)TObjectinline; ReturnFromRun() constTApplicationinline; ReturnPressed(char *text)TApplicationvirtual; Run(Bool_t retrn=kFALSE) overrideTRintvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetEchoMode(Bool_t mode) over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint-members.html:9805,error,error,9805,doc/master/classTRint-members.html,https://root.cern,https://root.cern/doc/master/classTRint-members.html,1,['error'],['error']
Availability,"; Parameters. [in]biashistogram with new bias vector. the initial bias vector is determined from the response matrix but may be changed by using this method ; Definition at line 1895 of file TUnfold.cxx. ◆ SetConstraint(). void TUnfold::SetConstraint ; (; EConstraint ; constraint). set type of area constraint ; results of a previous unfolding are reset ; Definition at line 3211 of file TUnfold.cxx. ◆ SetEpsMatrix(). void TUnfold::SetEpsMatrix ; (; Double_t ; eps). set numerical accuracy for Eigenvalue analysis when inverting matrices with rank problems ; Definition at line 3703 of file TUnfold.cxx. ◆ SetInput(). Int_t TUnfold::SetInput ; (; const TH1 * ; input, . Double_t ; scaleBias = 0.0, . Double_t ; oneOverZeroError = 0.0, . const TH2 * ; hist_vyy = nullptr, . const TH2 * ; hist_vyy_inv = nullptr . ). virtual . Define input data for subsequent calls to DoUnfold(tau) ; Parameters. [in]inputinput distribution with uncertainties ; [in]scaleBias(default=nullptr) scale factor applied to the bias ; [in]oneOverZeroError(default=nullptr) for bins with zero error, this number defines 1/error. ; [in]hist_vyy(default=nullptr) if non-zero, this defines the data covariance matrix ; [in]hist_vyy_inv(default=nullptr) if non-zero and hist_vyy is set, defines the inverse of the data covariance matrix. This feature can be useful for repeated unfoldings in cases where the inversion of the input covariance matrix is lengthy. Return value: nError1+10000*nError2 . nError1: number of bins where the uncertainty is zero. these bins either are not used for the unfolding (if oneOverZeroError==nullptr) or 1/uncertainty is set to oneOverZeroError. . nError2: return values>10000 are fatal errors, because the unfolding can not be done. The number nError2 corresponds to the number of truth bins which are not constrained by data points. . Reimplemented in TUnfoldSys.; Definition at line 2274 of file TUnfold.cxx. ◆ Streamer(). void TUnfold::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stre",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfold.html:57891,error,error,57891,doc/master/classTUnfold.html,https://root.cern,https://root.cern/doc/master/classTUnfold.html,2,['error'],['error']
Availability,"; Parameters. datahist data ; cmdListList with RooCmdArg() from the table . Definition at line 4200 of file RooAbsReal.cxx. ◆ createChi2() [3/4]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createChi2 ; (; RooDataSet & ; data, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). virtual . Create a \( \chi^2 \) from a series of x and y values stored in a dataset. ; The y values can either be the event weights (default), or can be another column designated by the YVar() argument. The y value must have errors defined for the \( \chi^2 \) to be well defined.; The following named arguments are supported. Options to control construction of the \( \chi^2 \) . YVar(RooRealVar& yvar) Designate given column in dataset as Y value . Integrate(bool flag) Integrate function over range specified by X errors rather than take value at bin center. . Definition at line 4276 of file RooAbsReal.cxx. ◆ createChi2() [4/4]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createChi2 ; (; RooDataSet & ; data, . const RooLinkedList & ; cmdList . ). virtual . See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&) ; Definition at line 4292 of file RooAbsReal.cxx. ◆ createFundamental(). RooFit::OwningPtr< RooAbsArg > RooAbsReal::createFundamental ; (; const char * ; newname = nullptr); const. overridevirtual . Create a RooRealVar fundamental object with our properties. ; The new object will be created without any fit limits. ; Implements RooAbsArg.; Definition at line 3130 of file RooAbsReal.cxx. ◆ createHistogram() [1/3]. RooAbsReal::createHistogram ; (; const char * ; name, . const RooAbsRealLValue & ; xvar, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:81129,error,errors,81129,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['error'],['errors']
Availability,"; Parameters. datahist data ; cmdListList with RooCmdArg() from the table . Definition at line 4276 of file RooAbsReal.cxx. ◆ createChi2() [3/4]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createChi2 ; (; RooDataSet & ; data, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). virtual . Create a \( \chi^2 \) from a series of x and y values stored in a dataset. ; The y values can either be the event weights (default), or can be another column designated by the YVar() argument. The y value must have errors defined for the \( \chi^2 \) to be well defined.; The following named arguments are supported. Options to control construction of the \( \chi^2 \) . YVar(RooRealVar& yvar) Designate given column in dataset as Y value . Integrate(bool flag) Integrate function over range specified by X errors rather than take value at bin center. . Definition at line 4352 of file RooAbsReal.cxx. ◆ createChi2() [4/4]. RooFit::OwningPtr< RooAbsReal > RooAbsReal::createChi2 ; (; RooDataSet & ; data, . const RooLinkedList & ; cmdList . ). virtual . See RooAbsReal::createChi2(RooDataSet&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&,const RooCmdArg&) ; Definition at line 4368 of file RooAbsReal.cxx. ◆ createFundamental(). RooFit::OwningPtr< RooAbsArg > RooAbsReal::createFundamental ; (; const char * ; newname = nullptr); const. overridevirtual . Create a RooRealVar fundamental object with our properties. ; The new object will be created without any fit limits. ; Implements RooAbsArg.; Definition at line 3212 of file RooAbsReal.cxx. ◆ createHistogram() [1/3]. RooAbsReal::createHistogram ; (; const char * ; name, . const RooAbsRealLValue & ; xvar, . const RooCmdArg & ; arg1 = {}, . const RooCmdArg & ; arg2 =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:82397,error,errors,82397,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['error'],['errors']
Availability,"; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Private Attributes |; Friends |; List of all members ; ROOT::Fit::Box Class Reference. . Definition at line 36 of file SparseData.cxx. Public Member Functions;  Box (const vector< double > &min, const vector< double > &max, const double value=0.0, const double error=1.0);  ; void AddVal (const double value);  ; double GetError () const;  ; const vector< double > & GetMax () const;  ; const vector< double > & GetMin () const;  ; double GetVal () const;  ; bool operator== (const Box &b);  . Private Attributes; double fError;  ; vector< double > fMax;  ; vector< double > fMin;  ; double fVal;  . Friends; class BoxContainer;  ; ostream & operator<< (ostream &os, const Box &b);  . Constructor & Destructor Documentation. ◆ Box(). ROOT::Fit::Box::Box ; (; const vector< double > & ; min, . const vector< double > & ; max, . const double ; value = 0.0, . const double ; error = 1.0 . ). inline . Definition at line 41 of file SparseData.cxx. Member Function Documentation. ◆ AddVal(). void ROOT::Fit::Box::AddVal ; (; const double ; value). inline . Definition at line 62 of file SparseData.cxx. ◆ GetError(). double ROOT::Fit::Box::GetError ; (; ); const. inline . Definition at line 59 of file SparseData.cxx. ◆ GetMax(). const vector< double > & ROOT::Fit::Box::GetMax ; (; ); const. inline . Definition at line 55 of file SparseData.cxx. ◆ GetMin(). const vector< double > & ROOT::Fit::Box::GetMin ; (; ); const. inline . Definition at line 53 of file SparseData.cxx. ◆ GetVal(). double ROOT::Fit::Box::GetVal ; (; ); const. inline . Definition at line 57 of file SparseData.cxx. ◆ operator==(). bool ROOT::Fit::Box::operator== ; (; const Box & ; b). inline . Definition at line 48 of file SparseData.cxx. Friends And Related Symbol Documentation. ◆ BoxContainer. friend class BoxContainer. friend . Definition at line 64 of file SparseData.cxx. ◆ operator<<. ost",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Box.html:1043,error,error,1043,doc/master/classROOT_1_1Fit_1_1Box.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Box.html,1,['error'],['error']
Availability,"; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Private Member Functions |; Private Attributes |; Friends |; List of all members ; TMultiLayerPerceptron Class Reference. ; This class describes a neural network. ; There are facilities to train the network and use the output.; The input layer is made of inactive neurons (returning the optionally normalized input) and output neurons are linear. The type of hidden neurons is free, the default being sigmoids. (One should still try to pass normalized inputs, e.g. between [0.,1]); The basic input is a TTree and two (training and test) TEventLists. Input and output neurons are assigned a value computed for each event with the same possibilities as for TTree::Draw(). Events may be weighted individually or via TTree::SetWeight(). 6 learning methods are available: kStochastic, kBatch, kSteepestDescent, kRibierePolak, kFletcherReeves and kBFGS.; This implementation, written by C. Delaere, is inspired from the mlpfit package from J.Schwindling et al. with some extensions:. the algorithms are globally the same; in TMultilayerPerceptron, there is no limitation on the number of layers/neurons, while MLPFIT was limited to 2 hidden layers; TMultilayerPerceptron allows you to save the network in a root file, and provides more export functionalities; TMultilayerPerceptron gives more flexibility regarding the normalization of inputs/outputs; TMultilayerPerceptron provides, thanks to Andrea Bocci, the possibility to use cross-entropy errors, which allows to train a network for pattern classification based on Bayesian posterior probability. Introduction; Neural Networks are more and more used in various fields for data analysis and classification, both for research and commercial institutions. Some randomly chosen examples are:. image analysis; financial movements predictions and",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiLayerPerceptron.html:1014,avail,available,1014,doc/master/classTMultiLayerPerceptron.html,https://root.cern,https://root.cern/doc/master/classTMultiLayerPerceptron.html,1,['avail'],['available']
Availability,"; Reimplemented from TFile.; Definition at line 517 of file TWebFile.cxx. ◆ ReadBuffers10(). Bool_t TWebFile::ReadBuffers10 ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). protectedvirtual . Read specified byte ranges from remote file via HTTP 1.0 daemon (without mod-root installed). ; Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Definition at line 566 of file TWebFile.cxx. ◆ ReOpen(). Int_t TWebFile::ReOpen ; (; Option_t * ; mode). overridevirtual . Reopen a file with a different access mode, like from READ to UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. ; Thus the mode argument can be either ""READ"" or ""UPDATE"". The method returns 0 in case the mode was successfully modified, 1 in case the mode did not change (was already as requested or wrong input arguments) and -1 in case of failure, in which case the file cannot be used anymore. A TWebFile cannot be reopened in update mode. ; Reimplemented from TFile.; Definition at line 394 of file TWebFile.cxx. ◆ Seek(). void TWebFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). overridevirtual . Set position from where to start reading. ; Reimplemented from TFile.; Definition at line 989 of file TWebFile.cxx. ◆ SetMaxFullCacheSize(). void TWebFile::SetMaxFullCacheSize ; (; Long64_t ; sz). static . Static method, set maxmimal size of full cache,. ; Definition at line 1449 of file TWebFile.cxx. ◆ SetMsgReadBuffer10(). void TWebFile::SetMsgReadBuffer10 ; (; const char * ; redirectLocation = nullptr, . Bool_t ; tempRedirect = kFALSE . ). protectedvirtual . Set GET command for use by ReadBuffer(s)10(), handle redirection if needed. ; Give full URL so Apache's virtual hosts solution works. ; Reimplemented in TS3WebFile.; Definition at line 268 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:55564,failure,failure,55564,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['failure'],['failure']
Availability,"; Reimplemented from TGraph2D.; Definition at line 296 of file TGraph2DErrors.cxx. ◆ IsA(). TClass * TGraph2DErrors::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGraph2D.; Definition at line 61 of file TGraph2DErrors.h. ◆ operator=(). TGraph2DErrors & TGraph2DErrors::operator= ; (; const TGraph2DErrors & ; g). Assignment operator Copy everything except list of functions. ; Definition at line 167 of file TGraph2DErrors.cxx. ◆ Print(). void TGraph2DErrors::Print ; (; Option_t * ; chopt = """"); const. overridevirtual . Print 2D graph and errors values. ; Reimplemented from TGraph2D.; Definition at line 307 of file TGraph2DErrors.cxx. ◆ RemovePoint(). Int_t TGraph2DErrors::RemovePoint ; (; Int_t ; ipoint). Deletes point number ipoint. ; Definition at line 356 of file TGraph2DErrors.cxx. ◆ Scale(). void TGraph2DErrors::Scale ; (; Double_t ; c1 = 1., . Option_t * ; option = ""z"" . ). overridevirtual . Multiply the values and errors of a TGraph2DErrors by a constant c1. ; If option contains ""x"" the x values and errors are scaled If option contains ""y"" the y values and errors are scaled If option contains ""z"" the z values and errors are scaled If option contains ""xyz"" all three x, y and z values and errors are scaled ; Reimplemented from TGraph2D.; Definition at line 322 of file TGraph2DErrors.cxx. ◆ Set(). void TGraph2DErrors::Set ; (; Int_t ; n). overridevirtual . Set number of points in the 2D graph. ; Existing coordinates are preserved. New coordinates above fNpoints are preset to 0. ; Reimplemented from TGraph2D.; Definition at line 345 of file TGraph2DErrors.cxx. ◆ SetPoint(). void TGraph2DErrors::SetPoint ; (; Int_t ; i, . Double_t ; x, . Double_t ; y, . Double_t ; z . ). overridevirtual . Set x, y and z values for point number i. ; Reimplemented from TGraph2D.; Definition at line 404 of file TGraph2DErrors.cxx. ◆ SetPointError(). void TGraph2DErrors::SetPointError ; (; Int_t ; i, . Double_t ; ex, . Double_t ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DErrors.html:33564,error,errors,33564,doc/master/classTGraph2DErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DErrors.html,1,['error'],['errors']
Availability,"; Reimplemented from TVirtualX.; Definition at line 4685 of file TGWin32.cxx. ◆ DestroyWindow(). void TGWin32::DestroyWindow ; (; Window_t ; id). overridevirtual . Destroy window. ; Reimplemented from TVirtualX.; Definition at line 4672 of file TGWin32.cxx. ◆ DisplayName(). const char * TGWin32::DisplayName ; (; const char * ; dpyName = 0). overridevirtual . Return hostname on which the display is opened. ; Reimplemented from TVirtualX.; Definition at line 2026 of file TGWin32.cxx. ◆ DrawBox(). void TGWin32::DrawBox ; (; Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2, . EBoxMode ; mode . ). overridevirtual . Draw a box. ; mode=0 hollow (kHollow) mode=1 solid (kSolid) ; Reimplemented from TVirtualX.; Definition at line 1658 of file TGWin32.cxx. ◆ DrawCellArray(). void TGWin32::DrawCellArray ; (; Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2, . Int_t ; nx, . Int_t ; ny, . Int_t * ; ic . ). overridevirtual . Draw a cell array. ; x1,y1 : left down corner x2,y2 : right up corner nx,ny : array size ic : array; Draw a cell array. The drawing is done with the pixel presicion if (X2-X1)/NX (or Y) is not a exact pixel number the position of the top rigth corner may be wrong. ; Reimplemented from TVirtualX.; Definition at line 1697 of file TGWin32.cxx. ◆ DrawFillArea(). void TGWin32::DrawFillArea ; (; Int_t ; n, . TPoint * ; xyt . ). overridevirtual . Fill area described by polygon. ; n : number of points xy(2,n) : list of points ; Reimplemented from TVirtualX.; Definition at line 1733 of file TGWin32.cxx. ◆ DrawImage(). void TGWin32::DrawImage ; (; FT_Bitmap * ; source, . ULong_t ; fore, . ULong_t ; back, . GdkImage * ; xim, . Int_t ; bx, . Int_t ; by . ). private . Draw FT_Bitmap bitmap to xim image at position bx,by using specified foreground color. ; Definition at line 1233 of file TGWin32.cxx. ◆ DrawLine() [1/2]. void TGWin32::DrawLine ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). overridevirtual . Draw a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32.html:67404,down,down,67404,doc/master/classTGWin32.html,https://root.cern,https://root.cern/doc/master/classTGWin32.html,1,['down'],['down']
Availability,"; Reimplemented in TProofChain.; Definition at line 952 of file TChain.cxx. ◆ GetEntries() [2/2]. Long64_t TChain::GetEntries ; (; const char * ; selection). inlineoverridevirtual . Return the number of entries matching the selection. ; Return -1 in case of errors.; If the selection uses any arrays or containers, we return the number of entries where at least one element match the selection. GetEntries is implemented using the selector class TSelectorEntries, which can be used directly (see code in TTreePlayer::GetEntries) for additional option. If SetEventList was used on the TTree or TChain, only that subset of entries will be considered. ; Reimplemented from TTree.; Reimplemented in TProofChain.; Definition at line 101 of file TChain.h. ◆ GetEntry(). Int_t TChain::GetEntry ; (; Long64_t ; entry = 0, . Int_t ; getall = 0 . ). overridevirtual . Get entry from the file to memory. . getall = 0 : get only active branches; getall = 1 : get all branches. Return the total number of bytes read, 0 bytes read indicates a failure. ; Reimplemented from TTree.; Definition at line 976 of file TChain.cxx. ◆ GetEntryNumber(). Long64_t TChain::GetEntryNumber ; (; Long64_t ; entry); const. overridevirtual . Return entry number corresponding to entry. ; if no TEntryList set returns entry else returns entry #entry from this entry list and also computes the global entry number (loads all tree headers) ; Reimplemented from TTree.; Definition at line 995 of file TChain.cxx. ◆ GetEntryWithIndex(). Int_t TChain::GetEntryWithIndex ; (; Int_t ; major, . Int_t ; minor = 0 . ). overridevirtual . Return entry corresponding to major and minor number. ; The function returns the total number of bytes read. If the Tree has friend trees, the corresponding entry with the index values (major,minor) is read. Note that the master Tree and its friend may have different entry serial numbers corresponding to (major,minor). ; Reimplemented from TTree.; Definition at line 1028 of file TChain.cxx. ◆ GetFile()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:74931,failure,failure,74931,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,1,['failure'],['failure']
Availability,"; Reimplemented in TProofChain.; Definition at line 978 of file TChain.cxx. ◆ GetEntries() [2/2]. Long64_t TChain::GetEntries ; (; const char * ; selection). inlineoverridevirtual . Return the number of entries matching the selection. ; Return -1 in case of errors.; If the selection uses any arrays or containers, we return the number of entries where at least one element match the selection. GetEntries is implemented using the selector class TSelectorEntries, which can be used directly (see code in TTreePlayer::GetEntries) for additional option. If SetEventList was used on the TTree or TChain, only that subset of entries will be considered. ; Reimplemented from TTree.; Reimplemented in TProofChain.; Definition at line 101 of file TChain.h. ◆ GetEntry(). Int_t TChain::GetEntry ; (; Long64_t ; entry = 0, . Int_t ; getall = 0 . ). overridevirtual . Get entry from the file to memory. . getall = 0 : get only active branches; getall = 1 : get all branches. Return the total number of bytes read, 0 bytes read indicates a failure. ; Reimplemented from TTree.; Definition at line 1002 of file TChain.cxx. ◆ GetEntryNumber(). Long64_t TChain::GetEntryNumber ; (; Long64_t ; entry); const. overridevirtual . Return entry number corresponding to entry. ; if no TEntryList set returns entry else returns entry #entry from this entry list and also computes the global entry number (loads all tree headers) ; Reimplemented from TTree.; Definition at line 1021 of file TChain.cxx. ◆ GetEntryWithIndex(). Int_t TChain::GetEntryWithIndex ; (; Int_t ; major, . Int_t ; minor = 0 . ). overridevirtual . Return entry corresponding to major and minor number. ; The function returns the total number of bytes read. If the Tree has friend trees, the corresponding entry with the index values (major,minor) is read. Note that the master Tree and its friend may have different entry serial numbers corresponding to (major,minor). ; Reimplemented from TTree.; Definition at line 1054 of file TChain.cxx. ◆ GetFile",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChain.html:75340,failure,failure,75340,doc/master/classTChain.html,https://root.cern,https://root.cern/doc/master/classTChain.html,1,['failure'],['failure']
Availability,"; Return 0 on success, -1 in case of error. Bool_t CheckFile(const char* file, Long_t modtime); Check if a file needs to be send to the server. Use the following; algorithm:; - check if file appears in file map; - if yes, get file's modtime and check against time in map,; if modtime not same get md5 and compare against md5 in map,; if not same return kTRUE.; - if no, get file's md5 and modtime and store in file map, ask; slave if file exists with specific md5, if yes return kFALSE,; if no return kTRUE.; Returns kTRUE in case file needs to be send, returns kFALSE in case; file is already on remote node. Int_t SendFile(const char* file, Int_t opt = kAscii, const char* rfile = 0); Send a file to the server. Return 0 on success, -1 in case of error.; If defined, the full path of the remote path will be rfile.; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run). void Terminate(Int_t status = 0); Terminate this session. void SetPortParam(Int_t lower = -1, Int_t upper = -1, Int_t attempts = -1); Set port parameters for tunnelling. A value of -1 means unchanged. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* error = 0); Parse a single command line and forward the request to the remote server; where it will be processed. The line is either a C++ statement or an; interpreter command starting with a ""."".; Return the return value of the command casted to a long. void Print(Option_t* option = """") const; Print some info about this instance. void Interrupt(Int_t type = kRRI_Hard); Send interrupt OOB byte to server.; Returns 0 if ok, -1 in case of error. void Browse(TBrowser* b); Browse remote application (working directory and ROOT files). Int_t Broadcast(const TMessage& mess). Bool_t IsFolder() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplicationRemote.html:16011,down,downloaded,16011,root/html526/TApplicationRemote.html,https://root.cern,https://root.cern/root/html526/TApplicationRemote.html,5,['down'],['downloaded']
Availability,"; Return 0 on success, -1 in case of error. Bool_t CheckFile(const char* file, Long_t modtime); Check if a file needs to be send to the server. Use the following; algorithm:; - check if file appears in file map; - if yes, get file's modtime and check against time in map,; if modtime not same get md5 and compare against md5 in map,; if not same return kTRUE.; - if no, get file's md5 and modtime and store in file map, ask; slave if file exists with specific md5, if yes return kFALSE,; if no return kTRUE.; Returns kTRUE in case file needs to be send, returns kFALSE in case; file is already on remote node. Int_t SendFile(const char* file, Int_t opt = kAscii, const char* rfile = 0); Send a file to the server. Return 0 on success, -1 in case of error.; If defined, the full path of the remote path will be rfile.; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run). void Terminate(Int_t status = 0); Terminate this session. void SetPortParam(Int_t lower = -1, Int_t upper = -1, Int_t attempts = -1); Set port parameters for tunnelling. A value of -1 means unchanged. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* error = 0); Parse a single command line and forward the request to the remote server; where it will be processed. The line is either a C++ statement or an; interpreter command starting with a ""."".; Return the return value of the command casted to a long. void Print(Option_t* option = """") const; Print some info about this instance. void Interrupt(Int_t type = kRRI_Hard); Send interrupt OOB byte to server.; Returns 0 if ok, -1 in case of error. void Browse(TBrowser* b); Browse remote application (working directory and ROOT files). Int_t Broadcast(const TMessage& mess). TApplicationRemote(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TApplicationRemote.html:17214,down,downloaded,17214,root/html602/TApplicationRemote.html,https://root.cern,https://root.cern/root/html602/TApplicationRemote.html,2,['down'],['downloaded']
Availability,"; Return integral of bin contents. Only bins in the bins range are considered.; By default the integral is computed as the sum of bin contents in the range.; if option ""width"" is specified, the integral is the sum of; the bin contents multiplied by the bin width in x. Double_t Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; Return integral of bin contents in range [binx1,binx2]; By default the integral is computed as the sum of bin contents in the range.; if option ""width"" is specified, the integral is the sum of; the bin contents multiplied by the bin width in x. Double_t IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; Return integral of bin contents in range [binx1,binx2] and its error; By default the integral is computed as the sum of bin contents in the range.; if option ""width"" is specified, the integral is the sum of; the bin contents multiplied by the bin width in x.; the error is computed using error propagation from the bin errors assumming that; all the bins are uncorrelated. Double_t DoIntegral(Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t& err, Option_t* opt, Bool_t doerr = kFALSE) const; internal function compute integral and optionally the error between the limits; specified by the bin number values working for all histograms (1D, 2D and 3D). Double_t AndersonDarlingTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; this histogram and h2, using the Anderson-Darling 2 sample test.; The AD 2 sample test formula are derived from the paper; F.W Scholz, M.A. Stephens ""k-Sample Anderson-Darling Test"".; The test is implemented in root in the ROOT::Math::GoFTest class; It is the same formula ( (6) in the paper), and also shown in this preprint; http://arxiv.org/pdf/0804.0380v1.pdf; Binned data are considered as un-binned data; with identical observation happening in the bin center. option is a character string to specify opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:113291,error,error,113291,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,9,['error'],"['error', 'errors']"
Availability,"; Return integral of bin contents. Only bins in the bins range are considered.; By default the integral is computed as the sum of bin contents in the range.; if option ""width"" is specified, the integral is the sum of; the bin contents multiplied by the bin width in x. Double_t Integral(Int_t binx1, Int_t binx2, Option_t* option = """") const; Return integral of bin contents in range [binx1,binx2]; By default the integral is computed as the sum of bin contents in the range.; if option ""width"" is specified, the integral is the sum of; the bin contents multiplied by the bin width in x. Double_t IntegralAndError(Int_t binx1, Int_t binx2, Double_t& err, Option_t* option = """") const; Return integral of bin contents in range [binx1,binx2] and its error; By default the integral is computed as the sum of bin contents in the range.; if option ""width"" is specified, the integral is the sum of; the bin contents multiplied by the bin width in x.; the error is computed using error propagation from the bin errors assumming that; all the bins are uncorrelated. Double_t DoIntegral(Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t& err, Option_t* opt, Bool_t doerr = kFALSE) const; internal function compute integral and optionally the error between the limits; specified by the bin number values working for all histograms (1D, 2D and 3D). Double_t KolmogorovTest(const TH1* h2, Option_t* option = """") const; Statistical test of compatibility in shape between; THIS histogram and h2, using Kolmogorov test. Default: Ignore under- and overflow bins in comparison. option is a character string to specify options; ""U"" include Underflows in test (also for 2-dim); ""O"" include Overflows (also valid for 2-dim); ""N"" include comparison of normalizations; ""D"" Put out a line of ""Debug"" printout; ""M"" Return the Maximum Kolmogorov distance instead of prob; ""X"" Run the pseudo experiments post-processor with the following procedure:; make pseudoexperiments based on random values from ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:106792,error,error,106792,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,9,['error'],"['error', 'errors']"
Availability,; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 240; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 230; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 220; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 210; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 200; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 190; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 180; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 170; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 160; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 150; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-750.903) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.726225 a1=-0.429497 mean=5.03871 nbkg=129.53 nsig=136.644 sig1frac=0.687558; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 140; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-740.756) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.899536 a1=-0.345881 mean=5.03897 nbkg=135.176 nsig=129.13 sig1frac=0.899393; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-677.604) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.766597 a1=-0.547838 mean=5.03836 nbkg=119.039 nsig=121.817 sig1frac=0.213703; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 130; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-777.498) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.527582 a1=-0.893856 mean=5.24753 nbkg=1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:24477,error,errors,24477,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability,"; RooFit::ProjWDataRooCmdArg ProjWData(const RooAbsData &projData, bool binData=false)Definition RooGlobalFunc.cxx:179; RooFit::SliceRooCmdArg Slice(const RooArgSet &sliceSet)Definition RooGlobalFunc.cxx:134; RooFit::CutRooCmdArg Cut(const char *cutSpec)Definition RooGlobalFunc.cxx:320; RooFit::LineStyleRooCmdArg LineStyle(Style_t style)Definition RooGlobalFunc.cxx:240; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf501_simultaneouspdfDefinition rf501_simultaneouspdf.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(simPdf) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_simPdf_combData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; ; RooFitResult: minimized FCN value: 8630.62, estimated distance to minimum: 0.000174671; covariance matrix quality: Full, accurate covariance matrix; Status : MINIMIZE=0 HESSE=0 ; ; Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; a0 6.7634e-02 +/- 6.04e-02; a0_ctl -1.5627e-01 +/- 5.53e-02; a1 -3.8353e-03 +/- 6.32e-02; a1_ctl 3.8442e-01 +/- 4.35e-02; f 1.7952e-01 +/- 1.55e-02; f_ctl 5.2710e-01 +/- 1.25e-02; mean 1.4991e-02 +/- 3.34e-02; mean_ctl -3.0079e+00 +/- 1.04e-02; sigma 3.0450e-01 +/- 8.33e-03; ; [#1] INFO:Plotting -- RooTreeData::plotOn: plotting 1000 events out of 3000 total events; [#1] INFO:Plotting -- RooSimultaneous::plotOn(simPdf) plot on x represents a slice in the index category (sample); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html:9251,error,error,9251,doc/master/rf501__simultaneouspdf_8C.html,https://root.cern,https://root.cern/doc/master/rf501__simultaneouspdf_8C.html,1,['error'],['error']
Availability,"; RooIntegrator1D::SummationRuleRooIntegrator1D::_rule; Double_t*RooIntegrator1D::_s! Integrator workspace; Double_tRooIntegrator1D::_savedResult! Integrator workspace; Bool_tRooIntegrator1D::_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*RooIntegrator1D::_x! do not persist; RooIntegrator1D*_xIntegratorIntegrator in first dimension; RooAbsFunc*_xintFunction binding representing integral over first dimension; Double_tRooIntegrator1D::_xmax! Upper integration bound; Double_tRooIntegrator1D::_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooIntegrator2D, is parameters and capabilities with RooNumIntFactory. RooIntegrator2D(); Default constructor. RooIntegrator2D(const RooAbsFunc& function, RooIntegrator1D::SummationRule rule = RooIntegrator1D::Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Constructor with a given function binding, summation rule,; maximum number of steps and conversion tolerance. The integration; limits are taken from the definition in the function binding. RooIntegrator2D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Constructor with a given function binding, summation rule,; maximum number of steps, conversion tolerance and an explicit; choice of integration limits on both dimensions. RooIntegrator2D(const RooAbsFunc& function, const RooNumIntConfig& config); Constructor with a function binding and a configuration object.; The integration limits are taken from the definition in the function; binding. RooIntegrator2D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax, const RooNumIntConfig& config); Constructor with a function binding, a configuration object and; an exp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooIntegrator2D.html:9004,toler,tolerance,9004,root/html526/RooIntegrator2D.html,https://root.cern,https://root.cern/root/html526/RooIntegrator2D.html,7,['toler'],['tolerance']
Availability,; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; RooRealProxy_delMistag; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genB0Frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_tRooAbsAnaConvPdf::_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxyRooAbsAnaConvPdf::_modelOriginal model; RooRealProxy_mu; static Int_tRooPrint,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBCPGenDecay.html:41980,error,errors,41980,root/html534/RooBCPGenDecay.html,https://root.cern,https://root.cern/root/html534/RooBCPGenDecay.html,1,['error'],['errors']
Availability,; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealProxyRooAbsAnaConvPdf::_convVarConvolution variable; RooRealProxy_delMistag; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genFlavFrac!; Double_t_genFlavFracMix!; Double_t_genFlavFracUnmix!; Double_t_genMixFrac! do not persist; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; Bool_tRooAbsAnaConvPdf::_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this n,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooBMixDecay.html:41963,error,errors,41963,root/html534/RooBMixDecay.html,https://root.cern,https://root.cern/root/html534/RooBMixDecay.html,1,['error'],['errors']
Availability,; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue; RooAICRegistry_codeReg! Registry of analytical integration codes; RooObjCacheManager_coefNormMgrCoefficient normalization manager; RooArgSet*_convNormSet! Subset of last normalization that applies to convolutions; RooListProxy_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*_convSetIter! Iterator over _convNormSet; RooRealProxy_convVarConvolution variable; Bool_tRooAbsArg::_deleteWatch! Delete watch flag; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches; Bool_tRooAbsArg::_isConstant! Cached isConstant status; Bool_t_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; RooRealProxy_modelOriginal model; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooAbsAnaConvPdf.html:44602,error,errors,44602,root/html602/RooAbsAnaConvPdf.html,https://root.cern,https://root.cern/root/html602/RooAbsAnaConvPdf.html,2,['error'],['errors']
Availability,"; Searching...; No Matches. TGraph2DErrors.cxx. Go to the documentation of this file. 1// @(#)root/hist:$Id: TGraph2DErrors.cxx,v 1.00; 2// Author: Olivier Couet; 3 ; 4/*************************************************************************; 5 * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; 6 * All rights reserved. *; 7 * *; 8 * For the licensing terms see $ROOTSYS/LICENSE. *; 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include <iostream>; 13#include ""TBuffer.h""; 14#include ""TGraph2DErrors.h""; 15#include ""TH2.h""; 16#include ""TVirtualPad.h""; 17#include ""TVirtualFitter.h""; 18#include ""THLimitsFinder.h""; 19 ; 20ClassImp(TGraph2DErrors);; 21 ; 22/** \class TGraph2DErrors; 23 \ingroup Graphs; 24Graph 2D class with errors.; 25 ; 26A TGraph2DErrors is a TGraph2D with errors. It behaves like a TGraph2D and has; 27the same drawing options.; 28 ; 29The **""ERR""** drawing option allows to display the error bars. The; 30following example shows how to use it:; 31 ; 32Begin_Macro(source); 33{; 34 auto c = new TCanvas(""c"",""TGraph2DErrors example"",0,0,600,600);; 35 Double_t P = 6.;; 36 Int_t np = 200;; 37 ; 38 Double_t *rx=0, *ry=0, *rz=0;; 39 Double_t *ex=0, *ey=0, *ez=0;; 40 ; 41 rx = new Double_t[np];; 42 ry = new Double_t[np];; 43 rz = new Double_t[np];; 44 ex = new Double_t[np];; 45 ey = new Double_t[np];; 46 ez = new Double_t[np];; 47 ; 48 auto r = new TRandom();; 49 ; 50 for (Int_t N=0; N<np;N++) {; 51 rx[N] = 2*P*(r->Rndm(N))-P;; 52 ry[N] = 2*P*(r->Rndm(N))-P;; 53 rz[N] = rx[N]*rx[N]-ry[N]*ry[N];; 54 rx[N] = 10.+rx[N];; 55 ry[N] = 10.+ry[N];; 56 rz[N] = 40.+rz[N];; 57 ex[N] = r->Rndm(N);; 58 ey[N] = r->Rndm(N);; 59 ez[N] = 10*r->Rndm(N);; 60 }; 61 ; 62 auto g = new TGraph2DErrors(np, rx, ry, rz, ex, ey, ez);; 63 g->SetTitle(""TGraph2D with error bars: option \""ERR\"""");; 64 g->SetFillColor(29);; 65 g->SetMarkerSize(0.8);; 66 g->SetMarkerStyle(20);; 67 g->Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:1132,error,error,1132,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['error'],['error']
Availability,"; Starting PROOF involves either connecting to a master server, which in turn will start a set of slave servers, or directly starting as master server (if master = """"). Masterurl is of the form: [proof[s]://]host[:port]. Conffile is the name of the config file describing the remote PROOF cluster (this argument alows you to describe different cluster configurations). The default is proof.conf. Confdir is the directory where the config file and other PROOF related files are (like motd and noproof files). Loglevel is the log level (default = 1). User specified custom config files will be first looked for in $HOME/.conffile. ; Definition at line 72 of file TProofLite.cxx. ◆ ~TProofLite(). TProofLite::~TProofLite ; (; ). override . Destructor. ; Definition at line 375 of file TProofLite.cxx. Member Function Documentation. ◆ CancelStagingDataSet(). Bool_t TProofLite::CancelStagingDataSet ; (; const char * ; dataset). overridevirtual . Cancels a dataset staging request. ; Returns kTRUE on success, kFALSE on failure. Dataset not found equals to a failure. PROOF-Lite re-implementation of the equivalent function in TProofServ. ; Reimplemented from TProof.; Definition at line 2195 of file TProofLite.cxx. ◆ Class(). static TClass * TProofLite::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofLite::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofLite::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 170 of file TProofLite.h. ◆ CleanupSandbox(). Int_t TProofLite::CleanupSandbox ; (; ). private . Remove old sessions dirs keep at most 'Proof.MaxOldSessions' (default 10) ; Definition at line 1821 of file TProofLite.cxx. ◆ ClearCache(). void TProofLite::ClearCache ; (; const char * ; file = 0). overridevirtual . Remove files from all file caches. ; Reimplemented from TProof.; Definition at line 1519 of file TProofLite.cxx. ◆ C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofLite.html:48008,failure,failure,48008,doc/master/classTProofLite.html,https://root.cern,https://root.cern/doc/master/classTProofLite.html,1,['failure'],['failure']
Availability,"; Stops, . Double_t * ; Red, . Double_t * ; Green, . Double_t * ; Blue, . UInt_t ; NColors, . Float_t ; alpha = 1., . Bool_t ; setPalette = kTRUE . ). static . Static function creating a color table with several connected linear gradients. . Number: The number of end point colors that will form the gradients. Must be at least 2.; Stops: Where in the whole table the end point colors should lie. Each entry must be on [0, 1], each entry must be greater than the previous entry.; Red, Green, Blue: The end point color values. Each entry must be on [0, 1]; NColors: Total number of colors in the table. Must be at least 1.; alpha: the opacity factor, between 0 and 1. Default is no transparency (1).; setPalette: activate the newly created palette (true by default). If false, the caller is in charge of calling TColor::SetPalette using the return value of the function (first palette color index) and reconstructing the Int_t palette[NColors+1] array. Returns a positive value (the index of the first color of the palette) on success and -1 on error.; The table is constructed by tracing lines between the given points in RGB space. Each color value may have a value between 0 and 1. The difference between consecutive ""Stops"" values gives the fraction of space in the whole table that should be used for the interval between the corresponding color values.; Normally the first element of Stops should be 0 and the last should be 1. If this is not true, fewer than NColors will be used in proportion with the total interval between the first and last elements of Stops.; This definition is similar to the povray-definition of gradient color tables.; For instance: UInt_t Number = 3;; Double_t Red[3] = { 0.0, 1.0, 1.0 };; Double_t Green[3] = { 0.0, 0.0, 1.0 };; Double_t Blue[3] = { 1.0, 0.0, 1.0 };; Double_t Stops[3] = { 0.0, 0.4, 1.0 };; unsigned int; This defines a table in which there are three color end points: RGB = {0, 0, 1}, {1, 0, 0}, and {1, 1, 1} = blue, red, white The first 40% of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor.html:48690,error,error,48690,doc/master/classTColor.html,https://root.cern,https://root.cern/doc/master/classTColor.html,1,['error'],['error']
Availability,"; Sum$(formula): return the sum of the value of the elements of the formula given; as a parameter. For example the mean for all the elements in; one entry can be calculated with:; Sum$(formula)/Length$(formula); Min$(formula): return the minimun (within one TTree entry) of the value of the; elements of the formula given as a parameter.; Max$(formula): return the maximum (within one TTree entry) of the value of the; elements of the formula given as a parameter.; MinIf$(formula,condition); MaxIf$(formula,condition): return the minimum (maximum) (within one TTree entry); of the value of the elements of the formula given as a parameter; if they match the condition. If no element matches the condition,; the result is zero. To avoid the resulting peak at zero, use the; pattern:; tree->Draw(""MinIf$(formula,condition)"",""condition"");; which will avoid calculation MinIf$ for the entries that have no match; for the condition. Alt$(primary,alternate) : return the value of ""primary"" if it is available; for the current iteration otherwise return the value of ""alternate"".; For example, with arr1[3] and arr2[2]; tree->Draw(""arr1+Alt$(arr2,0)"");; will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; Or with a variable size array arr3; tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); As a comparison; tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; will draw the sum arr3 for the index 0 to 2 only if the; actual_size_of_arr3 is greater or equal to 3.; Note that the array in 'primary' is flatened/linearilized thus using; Alt$ with multi-dimensional arrays of different dimensions in unlikely; to yield the expected results. To visualize a bit more what elements; would be matched by TTree::Draw, TTree::Scan can be used:; tree->Scan(""arr1:Alt$(arr2,0)"");; will print on one line the value of arr1 and (arr2,0) that will be; matched by; tree->Draw(""arr1-Alt$(arr2,0)"");. The ternary operator is not directly suppo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:76934,avail,available,76934,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,1,['avail'],['available']
Availability,"; Sum$(formula): return the sum of the value of the elements of the formula given; as a parameter. For example the mean for all the elements in; one entry can be calculated with:; Sum$(formula)/Length$(formula); Min$(formula): return the minimun (within one TTree entry) of the value of the; elements of the formula given as a parameter.; Max$(formula): return the maximum (within one TTree entry) of the value of the; elements of the formula given as a parameter.; MinIf$(formula,condition); MaxIf$(formula,condition): return the minimum (maximum) (within one TTree entry); of the value of the elements of the formula given as a parameter; if they match the condition. If no element matches the condition,; the result is zero. To avoid the resulting peak at zero, use the; pattern:; tree->Draw(""MinIf$(formula,condition)"",""condition"");; which will avoid calculation MinIf$ for the entries that have no match; for the condition. Alt$(primary,alternate) : return the value of ""primary"" if it is available; for the current iteration otherwise return the value of ""alternate"".; For example, with arr1[3] and arr2[2]; tree->Draw(""arr1+Alt$(arr2,0)"");; will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; Or with a variable size array arr3; tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); As a comparison; tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; will draw the sum arr3 for the index 0 to 2 only if the; actual_size_of_arr3 is greater or equal to 3.; Note that the array in 'primary' is flattened/linearized thus using; Alt$ with multi-dimensional arrays of different dimensions in unlikely; to yield the expected results. To visualize a bit more what elements; would be matched by TTree::Draw, TTree::Scan can be used:; tree->Scan(""arr1:Alt$(arr2,0)"");; will print on one line the value of arr1 and (arr2,0) that will be; matched by; tree->Draw(""arr1-Alt$(arr2,0)"");. The ternary operator is not directly suppor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:79759,avail,available,79759,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,3,['avail'],['available']
Availability,"; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome Documentation. ROOT provides different types of documentation:. The Reference Guide, which is generated by doxygen provides an up-to-date full code documentation. This is mainly for software developers of ROOT and using ROOT to build the applications.; A general Users Guide is provided for a more in depth explanation of concepts and functionality available in the ROOT system. ; A number of topical User Guides and Manuals for various components of the system.; A rich set of ROOT tutorials and code examples are offered to developers to exercise specific functionality.; A rich set of HowTo's is also present to discuss issues commonly faced by ROOT users. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmarks. ContributeCollaborate with Us. © Copyright CERN 2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/documentation.html:2197,avail,available,2197,d/documentation.html,https://root.cern,https://root.cern/d/documentation.html,1,['avail'],['available']
Availability,"; TArrayD*fSumw2bin errors; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THnSparseArrayChunk(Int_t coordsize, bool errors, TArray* cont); (Default) initialize a chunk. Takes ownership of cont (~THnSparseArrayChunk deletes it),; and create an ArrayF for errors if ""errors"" is true. ~THnSparseArrayChunk(); Destructor. void AddBin(Int_t idx, const Char_t* idxbuf); Create a new bin in this chunk. void Sumw2(); Turn on support of errors. THnSparseArrayChunk(const THnSparseArrayChunk& ). THnSparseArrayChunk& operator=(const THnSparseArrayChunk& ). THnSparseArrayChunk(); {}. void AddBinContent(Int_t idx, Double_t v = 1.). Int_t GetEntries() const; { return fCoordinatesSize / fSingleCoordinateSize; }. Bool_t Matches(Int_t idx, const Char_t* idxbuf) const; Check whether bin at idx batches idxbuf.; If we don't store indexes we trust the caller that it does match,; see comment in THnSparseCompactBinCoord::GetHash(). » Author: Axel Naumann (2007-09-11) » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-02 16:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THnSparseArrayChunk.html:6888,error,errors,6888,root/html604/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html604/THnSparseArrayChunk.html,2,['error'],['errors']
Availability,"; TArrayD*fSumw2bin errors; static TObject::(anonymous)TObject::kBitMask; static TObject::EStatusBitsTObject::kCanDelete; static TObject::EStatusBitsTObject::kCannotPick; static TObject::EStatusBitsTObject::kHasUUID; static TObject::EStatusBitsTObject::kInvalidObject; static TObject::(anonymous)TObject::kIsOnHeap; static TObject::EStatusBitsTObject::kIsReferenced; static TObject::EStatusBitsTObject::kMustCleanup; static TObject::EStatusBitsTObject::kNoContextMenu; static TObject::(anonymous)TObject::kNotDeleted; static TObject::EStatusBitsTObject::kObjInCanvas; static TObject::(anonymous)TObject::kOverwrite; static TObject::(anonymous)TObject::kSingleKey; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THnSparseArrayChunk(Int_t coordsize, bool errors, TArray* cont); (Default) initialize a chunk. Takes ownership of cont (~THnSparseArrayChunk deletes it),; and create an ArrayF for errors if ""errors"" is true. ~THnSparseArrayChunk(); Destructor. void AddBin(Int_t idx, const Char_t* idxbuf); Create a new bin in this chunk. void Sumw2(); Turn on support of errors. THnSparseArrayChunk(const THnSparseArrayChunk& ). THnSparseArrayChunk& operator=(const THnSparseArrayChunk& ). THnSparseArrayChunk(); {}. void AddBinContent(Int_t idx, Double_t v = 1.). Int_t GetEntries() const; { return fCoordinatesSize / fSingleCoordinateSize; }. Bool_t Matches(Int_t idx, const Char_t* idxbuf) const; Check whether bin at idx batches idxbuf.; If we don't store indexes we trust the caller that it does match,; see comment in THnSparseCompactBinCoord::GetHash(). » Author: Axel Naumann (2007-09-11) » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-06-30 15:11; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnSparseArrayChunk.html:6888,error,errors,6888,root/html602/THnSparseArrayChunk.html,https://root.cern,https://root.cern/root/html602/THnSparseArrayChunk.html,2,['error'],['errors']
Availability,"; TCanvas *c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; return c41;; }; The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Picture; Source. {; TCanvas *c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; return c42;; }; The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Picture; Source. {; TCanvas *c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; TGraphErrors *graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. TGraphErrors *graph1_sys = new TGraphErrors(5, x, py1,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphPainter.html:9249,error,errors,9249,root/html534/TGraphPainter.html,https://root.cern,https://root.cern/root/html534/TGraphPainter.html,6,['error'],['errors']
Availability,"; TCanvas *c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetFillColor(4);; ge->SetFillStyle(3010);; ge->Draw(""a3"");; return c41;; }; The option ""4"" is similar to the option ""3"" except that the band; is smoothed. As the following picture shows, this option should be; used carefully because the smoothing algorithm may show some (huge); ""bouncing"" effects. In some cases it looks nicer than option ""3""; (because it is smooth) but it can be misleading. Picture; Source. {; TCanvas *c42 = new TCanvas(""c42"",""c42"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; return c42;; }; The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Picture; Source. {; TCanvas *c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double y1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; TGraphErrors *graph1 = new TGraphErrors(5, x, y1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. TGraphErrors *graph1_sys = new TGraphErrors(5, x, y1, ze",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphPainter.html:9249,error,errors,9249,root/html532/TGraphPainter.html,https://root.cern,https://root.cern/root/html532/TGraphPainter.html,2,['error'],['errors']
Availability,"; TCondition class implements a condition variable. Use a condition variable to signal threads. The platform dependent implementation is in the TConditionImp and TPosixCondition classes .; TSemaphore class implements a counting semaphore. Use a semaphore to synchronize threads. The platform dependent implementation is in the TMutexImp and TConditionImp classes.; 23.2.3 TThread for Pedestrians; To run a thread in ROOT, follow these steps:. Initialization. Add these lines to your rootlogon.C:; {; ...; // The next line may be unnecessary on some platforms; gSystem->Load(""/usr/lib/libpthread.so"");; gSystem->Load(""$ROOTSYS/lib/libThread.so"");; ...; }; This loads the library with the TThread class and the pthread specific implementation file for Posix threads. Coding. Define a function (e.g. void* UserFun(void* UserArgs)) that should run as a thread. The code for the examples is at the web site of the authors (Jörn Adamczewski, Marc Hemberger). After downloading the code from this site, you can follow the example below:; http://www-linux.gsi.de/~go4/HOWTOthreads/howtothreadsbody.html. Loading. Start an interactive ROOT session. Load the shared library:; root[] gSystem->Load(""mhs3.so""); // or; root[] gSystem->Load(""CalcPiThread.so"");. Creating. Create a thread instance (see also example RunMhs3.CorRunPi.C) with:; root[] TThread *th = new TThread(UserFun,UserArgs);; When called from the interpreter, this gives the name “UserFun” to the thread. This name can be used to retrieve the thread later. However, when called from compiled code, this method does not give any name to the thread. So give a name to the thread in compiled use:; root[] TThread *th = new TThread(""MyThread"", UserFun, UserArgs);; You can pass arguments to the thread function using the UserArgs-pointer. When you want to start a method of a class as a thread, you have to give the pointer to the class instance as UserArgs. Running. root[] th->Run();; root[] TThread::Ps(); // like UNIX ps c.ommand;; With the mhs3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1105720,down,downloading,1105720,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['down'],['downloading']
Availability,"; TEveRecTrackT<float>(const TEveRecTrackT<float>&); virtual~TEveRecTrackT<float>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveRecTrackT_float_.html:1499,error,error,1499,root/html530/TEveRecTrackT_float_.html,https://root.cern,https://root.cern/root/html530/TEveRecTrackT_float_.html,3,['error'],['error']
Availability,"; TFFTComplex(Int_t ndim, Int_t* n, Bool_t inPlace = kFALSE); virtual~TFFTComplex(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; static TVirtualFFT*TVirtualFFT::FFT(Int_t ndim, Int_t* n, Option_t* option); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TVirtualFFT*TVirtualFFT::GetCurrentTransform(); static const char*TVirtualFFT::GetDefaultFFT(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_t*GetN() const; virtual const char*TObject::GetName() const; virtual Int_tGetNdim() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetPointComplex(Int_t ipoint, Double_t& re, Double_t& im, Bool_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFFTComplex.html:2628,error,error,2628,root/html528/TFFTComplex.html,https://root.cern,https://root.cern/root/html528/TFFTComplex.html,4,['error'],['error']
Availability,"; TGFrame * fMiniBar;  ; Bool_t fShowInSync;  ; TGTextButton * fTitleBar;  ; TGTextButton * fToggleBar;  ; TGCompositeFrame * fTopFrame;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveCompositeFrameInMainFrame (const TEveCompositeFrameInMainFrame &);  ; TEveCompositeFrameInMainFrame & operator= (const TEveCompositeFrameInMainFrame &);  . Additional Inherited Members;  Public Types inherited from TEveCompositeFrame; typ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html:27977,mask,mask,27977,doc/master/classTEveCompositeFrameInMainFrame.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInMainFrame.html,1,['mask'],['mask']
Availability,"; TGFrame * fMiniBar;  ; Bool_t fShowInSync;  ; TGTextButton * fTitleBar;  ; TGTextButton * fToggleBar;  ; TGCompositeFrame * fTopFrame;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveCompositeFrameInPack (const TEveCompositeFrameInPack &);  ; TEveCompositeFrameInPack & operator= (const TEveCompositeFrameInPack &);  . Additional Inherited Members;  Public Types inherited from TEveCompositeFrame; typedef TGFrame *(* Ico",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInPack.html:27429,mask,mask,27429,doc/master/classTEveCompositeFrameInPack.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInPack.html,1,['mask'],['mask']
Availability,"; TGFrame * fMiniBar;  ; Bool_t fShowInSync;  ; TGTextButton * fTitleBar;  ; TGTextButton * fToggleBar;  ; TGCompositeFrame * fTopFrame;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TEveCompositeFrameInTab (const TEveCompositeFrameInTab &);  ; TEveCompositeFrameInTab & operator= (const TEveCompositeFrameInTab &);  . Additional Inherited Members;  Public Types inherited from TEveCompositeFrame; typedef TGFrame *(* IconBar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrameInTab.html:28657,mask,mask,28657,doc/master/classTEveCompositeFrameInTab.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrameInTab.html,1,['mask'],['mask']
Availability,"; TGFrame * fMiniBar;  ; Bool_t fShowInSync;  ; TGTextButton * fTitleBar;  ; TGTextButton * fToggleBar;  ; TGCompositeFrame * fTopFrame;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Static Protected Attributes; static TEveContextMenu * fgCtxMenu = nullptr;  ; static TList * fgFrameList = new THashList;  ; static const TString fgkEmptyFrameName;  ;  Static Protected Attributes inherited from TGCompositeFrame; static TGLayoutHints * fgDefaultHints =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveCompositeFrame.html:28925,mask,mask,28925,doc/master/classTEveCompositeFrame.html,https://root.cern,https://root.cern/doc/master/classTEveCompositeFrame.html,1,['mask'],['mask']
Availability,"; TGLColor Color in preferred GL format - RGBA.; TGLColorSet Collection of colors used for GL rendering.; TGLContext Control internal gl-context resources.; TGLContextIdentity Identity of a shared GL context.; TGLCylinder a cylinderical logical shape; TGLEmbeddedViewer Embedded GL viewer.; TGLEventHandler Base-class and default implementation of event-handler for TGLViewer.; TGLFBO Frame-buffer object.; TGLFaceSet a faceset logical shape; TGLFaderHelper ; TGLFont A wrapper class for FTFont.; TGLFontManager A FreeType GL font manager.; TGLFormat Describes GL buffer format.; TGLHistPainter Proxy class for GL hist painters.; TGLIsoPainter Iso option for TH3.; TGLLegoPainter Lego painter; TGLLightSet A set of OpenGL lights.; TGLLightSetEditor Editor for TGLLightSet.; TGLLightSetSubEditor Sub-editor for TGLLightSet.; TGLLine3 GL line wrapper class; TGLLockable Lock for viewers and scenes.; TGLLogicalShape a logical (non-placed, local frame) drawable object; TGLManager Interface for OpenGL manager; TGLManip abstract base GL manipulator widget; TGLManipSet A collection of available manipulators.; TGLMatrix GL matrix helper/wrapper class; TGLObject Base-class for direct OpenGL renderers; TGLOrthoCamera Camera for orthographic view.; TGLOutput Wrapper class for GL capture & output routines; TGLOverlayButton GL-overlay button.; TGLOverlayElement Base class for GL overlay elements.; TGLOverlayList Collection of overlay elements to draw/select together.; TGLOvlSelectRecord Standard GL overlay-selection record.; TGLPShapeObj This object wraps TGLPhysicalShape (not a TObject); TGLPShapeObjEditor GUI for editing attributes of a physical-shape.; TGLPShapeRef Reference to a TGLPhysicalShape object.; TGLPadPainter ; TGLPaintDevice Base class for GL widgets and GL off-screen rendering; TGLParametricEquation Equation of parametric surface.; TGLParametricEquationGL GL renderer for TGLParametricEquation; TGLParametricPlot Parametric plot's painter.; TGLPerspectiveCamera Camera for perspec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ClassIndex.html:74174,avail,available,74174,root/html526/ClassIndex.html,https://root.cern,https://root.cern/root/html526/ClassIndex.html,1,['avail'],['available']
Availability,"; TGraph2DErrors TGraph2DErrors, TH2; TH2 TGraph2DErrors, TH2; TH3 TH3. Double_t* GetCovarianceMatrix() const; Returns covariance matrix. void GetCovarianceMatrix(TMatrixD& matr); Returns covariance matrix. void GetDesignMatrix(TMatrixD& matr); Returns the internal design matrix. void GetErrors(TVectorD& vpar); Returns parameter errors. void GetParameters(TVectorD& vpar); Returns parameter values. Int_t GetParameter(Int_t ipar, char* name, Double_t& value, Double_t& , Double_t& , Double_t& ) const; Returns the value and the name of the parameter #ipar; NB: In the calling function the argument name must be set large enough. Double_t GetParError(Int_t ipar) const; Returns the error of parameter #ipar. const char * GetParName(Int_t ipar) const; Returns name of parameter #ipar. Double_t GetParTValue(Int_t ipar); Returns the t-value for parameter #ipar. Double_t GetParSignificance(Int_t ipar); Returns the significance of parameter #ipar. void GetFitSample(TBits& bits); For robust lts fitting, returns the sample, on which the best fit was based. Int_t Merge(TCollection* list); Merge objects in list. void SetBasisFunctions(TObjArray* functions); set the basis functions in case the fitting function is not; set directly; The TLinearFitter will manage and delete the functions contained in the list. void SetDim(Int_t n); set the number of dimensions. void SetFormula(const char* formula); Additive parts should be separated by ""++"".; Examples (ai are parameters to fit):; 1.fitting function: a0*x0 + a1*x1 + a2*x2; input formula ""x[0]++x[1]++x[2]""; 2.TMath functions can be used:; fitting function: a0*TMath::Gaus(x, 0, 1) + a1*y; input formula: ""TMath::Gaus(x, 0, 1)++y""; fills the array of functions. void SetFormula(TFormula* function); Set the fitting function. Bool_t UpdateMatrix(); Update the design matrix after the formula has been changed. Int_t ExecuteCommand(const char* command, Double_t* args, Int_t nargs); To use in TGraph::Fit and TH1::Fit(). void PrintResults(Int_t level,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TLinearFitter.html:26307,robust,robust,26307,root/html602/TLinearFitter.html,https://root.cern,https://root.cern/root/html602/TLinearFitter.html,2,['robust'],['robust']
Availability,"; TGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this graph with its current attributes.Definition TGraph.cxx:831; TGraph::SetTitlevoid SetTitle(const char *title="""") overrideChange (i.e.Definition TGraph.cxx:2397; double; int; yDouble_t y[n]Definition legend1.C:17; c1return c1Definition legend1.C:41; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; grTGraphErrors * grDefinition legend1.C:25. Definition at line 26 of file TGraphAsymmErrors.h. Public Member Functions;  TGraphAsymmErrors ();  TGraphAsymmErrors default constructor. ;  ;  TGraphAsymmErrors (const char *filename, const char *format=""%lg %lg %lg %lg %lg %lg"", Option_t *option="""");  TGraphAsymmErrors constructor reading input from filename filename is assumed to contain at least 2 columns of numbers. ;  ;  TGraphAsymmErrors (const TGraphAsymmErrors &gr);  TGraphAsymmErrors copy constructor. ;  ;  TGraphAsymmErrors (const TH1 *h);  TGraphAsymmErrors constructor importing its parameters from the TH1 object passed as argument the low and high errors are set to the bin error of the histogram. ;  ;  TGraphAsymmErrors (const TH1 *pass, const TH1 *total, Option_t *option="""");  Creates a TGraphAsymmErrors by dividing two input TH1 histograms: pass/total. ;  ;  TGraphAsymmErrors (const TVectorD &vx, const TVectorD &vy, const TVectorD &vexl, const TVectorD &vexh, const TVectorD &veyl, const TVectorD &veyh);  Constructor with six vectors of doubles in input A grapherrors is built with the X coordinates taken from vx and Y coord from vy and the errors from vectors vexl/h and veyl/h. ;  ;  TGraphAsymmErrors (const TVectorF &vx, const TVectorF &vy, const TVectorF &vexl, const TVectorF &vexh, const TVectorF &veyl, const TVectorF &veyh);  Constructor with six vectors of floats in input A grapherrors is built with the X coordinates taken from vx and Y coord from vy and the errors from vectors vexl/h and veyl/h. ;  ;  TGraphAsymmErrors (Int_t n);  TGraphAsymmErrors normal constructor. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors.html:2849,error,errors,2849,doc/master/classTGraphAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors.html,2,['error'],"['error', 'errors']"
Availability,"; TGraphBentErrors::GetEYhighdDouble_t * GetEYhighd() const overrideDefinition TGraphBentErrors.h:87; TGraphBentErrors::ComputeRangevoid ComputeRange(Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const overrideCompute range.Definition TGraphBentErrors.cxx:248; TGraphBentErrors::GetEXhighDouble_t * GetEXhigh() const overrideDefinition TGraphBentErrors.h:81; TGraphBentErrors::Classstatic TClass * Class(); TGraphBentErrors::GetEYlowdDouble_t * GetEYlowd() const overrideDefinition TGraphBentErrors.h:86; TGraphBentErrors::fEXhighdDouble_t * fEXhighd[fNpoints] array of X high displacementsDefinition TGraphBentErrors.h:34; TGraphBentErrors::GetEXhighdDouble_t * GetEXhighd() const overrideDefinition TGraphBentErrors.h:85; TGraphBentErrors::GetErrorXhighDouble_t GetErrorXhigh(Int_t bin) const overrideGet high error on X[i].Definition TGraphBentErrors.cxx:430; TGraphBentErrors::AddPointErrorvirtual void AddPointError(Double_t x, Double_t y, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t exld=0, Double_t exhd=0, Double_t eyld=0, Double_t eyhd=0)Add a point with bent errors to the graph.Definition TGraphBentErrors.cxx:192; TGraphBentErrors::SetPointErrorvirtual void SetPointError(Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t exld=0, Double_t exhd=0, Double_t eyld=0, Double_t eyhd=0)Set ex and ey values for point pointed by the mouse.Definition TGraphBentErrors.cxx:587; TGraphBentErrors::fEXlowDouble_t * fEXlow[fNpoints] array of X low errorsDefinition TGraphBentErrors.h:28; TGraphBentErrors::fEXhighDouble_t * fEXhigh[fNpoints] array of X high errorsDefinition TGraphBentErrors.h:29; TGraphBentErrors::~TGraphBentErrors~TGraphBentErrors() overrideTGraphBentErrors default destructor.Definition TGraphBentErrors.cxx:176; TGraphBentErrors::Printvoid Print(Option_t *chopt="""") const overridePrint graph and errors values.Definition TGraphBentErrors.cxx:495; TGraphBentErrors::Scalevoid Scale(Double_t c1=1., Option_t *option=""y"") overr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html:28531,error,errors,28531,doc/master/TGraphBentErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphBentErrors_8cxx_source.html,1,['error'],['errors']
Availability,"; TGraphErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraphErrors.h:70; TGraphErrors::SwapPointsvoid SwapPoints(Int_t pos1, Int_t pos2) overrideSwap points.Definition TGraphErrors.cxx:856; TGraphErrors::ApplyXvirtual void ApplyX(TF1 *f)Apply function to all the data points .Definition TGraphErrors.cxx:426; TGraphErrors::GetErrorXhighDouble_t GetErrorXhigh(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:635; TGraphErrors::GetErrorYlowDouble_t GetErrorYlow(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:671; TGraphErrors::GetErrorYhighDouble_t GetErrorYhigh(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:659; TGraphErrors::operator=TGraphErrors & operator=(const TGraphErrors &gr)TGraphErrors assignment operator.Definition TGraphErrors.cxx:184; TGraphErrors::CopyPointsBool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy errors from fEX and fEY to arrays[0] and arrays[1] or to fEX and fEY if arrays == 0 and ibegin !...Definition TGraphErrors.cxx:532; TGraphErrors::IsATClass * IsA() const overrideDefinition TGraphErrors.h:78; TGraphErrors::MergeInt_t Merge(TCollection *list) overrideAdds all graphs with errors from the collection to this graph.Definition TGraphErrors.cxx:682; TGraphErrors::CopyAndReleasevoid CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy and release.Definition TGraphErrors.cxx:510; TGraphErrors::TGraphErrorsTGraphErrors()TGraphErrors default constructor.Definition TGraphErrors.cxx:69; TGraphErrors::GetErrorXlowDouble_t GetErrorXlow(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:647; TGraphErrors::SavePrimitivevoid SavePrimitive(std::ostream &out, Option_t *option="""") overrideSave primitive as a C++ statement(s) on output stream out.Definition TGraphErrors.cxx:722; TGraphErrors::Applyvoi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:35435,error,errors,35435,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['errors']
Availability,"; THistPainter::ProjectAitoff2xystatic Int_t ProjectAitoff2xy(Double_t l, Double_t b, Double_t &Al, Double_t &Ab)Static function.Definition THistPainter.cxx:10331; THistPainter::PaintTextvirtual void PaintText(Option_t *option)Control function to draw a 1D/2D histograms with the bin values.Definition THistPainter.cxx:10056; THistPainter::DistancetoPrimitiveInt_t DistancetoPrimitive(Int_t px, Int_t py) overrideCompute the distance from the point px,py to a line.Definition THistPainter.cxx:3255; THistPainter::PaintAxisvirtual void PaintAxis(Bool_t drawGridOnly=kFALSE)Draw axis (2D case) of an histogram.Definition THistPainter.cxx:4766; THistPainter::PaintColorLevelsFastvirtual void PaintColorLevelsFast(Option_t *option)[Rendering scheme for the COL2 and COLZ2 options] (HP14)Definition THistPainter.cxx:5577; THistPainter::PaintInitvirtual Int_t PaintInit()Compute histogram parameters used by the drawing routines.Definition THistPainter.cxx:7082; THistPainter::Paint2DErrorsvirtual void Paint2DErrors(Option_t *option)Draw 2D histograms errors.Definition THistPainter.cxx:6617; THistPainter::fYHighlightBinInt_t fYHighlightBinY highlight bin.Definition THistPainter.h:71; THistPainter::PaintCandlePlotvirtual void PaintCandlePlot(Option_t *option)Control function to draw a 2D histogram as a candle (box) plot or violin plotDefinition THistPainter.cxx:5353; THistPainter::PaintScatterPlotvirtual void PaintScatterPlot(Option_t *option)Control function to draw a 2D histogram as a scatter plot.Definition THistPainter.cxx:8459; THistPainter::SetShowProjectionXYvoid SetShowProjectionXY(const char *option, Int_t nbinsY, Int_t nbinsX) overrideDefinition THistPainter.cxx:10804; THistPainter::PaintLegovirtual void PaintLego(Option_t *option)Control function to draw a 2D histogram as a lego plot.Definition THistPainter.cxx:8017; THistPainter::PaintH3virtual void PaintH3(Option_t *option="""")Control function to draw a 3D histograms.Definition THistPainter.cxx:6974; THistPainter::fNcutsInt_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:465261,error,errors,465261,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,2,['error'],['errors']
Availability,"; THistPainterThe histogram painter class.Definition THistPainter.h:50; THistPainter::ProjectSinusoidal2xystatic Int_t ProjectSinusoidal2xy(Double_t l, Double_t b, Double_t &Al, Double_t &Ab)Static function code for sinusoidal projection from Ernst-Jan Buis Source https://en....Definition THistPainter.cxx:10380; THistPainter::Paintvoid Paint(Option_t *option="""") overrideControl routine to paint any kind of histogramsDefinition THistPainter.cxx:4470; THistPainter::fYaxisTAxis * fYaxisPointer to Y axis.Definition THistPainter.h:55; THistPainter::fLegostd::unique_ptr< TPainter3dAlgorithms > fLegoPointer to a TPainter3dAlgorithms object.Definition THistPainter.h:58; THistPainter::fXbufstd::vector< Double_t > fXbufX buffer coordinates.Definition THistPainter.h:61; THistPainter::fXHighlightBinInt_t fXHighlightBinX highlight bin.Definition THistPainter.h:70; THistPainter::fCurrentF3TF3 * fCurrentF3Current TF3 function.Definition THistPainter.h:72; THistPainter::PaintErrorsvirtual void PaintErrors(Option_t *option)Draw 1D histograms error bars.Definition THistPainter.cxx:6314; THistPainter::~THistPainter~THistPainter() overridedestructor.Definition THistPainter.cxx:3242; THistPainter::fShowProjection2Int_t fShowProjection2True if a second projection must be drawn (when calling SetShowProjectionXY on a TH2)Definition THistPainter.h:68; THistPainter::PaintTF3virtual void PaintTF3()Control function to draw a 3D implicit functions.Definition THistPainter.cxx:10152; THistPainter::TableInitvirtual Int_t TableInit()Initialize various options to draw 2D histograms.Definition THistPainter.cxx:10536; THistPainter::PaintTH2PolyScatterPlotvirtual void PaintTH2PolyScatterPlot(Option_t *option)Control function to draw a TH2Poly as a scatter plot.Definition THistPainter.cxx:9885; THistPainter::ProjectMollweide2xystatic Int_t ProjectMollweide2xy(Double_t l, Double_t b, Double_t &Al, Double_t &Ab)Static function.Definition THistPainter.cxx:10412; THistPainter::ProjectAitoff2xystatic Int_t Pr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:463301,error,error,463301,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,2,['error'],['error']
Availability,"; THnIter(const THnBase* hist, Bool_t respectAxisRange = kFALSE); virtual~THnIter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCoord(Int_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; Bool_tHaveSkippedBin() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnIter.html:1367,error,error,1367,root/html534/THnIter.html,https://root.cern,https://root.cern/root/html534/THnIter.html,1,['error'],['error']
Availability,"; THnSparseD (typedef for THnSparseT<ArrayD>): bin content held by a Double_t,; THnSparseF (typedef for THnSparseT<ArrayF>): bin content held by a Float_t,; THnSparseL (typedef for THnSparseT<ArrayL>): bin content held by a Long_t,; THnSparseI (typedef for THnSparseT<ArrayI>): bin content held by an Int_t,; THnSparseS (typedef for THnSparseT<ArrayS>): bin content held by a Short_t,; THnSparseC (typedef for THnSparseT<ArrayC>): bin content held by a Char_t,. They take name and title, the number of dimensions, and for each dimension; the number of bins, the minimal, and the maximal value on the dimension's; axis. A TH2 h(""h"",""h"",10, 0., 10., 20, -5., 5.) would correspond to; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparse hs(""hs"", ""hs"", 2, bins, min, max);. * Filling; A THnSparse is filled just like a regular histogram, using; THnSparse::Fill(x, weight), where x is a n-dimensional Double_t value.; To take errors into account, Sumw2() must be called before filling the; histogram.; Bins are allocated as needed; the status of the allocation can be observed; by GetSparseFractionBins(), GetSparseFractionMem(). * Fast Bin Content Access; When iterating over a THnSparse one should only look at filled bins to save; processing time. The number of filled bins is returned by; THnSparse::GetNbins(); the bin content for each (linear) bin number can; be retrieved by THnSparse::GetBinContent(linidx, (Int_t*)coord).; After the call, coord will contain the bin coordinate of each axis for the bin; with linear index linidx. A possible call would be; cout << hs.GetBinContent(0, coord);; cout <<"" is the content of bin [x = "" << coord[0] ""; << "" | y = "" << coord[1] << ""]"" << endl;. * Efficiency; TH1 and TH2 are generally faster than THnSparse for one and two dimensional; distributions. THnSparse becomes competitive for a sparsely filled TH3; with large numbers of bins per dimension. The tutorial hist/sparsehist.C; shows the turning point. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnSparse.html:1772,error,errors,1772,root/html534/THnSparse.html,https://root.cern,https://root.cern/root/html534/THnSparse.html,1,['error'],['errors']
Availability,"; THnSparseD (typedef for THnSparseT<ArrayD>): bin content held by a Double_t,; THnSparseF (typedef for THnSparseT<ArrayF>): bin content held by a Float_t,; THnSparseL (typedef for THnSparseT<ArrayL>): bin content held by a Long_t,; THnSparseI (typedef for THnSparseT<ArrayI>): bin content held by an Int_t,; THnSparseS (typedef for THnSparseT<ArrayS>): bin content held by a Short_t,; THnSparseC (typedef for THnSparseT<ArrayC>): bin content held by a Char_t,. They take name and title, the number of dimensions, and for each dimension; the number of bins, the minimal, and the maximal value on the dimension's; axis. A TH2 h(""h"",""h"",10, 0., 10., 20, -5., 5.) would correspond to; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparse hs(""hs"", ""hs"", 2, bins, min, max);. * Filling; A THnSparse is filled just like a regular histogram, using; THnSparse::Fill(x, weight), where x is a n-dimensional Double_t value.; To take errors into account, Sumw2() must be called before filling the; histogram.; Bins are allocated as needed; the status of the allocation can be observed; by GetSparseFractionBins(), GetSparseFractionMem(). * Fast Bin Content Access; When iterating over a THnSparse one should only look at filled bins to save; processing time. The number of filled bins is returned by; THnSparse::GetNbins(); the bin content for each (linear) bin number can; be retrieved by THnSparse::GetBinContent(linidx, (Int_t*)coord).; After the call, coord will contain the bin coordinate of each axis for the bin; with linear index linidx. A possible call would be; std::cout << hs.GetBinContent(0, coord);; std::cout <<"" is the content of bin [x = "" << coord[0] ""; << "" | y = "" << coord[1] << ""]"" << std::endl;. * Efficiency; TH1 and TH2 are generally faster than THnSparse for one and two dimensional; distributions. THnSparse becomes competitive for a sparsely filled TH3; with large numbers of bins per dimension. The tutorial hist/sparsehist.C; shows the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THnSparse.html:1772,error,errors,1772,root/html602/THnSparse.html,https://root.cern,https://root.cern/root/html602/THnSparse.html,2,['error'],['errors']
Availability,"; TMinuit::fApsiDouble_t fApsiDefinition TMinuit.h:54; TMinuit::fBigedmDouble_t fBigedmDefinition TMinuit.h:61; TMinuit::~TMinuit~TMinuit() overrideMinuit default destructor.Definition TMinuit.cxx:497; TMinuit::fCstatuTString fCstatuDefinition TMinuit.h:167; TMinuit::fNwrmesInt_t fNwrmes[2]Definition TMinuit.h:151; TMinuit::fVlimloDouble_t fVlimloDefinition TMinuit.h:58; TMinuit::GetPlotvirtual TObject * GetPlot() constDefinition TMinuit.h:200; TMinuit::mnrazzvirtual void mnrazz(Double_t ynew, Double_t *pnew, Double_t *y, Int_t &jh, Int_t &jl)Called only by MNSIMP (and MNIMPR) to add a new point.Definition TMinuit.cxx:6568; TMinuit::fChptchar * fChptDefinition TMinuit.h:164; TMinuit::SetGraphicsModevirtual void SetGraphicsMode(Bool_t mode=kTRUE)Definition TMinuit.h:263; TMinuit::fIsysrdInt_t fIsysrdDefinition TMinuit.h:131; TMinuit::fXdircrDouble_t fXdircrDefinition TMinuit.h:65; TMinuit::GetObjectFitTObject * GetObjectFit() constDefinition TMinuit.h:194; TMinuit::mnmnosvirtual void mnmnos()Performs a MINOS error analysis.Definition TMinuit.cxx:5388; TMinuit::fUpdfltDouble_t fUpdfltDefinition TMinuit.h:62; TMinuit::mnlinevirtual void mnline(Double_t *start, Double_t fstart, Double_t *step, Double_t slope, Double_t toler)Perform a line search from position START.Definition TMinuit.cxx:4736; TMinuit::fNpfixInt_t fNpfixDefinition TMinuit.h:37; TMinuit::fMaxextInt_t fMaxextDefinition TMinuit.h:42; TMinuit::fNvarlInt_t * fNvarlDefinition TMinuit.h:126; TMinuit::mncuvevirtual void mncuve()Makes sure that the current point is a local minimum.Definition TMinuit.cxx:2130; TMinuit::fMATUvlineDouble_t * fMATUvlineDefinition TMinuit.h:107; TMinuit::fBlimDouble_t * fBlimDefinition TMinuit.h:70; TMinuit::fVthmatDouble_t * fVthmatDefinition TMinuit.h:90; TMinuit::mnscanvirtual void mnscan()Scans the values of FCN as a function of one parameter.Definition TMinuit.cxx:6708; TMinuit::fCundefTString fCundefDefinition TMinuit.h:170; TMinuit::fMIGRflnuDouble_t * fMIGRflnuDefinition TMinu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:20940,error,error,20940,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['error'],['error']
Availability,"; TMinuit::fCstatuTString fCstatuDefinition TMinuit.h:167; TMinuit::fNwrmesInt_t fNwrmes[2]Definition TMinuit.h:151; TMinuit::fVlimloDouble_t fVlimloDefinition TMinuit.h:58; TMinuit::GetPlotvirtual TObject * GetPlot() constDefinition TMinuit.h:200; TMinuit::mnrazzvirtual void mnrazz(Double_t ynew, Double_t *pnew, Double_t *y, Int_t &jh, Int_t &jl)Called only by MNSIMP (and MNIMPR) to add a new point.Definition TMinuit.cxx:6568; TMinuit::fChptchar * fChptDefinition TMinuit.h:164; TMinuit::SetGraphicsModevirtual void SetGraphicsMode(Bool_t mode=kTRUE)Definition TMinuit.h:263; TMinuit::fIsysrdInt_t fIsysrdDefinition TMinuit.h:131; TMinuit::fXdircrDouble_t fXdircrDefinition TMinuit.h:65; TMinuit::GetObjectFitTObject * GetObjectFit() constDefinition TMinuit.h:194; TMinuit::mnmnosvirtual void mnmnos()Performs a MINOS error analysis.Definition TMinuit.cxx:5388; TMinuit::fUpdfltDouble_t fUpdfltDefinition TMinuit.h:62; TMinuit::mnlinevirtual void mnline(Double_t *start, Double_t fstart, Double_t *step, Double_t slope, Double_t toler)Perform a line search from position START.Definition TMinuit.cxx:4736; TMinuit::fNpfixInt_t fNpfixDefinition TMinuit.h:37; TMinuit::fMaxextInt_t fMaxextDefinition TMinuit.h:42; TMinuit::fNvarlInt_t * fNvarlDefinition TMinuit.h:126; TMinuit::mncuvevirtual void mncuve()Makes sure that the current point is a local minimum.Definition TMinuit.cxx:2130; TMinuit::fMATUvlineDouble_t * fMATUvlineDefinition TMinuit.h:107; TMinuit::fBlimDouble_t * fBlimDefinition TMinuit.h:70; TMinuit::fVthmatDouble_t * fVthmatDefinition TMinuit.h:90; TMinuit::mnscanvirtual void mnscan()Scans the values of FCN as a function of one parameter.Definition TMinuit.cxx:6708; TMinuit::fCundefTString fCundefDefinition TMinuit.h:170; TMinuit::fMIGRflnuDouble_t * fMIGRflnuDefinition TMinuit.h:108; TMinuit::fNfcnlcInt_t fNfcnlcDefinition TMinuit.h:147; TMinuit::fISWInt_t fISW[7]Definition TMinuit.h:141; TMinuit::fHESSyyDouble_t * fHESSyyDefinition TMinuit.h:104; TMinuit::fGraphicsMode",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8h_source.html:21151,toler,toler,21151,doc/master/TMinuit_8h_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8h_source.html,1,['toler'],['toler']
Availability,"; TPBReadType*fReadTypeType of read (partial, full); TProofBenchRunCPU*fRunCPUInstance to run CPU scans; TProofBenchRunDataRead*fRunDSInstance to run data-read scans. private:. Bool_tfUnlinkOutfileWhether to remove empty output files. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofBench(const char* url, const char* outfile = ""<default>"", const char* proofopt = 0); Constructor: check PROOF and load selectors PAR. ~TProofBench(); Destructor. Int_t OpenOutFile(Bool_t wrt = kFALSE, Bool_t verbose = kTRUE); Set the otuput file; Return 0 on success, -1 on error. Int_t SetOutFile(const char* outfile, Bool_t verbose = kTRUE); Set the output file; Return 0 on success, -1 on error. void CloseOutFile(); Close output file. Int_t RunCPU(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1, Int_t step = -1); Perform the CPU run; Return 0 on success, -1 on error. Int_t RunCPUx(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1); Perform the CPU run scanning over the number of workers per node; Return 0 on success, -1 on error. void DrawCPU(const char* outfile, const char* opt = ""std:""); Draw the CPU speedup plot.; opt = 'std:' draw standard evt/s plot; 'stdx:' draw standard evt/s plot, 1 worker per node; 'norm:' draw normalized plot; 'normx:' draw normalized plot, 1 worker per node. Int_t RunDataSet(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1, Int_t step = 1); Perform a test using dataset 'dset'; Return 0 on success, -1 on error; Open the file for the results. Int_t RunDataSetx(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1); Perform a test using dataset 'dset' scanning over the number of workers; per node.; Return 0 on success, -1 on error; Open the file for the results. void DrawDataSet(const char* outfile, const char* opt = ""std:"", const char* type = ""mbs""); Draw the CPU speedup plot.; opt = 'std:' Standard scaling plot; 'norm:' Normalized scaling plot; 'stdx:' Standard scali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofBench.html:8593,error,error,8593,root/html532/TProofBench.html,https://root.cern,https://root.cern/root/html532/TProofBench.html,1,['error'],['error']
Availability,"; TParallelCoord Class Reference. ; Parallel Coordinates class. ; The multidimensional system of Parallel coordinates is a common way of studying high-dimensional geometry and visualizing multivariate problems. It has first been proposed by A. Inselberg in 1981.; To show a set of points in an n-dimensional space, a backdrop is drawn consisting of n parallel lines. A point in n-dimensional space is represented as a polyline with vertices on the parallel axes; the position of the vertex on the i-th axis corresponds to the i-th coordinate of the point.; This tool comes with a rather large gui in the editor. It is necessary to use this editor in order to explore a data set, as explained below. Reduce cluttering:; The main issue for parallel coordinates is the very high cluttering of the output when dealing with large data set. Two techniques have been implemented to bypass that so far:. Draw doted lines instead of plain lines with an adjustable dots spacing. A slider to adjust the dots spacing is available in the editor.; Sort the entries to display with a ""weight cut"". On each axis is drawn a histogram describing the distribution of the data on the corresponding variable. The ""weight"" of an entry is the sum of the bin content of each bin the entry is going through. An entry going through the histograms peaks will have a big weight wether an entry going randomly through the histograms will have a rather small weight. Setting a cut on this weight allows to draw only the most representative entries. A slider set the cut is also available in the gui. Selections:; Selections of specific entries can be defined over the data se using parallel coordinates. With that representation, a selection is an ensemble of ranges defined on the axes. Ranges defined on the same axis are conjugated with OR (an entry must be in one or the other ranges to be selected). Ranges on different axes are are conjugated with AND (an entry must be in all the ranges to be selected). Several selections ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTParallelCoord.html:1299,avail,available,1299,doc/master/classTParallelCoord.html,https://root.cern,https://root.cern/doc/master/classTParallelCoord.html,1,['avail'],['available']
Availability,"; TStatus*TProofPlayer::fSelStatus! status of query in progress; TSelector*TProofPlayer::fSelector! the latest selector; TClass*TProofPlayer::fSelectorClass! class of the latest selector; TStringfSelectorFileNameCurrent Selector's name, set by Process(); Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; TTimer*TProofPlayer::fStopTimerTimer associated with a stop request; TMutex*TProofPlayer::fStopTimerMtxTo protect the stop timer; Long64_tTProofPlayer::fTotalEventsnumber of events requested; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static THashList*TProofPlayer::fgDrawInputParsList of input parameters to be kept on drawing actions. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetMerging(Bool_t on = kTRUE); Switch on/off merge timer. ~TProofPlayerRemote(); Destructor. Int_t InitPacketizer(TDSet* dset, Long64_t nentries, Long64_t first, const char* defpackunit, const char* defpackdata); Init the packetizer; Return 0 on success (fPacketizer is correctly initialized), -1 on failure. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Process specified TDSet on PROOF.; This method is called on client and on the PROOF master.; The return value is -1 in case of an error and TSelector::GetStatus() in; in case of success. Long64_t Process(TDSet* set, TSelector* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Process specified TDSet on PROOF.; This method is called on client and on the PROOF master.; The return value is -1 in case of an error and TSelector::GetStatus() in; in case of success. Bool_t JoinProcess(TList* workers); Prepares the given list of new workers to join a progressing process.; Returns kTRUE on success, kFALSE otherwise. Bool_t MergeOutputFiles(); Merge output in files. void SetSelectorDataMembersFromOutputList(); Set the selector's data ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofPlayerRemote.html:17908,failure,failure,17908,root/html534/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html534/TProofPlayerRemote.html,2,['failure'],['failure']
Availability,"; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGraphErrors(); TGraphErrors default constructor. TGraphErrors(Int_t n); TGraphErrors normal constructor. the arrays are preset to zero. TGraphErrors(Int_t n, const Float_t* x, const Float_t* y, const Float_t* ex = 0, const Float_t* ey = 0); TGraphErrors normal constructor. if ex or ey are null, the corresponding arrays are preset to zero. TGraphErrors(Int_t n, const Double_t* x, const Double_t* y, const Double_t* ex = 0, const Double_t* ey = 0); TGraphErrors normal constructor. if ex or ey are null, the corresponding arrays are preset to zero. TGraphErrors(const TVectorF& vx, const TVectorF& vy, const TVectorF& vex, const TVectorF& vey); constructor with four vectors of floats in input; A grapherrors is built with the X coordinates taken from vx and Y coord from vy; and the errors from vectors vex and vey.; The number of points in the graph is the minimum of number of points; in vx and vy. TGraphErrors(const TVectorD& vx, const TVectorD& vy, const TVectorD& vex, const TVectorD& vey); constructor with four vectors of doubles in input; A grapherrors is built with the X coordinates taken from vx and Y coord from vy; and the errors from vectors vex and vey.; The number of points in the graph is the minimum of number of points; in vx and vy. TGraphErrors(const TGraphErrors& gr); TGraphErrors copy constructor. TGraphErrors& operator=(const TGraphErrors& gr); TGraphErrors assignment operator. TGraphErrors(const TH1* h); TGraphErrors constructor importing its parameters from the TH1 object passed as argument. TGraphErrors(const char* filename, const char* format = ""%lg %lg %lg %lg"", Option_t* option = """"); GraphErrors constructor reading input from filename; file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphErrors.html:15304,error,errors,15304,root/html528/TGraphErrors.html,https://root.cern,https://root.cern/root/html528/TGraphErrors.html,6,['error'],['errors']
Availability,"; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TNDArrayT<Double_t>fSumw2bin error, lazy allocation happens in TNDArrayT; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension; static THnBase::(anonymous)THnBase::kInvalidInt; static THnBase::(anonymous)THnBase::kNoInt; static THnBase::(anonymous)THnBase::kValidInt. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; THn(const char* name, const char* title, Int_t dim, const Int_t* nbins, const Double_t* xmin, const Double_t* xmax); Construct a THn. ~THn(); Destruct a THn. ROOT::THnBaseBinIter* CreateIter(Bool_t respectAxisRange) const; Create an iterator over all bins. Public interface is THnIter. void Sumw2(); Enable calculation of errors. void AllocCoordBuf() const; Create the coordinate buffer. Outlined to hide allocation; from inlined functions. void InitStorage(Int_t* nbins, Int_t chunkSize); Initialize the storage of a histogram created via Init(). void Reset(Option_t* option = """"); Reset the contents of a THn. THn(const THn& ). THn& operator=(const THn& ). void FillBin(Long64_t bin, Double_t w); Increment the bin content of ""bin"" by ""w"",; return the bin index. GetArray(). THn(); {}. THn* CreateHn(const char* name, const char* title, const TH1* h1). THn* CreateHn(const char* name, const char* title, const THnBase* hn). Long64_t GetNbins() const; { return GetArray().GetNbins(); }. Long64_t GetBin(const Int_t* idx) const. return GetArray(). Long64_t GetBin(const Double_t* x) const. Long64_t GetBin(const char*[] name) const. Long64_t GetBin(const Int_t* idx, Bool_t = kTRUE). Long64_t GetBin(const Double_t* x, Bool_t = kTRUE). Long64_t GetBin(const char*[] name, Bool_t = kTRUE). void SetBinContent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THn.html:14384,error,errors,14384,root/html602/THn.html,https://root.cern,https://root.cern/root/html602/THn.html,2,['error'],['errors']
Availability,"; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFitResult(const char* name = 0, const char* title = 0); Constructor with name and title; coverity[UNINIT_CTOR]. RooFitResult(const RooFitResult& other); Copy constructor. ~RooFitResult(); Destructor. void setConstParList(const RooArgList& list); Fill the list of constant parameters. void setInitParList(const RooArgList& list); Fill the list of initial values of the floating parameters. void setFinalParList(const RooArgList& list); Fill the list of final values of the floating parameters. Int_t statusCodeHistory(UInt_t icycle) const. const char* statusLabelHistory(UInt_t icycle) const. RooPlot * plotOn(RooPlot* plot, const char* parName1, const char* parName2, const char* options = ""ME"") const; Add objects to a 2D plot that represent the fit results for the; two named parameters. The input frame with the objects added is; returned, or zero in case of an error. Which objects are added; are determined by the options string which should be a concatenation; of the following (not case sensitive):. M - a marker at the best fit result; E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; 1 - the 1-sigma error bar for parameter 1; 2 - the 1-sigma error bar for parameter 2; B - the bounding box for the error ellipse; H - a line and horizontal axis for reading off the correlation coefficient; V - a line and vertical axis for reading off the correlation coefficient; A - draw axes for reading off the correlation coefficients with the H or V options. You can change the attributes of objects in the returned RooPlot using the; various RooPlot::getAttXxx(name) member functions, e.g. plot->getAttLine(""contour"")->SetLineStyle(kDashed);. Use plot->Print() for a list of all objects and their names (unfortunately most; of the ROOT builtin graphics objects like TLine are unnamed). Drag the lef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFitResult.html:11246,error,error,11246,root/html534/RooFitResult.html,https://root.cern,https://root.cern/root/html534/RooFitResult.html,3,['error'],['error']
Availability,"; TStringTSystem::fSoExtExtension of shared library (.so, .sl, .a, .dll, etc.); TSeqCollection*TSystem::fStdExceptionHandlerList of std::exception handlers; TSeqCollection*TSystem::fTimersList of timers; TStringTNamed::fTitleobject title; TStringTSystem::fWdpathWorking directory; TFdSet*TSystem::fWritemask!Files that should be checked for write events; TFdSet*TSystem::fWriteready!Files with writes waiting. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSystem. ←; TUnixSystem. Function documentation; TUnixSystem(); { }. ~TUnixSystem(); Reset to original state. Bool_t Init(); Initialize Unix system interface. void SetProgname(const char* name); Set the application name (from command line, argv[0]) and copy it in; gProgName. Copy the application pathname in gProgPath.; If name is 0 let the system set the actual executable name and path; (works on MacOS X and Linux). void SetDisplay(); Set DISPLAY environment variable based on utmp entry. Only for UNIX. const char * GetError(); Return system error string. const char * HostName(); Return the system's host name. void AddFileHandler(TFileHandler* fh); Add a file handler to the list of system file handlers. Only adds; the handler if it is not already in the list of file handlers. TFileHandler * RemoveFileHandler(TFileHandler* fh); Remove a file handler from the list of file handlers. Returns; the handler or 0 if the handler was not in the list of file handlers. void AddSignalHandler(TSignalHandler* sh); Add a signal handler to list of system signal handlers. Only adds; the handler if it is not already in the list of signal handlers. TSignalHandler * RemoveSignalHandler(TSignalHandler* sh); Remove a signal handler from list of signal handlers. Returns; the handler or 0 if the handler was not in the list of signal handlers. void ResetSignal(ESignals sig, Bool_t reset = kTRUE); If reset is true reset the signal handler for the specified signal; to the default handler, else restore previous behaviour. void ResetSignal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnixSystem.html:20944,error,error,20944,root/html602/TUnixSystem.html,https://root.cern,https://root.cern/root/html602/TUnixSystem.html,2,['error'],['error']
Availability,"; TStringTSystem::fSoExtExtension of shared library (.so, .sl, .a, .dll, etc.); TSeqCollection*TSystem::fStdExceptionHandlerList of std::exception handlers; TSeqCollection*TSystem::fTimersList of timers; TStringTNamed::fTitleobject title; TStringTSystem::fWdpathWorking directory; TFdSet*TSystem::fWritemask!Files that should be checked for write events; TFdSet*TSystem::fWriteready!Files with writes waiting. private:. set<void*>fDirPtrs. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TNetXNGSystem(Bool_t owner = kTRUE); Constructor: Create system class without connecting to server. param owner: (unused). TNetXNGSystem(const char* url, Bool_t owner = kTRUE); Constructor: Create system class and connect to server. param url: URL of the entry-point server to be contacted; param owner: (unused). ~TNetXNGSystem(); Destructor. void* OpenDirectory(const char* dir); Open a directory. param dir: the name of the directory to open; returns: a non-zero pointer (with no special purpose) in case of; success, 0 in case of error. Int_t MakeDirectory(const char* dir); Create a directory. param dir: the directory name; returns: 0 on success, -1 otherwise. void FreeDirectory(void* dirp); Free a directory. param dirp: the pointer to the directory to be freed. const char* GetDirEntry(void* dirp); Get a directory entry. param dirp: the directory pointer; returns: 0 in case there are no more entries. Int_t GetPathInfo(const char* path, FileStat_t& buf); Get info about a file (stat). param path: the path of the file to stat (in); param buf: structure that will hold the stat info (out); returns: 0 if success, 1 if the file could not be stat'ed. Bool_t ConsistentWith(const char* path, void* dirptr); Check consistency of this helper with the one required by 'path' or; 'dirptr'. param path: the path to check; param dirptr: the directory pointer to check. int Unlink(const char* path); Unlink a file on the remote server. param path: the path of the file t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNetXNGSystem.html:19838,error,error,19838,root/html534/TNetXNGSystem.html,https://root.cern,https://root.cern/root/html534/TNetXNGSystem.html,1,['error'],['error']
Availability,"; TUnixSystem::ResetTimervoid ResetTimer(TTimer *ti) overrideReset a-sync timer.Definition TUnixSystem.cxx:3033; TUnixSystem::RemoveSignalHandlerTSignalHandler * RemoveSignalHandler(TSignalHandler *sh) overrideRemove a signal handler from list of signal handlers.Definition TUnixSystem.cxx:849; TUnixSystem::UnixSignalstatic void UnixSignal(ESignals sig, SigHandler_t h)Set a signal handler for a signal.Definition TUnixSystem.cxx:3703; TUnixSystem::CloseConnectionvoid CloseConnection(int sock, Bool_t force=kFALSE) overrideClose socket.Definition TUnixSystem.cxx:3298; TUnixSystem::CheckDescriptorsBool_t CheckDescriptors()Check if there is activity on some file descriptors and call their Notify() member.Definition TUnixSystem.cxx:1337; TUnixSystem::InitBool_t Init() overrideInitialize Unix system interface.Definition TUnixSystem.cxx:595; TUnixSystem::Unloadvoid Unload(const char *module) overrideUnload a shared library.Definition TUnixSystem.cxx:2832; TUnixSystem::Umaskint Umask(Int_t mask) overrideSet the process file creation mode mask.Definition TUnixSystem.cxx:1901; TUnixSystem::UnixFilestatstatic int UnixFilestat(const char *path, FileStat_t &buf)Get info about a file.Definition TUnixSystem.cxx:4039; TUnixSystem::UnixRecvstatic int UnixRecv(int sock, void *buf, int len, int flag)Receive exactly length bytes into buffer.Definition TUnixSystem.cxx:4508; TUnixSystem::GetEffectiveUidInt_t GetEffectiveUid() overrideReturns the effective user id.Definition TUnixSystem.cxx:2021; TUnixSystem::FillWithCwdvoid FillWithCwd(char *cwd) constFill buffer with current working directory.Definition TUnixSystem.cxx:1473; TUnixSystem::UnixWaitchildstatic int UnixWaitchild()Wait till child is finished.Definition TUnixSystem.cxx:4130; TUnixSystem::Unlinkint Unlink(const char *name) overrideUnlink, i.e.Definition TUnixSystem.cxx:1708; TUnixSystem::ListLibrariesvoid ListLibraries(const char *regexp="""") overrideList all loaded shared libraries.Definition TUnixSystem.cxx:2848; TUnixSystem::C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:217385,mask,mask,217385,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,4,['mask'],['mask']
Availability,"; The minimizer can become blocked at a limit, because at a limit the derivative seen by the minimizer \(\partial F / \partial P_{\mathrm{int}}\) is zero no matter what the real derivative \(\partial F / \partial P_{\mathrm{ext}}\) is.; \[\frac{\partial F}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}}; \frac{\partial P_{\mathrm{ext}}}{\partial P_{\mathrm{int}}} =; \frac{\partial F}{\partial P_{\mathrm{ext}}} = 0\]; For a stepping method (like \(\mbox{SIMPLEX}\)) this seldom poses any problem, but a method based on derivatives (\(\mbox{MIGRAD}\)) may become blocked at such a value. If this happens, it may be necessary to move the value of the parameter in question a significant distance from the limit (e.g. with MnMigrad::setValue(…)) and restart the minimization, perhaps with that parameter fixed temporarily.; 6.3.2 Getting the right parameter errors with limits; [answer:right-errors]; In the best case, where the minimum is far from any limits, M will correctly transform the error matrix, and the parameter errors it reports should be accurate and very close to those you would have got without limits. In other cases (which should be more common, since otherwise you wouldn’t need limits), the very meaning of parameter errors becomes problematic. Mathematically, since the limit is an absolute constraint on the parameter, a parameter at its limit has no error, at least in one direction. The error matrix, which can assign only symmetric errors, then becomes essentially meaningless. On the other hand, the \(\mbox{MINOS}\) analysis is still meaningful, at least in principle, as long as \(\mbox{MIGRAD}\) (which is called internally by \(\mbox{MINOS}\)) does not get blocked at a limit. Unfortunately, the user has no control over this aspect of the \(\mbox{MINOS}\) calculation, although it is possible to get enough printout from the \(\mbox{MINOS}\) result to be able to determine whether the results are reliable or not.; 6.4 Fixing and releasing pa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:70479,error,errors,70479,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,8,['error'],"['error', 'errors']"
Availability,"; The object associated to this key is read from the file into memory.; Before invoking this function, obj has been created via the; default constructor. void ReadBuffer(char*& buffer); Decode input buffer.; In some situation will add key to gDirectory ???. void ReadKeyBuffer(char*& buffer); Decode input buffer. void ReadFile(); Read the key structure from the file. void SetParent(const TObject* parent); Set parent in key buffer. void Reset(); Reset the key as it had not been 'filled' yet. Int_t Sizeof() const; Return the size in bytes of the key header structure.; Int_t nbytes = sizeof fNbytes; 4; += sizeof(Version_t); 2; += sizeof fObjlen; 4; += sizeof fKeylen; 2; += sizeof fCycle; 2; += sizeof fSeekKey; 4 or 8; += sizeof fSeekPdir; 4 or 8; = 22. void Streamer(TBuffer& b); Stream a class object. Int_t WriteFile(Int_t cycle = 1, TFile* f = 0); Write the encoded object supported by this key.; The function returns the number of bytes committed to the file.; If a write error occurs, the number of bytes returned is -1. Int_t WriteFileKeepBuffer(TFile* f = 0); Write the encoded object supported by this key.; The function returns the number of bytes committed to the file.; If a write error occurs, the number of bytes returned is -1. const char * GetIconName() const; Title can keep 32x32 xpm thumbnail/icon of the parent object. const char * GetTitle() const; Returns title (title can contain 32x32 xpm thumbnail/icon). TKey(const TKey& ). TKey& operator=(const TKey& ). Int_t Read(const char* name); { return TObject::Read(name); }. const char * GetClassName() const; {return fClassName.Data();}. char * GetBuffer() const; {return fBuffer+fKeylen;}. TBuffer * GetBufferRef() const; {return fBufferRef;}. const TDatime & GetDatime() const; {return fDatime;}. Int_t GetKeylen() const; {return fKeylen;}. TDirectory* GetMotherDir() const; { return fMotherDir; }. Int_t GetNbytes() const; {return fNbytes;}. Int_t GetObjlen() const; {return fObjlen;}. Int_t GetVersion() const; {return fV",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TKey.html:16736,error,error,16736,root/html528/TKey.html,https://root.cern,https://root.cern/root/html528/TKey.html,1,['error'],['error']
Availability,"; The resulting errors are calculated assuming uncorrelated histograms.; See the other TH1::Divide that gives the possibility to optionaly; compute Binomial errors. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Scale. void Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """"); -*-*-*Replace contents of this histogram by the division of h1 by h2*-*-*. this = c1*h1/(c2*h2). if errors are defined (see TH1::Sumw2), errors are also recalculated; Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; if not already set.; The resulting errors are calculated assuming uncorrelated histograms.; However, if option =""B"" is specified, Binomial errors are computed.; In this case c1 and c2 do not make real sense and they are ignored. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Divide. Please note also that in the binomial case errors are calculated using standard; binomial statistics, which means when b1 = b2, the error is zero.; If you prefer to have efficiency errors not going to zero when the efficiency is 1, you must; use the function TGraphAsymmErrors::BayesDivide, which will return an asymmetric and non-zero lower; error for the case b1=b2. void Draw(Option_t* option = """"); -*-*-*-*-*-*-*-*-*Draw this histogram with options*-*-*-*-*-*-*-*-*-*-*-*. Histograms are drawn via the THistPainter class. Each histogram has; a pointer to its own painter (to be usable in a multithreaded program).; The same histogram can be drawn with different options in different pads.; When an histogram drawn in a pad is deleted, the histogram is; automatically removed from the pad or pads where it was drawn.; If an histogram is drawn in a pad, then",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:58944,error,errors,58944,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,2,['error'],['errors']
Availability,"; The size of the arrow is set to 2/3 of the marker size. ""X""; By default the error bars are drawn. If option ""X"" is specified,; the errors are not drawn. The graph with errors in drawn like a normal graph. ""||""; Only the end vertical/horizonthal lines; of the error bars are drawn. This option is interesting to superimpose; systematic errors on top of a graph with statistical errors. ""[]""; Does the same as option ""||"" except that it draws additionnal tick marks at the; end of the vertical/horizonthal lines. This makes less ambiguous plots; in case several graphs are drawn on the same picture. ""0""; By default, when a data point is outside the visible range along the Y axis the error; bars are not drawn. Combined with other options, this option forces error bars'; drawing for the data points outside the visible range along the Y axis. ""2""; Error rectangles are drawn. ""3""; A filled area is drawn through the end points of the vertical error bars. ""4""; A smoothed filled area is drawn through the end points of the vertical error; bars. gStyle->SetErrorX(dx) controls the size of the error along x.; dx = 0 removes the error along x. gStyle->SetEndErrorSize(np) controls the size of the lines; at the end of the error bars (when option 1 is used).; By default np=1. (np represents the number of pixels).; TGraphErrors; A TGraphErrors is a TGraph with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Picture; Source. {; TCanvas *c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->Draw(""ap"");; return c4;; }; The option ""3"" allows to shows the error as band. Picture; Source. {; TCanvas *c41 = new TCanvas(""c41"",""c41"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphPainter.html:6325,error,error,6325,root/html530/TGraphPainter.html,https://root.cern,https://root.cern/root/html530/TGraphPainter.html,1,['error'],['error']
Availability,"; This is particularly important if you fit the histogram after TH1::Divide. void Divide(const TH1* h1); -*-*-*-*-*-*-*-*-*Divide this histogram by h1*-*-*-*-*-*-*-*-*-*-*-*-*. this = this/h1; if errors are defined (see TH1::Sumw2), errors are also recalculated.; Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; if not already set.; The resulting errors are calculated assuming uncorrelated histograms.; See the other TH1::Divide that gives the possibility to optionally; compute binomial errors. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Scale. void Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """"); -*-*-*Replace contents of this histogram by the division of h1 by h2*-*-*. this = c1*h1/(c2*h2). if errors are defined (see TH1::Sumw2), errors are also recalculated; Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; if not already set.; The resulting errors are calculated assuming uncorrelated histograms.; However, if option =""B"" is specified, Binomial errors are computed.; In this case c1 and c2 do not make real sense and they are ignored. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Divide. Please note also that in the binomial case errors are calculated using standard; binomial statistics, which means when b1 = b2, the error is zero.; If you prefer to have efficiency errors not going to zero when the efficiency is 1, you must; use the function TGraphAsymmErrors::BayesDivide, which will return an asymmetric and non-zero lower; error for the case b1=b2. void Draw(Option_t* option = """"); -*-*-*-*-*-*-*-*-*Draw this histogram with options*-*-*-*-*-*-*-*-*-*-*-*. Histograms are drawn via th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1.html:60212,error,errors,60212,root/html532/TH1.html,https://root.cern,https://root.cern/root/html532/TH1.html,2,['error'],['errors']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColorWheel.html:5647,error,error,5647,doc/master/classTColorWheel.html,https://root.cern,https://root.cern/doc/master/classTColorWheel.html,1,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHStack.html:15125,error,error,15125,doc/master/classTHStack.html,https://root.cern,https://root.cern/doc/master/classTHStack.html,2,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCurve.html:21006,error,error,21006,doc/master/classRooCurve.html,https://root.cern,https://root.cern/doc/master/classRooCurve.html,11,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if object inherits from class ""classname"". ;  ; virtual Bool_t InheritsFrom (const TClass *cl) const;  Returns kTRUE if o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:36153,error,error,36153,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,28,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t Inheri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2D.html:21129,error,error,21129,doc/master/classTGraph2D.html,https://root.cern,https://root.cern/doc/master/classTGraph2D.html,3,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImage.html:18063,error,error,18063,doc/master/classTASImage.html,https://root.cern,https://root.cern/doc/master/classTASImage.html,1,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ;  ; virtual Bool_t InheritsFrom (const char *classname) const;  Returns kTRUE if o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoVolume.html:27806,error,error,27806,doc/master/classTGeoVolume.html,https://root.cern,https://root.cern/doc/master/classTGeoVolume.html,3,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF1.html:32276,error,error,32276,doc/master/classTF1.html,https://root.cern,https://root.cern/doc/master/classTF1.html,8,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info message. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNode.html:7368,error,error,7368,doc/master/classTNode.html,https://root.cern,https://root.cern/doc/master/classTNode.html,2,['error'],['error']
Availability,"; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEfficiency.html:42926,error,error,42926,doc/master/classTEfficiency.html,https://root.cern,https://root.cern/doc/master/classTEfficiency.html,39,['error'],['error']
Availability,"; Value returned is standard deviation of sample standard deviation.; Note that it is an approximated value which is valid only in the case that the; original data distribution is Normal. The correct one would require; the 4-th momentum value, which cannot be accuratly estimated from an histogram since; the x-information for all entries is not kept. Double_t GetSkewness(Int_t axis = 1) const; For axis = 1, 2 or 3 returns skewness of the histogram along x, y or z axis.; For axis = 11, 12 or 13 returns the approximate standard error of skewness; of the histogram along x, y or z axis; Note, that since third and fourth moment are not calculated; at the fill time, skewness and its standard error are computed bin by bin. Double_t GetKurtosis(Int_t axis = 1) const; For axis =1, 2 or 3 returns kurtosis of the histogram along x, y or z axis.; Kurtosis(gaussian(0, 1)) = 0.; For axis =11, 12 or 13 returns the approximate standard error of kurtosis; of the histogram along x, y or z axis; Note, that since third and fourth moment are not calculated; at the fill time, kurtosis and its standard error are computed bin by bin. void GetStats(Double_t* stats) const; fill the array stats from the contents of this histogram; The array stats must be correctly dimensionned in the calling program.; stats[0] = sumw; stats[1] = sumw2; stats[2] = sumwx; stats[3] = sumwx2. If no axis-subrange is specified (via TAxis::SetRange), the array stats; is simply a copy of the statistics quantities computed at filling time.; If a sub-range is specified, the function recomputes these quantities; from the bin contents in the current axis range. Note that the mean value/RMS is computed using the bins in the currently; defined range (see TAxis::SetRange). By default the range includes; all bins from 1 to nbins included, excluding underflows and overflows.; To force the underflows and overflows in the computation, one must; call the static function TH1::StatOverflows(kTRUE) before filling; the histogram. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:104286,error,error,104286,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,4,['error'],['error']
Availability,"; Write object contents to given stream. void printValue(ostream& os) const; Print value of variable. void printExtras(ostream& os) const; Print extras of variable: (asymmetric) error, constant flag, limits and binning. Int_t defaultPrintContents(Option_t* opt) const; Mapping of Print() option string to RooPrintable contents specifications. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Detailed printing interface. TString* format(const RooCmdArg& formatArg) const; Format contents of RooRealVar for pretty printing on RooPlot; parameter boxes. This function processes the named arguments; taken by paramOn() and translates them to an option string; parsed by RooRealVar::format(Int_t sigDigits, const char *options). TString * format(Int_t sigDigits, const char* options) const; Format numeric value of RooRealVar and its error in a variety of ways. To control what is shown use the following options; N = show name; H = hide value; E = show error; A = show asymmetric error instead of parabolic error (if available); U = show unit. To control how it is shown use these options; L = TLatex mode; X = Latex mode; Y = Latex table mode ( '=' replaced by '&' ); V = Make name \verbatim in Latex mode; P = use error to control shown precision; F = force fixed precision. Double_t chopAt(Double_t what, Int_t where) const; Utility to calculate number of decimals to show; based on magnitude of error. void attachToTree(TTree& t, Int_t bufSize = 32000); Overload RooAbsReal::attachToTree to also attach; branches for errors and/or asymmetric errors; attribute StoreError and/or StoreAsymError are set. void fillTreeBranch(TTree& t); Overload RooAbsReal::fillTreeBranch to also; fill tree branches with (asymmetric) errors; if requested. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE); Copy the cached value of another RooAbsArg to our cache; Warning: This function copies the cached values of source,; it is the callers responsi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooRealVar.html:42639,error,error,42639,root/html526/RooRealVar.html,https://root.cern,https://root.cern/root/html526/RooRealVar.html,12,"['avail', 'error']","['available', 'error']"
Availability,"; Write object contents to given stream. void printValue(ostream& os) const; Print value of variable. void printExtras(ostream& os) const; Print extras of variable: (asymmetric) error, constant flag, limits and binning. Int_t defaultPrintContents(Option_t* opt) const; Mapping of Print() option string to RooPrintable contents specifications. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Detailed printing interface. TString* format(const RooCmdArg& formatArg) const; Format contents of RooRealVar for pretty printing on RooPlot; parameter boxes. This function processes the named arguments; taken by paramOn() and translates them to an option string; parsed by RooRealVar::format(Int_t sigDigits, const char *options). TString * format(Int_t sigDigits, const char* options) const; Format numeric value of RooRealVar and its error in a variety of ways. To control what is shown use the following options; N = show name; H = hide value; E = show error; A = show asymmetric error instead of parabolic error (if available); U = show unit. To control how it is shown use these options; L = TLatex mode; X = Latex mode; Y = Latex table mode ( '=' replaced by '&' ); V = Make name \verbatim in Latex mode; P = use error to control shown precision; F = force fixed precision. Double_t chopAt(Double_t what, Int_t where) const; Utility to calculate number of decimals to show; based on magnitude of error. void attachToVStore(RooVectorDataStore& vstore); Overload RooAbsReal::attachToTree to also attach; branches for errors and/or asymmetric errors; attribute StoreError and/or StoreAsymError are set. void attachToTree(TTree& t, Int_t bufSize = 32000); Overload RooAbsReal::attachToTree to also attach; branches for errors and/or asymmetric errors; attribute StoreError and/or StoreAsymError are set. void fillTreeBranch(TTree& t); Overload RooAbsReal::fillTreeBranch to also; fill tree branches with (asymmetric) errors; if requested. void copyCache",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRealVar.html:44308,error,error,44308,root/html532/RooRealVar.html,https://root.cern,https://root.cern/root/html532/RooRealVar.html,16,"['avail', 'error']","['available', 'error']"
Availability,"; a standard (system) directory or in the directory; provided in dir. The full filename is returned in base; and a filepointer is returned for safely writing to the file; (this avoids certain security problems). Returns 0 in case; of error. const char * PrependPathName(const char* dir, TString& name); Concatenate a directory and a file name. Bool_t AccessPathName(const char* path, EAccessMode mode = kFileExists); Returns FALSE if one can access a file using the specified access mode.; Mode is the same as for the Unix access(2) function.; Attention, bizarre convention of return value!!. int CopyFile(const char* from, const char* to, Bool_t overwrite = kFALSE); Copy a file. If overwrite is true and file already exists the; file will be overwritten. Returns 0 when successful, -1 in case; of file open failure, -2 in case the file already exists and overwrite; was false and -3 in case of error during copy. int Rename(const char* from, const char* to); Rename a file. Returns 0 when successful, -1 in case of failure. Bool_t IsPathLocal(const char* path); Returns TRUE if the url in 'path' points to the local file system.; This is used to avoid going through the NIC card for local operations. int GetPathInfo(const char* path, FileStat_t& buf); Get info about a file. Info is returned in the form of a FileStat_t; structure (see TSystem.h).; The function returns 0 in case of success and 1 if the file could; not be stat'ed. int GetFsInfo(const char* path, Long_t* id, Long_t* bsize, Long_t* blocks, Long_t* bfree); Get info about a file system: id, bsize, bfree, blocks.; Id is file system type (machine dependend, see statfs()); Bsize is block size of file system; Blocks is total number of blocks in file system; Bfree is number of free blocks in file system; The function returns 0 in case of success and 1 if the file system could; not be stat'ed. int Link(const char* from, const char* to); Create a link from file1 to file2. Returns 0 when successful,; -1 in case of failure. int Sym",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnixSystem.html:25372,failure,failure,25372,root/html528/TUnixSystem.html,https://root.cern,https://root.cern/root/html528/TUnixSystem.html,6,['failure'],['failure']
Availability,"; a string containing the formula to be used to define them, exactly as; for a TCut.; The learning method is defined using the; TMultiLayerPerceptron::SetLearningMethod() . Learning methods are :; TMultiLayerPerceptron::kStochastic, ; TMultiLayerPerceptron::kBatch,; TMultiLayerPerceptron::kSteepestDescent,; TMultiLayerPerceptron::kRibierePolak,; TMultiLayerPerceptron::kFletcherReeves,; TMultiLayerPerceptron::kBFGS; A weight can be assigned to events, either in the constructor, either; with TMultiLayerPerceptron::SetEventWeight(). In addition, the TTree weight; is taken into account.; Finally, one starts the training with; TMultiLayerPerceptron::Train(Int_t nepoch, Option_t* options). The; first argument is the number of epochs while option is a string that; can contain: ""text"" (simple text output) , ""graph""; (evoluting graphical training curves), ""update=X"" (step for; the text/graph output update) or ""+"" (will skip the; randomisation and start from the previous values). All combinations; are available. . Example:; net.Train(100,""text, graph, update=10"").; When the neural net is trained, it can be used; directly ( TMultiLayerPerceptron::Evaluate() ) or exported to a; standalone C++ code ( TMultiLayerPerceptron::Export() ).; Finaly, note that even if this implementation is inspired from the mlpfit code,; the feature lists are not exactly matching:. mlpfit hybrid learning method is not implemented; output neurons can be normalized, this is not the case for mlpfit; the neural net is exported in C++, FORTRAN or PYTHON; the drawResult() method allows a fast check of the learning procedure. In addition, the paw version of mlpfit had additional limitations on the number of neurons, hidden layers and inputs/outputs that does not apply to TMultiLayerPerceptron. Function Members (Methods); public:. TMultiLayerPerceptron(); TMultiLayerPerceptron(const char* layout, TTree* data = 0, const char* training = ""Entry$%2==0"", const char* test = """", TNeuron::ENeuronType type = TNeuron::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiLayerPerceptron.html:8276,avail,available,8276,root/html528/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html528/TMultiLayerPerceptron.html,4,['avail'],['available']
Availability,"; a string containing the formula to be used to define them, exactly as; for a TCut.; The learning method is defined using the; TMultiLayerPerceptron::SetLearningMethod() . Learning methods are :; TMultiLayerPerceptron::kStochastic, ; TMultiLayerPerceptron::kBatch,; TMultiLayerPerceptron::kSteepestDescent,; TMultiLayerPerceptron::kRibierePolak,; TMultiLayerPerceptron::kFletcherReeves,; TMultiLayerPerceptron::kBFGS; A weight can be assigned to events, either in the constructor, either; with TMultiLayerPerceptron::SetEventWeight(). In addition, the TTree weight; is taken into account.; Finally, one starts the training with; TMultiLayerPerceptron::Train(Int_t nepoch, Option_t* options). The; first argument is the number of epochs while option is a string that; can contain: ""text"" (simple text output) , ""graph""; (evoluting graphical training curves), ""update=X"" (step for; the text/graph output update) or ""+"" (will skip the; randomisation and start from the previous values). All combinations; are available. . Example:; net.Train(100,""text, graph, update=10"").; When the neural net is trained, it can be used; directly ( TMultiLayerPerceptron::Evaluate() ) or exported to a; standalone C++ code ( TMultiLayerPerceptron::Export() ).; Finaly, note that even if this implementation is inspired from the mlpfit code,; the feature lists are not exactly matching:. mlpfit hybrid learning method is not implemented; output neurons can be normalized, this is not the case for mlpfit; the neural net is exported in C++, FORTRAN or PYTHON; the drawResult() method allows a fast check of the learning procedure. In addition, the paw version of mlpfit had additional limitations on the number of neurons, hidden layers and inputs/outputs that does not apply to TMultiLayerPerceptron. Function Members (Methods); public:. virtual~TMultiLayerPerceptron(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMultiLayerPerceptron.html:8272,avail,available,8272,root/html602/TMultiLayerPerceptron.html,https://root.cern,https://root.cern/root/html602/TMultiLayerPerceptron.html,2,['avail'],['available']
Availability,"; angles of the rotated axes:;   Double_t tx,ty,tz,px,py,pz;;   tx= a.ThetaX();;   ...;   pz= a.PhiZ();. Setting The Rotations; The member function SetToIdentity() will set the rotation object; to the identity (no rotation).; With a minor caveat, the Euler angles of the rotation may be set using; SetXEulerAngles() or individually set with SetXPhi(),; SetXTheta(), and SetXPsi(). These routines set the Euler; angles using the X-convention which is defined by a rotation about the Z-axis,; about the new X-axis, and about the new Z-axis. This is the convention used; in Landau and Lifshitz, Goldstein and other common physics texts. The; Y-convention euler angles can be set with SetYEulerAngles(),; SetYPhi(), SetYTheta(), and SetYPsi(). The caveat; is that Euler angles usually define the rotation of the new coordinate system; with respect to the original system, however, the TRotation class specifies; the rotation of the object in the original system (an active rotation). To; recover the usual Euler rotations (ie. rotate the system not the object), you; must take the inverse of the rotation.; The member functions SetXAxis(), SetYAxis(), and; SetZAxis() will create a rotation which rotates the requested axis; of the object to be parallel to a vector. If used with one argument, the; rotation about that axis is arbitrary. If used with two arguments, the; second variable defines the XY, YZ, or ZX; respectively. Inverse rotation;   TRotation a,b;;   ...;   b = a.Inverse();  // b is inverse of a, a is unchanged;   b = a.Invert();   // invert a and set b = a. Compound Rotations; The operator * has been implemented in a way that follows the; mathematical notation of a product of the two matrices which describe the; two consecutive rotations. Therefore the second rotation should be placed; first:;   r = r2 * r1;. Rotation of TVector3; The TRotation class provides an operator * which allows to express; a rotation of a TVector3 analog to the mathematical notation;   | x' |   | xx xy x",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TRotation.html:4203,recover,recover,4203,root/html602/TRotation.html,https://root.cern,https://root.cern/root/html602/TRotation.html,2,['recover'],['recover']
Availability,"; are 0,1,2 and represent MINUIT strategies for dealing; most efficiently with fast FCNs (0), expensive FCNs (2); and 'intermediate' FCNs (1). void setErrorLevel(Double_t level); Set the level for MINUIT error analysis to the given; value. This function overrides the default value; that is taken in the RooMinuit constructor from; the defaultErrorLevel() method of the input function. void setEps(Double_t eps); Change MINUIT epsilon. void setOffsetting(Bool_t flag); Enable internal likelihood offsetting for enhanced numeric precision. RooFitResult* fit(const char* options); Parse traditional RooAbsPdf::fitTo driver options. s - Run Hesse first to estimate initial step size; m - Run Migrad only; h - Run Hesse to estimate errors; v - Verbose mode; l - Log parameters after each Minuit steps to file; t - Activate profile timer; r - Save fit result; 0 - Run Migrad with strategy 0. Int_t migrad(); Execute MIGRAD. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t hesse(); Execute HESSE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(); Execute MINOS. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(const RooArgSet& minosParamList); Execute MINOS for given list of parameters. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t seek(); Execute SEEK. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t simplex(); Execute SIMPLEX. Changes in parameter values; and calculated e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinuit.html:10227,error,errors,10227,root/html534/RooMinuit.html,https://root.cern,https://root.cern/root/html534/RooMinuit.html,3,['error'],['errors']
Availability,"; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). virtual . Add a box with statistics information to the specified frame. ; By default a box with the event count, mean and rms of the plotted variable is added.; The following optional named arguments are accepted . What(const char* whatstr) Controls what is printed: ""N"" = count, ""M"" is mean, ""R"" is RMS. . Format(const char* optStr) Deprecated:Classing parameter formatting options, provided for backward compatibility. Format(const char* what,...) Parameter formatting options. . const char* what Controls what is shown:; ""N"" adds name; ""E"" adds error; ""A"" shows asymmetric error; ""U"" shows unit; ""H"" hides the value . FixedPrecision(int n) Controls precision, set fixed number of digits . AutoPrecision(int n) Controls precision. Number of shown digits is calculated from error + n specified additional digits (1 is sensible default) . VerbatimName(bool flag) Put variable name in a \verb+ + clause. . Label(const chat* label) Add header label to parameter box . Layout(double xmin, double xmax, double ymax) Specify relative position of left,right side of box and top of box. Position of bottom of box is calculated automatically from number lines in box . Cut(const char* expression) Apply given cut expression to data when calculating statistics . CutRange(const char* rangeName) Only consider events within given range when calculating statistics. Multiple CutRange() argument may be specified to combine ranges. PyROOT; The RooAbsData::statOn() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArgs of the function. . Definition at line 1152 of file RooAbsData.cxx. ◆ store() [1/2]. RooAbsDataStore * RooAbsData::store ; (; ). inline . Definition at line 77 of file RooAbsData.h. ◆ store() [2/2]. const RooAbsDataStore * Ro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsData.html:72746,error,error,72746,doc/master/classRooAbsData.html,https://root.cern,https://root.cern/doc/master/classRooAbsData.html,1,['error'],['error']
Availability,"; auto c1 = new TCanvas(""c1"", ""fit residual simple"");; auto h1 = new TH1D(""h1"", ""h1"", 50, -5, 5);; h1->FillRandom(""gaus"", 2000);; h1->Fit(""gaus"", ""0"");; h1->GetXaxis()->SetTitle(""x"");; auto rp1 = new TRatioPlot(h1);; rp1->Draw();; rp1->GetLowerRefYaxis()->SetTitle(""ratio"");; rp1->GetUpperRefYaxis()->SetTitle(""entries"");; }; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TNamed::SetTitlevirtual void SetTitle(const char *title="""")Set the title of the TNamed.Definition TNamed.cxx:164; c1return c1Definition legend1.C:41; ratioplot2Definition ratioplot2.py:1; . Error options for difference divided by uncertainty and fit residual; The uncertainty that is used in the calculation can be steered by providing options to the option argument. Option Description . errasym Uses calculated asymmetric errors from TH1::GetBinErrorUp/TH1::GetBinErrorLow. Note that you need to set TH1::SetBinErrorOption first . errfunc Uses \( \sqrt{f(x)} \) as the error . The asymmetric error case uses the upper or lower error depending on the relative size of the bin contents, or the bin content and the function value. Access to internal parts; You can access the internal objects that are used to construct the plot via a series of methods. TRatioPlot::GetUpperPad and TRatioPlot::GetLowerPad can be used to draw additional elements on top of the existing ones. TRatioPlot::GetLowerRefGraph returns a reference to the lower pad's graph that is responsible for the range, which enables you to modify the range. Definition at line 43 of file TRatioPlot.h. Public Member Functions;  TRatioPlot ();  TRatioPlot default constructor. ;  ;  TRatioPlot (TH1 *h1, Option_t *option="""", TFitResult *fitres=nullptr);  Constructor for one histogram and a fit. ;  ;  TRatioPlot (TH1 *h1, TH1 *h2, Option_t *option=""pois"");  Constructo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRatioPlot.html:5961,error,errors,5961,doc/master/classTRatioPlot.html,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html,1,['error'],['errors']
Availability,"; based on algorithm 353QH twice presented by J. Friedman; in Proc.of the 1974 CERN School of Computing, Norway, 11-24 August, 1974. void Smooth(Int_t ntimes = 1, Option_t* option = """"); Smooth bin contents of this histogram.; if option contains ""R"" smoothing is applied only to the bins; defined in the X axis range (default is to smooth all bins); Bin contents are replaced by their smooth values.; Errors (if any) are not modified.; the smoothing procedure is repeated ntimes (default=1). void StatOverflows(Bool_t flag = kTRUE); if flag=kTRUE, underflows and overflows are used by the Fill functions; in the computation of statistics (mean value, RMS).; By default, underflows or overflows are not used. void Streamer(TBuffer& ); Stream a class object. void Print(Option_t* option = """") const; Print some global quantities for this histogram. If option ""base"" is given, number of bins and ranges are also printed; If option ""range"" is given, bin contents and errors are also printed; for all bins in the current range (default 1-->nbins); If option ""all"" is given, bin contents and errors are also printed; for all bins including under and overflows. void Rebuild(Option_t* option = """"); Using the current bin info, recompute the arrays for contents and errors. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc. if option ""ICE"" is specified, resets only Integral, Contents and Errors.; if option ""ICES"" is specified, resets only Integral, Contents , Errors and Statistics; This option is used; if option ""M"" is specified, resets also Minimum and Maximum. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SavePrimitiveHelp(ostream& out, const char* hname, Option_t* option = """"); helper function for the SavePrimitive functions from TH1; or classes derived from TH1, eg TProfile, TProfile2D. void UseCurrentStyle(); Copy current attributes from/to current style. Double_t GetMean(Int_t axis = 1)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:108813,error,errors,108813,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,2,['error'],['errors']
Availability,"; be tried.; Before opening a file via TNetFile a check is made to see if the URL; specifies a local file. If that is the case the file will be opened; via a normal TFile. To force the opening of a local file via a; TNetFile use either TNetFile directly or specify as host ""localhost"".; The netopt argument is only used by TNetFile. For the meaning of the; options and other arguments see the constructors of the individual; file classes. In case of error returns 0. For TFile implementations supporting asynchronous file open, see; TFile::AsyncOpen(...), it is possible to request a timeout with the; option:; TIMEOUT=<secs> the timeout must be specified in seconds and; it will be internally checked with granularity of; one millisec. For remote files there is the option:; CACHEREAD opens an existing file for reading through the file cache.; The file will be downloaded to the cache and opened from there.; If the download fails, it will be opened remotely.; The file will be downloaded to the directory specified by; SetCacheFileDir(). TFileOpenHandle * AsyncOpen(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1, Int_t netopt = 0); Static member function to submit an open request. The request will be; processed asynchronously. See TFile::Open(const char *, ...) for an; explanation of the arguments. A handler is returned which is to be passed; to TFile::Open(TFileOpenHandle *) to get the real TFile instance once; the file is open.; This call never blocks and it is provided to allow parallel submission; of file opening operations expected to take a long time.; TFile::Open(TFileOpenHandle *) may block if the file is not yet ready.; The sequence; TFile::Open(TFile::AsyncOpen(const char *, ...)); is equivalent to; TFile::Open(const char *, ...) .; To be effective, the underlying TFile implementation must be able to; support asynchronous open functionality. Currently, only TXNetFile; supports it. If the functionality is not implemented, this call ac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:46077,down,downloaded,46077,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,6,['down'],['downloaded']
Availability,"; beta distributions (have 2 free parameters) are supported as prior; probabilities.; . By default the expectation value of this posterior distribution is used as estimator for the efficiency:; . Optionally the mode can also be used as value for the estimated efficiency. This can be done by calling SetBit(kPosteriorMode) or; SetPosteriorMode. In this case the estimated efficiency is:; . In the case of a uniform prior distribution, B(x,1,1), the posterior mode is k/n, equivalent to the frequentist estimate (the maximum likelihood value).; The statistic options also specifiy which confidence interval is used for calculating; the uncertainties of the efficiency. The following properties define the error; calculation:; ; fConfLevel: desired confidence level: 0 < fConfLevel < 1 (GetConfidenceLevel / SetConfidenceLevel); fStatisticOption: defines which method is used to calculate the boundaries of the confidence interval (SetStatisticOption); fBeta_alpha, fBeta_beta: parameters for the prior distribution which is only used in the bayesian case (GetBetaAlpha / GetBetaBeta / SetBetaAlpha / SetBetaBeta); kIsBayesian: flag whether bayesian statistics are used or not (UsesBayesianStat); kShortestInterval: flag whether shortest interval (instead of central one) are used in case of Bayesian statistics (UsesShortestInterval). Normally shortest interval should be used in combination with the mode (see UsesPosteriorMode); fWeight: global weight for this TEfficiency object which is used during combining or merging with other TEfficiency objects(GetWeight / SetWeight). In the following table the implemented confidence intervals are listed; with their corresponding statistic option. For more details on the calculation,; please have a look at the the mentioned functions. implemented confidence intervals and their options. namestatistic optionfunctionkIsBayesianparameters. Clopper-PearsonkFCP. ClopperPearson. false. total eventspassed eventsconfidence level. normal approximationkFNormal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEfficiency.html:7528,error,error,7528,root/html534/TEfficiency.html,https://root.cern,https://root.cern/root/html534/TEfficiency.html,1,['error'],['error']
Availability,"; break;; 1621 case 3: nbins = (nbinsx + 2) * (nbinsy + 2) * (nbinsz + 2); break;; 1622 default: nbins = 0;; 1623 }; 1624 ; 1625 for(Int_t i = 0; i < nbins; ++i) {; 1626 if(pass.GetBinContent(i) > total.GetBinContent(i)) {; 1627 gROOT->Info(""TEfficiency::CheckEntries"",""Histograms are not consistent: passed bin content > total bin content"");; 1628 return false;; 1629 }; 1630 }; 1631 ; 1632 return true;; 1633}; 1634 ; 1635////////////////////////////////////////////////////////////////////////////////; 1636/// Check if both histogram are weighted. If they are weighted a true is returned; 1637///; 1638Bool_t TEfficiency::CheckWeights(const TH1& pass,const TH1& total); 1639{; 1640 if (pass.GetSumw2N() == 0 && total.GetSumw2N() == 0) return false;; 1641 ; 1642 // check also that the total sum of weight and weight squares are consistent; 1643 Double_t statpass[TH1::kNstat];; 1644 Double_t stattotal[TH1::kNstat];; 1645 ; 1646 pass.GetStats(statpass);; 1647 total.GetStats(stattotal);; 1648 ; 1649 double tolerance = (total.IsA() == TH1F::Class() ) ? 1.E-5 : 1.E-12;; 1650 ; 1651 //require: sum of weights == sum of weights^2; 1652 if(!TMath::AreEqualRel(statpass[0],statpass[1],tolerance) ||; 1653 !TMath::AreEqualRel(stattotal[0],stattotal[1],tolerance) ) {; 1654 return true;; 1655 }; 1656 ; 1657 // histograms are not weighted; 1658 return false;; 1659 ; 1660}; 1661 ; 1662 ; 1663////////////////////////////////////////////////////////////////////////////////; 1664/// Create the graph used be painted (for dim=1 TEfficiency); 1665/// The return object is managed by the caller; 1666 ; 1667TGraphAsymmErrors * TEfficiency::CreateGraph(Option_t * opt) const; 1668{; 1669 if (GetDimension() != 1) {; 1670 Error(""CreatePaintingGraph"",""Call this function only for dimension == 1"");; 1671 return nullptr;; 1672 }; 1673 ; 1674 Int_t npoints = fTotalHistogram->GetNbinsX();; 1675 TGraphAsymmErrors * graph = new TGraphAsymmErrors(npoints);; 1676 graph->SetName(""eff_graph"");; 1677 FillGraph(graph",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8cxx_source.html:67287,toler,tolerance,67287,doc/master/TEfficiency_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8cxx_source.html,1,['toler'],['tolerance']
Availability,"; c.SaveAs(""rf315_projectpdf.png""); [#0] WARNING:InputArguments -- The parameter 'sigmax' with range [-inf, inf] of the RooGaussian 'gaussx' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_Int[y]_Norm[x,y]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_Int[y]_Norm[x,y]_genData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a1: using 0.4; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for y: using 0.4; [#1] INFO:NumericIntegration -- RooRealIntegral::init([gaussy_NORM[y]_X_gaussx_NORM[x]]_Int[y]) using numeric integrator RooIntegrator1D to calculate Int(y); ; prevFCN = 12037.78496 a1=-1.469, ; prevFCN = 1900.132597 a1=-1.531, ; prevFCN = 1901.591671 a1=-1.497, ; prevFCN = 1900.088181 a1=-1.503, ; prevFCN = 1900.238998 a1=-1.5, y=0.03051, ; prevFCN = 1900.156536 y=-0.03051, ; prevFCN = 1900.156536 y=0.003051, ; prevFCN = 1900.156536 y=-0.003051, ; prevFCN = 1900.156536 a1=-1.497, y=0, ; prevFCN = 1900.088181 a1=-1.485, ; prevFCN = 1899.958806 a1=-1.491, ; prevFCN = 1899.994382 a1=-1.484, ; prevFCN = 1899.958577 a1=-1.485, ; prevFCN = 1899.959183 a1=-1.484, ; prevFCN = 1899.958511 a1=-1.485, ; prevFCN = 1899.960007 a1=-1.485, y=0.0003051, ; prevFCN = 1899.958806 y=-0.0003051, ; prevFCN = 1899.958806 a1=-1.484, y=0, ; prevFCN = 1899.958497 a1=-1.483, ; prevFCN = 1899.958952 a1=-1.485, ; prevFCN = 1899.95895 a1=-1.484, y=0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf315__projectpdf_8py.html:3281,error,error,3281,doc/master/rf315__projectpdf_8py.html,https://root.cern,https://root.cern/doc/master/rf315__projectpdf_8py.html,2,"['avail', 'error']","['available', 'error']"
Availability,"; c1 = 1, . Double_t ; c2 = 1 . ). overridevirtual . Replace contents of this profile2D by the addition of h1 and h2. ; this = c1*h1 + c2*h2 ; Reimplemented from TH1.; Definition at line 249 of file TProfile2D.cxx. ◆ Add() [2/3]. Bool_t TProfile2D::Add ; (; const TH1 * ; h1, . Double_t ; c1 = 1 . ). overridevirtual . Performs the operation: this = this + c1*h1 . ; Reimplemented from TH1.; Definition at line 230 of file TProfile2D.cxx. ◆ Add() [3/3]. Bool_t TProfile2D::Add ; (; TF1 * ; h1, . Double_t ; c1 = 1, . Option_t * ; option = """" . ). overridevirtual . Performs the operation: this = this + c1*f1 . ; Reimplemented from TH1.; Definition at line 221 of file TProfile2D.cxx. ◆ Approximate(). void TProfile2D::Approximate ; (; Bool_t ; approx = kTRUE). static . Static function, set the fgApproximate flag. ; When the flag is true, the function GetBinError will approximate the bin error with the average profile error on all bins in the following situation only; the number of bins in the profile2D is less than 10404 (eg 100x100); the bin number of entries is small ( <5); the estimated bin error is extremely small compared to the bin content (see TProfile2D::GetBinError) . Definition at line 277 of file TProfile2D.cxx. ◆ BufferEmpty(). Int_t TProfile2D::BufferEmpty ; (; Int_t ; action = 0). overridevirtual . Fill histogram with all entries in the buffer. . action = -1 histogram is reset and refilled from the buffer (called by THistPainter::Paint); action = 0 histogram is filled from the buffer; action = 1 histogram is filled and buffer is deleted The buffer is automatically deleted when the number of entries in the buffer is greater than the number of entries in the histogram . Reimplemented from TH2.; Definition at line 291 of file TProfile2D.cxx. ◆ BufferFill() [1/3]. Int_t TProfile2D::BufferFill ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Double_t ; w . ). protectedvirtual . Accumulate arguments in buffer. ; When buffer is full, empty the buffer. fBuffer[0] = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:71708,error,error,71708,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,3,['error'],['error']
Availability,"; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read specified byte ranges from remote file via HTTP daemon. ; Reads the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 517 of file TWebFile.cxx. ◆ ReadBuffers10(). Bool_t TWebFile::ReadBuffers10 ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). protectedvirtual . Read specified byte ranges from remote file via HTTP 1.0 daemon (without mod-root installed). ; Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Definition at line 566 of file TWebFile.cxx. ◆ ReOpen(). Int_t TWebFile::ReOpen ; (; Option_t * ; mode). overridevirtual . Reopen a file with a different access mode, like from READ to UPDATE or from NEW, CREATE, RECREATE, UPDATE to READ. ; Thus the mode argument can be either ""READ"" or ""UPDATE"". The method returns 0 in case the mode was successfully modified, 1 in case the mode did not change (was already as requested or wrong input arguments) and -1 in case of failure, in which case the file cannot be used anymore. A TWebFile cannot be reopened in update mode. ; Reimplemented from TFile.; Definition at line 394 of file TWebFile.cxx. ◆ Seek(). void TWebFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). overridevirtual . Set position from where to start reading. ; Reimplemented from TFile.; Definition at line 989 of file TWebFile.cxx. ◆ SetMaxFullCacheSize(). void TWebFile::SetMaxFullCacheSize ; (; Long64_t ; sz). static . Static method, set maxmimal",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWebFile.html:55086,failure,failure,55086,doc/master/classTWebFile.html,https://root.cern,https://root.cern/doc/master/classTWebFile.html,1,['failure'],['failure']
Availability,"; const char * ; line, . EErrorCode * ; error = nullptr . ). finalvirtual . Implements TInterpreter.; Definition at line 2453 of file TCling.cxx. ◆ ProcessLineAsynch(). Longptr_t TCling::ProcessLineAsynch ; (; const char * ; line, . EErrorCode * ; error = nullptr . ). Let cling process a command line asynch. ; Definition at line 3560 of file TCling.cxx. ◆ ProcessLineSynch(). Longptr_t TCling::ProcessLineSynch ; (; const char * ; line, . EErrorCode * ; error = nullptr . ). finalvirtual . Let cling process a command line synchronously, i.e we are waiting it will be finished. ; Implements TInterpreter.; Definition at line 3569 of file TCling.cxx. ◆ ReadRootmapFile(). int TCling::ReadRootmapFile ; (; const char * ; rootmapfile, . TUniqueString * ; uniqueString = nullptr . ). private . Read and parse a rootmapfile in its new format, and return 0 in case of success, -1 if the file has already been read, and -3 in case its format is the old one (e.g. ; containing ""Library.ClassName""), -4 in case of syntax error. ; Definition at line 5528 of file TCling.cxx. ◆ RecursiveRemove(). void TCling::RecursiveRemove ; (; TObject * ; obj). finalvirtual . Delete object from cling symbol table so it can not be used anymore. ; cling objects are always on the heap. ; Reimplemented from TObject.; Definition at line 3683 of file TCling.cxx. ◆ RefreshClassInfo(). void TCling::RefreshClassInfo ; (; TClass * ; cl, . const clang::NamedDecl * ; def, . bool ; alias . ). Internal function. Actually do the update of the ClassInfo when seeing. ; Definition at line 6635 of file TCling.cxx. ◆ RegisterLoadedSharedLibrary(). void TCling::RegisterLoadedSharedLibrary ; (; const char * ; name). private . Register a new shared library name with the interpreter; add it to fSharedLibs. ; Definition at line 3415 of file TCling.cxx. ◆ RegisterModule(). void TCling::RegisterModule ; (; const char * ; modulename, . const char ** ; headers, . const char ** ; includePaths, . const char * ; payloadCode, . const cha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:123637,error,error,123637,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['error'],['error']
Availability,"; const. Project a 2-D histogram into a profile histogram along X. ; The projection is made from the channels along the X axis ranging from firstybin to lastybin included. The result is a 1D profile which contains the combination of all the considered bins along X By default, bins 1 to ny are included When all bins are included, the number of entries in the projection is set to the number of entries of the 2-D histogram, otherwise the number of entries is incremented by 1 for all non empty cells.; The option can also be used to specify the projected profile error type. Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details ; Definition at line 1389 of file TProfile2D.cxx. ◆ ProjectionXY(). TH2D * TProfile2D::ProjectionXY ; (; const char * ; name = ""_pxy"", . Option_t * ; option = ""e"" . ); const. Project this profile2D into a 2-D histogram along X,Y. ; The projection is always of the type TH2D. if option ""E"" is specified the errors of the projected histogram are computed and set to be equal to the errors of the profile. Option ""E"" is defined as the default one in the header file.; if option """" is specified the histogram errors are simply the sqrt of its content; if option ""B"" is specified, the content of bin of the returned histogram will be equal to the GetBinEntries(bin) of the profile,; if option ""C=E"" the bin contents of the projection are set to the bin errors of the profile; if option ""W"" is specified the bin content of the projected histogram is set to the product of the bin content of the profile and the entries. With this option the returned histogram will be equivalent to the one obtained by filling directly a TH2D using the 3-rd value as a weight. This option makes sense only for profile filled with all weights =1. When the profile is weighted (filled with weights different than 1) the bin error of the projected histogram (obtained using this option ""W"") cannot be correctly computed from the information stored in the profile. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:96276,error,errors,96276,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,2,['error'],['errors']
Availability,"; const. Return the Draw() options registered for the named object. ; Return an empty string if the named object cannot be found. ; Definition at line 980 of file RooPlot.cxx. ◆ getFitRangeBinW(). double RooPlot::getFitRangeBinW ; (; ); const. inline . Return the bin width that is being used to normalise the PDF. ; Definition at line 148 of file RooPlot.h. ◆ getFitRangeNEvt() [1/2]. double RooPlot::getFitRangeNEvt ; (; ); const. inline . Return the number of events in the fit range. ; Definition at line 145 of file RooPlot.h. ◆ getFitRangeNEvt() [2/2]. double RooPlot::getFitRangeNEvt ; (; double ; xlo, . double ; xhi . ); const. Return the number of events that is associated with the range [xlo,xhi] This method is only fully functional for ranges not equal to the full range if the object that inserted the normalization data provided a link to an external object that can calculate the event count in in sub ranges. ; An error will be printed if this function is used on sub-ranges while that information is not available ; Definition at line 1205 of file RooPlot.cxx. ◆ getHist(). RooHist * RooPlot::getHist ; (; const char * ; name = nullptr); const. Return a RooCurve pointer of the named object in this plot, or zero if the named object does not exist or is not a RooCurve. ; Definition at line 858 of file RooPlot.cxx. ◆ getInvisible(). bool RooPlot::getInvisible ; (; const char * ; name); const. Returns true of object with given name is set to be invisible. ; Definition at line 1008 of file RooPlot.cxx. ◆ GetMaximum(). double RooPlot::GetMaximum ; (; double ; maxval = FLT_MAX); const. See alsoTH1::GetMaximum() ; Definition at line 1272 of file RooPlot.cxx. ◆ GetMinimum(). double RooPlot::GetMinimum ; (; double ; minval = -FLT_MAX); const. See alsoTH1::GetMinimum() ; Definition at line 1270 of file RooPlot.cxx. ◆ GetNbinsX(). Int_t RooPlot::GetNbinsX ; (; ); const. See alsoTH1::GetNbinsX() ; Definition at line 1266 of file RooPlot.cxx. ◆ GetNdivisions(). Int_t RooPlot::Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPlot.html:40677,error,error,40677,doc/master/classRooPlot.html,https://root.cern,https://root.cern/doc/master/classRooPlot.html,2,"['avail', 'error']","['available', 'error']"
Availability,"; const. overrideprotectedvirtual . Compute multiple values of Voigtian distribution. ; Reimplemented from RooAbsReal.; Definition at line 115 of file RooVoigtian.cxx. ◆ evaluate(). double RooVoigtian::evaluate ; (; ); const. overrideprotectedvirtual . Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ; Implements RooAbsReal.; Definition at line 81 of file RooVoigtian.cxx. ◆ IsA(). TClass * RooVoigtian::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 54 of file RooVoigtian.h. ◆ selectDefaultAlgorithm(). void RooVoigtian::selectDefaultAlgorithm ; (; ). inline . Disable the fast evaluation of the complex error function using look-up tables (default is the ""slow"" CERNlib algorithm). ; Definition at line 38 of file RooVoigtian.h. ◆ selectFastAlgorithm(). void RooVoigtian::selectFastAlgorithm ; (; ). inline . Enable the fast evaluation of the complex error function using look-up tables (default is the ""slow"" CERNlib algorithm). ; Definition at line 34 of file RooVoigtian.h. ◆ Streamer(). void RooVoigtian::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsPdf. ◆ StreamerNVirtual(). void RooVoigtian::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 54 of file RooVoigtian.h. Member Data Documentation. ◆ _doFast. bool RooVoigtian::_doFast = false. private . Definition at line 53 of file RooVoigtian.h. ◆ mean. RooRealProxy RooVoigtian::mean. protected . Definition at line 43 of file RooVoigtian.h. ◆ sigma. RooRealProxy RooVoigtian::sigma. protected . Definition at line 45 of file RooVoigtian.h. ◆ width. RooRealProxy RooVoigtian::width. protected . Definition at line 44 of file RooVoigtian.h. ◆ x. RooRealProxy RooVoigtian::x. protected . Definition at line 42 of file RooVoigtian.h. Libraries for RooVoigtian:. [legend]; The documentation for this class",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooVoigtian.html:77585,error,error,77585,doc/master/classRooVoigtian.html,https://root.cern,https://root.cern/doc/master/classRooVoigtian.html,1,['error'],['error']
Availability,"; constructor using the default options. int PrintLevel() const; non-static methods for retrivieng options ; set print level. { return fLevel; }. unsigned int MaxFunctionCalls() const; max number of function calls. { return fMaxCalls; }. unsigned int MaxIterations() const; max iterations. { return fMaxIter; }. int Strategy() const; strategy. { return fStrategy; }. double Tolerance() const; absolute tolerance. { return fTolerance; }. double Precision() const; precision in the objective funciton calculation (value <=0 means left to default). { return fPrecision; }. double ErrorDef() const; error definition. { return fErrorDef; }. const std::string & MinimizerType() const; type of minimizer. { return fMinimType; }. const std::string & MinimizerAlgorithm() const; type of algorithm. { return fAlgoType; }. void SetPrintLevel(int level); non-static methods for setting options ; set print level. { fLevel = level; }. void SetMaxFunctionCalls(unsigned int maxfcn); set maximum of function calls. { fMaxCalls = maxfcn; }. void SetMaxIterations(unsigned int maxiter); set maximum iterations (one iteration can have many function calls). { fMaxIter = maxiter; }. void SetTolerance(double tol); set the tolerance. { fTolerance = tol; }. void SetPrecision(double prec); set the precision. { fPrecision = prec; }. void SetStrategy(int stra); set the strategy. { fStrategy = stra; }. void SetErrorDef(double err); set error def. { fErrorDef = err; }. void SetMinimizerType(const char* type); set minimizer type. { fMinimType = type; }. void SetMinimizerAlgorithm(const char* type); set minimizer algorithm. { fAlgoType = type; }. » Author: L. Moneta Fri Aug 15 2008 » Copyright (c) 2008 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id: MinimizerOptions.h 31604 2009-12-07 19:04:33Z moneta $ » Last generated: 2009-12-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__MinimizerOptions.html:4452,toler,tolerance,4452,root/html526/ROOT__Math__MinimizerOptions.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__MinimizerOptions.html,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; TGraphErrors *graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. TGraphErrors *graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; TGraphErrors *graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. TGraphErrors *graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; return c43;; }; TGraphAsymmErrors; A TGraphAsymmErrors is like a TGraphErrors but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Picture; Source. {; TCanvas *c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; double aeyl[] = {1, 0.5, 1, 0.5, 1};; double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; TGraphAsymmErrors* gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; gae->SetFillColor(2);; gae->SetFillStyle(3001);; gae->Draw(""a2"");; gae->Draw(""p"");; return c44;; }; TGraphBentErrors; A TGraphBentErrors is like a TGraphAsymmErrors.; An extra parameter allows to bend the error bars to better see them; when several graphs are drawn on the same plot. Picture; Source. {; TCanvas *c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; const Int_t n = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphPainter.html:10631,error,errors,10631,root/html534/TGraphPainter.html,https://root.cern,https://root.cern/root/html534/TGraphPainter.html,9,['error'],['errors']
Availability,"; doubleROOT::Minuit2::MnApplication::Ext2int(unsigned int, double) const; unsigned intROOT::Minuit2::MnApplication::ExtOfInt(unsigned int) const; virtual const ROOT::Minuit2::FCNBase&ROOT::Minuit2::MnApplication::Fcnbase() const; voidROOT::Minuit2::MnApplication::Fix(unsigned int); voidROOT::Minuit2::MnApplication::Fix(const char*); unsigned intROOT::Minuit2::MnApplication::Index(const char*) const; doubleROOT::Minuit2::MnApplication::Int2ext(unsigned int, double) const; unsigned intROOT::Minuit2::MnApplication::IntOfExt(unsigned int) const; virtual const ROOT::Minuit2::ModularFunctionMinimizer&Minimizer() const; const vector<ROOT::Minuit2::MinuitParameter>&ROOT::Minuit2::MnApplication::MinuitParameters() const; ROOT::Minuit2::MnSimplexMnSimplex(const ROOT::Minuit2::MnSimplex& migr); ROOT::Minuit2::MnSimplexMnSimplex(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::MnUserParameters& par, unsigned int stra = 1); ROOT::Minuit2::MnSimplexMnSimplex(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::MnUserParameterState& par, const ROOT::Minuit2::MnStrategy& str); ROOT::Minuit2::MnSimplexMnSimplex(const ROOT::Minuit2::FCNBase& fcn, const vector<double>& par, const vector<double>& err, unsigned int stra = 1); ROOT::Minuit2::MnSimplexMnSimplex(const ROOT::Minuit2::FCNBase& fcn, const vector<double>& par, const ROOT::Minuit2::MnUserCovariance& cov, unsigned int stra = 1); ROOT::Minuit2::MnSimplexMnSimplex(const ROOT::Minuit2::FCNBase& fcn, const ROOT::Minuit2::MnUserParameters& par, const ROOT::Minuit2::MnUserCovariance& cov, unsigned int stra = 1); ROOT::Minuit2::MnSimplexMnSimplex(const ROOT::Minuit2::FCNBase& fcn, const vector<double>& par, unsigned int nrow, const vector<double>& cov, unsigned int stra = 1); const char*ROOT::Minuit2::MnApplication::Name(unsigned int) const; unsigned intROOT::Minuit2::MnApplication::NumOfCalls() const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::MnApplication::operator()(unsigned int maxfcn = 0, double tolerance = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__MnSimplex.html:3288,toler,tolerance,3288,root/html526/ROOT__Minuit2__MnSimplex.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__MnSimplex.html,5,['toler'],['tolerance']
Availability,"; double ; sumOfSigWeights, . double ; sumOfBkgWeights . ). set the weight sums to be scaled to (preparations for monitoring output) ; Definition at line 512 of file NeuralNet.cxx. ◆ startTestCycle(). void TMVA::DNN::ClassificationSettings::startTestCycle ; (; ). virtual . action to be done when the test cycle is started (e.g. ; update some monitoring output) ; Reimplemented from TMVA::DNN::Settings.; Definition at line 316 of file NeuralNet.cxx. ◆ startTrainCycle(). void TMVA::DNN::ClassificationSettings::startTrainCycle ; (; ). virtual . action to be done when the training cycle is started (e.g. ; update some monitoring output) ; Reimplemented from TMVA::DNN::Settings.; Definition at line 281 of file NeuralNet.cxx. ◆ testIteration(). void TMVA::DNN::ClassificationSettings::testIteration ; (; ). inlinevirtual . callback for monitoring and loggging ; Reimplemented from TMVA::DNN::Settings.; Definition at line 930 of file NeuralNet.h. ◆ testSample(). void TMVA::DNN::ClassificationSettings::testSample ; (; double ; error, . double ; output, . double ; target, . double ; weight . ). virtual . action to be done after the computation of a test sample (e.g. ; update some monitoring output) ; Reimplemented from TMVA::DNN::Settings.; Definition at line 304 of file NeuralNet.cxx. Member Data Documentation. ◆ m_ams. std::vector<double> TMVA::DNN::ClassificationSettings::m_ams. Definition at line 1000 of file NeuralNet.h. ◆ m_cutValue. double TMVA::DNN::ClassificationSettings::m_cutValue. Definition at line 1008 of file NeuralNet.h. ◆ m_fileNameNetConfig. std::string TMVA::DNN::ClassificationSettings::m_fileNameNetConfig. Definition at line 1011 of file NeuralNet.h. ◆ m_fileNameResult. std::string TMVA::DNN::ClassificationSettings::m_fileNameResult. Definition at line 1010 of file NeuralNet.h. ◆ m_input. std::vector<double> TMVA::DNN::ClassificationSettings::m_input. Definition at line 995 of file NeuralNet.h. ◆ m_output. std::vector<double> TMVA::DNN::ClassificationSettings::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html:9261,error,error,9261,doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1ClassificationSettings.html,1,['error'],['error']
Availability,; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. static Int_tRooPrintable::_nameLength; Double_tRooPlotable::_normValue; TStringRooPlotable::_yAxisLabel; Double_tRooPlotable::_ymax; Double_tRooPlotable::_ymin; Double_t*TGraphAsymmErrors::fEXhigh[fNpoints] array of X high errors; Double_t*TGraphAsymmErrors::fEXlow[fNpoints] array of X low errors; Double_t*TGraphAsymmErrors::fEYhigh[fNpoints] array of Y high errors; Double_t*TGraphAsymmErrors::fEYlow[fNpoints] array of Y low errors; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TList*TGraph::fFunctionsPointer to list of functions (fits and user); TH1F*TGraph::fHistogramPointer to histogram used for drawing axis; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph::fMaxSize!Current dimension of arrays fX and fY; Double_tTGraph::fMaximumMaximum value for plotting along y; Double_tTGraph::fMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. private:. Double_t_entriesNumber of entries in histogram; Double_t_nSigmaNumber of 'sigmas' error bars represent; Double_t_nominalBinWidthAverage bin width; Double_t_rawEntriesNumber of entries in source dataset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHist(); Default constructor. Roo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHist.html:17742,error,errors,17742,root/html526/RooHist.html,https://root.cern,https://root.cern/root/html526/RooHist.html,20,['error'],['errors']
Availability,"; errlow, . double & ; errhigh . ); const. inline . Get errors on the point (coordinate errors and asymmetric value errors) for the given fit point. ; It must be called only when the coordinate errors and asymmetric errors are stored otherwise it will produce an assert. ; Definition at line 480 of file BinData.h. ◆ GetPointError() [2/2]. const double * ROOT::Fit::BinData::GetPointError ; (; unsigned int ; ipoint, . double & ; errvalue . ); const. inline . Retrieve the errors on the point (coordinate and value) for the given fit point It must be called only when the coordinate errors are stored otherwise it will produce an assert. ; Definition at line 462 of file BinData.h. ◆ HasBinEdges(). bool ROOT::Fit::BinData::HasBinEdges ; (; ); const. inline . query if the data store the bin edges instead of the center ; Definition at line 545 of file BinData.h. ◆ HaveAsymErrors(). bool ROOT::Fit::BinData::HaveAsymErrors ; (; ); const. inline . flag to control if data provides asymmetric errors on the value ; Definition at line 146 of file BinData.h. ◆ HaveCoordErrors(). bool ROOT::Fit::BinData::HaveCoordErrors ; (; ); const. inline . flag to control if data provides error on the coordinates ; Definition at line 134 of file BinData.h. ◆ InitBinEdge(). void ROOT::Fit::BinData::InitBinEdge ; (; ). protected . Definition at line 725 of file BinData.cxx. ◆ InitDataVector(). void ROOT::Fit::BinData::InitDataVector ; (; ). protected . Definition at line 645 of file BinData.cxx. ◆ Initialize(). void ROOT::Fit::BinData::Initialize ; (; unsigned int ; newPoints, . unsigned int ; dim = 1, . ErrorType ; err = kValueError . ). inline . Preallocate a data set with given size, dimension and error type. ; If the data set already exists, newPoints are appended to the existing data set. (i.e., if the data exists Initialize() is equivalent to a resize( NPoints() + maxpoints)). Initialize() and Append() are equivalent. ; Definition at line 122 of file BinData.h. ◆ InitializeErrors(). void ROOT::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html:25049,error,errors,25049,doc/master/classROOT_1_1Fit_1_1BinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html,1,['error'],['errors']
Availability,"; for (i=1;i<=100;i++) {; sum += h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; Float_t rightmax = 1.1*hint1->GetMaximum();; Float_t scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; TGaxis *axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; return c1;; }; Statistics Display; The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The ""mode"" has up to nine digits that can be set to on (1 or 2), off (0). mode = ksiourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. For example:. gStyle->SetOptStat(11);. displays only the name of histogram and the number of entries, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and RMS.; WARNING 1: never do:. gStyle->SetOptStat(0001111);. but instead do:. gStyle->SetOptStat(1111);. because 0001111 will be taken as an octal number!; WARNING 2: for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. NOTE that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single nu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THistPainter.html:15392,error,error,15392,root/html534/THistPainter.html,https://root.cern,https://root.cern/root/html534/THistPainter.html,4,['error'],['error']
Availability,"; for the bin enclosing the coordinates; contained in 'bin' is returned. For higher values,; the result is interpolated in the real dimensions; of the dataset. void weightError(Double_t& lo, Double_t& hi, RooAbsData::ErrorType etype = Poisson) const; Return the error on current weight. Double_t interpolateDim(RooRealVar& dim, const RooAbsBinning* binning, Double_t xval, Int_t intOrder, Bool_t correctForBinSize, Bool_t cdfBoundaries); Perform boundary safe 'intOrder'-th interpolation of weights in dimension 'dim'; at current value 'xval'. void add(const RooArgSet& row, Double_t wgt, Double_t sumw2); Increment the weight of the bin enclosing the coordinates given; by 'row' by the specified amount. Add the sum of weights squared; for the bin by 'sumw2' rather than wgt^2. void set(const RooArgSet& row, Double_t weight, Double_t wgtErrLo, Double_t wgtErrHi); Increment the weight of the bin enclosing the coordinates; given by 'row' by the specified amount. Associate errors; [wgtErrLo,wgtErrHi] with the event weight on this bin. void set(Double_t weight, Double_t wgtErr = -1); Increment the weight of the bin enclosing the coordinates; given by 'row' by the specified amount. Associate errors; [wgtErrLo,wgtErrHi] with the event weight on this bin. void set(const RooArgSet& row, Double_t weight, Double_t wgtErr = -1); Increment the weight of the bin enclosing the coordinates; given by 'row' by the specified amount. Associate errors; [wgtErrLo,wgtErrHi] with the event weight on this bin. void add(const RooAbsData& dset, const char* cut, Double_t wgt); Add all data points contained in 'dset' to this data set with given weight.; Optional cut string expression selects the data points to be added and can; reference any variable contained in this data set. void add(const RooAbsData& dset, const RooFormulaVar* cutVar, Double_t wgt); Add all data points contained in 'dset' to this data set with given weight.; Optional RooFormulaVar pointer selects the data points to be added. Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooDataHist.html:27793,error,errors,27793,root/html526/RooDataHist.html,https://root.cern,https://root.cern/root/html526/RooDataHist.html,1,['error'],['errors']
Availability,"; gr1->SetLineColor(2);; gr1->SetLineWidth(1504);; gr1->SetFillStyle(3005);. TGraph *gr2 = new TGraph(n,x2,y2);; gr2->SetLineColor(4);; gr2->SetLineWidth(-2002);; gr2->SetFillStyle(3004);; gr2->SetFillColor(9);. TGraph *gr3 = new TGraph(n,x3,y3);; gr3->SetLineColor(5);; gr3->SetLineWidth(-802);; gr3->SetFillStyle(3002);; gr3->SetFillColor(2);. mg->Add(gr1);; mg->Add(gr2);; mg->Add(gr3);; mg->Draw(""AC"");. return c1;; }; Graphs with error bars; Three classes are available to handle graphs with error bars:; TGraphErrors, TGraphAsymmErrors and TGraphBentErrors.; The following drawing options are specific to graphs with error bars:. ""Z""; Do not draw small horizontal and vertical lines the end of the error bars.; Without ""Z"", the default is to draw these. "">""; An arrow is drawn at the end of the error bars.; The size of the arrow is set to 2/3 of the marker size. ""|>""; A filled arrow is drawn at the end of the error bars.; The size of the arrow is set to 2/3 of the marker size. ""X""; Do not draw error bars. By default, graph classes that have errors; are drawn with the errors (TGraph itself has no errors, and so this option; has no effect.). ""||""; Draw only the small vertical/horizontal lines at the ends of the; error bars, without drawing the bars themselves. This option is; interesting to superimpose statistical-only errors on top of a graph; with statistical+systematic errors. ""[]""; Does the same as option ""||"" except that it draws additional marks at the; ends of the small vertical/horizontal lines. It makes plots less ambiguous; in case several graphs are drawn on the same picture. ""0""; By default, when a data point is outside the visible range along the Y; axis, the error bars are not drawn. This option forces error bars' drawing for; the data points outside the visible range along the Y axis (see example below). ""2""; Error rectangles are drawn. ""3""; A filled area is drawn through the end points of the vertical error bars. ""4""; A smoothed filled area is drawn through ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphPainter.html:5664,error,error,5664,root/html532/TGraphPainter.html,https://root.cern,https://root.cern/root/html532/TGraphPainter.html,4,['error'],['error']
Availability,"; h - Run Hesse to estimate errors; v - Verbose mode; l - Log parameters after each Minuit steps to file; t - Activate profile timer; r - Save fit result; 0 - Run Migrad with strategy 0. Int_t minimize(const char* type, const char* alg = 0). Int_t migrad(); Execute MIGRAD. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t hesse(); Execute HESSE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(); Execute MINOS. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(const RooArgSet& minosParamList); Execute MINOS for given list of parameters. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t seek(); Execute SEEK. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t simplex(); Execute SIMPLEX. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t improve(); Execute IMPROVE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t setPrintLevel(Int_t newLevel); Change the MINUIT internal printing level. void optimizeConst(Bool_t flag); If flag is true, perform constant term optimization on; function being minimized. RooFitResult* save(const char* name = 0, const char* title = 0); Save and return a RooFitResult snaphot of current minimizer status",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMinimizer.html:10079,error,errors,10079,root/html526/RooMinimizer.html,https://root.cern,https://root.cern/root/html526/RooMinimizer.html,3,['error'],['errors']
Availability,"; h - Run Hesse to estimate errors; v - Verbose mode; l - Log parameters after each Minuit steps to file; t - Activate profile timer; r - Save fit result; 0 - Run Migrad with strategy 0. Int_t minimize(const char* type, const char* alg = 0). Int_t migrad(); Execute MIGRAD. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t hesse(); Execute HESSE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(); Execute MINOS. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t minos(const RooArgSet& minosParamList); Execute MINOS for given list of parameters. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t seek(); Execute SEEK. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t simplex(); Execute SIMPLEX. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t improve(); Execute IMPROVE. Changes in parameter values; and calculated errors are automatically; propagated back the RooRealVars representing; the floating parameters in the MINUIT operation. Int_t setPrintLevel(Int_t newLevel); Change the MINUIT internal printing level. void optimizeConst(Int_t flag); If flag is true, perform constant term optimization on; function being minimized. RooFitResult* save(const char* name = 0, const char* title = 0); Save and return a RooFitResult snaphot of current minimizer status.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMinimizer.html:10233,error,errors,10233,root/html532/RooMinimizer.html,https://root.cern,https://root.cern/root/html532/RooMinimizer.html,4,['error'],['errors']
Availability,"; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MISC; » TABLE; » TTablePoints. class TTablePoints: public TPoints3DABC. Defines the TTable as an element of ""event"" geometry. +SEQ,TTablePoints.; +SEQ,T<your_table_name_here>. class T<your_table_name_here>_Points : public TTablePoints; {; public:; T<your_table_name_here>_Points(TTableSorter *sorter,const void *key,Option_t *opt):; TTablePoints(sorter,key,opt){}; virtual ~T<your_table_name_here>_Points(){} // default destructor; virtual Float_t GetX(Int_t indx) { return ((<your_table_name_here>_st *)fRows)[Indx(idx)]-> <x>;}; virtual Float_t GetY(Int_t indx) { return ((<your_table_name_here>_st *)fRows)[Indx(idx)]-> <y>;}; virtual Float_t GetZ(Int_t indx) { return ((<your_table_name_here>_st *)fRows)[Indx(idx)]-> <z>;}; };. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TTablePoints(); voidTObject::AbstractMethod(const char* method) const; virtual Int_tTPoints3DABC::Add(Float_t x, Float_t y, Float_t z); virtual Int_tTPoints3DABC::AddLast(Float_t x, Float_t y, Float_t z); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; static Int_tTPoints3DABC::DistancetoLine(Int_t px, Int_t py, Float_t x1, Float_t y1, Float_t x2, Float_t y2, Int_t lineWidth = 1); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTablePoints.html:1098,avail,available,1098,root/html528/TTablePoints.html,https://root.cern,https://root.cern/root/html528/TTablePoints.html,4,['avail'],['available']
Availability,"; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooBrentRootFinder. class RooBrentRootFinder: public RooAbsRootFinder. Implement the abstract 1-dimensional root finding interface using; the Brent-Decker method. This implementation is based on the one; in the GNU scientific library (v0.99).; . Function Members (Methods); public:. RooBrentRootFinder(const RooAbsFunc& function); RooBrentRootFinder(const RooBrentRootFinder&); virtual~RooBrentRootFinder(); static TClass*Class(); virtual Bool_tfindRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; virtual TClass*IsA() const; voidsetTol(Double_t tol); virtual voidShowMembers(TMemberInspector& insp); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; public:. enum { MaxIterations; };. protected:. const RooAbsFunc*RooAbsRootFinder::_functionPointer to input function; Double_t_tol; Bool_tRooAbsRootFinder::_validTrue if current state is valid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBrentRootFinder(const RooAbsFunc& function); Constructor taking function binding as input. Bool_t findRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; Do the root finding using the Brent-Decker method. Returns a boolean status and; loads 'result' with our best guess at the root if true.; Prints a warning if the initial interval does not bracket a single; root or if the root is not found after a fixed number of iterations. RooBrentRootFinder(const RooAbsFunc& function). virtual ~RooBrentRootFinder(); { }. void setTol(Double_t tol); Set convergence tolerance parameter. » Last changed: Thu Sep 23 19:58:35 2010 » Last generated: 2010-09-23 19:58; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooBrentRootFinder.html:1843,toler,tolerance,1843,root/html528/RooBrentRootFinder.html,https://root.cern,https://root.cern/root/html528/RooBrentRootFinder.html,1,['toler'],['tolerance']
Availability,"; i<ngr2; i++){; f2->GetRandom2(x,y);; // Generate a random number in [-e,e]; rnd = 2*gRandom->Rndm()*e-e;; z = f2->Eval(x,y)*(1+rnd);; gr2->SetPoint(i,x,y,z);; }; //Create a graph with errors to store the intervals; TGraph2DErrors *grint2 = new TGraph2DErrors(ngr2);; for (i=0; i<ngr2; i++); grint2->SetPoint(i, gr2->GetX()[i], gr2->GetY()[i], 0);; ; //Fit the graph; f2->SetParameters(0.5,1.5);; gr2->Fit(f2, ""Q"");; /*Compute the confidence intervals*/; (TVirtualFitter::GetFitter())->GetConfidenceIntervals(grint2);; //Now the ""grint2"" graph contains function values as z-coordinates; //and confidence intervals as their errors; //draw; myc->cd(3);; f2->SetNpx(30);; f2->SetNpy(30);; f2->SetFillColor(kBlue);; f2->Draw(""surf4"");; grint2->SetNpx(20);; grint2->SetNpy(20);; grint2->SetMarkerStyle(24);; grint2->SetMarkerSize(0.7);; grint2->SetMarkerColor(kRed);; grint2->SetLineColor(kRed);; grint2->Draw(""E0 same"");; grint2->SetTitle(""Fitted 2d function with .95 error bars"");; ; myc->cd();; ; }; ; ; ; ; f#define f(i)Definition RSha256.hxx:104; h#define h(i)Definition RSha256.hxx:106; e#define e(i)Definition RSha256.hxx:103; kRed@ kRedDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TCanvas.h; TF2.h; TGraph2DErrors.h; TGraphErrors.h; TH1.h; TRandom.h; gRandomR__EXTERN TRandom * gRandomDefinition TRandom.h:62; TVirtualFitter.h; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttMarker::SetMarkerColorvirtual void SetMarkerColor(Color_t mcolor=1)Set the marker color.Definition TAttMarker.h:38; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TAttMarker::SetMarkerSizevirtual void SetMarkerSize(Size_t msize=1)Set the marker siz",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ConfidenceIntervals_8C.html:3656,error,error,3656,doc/master/ConfidenceIntervals_8C.html,https://root.cern,https://root.cern/doc/master/ConfidenceIntervals_8C.html,1,['error'],['error']
Availability,"; intAt(ULong64_t linidx) const; int&At(ULong64_t linidx); virtual Double_tAtAsDouble(ULong64_t linidx) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Long64_tTNDArray::GetBin(const Int_t* idx) const; Long64_tTNDArray::GetCellSize(Int_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; Long64_tTNDArray::GetNbins() const; Int_tTNDArray::GetNdimensions() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TNDArrayT_int_.html:2246,error,error,2246,root/html534/TNDArrayT_int_.html,https://root.cern,https://root.cern/root/html534/TNDArrayT_int_.html,3,['error'],['error']
Availability,"; kEditDisable; kEditDisableEvents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth; kEditDisableBtnEnable; kEditDisableKeyEnable; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; TGVerticalFrame*fDataFrame; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; TEveGDoubleValuator*fEtaRng; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; TGNumberEntry*fFrameTransparency; TGedEditor*TGedFrame::fGedEditormanager of this frame; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveCaloViz*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; TEveGValuator*fMaxTowerH; TEveGValuator*fMaxValAbs; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::fModelClassclass corresponding to instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCaloVizEditor.html:17543,mask,mask,17543,root/html528/TEveCaloVizEditor.html,https://root.cern,https://root.cern/root/html528/TEveCaloVizEditor.html,4,['mask'],['mask']
Availability,"; kEditDisableEvents; kEditDisableGrab; kEditDisableLayout; kEditDisableResize; kEditDisableHeight; kEditDisableWidth; kEditDisableBtnEnable; kEditDisableKeyEnable; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Bool_tTGedFrame::fAvoidSignalflag for executing slots; Pixel_tTGFrame::fBackgroundframe background color; vector<TGCheckButton*>fBoolParameters; Int_tTGFrame::fBorderWidthframe border width; TGClient*TGObject::fClientConnection to display server; Int_tTGFrame::fDNDStateEDNDFlags; UInt_tTGWindow::fEditDisabledflags used for ""guibuilding""; UInt_tTGFrame::fEventMaskcurrenty active event mask; TList*TGedFrame::fExtraTabsaddtional tabs in ged editor; TGFrameElement*TGFrame::fFEpointer to frame element; vector<TGNumberEntry*>fFloatParameters; TGedEditor*TGedFrame::fGedEditormanager of this frame; UInt_tTGFrame::fHeightframe height; Handle_tTGObject::fIdX11/Win32 Window identifier; Bool_tTGedFrame::fInitinit flag for setting signals/slots; vector<TGNumberEntry*>fIntParameters; Bool_tTGCompositeFrame::fLayoutBrokenno layout manager is used; TGLayoutManager*TGCompositeFrame::fLayoutManagerlayout manager; TList*TGCompositeFrame::fListcontainer of frame elements; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; TEveParamList*fMModel object.; Bool_tTGCompositeFrame::fMapSubwindowskTRUE - map subwindows; UInt_tTGFrame::fMaxHeightmaximal frame height; UInt_tTGFrame::fMaxWidthmaximal frame width; UInt_tTGFrame::fMinHeightminimal frame height; UInt_tTGFrame::fMinWidthminimal frame width; TClass*TGedFrame::fModelClassclass corresponding to instantiated GedFrame; Int_tTGCompositeFrame::fMustCleanupcleanup mode (see EFrameCleanup); TStringTGWindow::fNamename of the window ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveParamListEditor.html:17880,mask,mask,17880,root/html528/TEveParamListEditor.html,https://root.cern,https://root.cern/root/html528/TEveParamListEditor.html,4,['mask'],['mask']
Availability,"; kRed@ kRedDefinition Rtypes.h:66; kGreen@ kGreenDefinition Rtypes.h:66; kBlue@ kBlueDefinition Rtypes.h:66; TCanvas.h; TF1.h; rOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TGraphErrors.h; TMath.h; TMultiGraph.h; TRandom.h; TAttLine::SetLineWidthvirtual void SetLineWidth(Width_t lwidth)Set the line width.Definition TAttLine.h:43; TAttLine::SetLineColorvirtual void SetLineColor(Color_t lcolor)Set the line color.Definition TAttLine.h:40; TAttMarker::SetMarkerStylevirtual void SetMarkerStyle(Style_t mstyle=1)Set the marker style.Definition TAttMarker.h:40; TAttMarker::SetMarkerSizevirtual void SetMarkerSize(Size_t msize=1)Set the marker size.Definition TAttMarker.h:45; TCanvasThe Canvas class.Definition TCanvas.h:23; TF11-Dim function classDefinition TF1.h:233; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraph::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Axis_t xmin=0, Axis_t xmax=0)Fit this graph with function with name fname.Definition TGraph.cxx:1254; TMultiGraphA TMultiGraph is a collection of TGraph (or derived) objects.Definition TMultiGraph.h:34; TMultiGraph::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Axis_t xmin=0, Axis_t xmax=0)Fit this graph with function with name fname.Definition TMultiGraph.cxx:526; TMultiGraph::Addvirtual void Add(TGraph *graph, Option_t *chopt="""")Add a new graph to the list of graphs.Definition TMultiGraph.cxx:419; TMultiGraph::GetFunctionTF1 * GetFunction(const char *name) constReturn pointer to function with name.Definition TMultiGraph.cxx:1086; TMultiGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this multigraph with its current attributes.Definition TMultiGraph.cxx:508; TPad::SetGridvo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fitMultiGraph_8C.html:5164,error,error,5164,doc/master/fitMultiGraph_8C.html,https://root.cern,https://root.cern/doc/master/fitMultiGraph_8C.html,1,['error'],['error']
Availability,"; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TList*fLinescollection of lines; TStringTNamed::fNameobject identifier; TStringfParamsdefault string of macro parameters; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMacro(); Create an empty macro, use AddLine() or ReadFile() to fill this macro. TMacro(const char* name, const char* title = """"); Create a macro with a name and a title.; If name contains a '.' it is assumed to be the name of a file, and; * the macro is automatically filled by reading all the lines in the file,; * if the title is empty, it will be set to the name of the file,; * the name will be set to the filename without path or extension. TMacro(const TMacro& ); Copy constructor. ~TMacro(); Delete this macro. TMacro& operator=(const TMacro& ); Copy constructor. TObjString * AddLine(const char* text); Add line with text in the list of lines of this macro. Returns 0 in; case of error, otherwise the added TObjString. void Browse(TBrowser* b); When clicking in the browser, the following action is performed; on this macro, depending the content of the variable TMacro.Browse.; TMacro.Browse can be set in the system.rootrc or .rootrc file like; TMacro.Browse : Action; or set via gEnv->SetValue, eg; gEnv->SetValue(""TMacro.Browse"",""Print"");; By default TMacro.Browse=""""; -if TMacro.Browse ="""" the macro is executed; -if TMacro.Browse =""Print"" the macro is printed in stdout; -if TMacro.Browse is of the form ""mymacro.C""; the macro void mymacro.C(TMacro *m) is called where m=this macro; An example of macro.C saving the macro into a file and viewing it; with emacs is shown below:; void mymacro(TMacro *m) {; m->SaveSource(""xx.log"");; gSystem->Exec(""emacs xx.log&"");; }. TMD5 * Checksum(); Returns checksum of the current content. The returned TMD5 object must; be deleted by the user. Returns 0 in case of error. Long_t Exec(const char* params = 0, Int_t* error = 0); Execute this macr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TMacro.html:7716,error,error,7716,root/html534/TMacro.html,https://root.cern,https://root.cern/root/html534/TMacro.html,1,['error'],['error']
Availability,"; kTopLeft@ kTopLeftDefinition GuiTypes.h:372; kBottomRight@ kBottomRightDefinition GuiTypes.h:372; kArrowVer@ kArrowVerDefinition GuiTypes.h:374; kCaret@ kCaretDefinition GuiTypes.h:375; kTopSide@ kTopSideDefinition GuiTypes.h:373; kLeftSide@ kLeftSideDefinition GuiTypes.h:373; kWatch@ kWatchDefinition GuiTypes.h:375; kMove@ kMoveDefinition GuiTypes.h:374; kTopRight@ kTopRightDefinition GuiTypes.h:372; kBottomLeft@ kBottomLeftDefinition GuiTypes.h:372; kHand@ kHandDefinition GuiTypes.h:374; kCross@ kCrossDefinition GuiTypes.h:374; kRotate@ kRotateDefinition GuiTypes.h:374; kArrowHor@ kArrowHorDefinition GuiTypes.h:374; kPointer@ kPointerDefinition GuiTypes.h:375. Reimplemented from TVirtualX.; Definition at line 3107 of file TGCocoa.mm. ◆ CreateGC(). GContext_t TGCocoa::CreateGC ; (; Drawable_t ; id, . GCValues_t * ; gval . ). overridevirtual . Creates a graphics context using the provided GCValues_t *gval structure. ; The mask data member of gval specifies which components in the GC are to be set using the information in the specified values structure. It returns a graphics context handle GContext_t that can be used with any destination drawable or O if the creation falls. ; Reimplemented from TVirtualX.; Definition at line 2987 of file TGCocoa.mm. ◆ CreateImage(). Drawable_t TGCocoa::CreateImage ; (; UInt_t ; width, . UInt_t ; height . ). overridevirtual . Allocates the memory needed for an drawable. ; Parameters. [in]widththe width of the image, in pixels ; [in]heightthe height of the image, in pixels . Reimplemented from TVirtualX.; Definition at line 2579 of file TGCocoa.mm. ◆ CreateOpenGLContext() [1/2]. void TGCocoa::CreateOpenGLContext ; (; Int_t ; wid). overridevirtual . Creates OpenGL context for window ""wid"". ; Reimplemented from TVirtualX.; Definition at line 3304 of file TGCocoa.mm. ◆ CreateOpenGLContext() [2/2]. Handle_t TGCocoa::CreateOpenGLContext ; (; Window_t ; windowID, . Handle_t ; sharedContext . ). overridevirtual . Creates OpenGL context for w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:63934,mask,mask,63934,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,1,['mask'],['mask']
Availability,"; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. char*fBuffer[fBufferSize] buffer of contiguous prefetched blocks; Int_tfBufferSizeAllocated size of fBuffer; TFile*fFilePointer to file; Int_tfNtotTotal size of cached blocks; Bool_tfRecursiveflag to avoid recursive calls; Long64_tfSeekStartSeek value of first block in cache. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileCacheWrite(); Default Constructor. TFileCacheWrite(TFile* file, Int_t buffersize); Creates a TFileCacheWrite data structure.; The write cache will be connected to file.; The size of the cache will be buffersize,; if buffersize < 10000 a default size of 512 Kbytes is used. ~TFileCacheWrite(); Destructor. Bool_t Flush(); Flush the current write buffer to the file.; Returns kTRUE in case of error. void Print(Option_t* option = """") const; Print class internal structure. Int_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Called by the read cache to check if the requested data is not; in the write cache buffer.; Returns -1 if data not in write cache,; 0 otherwise. Int_t WriteBuffer(const char* buf, Long64_t pos, Int_t len); Write buffer at position pos in the write buffer.; The function returns 1 if the buffer has been successfully entered into the write buffer.; The function returns 0 in case WriteBuffer() was recusively called via Flush().; The function returns -1 in case of error. void SetFile(TFile* file); Set the file using this cache.; Any write not yet flushed will be lost. TFileCacheWrite(const TFileCacheWrite& ). TFileCacheWrite& operator=(const TFileCacheWrite& ). Int_t GetBytesInCache() const; { return fNtot; }. » Author: Rene Brun 19/05/2006 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/io:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileCacheWrite.html:7298,error,error,7298,root/html534/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html534/TFileCacheWrite.html,1,['error'],['error']
Availability,"; kept, but only bins inside the selected range; will be filled. TH2D* Projection(Int_t yDim, Int_t xDim, Option_t* option = """") const; Project all bins into a 2-dimensional histogram,; keeping only axes ""xDim"" and ""yDim"". WARNING: just like TH3::Project3D(""yx"") and TTree::Draw(""y:x""),; Projection(y,x) uses the first argument to define the y-axis and the; second for the x-axis!. If ""option"" contains ""E"" errors will be calculated.; ""A"" ranges of the taget axes will be ignored. TH3D* Projection(Int_t xDim, Int_t yDim, Int_t zDim, Option_t* option = """") const; Project all bins into a 3-dimensional histogram,; keeping only axes ""xDim"", ""yDim"", and ""zDim"".; If ""option"" contains ""E"" errors will be calculated.; ""A"" ranges of the taget axes will be ignored.; ""O"" original axis range of the taget axes will be; kept, but only bins inside the selected range; will be filled. THnSparse* Projection(Int_t ndim, const Int_t* dim, Option_t* option = """") const; Project all bins into a ndim-dimensional THnSparse histogram,; keeping only axes in dim (specifying ndim dimensions); If ""option"" contains ""E"" errors will be calculated.; ""A"" ranges of the taget axes will be ignored.; ""O"" original axis range of the taget axes will be; kept, but only bins inside the selected range; will be filled. TObject* ProjectionAny(Int_t ndim, const Int_t* dim, Bool_t wantSparse, Option_t* option = """") const; Project all bins into a ndim-dimensional THnSparse histogram,; keeping only axes in dim (specifying ndim dimensions); If ""option"" contains ""E"" errors will be calculated.; ""A"" ranges of the taget axes will be ignored.; ""O"" original axis range of the taget axes will be; kept, but only bins inside the selected range; will be filled. void Scale(Double_t c); Scale contents and errors of this histogram by c:; this = this * c; It does not modify the histogram's number of entries. void AddInternal(const THnSparse* h, Double_t c, Bool_t rebinned); Add() implementation for both rebinned histograms and those with",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THnSparse.html:20264,error,errors,20264,root/html528/THnSparse.html,https://root.cern,https://root.cern/root/html528/THnSparse.html,3,['error'],['errors']
Availability,"; low = 0, . Int_t ; high = -1111 . ). virtual . Sorts the points of this TGraph using in-place quicksort (see e.g. ; older glibc). To compare two points the function parameter greaterfunc is used (see TGraph::CompareX for an example of such a method, which is also the default comparison function for Sort). After the sort, greaterfunc(this, i, j) will return kTRUE for all i>j if ascending == kTRUE, and kFALSE otherwise.; The last two parameters are used for the recursive quick sort, stating the range to be sorted; Examples: // sort points along x axis; graph->Sort();; // sort points along their distance to origin; graph->Sort(&TGraph::CompareRadius);; ; Bool_t CompareErrors(const TGraph* gr, Int_t i, Int_t j) {; const TGraphErrors* ge=(const TGraphErrors*)gr;; return (ge->GetEY()[i]>ge->GetEY()[j]); }; // sort using the above comparison function, largest errors first; graph->Sort(&CompareErrors, kFALSE);; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraphErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraphErrors.h:70; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definition TGraph.h:41; TGraph::CompareRadiusstatic Bool_t CompareRadius(const TGraph *gr, Int_t left, Int_t right)Return kTRUE if point number ""left""'s distance to origin is bigger than that of point number ""right"".Definition TGraph.cxx:722; bool; int; grTGraphErrors * grDefinition legend1.C:25; graphDefinition graph.py:1. Definition at line 2486 of file TGraph.cxx. ◆ Streamer(). void TGraph::Streamer ; (; TBuffer & ; b). overridevirtual . Stream an object of class TGraph. ; Reimplemented from TObject.; Reimplemented in TGraphPolar, TGraphQQ, TGraphAsymmErrors, TGraphBentErrors, TGraphErrors, and TGraphMultiErrors.; Definition at line 2516 of file TGraph.cxx. ◆ StreamerNVirtual(). void TGraph::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph.html:74069,error,error,74069,doc/master/classTGraph.html,https://root.cern,https://root.cern/doc/master/classTGraph.html,1,['error'],['error']
Availability,"; lowest point will go exactly through zero. void addPoints(const RooAbsFunc& func, Double_t xlo, Double_t xhi, Int_t minPoints, Double_t prec, Double_t resolution, RooCurve::WingMode wmode, Int_t numee = 0, Bool_t doEEVal = kFALSE, Double_t eeVal = 0., list<Double_t>* samplingHint = 0); Add points calculated with the specified function, over the range (xlo,xhi).; Add at least minPoints equally spaced points, and add sufficient points so that; the maximum deviation from the final straight-line segements is prec*(ymax-ymin),; down to a minimum horizontal spacing of resolution*(xhi-xlo). void addRange(const RooAbsFunc& func, Double_t x1, Double_t x2, Double_t y1, Double_t y2, Double_t minDy, Double_t minDx, Int_t numee = 0, Bool_t doEEVal = kFALSE, Double_t eeVal = 0.); Fill the range (x1,x2) with points calculated using func(&x). No point will; be added at x1, and a point will always be added at x2. The density of points; will be calculated so that the maximum deviation from a straight line; approximation is prec*(ymax-ymin) down to the specified minimum horizontal spacing. void addPoint(Double_t x, Double_t y); Add a point with the specified coordinates. Update our y-axis limits. Double_t getFitRangeNEvt() const; Return the number of events associated with the plotable object,; it is always 1 for curves. Double_t getFitRangeNEvt(Double_t xlo, Double_t xhi) const; Return the number of events associated with the plotable object,; in the given range. It is always 1 for curves. Double_t getFitRangeBinW() const; Get the bin width associated with this plotable object.; It is alwats zero for curves. void printName(ostream& os) const. Print the name of this curve. void printTitle(ostream& os) const; Print the title of this curve. void printClassName(ostream& os) const; Print the class name of this curve. void printMultiline(ostream& os, Int_t contents, Bool_t verbose = kFALSE, TString indent = """") const; Print the details of this curve. Double_t chiSquare(const RooHist& his",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooCurve.html:20517,down,down,20517,root/html526/RooCurve.html,https://root.cern,https://root.cern/root/html526/RooCurve.html,7,['down'],['down']
Availability,"; m.migrad(); m.hesse(); frac.Print(); ; c = ROOT.TCanvas(""rf601_intminuit"", ""rf601_intminuit"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf601_intminuit.png""); Printvoid Print(GNN_Data &d, std::string txt="""")Definition TMVA_SOFIE_GNN_Application.C:59; [#0] WARNING:InputArguments -- The parameter 'sigma_g1' with range [-inf, inf] of the RooGaussian 'g1' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for frac: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for sigma_g2: using 0.3; Minuit2Minimizer: Minimize with max-calls 1000 convergence for edm < 1 strategy 1; ; prevFCN = 2660.220684 frac=0.5036, ; prevFCN = 2660.181264 frac=0.4964, ; prevFCN = 2660.261875 frac=0.5, sigma_g2=4.011, ; prevFCN = 2660.278974 sigma_g2=3.989, ; prevFCN = 2660.167705 sigma_g2=4.005, ; prevFCN = 2660.248509 sigma_g2=3.995, ; prevFCN = 2660.194127 frac=0.5812, sigma_g2=3.889, ; prevFCN = 2660.146969 frac=0.5429, sigma_g2=3.941, ; prevFCN = 2659.83839 frac=0.5459, ; prevFCN = 2659.836693 frac=0.5398, ; prevFCN = 2659.841351 frac=0.5429, sigma_g2=3.946, ; prevFCN = 2659.835035 sigma_g2=3.936, ; prevFCN = 2659.842919 frac=0.5497, sigma_g2=3.955, ; prevFCN = 2659.823248 frac=0.5767, sigma_g2=4.011, ; prevFCN = 2659.774616 frac=0.6314, sigma_g2=4.128, ; prevFCN = 2659.73914 frac=0.6266, sigma_g2=4.117, ; prevFCN = 2659.738319 frac=0.6296, ; prevFCN = 2659.740343 frac=0.6237, ; prevFCN = 2659.737969 frac=0.6266, sigma_g2=4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf601__intminuit_8py.html:3991,error,error,3991,doc/master/rf601__intminuit_8py.html,https://root.cern,https://root.cern/doc/master/rf601__intminuit_8py.html,2,"['avail', 'error']","['available', 'error']"
Availability,"; mTMarker mDefinition textangle.C:8; ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(argus_over_argus_Int[m]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_argus_over_argus_Int[m]_argusData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; Minuit2Minimizer: Minimize with max-calls 1000 convergence for edm < 1 strategy 1; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-2417.08) to force MIGRAD to back out of this region. Error log follows.; Parameter values: k=-33.8075 m0=5.29014; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ]; getLogVal() top-level p.d.f not greater than zero @ numerator=argus=0.387202, denominator=argus_Int[m]=0.0305662; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-2417.08) to force MIGRAD to back out of this region. Error log follows.; Parameter values: k=-36.7074 m0=5.2901; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ]; getLogVal() top-level p.d.f not greater than zero @ numerator=argus=0.370612, denominator=argus_Int[m]=0.0290505; ; Minuit2Minimizer : Valid minimum - status = 0; FVAL = -2419.30692128725559; Edm = 2.90497786168460102e-06; Nfcn = 47; k = -35.3713 +/- 3.51942 (limited); m0 = 5.2904 +/- 0.000261877 (limited); [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Fitting -- RooAbsPdf::fitTo(argus_over_argus_Int[m]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_argus_over_argus_Int[m]_argusData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:6764,error,error,6764,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,1,['error'],['error']
Availability,"; maxValue, . const char * ; unit = """" . ). Create a variable with the given starting value. ; It is allowed to float within the defined range. Optionally, a unit can be specified for axis labels. ; Definition at line 171 of file RooRealVar.cxx. ◆ RooRealVar() [5/5]. RooRealVar::RooRealVar ; (; const RooRealVar & ; other, . const char * ; name = nullptr . ). Copy Constructor. ; Definition at line 191 of file RooRealVar.cxx. ◆ ~RooRealVar(). RooRealVar::~RooRealVar ; (; ). override . Destructor. ; Definition at line 218 of file RooRealVar.cxx. Member Function Documentation. ◆ _nullProp(). RooRealVarSharedProperties & RooRealVar::_nullProp ; (; ). staticprotected . Null property. ; Return a dummy object to use when properties are not initialised. ; Definition at line 102 of file RooRealVar.cxx. ◆ attachToTree(). void RooRealVar::attachToTree ; (; TTree & ; t, . Int_t ; bufSize = 32000 . ). overrideprotectedvirtual . Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ; Reimplemented from RooAbsReal.; Definition at line 1102 of file RooRealVar.cxx. ◆ attachToVStore(). void RooRealVar::attachToVStore ; (; RooVectorDataStore & ; vstore). overrideprotectedvirtual . Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ; Reimplemented from RooAbsReal.; Definition at line 1069 of file RooRealVar.cxx. ◆ chopAt(). double RooRealVar::chopAt ; (; double ; what, . Int_t ; where . ); const. protected . Utility to calculate number of decimals to show based on magnitude of error. ; Definition at line 1055 of file RooRealVar.cxx. ◆ Class(). static TClass * RooRealVar::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooRealVar::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooRealVar::Class_Version",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:75268,error,errors,75268,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,2,['error'],['errors']
Availability,"; min_abbr_len = 0, . bool ; single_minus_longopt = false, . int ; bufmax = -1 . ). inline . Parser(...) with non-const argv. ; Definition at line 1089 of file OptionParser.h. ◆ Parser() [4/5]. ROOT::option::Parser::Parser ; (; const Descriptor ; usage[], . int ; argc, . const char ** ; argv, . Option ; options[], . Option ; buffer[], . int ; min_abbr_len = 0, . bool ; single_minus_longopt = false, . int ; bufmax = -1 . ). inline . POSIX Parser(...) (gnu==false). ; Definition at line 1097 of file OptionParser.h. ◆ Parser() [5/5]. ROOT::option::Parser::Parser ; (; const Descriptor ; usage[], . int ; argc, . char ** ; argv, . Option ; options[], . Option ; buffer[], . int ; min_abbr_len = 0, . bool ; single_minus_longopt = false, . int ; bufmax = -1 . ). inline . POSIX Parser(...) (gnu==false) with non-const argv. ; Definition at line 1105 of file OptionParser.h. Member Function Documentation. ◆ error(). bool ROOT::option::Parser::error ; (; ). inline . Returns true if an unrecoverable error occurred while parsing options. ; An illegal argument to an option (i.e. CheckArg returns ARG_ILLEGAL) is an unrecoverable error that aborts the parse. Unknown options are only an error if their CheckArg function returns ARG_ILLEGAL. Otherwise they are collected. In that case if you want to exit the program if either an illegal argument or an unknown option has been passed, use code like this; if (parser.error() || options[UNKNOWN]); exit(1);. Definition at line 1264 of file OptionParser.h. ◆ instr(). static bool ROOT::option::Parser::instr ; (; char ; ch, . const char * ; st . ). inlinestaticprivate . Definition at line 1346 of file OptionParser.h. ◆ nonOption(). const char * ROOT::option::Parser::nonOption ; (; int ; i). inline . Returns nonOptions()[i] (without checking if i is in range!). ; Definition at line 1244 of file OptionParser.h. ◆ nonOptions(). const char ** ROOT::option::Parser::nonOptions ; (; ). inline . Returns a pointer to an array of non-option arguments (only va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1option_1_1Parser.html:9937,error,error,9937,doc/v632/classROOT_1_1option_1_1Parser.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1option_1_1Parser.html,2,['error'],['error']
Availability,"; n, . Int_t ; ndim, . const Double_t * ; x, . Double_t * ; ci, . Double_t ; cl = 0.95 . ). overridevirtual . Computes point-by-point confidence intervals for the fitted function. ; Parameters:; n - number of points; ndim - dimensions of points; x - points, at which to compute the intervals, for ndim > 1 should be in order: (x0,y0, x1, y1, ... xn, yn); ci - computed intervals are returned in this array; cl - confidence level, default=0.95. NOTE, that the intervals are approximate for nonlinear(in parameters) models ; Reimplemented from TVirtualFitter.; Definition at line 119 of file TFitter.cxx. ◆ GetConfidenceIntervals() [2/2]. void TFitter::GetConfidenceIntervals ; (; TObject * ; obj, . Double_t ; cl = 0.95 . ). overridevirtual . Computes confidence intervals at level cl. ; Default is 0.95; The TObject parameter can be a TGraphErrors, a TGraph2DErrors or a TH1,2,3. For Graphs, confidence intervals are computed for each point, the value of the graph at that point is set to the function value at that point, and the graph y-errors (or z-errors) are set to the value of the confidence interval at that point. For Histograms, confidence intervals are computed for each bin center The bin content of this bin is then set to the function value at the bin center, and the bin error is set to the confidence interval value. NOTE: confidence intervals are approximate for nonlinear models!; Allowed combinations:. Fitted object Passed object; TGraph TGraphErrors, TH1; TGraphErrors, AsymmErrors TGraphErrors, TH1; TH1 TGraphErrors, TH1; TGraph2D TGraph2DErrors, TH2; TGraph2DErrors TGraph2DErrors, TH2; TH2 TGraph2DErrors, TH2; TH3 TH3 . Reimplemented from TVirtualFitter.; Definition at line 229 of file TFitter.cxx. ◆ GetCovarianceMatrix(). Double_t * TFitter::GetCovarianceMatrix ; (; ); const. overridevirtual . return a pointer to the covariance matrix ; Implements TVirtualFitter.; Definition at line 379 of file TFitter.cxx. ◆ GetCovarianceMatrixElement(). Double_t TFitter::GetCovarian",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitter.html:21783,error,errors,21783,doc/master/classTFitter.html,https://root.cern,https://root.cern/doc/master/classTFitter.html,2,['error'],['errors']
Availability,"; obj, . TClass * ; cl, . const char * ; method, . const char * ; params, . Bool_t ; objectIsConst, . int * ; error = nullptr . ). Execute a method from class cl with arguments params. ; FIXME: The cint-based version of this code does not check if the SetFunc() call works, and does not do any real checking for errors from the Exec() call. It did fetch the most recent cint security error and return that in error, but this does not really translate well to cling/clang. We should enhance these interfaces so that we can report compilation and runtime errors properly. ; Definition at line 5257 of file TCling.cxx. ◆ Execute() [4/5]. void TCling::Execute ; (; TObject * ; obj, . TClass * ; cl, . const char * ; method, . const char * ; params, . int * ; error = nullptr . ). finalvirtual . Implements TInterpreter.; Definition at line 5277 of file TCling.cxx. ◆ Execute() [5/5]. void TCling::Execute ; (; TObject * ; obj, . TClass * ; cl, . TMethod * ; method, . TObjArray * ; params, . int * ; error = nullptr . ). finalvirtual . Execute a method from class cl with the arguments in array params (params[0] ... params[n] = array of TObjString parameters). ; Convert the TObjArray array of TObjString parameters to a character string of comma separated parameters. The parameters of type 'char' are enclosed in double quotes and all internal quotes are escaped. ; Implements TInterpreter.; Definition at line 5291 of file TCling.cxx. ◆ ExecuteMacro(). Longptr_t TCling::ExecuteMacro ; (; const char * ; filename, . EErrorCode * ; error = nullptr . ). finalvirtual . Execute a cling macro. ; Implements TInterpreter.; Definition at line 5403 of file TCling.cxx. ◆ ExecuteWithArgsAndReturn(). void TCling::ExecuteWithArgsAndReturn ; (; TMethod * ; method, . void * ; address, . const void * ; args[] = nullptr, . int ; nargs = 0, . void * ; ret = nullptr . ); const. finalvirtual . Implements TInterpreter.; Definition at line 5385 of file TCling.cxx. ◆ FindSym(). void * TCling::FindSym ; (; const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:85902,error,error,85902,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['error'],['error']
Availability,"; opt, . int * ; val . ). overridevirtual . Get socket option. ; Reimplemented from TSystem.; Definition at line 5113 of file TWinNTSystem.cxx. ◆ GetSysInfo(). Int_t TWinNTSystem::GetSysInfo ; (; SysInfo_t * ; info); const. overridevirtual . Returns static system info, like OS type, CPU type, number of CPUs RAM size, etc into the SysInfo_t structure. ; Returns -1 in case of error, 0 otherwise. ; Reimplemented from TSystem.; Definition at line 6121 of file TWinNTSystem.cxx. ◆ GetUid(). Int_t TWinNTSystem::GetUid ; (; const char * ; user = nullptr). overridevirtual . Returns the user's id. If user = 0, returns current user's id. ; Reimplemented from TSystem.; Definition at line 3575 of file TWinNTSystem.cxx. ◆ GetUserInfo() [1/2]. UserGroup_t * TWinNTSystem::GetUserInfo ; (; const char * ; user = nullptr). overridevirtual . Returns all user info in the UserGroup_t structure. ; If user = 0, returns current user's id info. The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented from TSystem.; Definition at line 3774 of file TWinNTSystem.cxx. ◆ GetUserInfo() [2/2]. UserGroup_t * TWinNTSystem::GetUserInfo ; (; Int_t ; uid). overridevirtual . Returns all user info in the UserGroup_t structure. ; The returned structure must be deleted by the user. In case of error 0 is returned. ; Reimplemented from TSystem.; Definition at line 3712 of file TWinNTSystem.cxx. ◆ GetVolumes(). TList * TWinNTSystem::GetVolumes ; (; Option_t * ; opt = """"); const. overridevirtual . Get list of volumes (drives) mounted on the system. ; The returned TList must be deleted by the user using ""delete"". ; Reimplemented from TSystem.; Definition at line 2322 of file TWinNTSystem.cxx. ◆ GetWorkingDirectory() [1/2]. std::string TWinNTSystem::GetWorkingDirectory ; (; ); const. overridevirtual . Return the working directory for the default drive. ; Reimplemented from TSystem.; Definition at line 2149 of file TWinNTSystem.cxx. ◆ GetWorkingDirectory() [2/2]. char * T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:57944,error,error,57944,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['error'],['error']
Availability,"; option = """" . ). overridevirtual . Set the buffer size in units of 8 bytes (double). ; Reimplemented from TH1.; Definition at line 1738 of file TProfile.cxx. ◆ SetErrorOption(). void TProfile::SetErrorOption ; (; Option_t * ; option = """"). virtual . Set option to compute profile errors. ; The computation of the bin errors is based on the parameter option:; -' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (Y), i.e. the standard error of the bin contents. Note that if TProfile::Approximate() is called, an approximation is used when the spread in Y is 0 and the number of bin entries is > 0 -'s' The bin errors are the standard deviations of the Y bin values Note that if TProfile::Approximate() is called, an approximation is used when the spread in Y is 0 and the number of bin entries is > 0 -'i' Errors are as in default case (standard errors of the bin contents) The only difference is for the case when the spread in Y is zero. In this case for N > 0 the error is 1./SQRT(12.*N) -'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0. W is the sum in the bin of the weights of the profile. This option is for combining measurements y +/- dy, and the profile is filled with values y and weights w = 1/dy**2; See TProfile::BuildOptions for a detailed explanation of all options ; Definition at line 1777 of file TProfile.cxx. ◆ Streamer(). void TProfile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TProfile. ; Reimplemented from TH1D.; Definition at line 1785 of file TProfile.cxx. ◆ StreamerNVirtual(). void TProfile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 138 of file TProfile.h. ◆ Sumw2(). void TProfile::Sumw2 ; (; Bool_t ; flag = kTRUE). overridevirtual . Create/delete structure to store sum of squares of weights per bin. ; This is needed to compute the correct statistical quantities of a profile filled with weights; This function is automatica",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:88772,error,error,88772,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['error'],['error']
Availability,"; otherwise an error number will be returned. Int_t SetCancelOn(); Static method to turn on thread cancellation. Returns 0 on success,; otherwise an error number will be returned. Int_t SetCancelAsynchronous(); Static method to set the cancellation response type of the calling thread; to asynchronous, i.e. cancel as soon as the cancellation request; is received. Int_t SetCancelDeferred(); Static method to set the cancellation response type of the calling thread; to deferred, i.e. cancel only at next cancellation point.; Returns 0 on success, otherwise an error number will be returned. Int_t CancelPoint(); Static method to set a cancellation point. Returns 0 on success, otherwise; an error number will be returned. Int_t CleanUpPush(void* free, void* arg = 0); Static method which pushes thread cleanup method on stack.; Returns 0 in case of success and -1 in case of error. Int_t CleanUpPop(Int_t exe = 0); Static method which pops thread cleanup method off stack.; Returns 0 in case of success and -1 in case of error. Int_t CleanUp(); Static method to cleanup the calling thread. void AfterCancel(TThread* th); Static method which is called after the thread has been canceled. Int_t Exit(void* ret = 0); Static method which terminates the execution of the calling thread. Int_t Sleep(ULong_t secs, ULong_t nanos = 0); Static method to sleep the calling thread. Int_t GetTime(ULong_t* absSec, ULong_t* absNanoSec); Static method to get the current time. Returns; the number of seconds. Int_t Lock(); Static method to lock the main thread mutex. Int_t TryLock(); Static method to try to lock the main thread mutex. Int_t UnLock(); Static method to unlock the main thread mutex. void * Function(void* ptr); Static method which is called by the system thread function and; which in turn calls the actual user function. void Ps(); Static method listing the existing threads. void ** Tsd(void* dflt, Int_t k); Static method returning a pointer to thread specific data container; of the calling th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TThread.html:13027,error,error,13027,root/html530/TThread.html,https://root.cern,https://root.cern/root/html530/TThread.html,5,['error'],['error']
Availability,"; print Chisquare/Number of degrees of freedom; 4187/// p = 1; print Probability; 4188///; 4189/// For example: gStyle->SetOptFit(1011);; 4190/// prints the fit probability, parameter names/values, and errors.; 4191/// You can change the position of the statistics box with these lines; 4192/// (where g is a pointer to the TGraph):; 4193///; 4194/// TPaveStats *st = (TPaveStats*)g->GetListOfFunctions()->FindObject(""stats"");; 4195/// st->SetX1NDC(newx1); //new x start position; 4196/// st->SetX2NDC(newx2); //new x end position; 4197///; 4198/// \anchor HFitExtra; 4199/// ### Additional Notes on Fitting; 4200///; 4201/// #### Fitting a histogram of dimension N with a function of dimension N-1; 4202///; 4203/// It is possible to fit a TH2 with a TF1 or a TH3 with a TF2.; 4204/// In this case the chi-square is computed from the squared error distance between the function values and the bin centers weighted by the bin content.; 4205/// For correct error scaling, the obtained parameter error are corrected as in the case when the; 4206/// option ""W"" is used.; 4207///; 4208/// #### User defined objective functions; 4209///; 4210/// By default when fitting a chi square function is used for fitting. When option ""L"" is used; 4211/// a Poisson likelihood function is used. Using option ""MULTI"" a multinomial likelihood fit is used.; 4212/// Thes functions are defined in the header Fit/Chi2Func.h or Fit/PoissonLikelihoodFCN and they; 4213/// are implemented using the routines FitUtil::EvaluateChi2 or FitUtil::EvaluatePoissonLogL in; 4214/// the file math/mathcore/src/FitUtil.cxx.; 4215/// It is possible to specify a user defined fitting function, using option ""U"" and; 4216/// calling the following functions:; 4217///; 4218/// ~~~ {.cpp}; 4219/// TVirtualFitter::Fitter(myhist)->SetFCN(MyFittingFunction);; 4220/// ~~~; 4221///; 4222/// where MyFittingFunction is of type:; 4223///; 4224/// ~~~ {.cpp}; 4225/// extern void MyFittingFunction(Int_t &npar, Double_t *gin, Double_t &f, Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:173295,error,error,173295,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['error'],['error']
Availability,"; print errors (if e=1, v must be 1); 670 v = 1; print name/values of parameters; 671 ; 672Example:; 673 ; 674 gStyle->SetOptFit(1011);; 675 ; 676print fit probability, parameter names/values and errors.; 677 ; 6781. When `v = 1` is specified, only the non-fixed parameters are shown.; 6792. When `v = 2` all parameters are shown.; 680 ; 681Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; 682to `gStyle->SetOptFit(111)`; 683 ; 684 ; 685\anchor HP09; 686### The error bars options; 687 ; 688 ; 689| Option | Description |; 690|----------|-------------------------------------------------------------------|; 691| ""E"" | Default. Shows only the error bars, not a marker.|; 692| ""E1"" | Small lines are drawn at the end of the error bars.|; 693| ""E2"" | Error rectangles are drawn.|; 694| ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; 695| ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; 696| ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; 697| ""E5"" | Like E3 but ignore the bins with 0 contents.|; 698| ""E6"" | Like E4 but ignore the bins with 0 contents.|; 699| ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; 700 ; 701Begin_Macro(source); 702{; 703 auto c1 = new TCanvas(""c1"",""c1"",600,400);; 704 auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; 705 for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; 706 gStyle->SetEndErrorSize(3);; 707 gStyle->SetErrorX(1.);; 708 he->SetMarkerStyle(20);; 709 he->Draw(""E1"");; 710}; 711End_Macro; 712 ; 713The options ""E3"" and ""E4"" draw an error band through the end points of the; 714vertical error bars. With ""E4"" the error band is smoothed. Because of the; 715smoothing algorithm used some artefacts may appear at the end of the band; 716like in the following example. In ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:30714,error,error,30714,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['error'],['error']
Availability,"; print(elem). Definition at line 31 of file TArray.h. Public Member Functions;  TArray ();  ;  TArray (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; virtual Double_t GetAt (Int_t i) const =0;  ; Int_t GetSize () const;  ; virtual TClass * IsA () const;  ; TArray & operator= (const TArray &rhs);  ; virtual void Set (Int_t n)=0;  ; virtual void SetAt (Double_t v, Int_t i)=0;  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Int_t fN;  . Protected Member Functions; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . Friends; TBuffer & operator<< (TBuffer &b, const TArray *obj);  Write TArray or derived object to buffer. ;  . #include <TArray.h>. Inheritance diagram for TArray:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArray() [1/3]. TArray::TArray ; (; ). inline . Definition at line 40 of file TArray.h. ◆ TArray() [2/3]. TArray::TArray ; (; Int_t ; n). inline . Definition at line 41 of file TArray.h. ◆ TArray() [3/3]. TArray::TArray ; (; const TArray & ; a). inline . Definition at line 42 of file TArray.h. ◆ ~TArray(). virtual TArray::~TArray ; (; ). inlinevirtual . Definition at line 45 of file TArray.h. Member Function Documentation. ◆ BoundsOk(). Bool_t TArray::BoundsOk ; (; const char * ; where, . Int_t ; at . ); const. inlineprotected . Definition at line 77 of file TArray.h. ◆ Cla",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArray.html:2883,error,error,2883,doc/master/classTArray.html,https://root.cern,https://root.cern/doc/master/classTArray.html,1,['error'],['error']
Availability,"; produces a TProfile2D histogram named ""myhist_pxy"".; The following sequence; h->Project3DProfile(""xy"");; h->Project3DProfile(""xy2"");; will generate two TProfile2D histograms named ""myhist_pxy"" and ""myhist_pxy2"". NOTE 2: If a profile of the same type already exists with compatible axes,; the profile is reset and filled again with the projected contents of the TH3.; In the case of axes incompatibility, an error is reported and a NULL pointer is returned. NOTE 3: The number of entries in the projected profile is estimated from the number of; effective entries for all the cells included in the projection. NOTE 4: underflow/overflow are by default excluded from the projection; (Note that this is a different default behavior compared to the projection to an histogram); To include the underflow and/or overflow use option ""UF"" and/or ""OF"". void PutStats(Double_t* stats); Replace current statistics with the values in array stats. void Reset(Option_t* option = """"); Reset this histogram: contents, errors, etc; *-* ===========================================. void Streamer(TBuffer& b); Stream an object of class TH3. void SetShowProjection(const char* option = ""xy"", Int_t nbins = 1); When the mouse is moved in a pad containing a 3-d view of this histogram; a second canvas shows a projection type given as option.; To stop the generation of the projections, delete the canvas; containing the projection.; option may contain a combination of the characters x,y,z,e; option = ""x"" return the x projection into a TH1D histogram; option = ""y"" return the y projection into a TH1D histogram; option = ""z"" return the z projection into a TH1D histogram; option = ""xy"" return the x versus y projection into a TH2D histogram; option = ""yx"" return the y versus x projection into a TH2D histogram; option = ""xz"" return the x versus z projection into a TH2D histogram; option = ""zx"" return the z versus x projection into a TH2D histogram; option = ""yz"" return the y versus z projection into a TH2D histogra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH3.html:47184,error,errors,47184,root/html528/TH3.html,https://root.cern,https://root.cern/root/html528/TH3.html,1,['error'],['errors']
Availability,"; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. ROOT::Math::GSLMultiMinimizer*fGSLMultiMin; doublefLSToleranceLine Search Tolerance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLMinimizer(ROOT::Math::EGSLMinimizerType type = ROOT::Math::kConjugateFR). Default constructor. GSLMinimizer(const char* type). Constructor with a string giving name of algorithm. virtual ~GSLMinimizer(). Destructor. GSLMinimizer(const ROOT::Math::GSLMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set the function to minimize. { BasicMinimizer::SetFunction(func);}. bool Minimize(); method to perform the minimization. double Edm() const; return expected distance reached from the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. » Author: L. Moneta Wed Oct 18 11:48:00 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLMinimizer.html:8236,error,error,8236,root/html602/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLMinimizer.html,4,['error'],"['error', 'errors']"
Availability,"; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. ROOT::Math::GSLMultiMinimizer*fGSLMultiMin; doublefLSToleranceLine Search Tolerance. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLMinimizer(ROOT::Math::EGSLMinimizerType type = ROOT::Math::kConjugateFR). Default constructor. GSLMinimizer(const char* type). Constructor with a string giving name of algorithm. virtual ~GSLMinimizer(). Destructor. GSLMinimizer(const ROOT::Math::GSLMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. void SetFunction(const ROOT::Math::IMultiGenFunction& func); set the function to minimize. void SetFunction(const ROOT::Math::IMultiGradFunction& func); set the function to minimize. { BasicMinimizer::SetFunction(func);}. bool Minimize(); method to perform the minimization. double Edm() const; return expected distance reached from the minimum. const double * MinGradient() const; return pointer to gradient values at the minimum. unsigned int NCalls() const; number of function calls to reach the minimum. bool ProvidesError() const; minimizer provides error and error matrix. { return false; }. const double * Errors() const; return errors at the minimum. double CovMatrix(unsigned int , unsigned int ) const; return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors. { return 0; }. » Author: L. Moneta Wed Oct 18 11:48:00 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:33; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__GSLMinimizer.html:8236,error,error,8236,root/html604/ROOT__Math__GSLMinimizer.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__GSLMinimizer.html,4,['error'],"['error', 'errors']"
Availability,"; provided gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a free variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set a limited variable. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void RetrieveParams(); retrieve from TMinuit minimum parameter values; and errors. void RetrieveErrorMatrix(); get covariance error matrix from TMinuit; when some parameters are fixed filled the corresponding rows and column with zero's. unsigned int NCalls() const; return total number of function calls. double MinValue() const; return minimum function value. double Edm() const; return expected distance from the minimum. unsigned int NFree() const; return number of free parameters. bool GetCovMatrix(double* cov) const; get covariance matrix. bool GetHessianMatrix(double* h) const; get Hessian - inverse of covariance matrix; just invert it; but need to get the compact form to avoid the zero for the fixed parameters. int CovMatrixStatus() const; return status of covariance matrix; status: 0= not calculated at all; 1= approximation only, not accurate; 2= full matrix, but forced positive-definite; 3= full accurate covariance matrix. double GlobalCC(unsigned int ) const; global correlation coefficient for parameter i. bool GetMino",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMinuitMinimizer.html:8707,error,errors,8707,root/html530/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html530/TMinuitMinimizer.html,2,['error'],['errors']
Availability,"; provided gradient. bool SetVariable(unsigned int ivar, const string& name, double val, double step); set a free variable. bool SetLimitedVariable(unsigned int ivar, const string& name, double val, double step, double , double ); set a limited variable. bool SetFixedVariable(unsigned int , const string& , double ); set a fixed variable. bool SetVariableValue(unsigned int , double ); set the value of an existing variable; parameter must exist or return false. std::string VariableName(unsigned int ivar) const; return the variable name. int VariableIndex(const string& name) const; return variable index. bool Minimize(); perform the minimization using the algorithm chosen previously by the user; By default Migrad is used.; Return true if the found minimum is valid and update internal chached values of; minimum values, errors and covariance matrix.; Status of minimizer is set to:; migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult. void RetrieveParams(); retrieve from TMinuit minimum parameter values; and errors. void RetrieveErrorMatrix(); get covariance error matrix from TMinuit; when some parameters are fixed filled the corresponding rows and column with zero's. unsigned int NCalls() const; return total number of function calls. double MinValue() const; return minimum function value. double Edm() const; return expected distance from the minimum. unsigned int NFree() const; return number of free parameters. int CovMatrixStatus() const; return status of covariance matrix; status: 0= not calculated at all; 1= approximation only, not accurate; 2= full matrix, but forced positive-definite; 3= full accurate covariance matrix. double GlobalCC(unsigned int ) const; global correlation coefficient for parameter i. bool GetMinosError(unsigned int i, double& errLow, double& errUp, int = 0); Perform Minos analysis for the given parameter i. void DoClear(); reset TMinuit. void DoReleaseFixParameter(int ivar); check if a parameter is defined and in case it was fixe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuitMinimizer.html:8615,error,errors,8615,root/html528/TMinuitMinimizer.html,https://root.cern,https://root.cern/root/html528/TMinuitMinimizer.html,1,['error'],['errors']
Availability,"; return c1;; }; TAttFill::SetFillStylevirtual void SetFillStyle(Style_t fstyle)Set the fill area style.Definition TAttFill.h:39; TMultiGraphA TMultiGraph is a collection of TGraph (or derived) objects.Definition TMultiGraph.h:34; TMultiGraph::Addvirtual void Add(TGraph *graph, Option_t *chopt="""")Add a new graph to the list of graphs.Definition TMultiGraph.cxx:419; TMultiGraph::Drawvoid Draw(Option_t *chopt="""") overrideDraw this multigraph with its current attributes.Definition TMultiGraph.cxx:508; . Graphs with error bars; Three classes are available to handle graphs with error bars: TGraphErrors, TGraphAsymmErrors and TGraphBentErrors. The following drawing options are specific to graphs with error bars:. Option Description . ""Z"" Do not draw small horizontal and vertical lines the end of the error bars. Without ""Z"", the default is to draw these. . "">"" An arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. . ""|>"" A filled arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size. . ""X"" Do not draw error bars. By default, graph classes that have errors are drawn with the errors (TGraph itself has no errors, and so this option has no effect.) . ""||"" Draw only the small vertical/horizontal lines at the ends of the error bars, without drawing the bars themselves. This option is interesting to superimpose statistical-only errors on top of a graph with statistical+systematic errors. . ""[]"" Does the same as option ""||"" except that it draws additional marks at the ends of the small vertical/horizontal lines. It makes plots less ambiguous in case several graphs are drawn on the same picture. . ""0"" By default, when a data point is outside the visible range along the Y axis, the error bars are not drawn. This option forces error bars' drawing for the data points outside the visible range along the Y axis (see example below). . ""2"" Error rectangles are drawn. . ""3"" A filled area is drawn ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphPainter.html:8477,error,error,8477,doc/master/classTGraphPainter.html,https://root.cern,https://root.cern/doc/master/classTGraphPainter.html,1,['error'],['error']
Availability,"; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Tue Jun 30 14:32:55 2015 » Last generated: 2015-06-30 14:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooFactoryWSTool.html:26015,error,errorCount,26015,root/html602/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html602/RooFactoryWSTool.html,1,['error'],['errorCount']
Availability,"; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Tue Mar 10 17:16:44 2015 » Last generated: 2015-03-10 17:16; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooFactoryWSTool.html:25053,error,errorCount,25053,root/html534/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html534/RooFactoryWSTool.html,1,['error'],['errorCount']
Availability,"; since it does not delete previously existing arrays. Bool_t DoMerge(const TGraph* g); protected function to perform the merge operation of a graph with asymmetric errors. void FillZero(Int_t begin, Int_t end, Bool_t from_ctor = kTRUE); Set zero values for point arrays in the range [begin, end). Double_t GetErrorX(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along Y at point i. Double_t GetErrorXhigh(Int_t i) const; Get high error on X. Double_t GetErrorXlow(Int_t i) const; Get low error on X. Double_t GetErrorYhigh(Int_t i) const; Get high error on Y. Double_t GetErrorYlow(Int_t i) const; Get low error on Y. Int_t Merge(TCollection* list); Adds all graphs with asymmetric errors from the collection to this graph.; Returns the total number of poins in the result or -1 in case of an error. void Print(Option_t* chopt = """") const; Print graph and errors values. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetPointError(Double_t exl, Double_t exh, Double_t eyl, Double_t eyh); Set ex and ey values for point pointed by the mouse. void SetPointError(Int_t i, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh); Set ex and ey values for point number i. void SetPointEXlow(Int_t i, Double_t exl); Set EXlow for point i. void SetPointEXhigh(Int_t i, Double_t exh); Set EXhigh for point i. void SetPointEYlow(Int_t i, Double_t eyl); Set EYlow for point i. void SetPointEYhigh(Int_t i, Double_t eyh); Set EYhigh for point i. void Streamer(TBuffer& ); Stream an object of class TGraphAsymmErrors. void SwapPoints(Int_t pos1, Int_t pos2); Swap points. Double_t** Allocate(Int_t size). Double_t * GetEXlow() const; {return fEXlow;}. Double_t * GetEXhigh() const; {return fEXhigh;}. Double_t * GetEYlow() const; {return fEYlow;}. Double_t * GetEYhigh() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphAsymmErrors.html:23674,error,errors,23674,root/html602/TGraphAsymmErrors.html,https://root.cern,https://root.cern/root/html602/TGraphAsymmErrors.html,2,['error'],['errors']
Availability,"; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooBrentRootFinder. class RooBrentRootFinder: public RooAbsRootFinder. Implement the abstract 1-dimensional root finding interface using; the Brent-Decker method. This implementation is based on the one; in the GNU scientific library (v0.99).; . Function Members (Methods); public:. RooBrentRootFinder(const RooAbsFunc& function); RooBrentRootFinder(const RooBrentRootFinder&); virtual~RooBrentRootFinder(); static TClass*Class(); virtual Bool_tfindRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; virtual TClass*IsA() const; voidsetTol(Double_t tol); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b). Data Members; public:. enum { MaxIterations; };. protected:. const RooAbsFunc*RooAbsRootFinder::_functionPointer to input function; Double_t_tol; Bool_tRooAbsRootFinder::_validTrue if current state is valid. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooBrentRootFinder(const RooAbsFunc& function); Constructor taking function binding as input. Bool_t findRoot(Double_t& result, Double_t xlo, Double_t xhi, Double_t value = 0) const; Do the root finding using the Brent-Decker method. Returns a boolean status and; loads 'result' with our best guess at the root if true.; Prints a warning if the initial interval does not bracket a single; root or if the root is not found after a fixed number of iterations. RooBrentRootFinder(const RooAbsFunc& function). virtual ~RooBrentRootFinder(); { }. void setTol(Double_t tol); Set convergence tolerance parameter. » Last changed: Tue Dec 8 17:03:14 2009 » Last generated: 2009-12-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooBrentRootFinder.html:1857,toler,tolerance,1857,root/html526/RooBrentRootFinder.html,https://root.cern,https://root.cern/root/html526/RooBrentRootFinder.html,1,['toler'],['tolerance']
Availability,"; ssizex-x length of source; ssizey-y length of source; averWindow-width of averaging smoothing window. . Smoothing;  ; Goal: Suppression of; statistical fluctuations; �        ; the algorithm is based on discrete; Markov chain, which has very simple invariant distribution;  ; ����������� �����; ������� ��being defined from the normalization condition ;  ; �������� n; is the length of the smoothed spectrum and .  ;  ;  . is the probability of the change of; the peak position from channel i to the channel i+1. �is the normalization constant so; that �and m is a width of smoothing window. We have extended this; algortihm to two dimensions. ;  ; Function:; const char*; TSpectrum2::SmoothMarkov(double; **fSpectrum, int ssizex, int; ssizey, �int averWindow)� ;  ; This; function calculates smoothed spectrum from the source spectrum based on Markov; chain method. The result is placed in the vector pointed by source pointer. On; successful completion it returns 0. On error it returns pointer to the string; describing error.;  ; Parameters:; ������� fSpectrum-pointer; to the matrix of source spectrum����������������� ; ������� ssizex, ssizey; -lengths of the spectrum matrix�������������������������������� ; ������� averWindow-width; of averaging smoothing window ;  ; Reference:; [1]; Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM A 376; (1996), 451.� . . Example 4 � script Smooth.c; :. Fig. 9 Original noisy; spectrum.��� Fig. 10 Smoothed spectrum m=3; Peaks can hardly be; observed.� ���Peaks become apparent. Fig. 11 Smoothed spectrum; m=5 Fig.12 Smoothed spectrum m=7;  ; Script:; // Example to illustrate the Markov smoothing (class; TSpectrum).; // To execute this example, do; // root > .x Smooth.C; #include <TSpectrum> ; void Smooth() {; �� Int_t i, j;; �� Double_t nbinsx = 256;; �� Double_t nbinsy = 256;�� ; �� Double_t xmin� = 0;; �� Double_t xmax� = (Double_t)nbinsx;; �� Double_t ymin� = 0;; �� Double_t ymax� = (Double_t)nbinsy;�� ; �� Double_t** so",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TSpectrum2.html:23771,error,error,23771,root/html602/TSpectrum2.html,https://root.cern,https://root.cern/root/html602/TSpectrum2.html,4,['error'],['error']
Availability,"; static Bool_tTFile::fgOnlyStagedBefore the file is opened, it is checked, that the file is staged, if not, the open fails; static UInt_tTFile::fgOpenTimeoutTimeout for open operations in ms - 0 corresponds to blocking i/o; static Int_tTFile::fgReadCallsNumber of bytes read from all TFile objects; static Bool_tTFile::fgReadInfoif true (default) ReadStreamerInfo is called when opening a file; static Int_tTFile::fgReadaheadSizeReadahead buffer size. private:. TStringfBasicUrlbasic url without authentication and options; TStringfBasicUrlOrgsave original url in case of temp redirection; Bool_tfHTTP11true if server support HTTP/1.1; Bool_tfHasModRoottrue if server has mod_root installed; TStringfMsgGetHeadcache GetHead() msg; TStringfMsgReadBuffercache ReadBuffer() msg; TStringfMsgReadBuffer10cache ReadBuffer10() msg; Bool_tfNoProxydon't use proxy; TUrlfProxyproxy URL; Long64_tfSizefile size; TSocket*fSocketsocket for HTTP/1.1 (stays alive between calls); TUrlfUrlOrgsave original url in case of temp redirection; static TUrlfgProxyglobally set proxy URL. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TWebFile(const char* url, Option_t* opt = """"); Create a Web file object. A web file is the same as a read-only; TFile except that it is being read via a HTTP server. The url; argument must be of the form: http://host.dom.ain/file.root.; The opt can be ""NOPROXY"", to bypass any set ""http_proxy"" shell; variable. The proxy can be specified as (in sh, or equivalent csh):; export http_proxy=http://pcsalo.cern.ch:3128; The proxy can also be specified via the static method TWebFile::SetProxy().; Basic authentication (AuthType Basic) is supported. The user name and; passwd can be specified in the url like this:; http://username:mypasswd@pcsalo.cern.ch/files/aap.root; If the file specified in the URL does not exist or is not accessible; the kZombie bit will be set in the TWebFile object. Use IsZombie(); to see if the file is accessible. The ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TWebFile.html:22621,alive,alive,22621,root/html528/TWebFile.html,https://root.cern,https://root.cern/root/html528/TWebFile.html,2,['alive'],['alive']
Availability,"; static Pixel_tTGFrame::fgDefaultSelectedBackground; static TStringfgEditorClass; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGListTreeEditorFrame(const TGWindow* p = 0, Int_t width = 250, Int_t height = 700); Constructor. ~TEveGListTreeEditorFrame(); Destructor. void SetEditorClass(const char* edclass); Set GED editor class. void ConnectSignals(); Connect list-tree signals. void DisconnectSignals(); Disconnect list-tree signals. void ReconfToHorizontal(); Reconfigure to horizontal layout, list-tree and editor side by side. void ReconfToVertical(); Reconfigure to vertical layout, list-tree above the editor. void ItemBelowMouse(TGListTreeItem* entry, UInt_t mask); Different item is below mouse. void ItemClicked(TGListTreeItem* entry, Int_t btn, UInt_t mask, Int_t x, Int_t y); Item has been clicked, based on mouse button do:; M1 - select, show in editor;; M2 - paste (call gEve->ElementPaste();; M3 - popup context menu. void ItemDblClicked(TGListTreeItem* item, Int_t btn); Item has been double-clicked, potentially expand the children. void ItemKeyPress(TGListTreeItem* entry, UInt_t keysym, UInt_t mask); A key has been pressed for an item. Only <Delete>, <Enter> and <Return> keys are handled here,; otherwise the control is passed back to TGListTree. TEveListTreeItem& operator=(const TEveGListTreeEditorFrame& ). TEveGListTreeEditorFrame(const TEveGListTreeEditorFrame& ). TGListTree* GetListTree() const; { return fListTree; }. TEveGedEditor* GetEditor() const; { return fEditor; }. » Last changed: root/eve:$Id$ » Last generated: 2015-03-13 19:21; This page has been automatically generated. For comments or suggestions regarding the docume",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEveGListTreeEditorFrame.html:22830,mask,mask,22830,root/html534/TEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/root/html534/TEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability,"; static Pixel_tTGFrame::fgDefaultSelectedBackground; static TStringfgEditorClass; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGListTreeEditorFrame(const TGWindow* p = 0, Int_t width = 250, Int_t height = 700); Constructor. ~TEveGListTreeEditorFrame(); Destructor. void SetEditorClass(const char* edclass); Set GED editor class. void ConnectSignals(); Connect list-tree signals. void DisconnectSignals(); Disconnect list-tree signals. void ReconfToHorizontal(); Reconfigure to horizontal layout, list-tree and editor side by side. void ReconfToVertical(); Reconfigure to vertical layout, list-tree above the editor. void ItemBelowMouse(TGListTreeItem* entry, UInt_t mask); Different item is below mouse. void ItemClicked(TGListTreeItem* entry, Int_t btn, UInt_t mask, Int_t x, Int_t y); Item has been clicked, based on mouse button do:; M1 - select, show in editor;; M2 - paste (call gEve->ElementPaste();; M3 - popup context menu. void ItemDblClicked(TGListTreeItem* item, Int_t btn); Item has been double-clicked, potentially expand the children. void ItemKeyPress(TGListTreeItem* entry, UInt_t keysym, UInt_t mask); A key has been pressed for an item. Only <Delete>, <Enter> and <Return> keys are handled here,; otherwise the control is passed back to TGListTree. TEveListTreeItem& operator=(const TEveGListTreeEditorFrame& ). TEveGListTreeEditorFrame(const TEveGListTreeEditorFrame& ). TGListTree* GetListTree() const; { return fListTree; }. TEveGedEditor* GetEditor() const; { return fEditor; }. » Last changed: root/eve:$Id: TEveBrowser.h 36955 2010-11-25 21:23:09Z matevz $ » Last generated: 2010-11-26 14:26; This page has been automatically generated",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGListTreeEditorFrame.html:22658,mask,mask,22658,root/html528/TEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/root/html528/TEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability,"; static Pixel_tTGFrame::fgDefaultSelectedBackground; static TStringfgEditorClass; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGListTreeEditorFrame(const TGWindow* p = 0, Int_t width = 250, Int_t height = 700); Constructor. ~TEveGListTreeEditorFrame(); Destructor. void SetEditorClass(const char* edclass); Set GED editor class. void ConnectSignals(); Connect list-tree signals. void DisconnectSignals(); Disconnect list-tree signals. void ReconfToHorizontal(); Reconfigure to horizontal layout, list-tree and editor side by side. void ReconfToVertical(); Reconfigure to vertical layout, list-tree above the editor. void ItemBelowMouse(TGListTreeItem* entry, UInt_t mask); Different item is below mouse. void ItemClicked(TGListTreeItem* entry, Int_t btn, UInt_t mask, Int_t x, Int_t y); Item has been clicked, based on mouse button do:; M1 - select, show in editor;; M2 - paste (call gEve->ElementPaste();; M3 - popup context menu. void ItemDblClicked(TGListTreeItem* item, Int_t btn); Item has been double-clicked, potentially expand the children. void ItemKeyPress(TGListTreeItem* entry, UInt_t keysym, UInt_t mask); A key has been pressed for an item. Only <Delete>, <Enter> and <Return> keys are handled here,; otherwise the control is passed back to TGListTree. TEveListTreeItem& operator=(const TEveGListTreeEditorFrame& ). TEveGListTreeEditorFrame(const TEveGListTreeEditorFrame& ). TGListTree* GetListTree() const; { return fListTree; }. TEveGedEditor* GetEditor() const; { return fEditor; }. » Last changed: root/eve:$Id: TEveBrowser.h 36955 2010-11-25 21:23:09Z matevz $ » Last generated: 2011-07-04 15:26; This page has been automatically generated",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveGListTreeEditorFrame.html:22811,mask,mask,22811,root/html530/TEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/root/html530/TEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability,"; static Pixel_tTGFrame::fgDefaultSelectedBackground; static TStringfgEditorClass; static const TGGC*TGFrame::fgHilightGC; static Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TEveGListTreeEditorFrame(const TGWindow* p = 0, Int_t width = 250, Int_t height = 700); Constructor. ~TEveGListTreeEditorFrame(); Destructor. void SetEditorClass(const char* edclass); Set GED editor class. void ConnectSignals(); Connect list-tree signals. void DisconnectSignals(); Disconnect list-tree signals. void ReconfToHorizontal(); Reconfigure to horizontal layout, list-tree and editor side by side. void ReconfToVertical(); Reconfigure to vertical layout, list-tree above the editor. void ItemBelowMouse(TGListTreeItem* entry, UInt_t mask); Different item is below mouse. void ItemClicked(TGListTreeItem* entry, Int_t btn, UInt_t mask, Int_t x, Int_t y); Item has been clicked, based on mouse button do:; M1 - select, show in editor;; M2 - paste (call gEve->ElementPaste();; M3 - popup context menu. void ItemDblClicked(TGListTreeItem* item, Int_t btn); Item has been double-clicked, potentially expand the children. void ItemKeyPress(TGListTreeItem* entry, UInt_t keysym, UInt_t mask); A key has been pressed for an item. Only <Delete>, <Enter> and <Return> keys are handled here,; otherwise the control is passed back to TGListTree. TEveListTreeItem& operator=(const TEveGListTreeEditorFrame& ). TEveGListTreeEditorFrame(const TEveGListTreeEditorFrame& ). TGListTree* GetListTree() const; { return fListTree; }. TEveGedEditor* GetEditor() const; { return fEditor; }. » Last changed: root/eve:$Id: TEveBrowser.h 36955 2010-11-25 21:23:09Z matevz $ » Last generated: 2011-11-03 20:11; This page has been automatically generated",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGListTreeEditorFrame.html:22811,mask,mask,22811,root/html532/TEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/root/html532/TEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability,; static RooPrintable::ContentsOptionRooPrintable::kTitle; static RooPrintable::StyleOptionRooPrintable::kTreeStructure; static RooPrintable::ContentsOptionRooPrintable::kValue; static RooPrintable::StyleOptionRooPrintable::kVerbose; static TObject::(anonymous)TObject::kWriteDelete; static TObject::(anonymous)TObject::kZombie. protected:. static Int_tRooPrintable::_nameLength; Double_tRooPlotable::_normValue; TStringRooPlotable::_yAxisLabel; Double_tRooPlotable::_ymax; Double_tRooPlotable::_ymin; Double_t*TGraphAsymmErrors::fEXhigh[fNpoints] array of X high errors; Double_t*TGraphAsymmErrors::fEXlow[fNpoints] array of X low errors; Double_t*TGraphAsymmErrors::fEYhigh[fNpoints] array of Y high errors; Double_t*TGraphAsymmErrors::fEYlow[fNpoints] array of Y low errors; Color_tTAttFill::fFillColorfill area color; Style_tTAttFill::fFillStylefill area style; TList*TGraph::fFunctionsPointer to list of functions (fits and user); TH1F*TGraph::fHistogramPointer to histogram used for drawing axis; Color_tTAttLine::fLineColorline color; Style_tTAttLine::fLineStyleline style; Width_tTAttLine::fLineWidthline width; Color_tTAttMarker::fMarkerColorMarker color index; Size_tTAttMarker::fMarkerSizeMarker size; Style_tTAttMarker::fMarkerStyleMarker style; Int_tTGraph::fMaxSize!Current dimension of arrays fX and fY; Double_tTGraph::fMaximumMaximum value for plotting along y; Double_tTGraph::fMinimumMinimum value for plotting along y; TStringTNamed::fNameobject identifier; Int_tTGraph::fNpointsNumber of points <= fMaxSize; TStringTNamed::fTitleobject title; Double_t*TGraph::fX[fNpoints] array of X points; Double_t*TGraph::fY[fNpoints] array of Y points. private:. Double_t_entriesNumber of entries in histogram; Double_t_nSigmaNumber of 'sigmas' error bars represent; Double_t_nominalBinWidthAverage bin width; Double_t_rawEntriesNumber of entries in source dataset. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooHist(); Default constructor. Roo,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHist.html:18742,error,errors,18742,root/html602/RooHist.html,https://root.cern,https://root.cern/root/html602/RooHist.html,8,['error'],['errors']
Availability,"; static TApplication*TApplication::Open(const char* url, Int_t debug, const char* script); static Int_tTApplication::ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); virtual Long_tTApplication::ProcessRemote(const char* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TPyROOTApplication(const char* acn, Int_t* argc, char** argv, Bool_t bLoadLibs = kTRUE); Create a TApplication derived for use with interactive ROOT from python. A; set of standard, often used libs is loaded if bLoadLibs is true (default). Bool_t CreatePyROOTApplication(Bool_t bLoadLibs = kTRUE); Create a TPyROOTApplication. Returns false if gApplication is not null. Bool_t InitROOTGlobals(); Setup the basic ROOT globals gBenchmark, gStyle, gProgname, if not already; set. Always returns true. Bool_t InitCINTMessageCallback(); Install CINT message callback which will turn CINT error message into; python exceptions. Always returns true. Bool_t InitROOTMessageCallback(); Install RO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/PyROOT__TPyROOTApplication.html:12926,avail,available,12926,root/html528/PyROOT__TPyROOTApplication.html,https://root.cern,https://root.cern/root/html528/PyROOT__TPyROOTApplication.html,4,['avail'],['available']
Availability,"; static TApplication*TApplication::Open(const char* url, Int_t debug, const char* script); static Int_tTApplication::ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); virtual Long_tTApplication::ProcessRemote(const char* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. private:. Bool_tfCustomizedflag for customized canvas implimentation. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TQApplication(); Used by Dictionary(). TQApplication(const char* appClassName, int* argc, char** argv, void* options = 0, int numOptions = 0); Create the root application and load the graphic libraries. ~TQApplication(); Delete ROOT application environment. void LoadGraphicsLibs(); Here we overload the LoadGraphicsLibs() function.; This function now just instantiates a QRootGuiFactory; object and redirect the global pointer gGuiFactory to point; to it. void SetCustomized(); Set the custom flag. » Author: Denis Bertini, M. Al-Turany 01/11/2000 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TQApplication.html:12111,avail,available,12111,root/html528/TQApplication.html,https://root.cern,https://root.cern/root/html528/TQApplication.html,3,['avail'],['available']
Availability,"; static TApplication*TApplication::Open(const char* url, Int_t debug, const char* script); static Int_tTApplication::ParseRemoteLine(const char* ln, TString& hostdir, TString& user, Int_t& dbg, TString& script); virtual Long_tTApplication::ProcessRemote(const char* line, Int_t* error = 0); voidTApplication::SetSignalHandler(TSignalHandler* sh). Data Members; public:. enum TApplication::EStatusBits { kProcessRemotely; kDefaultApplication; };; enum TApplication::EExitOnException { kDontExit; kExit; kAbort; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TApplication*TApplication::fAppRemoteCurrent remote application, if defined; TList*TQObject::fListOfConnections! list of connections to this object; TList*TQObject::fListOfSignals! list of signals from this object; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals; static TList*TApplication::fgApplicationsList of available applications. private:. TGClient*fClientpointer to the client environment; char*fDisplaydisplay server to connect to. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGApplication(const char* appClassName, Int_t* argc, char** argv, void* options = 0, Int_t numOptions = 0); Create a GUI application environment. Use this class if you only; want to use the ROOT GUI and no other services. In all other cases; use either TApplication or TRint. ~TGApplication(); TGApplication dtor. void LoadGraphicsLibs(); Load shared libs necessary for GUI. void GetOptions(Int_t* argc, char** argv); Handle command line arguments. Arguments handled are removed from the; argument array. Currently only option ""-display xserver"" is considered. TGApplication(); { }. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGApplication.html:11936,avail,available,11936,root/html528/TGApplication.html,https://root.cern,https://root.cern/root/html528/TGApplication.html,4,['avail'],['available']
Availability,"; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TF1; static void AbsValue (Bool_t reject=kTRUE);  Static function: set the fgAbsValue flag. ;  ; static void CalcGaussLegendreSamplingPoints (Int_t num, Double_t *x, Double_t *w, Double_t eps=3.0e-11);  Type safe interface (static method) The number of sampling points are taken from the TGraph. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Bool_t DefaultAddToGlobalList (Bool_t on=kTRUE);  Static method to add/avoid to add automatically functions to the global list (gROOT->GetListOfFunctions() ) After having called this static method, all the functions created afterwards will follow the desired behaviour. ;  ; static Double_t DerivativeError ();  Static function returning the error of the last call to the of Derivative's functions. ;  ; static TF1 * GetCurrent ();  Static function returning the current function being processed. ;  ; static void InitStandardFunctions ();  Create the basic function objects. ;  ; static Bool_t RejectedPoint ();  See TF1::RejectPoint above. ;  ; static void RejectPoint (Bool_t reject=kTRUE);  Static function to set the global flag to reject points the fgRejectPoint global flag is tested by all fit functions if TRUE the point is not included in the fit. ;  ; static void SetCurrent (TF1 *f1);  Static function setting the current function. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTF12.html:32808,error,error,32808,doc/master/classTF12.html,https://root.cern,https://root.cern/doc/master/classTF12.html,3,['error'],['error']
Availability,"; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual doubleColNorm() const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Double_tDeterminant() const; virtual voidDeterminant(Double_t& d1, Double_t& d2) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual doubleE2Norm() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExtractRow(Int_t row, Int_t col, double* v, Int_t n = -1) const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const Int_t*GetColIndexArray() const; virtual Int_t*GetColIndexArray(); Int_tGetColLwb() const; Int_tGetColUpb() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetMatrix2Array(double* data, Option_t* option = """") const; virtual const double*GetMatrixArray() const; virtual double*GetMatrixArray(); virtual const char*TObject::GetName() const; Int_tGetNcols() const; Int_tGetNoElements() const; Int_tGetNrows() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMatrixTBase_double_.html:8946,error,error,8946,root/html528/TMatrixTBase_double_.html,https://root.cern,https://root.cern/root/html528/TMatrixTBase_double_.html,6,['error'],['error']
Availability,"; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t*); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Bool_tCompareContent(TClass* cl, TVirtualStreamerInfo* info, Bool_t warn, Bool_t complete); virtual voidCompile(); voidComputeSize(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteArray(void* p, Bool_t dtorOnly = kFALSE); virtual voidDestructor(void* p, Bool_t dtorOnly = kFALSE); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static TVirtualStreamerInfo*TVirtualStreamerInfo::Factory(); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidForceWriteInfo(TFile* file, Bool_t force = kFALSE); virtual TClassStreamer*GenEmulatedClassStreamer(const char* class_name); virtual TVirtualCollectionProxy*GenEmulatedProxy(const char* class_name); virtual Int_tGenerateHeaderFile(const char* dirname, const TList* subClasses = 0, const TList* extrainfos = 0); virtual TClassStreamer*GenExplicitClassStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); virtual TVirtualCollectionProxy*GenExplicitProxy(const ROOT::TCollectionProxyInfo& info, TClass* cl); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TStreamerInfo.html:2550,error,error,2550,root/html528/TStreamerInfo.html,https://root.cern,https://root.cern/root/html528/TStreamerInfo.html,2,['error'],['error']
Availability,"; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t*); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Bool_tCompareContent(TClass* cl, TVirtualStreamerInfo* info, Bool_t warn, Bool_t complete); virtual voidCompile(); voidComputeSize(); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteArray(void* p, Bool_t dtorOnly = kFALSE); virtual voidDestructor(void* p, Bool_t dtorOnly = kFALSE); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static TVirtualStreamerInfo*TVirtualStreamerInfo::Factory(); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidForceWriteInfo(TFile* file, Bool_t force = kFALSE); virtual TClassStreamer*GenEmulatedClassStreamer(const char* class_name, Bool_t silent); virtual TVirtualCollectionProxy*GenEmulatedProxy(const char* class_name, Bool_t silent); virtual Int_tGenerateHeaderFile(const char* dirname, const TList* subClasses = 0, const TList* extrainfos = 0); virtual TClassStreamer*GenExplicitClassStreamer(const ROOT::TCollectionProxyInfo& info, TClass* cl); virtual TVirtualCollectionProxy*GenExplicitProxy(const ROOT::TCollectionProxyIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TStreamerInfo.html:2550,error,error,2550,root/html532/TStreamerInfo.html,https://root.cern,https://root.cern/root/html532/TStreamerInfo.html,1,['error'],['error']
Availability,"; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; const char*Deconvolution(float** source, float** resp, Int_t ssizex, Int_t ssizey, Int_t numberIterations, Int_t numberRepetitions, Double_t boost); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TH1*GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; Int_tGetNPeaks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_t*GetPositionX() const; Float_t*GetPositionY() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpectrum2.html:3695,error,error,3695,root/html528/TSpectrum2.html,https://root.cern,https://root.cern/root/html528/TSpectrum2.html,4,['error'],['error']
Availability,"; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidCopy(TObject& box) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual TBox*DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Double_tGetX1() const; Double_tGetX2() const; Double_tGetY1() const; Double_tGetY2",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBox.html:1786,error,error,1786,root/html526/TBox.html,https://root.cern,https://root.cern/root/html526/TBox.html,4,['error'],['error']
