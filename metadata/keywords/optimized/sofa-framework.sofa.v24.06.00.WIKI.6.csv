quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"﻿. SOFA API: sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::linearsolver::direct::BaseEigenSolverProxy Struct Referenceabstract . #include <EigenSolverFactory.h>. Inheritance diagram for sofa::component::linearsolver::direct::BaseEigenSolverProxy:. [legend]; Detailed Description; A base wrapper class for all solvers based on the Eigen library . Public Member Functions; virtual ~BaseEigenSolverProxy ();  ; virtual Eigen::ComputationInfo info () const =0;  ; virtual void solve (const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const =0;  ; virtual void solve (const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const =0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void analyzePattern (const EigenSparseMatrixMap< double > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< float > &a)=0;  ; virtual void factorize (const EigenSparseMatrixMap< double > &a)=0;  . Constructor details. ◆ ~BaseEigenSolverProxy(). virtual sofa::component::linearsolver::direct::BaseEigenSolverProxy::~BaseEigenSolverProxy ; (; ). inlinevirtual . Function details. ◆ analyzePattern() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< double > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ analyzePattern() [2/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::analyzePattern ; (; const EigenSparseMatrixMap< float > & ; a). pure virtual . Implemented in sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >. ◆ factorize() [1/2]. virtual void sofa::component::linearsolver::direct::BaseEigenSolverProxy::factorize ; (; const EigenSparseMatrixMap< double > & ; a). pure v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html:459,wrap,wrapper,459,api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1linearsolver_1_1direct_1_1_base_eigen_solver_proxy.html,1,['wrap'],['wrapper']
Integrability,"﻿. SOFA API: sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject > Class Template Reference . #include <EigenSolverFactory.h>. Inheritance diagram for sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >:. [legend]; Detailed Description; template<typename RealObject>; class sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >; This class is the bridge between an Eigen solver class and the abstract class BaseEigenSolverProxy.; Using this class, all Eigen solvers can inherit from the same base class, hence runtime polymorphism is possible. Only a subset of the Eigen solver methods are available. . Public Member Functions;  EigenSolverWrapper ();  ; Eigen::ComputationInfo info () const override;  ; void solve (const EigenVectorXdMap< float > &b, EigenVectorXdMap< float > &x) const override;  ; void solve (const EigenVectorXdMap< double > &b, EigenVectorXdMap< double > &x) const override;  ; void analyzePattern (const EigenSparseMatrixMap< float > &a) override;  ; void analyzePattern (const EigenSparseMatrixMap< double > &a) override;  ; void factorize (const EigenSparseMatrixMap< float > &a) override;  ; void factorize (const EigenSparseMatrixMap< double > &a) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::BaseEigenSolverProxy; virtual ~BaseEigenSolverProxy ();  . Constructor details. ◆ EigenSolverWrapper(). template<typename RealObject > . sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >::EigenSolverWrapper ; (; ). inline . Function details. ◆ analyzePattern() [1/2]. template<typename RealObject > . void sofa::component::linearsolver::direct::EigenSolverWrapper< RealObject >::analyzePattern ; (; const EigenSparseMatrixMap< double ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html:624,bridg,bridge,624,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_solver_wrapper.html,1,['bridg'],['bridge']
Integrability,"﻿. SOFA API: sofa::component::linearsolver::preconditioner Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::linearsolver::preconditioner Namespace Reference . Classes; class  BlockJacobiPreconditionerInternalData;  ; class  BlockJacobiPreconditioner;  Linear solver based on a NxN block diagonal matrix (i.e. block Jacobi preconditioner) More...;  ; class  JacobiPreconditioner;  Linear solver based on a diagonal matrix (i.e. Jacobi preconditioner) More...;  ; class  PrecomputedMatrixSystem;  ; class  PrecomputedWarpPreconditionerInternalData;  ; class  PrecomputedWarpPreconditioner;  Linear system solver based on a precomputed inverse matrix, wrapped by a per-node rotation matrix. More...;  ; class  RotationMatrixSystem;  ; class  SSORPreconditioner;  ; class  WarpPreconditioner;  Linear system solver wrapping another (precomputed) linear solver by a per-node rotation matrix. More...;  . Functions; void registerBlockJacobiPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerJacobiPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerPrecomputedMatrixSystem (sofa::core::ObjectFactory *factory);  ; void registerPrecomputedWarpPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerRotationMatrixSystem (sofa::core::ObjectFactory *factory);  ; void registerSSORPreconditioner (sofa::core::ObjectFactory *factory);  ; void registerWarpPreconditioner (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; template class SOFA_COMPONENT_LINEARSOLVER_PRECONDITIONER_API BlockJacobiPreconditioner< BlockDiagonalMatrix< 3, SReal >, FullVector< SReal > >;  ; te",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html:748,wrap,wrapped,748,api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsolver_1_1preconditioner.html,2,['wrap'],"['wrapped', 'wrapping']"
Integrability,"﻿. SOFA API: sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes > Class Template Reference . #include <PrecomputedWarpPreconditioner.h>; Linear system solver based on a precomputed inverse matrix, wrapped by a per-node rotation matrix. ; More... Inheritance diagram for sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::component::linearsolver::preconditioner::PrecomputedWarpPreconditioner< TDataTypes >; Linear system solver based on a precomputed inverse matrix, wrapped by a per-node rotation matrix. . Public Attributes; Data< bool > d_jmjt_twostep;  Use two step algorithm to compute JMinvJt. More...;  ; sofa::core::objectmodel::lifecycle::RemovedData f_verbose {this, ""v23.12"", ""v24.06"", ""verbose"", ""This Data is no longer used""};  ; sofa::core::objectmodel::RenamedData< bool > jmjt_twostep;  ; sofa::core::objectmodel::RenamedData< bool > use_file;  ; sofa::core::objectmodel::RenamedData< bool > share_matrix;  ; sofa::core::objectmodel::RenamedData< bool > use_rotations;  ; sofa::core::objectmodel::RenamedData< double > draw_rotations_scale;  ; Data< bool > d_use_file;  Dump system matrix in a file. More...;  ; Data< bool > d_share_matrix;  Share the compliance matrix in memory if they are related to the same file (WARNING: might require to reload Sofa when opening a new scene...) More...;  ; SingleLink< PrecomputedWarpPreconditioner, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_linearSolver;  Link towards the linear solver used to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_warp_preconditioner.html:584,wrap,wrapped,584,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_warp_preconditioner.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_warp_preconditioner.html,2,['wrap'],['wrapped']
Integrability,"﻿. SOFA API: sofa::component::linearsolver::preconditioner::WarpPreconditioner< TMatrix, TVector, ThreadManager > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::linearsolver::preconditioner::WarpPreconditioner< TMatrix, TVector, ThreadManager > Class Template Reference . #include <WarpPreconditioner.h>; Linear system solver wrapping another (precomputed) linear solver by a per-node rotation matrix. ; More... Inheritance diagram for sofa::component::linearsolver::preconditioner::WarpPreconditioner< TMatrix, TVector, ThreadManager >:. [legend]; Detailed Description; template<class TMatrix, class TVector, class ThreadManager = NoThreadManager>; class sofa::component::linearsolver::preconditioner::WarpPreconditioner< TMatrix, TVector, ThreadManager >; Linear system solver wrapping another (precomputed) linear solver by a per-node rotation matrix. . Public Attributes; SingleLink< WarpPreconditioner, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_linearSolver;  Link towards the linear solver used to build the warp conditioner. More...;  ; Data< unsigned > f_useRotationFinder;  ; Data< unsigned > d_useRotationFinder;  Which rotation Finder to use. More...;  ; Data< unsigned > d_updateStep;  Number of steps before the next refresh of the system matrix in the main solver. More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE3(WarpPreconditioner, TMatrix, TVector, ThreadManager), SOFA_TEMPLATE3(sofa::component::linearsolver::MatrixLinearSolver, TMatrix, TVector, ThreadManager));  ;  ~WarpPreconditioner ();  ; void init () override;  ; void bwdInit () override;  ; void setSystemMBKMatrix (const core::MechanicalParams *mparams) override;  ; void invert (Matrix &M) override;  ; void solve (Matrix &M, Vector &solution, Vector &rh) override;  Solve the system as",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_warp_preconditioner.html:496,wrap,wrapping,496,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_warp_preconditioner.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_warp_preconditioner.html,2,['wrap'],['wrapping']
Integrability,"﻿. SOFA API: sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c > Class Template Reference . #include <BaseAssemblingMatrixAccumulator.h>. Inheritance diagram for sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c >:. [legend]. Protected Attributes; Data< sofa::type::Vec2u > d_matrixSize;  Size of the local matrix. More...;  ; Data< sofa::type::Vec2u > d_positionInGlobalMatrix;  Position of this local matrix in the global matrix. More...;  ; Data< SReal > d_factor;  Factor applied to matrix entries. This factor depends on the ODE solver and the associated component. More...;  ; sofa::linearalgebra::BaseMatrix * m_globalMatrix { nullptr };  ; sofa::type::Vec< 2, sofa::SignedIndex > m_cachedPositionInGlobalMatrix;  ; SReal m_cachedFactor {};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseAssemblingMatrixAccumulator, c), sofa::core::get_base_object_strong_type< c >);  ; virtual void setMatrixSize (const sofa::type::Vec2u &);  ; sofa::type::Vec2u getMatrixSize () const;  ; void setPositionInGlobalMatrix (const sofa::type::Vec2u &);  ; void setFactor (SReal factor);  ; void setGlobalMatrix (sofa::linearalgebra::BaseMatrix *globalMatrix);  ; type::Vec< 2, unsigned > getPositionInGlobalMatrix () const;  ; void addContributionsToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, const sofa::type::Vec2u &);  . Protected Member Functions;  BaseAssemblingMatrixAccumulator ();  . Attribute details. ◆ d_factor. template<core::matrixaccumulator::Contribution c> . Data< SReal > sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c >::d_factor. protected . Factor applied to matrix entries. This factor depends on the ODE solver and the associated component. . ◆ d_ma",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_assembling_matrix_accumulator.html:818,depend,depends,818,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_assembling_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_assembling_matrix_accumulator.html,1,['depend'],['depends']
Integrability,"﻿. SOFA API: sofa::component::mapping::linear::Mesh2PointTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mapping::linear::Mesh2PointTopologicalMapping Class Reference . #include <Mesh2PointTopologicalMapping.h>. Inheritance diagram for sofa::component::mapping::linear::Mesh2PointTopologicalMapping:. [legend]; Detailed Description; This class, called Mesh2PointTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = any MeshTopology OUTPUT TOPOLOGY = A PointSetTopologie, as the boundary of the INPUT TOPOLOGY; Each primitive in the input Topology will be mapped to a point in the output topology computed from a parameter vector (pointBaryCoords, edgeBaryCoords, triangleBaryCoords, quadBaryCoords, tetraBaryCoords, hexaBaryCoords); Mesh2PointTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Protected Attributes; Data< type::vector< Vec3d > > pointBaryCoords;  Coordinates for the points of the output topology created from the points of the input topology. More...;  ; Data< type::vector< Vec3d > > edgeBaryCoords;  Coordinates for the points of the output topology created from the edges of the input topology. More...;  ; Data< type::vector< Vec3d > > triangleBaryCoords;  Coordinates for the points of the output topology created from the triangles of the input topology. More...;  ; Data< type::vector< Vec3d > > quadBaryCoords;  Coordinates for the points of the output topology created from the quads of the input topology. More...;  ; Data< type::vector< Vec3d > > tetraBaryCoords;  Coordinates for the points of the output topology created from the tetra of the input topology. More...;  ; Data< type::vector< Vec3d > > hexaBaryCoords;  Coordinates for the points of the output topology created from the hexa of th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html:600,interface,interface,600,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::mapping::linear::SimpleTesselatedHexaTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mapping::linear::SimpleTesselatedHexaTopologicalMapping Class Reference . #include <SimpleTesselatedHexaTopologicalMapping.h>. Inheritance diagram for sofa::component::mapping::linear::SimpleTesselatedHexaTopologicalMapping:. [legend]; Detailed Description; This class, called SimpleTesselatedTetraTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = HexahedronSetTopology OUTPUT TOPOLOGY = Set of HexahedronSetTopologies, as the boundary of the INPUT TOPOLOGY; Each hexahedron in the input Topology will be divided in eight hexahedrom in the output topology; SimpleTesselatedHexaTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Protected Attributes; type::vector< sofa::Index > pointMappedFromPoint;  Translates the TopologyChange objects from the source to the target. More...;  ; std::map< type::fixed_array< sofa::Index, 2 >, sofa::Index > pointMappedFromEdge;  ; std::map< type::fixed_array< sofa::Index, 4 >, sofa::Index > pointMappedFromFacet;  ; type::vector< sofa::Index > pointMappedFromHexa;  ;  Protected Attributes inherited from sofa::core::topology::TopologicalMapping; std::map< Index, Index > Glob2LocMap;  ; std::map< Index, sofa::type::vector< Index > > In2OutMap;  ; ElementType m_inputType = geometry::ElementType::UNKNOWN;  ; ElementType m_outputType = geometry::ElementType::UNKNOWN;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html:651,interface,interface,651,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMapping Class Reference . #include <SimpleTesselatedTetraTopologicalMapping.h>. Inheritance diagram for sofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMapping:. [legend]; Detailed Description; This class, called SimpleTesselatedTetraTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = TetrahedronSetTopology OUTPUT TOPOLOGY = TetrahedronSetTopology which is a finer tessellated version of the INPUT TOPOLOGY; Each tetrahedron in the input Topology will be divided in eight tetrahedra in the output topology . Protected Attributes; core::topology::TetrahedronData< sofa::type::vector< sofa::type::fixed_array< Index, 8 > > > tetrahedraMappedFromTetra;  Each Tetrahedron of the input topology is mapped to the 8 tetrahedrons in which it can be divided. More...;  ; core::topology::TetrahedronData< sofa::type::vector< Index > > tetraSource;  Which tetra from the input topology map to a given tetra in the output topology (sofa::InvalidID if none) More...;  ; Data< type::vector< Index > > d_pointMappedFromPoint;  Each point of the input topology is mapped to the same point. More...;  ; Data< type::vector< Index > > d_pointMappedFromEdge;  Each edge of the input topology is mapped to his midpoint. More...;  ; Data< type::vector< Index > > d_pointSource;  Which input topology element map to a given point in the output topology : 0 -> none, > 0 -> point index + 1, < 0 , - edge index -1. More...;  ; std::set< Index > tetrahedraToRemove;  ;  Protected Attributes inherited from sofa::core::topology::TopologicalMapping; std::map< Index, Index > Glob2LocMap;  ; std::map< In",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html:655,interface,interface,655,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness > Class Template Reference . #include <NonLinearMappingData.h>. Inheritance diagram for sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >:. [legend]. Public Attributes; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  NonLinearMappingData ();  ;  NonLinearMappingData ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::ini",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data.html:989,message,messages,989,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_non_linear_mapping_data.html,1,['message'],['messages']
Integrability,"﻿. SOFA API: sofa::component::mechanicalload::Gravity Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mechanicalload::Gravity Class Reference . #include <Gravity.h>. Inheritance diagram for sofa::component::mechanicalload::Gravity:. [legend]; Detailed Description; Override the default gravity . Public Attributes; Data< sofa::type::Vec3 > f_gravity;  Gravity in the world coordinate system. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Gravity, core::objectmodel::ContextObject);  ; void apply () override;  Modify the context of the Node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ContextObject;  SOFA_ABSTRACT_CLASS (ContextObject, BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html:998,message,messages,998,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,1,['message'],['messages']
Integrability,"﻿. SOFA API: sofa::component::odesolver::backward::EulerImplicitSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::odesolver::backward::EulerImplicitSolver Class Reference . #include <EulerImplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::backward::EulerImplicitSolver:. [legend]; Detailed Description; Semi-implicit time integrator using backward Euler scheme for first and second degree ODEs. (default: second); 2nd Order ***; This is based on [Baraff and Witkin, Large Steps in Cloth Simulation, SIGGRAPH 1998] The integration scheme is based on the following equations:; ; The unknown is ; Newton's law is ; is the mass matrix. is the stiffness implemented (or not) by the force fields. is the damping implemented (or not) by the force fields. An additional, uniform Rayleigh damping is imposed by the solver.; This corresponds to the following equation system:. Moreover, the projective constraints filter out the forbidden motions. This is equivalent with multiplying vectors with a projection matrix . Finally, the equation system set by this ode solver is:. 1st Order ***; This integration scheme is based on the following equation:. Applied to this mechanical system:. . Trapezoidal Rule ***; The trapezoidal scheme is based on. With this and the same techniques as for the implicit Euler scheme we receive for *** 2nd Order *** equations. and for *** 1st Order ***; . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > f_rayleighStiffness;  ; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; sofa::core::objectmodel::RenamedData< SReal > f_velocityDamping;  ; sofa::core::objectmodel::RenamedData< bool > f_firstOrder;  ; sofa::core::objectmodel::RenamedData< bool > f_solveConstraint;  ; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficien",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:531,integrat,integrator,531,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,2,['integrat'],"['integration', 'integrator']"
Integrability,"﻿. SOFA API: sofa::component::odesolver::backward::NewmarkImplicitSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::odesolver::backward::NewmarkImplicitSolver Class Reference . #include <NewmarkImplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::backward::NewmarkImplicitSolver:. [legend]; Detailed Description; Implicit time integrator using Newmark scheme.; This integration scheme is based on the following equations:; $x_{t+h} = x_t + h v_t + h^2/2 ( (1-2\beta) a_t + 2\beta a_{t+h} )$ $v_{t+h} = v_t + h ( (1-\gamma) a_t + \gamma a_{t+h} )$; Applied to a mechanical system where $ M a_t + (r_M M + r_K K) v_t + K x_t = f_ext$, we need to solve the following system:; $ M a_{t+h} + (r_M M + r_K K) v_{t+h} + K x_{t+h} = f_ext $ $ M a_{t+h} + (r_M M + r_K K) ( v_t + h ( (1-\gamma) a_t + \gamma a_{t+h} ) ) + K ( x_t + h v_t + h^2/2 ( (1-2\beta) a_t + 2\beta a_{t+h} ) ) = f_ext $ $ ( M + h \gamma (r_M M + r_K K) + h^2 \beta K ) a_{t+h} = f_ext - (r_M M + r_K K) ( v_t + h (1-\gamma) a_t ) - K ( x_t + h v_t + h^2/2 (1-2\beta) a_t ) $ $ ( (1 + h \gamma r_M) M + (h^2 \beta + h \gamma r_K) K ) a_{t+h} = f_ext - (r_M M + r_K K) v_t - K x_t - (r_M M + r_K K) ( h (1-\gamma) a_t ) - K ( h v_t + h^2/2 (1-2\beta) a_t ) $ $ ( (1 + h \gamma r_M) M + (h^2 \beta + h \gamma r_K) K ) a_{t+h} = a_t - (r_M M + r_K K) ( h (1-\gamma) a_t ) - K ( h v_t + h^2/2 (1-2\beta) a_t ) $; The current implementation first computes $a_t$ directly (as in the explicit solvers), then solves the previous system to compute $a_{t+dt}$, and finally computes the new position and velocity. . Public Attributes; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass. More...;  ; Data< SReal > d_ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:534,integrat,integrator,534,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['integrat'],['integrator']
Integrability,"﻿. SOFA API: sofa::component::odesolver::backward::VariationalSymplecticSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::component::odesolver::backward::VariationalSymplecticSolver Class Reference . #include <VariationalSymplecticSolver.h>. Inheritance diagram for sofa::component::odesolver::backward::VariationalSymplecticSolver:. [legend]; Detailed Description; Implicit and Explicit time integrator using the Variational Symplectic Integrator as defined in : Kharevych, L et al. “Geometric, Variational Integrators for Computer Animation.” ACM SIGGRAPH Symposium on Computer Animation 4 (2006): 43–51.; The current implementation for implicit integration assume alpha =0.5 (quadratic accuracy) and uses several Newton steps to estimate the velocity . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > f_newtonError;  ; sofa::core::objectmodel::RenamedData< unsigned int > f_newtonSteps;  ; sofa::core::objectmodel::RenamedData< SReal > f_rayleighStiffness;  ; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; sofa::core::objectmodel::RenamedData< bool > f_saveEnergyInFile;  ; sofa::core::objectmodel::RenamedData< bool > f_explicit;  ; sofa::core::objectmodel::RenamedData< std::string > f_fileName;  ; sofa::core::objectmodel::RenamedData< bool > f_computeHamiltonian;  ; sofa::core::objectmodel::RenamedData< SReal > f_hamiltonianEnergy;  ; sofa::core::objectmodel::RenamedData< bool > f_useIncrementalPotentialEnergy;  ; Data< SReal > d_newtonError;  Error tolerance for Newton iterations. More...;  ; Data< unsigned int > d_newtonSteps;  Maximum number of Newton steps. More...;  ; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness, > 0. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass, > 0. More...;  ; Data< bool > d_saveEnergyInFile;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:541,integrat,integrator,541,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,2,['integrat'],"['integration', 'integrator']"
Integrability,"﻿. SOFA API: sofa::component::odesolver::forward::CentralDifferenceSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::odesolver::forward::CentralDifferenceSolver Class Reference . #include <CentralDifferenceSolver.h>. Inheritance diagram for sofa::component::odesolver::forward::CentralDifferenceSolver:. [legend]; Detailed Description; Explicit time integrator using central difference (also known as Verlet of Leap-frop).; See alsohttp://www.dynasupport.com/support/tutorial/users.guide/time.integration . http://en.wikipedia.org/wiki/Leapfrog_method . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass. More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Pu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html:515,integrat,integrator,515,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,2,['integrat'],"['integration', 'integrator']"
Integrability,"﻿. SOFA API: sofa::component::odesolver::forward::EulerExplicitSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::odesolver::forward::EulerExplicitSolver Class Reference . #include <EulerExplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::forward::EulerExplicitSolver:. [legend]; Detailed Description; The simplest time integration. Two variants of the Euler solver are available in this component:; forward Euler method, also called explicit Euler method; semi-implicit Euler method, also called semi-explicit Euler method or symplectic Euler. In both variants, acceleration is first computed. The system to compute the acceleration is M * a = f, where M is the mass matrix and f can be a force. In case of a diagonal mass matrix, M is trivially invertible and the acceleration can be computed without a linear solver.; f is accumulated by force fields through the addForce function. Mappings can also contribute by projecting forces of mapped objects. f is computed based on the current state (current velocity and position).; Explicit Euler method: The option ""symplectic"" must be set to false to use this variant. The explicit Euler method produces an approximate discrete solution by iterating x_{n+1} = x_n + v_n * dt v_{n+1} = v_n + a * dt; Semi-implicit Euler method: The option ""symplectic"" must be set to true to use this variant. The semi-implicit Euler method produces an approximate discrete solution by iterating v_{n+1} = v_n + a * dt x_{n+1} = x_n + v_{n+1} * dt; The semi-implicit Euler method is more robust than the standard Euler method. . Public Attributes; Data< bool > d_symplectic;  If true (default), the velocities are updated before the positions and the method is symplectic, more robust. If false, the positions are updated before the velocities (stand",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:540,integrat,integration,540,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::component::odesolver::forward::RungeKutta2Solver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::odesolver::forward::RungeKutta2Solver Class Reference . #include <RungeKutta2Solver.h>. Inheritance diagram for sofa::component::odesolver::forward::RungeKutta2Solver:. [legend]; Detailed Description; A popular time integration method, much more precise than the EulerSolver . Public Member Functions;  SOFA_CLASS (RungeKutta2Solver, sofa::core::behavior::OdeSolver);  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; virtual SReal getVelocityIntegrationFactor () const;  ; virtual SReal getPositionIntegrationFactor () const;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html:441,integrat,integration,441,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::component::odesolver::forward::RungeKutta4Solver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::odesolver::forward::RungeKutta4Solver Class Reference . #include <RungeKutta4Solver.h>. Inheritance diagram for sofa::component::odesolver::forward::RungeKutta4Solver:. [legend]; Detailed Description; A popular time integration method, much more precise than the EulerSolver . Public Member Functions;  SOFA_CLASS (RungeKutta4Solver, sofa::core::behavior::OdeSolver);  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; virtual SReal getVelocityIntegrationFactor () const;  ; virtual SReal getPositionIntegrationFactor () const;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta4_solver.html:441,integrat,integration,441,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta4_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta4_solver.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::component::sceneutility::FileMessageHandlerComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::FileMessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a FileMessageHandlerComponent to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::FileMessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a FileMessageHandlerComponent to the main logger. . Public Attributes; Data< std::string > d_filename;  Name of the file into which the message will be saved in. More...;  ; helper::logging::MessageHandler * m_handler { nullptr };  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html:709,message,message,709,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::component::sceneutility::PauseAnimationOnEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::PauseAnimationOnEvent Class Reference . #include <PauseAnimationOnEvent.h>. Inheritance diagram for sofa::component::sceneutility::PauseAnimationOnEvent:. [legend]. Public Attributes; bool paused;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:922,message,messages,922,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['message'],['messages']
Integrability,"﻿. SOFA API: sofa::component::topology::container::dynamic Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::topology::container::dynamic Namespace Reference . Classes; class  DynamicSparseGridGeometryAlgorithms;  ; class  DynamicSparseGridTopologyContainer;  ; class  DynamicSparseGridTopologyModifier;  ; class  BasicArrayInterface;  A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. More...;  ; class  EdgeSetGeometryAlgorithms;  ; class  EdgeSetTopologyContainer;  ; class  EdgeSetTopologyModifier;  ; class  HexahedronSetGeometryAlgorithms;  ; class  HexahedronSetTopologyContainer;  ; class  HexahedronSetTopologyModifier;  ; class  MultilevelHexahedronSetTopologyContainer;  ; class  MultilevelModification;  ; class  NumericalIntegrationDescriptor;  Cross product for 3-elements vectors. More...;  ; class  PointSetGeometryAlgorithms;  ; class  PointSetTopologyContainer;  ; class  PointSetTopologyModifier;  ; class  QuadSetGeometryAlgorithms;  ; class  QuadSetTopologyContainer;  ; class  QuadSetTopologyModifier;  ; class  TetrahedronSetGeometryAlgorithms;  ; class  TetrahedronSetTopologyContainer;  ; class  TetrahedronSetTopologyModifier;  ; class  TriangleSetGeometryAlgorithms;  ; class  TriangleSetTopologyContainer;  : Object that stores a set of triangles and provides access to each triangle and its edges and vertices More...;  ; class  TriangleSetTopologyModifier;  . Functions; template<class Real > ; Real areaProduct (const sofa::type::Vec< 3, Real > &a, const sofa::type::Vec< 3, Real > &b);  Cross product for 3-elements Vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 2, Real > &a, const type::Vec< 2, Real > &b);  area for 2-elements sofa::type::vectors. More...;  ; template<class Real > ; Real areaProduct (const type::Vec< 1, Real > &, const type::Vec< 1, Real > &);  ar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html:453,interface,interface,453,api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1topology_1_1container_1_1dynamic.html,1,['interface'],['interface']
Integrability,﻿. SOFA API: sofa::component::topology::container::dynamic::BasicArrayInterface< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::topology::container::dynamic::BasicArrayInterface< T > Class Template Referenceabstract . #include <EdgeSetGeometryAlgorithms.h>; A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. ; More...; Detailed Description; template<class T>; class sofa::component::topology::container::dynamic::BasicArrayInterface< T >; A class used as an interface with an array : Useful to compute geometric information on each edge in an efficient way. . Public Member Functions; virtual T & operator[] (int i)=0;  ; virtual ~BasicArrayInterface ();  . Constructor details. ◆ ~BasicArrayInterface(). template<class T > . virtual sofa::component::topology::container::dynamic::BasicArrayInterface< T >::~BasicArrayInterface ; (; ). inlinevirtual . Function details. ◆ operator[](). template<class T > . virtual T& sofa::component::topology::container::dynamic::BasicArrayInterface< T >::operator[] ; (; int ; i). pure virtual . sofacomponenttopologycontainerdynamicBasicArrayInterface; Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface.html:400,interface,interface,400,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_basic_array_interface.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::TriangleSetTopologyModifier Class Reference . #include <TriangleSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TriangleSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing triangles . Protected Attributes; Data< sofa::type::vector< TriangleID > > list_Out;  triangles with at least one null values. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:963,depend,depends,963,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['depend'],['depends']
Integrability,"﻿. SOFA API: sofa::component::topology::mapping::CenterPointTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::CenterPointTopologicalMapping Class Reference . #include <CenterPointTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::CenterPointTopologicalMapping:. [legend]; Detailed Description; This class, called CenterPointTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = any MeshTopology OUTPUT TOPOLOGY = A PointSetTopologie, as the boundary of the INPUT TOPOLOGY; Each primitive in the input Topology will be mapped to a point in the output topology.; CenterPointTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Member Functions;  SOFA_CLASS (CenterPointTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Method called at each topological changes propagation which comes from the INPUT topology to adapt the OUTPUT topology : More...;  ; Index getGlobIndex (Index ind) override;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html:587,interface,interface,587,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::topology::mapping::Edge2QuadTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::Edge2QuadTopologicalMapping Class Reference . #include <Edge2QuadTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Edge2QuadTopologicalMapping:. [legend]; Detailed Description; This class, called Edge2QuadTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = EdgeSetTopology OUTPUT TOPOLOGY = QuadSetTopology based on new DOFs, as the tubular skinning of INPUT TOPOLOGY.; Edge2QuadTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Attributes; Data< unsigned int > d_nbPointsOnEachCircle;  Discretization of created circles. More...;  ; Data< SReal > d_radius;  Radius of created circles in yz plan. More...;  ; Data< SReal > d_radiusFocal;  If greater than 0., radius in focal axis of created ellipses. More...;  ; Data< type::Vec3 > d_focalAxis;  In case of ellipses. More...;  ; Data< VecIndex > d_edgeList;  list of input edges for the topological mapping: by default, all considered More...;  ; Data< bool > d_flipNormals;  Flip Normal ? (Inverse point order when creating quad) More...;  ; SingleLink< Edge2QuadTopologicalMapping, topology::container::dynamic::QuadSetTopologyContainer, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_toQuadContainer;  Output container storing Quads. More...;  ; SingleLink< Edge2QuadTopologicalMapping, topology::container::dynamic::QuadSetTopologyModifier, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_toQuadModifier;  Output modifier handling Quads. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html:598,interface,interface,598,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::topology::mapping::Hexa2QuadTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::Hexa2QuadTopologicalMapping Class Reference . #include <Hexa2QuadTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Hexa2QuadTopologicalMapping:. [legend]; Detailed Description; This class, called Hexa2QuadTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = HexahedronSetTopology OUTPUT TOPOLOGY = QuadSetTopology, as the boundary of the INPUT TOPOLOGY; Hexa2QuadTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Protected Attributes; sofa::core::objectmodel::RenamedData< bool > flipNormals;  ; Data< bool > d_flipNormals;  Flip Normal ? (Inverse point order when creating triangle) More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologicalMapping; std::map< Index, Index > Glob2LocMap;  ; std::map< Index, sofa::type::vector< Index > > In2OutMap;  ; ElementType m_inputType = geometry::ElementType::UNKNOWN;  ; ElementType m_outputType = geometry::ElementType::UNKNOWN;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and alias",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping.html:601,interface,interface,601,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::topology::mapping::Hexa2TetraTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::Hexa2TetraTopologicalMapping Class Reference . #include <Hexa2TetraTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Hexa2TetraTopologicalMapping:. [legend]; Detailed Description; This class, called Hexa2TetraTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = HexahedronSetTopology OUTPUT TOPOLOGY = TetrahedronSetTopology; Tetra2TriangleTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Attributes; sofa::core::objectmodel::RenamedData< bool > swapping;  ; sofa::core::objectmodel::Data< bool > d_swapping;  Boolean enabling to swapp hexa-edges in order to avoid bias effect. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html:603,interface,interface,603,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::topology::mapping::Quad2TriangleTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::Quad2TriangleTopologicalMapping Class Reference . #include <Quad2TriangleTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Quad2TriangleTopologicalMapping:. [legend]; Detailed Description; This class, called Quad2TriangleTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = QuadSetTopology OUTPUT TOPOLOGY = TriangleSetTopology, as the constitutive elements of the INPUT TOPOLOGY; Quad2TriangleTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Member Functions;  SOFA_CLASS (Quad2TriangleTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping.html:597,interface,interface,597,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_quad2_triangle_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping Class Reference . #include <Tetra2TriangleTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping:. [legend]; Detailed Description; This class, called Tetra2TriangleTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = TetrahedronSetTopology OUTPUT TOPOLOGY = TriangleSetTopology, as the boundary of the INPUT TOPOLOGY; Tetra2TriangleTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Protected Attributes; sofa::core::objectmodel::RenamedData< bool > flipNormals;  ; sofa::core::objectmodel::RenamedData< bool > noNewTriangles;  ; sofa::core::objectmodel::RenamedData< bool > noInitialTriangles;  ; Data< bool > d_flipNormals;  Flip Normal ? (Inverse point order when creating triangle) More...;  ; Data< bool > d_noNewTriangles;  If true no new triangles are being created. More...;  ; Data< bool > d_noInitialTriangles;  If true the list of initial triangles is initially empty. Only additional triangles will be added in the list. More...;  ; sofa::type::vector< Index > addedTriangleIndex;  ; container::dynamic::TriangleSetTopologyModifier * m_outTopoModifier;  Pointer to the output topology modifier. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologicalMapping; std::map< Index, Index > Glob2LocMap;  ; std::map< Index, sofa::type::vector< Index > > In2OutMap;  ; ElementType m_inputType = geometry::ElementType::UNKNOWN;  ; ElementType m_outputType = geometry::ElementType::UNKNOWN;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Singl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html:626,interface,interface,626,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::topology::mapping::Triangle2EdgeTopologicalMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::Triangle2EdgeTopologicalMapping Class Reference . #include <Triangle2EdgeTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Triangle2EdgeTopologicalMapping:. [legend]; Detailed Description; This class, called Triangle2EdgeTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = TriangleSetTopology OUTPUT TOPOLOGY = EdgeSetTopology, as the boundary of the INPUT TOPOLOGY; Triangle2EdgeTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Member Functions;  SOFA_CLASS (Triangle2EdgeTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping.html:597,interface,interface,597,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core Namespace Reference . Namespaces;  behavior;  For BaseMatrix. ;  ;  collision;  ;  constraintparams;  ;  execparams;  ;  loader;  ;  matrixaccumulator;  ;  mechanicalparams;  ;  objectmodel;  ;  topology;  ;  visual;  . Classes; class  State;  Component storing position and velocity vectors. More...;  ; struct  AccumulationVecId;  Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. More...;  ; class  MappingMatrixAccumulator;  ; class  ListMappingMatrixAccumulator;  ; class  GeometricStiffnessMatrix;  ; class  BaseMapping;  ; class  BaseMatrixAccumulatorComponent;  ; struct  get_base_object_strong;  ; class  BaseState;  Component storing position and velocity vectors. More...;  ; class  BehaviorModel;  Abstract Interface of components defining the behavior of a simulated object. More...;  ; class  CategoryLibrary;  An Generic Category of the Sofa Library. More...;  ; class  BaseCollisionElementIterator;  Base class for reference to an collision element defin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:878,interface,interface,878,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess > Struct Template Reference . #include <AccumulationVecId.h>; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:680,interface,interface,680,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::BaseMapping Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseMapping Class Referenceabstract . #include <BaseMapping.h>. Inheritance diagram for sofa::core::BaseMapping:. [legend]; Detailed Description; An interface to convert a model state to an other model state. The model states are positions and velocities or generalizations of these (class sofa::core::BaseState). The source is denoted using various names: from, input, master, parent… The target is denoted using various names: to, output, slave, child… The mapping must be located somewhere between the master and the slave, so that the visitors traverse it after the master and before the slave during the top-down traversals, and the other way round during the bottom-up traversals. It is typically located in the same graph node as the slave, with the master in the parent node, but this is not a must. Mappings typically store constant local coordinates of the output points, and update the output points by applying input displacements to the local coordinates. . Public Attributes; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:389,interface,interface,389,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::BaseState Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::BaseState Class Referenceabstract . #include <BaseState.h>; Component storing position and velocity vectors. ; More... Inheritance diagram for sofa::core::BaseState:. [legend]; Detailed Description; Component storing position and velocity vectors. ; This class define the interface of components used as source and destination of regular (non mechanical) mapping. It is then specialized as MechanicalState (storing other mechanical data) or MappedModel (if no mechanical data is used, such as for VisualModel). . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; BaseData vectors access API based on VecId; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html:489,interface,interface,489,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::CollisionModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::CollisionModel Class Referenceabstract . #include <CollisionModel.h>; Abstract CollisionModel interface. ; More... Inheritance diagram for sofa::core::CollisionModel:. [legend]; Detailed Description; Abstract CollisionModel interface. ; A CollisionModel contains a list of same-type elements. It can be part of a list of CollisionModels, each describing a level in a bounding-volume hierarchy.; Each CollisionModel stores a pointer to the next model in the hierarchy (i.e. finer / lower / child level) as well as the previous model (i.e. coarser / upper / parent level). The first CollisionModel in this list is the root of the hierarchy and contains only one element. The last CollisionModel contains the leaves of the hierarchy which are the real elements of the object.; Each element inside CollisionModels except for the last one can have a list of children. There are 2 types of child elements: ; internal children: child elements of the same type as their parent (often corresponding to non-final elements) ; external children: child elements of a different type (often corresponding to the final elements) . Public Attributes; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:361,interface,interface,361,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::Mapping< TIn, TOut > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::Mapping< TIn, TOut > Class Template Referenceabstract . #include <Mapping.h>; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. ; More... Inheritance diagram for sofa::core::Mapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::Mapping< TIn, TOut >; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. . Public Attributes; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:406,interface,interface,406,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::MechanicalParams Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::MechanicalParams Class Reference . #include <MechanicalParams.h>; Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. ; More... Inheritance diagram for sofa::core::MechanicalParams:. [legend]; Detailed Description; Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. . Protected Attributes; SReal m_dt;  Time step. More...;  ; bool m_implicit;  Is the time integration scheme implicit ? More...;  ; bool m_energy;  Should the kinematic and potential energies be computed ? More...;  ; ConstMultiVecCoordId m_x;  Ids of position vector. More...;  ; ConstMultiVecDerivId m_v;  Ids of velocity vector. More...;  ; ConstMultiVecDerivId m_f;  Ids of force vector. More...;  ; ConstMultiVecDerivId m_dx;  Ids of dx vector (for implicit schemes) More...;  ; ConstMultiVecDerivId m_df;  Ids of df vector (for implicit schemes) More...;  ; SReal m_mFactor;  Mass matrix contributions factor (for implicit schemes) More...;  ; SReal m_bFactor;  Damping matrix contributions factor (for implicit schemes) More...;  ; SReal m_kFactor;  Stiffness matrix contributions factor (for implicit schemes) More...;  ; bool m_supportOnlySymmetricMatrix;  True if a symmetric matrix is assumed in the left-hand term of the dynamics equations, for solvers specialized on symmetric matrices. More...;  . Public Member Functions; bool symmetricMatrix () const =delete;  ; bool supportOnlySymmetricMatrix () const;  Symmetric matrix flag, for solvers specialized on symmetric matrices. More...;  ; bool energy () const;  Should the kinematic and potential energies be computed ? More...;  ;  MechanicalParams (const sofa::core::ExecParams &p=sofa::core::ExecParams());  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:715,integrat,integration,715,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::Multi2Mapping< TIn1, TIn2, TOut > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::Multi2Mapping< TIn1, TIn2, TOut > Class Template Referenceabstract . #include <Multi2Mapping.h>; Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. ; More... Inheritance diagram for sofa::core::Multi2Mapping< TIn1, TIn2, TOut >:. [legend]; Detailed Description; template<class TIn1, class TIn2, class TOut>; class sofa::core::Multi2Mapping< TIn1, TIn2, TOut >; Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object boundi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html:438,interface,interface,438,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::MultiMapping< TIn, TOut > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::MultiMapping< TIn, TOut > Class Template Referenceabstract . #include <MultiMapping.h>; Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. ; More... Inheritance diagram for sofa::core::MultiMapping< TIn, TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::core::MultiMapping< TIn, TOut >; Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object boundi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html:421,interface,interface,421,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::ObjectFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::ObjectFactory Class Reference . #include <ObjectFactory.h>. Classes; class  ClassEntry;  Record storing information about a class. More...;  ; class  Creator;  Abstract interface of objects used to create instances of a given type. More...;  . Protected Attributes; ClassEntryMap registry;  Main class registry. More...;  ; OnCreateCallback m_callbackOnCreate;  ; RegisteredPluginSet m_registeredPluginSet;  . Public Member Functions;  ~ObjectFactory ();  ; ClassEntry & getEntry (std::string classname);  Get an entry given a class name (or alias) More...;  ; bool hasCreator (std::string classname);  Test if a creator exists for a given classname. More...;  ; std::string shortName (std::string classname);  ; void getAllEntries (std::vector< ClassEntry::SPtr > &result, bool filterUnloadedPlugins=true);  Fill the given vector with all the registered classes. More...;  ; void getEntriesFromTarget (std::vector< ClassEntry::SPtr > &result, std::string target);  Fill the given vector with the registered classes from a given target. More...;  ; std::string listClassesFromTarget (std::string target, std::string separator="", "");  Return the list of classes from a given target. More...;  ; template<class BaseClass > ; void getEntriesDerivedFrom (std::vector< ClassEntry::SPtr > &result) const;  Fill the given vector with all the registered classes derived from BaseClass. More...;  ; template<class BaseClass > ; std::string listClassesDerivedFrom (const std::string &separator="", "") const;  Return the list of classes derived from BaseClass as a string. More...;  ; bool addAlias (std::string name, std::string target, bool force=false, ClassEntry::SPtr *previous=nullptr);  ; void resetAlias (std::string name, ClassEntry::SPtr previ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html:429,interface,interface,429,api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::ObjectFactory::Creator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::ObjectFactory::Creator Class Referenceabstract . #include <ObjectFactory.h>; Abstract interface of objects used to create instances of a given type. ; More... Inheritance diagram for sofa::core::ObjectFactory::Creator:. [legend]; Detailed Description; Abstract interface of objects used to create instances of a given type. . Public Member Functions; virtual ~Creator ();  ; virtual bool canCreate (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)=0;  ; virtual objectmodel::BaseObject::SPtr createInstance (objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg)=0;  ; virtual const std::type_info & type ()=0;  type_info structure associated with the type of intanciated objects. More...;  ; virtual const objectmodel::BaseClass * getClass ()=0;  BaseClass structure associated with the type of intanciated objects. More...;  ; virtual const char * getTarget ()=0;  The name of the library or executable containing the binary code for this component. More...;  ; virtual const char * getHeaderFileLocation ()=0;  . Constructor details. ◆ ~Creator(). virtual sofa::core::ObjectFactory::Creator::~Creator ; (; ). inlinevirtual . Function details. ◆ canCreate(). virtual bool sofa::core::ObjectFactory::Creator::canCreate ; (; objectmodel::BaseContext * ; context, . objectmodel::BaseObjectDescription * ; arg . ). pure virtual . Pre-construction check.; Returnstrue if the object can be created successfully. ; Implemented in sofa::core::ObjectCreator< RealObject >. ◆ createInstance(). virtual objectmodel::BaseObject::SPtr sofa::core::ObjectFactory::Creator::createInstance ; (; objectmodel::BaseContext * ; context, . objectmodel::BaseObjectDescription * ; arg . ). pure virtual . Construction method called by the factory.; PreconditioncanCreate(cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_creator.html:286,interface,interface,286,api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_object_factory_1_1_creator.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::State< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::State< TDataTypes > Class Template Referenceabstract . #include <State.h>; Component storing position and velocity vectors. ; More... Inheritance diagram for sofa::core::State< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::core::State< TDataTypes >; Component storing position and velocity vectors. ; This class define the interface of components used as source and destination of regular (non mechanical) mapping. It is then specialized as MechanicalState (storing other mechanical data) or MappedModel (if no mechanical data is used, such as for VisualModel).; The given DataTypes class should define the following internal types: ; Real ; sofa::core::State::RealDataTypes::Real RealScalar values (float or double).Definition: State.h:59; : scalar values (float or double). ; Coord ; sofa::core::State::CoordDataTypes::Coord CoordPosition values.Definition: State.h:61; : position values. ; Deriv ; Deriv; : derivative values (velocity). ; VecReal ; VecReal; : container of scalar values with the same API as sofa::type::vector. ; VecCoord ; sofa::core::State::VecCoordDataTypes::VecCoord VecCoordContainer of Coord values with the same API as sofa::type::vector.Definition: State.h:67; : container of Coord values with the same API as sofa::type::vector. ; VecDeriv ; sofa::core::State::VecDerivDataTypes::VecDeriv VecDerivContainer of Deriv values with the same API as sofa::type::vector.Definition: State.h:69; : container of Deriv values with the same API as sofa::type::vector. ; MatrixDeriv ; sofa::core::State::MatrixDerivDataTypes::MatrixDeriv MatrixDerivVector of Jacobians (sparse constraint matrices).Definition: State.h:71; : vector of Jacobians (sparse constraint matrices). . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(State, TDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html:570,interface,interface,570,api/master/sofa/html/classsofa_1_1core_1_1_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::behavior Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::core::behavior Namespace Reference . For BaseMatrix. ; More... Classes; class  MechanicalState;  Component storing all state vectors of a simulated body (position, velocity, etc), using the datatype specified in the templace. More...;  ; class  BaseAnimationLoop;  Component responsible for main animation algorithms, managing how and when mechanical computation happens in one animation step. More...;  ; class  BaseConstraint;  Component computing constraints within a simulated body. More...;  ; class  BaseConstraintCorrection;  Component computing constraint forces within a simulated body using the compliance method. More...;  ; class  BaseConstraintSet;  ; class  BaseController;  BaseController Class. Interface of user interaction on SOFA Components. Empty class to provide an interface for the Factory. More...;  ; class  BaseForceField;  Component computing forces within simulated bodies. More...;  ; class  BaseInteractionConstraint;  BaseInteractionConstraint is a constraint linking several bodies (MechanicalState) together. More...;  ; class  BaseInteractionForceField;  BaseInteractionForceField is a force field linking several bodies (MechanicalState) together. More...;  ; class  BaseInteractionProjectiveConstraintSet;  BaseInteractionProjectiveConstraintSet is a constraint linking several bodies (MechanicalState) together. More...;  ; class  BaseLinearSolver;  Abstract base class (as type identifier) for linear system solvers without any API. More...;  ; class  StiffnessMatrixAccumulator;  ; class  ListStiffnessMatrixAccumulator;  ; class  DampingMatrixAccumulator;  ; class  ListDampingMatrixAccumulator;  ; class  StiffnessMatrix;  ; class  DampingMatrix;  ; class  MassMatrixAccumulator;  ; class  ListMassMatrixAccumulator;  ; class  MassMatrix;  ; class  BaseMass;  C",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html:986,interface,interface,986,api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::behavior::BaseAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::BaseAnimationLoop Class Referenceabstract . #include <BaseAnimationLoop.h>; Component responsible for main animation algorithms, managing how and when mechanical computation happens in one animation step. ; More... Inheritance diagram for sofa::core::behavior::BaseAnimationLoop:. [legend]; Detailed Description; Component responsible for main animation algorithms, managing how and when mechanical computation happens in one animation step. ; This class can optionally replace the default computation scheme of computing collisions then doing an integration step.; Note that it is in a preliminary stage, hence its functionalities and API will certainly change soon. . Public Attributes; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html:837,integrat,integration,837,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::behavior::BaseController Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::BaseController Class Reference . #include <BaseController.h>; BaseController Class. Interface of user interaction on SOFA Components. Empty class to provide an interface for the Factory. ; More... Inheritance diagram for sofa::core::behavior::BaseController:. [legend]; Detailed Description; BaseController Class. Interface of user interaction on SOFA Components. Empty class to provide an interface for the Factory. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller.html:372,interface,interface,372,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::behavior::BaseForceField Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::BaseForceField Class Referenceabstract . #include <BaseForceField.h>; Component computing forces within simulated bodies. ; More... Inheritance diagram for sofa::core::behavior::BaseForceField:. [legend]; Detailed Description; Component computing forces within simulated bodies. ; This class define the abstract API common to all force fields. A force field computes forces applied to one or more simulated body given its current position and velocity.; Forces can be internal to a given body (attached to one MechanicalState, see the ForceField class), or link several bodies together (such as contact forces, see the InteractionForceField class).; For implicit integration schemes, it must also compute the derivative ( df, given a displacement dx ). . Public Attributes; Rayleigh Damping (stiffness contribution); Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:905,integrat,integration,905,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::behavior::BaseInteractionForceField Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::BaseInteractionForceField Class Reference . #include <BaseInteractionForceField.h>; BaseInteractionForceField is a force field linking several bodies (MechanicalState) together. ; More... Inheritance diagram for sofa::core::behavior::BaseInteractionForceField:. [legend]; Detailed Description; BaseInteractionForceField is a force field linking several bodies (MechanicalState) together. ; An interaction force field computes forces applied to several simulated bodies given their current positions and velocities.; For implicit integration schemes, it must also compute the derivative ( df, given a displacement dx ). . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addForce (const MechanicalParams *mparams, MultiVecDerivId fId)=0;  Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField. More...;  ; virtual void addDForce (const MechanicalParam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html:752,integrat,integration,752,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::behavior::BaseMass Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::BaseMass Class Referenceabstract . #include <BaseMass.h>; Component responsible for mass-related computations (gravity, acceleration). ; More... Inheritance diagram for sofa::core::behavior::BaseMass:. [legend]; Detailed Description; Component responsible for mass-related computations (gravity, acceleration). ; Mass can be defined either as a scalar, vector, or a full mass-matrix. It is responsible for converting forces to accelerations (for explicit integrators), or displacements to forces (for implicit integrators).; It is often also a ForceField, computing gravity-related forces. . Public Attributes; Data< bool > m_separateGravity;  ; Rayleigh Damping (mass contribution); Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html:712,integrat,integrators,712,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,2,['integrat'],['integrators']
Integrability,"﻿. SOFA API: sofa::core::behavior::BaseRotationFinder Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::BaseRotationFinder Class Referenceabstract . #include <BaseRotationFinder.h>. Inheritance diagram for sofa::core::behavior::BaseRotationFinder:. [legend]. Public Member Functions; virtual void getRotations (linearalgebra::BaseMatrix *m, int offset=0)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the give",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_rotation_finder.html:917,depend,dependent,917,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_rotation_finder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_rotation_finder.html,1,['depend'],['dependent']
Integrability,"﻿. SOFA API: sofa::core::behavior::ForceField< TDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::ForceField< TDataTypes > Class Template Referenceabstract . #include <ForceField.h>; Component computing forces within a simulated body. ; More... Inheritance diagram for sofa::core::behavior::ForceField< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::core::behavior::ForceField< TDataTypes >; Component computing forces within a simulated body. ; This class defines the abstract API common to force fields using a given type of DOFs. A force field computes forces applied to one simulated body given its current position and velocity.; For implicit integration schemes, it must also compute the derivative ( df, given a displacement dx ). . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, TDataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; Vector operations; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; virtual void addForce (const MechanicalParams *, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v)=0;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addDForce (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx)=0;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; virtual SReal getPotentialEnergy (const MechanicalParams *, const DataVecCoord &x) const =0;  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given L",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html:885,integrat,integration,885,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::behavior::LinearSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::LinearSolver Class Referenceabstract . #include <LinearSolver.h>; Abstract interface for linear system solvers. ; More... Inheritance diagram for sofa::core::behavior::LinearSolver:. [legend]; Detailed Description; Abstract interface for linear system solvers. . Protected Attributes; bool frozen;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (LinearSolver, BaseLinearSolver);  ; virtual void resetSystem ()=0;  Reset the current linear system. More...;  ; virtual void setSystemMBKMatrix (const MechanicalParams *mparams)=0;  ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool isAsyncSolver ();  Indicate if the solver update the system in parallel. More...;  ; virtual bool supportNonSymmetricSystem () const;  Returns true if the solver supports non-symmetric systems. More...;  ; virtual bool hasUpdatedMatrix ();  Indicate if the solver updated the system after the last call of setSystemMBKMatrix (should return true if isParallelSolver return false) More...;  ; virtual void updateSystemMatrix ();  This function is use for the preco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html:339,interface,interface,339,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::behavior::Mass< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::Mass< DataTypes > Class Template Reference . #include <Mass.h>; Component responsible for mass-related computations (gravity, acceleration). ; More... Inheritance diagram for sofa::core::behavior::Mass< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::core::behavior::Mass< DataTypes >; Component responsible for mass-related computations (gravity, acceleration). ; Mass can be defined either as a scalar, vector, or a full mass-matrix. It is responsible for converting forces to accelerations (for explicit integrators), or displacements to forces (for implicit integrators).; It is also a ForceField, computing gravity-related forces. . Protected Attributes; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:822,integrat,integrators,822,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,2,['integrat'],['integrators']
Integrability,"﻿. SOFA API: sofa::core::behavior::OdeSolver Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::OdeSolver Class Referenceabstract . #include <OdeSolver.h>; Component responsible for timestep integration, i.e. advancing the state from time t to t+dt. ; More... Inheritance diagram for sofa::core::behavior::OdeSolver:. [legend]; Detailed Description; Component responsible for timestep integration, i.e. advancing the state from time t to t+dt. ; This class currently control both the integration scheme (explicit, implicit, static, etc), and the linear system resolution algorithm (conjugate gradient, matrix direct inversion, etc). Those two aspect will probably be separated in a future version.; While all computations required to do the integration step are handled by this object, they should not be implemented directly in it, but instead the solver propagates orders (or Visitor) to the other components in the scenegraph that will locally execute them. This allow for greater flexibility (the solver can just ask for the forces to be computed without knowing what type of forces are present), as well as performances (some computations can be executed in parallel). . Public Member Functions;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *, SReal, MultiVecCoordId, MultiVecDerivId)=0;  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; virtual SReal getIntegrationFactor (int, int) const;  ; virtual SReal getSolutionIntegrationFactor (int) const;  ; virtual SReal getVelocityIntegrationFactor () const;  ; virtual SReal getPositionIntegrationFactor () const;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:332,integrat,integration,332,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,4,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::collision Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::core::collision Namespace Reference . Classes; class  BroadPhaseDetection;  given a set of root collision models, computes potentially colliding pairs. More...;  ; class  CollisionAlgorithm;  ; class  CollisionGroupManager;  Given a set of contacts, create integration groups. More...;  ; class  Contact;  contact response component handling the response between a pair of models More...;  ; class  ContactManager;  Given a set of detected contact points, create contact response components. More...;  ; class  Detection;  ; class  DetectionOutput;  Generic description of a contact point, used for most collision models except special cases such as GPU-based collisions. More...;  ; class  DetectionOutputVector;  Abstract description of a set of contact point. More...;  ; class  TDetectionOutputVector;  Generic description of a set of contact point between two specific collision models. More...;  ; class  BaseIntersector;  ; class  ElementIntersector;  ; class  IntersectorMap;  ; class  Intersection;  Given 2 collision elements, test if an intersection is possible (for bounding volumes), or compute intersection points if any. More...;  ; class  MemberElementIntersector;  ; class  BaseIntersectorCreator;  ; class  IntersectorFactory;  ; class  IntersectorCreator;  ; class  NarrowPhaseDetection;  Given a set of potentially colliding pairs of models, compute set of contact points. More...;  ; class  Pipeline;  Pipeline component gather list of collision models and control the sequence of computations. More...;  . sofacorecollision; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html:403,integrat,integration,403,api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1collision.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::collision::CollisionGroupManager Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::collision::CollisionGroupManager Class Referenceabstract . #include <CollisionGroupManager.h>; Given a set of contacts, create integration groups. ; More... Inheritance diagram for sofa::core::collision::CollisionGroupManager:. [legend]; Detailed Description; Given a set of contacts, create integration groups. ; For each pair of objects in contacts :. Look which mechanical integration algorithm is used; If they are “compatible”, create a algorithm merging them; Often simply the most stable of the two. Explicit Euler + Explicit Runge Kutta -> Explicit Runge Kutta; Explicit * + Implicit Euler -> Implicit Euler . Protected Attributes; sofa::type::vector< core::objectmodel::BaseContext::SPtr > groups;  integration groups More...;  ; std::map< Instance, sofa::type::vector< core::objectmodel::BaseContext::SPtr > > storedGroups;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:391,integrat,integration,391,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,4,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::core::get_base_object_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::get_base_object_strong< c > Struct Template Reference . #include <BaseMatrixAccumulatorComponent.h>; Detailed Description; template<matrixaccumulator::Contribution c>; struct sofa::core::get_base_object_strong< c >; Provides member typedef type for known Contribution using SFINAE; Typedef type is an abstract strong type derived from MatrixAccumulator and BaseObject, and depending on . sofacoreget_base_object_strong; Generated on Mon Nov 11 2024 03:14:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html:561,depend,depending,561,api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1get__base__object__strong.html,1,['depend'],['depending']
Integrability,"﻿. SOFA API: sofa::core::loader::BaseLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::core::loader::BaseLoader Class Referenceabstract . #include <BaseLoader.h>. Inheritance diagram for sofa::core::loader::BaseLoader:. [legend]. Public Attributes; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool load ()=0;  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html:915,message,messages,915,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,1,['message'],['messages']
Integrability,﻿. SOFA API: sofa::core::matrixaccumulator::get_abstract_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_abstract_strong< c > Struct Template Reference . #include <MatrixAccumulator.h>; Detailed Description; template<Contribution c>; struct sofa::core::matrixaccumulator::get_abstract_strong< c >; Provides member typedef @type for known Contribution using SFINAE; Typedef @type is an abstract strong type derived from @MatrixAccumulatorInterface and depending on Typedef @ComponentType is the type of object associated to the Contribution . sofacorematrixaccumulatorget_abstract_strong; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html:551,depend,depending,551,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__abstract__strong.html,1,['depend'],['depending']
Integrability,﻿. SOFA API: sofa::core::matrixaccumulator::get_list_abstract_strong< c > Struct Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::core::matrixaccumulator::get_list_abstract_strong< c > Struct Template Reference . #include <MatrixAccumulator.h>; Detailed Description; template<Contribution c>; struct sofa::core::matrixaccumulator::get_list_abstract_strong< c >; Provides member typedef @type for known Contribution using SFINAE; Typedef @type is an abstract strong type derived from @ListMatrixAccumulator and depending on . sofacorematrixaccumulatorget_list_abstract_strong; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html:561,depend,depending,561,api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1matrixaccumulator_1_1get__list__abstract__strong.html,1,['depend'],['depending']
Integrability,"﻿. SOFA API: sofa::core::objectmodel::BaseContext Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::BaseContext Class Reference . #include <BaseContext.h>; Base class for Context classes, storing shared variables and parameters. ; More... Inheritance diagram for sofa::core::objectmodel::BaseContext:. [legend]; Detailed Description; Base class for Context classes, storing shared variables and parameters. ; A Context contains values or pointers to variables and parameters shared by a group of objects, typically referring to the same simulated body. Derived classes can defined simple isolated contexts or more powerful hierarchical representations (scene-graphs), in which case the context also implements the BaseNode interface.; AuthorJeremie Allard . Classes; class  GetObjectsCallBack;  ; class  GetObjectsCallBackT;  Helper functor allowing to insert an object into a container. More...;  . Protected Attributes; ComponentNameHelper m_nameHelper;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseContext, Base);  ; virtual const Vec3 & getGravity () const;  Gravity in local coordinates. More...;  ; virtual void setGravity (const Vec3 &);  Gravity in local coordinates. More...;  ; virtual BaseContext * getRootContext () const;  Get the root context of the graph. More...;  ; virtual bool hasAncestor (const BaseContext *) const;  ; Compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:948,interface,interface,948,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::objectmodel::BaseData Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::BaseData Class Referenceabstract . #include <BaseData.h>; Abstract base class for Data. ; More... Inheritance diagram for sofa::core::objectmodel::BaseData:. [legend]; Detailed Description; Abstract base class for Data. . Classes; class  BaseInitData;  This internal class is used by the initData() methods to store initialization parameters of a Data. More...;  . Public Attributes; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  . Public Member Functions; virtual BaseData * getNewInstance ();  ;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; virtual bool read (const std::string &value)=0;  ; virtual void printValue (std::ostream &) co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:721,message,message,721,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::core::objectmodel::BaseLink Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseLink Class Referenceabstract . #include <BaseLink.h>; Abstract base class for all links in the scene grapn, independently of their type. ; More... Inheritance diagram for sofa::core::objectmodel::BaseLink:. [legend]; Detailed Description; Abstract base class for all links in the scene grapn, independently of their type. . Classes; class  BaseInitLink;  This internal class is used by the initLink() methods to store initialization parameters of a Data. More...;  ; class  InitLink;  This internal class is used by the initLink() methods to store initialization parameters of a Data. More...;  . Public Member Functions;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; virtual Base * getOwnerBase () const =0;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLink",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:1096,message,message,1096,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['message'],['message']
Integrability,﻿. SOFA API: sofa::core::objectmodel::DDGNode Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::DDGNode Class Referenceabstract . #include <DDGNode.h>; A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. ; More... Inheritance diagram for sofa::core::objectmodel::DDGNode:. [legend]; Detailed Description; A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. . Protected Attributes; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html:366,depend,dependencies,366,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_d_d_g_node.html,4,['depend'],"['dependencies', 'dependency']"
Integrability,"﻿. SOFA API: sofa::core::objectmodel::DataLink< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::objectmodel::DataLink< T > Class Template Referencefinal . #include <DataLink.h>; DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. ; More... Inheritance diagram for sofa::core::objectmodel::DataLink< T >:. [legend]; Detailed Description; template<class T>; class sofa::core::objectmodel::DataLink< T >; DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. . Public Member Functions;  DataLink (T &owner);  ; virtual ~DataLink ();  ; T * getTarget () const;  ; void unSet ();  ; bool isSet () const;  ; void setTarget (T *target);  ; T & getOwner () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::AbstractDataLink; const BaseData & getOwner () const;  ; void setTarget (BaseData *target);  Change the targeted DataField and set the path to the empty string. More...;  ; BaseData * getTarget () const;  Get the targeted DataField. More...;  ; bool hasTarget () const;  Returns true if there is a target. More...;  ; const std::string getPath () const;  Get the path (is any) More...;  ; void setPath (const std::string &path);  Set the path, try to resolve it, on success set the DataField. More...;  ; bool hasPath () const;  Returns true if the path is set (and thus getTarget() == nullptr) More...;  ; bool resolvePathAndSetTarget ();  ; BaseData * resolvePathAndGetTarget ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::AbstractDataLink; std::string m_path {""""};  . Constructor details. ◆ DataLink(). template<class T > . sofa::core::objectmodel::DataLink< T >::DataL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link.html:455,interface,interface,455,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_link.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::objectmodel::EmptyData Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. List of all members . sofa::core::objectmodel::EmptyData Class Reference . #include <Data.h>. Inheritance diagram for sofa::core::objectmodel::EmptyData:. [legend]. Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< void * >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< void * >; void * m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Public Member Functions inherited from sofa::core::objectmodel::Data< void * >;  Data (const Data &)=delete;  ; const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const override;  Get info about the value type of the associated variable. More...;  ; bool read (const std::string &s) override;  ; bool SOFA_CORE_API read (c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html:674,message,message,674,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_empty_data.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::core::objectmodel::ScriptEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::ScriptEvent Class Reference . #include <ScriptEvent.h>; Generic Event class to send a message through the simulation graph. ; More... Inheritance diagram for sofa::core::objectmodel::ScriptEvent:. [legend]; Detailed Description; Generic Event class to send a message through the simulation graph. . Public Member Functions;  ScriptEvent (sofa::core::sptr< sofa::core::objectmodel::BaseNode > sender, const char *eventName);  Constructor. More...;  ;  ~ScriptEvent () override;  Destructor. More...;  ; const sofa::core::sptr< sofa::core::objectmodel::BaseNode > getSender (void) const;  Get the sender name. More...;  ; const std::string & getEventName (void) const;  Get the event name. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ ScriptEvent(). sofa::core::objectmodel::ScriptEvent::ScriptEvent ; (; sofa::core::sptr< sofa::core::objectmodel::BaseNode > ; sender,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html:335,message,message,335,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_script_event.html,2,['message'],['message']
Integrability,"﻿. SOFA API: sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr > Class Template Reference . #include <Link.h>; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. ; More...; Detailed Description; template<class T, class TDestPtr, class TPtr = T*>; class sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >; Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. . Protected Attributes; bool isEmpty {true};  ; TPtr elems [1];  . Public Member Functions;  SinglePtr ();  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; const_iterator cbegin () const;  ; const_iterator cend () const;  ; const_reverse_iterator crbegin () const;  ; const_reverse_iterator crend () const;  ; std::size_t size () const;  ; void resize (size_t size);  ; bool empty () const;  ; void clear ();  ; const TPtr & get () const;  ; TPtr & get ();  ; void add (TDestPtr v);  ; void addBegin (TDestPtr v);  ; const TPtr & operator[] (std::size_t i) const;  ; TPtr & operator[] (std::size_t i);  ; const TPtr & operator() (std::size_t i) const;  ; TPtr & operator() (std::size_t i);  ;  operator T* () const;  ; T * operator-> () const;  . Attribute details. ◆ elems. template<class T , class TDestPtr , class TPtr = T*> . TPtr sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::elems[1]. protected . ◆ isEmpty. template<class T , class TDestPtr , class TPtr = T*> . bool sofa::core::objectmodel::SinglePtr< T, TDestPtr, TPtr >::isEmpty {true}. protected . Constructor details. ◆ SinglePtr(). template<class T , class TD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html:378,interface,interface,378,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_ptr.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::topology::BaseTopologyData< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::core::topology::BaseTopologyData< T > Class Template Reference . #include <BaseTopologyData.h>. Inheritance diagram for sofa::core::topology::BaseTopologyData< T >:. [legend]; Detailed Description; template<class T = void*>; class sofa::core::topology::BaseTopologyData< T >; A class that define topological Data general methods . Protected Attributes; sofa::core::topology::BaseMeshTopology * m_topology = nullptr;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex = 0;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< void * >; void * m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  BaseTopologyData (const sofa::core::objectmodel::BaseData::BaseInitData &init);  ; virtual void add (const sofa::type::vector< Topology::PointID > &, const sofa::type::vector< Topology::Point > &, const sofa::type::vector< sofa::type::vector< Topology::PointID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< PointAncestorElem > &);  Add some values. Values are added at the end of the vector. More...;  ; virtual void add (const sofa::type::vector< Topology::EdgeID > &, const sofa::type::vector< Topology::Edge > &, const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > &, const sofa::type::vector< sofa::type::vector< SReal > > &, const sofa::type::vector< EdgeAncestorElem > &);  ; virtual void add (const sofa::type::vector< Topology::TriangleID > &, const sofa::type::vector< Topology::Triangle > &, const sofa::type::vector< sofa::type::vector< Topology::TriangleID > > &, const sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html:698,depend,depending,698,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,1,['depend'],['depending']
Integrability,"﻿. SOFA API: sofa::core::topology::BaseTopologyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::BaseTopologyObject Class Reference . #include <BaseTopologyObject.h>. Inheritance diagram for sofa::core::topology::BaseTopologyObject:. [legend]. Public Member Functions;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html:1052,depend,dependent,1052,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_object.html,1,['depend'],['dependent']
Integrability,"﻿. SOFA API: sofa::core::topology::TopologyData< ElementType, VecT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyData< ElementType, VecT > Class Template Reference . #include <TopologyData.h>; A class for storing topology related data. Automatically manages topology changes. ; More... Inheritance diagram for sofa::core::topology::TopologyData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologyData< ElementType, VecT >; A class for storing topology related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: element added, removed, fused, renumbered). . Public Attributes; std::function< void(Index, value_type &)> p_onDestructionCallback;  ; std::function< void(Index, value_type &, const ElementType &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)> p_onCreationCallback;  ;  Public Attributes inherited from sofa::core::objectmodel::Data< T >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:815,wrap,wrapper,815,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,1,['wrap'],['wrapper']
Integrability,"﻿. SOFA API: sofa::core::topology::TopologyModifier Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologyModifier Class Reference . #include <BaseTopology.h>. Inheritance diagram for sofa::core::topology::TopologyModifier:. [legend]; Detailed Description; A class that contains a set of low-level methods that perform topological changes . Protected Attributes; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void propagateStateChanges ();  Called by a topology to warn the Mechanical Object component that points have been added or will be removed. More...;  ; virtual void propagateTopologicalChanges ();  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void notifyEndingEvent ();  notify the end for the current sequence of topol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html:661,depend,depends,661,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,1,['depend'],['depends']
Integrability,"﻿. SOFA API: sofa::core::topology::TopologySubsetData< ElementType, VecT > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologySubsetData< ElementType, VecT > Class Template Reference . #include <TopologySubsetData.h>; A class for storing element related data. Automatically manages topology changes. ; More... Inheritance diagram for sofa::core::topology::TopologySubsetData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologySubsetData< ElementType, VecT >; A class for storing element related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: elements added, removed, fused, renumbered). . Protected Attributes; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains id of element link to each data[] More...;  ; bool m_addNewElements = false;  ;  Protected Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< VecT >::InitData ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:822,wrap,wrapper,822,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,1,['wrap'],['wrapper']
Integrability,"﻿. SOFA API: sofa::core::topology::TopologySubsetIndices Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::topology::TopologySubsetIndices Class Reference . #include <TopologySubsetIndices.h>; A class for storing point indices. Automatically manages topological changes on Point. ; More... Inheritance diagram for sofa::core::topology::TopologySubsetIndices:. [legend]; Detailed Description; A class for storing point indices. Automatically manages topological changes on Point. ; This class is a TopologySubsetData templated on PointData and wrapping a type::vector <Index>. The type::vector <Index> works as a map storing the global indices of the Point this subset is applied on. For example a TopologySubsetIndices of size N can be used in a FixConstraint to store the N fixed points. If the points are removed this subset will follow the changes and remove the constraints. . Public Member Functions;  TopologySubsetIndices (const typename sofa::core::topology::BaseTopologyData< type::vector< Index > >::InitData &data);  Default Constructor to init Data. More...;  ; Index indexOfElement (Index index) const override;  ; const type::vector< Index > indicesOfElement (Index index) const override;  ; void createTopologyHandler (sofa::core::topology::BaseMeshTopology *_topology) override;  Function to create topology handler to manage this Data. More...;  ; Index getLastElementIndex () const override;  Return the last element index of the topolgy buffer this Data is linked to. More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< type::vector< Index > >::InitData &data);  Default Constructor to init Data. More...;  ; void setMap2Elements (const sofa::type::vector< Index > _",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html:675,wrap,wrapping,675,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,1,['wrap'],['wrapping']
Integrability,"﻿. SOFA API: sofa::core::visual Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Enumerations |; Functions |; Variables . sofa::core::visual Namespace Reference . Namespaces;  visualparams;  . Classes; class  DisplayFlags;  Class which describes the display of components in a hierarchical fashion DisplayFlags are conveyed by the VisualParams, and therefore are accessible in a read only fashion inside a Component draw method. A component can tell if it should draw something on the display by looking at the current state of the displayFlags through the VisualParams parameter. DisplayFlags are embeddable inside a Data and can therefore read/write their state from a stream. More...;  ; class  FlagTreeItem;  ; class  Shader;  A basic interface to define a Shader for different system (OpenGL, DirectX, ...). More...;  ; class  ShaderElement;  A basic interface to define an element to be used with a Shader. More...;  ; struct  tristate;  ; class  VisualLoop;  ; class  VisualManager;  ; class  VisualModel;  An interface which all VisualModel inherit. More...;  ; class  VisualParams;  Class gathering parameters used by visual components and by the draw method of each component. Transmitted by visitors. More...;  ; class  VisualState;  . Enumerations; enum  { API_OpenGL = 0; , API_OGRE = 1; , API_OpenSceneGraph = 2; , API_OpenSG = 3; };  The enumeration used to describe potentially supported graphics API. More...;  . Functions; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const FlagTreeItem &root);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, FlagTreeItem &root);  ; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const DisplayFlags &flags);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, DisplayFlags &flags);  ; DisplayFlags merge_displayFlags (const DisplayFlags &previous, const DisplayFlags &current);  ; DisplayFlags difference_displayFlags (const Dis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html:810,interface,interface,810,api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::visual::Shader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::Shader Class Referenceabstract . #include <Shader.h>; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). ; More... Inheritance diagram for sofa::core::visual::Shader:. [legend]; Detailed Description; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ; virtual void start ()=0;  Start the shader. More...;  ; virtual void stop ()=0;  Stop the shader. More...;  ; virtual bool isActive ()=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html:292,interface,interface,292,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::visual::ShaderElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::ShaderElement Class Referenceabstract . #include <Shader.h>; A basic interface to define an element to be used with a Shader. ; More... Inheritance diagram for sofa::core::visual::ShaderElement:. [legend]; Detailed Description; A basic interface to define an element to be used with a Shader. . Public Member Functions;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual ShaderElementType getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const std::string & getSEID () const =0;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html:306,interface,interface,306,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader_element.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::core::visual::VisualModel Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::visual::VisualModel Class Reference . #include <VisualModel.h>; An interface which all VisualModel inherit. ; More... Inheritance diagram for sofa::core::visual::VisualModel:. [legend]; Detailed Description; An interface which all VisualModel inherit. ; This Interface is used for the VisualModel, which all visible objects must implement.; VisualModels are drawn by calling their draw method. The method update is used to recompute some internal data (such as normals) after the simulation has computed a new timestep.; Most VisualModel are bound by a Mapping to a BehaviorModel or MechanicalState. . Public Attributes; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:315,interface,interface,315,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::defaulttype::DataTypeInfoDynamicWrapper< Info > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::defaulttype::DataTypeInfoDynamicWrapper< Info > Class Template Reference . #include <DataTypeInfoDynamicWrapper.h>; wrap a DataTypeInfo type_traits in an AbstractTypeInfo; More... Inheritance diagram for sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >:. [legend]; Detailed Description; template<class Info>; class sofa::defaulttype::DataTypeInfoDynamicWrapper< Info >; wrap a DataTypeInfo type_traits in an AbstractTypeInfo ; Example of use: class MyType {};; ; template<>; class DataTypeInfo<MyType> { }; ; AbstractTypeInfo* nfo = DataTypeInfoDynamicWrapper<DataTypeInfo<MyType>>();; ; ; TypeInfoRegistry::Set(TypeInfoId::getNewId<MyType>(), info);; sofa::defaulttype::AbstractTypeInfo::AbstractTypeInfoAbstractTypeInfo()Definition: AbstractTypeInfo.h:177; sofa::defaulttype::TypeInfoRegistry::Setstatic int Set(const TypeInfoId &tid, AbstractTypeInfo *info, const std::string &compilationTarget)Definition: TypeInfoRegistry.cpp:97; . Public Member Functions; const AbstractTypeInfo * BaseType () const override;  ; const AbstractTypeInfo * ValueType () const override;  ; const TypeInfoId & getBaseTypeId () const override;  ; const TypeInfoId & getValueTypeId () const override;  ; std::string name () const override;  Returns the name of this type. More...;  ; std::string getTypeName () const override;  ; bool ValidInfo () const override;  ; bool FixedSize () const override;  ; bool ZeroConstructor () const override;  True iff the default constructor of this type is equivalent to setting the memory to 0. More...;  ; bool SimpleCopy () const override;  True iff copying the data can be done with a memcpy(). More...;  ; bool SimpleLayout () const override;  ; bool Integer () const override;  True if",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html:402,wrap,wrap,402,api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_data_type_info_dynamic_wrapper.html,2,['wrap'],['wrap']
Integrability,"﻿. SOFA API: sofa::gl::component::shader::OglShaderElement Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglShaderElement Class Reference . #include <OglShader.h>; Abstract class which defines a element to be used with a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglShaderElement:. [legend]; Detailed Description; Abstract class which defines a element to be used with a OglShader. ; This is only an partial implementation of the interface ShaderElement which adds a pointer to its corresponding shader (where it will be used) and the id (or name) of the element. . Protected Attributes; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html:609,interface,interface,609,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::gui::qt::ModifyObject Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Signals |; Public Slots |; Protected Slots |; List of all members . sofa::gui::qt::ModifyObject Class Reference . #include <ModifyObject.h>. Inheritance diagram for sofa::gui::qt::ModifyObject:. [legend]. Protected Attributes; void * Id_;  ; QTreeWidgetItem * item_;  ; core::objectmodel::Base * basenode;  ; core::objectmodel::BaseData * data_;  ; const ModifyObjectFlags dialogFlags_;  ; QWidget * messageTab;  ; QTextBrowser * messageEdit;  ; QTabWidget * dialogTab;  ; QPushButton * buttonUpdate;  ; int m_numMessages;  ; std::vector< QTabulationModifyObject * > m_tabs;  . Public Member Functions;  ModifyObject (void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget);  ;  ~ModifyObject () override;  ; const ModifyObjectFlags & getFlags ();  ; void createDialog (core::objectmodel::Base *node);  ; void createDialog (core::objectmodel::BaseData *data);  ; bool hideData (core::objectmodel::BaseData *data);  ; void readOnlyData (QTableWidget *widget, core::objectmodel::BaseData *data);  ; void readOnlyData (QWidget *widget, core::objectmodel::BaseData *data);  . Protected Member Functions; void updateConsole ();  ; QString parseDataModified ();  . Signals; void updateDataWidgets ();  ; void objectUpdated ();  ; void dialogClosed (void *);  ; void nodeNameModification (simulation::Node *);  ; void componentDirty (bool);  ; void dataModified (QString);  ; void beginObjectModification (sofa::core::objectmodel::Base *object);  ; void endObjectModification (sofa::core::objectmodel::Base *object);  ; void beginDataModification (sofa::core::objectmodel::BaseData *data);  ; void endDataModification (sofa::core::objectmodel::BaseData *data);  . Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:613,message,messageTab,613,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,2,['message'],"['messageEdit', 'messageTab']"
Integrability,"﻿. SOFA API: sofa::gui::qt::SofaWindowDataGraph Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::qt::SofaWindowDataGraph Class Reference . #include <SofaWindowDataGraph.h>. Inheritance diagram for sofa::gui::qt::SofaWindowDataGraph:. [legend]; Detailed Description; This Class provide an interface with the library QtNodes to display Data Graph connection inside a QDialog. It will take a SOFA simulation scene and create Graph nodes for each Sofa component and display connections between Data. . Protected Attributes; QtNodes::FlowScene * m_graphScene;  Pointer to the graphScene used to store nodes. More...;  ; QtNodes::FlowView * m_graphView;  Pointer to the view of the graph. More...;  ; sofa::simulation::Node * m_rootNode;  Point to the root node of the current simulation. More...;  ; std::vector< std::string > m_exceptions;  List of component name not to be display in the graph. More...;  ; SReal m_scaleX;  Scale parameter to apply between nodes for display in abscissa. ; More...;  ; SReal m_scaleY;  Scale parameter to apply between nodes for display in ordinate. More...;  ; int m_posX;  Increment position counter on abscissa for Node display. More...;  ; int m_posY;  Increment position counter on ordinate for Node display. More...;  ; bool debugNodeGraph;  parameter to activate graph logs. False by default. More...;  . Public Member Functions;  SofaWindowDataGraph (QWidget *parent, sofa::simulation::Node *scene);  Default constructor of the Widget, given a QWidget as parent and a pointer to the current simulation scene. More...;  ;  ~SofaWindowDataGraph ();  ; void resetNodeGraph (sofa::simulation::Node *scene);  Method to be called when graph need to be recomputed (like reloading scene). Take a pointer to the root node of the scene. More...;  . Protected Member Functions; void parseSimulationNode (sofa::simulati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html:444,interface,interface,444,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_window_data_graph.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::helper::ReadAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::ReadAccessor< T, Enable > Class Template Reference . #include <ReadAccessor.h>. Inheritance diagram for sofa::helper::ReadAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::ReadAccessor< T, Enable >; A ReadAccessor is a proxy class, holding a reference to a given container and providing access to its data, using an unified interface (similar to std::vector), hiding API differences within containers.; Other advantadges of using a ReadAccessor are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access.; No modifications to the container will be done by mistake; Accesses can be logged for debugging or task dependencies analysis. The default implementation provides only minimal set of methods and operators, sufficient for scalar types but which should be overloaded for more complex types. Various template specializations are typically used, especially for core::objectmodel::Data<T> . Protected Attributes; const container_type * vref;  . Public Member Functions;  ReadAccessor (const container_type &container);  ; const_reference ref () const;  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  . Attribute details. ◆ vref. template<class T , class Enable = void> . const container_type* sofa::helper::ReadAccessor< T, Enable >::vref. protected . Constructor details. ◆ ReadAccessor(). template<class T , class Enable = void> . sofa::helper::ReadAccessor< T, Enable >::ReadAccessor ; (; const container_type & ; container). inlineexplicit . Function details. ◆ ope",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html:630,interface,interface,630,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,1,['interface'],['interface']
Integrability,﻿. SOFA API: sofa::helper::ReadAccessorVector< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::ReadAccessorVector< T > Class Template Reference . #include <ReadAccessorVector.h>. Inheritance diagram for sofa::helper::ReadAccessorVector< T >:. [legend]; Detailed Description; template<class T>; class sofa::helper::ReadAccessorVector< T >; ReadAccessor for wrapping around vector like object ////////////////////// ReadAccessor implementation class for vector types . Protected Attributes; const container_type * vref;  . Public Member Functions;  ReadAccessorVector (const container_type &container);  ; bool empty () const;  ; Size size () const;  ; const_reference operator[] (Size i) const;  ; const_iterator begin () const;  ; const_iterator end () const;  ;  operator const_container_type & () const;  ; const_container_type * operator-> () const;  ; const_container_type & operator* () const;  ; const_container_type & ref () const;  this duplicate operator* (remove ?) More...;  . Attribute details. ◆ vref. template<class T > . const container_type* sofa::helper::ReadAccessorVector< T >::vref. protected . Constructor details. ◆ ReadAccessorVector(). template<class T > . sofa::helper::ReadAccessorVector< T >::ReadAccessorVector ; (; const container_type & ; container). inline . Function details. ◆ begin(). template<class T > . const_iterator sofa::helper::ReadAccessorVector< T >::begin ; (; ); const. inline . ◆ empty(). template<class T > . bool sofa::helper::ReadAccessorVector< T >::empty ; (; ); const. inline . ◆ end(). template<class T > . const_iterator sofa::helper::ReadAccessorVector< T >::end ; (; ); const. inline . ◆ operator const_container_type &(). template<class T > . sofa::helper::ReadAccessorVector< T >::operator const_container_type & ; (; ); const. inline . ◆ operator*(). template<class T > . const_container_type& sofa:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector.html:499,wrap,wrapping,499,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor_vector.html,1,['wrap'],['wrapping']
Integrability,"﻿. SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::ScopedAdvancedTimer Struct Reference . #include <ScopedAdvancedTimer.h>; Detailed Description; Scoped (RAII) AdvancedTimer to simplify a basic usage Example of use { ///< open a scope to start measuring ScopedAdvancedTimer t(""myMeasurement"") ... ... } ///< close the scope... the timer t is destructed and the measurement recorded. . Public Attributes; AdvancedTimer::IdStep m_id;  ; std::optional< AdvancedTimer::IdObj > m_objId;  . Public Member Functions;  ScopedAdvancedTimer (const std::string &message);  ;  ScopedAdvancedTimer (const char *message);  ; template<class T > ;  ScopedAdvancedTimer (const char *message, T *obj);  ;  ~ScopedAdvancedTimer ();  . Attribute details. ◆ m_id. AdvancedTimer::IdStep sofa::helper::ScopedAdvancedTimer::m_id. ◆ m_objId. std::optional<AdvancedTimer::IdObj> sofa::helper::ScopedAdvancedTimer::m_objId. Constructor details. ◆ ScopedAdvancedTimer() [1/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const std::string & ; message). explicit . ◆ ScopedAdvancedTimer() [2/3]. sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message). explicit . ◆ ScopedAdvancedTimer() [3/3]. template<class T > . sofa::helper::ScopedAdvancedTimer::ScopedAdvancedTimer ; (; const char * ; message, . T * ; obj . ). explicit . ◆ ~ScopedAdvancedTimer(). sofa::helper::ScopedAdvancedTimer::~ScopedAdvancedTimer ; (; ). sofahelperScopedAdvancedTimer; Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html:723,message,message,723,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer.html,6,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::WriteAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::WriteAccessor< T, Enable > Class Template Reference . #include <WriteAccessor.h>. Inheritance diagram for sofa::helper::WriteAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::WriteAccessor< T, Enable >; A WriteAccessor is a proxy class, holding a reference to a given container and providing access to its data, using an unified interface (similar to std::vector), hiding API differences within some containers.; Other advantadges of using a WriteAccessor are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access.; Accesses can be logged for debugging or task dependencies analysis. The default implementation provides only minimal set of methods and operators, sufficient for scalar types but which should be overloaded for more complex types. Various template specializations are typically used, especially for core::objectmodel::Data<T> . Protected Attributes; container_type * vref;  . Public Member Functions;  WriteAccessor (container_type &container);  ; const_reference ref () const;  ; reference wref ();  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  ;  operator reference ();  ; pointer operator-> ();  ; reference operator* ();  ; template<class T2 > ; void operator= (const T2 &v);  . Attribute details. ◆ vref. template<class T , class Enable = void> . container_type* sofa::helper::WriteAccessor< T, Enable >::vref. protected . Constructor details. ◆ WriteAccessor(). template<class T , class Enable = void> . sofa::helper::WriteAccessor< T, Enable >:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html:636,interface,interface,636,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::helper::logging Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Functions . sofa::helper::logging Namespace Reference . This allow Base object to interact with the messaging system. ; More... Namespaces;  countingmessagehandler;  ;  loggingmessagehandler;  ;  percomponentloggingmessagehandler;  ;  routingmessagehandler;  . Classes; class  RichConsoleStyleMessageFormatter;  The RichConsoleStyleMessageFormatter class. More...;  ; class  SofaComponentInfo;  ; class  ClangMessageHandler;  ; class  ClangStyleMessageFormatter;  ; struct  ComponentInfo;  ; class  ConsoleMessageHandler;  ; class  MainConsoleMessageHandler;  The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; Compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:402,rout,routingmessagehandler,402,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,2,"['message', 'rout']","['message', 'routingmessagehandler']"
Integrability,"﻿. SOFA API: sofa::helper::logging::ComponentInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Friends |; List of all members . sofa::helper::logging::ComponentInfo Struct Reference . #include <ComponentInfo.h>. Inheritance diagram for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related detail",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:467,message,message,467,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,3,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::ConsoleMessageHandler Class Reference . #include <ConsoleMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ConsoleMessageHandler:. [legend]; Detailed Description; Print the message on the console using a specified formatter. The Message::Error, Message::Fatal are going to std:cerr while the others are going to std::cout. . Public Member Functions;  ConsoleMessageHandler (MessageFormatter *formatter=nullptr);  ; void process (Message &m) override;  ; void setMessageFormatter (MessageFormatter *formatter);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ ConsoleMessageHandler(). sofa::helper::logging::ConsoleMessageHandler::ConsoleMessageHandler ; (; MessageFormatter * ; formatter = nullptr). Create a new ConsoleMessageHandler. By default the handler is using the DefaultStyleMessageFormatter object to format the message. . Function details. ◆ process(). void sofa::helper::logging::ConsoleMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. ◆ setMessageFormatter(). void sofa::helper::logging::ConsoleMessageHandler::setMessageFormatter ; (; MessageFormatter * ; formatter). sofahelperloggingConsoleMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html:410,message,message,410,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_console_message_handler.html,2,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::logging::DefaultStyleMessageFormatter Class Reference . #include <DefaultStyleMessageFormatter.h>. Inheritance diagram for sofa::helper::logging::DefaultStyleMessageFormatter:. [legend]; Detailed Description; Format the message using a very simple sofa style. For more advanced formatting style have a look at RichStyleMessageFormatter. Example: [ERROR] ClassName(instanceName): this is a message printed somewhere. . Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static MessageFormatter & getInstance ();  . Additional Inherited Members;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::DefaultStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static MessageFormatter& sofa::helper::logging::DefaultStyleMessageFormatter::getInstance ; (; ). inlinestatic . sofahelperloggingDefaultStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html:473,message,message,473,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_default_style_message_formatter.html,2,['message'],['message']
Integrability,﻿. SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::helper::logging::ExceptionMessageHandler Class Reference . #include <ExceptionMessageHandler.h>. Inheritance diagram for sofa::helper::logging::ExceptionMessageHandler:. [legend]; Detailed Description; Raise an exception each time a error message is processed. Useful for automatic examples that only detects crashes! . Classes; struct  ErrorMessageException;  the exception raised by an error Message More...;  . Public Member Functions; void process (Message &m) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::ExceptionMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingExceptionMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html:456,message,message,456,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_exception_message_handler.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::logging::FileInfo Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::helper::logging::FileInfo Struct Reference . #include <FileInfo.h>. Inheritance diagram for sofa::helper::logging::FileInfo:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created The filename must be a valid pointer throughoug the message processing If this cannot be guaranteed then use the FileInfoOwningFilename class instead. . Public Attributes; const char * filename {nullptr};  ; int line {0};  . Public Member Functions;  FileInfo (const char *f, int l);  . Protected Member Functions;  FileInfo ();  . Attribute details. ◆ filename. const char* sofa::helper::logging::FileInfo::filename {nullptr}. ◆ line. int sofa::helper::logging::FileInfo::line {0}. Constructor details. ◆ FileInfo() [1/2]. sofa::helper::logging::FileInfo::FileInfo ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfo() [2/2]. sofa::helper::logging::FileInfo::FileInfo ; (; ). inlineprotected . sofahelperloggingFileInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html:444,message,message,444,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info.html,2,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileInfoOwningFilename Struct Reference . #include <FileInfo.h>; To keep a trace (file,line) from where the message have been created. ; More... Inheritance diagram for sofa::helper::logging::FileInfoOwningFilename:. [legend]; Detailed Description; To keep a trace (file,line) from where the message have been created. . Public Member Functions;  FileInfoOwningFilename (const char *f, int l);  ;  FileInfoOwningFilename (const std::string &f, int l);  ;  ~FileInfoOwningFilename ();  ;  Public Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo (const char *f, int l);  . Additional Inherited Members;  Public Attributes inherited from sofa::helper::logging::FileInfo; const char * filename {nullptr};  ; int line {0};  ;  Protected Member Functions inherited from sofa::helper::logging::FileInfo;  FileInfo ();  . Constructor details. ◆ FileInfoOwningFilename() [1/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const char * ; f, . int ; l . ). inline . ◆ FileInfoOwningFilename() [2/2]. sofa::helper::logging::FileInfoOwningFilename::FileInfoOwningFilename ; (; const std::string & ; f, . int ; l . ). inline . ◆ ~FileInfoOwningFilename(). sofa::helper::logging::FileInfoOwningFilename::~FileInfoOwningFilename ; (; ). inline . sofahelperloggingFileInfoOwningFilename; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html:331,message,message,331,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_file_info_owning_filename.html,2,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::logging::FileMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::FileMessageHandler Class Reference . #include <FileMessageHandler.h>. Inheritance diagram for sofa::helper::logging::FileMessageHandler:. [legend]; Detailed Description; A message handle that saves the content message passing by in a file. The formatting can be customize by passing a different MessageFormatter in the constructor. Example of use: MessageDispatcher::addHandler(new FileMessageHandler(""myfile.log"")); . Public Member Functions;  FileMessageHandler (const char *filename, MessageFormatter *formatter=nullptr);  ;  ~FileMessageHandler () override;  ; void process (Message &m) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ FileMessageHandler(). sofa::helper::logging::FileMessageHandler::FileMessageHandler ; (; const char * ; filename, . MessageFormatter * ; formatter = nullptr . ). ◆ ~FileMessageHandler(). sofa::helper::logging::FileMessageHandler::~FileMessageHandler ; (; ). override . Function details. ◆ isValid(). bool sofa::helper::logging::FileMessageHandler::isValid ; (; ). ◆ process(). void sofa::helper::logging::FileMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingFileMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html:390,message,message,390,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_file_message_handler.html,2,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::logging::Message Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::Message Class Reference . #include <Message.h>; Detailed Description; A message is the core object of the msg_* API. A message contains a textual description provided by the user as well as the location in source file (or in a separated file) from where the message have been emitted. A message also contains a ComponentInfo which can be used to provide additional details about the emitter's context. . Static Public Attributes; static TypeSet AnyTypes;  ; static Message emptyMsg;  . Protected Attributes; ComponentInfo::SPtr m_componentinfo;  ; FileInfo::SPtr m_fileInfo;  a trace (name, path) from whom has emitted this message. More...;  ; std::stringstream m_stream;  the actual message More...;  ; Class m_class;  who is the attender of the message (developers or users)? More...;  ; Type m_type;  the message level More...;  ; int m_id;  should it be stored here or in the handler that needs it? More...;  . Public Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:331,message,message,331,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,6,['message'],['message']
Integrability,"﻿. SOFA API: sofa::helper::logging::MessageDispatcher Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcher Class Reference . #include <MessageDispatcher.h>; Detailed Description; static interface to manage the list of MessageHandlers that process the Messages . Classes; class  LoggerStream;  ; class  NullLoggerStream;  . Static Public Member Functions; static int addHandler (MessageHandler *o);  to add a MessageHandler More...;  ; static int rmHandler (MessageHandler *o);  to remove a MessageHandler More...;  ; static void clearHandlers ();  to remove every MessageHandlers More...;  ; static std::vector< MessageHandler * > & getHandlers ();  the list of MessageHandlers More...;  ; static LoggerStream info (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream deprecated (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream warning (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream error (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream fatal (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static LoggerStream advice (Message::Class mclass, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static const NullLoggerStream & null ();  ; static MessageDispatcher::LoggerStream log (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &cinfo, const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; static void process (sofa::helper::logging::Message &m);  . Function details. ◆ addHandler(). int sofa::helper::logging::MessageDispatcher:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html:332,interface,interface,332,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference . #include <MessageDispatcher.h>; Detailed Description; a utility interface to automatically process a Message at the end of scope of the LoggerStream variable (processed by all the handlers of the MessageDispatcher) . Public Member Functions;  LoggerStream (const LoggerStream &s);  ;  LoggerStream (Message::Class mclass, Message::Type type, const ComponentInfo::SPtr &sender, const FileInfo::SPtr &fileInfo);  ;  ~LoggerStream ();  ; template<class T > ; LoggerStream & operator<< (const T &x);  ; Message getMessage () const;  . Constructor details. ◆ LoggerStream() [1/2]. sofa::helper::logging::MessageDispatcher::LoggerStream::LoggerStream ; (; const LoggerStream & ; s). inline . ◆ LoggerStream() [2/2]. sofa::helper::logging::MessageDispatcher::LoggerStream::LoggerStream ; (; Message::Class ; mclass, . Message::Type ; type, . const ComponentInfo::SPtr & ; sender, . const FileInfo::SPtr & ; fileInfo . ). ◆ ~LoggerStream(). sofa::helper::logging::MessageDispatcher::LoggerStream::~LoggerStream ; (; ). Function details. ◆ getMessage(). Message sofa::helper::logging::MessageDispatcher::LoggerStream::getMessage ; (; ); const. inline . ◆ operator<<(). template<class T > . LoggerStream& sofa::helper::logging::MessageDispatcher::LoggerStream::operator<< ; (; const T & ; x). inline . sofahelperloggingMessageDispatcherLoggerStream; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html:345,interface,interface,345,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_dispatcher_1_1_logger_stream.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::helper::logging::MessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::MessageHandler Class Referenceabstract . #include <MessageHandler.h>. Inheritance diagram for sofa::helper::logging::MessageHandler:. [legend]. Public Member Functions; virtual ~MessageHandler ();  ; virtual void process (Message &m)=0;  . Constructor details. ◆ ~MessageHandler(). virtual sofa::helper::logging::MessageHandler::~MessageHandler ; (; ). inlinevirtual . Function details. ◆ process(). virtual void sofa::helper::logging::MessageHandler::process ; (; Message & ; m). pure virtual . Implemented in sofa::testing::GtestMessageHandler, sofa::helper::logging::TracyMessageHandler, sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler, sofa::helper::logging::FileMessageHandler, sofa::helper::logging::ExceptionMessageHandler, sofa::helper::logging::countingmessagehandler::CountingMessageHandler, sofa::helper::logging::ConsoleMessageHandler, sofa::helper::logging::ClangMessageHandler, sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler, and sofa::helper::logging::SilentMessageHandler. sofahelperloggingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html:828,rout,routingmessagehandler,828,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message_handler.html,1,['rout'],['routingmessagehandler']
Integrability,"﻿. SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference . #include <RichConsoleStyleMessageFormatter.h>; The RichConsoleStyleMessageFormatter class. ; More... Inheritance diagram for sofa::helper::logging::RichConsoleStyleMessageFormatter:. [legend]; Detailed Description; The RichConsoleStyleMessageFormatter class. ; The class implement a message formatter dedicated to console pretty printing on a console Among other thing it feature formatting using a markdown like syntax:; color rendering, 'italics' or italics; alignment and wrapping for long message that are then much easier to read.; automatic reading of the console number of column for prettier display. . Public Member Functions; void formatMessage (const Message &m, std::ostream &out) override;  . Static Public Member Functions; static RichConsoleStyleMessageFormatter & getInstance ();  . Additional Inherited Members;  Protected Member Functions inherited from sofa::helper::logging::MessageFormatter;  MessageFormatter ();  ; virtual std::string getPrefixText (unsigned int type) const;  ; virtual std::ostream & setColor (std::ostream &stream, unsigned int type) const;  . Function details. ◆ formatMessage(). void sofa::helper::logging::RichConsoleStyleMessageFormatter::formatMessage ; (; const Message & ; m, . std::ostream & ; out . ). overridevirtual . Implements sofa::helper::logging::MessageFormatter. ◆ getInstance(). static RichConsoleStyleMessageFormatter& sofa::helper::logging::RichConsoleStyleMessageFormatter::getInstance ; (; ). inlinestatic . sofahelperloggingRichConsoleStyleMessageFormatter; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html:600,message,message,600,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_rich_console_style_message_formatter.html,3,"['message', 'wrap']","['message', 'wrapping']"
Integrability,﻿. SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::SilentMessageHandler Class Reference . #include <SilentMessageHandler.h>; This class is a MessageHandler that simply do nothing with the message. ; More... Inheritance diagram for sofa::helper::logging::SilentMessageHandler:. [legend]; Detailed Description; This class is a MessageHandler that simply do nothing with the message. . Public Member Functions; void process (Message &) override;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Function details. ◆ process(). void sofa::helper::logging::SilentMessageHandler::process ; (; Message & ; ). overridevirtual . Implements sofa::helper::logging::MessageHandler. sofahelperloggingSilentMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html:357,message,message,357,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_silent_message_handler.html,2,['message'],['message']
Integrability,﻿. SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::SofaComponentInfo Class Reference . #include <Base.h>. Inheritance diagram for sofa::helper::logging::SofaComponentInfo:. [legend]. Public Attributes; const sofa::core::objectmodel::Base * m_component;  ; std::string m_name;  . Public Member Functions;  SofaComponentInfo (const sofa::core::objectmodel::Base *c);  ; const std::string & name () const;  ; std::ostream & toStream (std::ostream &out) const;  ;  Public Member Functions inherited from sofa::helper::logging::ComponentInfo;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::logging::ComponentInfo; std::string m_sender;  . Attribute details. ◆ m_component. const sofa::core::objectmodel::Base* sofa::helper::logging::SofaComponentInfo::m_component. ◆ m_name. std::string sofa::helper::logging::SofaComponentInfo::m_name. Constructor details. ◆ SofaComponentInfo(). sofa::helper::logging::SofaComponentInfo::SofaComponentInfo ; (; const sofa::core::objectmodel::Base * ; c). Function details. ◆ name(). const std::string& sofa::helper::logging::SofaComponentInfo::name ; (; ); const. inline . ◆ toStream(). std::ostream& sofa::helper::logging::SofaComponentInfo::toStream ; (; std::ostream & ; out); const. inlinevirtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented from sofa::helper::logging::ComponentInfo. sofahelperloggingSofaComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html:905,message,message,905,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_sofa_component_info.html,1,['message'],['message']
Integrability,﻿. SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::TracyMessageHandler Class Reference . #include <TracyMessageHandler.h>; Send the message to the Tracy profiler. ; More... Inheritance diagram for sofa::helper::logging::TracyMessageHandler:. [legend]; Detailed Description; Send the message to the Tracy profiler. . Public Member Functions;  TracyMessageHandler (MessageFormatter *formatter=nullptr);  ; void process (Message &m) override;  ; void setMessageFormatter (MessageFormatter *formatter);  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ TracyMessageHandler(). sofa::helper::logging::TracyMessageHandler::TracyMessageHandler ; (; MessageFormatter * ; formatter = nullptr). Create a new ConsoleMessageHandler. By default the handler is using the DefaultStyleMessageFormatter object to format the message. . Function details. ◆ process(). void sofa::helper::logging::TracyMessageHandler::process ; (; Message & ; m). overridevirtual . Implements sofa::helper::logging::MessageHandler. ◆ setMessageFormatter(). void sofa::helper::logging::TracyMessageHandler::setMessageFormatter ; (; MessageFormatter * ; formatter). sofahelperloggingTracyMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html:300,message,message,300,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_tracy_message_handler.html,3,['message'],['message']
Integrability,﻿. SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::countingmessagehandler Namespace Reference . Classes; class  CountingMessageHandler;  The CountingMessageHandler class count the messages by types. More...;  ; class  MainCountingMessageHandler;  The MainCountingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingcountingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html:316,message,messages,316,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1countingmessagehandler.html,1,['message'],['messages']
Integrability,﻿. SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference . #include <CountingMessageHandler.h>; The CountingMessageHandler class count the messages by types. ; More... Inheritance diagram for sofa::helper::logging::countingmessagehandler::CountingMessageHandler:. [legend]; Detailed Description; The CountingMessageHandler class count the messages by types. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class will start counting the messages passing through the MessageDispatcher according to their each Message::Type.; It is possible to query the number of a specific Message::Type using the getMessageCountFor function.; User interested in having a singleton of this class should have a look at See alsoMainCountingMessageHandler. . Public Member Functions;  CountingMessageHandler ();  ;  ~CountingMessageHandler () override;  ; void reset ();  ; int getMessageCountFor (const Message::Type &type) const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::CountingMessageHandler ; (; ). ◆ ~CountingMessageHandler(). sofa::helper::logging::countingmessagehandler::CountingMessageHandler::~CountingMessageHandler ; (; ). inlineoverride . Function details. ◆ getMessageCountFor(). int sofa::helper::logging::countingmessagehandler::CountingMessageHandler::getMessageCountFor ; (; const Message::Type & ; type); const. ◆ process(). void sofa::helper::logging::countingmessagehandler::CountingMessageHandler::process ; (; Message & ; m). overr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html:391,message,messages,391,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1countingmessagehandler_1_1_counting_message_handler.html,3,['message'],['messages']
Integrability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::loggingmessagehandler Namespace Reference . Classes; class  LoggingMessageHandler;  The LoggingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainLoggingMessageHandler;  The MainLoggingMessageHandler class contains a singleton to CountingMessageHandler and offer static version of CountingMessageHandler API. More...;  ; class  LogMessage;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html:322,message,messages,322,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1loggingmessagehandler.html,1,['message'],['messages']
Integrability,﻿. SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference . #include <LoggingMessageHandler.h>; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler:. [legend]; Detailed Description; The LoggingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; Dedicated function allows to activate/deactivate the saving of the messages as well as to clear the content of the buffer. The class keeps tracks of its number of activation/deactivation. Message logging is activated as long as there is not a paired number of activation/deactivation.; User interested in having a singleton of this class should have a look at See alsoMainLoggingMessageHandler.; You can also see the See alsoLogMessage for example of use . Public Member Functions;  LoggingMessageHandler ();  ;  ~LoggingMessageHandler () override;  ; void reset ();  ; size_t activate ();  ; size_t deactivate ();  ; const vector< Message > & getMessages () const;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::LoggingMessageHandler ; (; ). ◆ ~LoggingMessageHandler(). sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler::~LoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ activate(). size_t sofa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html:395,message,messages,395,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1loggingmessagehandler_1_1_logging_message_handler.html,4,['message'],['messages']
Integrability,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes . sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference . Classes; class  PerComponentLoggingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainPerComponentLoggingMessageHandler;  The MainPerComponentLoggingMessageHandler class contains a singleton to PerComponentLoggingMessageHandler and offer static version of PerComponentLoggingMessageHandler API. More...;  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. . sofahelperloggingpercomponentloggingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html:358,message,messages,358,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler.html,1,['message'],['messages']
Integrability,﻿. SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference . #include <PerComponentLoggingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler that can be added to in a MessageDispatcher. Once set the class can start copying the messages passing through the MessageDispatcher in a buffer.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  PerComponentLoggingMessageHandler ();  ;  ~PerComponentLoggingMessageHandler () override;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::PerComponentLoggingMessageHandler ; (; ). ◆ ~PerComponentLoggingMessageHandler(). sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::~PerComponentLoggingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. sofahelperloggingpercomponentloggingmessage,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html:455,message,messages,455,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1percomponentloggingmessagehandler_1_1_per_component_logging_message_handler.html,3,['message'],['messages']
Integrability,﻿. SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Typedefs . sofa::helper::logging::routingmessagehandler Namespace Reference . Classes; class  RoutingMessageHandler;  The RoutingMessageHandler class saves a copy of the messages in a buffer. More...;  ; class  MainRoutingMessageHandler;  The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. More...;  . Typedefs; typedef bool(* FilterFunction) (Message &);  . Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected objects from this per-file namespace are then imported into their parent namespace for ease of use. ; Typedef Documentation. ◆ FilterFunction. typedef bool(* sofa::helper::logging::routingmessagehandler::FilterFunction) (Message &). sofahelperloggingroutingmessagehandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html:36,rout,routingmessagehandler,36,api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging_1_1routingmessagehandler.html,4,"['message', 'rout']","['messages', 'routingmessagehandler']"
Integrability,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; More...; Detailed Description; The MainRoutingMessageHandler class contains a singleton to RoutingMessageHandler and offer static version of RoutingMessageHandler API. ; See alsoRoutingMessageHandler . Static Public Member Functions; static RoutingMessageHandler & getInstance ();  ; static void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; static void removeAllFilters ();  . Function details. ◆ getInstance(). RoutingMessageHandler & sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::getInstance ; (; ). static . ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::removeAllFilters ; (; ). static . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler::setAFilter ; (; FilterFunction ; filter, . MessageHandler * ; handler . ). static . All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerMainRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html:36,rout,routingmessagehandler,36,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler.html,9,"['message', 'rout']","['message', 'routed', 'routingmessagehandler']"
Integrability,"﻿. SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference . #include <RoutingMessageHandler.h>; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:36,rout,routingmessagehandler,36,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,8,"['message', 'rout']","['message', 'messages', 'routed', 'routing', 'routingmessagehandler']"
Integrability,"﻿. SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::ptr_stable_id< T > Class Template Reference . #include <map_ptr_stable_compare.h>; Detailed Description; template<typename T>; class sofa::helper::ptr_stable_id< T >; An object transforming pointers to stable ids, i.e. whose value depend on the order the pointers are processed, and not their (potentially random) value . Protected Attributes; unsigned int counter;  ; std::map< T *, unsigned int > idMap;  . Public Member Functions;  ptr_stable_id ();  ; unsigned int operator() (T *p);  ; unsigned int id (T *p);  . Attribute details. ◆ counter. template<typename T > . unsigned int sofa::helper::ptr_stable_id< T >::counter. mutableprotected . ◆ idMap. template<typename T > . std::map<T*,unsigned int> sofa::helper::ptr_stable_id< T >::idMap. mutableprotected . Constructor details. ◆ ptr_stable_id(). template<typename T > . sofa::helper::ptr_stable_id< T >::ptr_stable_id ; (; ). inline . Function details. ◆ id(). template<typename T > . unsigned int sofa::helper::ptr_stable_id< T >::id ; (; T * ; p). inline . ◆ operator()(). template<typename T > . unsigned int sofa::helper::ptr_stable_id< T >::operator() ; (; T * ; p). inline . sofahelperptr_stable_id; Generated on Mon Nov 11 2024 03:30:17 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1ptr__stable__id.html:464,depend,depend,464,api/master/sofa/html/classsofa_1_1helper_1_1ptr__stable__id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1ptr__stable__id.html,1,['depend'],['depend']
Integrability,"﻿. SOFA API: sofa::helper::system::FileEventListener Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::system::FileEventListener Class Referenceabstract . #include <FileMonitor.h>; Contains an event-based API to monitor file changes. ; More... Inheritance diagram for sofa::helper::system::FileEventListener:. [legend]; Detailed Description; Contains an event-based API to monitor file changes. ; Those functions are here only to avoid depending on an external library, and they provide only basic functionality.; This set of functions is not meant to be complete, but it can be completed if need be.; Example of use: 1) implement the FileEventListener interface 2) register the files you want to monitor using FileMonitor::addFile(""mypath/to/file"", &mylistener); 3) call the update function to process & trigger the events.; The system does not contains any hidden thread. If you request the monitoring to happens in an hidden thread you can implement it externally. . Public Member Functions; virtual ~FileEventListener ();  ; virtual void fileHasChanged (const std::string &filename)=0;  . Constructor details. ◆ ~FileEventListener(). virtual sofa::helper::system::FileEventListener::~FileEventListener ; (; ). inlinevirtual . Function details. ◆ fileHasChanged(). virtual void sofa::helper::system::FileEventListener::fileHasChanged ; (; const std::string & ; filename). pure virtual . Implemented in sofa::gui::qt::RealGUIFileListener, and sofa::gl::GLSLFileListener. sofahelpersystemFileEventListener; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_event_listener.html:540,depend,depending,540,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_event_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_event_listener.html,2,"['depend', 'interface']","['depending', 'interface']"
Integrability,"﻿. SOFA API: sofa::helper::system::FileSystem Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::helper::system::FileSystem Class Reference . #include <FileSystem.h>; Contains functions to interact with the file system. ; More...; Detailed Description; Contains functions to interact with the file system. ; Those functions are here only to avoid depending on an external library, and they provide only basic functionality. In particular, most of them were only written to work with absolute paths.; This set of functions is not meant to be complete, but it can be completed if need be. . Static Public Member Functions; static std::string getExtension (const std::string &filename);  Get the extension of a file from an absolute path description. More...;  ; static bool listDirectory (const std::string &directoryPath, std::vector< std::string > &outputFilenames);  List the content of a directory. More...;  ; static bool listDirectory (const std::string &directoryPath, std::vector< std::string > &outputFilenames, const std::string &extension);  List the files in a directory which match the given extension. More...;  ; static int findFiles (const std::string &directoryPath, std::vector< std::string > &outputFilePaths, const std::string &extension, const int depth=0);  Find the files from a directory which match the given extension. More...;  ; static bool createDirectory (const std::string &path);  Create a directory. (This function accepts relative paths) More...;  ; static bool removeDirectory (const std::string &path);  Remove an empty directory. (This function accepts relative paths) More...;  ; static bool removeAll (const std::string &path);  Remove a non-empty directory. (This function accepts relative paths) More...;  ; static bool removeFile (const std::string &path);  ; static std::string findOrCreateAValidPath (const std::string path);  check that all element in the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html:449,depend,depending,449,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_system.html,1,['depend'],['depending']
Integrability,"﻿. SOFA API: sofa::linearalgebra::SparseMatrix< T > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::linearalgebra::SparseMatrix< T > Class Template Reference . #include <SparseMatrix.h>. Inheritance diagram for sofa::linearalgebra::SparseMatrix< T >:. [legend]; Detailed Description; template<typename T>; class sofa::linearalgebra::SparseMatrix< T >; This is basically a map of map of T, wrapped in a linearalgebra::BaseMatrix interface. The const access methods avoid creating the entries when they do not exist. . Protected Attributes; Data data;  ; Index nRow;  ; Index nCol;  . Public Member Functions;  SparseMatrix ();  ;  SparseMatrix (Index nbRow, Index nbCol);  ; LineIterator begin ();  ; LineIterator end ();  ; LineConstIterator begin () const;  ; LineConstIterator end () const;  ; Line & operator[] (Index i);  ; const Line & operator[] (Index i) const;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; Index rowSize (void) const override;  Number of rows. More...;  ; Index colSize (void) const override;  Number of columns. More...;  ; SReal element (Index i, Index j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index i, Index j, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void clear (Index i, Index j) override;  ; void clearRow (Index i) override;  Reset all the values in row i to 0. More...;  ; void clearCol (Index j) override;  Reset the all values in column j to 0. More...;  ; void clearRowCol (Index i) override;  Reset the value of both r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html:584,wrap,wrapped,584,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_sparse_matrix.html,2,"['interface', 'wrap']","['interface', 'wrapped']"
Integrability,"﻿. SOFA API: sofa::simpleapi Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simpleapi Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMPLEAPI_API void init ();  Initialize the Sofa.SimpleApi library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isInitialized ();  Return true if and only if the Sofa.SimpleApi library has been initialized. More...;  ; SOFA_SIMPLEAPI_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. More...;  ; SOFA_SIMPLEAPI_API bool isCleanedUp ();  Return true if and only if the Sofa.SimpleApi library has been cleaned up. More...;  ; bool importPlugin (const std::string &name);  ; void dumpScene (Node::SPtr root);  ; Simulation::SPtr createSimulation (const std::string &type);  ; Node::SPtr createRootNode (Simulation::SPtr s, const std::string &name, const std::map< std::string, std::string > &params);  ; NodeSPtr createRootNode (Simulation *s, const std::string &name, const std::map< std::string, std::string > &params);  ; BaseObject::SPtr createObject (Node::SPtr parent, BaseObjectDescription &desc);  ; BaseObject::SPtr createObject (Node::SPtr parent, const std::string &type, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, const std::string &name, const std::map< std::string, std::string > &params);  ; Node::SPtr createChild (Node::SPtr node, BaseObjectDescription &desc);  ; Node::SPtr createNode (const std::string &name);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; sofa::core::sptr< BaseObject > SOFA_SIMPLEAPI_API createObject (NodeSPtr node, BaseObjectDescription &params);  Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:318,depend,dependencies,318,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,2,['depend'],['dependencies']
Integrability,"﻿. SOFA API: sofa::simulation Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Typedefs |; Enumerations |; Functions |; Variables . sofa::simulation Namespace Reference . Namespaces;  Colors;  ;  common;  ;  core;  ;  graph;  ;  mechanicalvisitor;  ;  node;  ;  xml;  . Classes; class  FindByTypeVisitor;  ; class  SceneLoaderPHP;  ; class  SceneLoaderXML;  ; class  TransformationVisitor;  ; class  AnimateBeginEvent;  ; class  AnimateEndEvent;  ; class  AnimateVisitor;  ; class  BaseMechanicalVisitor;  ; class  BehaviorUpdatePositionVisitor;  ; class  CleanupVisitor;  ; class  CollisionAnimationLoop;  Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. More...;  ; class  CollisionBeginEvent;  ; class  CollisionEndEvent;  ; class  CollisionVisitor;  Compute collision reset, detection and response in one step. More...;  ; class  CollisionResetVisitor;  Remove collision response from last step. More...;  ; class  CollisionDetectionVisitor;  Compute collision detection. More...;  ; class  CollisionResponseVisitor;  Compute collision response. More...;  ; class  CpuTask;  ; class  CpuTaskStatus;  ; class  DeactivationVisitor;  ; class  DefaultAnimationLoop;  Default Animation Loop to be created when no AnimationLoop found on simulation::node. More...;  ; class  StdTaskAllocator;  ; class  DefaultTaskScheduler;  ; class  DefaultVisualManagerLoop;  Default VisualManager Loop to be created when no VisualManager found on simulation::node. More...;  ; class  DeleteVisitor;  ; class  BuildConstraintSystemEndEvent;  ; class  SimulationInitDoneEvent;  ; class  SimulationInitStartEvent;  ; class  SimulationInitTexturesDoneEvent;  ; class  SimulationStartEvent;  ; class  SimulationStopEvent;  ; class  SolveConstraintSystemEndEvent;  ; class  InitGnuplotVisitor;  ; class  ExportGnuplotVisitor;  ; class  ExportVisualModelOBJVisitor;  ; class  I",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:769,integrat,integrations,769,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,1,['integrat'],['integrations']
Integrability,"﻿. SOFA API: sofa::simulation::CollisionAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Member Functions |; List of all members . sofa::simulation::CollisionAnimationLoop Class Reference . #include <CollisionAnimationLoop.h>; Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. ; More... Inheritance diagram for sofa::simulation::CollisionAnimationLoop:. [legend]; Detailed Description; Component responsible for main simulation algorithms, managing how and when collisions and integrations computations happen. ; This class can optionally replace the default computation scheme of computing collisions then doing an integration step.; Note that it is in a preliminary stage, hence its functionalities and API will certainly change soon. . Protected Member Functions;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:384,integrat,integrations,384,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,3,['integrat'],"['integration', 'integrations']"
Integrability,"﻿. SOFA API: sofa::simulation::IntegrateBeginEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateBeginEvent Class Reference . #include <IntegrateBeginEvent.h>. Inheritance diagram for sofa::simulation::IntegrateBeginEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor before performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateBeginEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateBeginEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html:438,integrat,integrate,438,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_begin_event.html,1,['integrat'],['integrate']
Integrability,"﻿. SOFA API: sofa::simulation::IntegrateEndEvent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::IntegrateEndEvent Class Reference . #include <IntegrateEndEvent.h>. Inheritance diagram for sofa::simulation::IntegrateEndEvent:. [legend]; Detailed Description; Event fired by IntegrateVisitor after performing the integrate detection step. . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Function details. ◆ GetClassName(). static const char* sofa::simulation::IntegrateEndEvent::GetClassName ; (; ). inlinestatic . sofasimulationIntegrateEndEvent; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html:429,integrat,integrate,429,api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_integrate_end_event.html,1,['integrat'],['integrate']
Integrability,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerFactory Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerFactory Class Reference . #include <MainTaskSchedulerFactory.h>; Detailed Description; A set of static function with the same interface than @TaskSchedulerFactory, working on a single instance of @TaskSchedulerFactory.; The static functions @createInRegistry use the factory to instantiate a task scheduler and store it in @MainTaskSchedulerRegistry . Static Public Member Functions; static bool registerScheduler (const std::string &name, const std::function< TaskScheduler *()> &creatorFunc);  ; static TaskScheduler * instantiate (const std::string &name);  ; static std::set< std::string > getAvailableSchedulers ();  ; static TaskScheduler * createInRegistry (const std::string &name);  ; static TaskScheduler * createInRegistry ();  ; static std::string defaultTaskSchedulerType ();  . Function details. ◆ createInRegistry() [1/2]. TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::createInRegistry ; (; ). static . ◆ createInRegistry() [2/2]. TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::createInRegistry ; (; const std::string & ; name). static . ◆ defaultTaskSchedulerType(). std::string sofa::simulation::MainTaskSchedulerFactory::defaultTaskSchedulerType ; (; ). static . ◆ getAvailableSchedulers(). std::set< std::string > sofa::simulation::MainTaskSchedulerFactory::getAvailableSchedulers ; (; ). static . ◆ instantiate(). TaskScheduler * sofa::simulation::MainTaskSchedulerFactory::instantiate ; (; const std::string & ; name). static . ◆ registerScheduler(). bool sofa::simulation::MainTaskSchedulerFactory::registerScheduler ; (; const std::string & ; name, . const std::function< TaskScheduler *()> & ; creatorFunc . ). static . sofasimulationMainTaskSchedulerFactory; Generated on Mon Nov 11 2024 03:33:58 for SOFA API b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory.html:364,interface,interface,364,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_factory.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::simulation::MainTaskSchedulerRegistry Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::simulation::MainTaskSchedulerRegistry Class Reference . #include <MainTaskSchedulerRegistry.h>; Detailed Description; A set of static functions with the same interface than a @TaskSchedulerRegistry, working on a single instance of a @TaskSchedulerRegistry. All functions are thread-safe. . Static Public Member Functions; static bool addTaskSchedulerToRegistry (TaskScheduler *taskScheduler, const std::string &taskSchedulerName);  ; static TaskScheduler * getTaskScheduler (const std::string &taskSchedulerName);  ; static bool hasScheduler (const std::string &taskSchedulerName);  ; static const std::optional< std::pair< std::string, TaskScheduler * > > & getLastInserted ();  ; static void clear ();  . Function details. ◆ addTaskSchedulerToRegistry(). bool sofa::simulation::MainTaskSchedulerRegistry::addTaskSchedulerToRegistry ; (; TaskScheduler * ; taskScheduler, . const std::string & ; taskSchedulerName . ). static . ◆ clear(). void sofa::simulation::MainTaskSchedulerRegistry::clear ; (; ). static . ◆ getLastInserted(). const std::optional< std::pair< std::string, TaskScheduler * > > & sofa::simulation::MainTaskSchedulerRegistry::getLastInserted ; (; ). static . ◆ getTaskScheduler(). TaskScheduler * sofa::simulation::MainTaskSchedulerRegistry::getTaskScheduler ; (; const std::string & ; taskSchedulerName). static . ◆ hasScheduler(). bool sofa::simulation::MainTaskSchedulerRegistry::hasScheduler ; (; const std::string & ; taskSchedulerName). static . sofasimulationMainTaskSchedulerRegistry; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html:368,interface,interface,368,api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_main_task_scheduler_registry.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::simulation::NodeSingle< T, duplicate > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::NodeSingle< T, duplicate > Class Template Reference . #include <Node.h>. Inheritance diagram for sofa::simulation::NodeSingle< T, duplicate >:. [legend]; Detailed Description; template<class T, bool duplicate = true>; class sofa::simulation::NodeSingle< T, duplicate >; Class to hold 0-or-1 object. Public access is only readonly using an interface similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. UPDATE: it is now an alias for the Link pointer container . Public Member Functions;  NodeSingle (const BaseLink::InitLink< Node > &init);  ; T * operator-> () const;  ; T & operator* () const;  ;  operator T* () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:564,interface,interface,564,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::simulation::SceneLoader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Static Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Static Protected Member Functions |; List of all members . sofa::simulation::SceneLoader Class Referenceabstract . #include <SceneLoaderFactory.h>; Main class used to register scene file loaders. ; More... Inheritance diagram for sofa::simulation::SceneLoader:. [legend]; Detailed Description; Main class used to register scene file loaders. ; It uses the Factory design pattern, where each class is registered in a map, and dynamically retrieved given the type name. Abstract interface of a scene loader . Classes; struct  Listener;  to be able to inform when a scene is loaded More...;  . Static Protected Attributes; static Listeners s_listeners;  . Public Member Functions; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; virtual bool canLoadFileExtension (const char *extension)=0;  ; virtual bool canWriteFileExtension (const char *);  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  ; virtual sofa::simulation::NodeSPtr doLoad (const std::string &filename, const std::vector< std::string > &sceneArgs)=0;  ; virtual void write (sofa::simulation::Node *, const char *);  write scene graph in the file More...;  ; virtual std::string getFileTypeDesc ()=0;  get the file type description More...;  ; virtual void getExtensionList (ExtensionList *list)=0;  get the list of file extensions More...;  ; virtual bool syntaxForAddingRequiredPlugin (const std::string &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html:714,interface,interface,714,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::simulation::Task Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::simulation::Task Class Referenceabstract . #include <Task.h>. Inheritance diagram for sofa::simulation::Task:. [legend]; Detailed Description; Task class interface . Classes; class  Allocator;  Task Allocator class interface used to allocate tasks. More...;  ; class  Status;  Task Status class interface used to synchronize tasks. More...;  . Public Attributes; int m_id;  . Protected Attributes; int m_scheduledThread;  . Public Member Functions;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; virtual MemoryAlloc run ()=0;  ; virtual Task::Status * getStatus (void) const =0;  ; int getScheduledThread () const;  . Static Public Member Functions; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Attribute details. ◆ m_id. int sofa::simulation::Task::m_id. ◆ m_scheduledThread. int sofa::simulation::Task::m_scheduledThread. protected . Constructor details. ◆ Task(). sofa::simulation::Task::Task ; (; int ; scheduledThread). ◆ ~Task(). virtual sofa::simulation::Task::~Task ; (; ). virtualdefault . Function details. ◆ getAllocator(). Task::Allocator * sofa::simulation::Task::getAllocator ; (; ). static . ◆ getScheduledThread(). int sofa::simulation::Task::getScheduledThread ; (; ); const. ◆ getStatus(). virtual Task::Status* sofa::simulation::Task::getStatus ; (; void ; ); const. pure virtual . Implemented in sofa::simulation::CpuTask. ◆ operator delete() [1/2]. void sofa::simulation::Task::operator delete ; (; void * ; ptr). static . ◆ op",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task.html:426,interface,interface,426,api/master/sofa/html/classsofa_1_1simulation_1_1_task.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task.html,4,"['interface', 'synchroniz']","['interface', 'synchronize']"
Integrability,"﻿. SOFA API: sofa::simulation::Task::Allocator Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::Task::Allocator Class Referenceabstract . #include <Task.h>; Task Allocator class interface used to allocate tasks. ; More... Inheritance diagram for sofa::simulation::Task::Allocator:. [legend]; Detailed Description; Task Allocator class interface used to allocate tasks. . Public Member Functions; virtual void * allocate (std::size_t sz)=0;  ; virtual void free (void *ptr, std::size_t sz)=0;  . Function details. ◆ allocate(). virtual void* sofa::simulation::Task::Allocator::allocate ; (; std::size_t ; sz). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. ◆ free(). virtual void sofa::simulation::Task::Allocator::free ; (; void * ; ptr, . std::size_t ; sz . ). pure virtual . Implemented in sofa::simulation::StdTaskAllocator. sofasimulationTaskAllocator; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html:287,interface,interface,287,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_allocator.html,2,['interface'],['interface']
Integrability,﻿. SOFA API: sofa::simulation::Task::Status Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::Task::Status Class Referenceabstract . #include <Task.h>; Task Status class interface used to synchronize tasks. ; More... Inheritance diagram for sofa::simulation::Task::Status:. [legend]; Detailed Description; Task Status class interface used to synchronize tasks. . Public Member Functions; virtual ~Status ()=default;  ; virtual bool isBusy () const =0;  ; virtual int setBusy (bool busy)=0;  . Constructor details. ◆ ~Status(). virtual sofa::simulation::Task::Status::~Status ; (; ). virtualdefault . Function details. ◆ isBusy(). virtual bool sofa::simulation::Task::Status::isBusy ; (; ); const. pure virtual . Implemented in sofa::simulation::CpuTaskStatus. ◆ setBusy(). virtual int sofa::simulation::Task::Status::setBusy ; (; bool ; busy). pure virtual . Implemented in sofa::simulation::CpuTaskStatus. sofasimulationTaskStatus; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html:278,interface,interface,278,api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_task_1_1_status.html,4,"['interface', 'synchroniz']","['interface', 'synchronize']"
Integrability,"﻿. SOFA API: sofa::simulation::common Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::common Namespace Reference . Classes; struct  CleanupCheck;  ; class  MechanicalOperations;  ; class  VectorOperations;  ; struct  VisitorExecuteFunc;  . Functions; SOFA_SIMULATION_COMMON_API sofa::helper::Creator< xml::NodeElement::Factory, Node > NodeClass (""default"");  ; SOFA_SIMULATION_COMMON_API void init ();  Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isInitialized ();  Return true if and only if the SofaSimulationCommon library has been initialized. More...;  ; SOFA_SIMULATION_COMMON_API void cleanup ();  Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCommon library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::cleanup ; (; ). Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::init ; (; ). Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCommon library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isInitialized ; (; ). Return true if and only if the SofaSimulationCommon library has been initialized. . ◆ NodeClass(). SOFA_SIMULATION_COMMON_API sofa::helper::Creator<xml::NodeElement::Factory, Node> sofa::si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html:551,depend,dependencies,551,api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,2,['depend'],['dependencies']
Integrability,"﻿. SOFA API: sofa::simulation::common::MechanicalOperations Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Static Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::common::MechanicalOperations Class Reference . #include <MechanicalOperations.h>. Public Attributes; core::MechanicalParams mparams;  ; core::ConstraintParams cparams;  ; core::objectmodel::BaseContext * ctx;  . Protected Attributes; VisitorExecuteFunc executeVisitor;  . Static Protected Attributes; static std::map< core::objectmodel::BaseContext *, bool > hasShownMissingLinearSolverMap;  Store if the ""missing linear solver"" error message has already been shown for a given context. More...;  . Public Member Functions;  MechanicalOperations (const core::MechanicalParams *mparams, core::objectmodel::BaseContext *ctx, bool precomputedTraversalOrder=false);  ;  MechanicalOperations (const core::ExecParams *params, core::objectmodel::BaseContext *ctx, bool precomputedTraversalOrder=false);  ; core::MechanicalParams * operator-> ();  ;  operator const core::MechanicalParams * ();  ; Mechanical Vector operations; void propagateDx (core::MultiVecDerivId dx, bool ignore_flag=false);  Propagate the given displacement through all mappings. More...;  ; void propagateDxAndResetDf (core::MultiVecDerivId dx, core::MultiVecDerivId df);  Propagate the given displacement through all mappings and reset the current force delta. More...;  ; void propagateX (core::MultiVecCoordId x);  Propagate the given position through all mappings. More...;  ; void propagateV (core::MultiVecDerivId v);  Propagate the given velocity through all mappings. More...;  ; void propagateXAndV (core::MultiVecCoordId x, core::MultiVecDerivId v);  Propagate the given position and velocity through all mappings. More...;  ; void propagateXAndResetF (core::MultiVecCoordId x, core::MultiVecDerivId f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:759,message,message,759,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::simulation::core Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::core Namespace Reference . Classes; struct  CleanupCheck;  . Functions; SOFA_SIMULATION_CORE_API void init ();  Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isInitialized ();  Return true if and only if the SofaSimulationCore library has been initialized. More...;  ; SOFA_SIMULATION_CORE_API void cleanup ();  Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_CORE_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCore library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::cleanup ; (; ). Clean up the resources used by the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_CORE_API void sofa::simulation::core::init ; (; ). Initialize the SofaSimulationCore library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCore library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_CORE_API bool sofa::simulation::core::isInitialized ; (; ). Return true if and only if the SofaSimulationCore library has been initialized. . sofasimulationcore; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html:342,depend,dependencies,342,api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1core.html,4,['depend'],['dependencies']
Integrability,"﻿. SOFA API: sofa::simulation::graph Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions . sofa::simulation::graph Namespace Reference . Classes; class  ExportDotVisitor;  ; class  GetDownObjectsVisitor;  get all down objects respecting specified class_info and tags More...;  ; class  GetUpObjectsVisitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:665,depend,dependencies,665,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,2,['depend'],['dependencies']
Integrability,﻿. SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::graph::DAGNode::StatusStruct Struct Reference . #include <DAGNode.h>; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) ; More...; Detailed Description; wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) . Public Attributes; VisitedStatus status;  . Public Member Functions;  StatusStruct ();  ;  StatusStruct (const VisitedStatus &s);  ; void operator= (const VisitedStatus &s);  ; bool operator== (const VisitedStatus &s) const;  ; bool operator== (const StatusStruct &s) const;  ; bool operator!= (const VisitedStatus &s) const;  ; bool operator!= (const StatusStruct &s) const;  . Attribute details. ◆ status. VisitedStatus sofa::simulation::graph::DAGNode::StatusStruct::status. Constructor details. ◆ StatusStruct() [1/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; ). inline . ◆ StatusStruct() [2/2]. sofa::simulation::graph::DAGNode::StatusStruct::StatusStruct ; (; const VisitedStatus & ; s). inline . Function details. ◆ operator!=() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const StatusStruct & ; s); const. inline . ◆ operator!=() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator!= ; (; const VisitedStatus & ; s); const. inline . ◆ operator=(). void sofa::simulation::graph::DAGNode::StatusStruct::operator= ; (; const VisitedStatus & ; s). inline . ◆ operator==() [1/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const StatusStruct & ; s); const. inline . ◆ operator==() [2/2]. bool sofa::simulation::graph::DAGNode::StatusStruct::operator== ; (; const VisitedStatus & ; s); const. inline . sofasimulationgraphDAGNodeStatusStruct; Genera,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html:310,wrap,wrapper,310,api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1simulation_1_1graph_1_1_d_a_g_node_1_1_status_struct.html,2,['wrap'],['wrapper']
Integrability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAddMBKdxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAddMBKdxVisitor Class Reference . #include <MechanicalAddMBKdxVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAddMBKdxVisitor:. [legend]; Detailed Description; Accumulate the product of the system matrix by a given vector. Typically used in implicit integration solved by a Conjugate Gradient algorithm. The current value of the dx vector is used. This action is typically called after a MechanicalPropagateDxAndResetForceVisitor. . Public Attributes; sofa::core::MultiVecDerivId res;  ; bool accumulate;  Accumulate everything back to the DOFs through the mappings. More...;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalAddMBKdxVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, bool accumulate=true);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdForceField (simulation::Node *, sofa::core::behavior::BaseForceField *ff) override;  Process all the BaseForceField. More...;  ; void bwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; void bwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_kdx_visitor.html:569,integrat,integration,569,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_kdx_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_kdx_visitor.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor Class Reference . #include <MechanicalAddMDxVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalAddMDxVisitor:. [legend]; Detailed Description; Accumulate the product of the mass matrix by a given vector. Typically used in implicit integration solved by a Conjugate Gradient algorithm. Note that if a dx vector is given, it is used and propagated by the mappings, Otherwise the current value is used. . Public Attributes; sofa::core::MultiVecDerivId res;  ; sofa::core::MultiVecDerivId dx;  ; SReal factor;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalAddMDxVisitor (const sofa::core::MechanicalParams *mparams, sofa::core::MultiVecDerivId res, sofa::core::MultiVecDerivId dx, SReal factor);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMass (simulation::Node *, sofa::core::behavior::BaseMass *mass) override;  Process the BaseMass. More...;  ; const char * getClassName () const override;  ; virtual std::string getInfos () const override;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; bool isThreadSafe () const override;  Specify wheth",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor.html:559,integrat,integration,559,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_dx_visitor.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalBeginIntegrationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalBeginIntegrationVisitor Class Reference . #include <MechanicalBeginIntegrationVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalBeginIntegrationVisitor:. [legend]; Detailed Description; Visitor used to prepare a time integration step. Typically, does nothing. . Public Attributes; SReal dt;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalBeginIntegrationVisitor (const sofa::core::ExecParams *_params, SReal _dt);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_begin_integration_visitor.html:542,integrat,integration,542,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_begin_integration_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_begin_integration_visitor.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor Class Reference . #include <MechanicalIntegrateConstraintVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor:. [legend]; Detailed Description; Apply the motion correction computed from constraint force influence . Public Attributes; const sofa::core::ConstraintParams * cparams;  ; const double positionFactor;  use the OdeSolver to get the position integration factor More...;  ; const double velocityFactor;  use the OdeSolver to get the position integration factor More...;  ; sofa::core::ConstMultiVecDerivId correctionId;  ; sofa::core::MultiVecDerivId dxId;  ; sofa::core::MultiVecCoordId xId;  ; sofa::core::MultiVecDerivId vId;  ; int offset;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalIntegrateConstraintsVisitor (const core::ConstraintParams *cparams, double pf, double vf, sofa::core::ConstMultiVecDerivId correction, sofa::core::MultiVecDerivId dx=sofa::core::MultiVecDerivId(sofa::core::VecDerivId::dx()), sofa::core::MultiVecCoordId x=sofa::core::MultiVecCoordId(sofa::core::VecCoordId::position()), sofa::core::MultiVecDerivId v=sofa::core::MultiVecDerivId(sofa::core::VecDerivId::velocity()));  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *ms) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html:733,integrat,integration,733,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,2,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalIntegrationVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalIntegrationVisitor Class Reference . #include <MechanicalIntegrationVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalIntegrationVisitor:. [legend]; Detailed Description; Visitor used to do a time integration step using OdeSolvers . Public Attributes; SReal dt;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalIntegrationVisitor (const sofa::core::ExecParams *m_params, SReal _dt);  ; Result fwdOdeSolver (simulation::Node *node, sofa::core::behavior::OdeSolver *obj) override;  Process the OdeSolver. More...;  ; Result fwdInteractionForceField (simulation::Node *, sofa::core::behavior::BaseInteractionForceField *obj) override;  Process all the InteractionForceField. More...;  ; const char * getClassName () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integration_visitor.html:517,integrat,integration,517,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integration_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integration_visitor.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndVelocityVisitor Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndVelocityVisitor Class Reference . #include <MechanicalPropagateOnlyPositionAndVelocityVisitor.h>. Inheritance diagram for sofa::simulation::mechanicalvisitor::MechanicalPropagateOnlyPositionAndVelocityVisitor:. [legend]; Detailed Description; Propagate positions and velocities to all the levels of the hierarchy. At each level, the mappings form the parent to the child is applied. After the execution of this action, all the (mapped) degrees of freedom are consistent with the independent degrees of freedom. This action is typically applied after time integration of the independent degrees of freedom.; Note that this visitor only propagate through the mappings, and does not apply projective constraints as was previously done by MechanicalPropagatePositionAndVelocityVisitor. Use MechanicalProjectPositionAndVelocityVisitor before this visitor if projection is needed. . Public Attributes; SReal currentTime;  ; sofa::core::MultiVecCoordId x;  ; sofa::core::MultiVecDerivId v;  ;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalPropagateOnlyPositionAndVelocityVisitor (const sofa::core::MechanicalParams *mparams, SReal time=0, sofa::core::MultiVecCoordId x=sofa::core::VecId::position(), sofa::core::MultiVecDerivId v=sofa::core::VecId::velocity());  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html:887,integrat,integration,887,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_propagate_only_position_and_velocity_visitor.html,1,['integrat'],['integration']
Integrability,"﻿. SOFA API: sofa::testing::BaseTest Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; List of all members . sofa::testing::BaseTest Class Reference . #include <BaseTest.h>; Base class for Sofa test fixtures. ; More... Inheritance diagram for sofa::testing::BaseTest:. [legend]; Detailed Description; Base class for Sofa test fixtures. . Public Attributes; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Static Public Attributes; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Public Member Functions;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Attribute details. ◆ m_error. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_error. ◆ m_fatal. sofa::testing::MessageAsTestFailure sofa::testing::BaseTest::m_fatal. To prevent that you simply need to add the line EXPECT_MSG_EMIT(Error); Where you want to allow a message. . ◆ seed. int sofa::testing::BaseTest::seed = (unsigned int)time(nullptr). static . Seed value. . Constructor details. ◆ BaseTest(). sofa::testing::BaseTest::BaseTest ; (; ). Initialize Sofa and the random number generator. . ◆ ~BaseTest(). sofa::testing::BaseTest::~BaseTest ; (; ). override . Function details. ◆ onSetUp(). virtual void sofa::testing::BaseTest::onSetUp ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >, and sofa::AdvancedTimerTest. ◆ onTearDown(). virtual void sofa::testing::BaseTest::onTearDown ; (; ). inlinevirtual . Reimplemented in sofa::linearalgebra::testing::TestBaseMatrix< T >. sofatestingBaseTest; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html:1134,message,message,1134,api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_base_test.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::testing::ExpectMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::ExpectMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure during the object destruction when the expected message have not been received. Better use the macro: EXPECT_MSG_EMIT(Error) as a more 'good looking' version of; sofa::helper::logging::ExpectMessage failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  ExpectMessage (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~ExpectMessage ();  . Constructor details. ◆ ExpectMessage(). sofa::testing::ExpectMessage::ExpectMessage ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). ◆ ~ExpectMessage(). sofa::testing::ExpectMessage::~ExpectMessage ; (; ). virtual . sofatestingExpectMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html:353,message,message,353,api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_expect_message.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailure Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailure:. [legend]. Public Member Functions;  GtestMessageFrameFailure (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  ; virtual void finalize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Constructor details. ◆ GtestMessageFrameFailure(). sofa::testing::GtestMessageFrameFailure::GtestMessageFrameFailure ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). DEFINITION OF PRIVATE CLASSES ////////////////////////////////// . Function details. ◆ process(). void sofa::testing::GtestMessageFrameFailure::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html:460,message,message,460,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure.html,2,['message'],['message']
Integrability,"﻿. SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference . Inheritance diagram for sofa::testing::GtestMessageFrameFailureWhenMissing:. [legend]. Public Attributes; bool m_gotMessage {false};  ;  Public Attributes inherited from sofa::testing::GtestMessageFrame; Message::Type m_type;  ; const char * m_filename;  ; int m_lineno;  . Public Member Functions;  GtestMessageFrameFailureWhenMissing (Message::Type type, const char *filename, int lineno);  ; void process (Message &message) override;  ; void finalize () override;  ;  Public Member Functions inherited from sofa::testing::GtestMessageFrame; virtual ~GtestMessageFrame ();  . Attribute details. ◆ m_gotMessage. bool sofa::testing::GtestMessageFrameFailureWhenMissing::m_gotMessage {false}. Constructor details. ◆ GtestMessageFrameFailureWhenMissing(). sofa::testing::GtestMessageFrameFailureWhenMissing::GtestMessageFrameFailureWhenMissing ; (; Message::Type ; type, . const char * ; filename, . int ; lineno . ). Function details. ◆ finalize(). void sofa::testing::GtestMessageFrameFailureWhenMissing::finalize ; (; ). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. ◆ process(). void sofa::testing::GtestMessageFrameFailureWhenMissing::process ; (; Message & ; message). overridevirtual . Reimplemented from sofa::testing::GtestMessageFrame. sofatestingGtestMessageFrameFailureWhenMissing; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html:712,message,message,712,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing.html,2,['message'],['message']
Integrability,﻿. SOFA API: sofa::testing::IgnoreMessage Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::IgnoreMessage Class Reference . #include <TestMessageHandler.h>; Detailed Description; Locally hide the fact that a message is expected. Better use the macro: IGNORE_MSG(Error) as a more 'good looking' version of; sofa::helper::logging::IgnoreMessage ignore(sofa::helper::logging::Message::Error); . Public Member Functions;  IgnoreMessage (helper::logging::Message::Type t);  ; virtual ~IgnoreMessage ();  . Constructor details. ◆ IgnoreMessage(). sofa::testing::IgnoreMessage::IgnoreMessage ; (; helper::logging::Message::Type ; t). ◆ ~IgnoreMessage(). sofa::testing::IgnoreMessage::~IgnoreMessage ; (; ). virtual . sofatestingIgnoreMessage; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html:313,message,message,313,api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_ignore_message.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::testing::MessageAsTestFailure Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::testing::MessageAsTestFailure Class Reference . #include <TestMessageHandler.h>; Detailed Description; Rise a gtest failure when a message of type Message:type is emitted. Better use the macro: EXPECT_MSG_NOEMIT(Error) as a more 'good looking' version of; sofa::helper::logging::MessageAsTestFailure failure(sofa::helper::logging::Message::Error, FILE, LINE); . Public Member Functions;  MessageAsTestFailure (helper::logging::Message::Type t, const char *filename=""unknown"", int lineno=0);  ; virtual ~MessageAsTestFailure ();  . Constructor details. ◆ MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::MessageAsTestFailure ; (; helper::logging::Message::Type ; t, . const char * ; filename = ""unknown"", . int ; lineno = 0 . ). DEFINITION OF PUBLIC CLASSES /////////////////////////////////// . ◆ ~MessageAsTestFailure(). sofa::testing::MessageAsTestFailure::~MessageAsTestFailure ; (; ). virtual . sofatestingMessageAsTestFailure; Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html:326,message,message,326,api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_message_as_test_failure.html,1,['message'],['message']
Modifiability," #2. More...;  ; const MechanicalState< DataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Protected Member Functions; void resizeArray (std::size_t n);  ;  VectorSpringForceField ();  ;  VectorSpringForceField (MechanicalState *_object);  ;  VectorSpringForceField (MechanicalState *_object1, MechanicalState *_object2);  ; virtual ~VectorSpringForceField () override;  ; void createEdgeInformation (Index, Spring &t, const core::topology::BaseMeshTopology::Edge &e, const sofa::type::vector< Index > &ancestors, const sofa::type::vector< SReal > &coefs);  ;  Protected Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  PairInteractionForceField (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:19169,inherit,inherited,19169,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,4,['inherit'],['inherited']
Modifiability," #include <BaseMass.h>; Component responsible for mass-related computations (gravity, acceleration). ; More... Inheritance diagram for sofa::core::behavior::BaseMass:. [legend]; Detailed Description; Component responsible for mass-related computations (gravity, acceleration). ; Mass can be defined either as a scalar, vector, or a full mass-matrix. It is responsible for converting forces to accelerations (for explicit integrators), or displacements to forces (for implicit integrators).; It is often also a ForceField, computing gravity-related forces. . Public Attributes; Data< bool > m_separateGravity;  ; Rayleigh Damping (mass contribution); Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMass, StateAccessor);  ; virtual void initGnuplot (const std::string path)=0;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (const MechanicalParams *mparams, SR",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html:1209,inherit,inherited,1209,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,1,['inherit'],['inherited']
Modifiability," #include <TopologySubsetData.h>; A class for storing element related data. Automatically manages topology changes. ; More... Inheritance diagram for sofa::core::topology::TopologySubsetData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologySubsetData< ElementType, VecT >; A class for storing element related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: elements added, removed, fused, renumbered). . Protected Attributes; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains id of element link to each data[] More...;  ; bool m_addNewElements = false;  ;  Protected Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< VecT >::InitData &data);  Default Constructor to init Data. More...;  ; void setMap2Elements (const sofa::type::vector< Index > _map2Elements);  Method to set a vector map to rull this subsetData. Will set. More...;  ; sofa::type::vector< Index > & getMap2Elements ();  Getter of the vector map indices. More...;  ; void supportNewTopologyElements (bool value);  ; bool isNewTopology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:1214,inherit,inherited,1214,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,2,['inherit'],['inherited']
Modifiability," &);  ; std::istream & operator>> (std::istream &in, PointSetTopologyContainer &);  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:27573,inherit,inherited,27573,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,3,['inherit'],['inherited']
Modifiability," &)=delete;  ; bool testIntersection (collision::geometry::Line &, collision::geometry::Line &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Point &)=delete;  ; bool testIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Sphere &)=delete;  ; bool testIntersection (collision::geometry::Ray &, collision::geometry::Triangle &)=delete;  ; int computeIntersection (collision::geometry::Cube &, collision::geometry::Cube &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Point &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Sphere &, collision::geometry::Sphere &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Sphere &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Line &, collision::geometry::Line &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Point &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Triangle &, collision::geometry::Sphere &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Sphere &, OutputVector *)=delete;  ; int computeIntersection (collision::geometry::Ray &, collision::geometry::Triangle &, OutputVector *)=delete;  ;  Public Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:9510,inherit,inherited,9510,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['inherit'],['inherited']
Modifiability," &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::objectmodel::Context;  SOFA_CLASS (Context, BaseContext);  ; void copyContext (const Context &c);  Copy the context variables from the given instance. More...;  ; void copySimulationContext (const Context &c);  Copy the context variables of visualization from the given instance. More...;  ; bool isActive () const override;  The Context is active. More...;  ; void setActive (bool val) override;  State of the context. More...;  ; bool isSleeping () const override;  The Context is sleeping. More...;  ; bool canChangeSleepingState () const override;  The Context can change its sleeping state. More...;  ; const Vec3 & getGravity () const override;  Gravity in local coordinates. More...;  ; void setGravity (const Vec3 &) override;  Gravity in local coordinates. More...;  ; SReal getDt () const override;  Simulation timestep. More...;  ; SReal getTime () const override;  Simulation time. More...;  ; bool getAnimate () const override;  Animat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:17415,inherit,inherited,17415,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,4,"['inherit', 'variab']","['inherited', 'variables']"
Modifiability," &noexcept;  ; constexpr sofa::Index && get () &&noexcept;  ; constexpr const sofa::Index && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< sofa::Index, N > &y);  ; constexpr const sofa::Index * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< sofa::Index, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const sofa::Index &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; sofa::Index elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< sofa::Index, GeometryElement::NumberOfNodes >; static constexpr size_type size () noexcept;  ; static bool empty () noexcept;  ; static constexpr size_type max_size () noexcept;  . Attribute details. ◆ Element_type. template<typename GeometryElement > . constexpr sofa::geometry::ElementType sofa::topology::Element< GeometryElement >::Element_type = GeometryElement::Element_type. staticconstexpr . ◆ NumberOfNodes. template<typename GeometryElement > . constexpr auto sofa::topology::Element< GeometryElement >::NumberOfNodes = GeometryElement::NumberOfNodes. staticconstexpr . Constructor details. ◆ Element() [1/2]. template<typename GeometryElement > . constexpr sofa::topology::Element< GeometryElement >::Element ; (; ). inlineconstexprnoexcept . ◆ Element() [2/2]. template<typename GeometryElement > . template<typename... ArgsT, typename = std::enable_if_t < (std::is_convertible_v<ArgsT, sofa::Index> && ...)>> . constexpr sofa::topology::Element< GeometryElemen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html:2448,inherit,inherited,2448,api/master/sofa/html/structsofa_1_1topology_1_1_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1topology_1_1_element.html,2,['inherit'],['inherited']
Modifiability," &path, const BaseLink *link);  . Protected Member Functions;  CollisionAlgorithm ();  ; virtual void changeInstance (Instance)=0;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html:10783,inherit,inherited,10783,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,1,['inherit'],['inherited']
Modifiability," &pluginName, const std::vector< std::string > &listComponents, std::ostream &ss, sofa::simulation::Node *nodeWhereAdded) override;  ;  Public Member Functions inherited from sofa::simulation::SceneLoader; virtual ~SceneLoader ()=default;  ; virtual bool canLoadFileName (const char *filename);  Pre-loading check. More...;  ; virtual bool canWriteFileName (const char *filename);  Pre-saving check. More...;  ; sofa::simulation::NodeSPtr load (const std::string &filename, bool reload=false, const std::vector< std::string > &sceneArgs=std::vector< std::string >(0));  load the file More...;  . Static Public Member Functions; static NodeSPtr processXML (xml::BaseElement *xml, const char *filename);  generic function to process xml tree (after loading the xml structure) More...;  ; static NodeSPtr loadFromMemory (const char *filename, const char *data);  load a scene from memory (typically : an xml into a string) More...;  ;  Static Public Member Functions inherited from sofa::simulation::SceneLoader; static void addListener (Listener *l);  adding a listener More...;  ; static void removeListener (Listener *l);  removing a listener More...;  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::simulation::SceneLoader; static Listeners s_listeners;  ;  Static Protected Member Functions inherited from sofa::simulation::SceneLoader; static void notifyLoadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyReloadingSceneBefore (SceneLoader *sceneLoader);  ; static void notifyLoadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  ; static void notifyReloadingSceneAfter (sofa::simulation::NodeSPtr node, SceneLoader *sceneLoader);  . Attribute details. ◆ loadSucceed. bool sofa::simulation::SceneLoaderXML::loadSucceed = true. static . Function details. ◆ canLoadFileExtension(). bool sofa::simulation::SceneLoaderXML::canLoadFileExtension ; (; const char * ; extension). overridevirtual . Pre-loading check. ; Implement",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html:2272,inherit,inherited,2272,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,1,['inherit'],['inherited']
Modifiability," &type, BaseElement *parent=nullptr);  ;  ~NodeElement () override;  ; bool setParent (BaseElement *newParent) override;  Change this node's parent. Note that this method is protected as it should be called by the parent's addChild/removeChild methods. More...;  ; bool initNode () override;  ; bool init () override;  ; virtual const char * getClass () const override;  Get the node class (Scene, Mapping, ...) More...;  ;  Public Member Functions inherited from sofa::simulation::xml::Element< sofa::core::objectmodel::BaseNode >;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; sofa::core::objectmodel::BaseNode * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual void setBaseFile (const std::string &newBaseFile);  ; const std::string & getSrcFile () const;  ; virtual void setSrcFile (const std::string &newSrcFile);  ; int getSrcLine () const;  ; virtual void setSrcLine (const int l);  ; bool isFileRoot ();  Return true",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html:1313,inherit,inherited,1313,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_node_element.html,1,['inherit'],['inherited']
Modifiability," & ; c, . Index & ; d . ). protected . ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::initSmall ; (; int ; i, . Index & ; a, . Index & ; b, . Index & ; c, . Index & ; d . ). protected . ◆ peudo_determinant_for_coef(). template<class DataTypes > . TetrahedralCorotationalFEMForceField< DataTypes >::Real sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::peudo_determinant_for_coef ; (; const type::Mat< 2, 3, Real > & ; M). protected . ◆ printStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::printStiffnessMatrix ; (; int ; idTetra). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setComputeGlobalMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::setComputeGlobalMatrix ; (; bool ; val). inline . ◆ setMethod(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::setMethod ; (; int ; val). inline . ◆ setUpdateStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::setUpdateStiffnessMatrix ; (; bool ; val). inline . ◆ SOFA_ATTRIBUTE_DISABLED(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::TetrahedralCorotationalFEMForceField< DataTypes >::SOFA_ATTRIBUTE_DISABLED ; (; """" ; , . ""v24.12"" ; , . ""Use d_youngModulus instead"" ;  . ). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html:44934,variab,variables,44934,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,1,['variab'],['variables']
Modifiability, () const;  ; virtual size_t getEventTypeIndex () const =0;  . Hat; std::vector< AxisEvent * > axisEvents;  State of the Analogic Pad. More...;  ; ButtonEvent * buttonEvent;  State of the Joystick Buttons. More...;  ; std::vector< HatEvent * > hatEvents;  State of the directional cross. More...;  ; const HatEvent * getHatEvent (const int) const;  ; const std::vector< HatEvent * > & getHatEvents (void) const;  ; unsigned int getHatEventsSize (void) const;  ; void addHatEvent (HatEvent *);  ;  JoystickEvent ();  default constructor. More...;  ;  ~JoystickEvent () override;  default destructor. More...;  ; static const char * GetClassName ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Attribute details. ◆ axisEvents. std::vector< AxisEvent* > sofa::core::objectmodel::JoystickEvent::axisEvents. protected . State of the Analogic Pad. . ◆ buttonEvent. ButtonEvent* sofa::core::objectmodel::JoystickEvent::buttonEvent. protected . State of the Joystick Buttons. . ◆ hatEvents. std::vector< HatEvent* > sofa::core::objectmodel::JoystickEvent::hatEvents. protected . State of the directional cross. . Constructor details. ◆ JoystickEvent(). sofa::core::objectmodel::JoystickEvent::JoystickEvent ; (; ). default constructor. . ◆ ~JoystickEvent(). sofa::core::objectmodel::JoystickEvent::~JoystickEvent ; (; ). override . default destructor. . Function details. ◆ addAxisEvent(). void sofa::core::objectmodel::JoystickEvent::addAxisEvent ; (; JoystickEvent::AxisEvent * ; aEvent). ◆ addHatEvent(). void sofa::core::objectmodel::JoystickEvent::addHatEvent ; (; JoystickEvent::HatEvent * ; hEvent). ◆ getAxisEv,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event.html:2474,inherit,inherited,2474,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_joystick_event.html,1,['inherit'],['inherited']
Modifiability," () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; virtual Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static BaseContext * getDefault ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BaseContext ();  ;  ~BaseContext () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; std::ostream SOFA_CORE_API & operator<< (std::ostream &out, const BaseContext &c);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra mess",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:16149,inherit,inherited,16149,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['inherit'],['inherited']
Modifiability," () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< DataTypes2 > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< DataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Protected Member Functions;  QuadBendingSprings ();  ;  ~QuadBendingSprings ();  ; void addSpring (unsigned, unsigned, std::set< IndexPair > &);  ; void registerEdge (IndexPair, IndexPair, std::map< IndexPair, IndexPair > &, std::set< IndexPair > &);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SpringForceField (SReal _ks=100.0, SReal _kd=5.0);  ;  SpringForceField (MechanicalState *object1, MechanicalState *object2, SReal _ks=100.0, SReal _kd=5.0);  ; virtual std::unique_ptr< SpringForce > computeSpringForce (const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring);  ; virtual void addSpringForce (Real &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, sofa::Index, const Spring &spring);  ; void initializeTopologyHandler (sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId);  ; void updateTopologyIndicesFromSprings ();  ; void updateTopologyIndicesFromSprings_springAdded ();  ; void updateTopologyIndices_springRemoved (unsign",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:19874,inherit,inherited,19874,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,1,['inherit'],['inherited']
Modifiability," () const;  Specify whether this visitor can be parallelized. More...;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::BaseMechanicalVisitor; virtual Result processNodeTopDown (simulation::Node *node, VisitorContext *ctx);  ; virtual void processNodeBottomUp (simulation::Node *node, VisitorContext *ctx);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_component_groups_visitor.html:9758,inherit,inherited,9758,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_component_groups_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_component_groups_visitor.html,5,['inherit'],['inherited']
Modifiability," () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< unsigned int > * beginEdit ();  ; void endEdit ();  ; const type::vector< unsigned int > & getValue () const;  ; void setValue (const type::vector< unsigned int > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html:1906,variab,variable,1906,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,1,['variab'],['variable']
Modifiability," ();  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html:13329,inherit,inherited,13329,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,1,['inherit'],['inherited']
Modifiability," ();  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:14462,inherit,inherited,14462,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,2,['inherit'],['inherited']
Modifiability," ();  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::State< TDataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:18326,inherit,inherited,18326,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['inherit'],['inherited']
Modifiability," ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AddRecordedCameraButtonSetting::SPtr sofa::gui::common::AddRecordedCameraOperation::setting. protected . Constructor details. ◆ AddRecordedCameraOperation(). sofa::gui::common::AddRecordedCameraOperation::AddRecordedCameraOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::AddRecordedCameraOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html:1798,inherit,inherited,1798,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,1,['inherit'],['inherited']
Modifiability," ();  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void start ();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor details. ◆ StartNavigationOperation(). sofa::gui::common::StartNavigationOperation::StartNavigationOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::StartNavigationOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html:1788,inherit,inherited,1788,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,1,['inherit'],['inherited']
Modifiability," ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void integrateMesh ();  integrates the whole mesh More...;  ; void integrateTriangle (type::Vec3 kV0, type::Vec3 kV1, type::Vec3 kV2);  ; void generateRigid ();  generates the RigidMass from the mesh integral More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures tha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:14184,inherit,inherited,14184,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['inherit'],['inherited']
Modifiability," (; Index ; i, . Index & ; a, . Index & ; b, . Index & ; c, . Index & ; d . ). protected . ◆ initSVD(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::initSVD ; (; Index ; i, . Index & ; a, . Index & ; b, . Index & ; c, . Index & ; d . ). protected . ◆ isComputeVonMisesStressMethodSet(). template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::isComputeVonMisesStressMethodSet. protected . ◆ peudo_determinant_for_coef(). template<class DataTypes > . TetrahedronFEMForceField< DataTypes >::Real sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::peudo_determinant_for_coef ; (; const type::Mat< 2, 3, Real > & ; M). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::reinit. inlineoverridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reset(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::reset. overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setComputeGlobalMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::setComputeGlobalMatrix ; (; bool ; val). inline . ◆ setMethod() [1/2]. template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::setMethod ; (; int ; val). ◆ setMethod() [2/2]. template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::setMethod ; (; std::string ; methodName). ◆ setUpdateStiffnessMatrix(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::Tetrahe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:62002,variab,variables,62002,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['variab'],['variables']
Modifiability," (ActiveFlags & FLAG_MULTILINK) != 0;  ; static constexpr bool StorePath = (ActiveFlags & FLAG_STOREPATH) != 0;  . Protected Attributes; OwnerType * m_owner {nullptr};  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html:2373,inherit,inherited,2373,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_t_link.html,1,['inherit'],['inherited']
Modifiability," (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshBarycentricMapperEngine ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html:14721,inherit,inherited,14721,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,1,['inherit'],['inherited']
Modifiability," (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< DataTypes > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< DataTypes > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< DataTypes > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:13892,inherit,inherited,13892,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,1,['inherit'],['inherited']
Modifiability," (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  AbstractTransformMatrixEngine ();  ;  ~AbstractTransformMatrixEngine () override;  ; void doUpdate () override=0;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html:12403,inherit,inherited,12403,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability," (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualManagerSecondaryPass, VisualManagerPass);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void bindInput (core::visual::VisualParams *);  ; void unbindInput ();  ; sofa::gl::FrameBufferObject & getFBO () override;  ; const sofa::core::objectmodel::TagSet & getOutputTags ();  ;  Public Member Functions inherited from sofa::gl::component::shader::VisualManagerPass;  SOFA_CLASS (VisualManagerPass, core::visual::VisualManager);  ;  VisualManagerPass ();  ;  ~VisualManagerPass () override;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void handleEvent (sofa::core::objectmodel::Event *) override;  Handle an event. More...;  ; virtual bool isPrerendered ();  ; bool hasFilledFbo ();  ; std::string getOutputName ();  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:4333,inherit,inherited,4333,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,1,['inherit'],['inherited']
Modifiability," (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  OscillatingTorsionPressureForceField ();  ;  ~OscillatingTorsionPressureForceField () override;  ; void selectTrianglesAlongPlane ();  ; void selectTrianglesFromString ();  ; void initTriangleInformation ();  ; bool isPointInPlane (Coord p);  ; Coord getVecFromRotAxis (const Coord &x);  ; Real getAngle (const Coord &v1, const Coord &v2);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html:18308,inherit,inherited,18308,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,4,['inherit'],['inherited']
Modifiability," (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ buttonList. QButtonGroup* sofa::gui::qt::RadioDataWidget::buttonList. protected . ◆ buttonMode. bool sofa::gui::qt::RadioDataWidget::buttonMode. protected . ◆ comboList. QComboBox* sofa::gui::qt::RadioDataWidget::comboList. protected . Constructor details. ◆ RadioDataWidget(). sofa::gui::qt::RadioDataWidget::RadioDataWidget ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::Data< sofa::helper::OptionsGroup > * ; m_data . ). inline . The class constructor takes a TData<RadioTrick> since it creates a widget for a that particular data type. . Function details. ◆ createWidgets(). bool sofa::gui::qt::RadioDataWidget::createWidgets ; (; ). virtual . In this method we create the widgets and perform the signal / slots connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). void sofa::gui::qt::RadioDataWidget::readFromData ; (; ). protectedvirtual . Implements how update the widgets knowing the data value. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). void sofa::gui::qt::RadioDataWidget::setDataReadOnly ; (; bool ; readOnly). virtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). void sofa::gui::qt::RadioDataWidget::writeToData ; (; ). protectedvirtual . Implements how to update the data, knowing the widget value. ; Implements sofa::gui::qt::DataWidget. sofaguiqtRadioDataWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html:4725,config,configure,4725,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_radio_data_widget.html,1,['config'],['configure']
Modifiability," (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes, DataTypes >;  PairStateAccessor (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:17826,inherit,inherited,17826,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,2,['inherit'],['inherited']
Modifiability," (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::loader::BaseLoader;  BaseLoader ();  ;  ~BaseLoader () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Function details. ◆ SOFA_CLASS(). sofa::core::loader::ImageLoader::SOFA_CLASS ; (; ImageLoader ; , . BaseLoader ;  . ). sofacoreloaderImageLoader; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html:12585,inherit,inherited,12585,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,2,['inherit'],['inherited']
Modifiability," (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; bool solveSystem (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; bool applyCorrection (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; ConstraintProblem * getConstraintProblem () override;  ; void lockConstraintProblem (sofa::core::objectmodel::BaseObject *from, ConstraintProblem *p1, ConstraintProblem *p2=nullptr) override;  Do not use the following LCPs until the next call to this function. This is used to prevent concurrent access to the LCP when using a LCPForceFeedback through an haptic thread. More...;  ;  Public Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl;  ConstraintSolverImpl ();  ;  ~ConstraintSolverImpl () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void removeConstraintCorrection (core::behavior::BaseConstraintCorrection *s) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintSolver;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; virtual void rebuildSystem (SReal, SReal);  ; virtual void computeResidual (const core::ExecParams *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual MultiVecDerivId getLambda () const;  ; virtual MultiVecDerivId getDx () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:6258,inherit,inherited,6258,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['inherit'],['inherited']
Modifiability," (const core::visual::VisualParams *vp) override;  ; void preDrawScene (core::visual::VisualParams *vp) override;  Called before rendering the scene. More...;  ; bool drawScene (core::visual::VisualParams *vp) override;  Called instead of rendering the scene. More...;  ; void postDrawScene (core::visual::VisualParams *vp) override;  Called after rendering the scene. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualManager;  SOFA_CLASS (VisualManager, VisualModel);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-bo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html:3225,inherit,inherited,3225,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,2,['inherit'],['inherited']
Modifiability," (core::topology::Topology *t);  . internalupdate; Methods related to tracking of data and the internal update . void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  . control; Basic control . void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:11515,variab,variables,11515,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,2,['variab'],['variables']
Modifiability," (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes. More...;  ; st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:2605,inherit,inherited,2605,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['inherit'],['inherited']
Modifiability," (int, int);  RayCasting PickHandler. More...;  ; PickHandler * getPickHandler ();  ; virtual void drawScene (void)=0;  the rendering pass is done here (have to be called in a loop) More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::viewer::SofaViewer; std::unique_ptr< EngineBackend > m_backend;  ; QTimer captureTimer;  ; bool m_isControlPressed;  ; ColourPickingRenderCallBack colourPickingRenderCallBack;  ;  Protected Attributes inherited from sofa::gui::common::BaseViewer; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  ;  Protected Member Functions inherited from sofa::gui::qt::viewer::SofaViewer; void redraw () override;  internally called while the actual viewer needs a redraw (ie the camera changed) More...;  ;  Signals inherited from sofa::gui::qt::viewer::SofaViewer; virtual void redrawn ()=0;  ; virtual void resizeW (int)=0;  ; virtual void resizeH (int)=0;  . Constructor details. ◆ CustomPolicySofaViewer(). template<typename VisualModelPolicyType > . sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >::CustomPolicySofaViewer ; (; ). inline . ◆ ~CustomPolicySofaViewer(). template<typename VisualModelPolicyType > . sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >::~CustomPolicySofaViewer ; (; ). inlineoverride . sofaguiqtviewerCustomPolicySofaViewer; Generated on Mon Nov 11 2024 03:25:44 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html:4872,inherit,inherited,4872,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer.html,1,['inherit'],['inherited']
Modifiability," (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Constructor details. ◆ ImageDDS() [1/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; ). inline . ◆ ImageDDS() [2/2]. sofa::helper::io::ImageDDS::ImageDDS ; (; const std::string & ; filename). inline . Function details. ◆ load(). bool sofa::helper::io::ImageDDS::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::ImageDDS::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. sofahelperioImageDDS; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:1930,inherit,inherited,1930,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,3,['inherit'],['inherited']
Modifiability," ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::removeConstraint ; (; Index ; index). ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes > . sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(DirectionProjectiveConstraint< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes) ;  . ). Enum details. ◆ anonymous enum. template<class DataTypes > . anonymous enum. Enumeratorbsize . Related details. ◆ DirectionProjectiveConstraintInternalData< DataTypes >. template<class DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:27564,variab,variables,27564,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['variab'],['variables']
Modifiability," * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(IndexValueMapper, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html:2233,variab,variables,2233,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,1,['variab'],['variables']
Modifiability," *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergeSets ();  ;  ~MergeSets () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html:13386,inherit,inherited,13386,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,1,['inherit'],['inherited']
Modifiability," *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  EdgePressureForceField ();  ; virtual ~EdgePressureForceField ();  ; void selectEdgesAlongPlane ();  ; void selectEdgesFromIndices (const type::vector< Index > &inputIndices);  ; void selectEdgesFromString ();  ; void selectEdgesFromEdgeList ();  ; void updateEdgeInformation ();  ; void initEdgeInformation ();  ; bool isPointInPlane (Coord p);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html:16787,inherit,inherited,16787,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,4,['inherit'],['inherited']
Modifiability," *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static OglColorMap * getDefault ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  OglColorMap ();  ;  ~OglColorMap () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseCont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html:13263,inherit,inherited,13263,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,1,['inherit'],['inherited']
Modifiability," *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairBoxROI ();  ;  ~PairBoxROI () override;  ; bool isPointInBox (const CPos &p, const Vec6 &b);  ; bool isPointInBox (const PointID &pid, const Vec6 &b);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html:14637,inherit,inherited,14637,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,1,['inherit'],['inherited']
Modifiability," *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  . Protected Member Functions;  IncrSAP ();  ;  ~IncrSAP () override;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Coll",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:11414,inherit,inherited,11414,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,1,['inherit'],['inherited']
Modifiability," *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >;  SOFA_CLASS (VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types));  ;  VisualState ();  ; virtual void resize (Size vsize) override;  Resize all stored vector. More...;  ; virtual Size getSize () const override;  Current size of all stored vectors. More...;  ; virtual Data< VecCoord > * write (core::VecCoordId v) override;  ; virtual Data< VecDeriv > * write (core::VecDerivId v) override;  ; virtual Data< MatrixDeriv > * write (core::MatrixDerivId) override;  ; virtual const Data< VecCoord > * read (core::ConstVecCoordId v) const override;  ; virtual const Data< VecDeriv > * read (core::ConstVecDerivId v) const override;  ; virtual const Data< MatrixDeriv > * read (core::ConstMatrixDerivId) const override;  ;  Public Member Functions inherited from sofa::core::State< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:20438,inherit,inherited,20438,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,6,['inherit'],['inherited']
Modifiability," *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  PairStateAccessor (MechanicalState< TDataTypes > *mm1=nullptr, MechanicalState< TDataTypes > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Friends; template<typename > ; class BilateralLagrangianConstraintSpecialization;  That any templates variation of BilateralLagrangianConstraintSpecialization are friend. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< TDataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the sub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:22739,inherit,inherited,22739,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability," *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TranslateTransformMatrixEngine ();  ;  ~TranslateTransformMatrixEngine () override;  ; void doUpdate () override;  ;  Protected Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  AbstractTransformMatrixEngine ();  ;  ~AbstractTransformMatrixEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html:12930,inherit,inherited,12930,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,2,['inherit'],['inherited']
Modifiability," *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::topology::container::constant::MeshTopology; sofa::core::objectmodel::RenamedData< SeqPoints > seqPoints;  ; sofa::core::objectmodel::RenamedData< SeqEdges > seqEdges;  ; sofa::core::objectmodel::RenamedData< SeqTriangles > seqTriangles;  ; sofa::core::objectmodel::RenamedData< SeqQuads > seqQuads;  ; sofa::core::objectmodel::RenamedData< SeqTetrahedra > seqTetrahedra;  ; sofa::core::objectmodel::RenamedData< SeqHexahedra > seqHexahedra;  ; sofa::core::objectmodel::RenamedData< SeqUV > seqUVs;  ; sofa::core::objectmodel::RenamedData< bool > _drawEdges;  ; sofa::core::objectmodel::RenamedData< bool > _drawTriangles;  ; sofa::core::objectmodel::RenamedData< bool > _drawQuads;  ; sofa::core::objectmodel::RenamedData< bool > _drawTetra;  ; sofa::core::objectmodel::RenamedData< bool > _drawHexa;  ; Data< SeqPoints > d_seqPoints;  List of point positions. More...;  ; Data< SeqEdges > d_seqEdges;  List of edge indices. More...;  ; Data< SeqTriangles > d_seqTriangles;  List of triangle indices. More...;  ; Data< SeqQuads > d_seqQuads;  List of quad indices. More...;  ; Data< SeqTetrahedra > d_seqTetrahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:34347,inherit,inherited,34347,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,2,['inherit'],['inherited']
Modifiability," *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Friends; class Loader;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_filename. template<class DataTypes > . sofa::core::objectmodel::DataFileName sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::d_filename. the filename where to load the spring information . ◆ d_springArray. template<class DataTypes > . sofa::core::topology::EdgeData<sofa::type::vector<Spring> > sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::d_spr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:21982,inherit,inherited,21982,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['inherit'],['inherited']
Modifiability," *parent=nullptr);  ; bool initNode () override;  ;  Public Member Functions inherited from sofa::simulation::xml::ObjectElement;  ObjectElement (const std::string &name, const std::string &type, BaseElement *parent=nullptr);  ;  ~ObjectElement () override;  ; bool initNode () override;  ; bool init () override;  ; virtual const char * getClass () const override;  Get the node class (Scene, Mapping, ...) More...;  ;  Public Member Functions inherited from sofa::simulation::xml::Element< sofa::core::objectmodel::BaseObject >;  Element (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~Element () override;  ; sofa::core::objectmodel::BaseObject * getTypedObject ();  ; virtual void setObject (typename Object::SPtr newObject);  ; sofa::core::objectmodel::Base * getObject () override;  Get the associated object. More...;  ;  Public Member Functions inherited from sofa::simulation::xml::BaseElement;  BaseElement (const std::string &name, const std::string &type, BaseElement *newParent=nullptr);  ;  ~BaseElement () override;  ; std::string getName () override;  Get the node instance name. More...;  ; virtual void setName (const std::string &newName) override;  Set the object instance name. More...;  ; std::string getType ();  Get the node instance type (MassObject, IdentityMapping, ...) More...;  ; virtual void setType (const std::string &newType);  ; sofa::core::objectmodel::BaseObjectDescription * getParent () const override;  Get the parent node. More...;  ; BaseElement * getParentElement () const;  Get the parent node. More...;  ; std::string getBaseFile () override;  Get the file where this description was read from. Useful to resolve relative file paths. More...;  ; virtual void setBaseFile (const std::string &newBaseFile);  ; const std::string & getSrcFile () const;  ; virtual void setSrcFile (const std::string &newSrcFile);  ; int getSrcLine () const;  ; virtual void setSrcLine (const int l);  ; bool isFileRoot ();  Return true",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html:1430,inherit,inherited,1430,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_multi_mapping_element.html,1,['inherit'],['inherited']
Modifiability," *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  WriteTopology ();  ;  ~WriteTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_filename. sofa::core::objectmodel::DataFileName sofa::component::playback::WriteTopology::d_filename. ◆ d_interval. Data< double > sofa::component::playback::WriteTopology::d_interval. time duration between outputs . ◆ d_period. Data< double > sofa::component::playback::WriteTopology::d_period. period between outputs . ◆ d_time. Data< type::vector<double> > sofa::component::playback::WriteTopology::d_time. s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html:14036,inherit,inherited,14036,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,1,['inherit'],['inherited']
Modifiability," *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; static Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Attribute details. ◆ _finalWeights. template<class DataTypes > . type::vector< std::pair<Index, Weight> > sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >::_finalWeights. ◆ _weights. template<class DataTypes > . type::vector< type::vector<Weight> > sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >::_weights. ◆ CoarseToFine. template<class DataTypes > . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:33283,inherit,inherited,33283,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,3,['inherit'],['inherited']
Modifiability," *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; static Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Attribute details. ◆ _lumpedMasses. template<class DataTypes > . type::vector<Coord> sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::_lumpedMasses. protected . masses per particle computed by lumping mass matrices . ◆ _particleMasses. template<class DataTypes > . MassVector sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::_particleMasses. protected . masses per particle in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:28744,inherit,inherited,28744,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,3,['inherit'],['inherited']
Modifiability," *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; static Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Attribute details. ◆ d_nbVirtualFinerLevels. template<class DataTypes > . Data<int> sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >::d_nbVirtualFinerLevels. use virtual finer levels, in order to compte non-uniform stiffness . ◆ d_totalMass. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >::d_totalMass. ◆ d_use",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:30837,inherit,inherited,30837,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,3,['inherit'],['inherited']
Modifiability," *rgb, float *z=nullptr)=0;  . Constructor details. ◆ DrawTool(). sofa::helper::visual::DrawTool::DrawTool ; (; ). inline . ◆ ~DrawTool(). virtual sofa::helper::visual::DrawTool::~DrawTool ; (; ). inlinevirtual . ◆ ~StateLifeCycle(). sofa::helper::visual::DrawTool::~StateLifeCycle ; (; ). Function details. ◆ clear(). virtual void sofa::helper::visual::DrawTool::clear ; (; ). inlinevirtual . Reimplemented in sofa::gl::DrawToolGL. ◆ disableBlending(). virtual void sofa::helper::visual::DrawTool::disableBlending ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableDepthTest(). virtual void sofa::helper::visual::DrawTool::disableDepthTest ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disableLighting(). virtual void sofa::helper::visual::DrawTool::disableLighting ; (; ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ disablePolygonOffset(). virtual void sofa::helper::visual::DrawTool::disablePolygonOffset ; (; ). pure virtual . Remove variable depth offset for polygon drawing. ; Implemented in sofa::gl::DrawToolGL. ◆ draw3DText(). virtual void sofa::helper::visual::DrawTool::draw3DText ; (; const Vec3 & ; p, . float ; scale, . const RGBAColor & ; color, . const char * ; text . ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ draw3DText_Indices(). virtual void sofa::helper::visual::DrawTool::draw3DText_Indices ; (; const std::vector< Vec3 > & ; positions, . float ; scale, . const RGBAColor & ; color . ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ drawArrow() [1/3]. virtual void sofa::helper::visual::DrawTool::drawArrow ; (; const Vec3 & ; p1, . const Vec3 & ; p2, . float ; radius, . const RGBAColor & ; color, . int ; subd = 16 . ). pure virtual . Implemented in sofa::gl::DrawToolGL. ◆ drawArrow() [2/3]. virtual void sofa::helper::visual::DrawTool::drawArrow ; (; const Vec3 & ; p1, . const Vec3 & ; p2, . float ; radius, . float ; coneLength, . const RGBAColor & ; color, . int ; subd = 16 . ). pure virtual . Implemen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html:10589,variab,variable,10589,api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1visual_1_1_draw_tool.html,1,['variab'],['variable']
Modifiability," , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Protected Member Functions; virtual Result processNodeTopDown (simulation::Node *node, VisitorContext *ctx);  ; virtual void processNodeBottomUp (simulation::Node *node, VisitorContext *ctx);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Attribute detail",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html:11456,inherit,inherited,11456,api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_base_mechanical_visitor.html,1,['inherit'],['inherited']
Modifiability, - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag: Plugin_SoftRobots. /4; ; SOFA - Topic Tag: Plugin_SoftRobots. /5; ; SOFA - Topic Tag: Plugin_SoftRobots. /6; ; SOFA - Topic Tag: Plugin_SoftRobots. /7; ; SOFA - Topic Tag: Plugin_SoftRobots. SOFA - Topic Tag: Plugin_SoftRobots. /plugin-failed; . /feed; ; plugin failed – SOFA. SOFA - Topic Tag: plugin failed. /pluginloadingfailed; . /feed; ; PluginLoadingfailed – SOFA. SOFA - Topic Tag: PluginLoadingfailed. /plugin-not-found; . /feed; ; Plugin not found – SOFA. SOFA - Topic Tag: Plugin not found. /plugin-price; . /feed; ; Plugin price – SOFA. SOFA - Topic Tag: Plugin price. /plugins; . /feed; ; plugins – SOFA. SOFA - Topic Tag: plugins. /plugins-compiling-issues; . /feed; ; plugins; compiling issues – SOFA. SOFA - Topic Tag: plugins; compiling issues. /pneumatic-actuation; . /feed; ; Pneumatic Actuation – SOFA. SOFA - Topic Tag: Pneumatic Actuation. /pneunet; . /feed; ; pneunet – SOFA. SOFA - Topic Tag: pneunet. /point; . /feed; ; point – SOFA. SOFA - Topic Tag: point. /port; . /feed; ; port – SOFA. SOFA - Topic Tag: port. /position; . /feed; ; position – SOFA. SOFA - Topic Tag: position. /preconditioner; . /feed; ; preconditioner – SOFA. SOFA - Topic Tag: preconditioner. /pressure; . /feed; ; pressure – SOFA. SOFA - Topic Tag: pressure. /prestretch; . /feed; ; prestretch – SOFA. SOFA - Topic Tag: prestretch. /problem-configuring-sofa; . /feed; ; Problem configuring SOFA – SOFA. SOFA - Topic Tag: Problem configuring SOFA. /problem-for-beam-mass-simulation; . /feed; ; Problem for beam-mass simulation. – SOFA. SOFA - Topic Tag: Problem for beam-mass simulation. /problem-with-linearmovementconstraint; . /feed; ; Problem with LinearMovementConstraint – SOFA. SOFA - Topic Tag: Problem with LinearMovementConstraint.,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:464635,plugin,plugins,464635,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugins']
Modifiability, - Topic Tag: Plugin_other. /4; ; SOFA - Topic Tag: Plugin_other. /5; ; SOFA - Topic Tag: Plugin_other. /6; ; SOFA - Topic Tag: Plugin_other. SOFA - Topic Tag: Plugin_other. /plugin_pardiso; . /feed; ; Plugin_Pardiso – SOFA. SOFA - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag: Plugin_SoftRobots. /4; ; SOFA - Topic Tag: Plugin_SoftRobots. /5; ; SOFA - Topic Tag: Plugin_SoftRobots. /6; ; SOFA - Topic Tag: Plugin_SoftRobots. /7; ; SOFA - Topic Tag: Plugin_SoftRobots. SOFA - Topic Tag: Plugin_SoftRobots. /plugin-failed; . /feed; ; plugin failed – SOFA. SOFA - Topic Tag: plugin failed. /pluginloadingfailed; . /feed; ; PluginLoadingfailed – SOFA. SOFA - Topic Tag: PluginLoadingfailed. /plugin-not-found; . /feed; ; Plugin not found – SOFA. SOFA - Topic Tag: Plugin not found. /plugin-price; . /feed; ; Plugin price – SOFA. SOFA - Topic Tag: Plugin price. /plugins; . /feed; ; plugins – SOFA. SOFA - Topic Tag: plugins. /plugins-compiling-issues; . /feed; ; plugins; compiling issues – SOFA. SOFA - Topic Tag: plugins; compiling issues. /pneumatic-actuation; . /feed; ; Pneumatic Actuation – SOFA. SOFA - Topic Tag: Pneumatic Actuation. /pneunet; . /feed; ; pneunet – SOFA. SOFA - Topic Tag: pneunet. /point; . /feed; ; point – SOFA. SOFA - Topic Tag: point. /port; . /feed; ; port – SOFA. SOFA - Topic Tag: port. /position; . /feed; ; position – SOFA. SOFA - Topic Tag: position. /preconditioner; . /feed; ; preconditioner – SOFA. SOFA - Topic Tag: preconditioner. /pressure; . /feed; ; pressure – SOFA. SOFA - Topic Tag: pressure. /prestretch; . /feed; ; prestretch – SOFA. SOFA - Topic Tag: prestretch. /problem-configuring-sofa; . /feed; ; Problem configuring SOFA – SOFA. SOFA - Topic Tag: Problem configuring SOFA. /problem-for-beam-mass-simulation; . /feed; ; Problem for beam-m,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:464403,plugin,plugin-price,464403,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-price']
Modifiability, - Topic Tag: buliding sofa. /bvh; . /feed; ; bvh – SOFA. SOFA - Topic Tag: bvh. /c; . /feed; ; c++ – SOFA. SOFA - Topic Tag: c++. /c11; . /feed; ; c++11 – SOFA. SOFA - Topic Tag: c++11. /cable; . /feed; ; Cable – SOFA. SOFA - Topic Tag: Cable. /cable-driven; . /feed; ; cable driven – SOFA. SOFA - Topic Tag: cable driven. /cable-lenght; . /feed; ; cable lenght – SOFA. SOFA - Topic Tag: cable lenght. /camera; . /feed; ; camera – SOFA. SOFA - Topic Tag: camera. /camera-and; . /feed; ; Camera and – SOFA. SOFA - Topic Tag: Camera and. /camera-calibration; . /feed; ; camera calibration – SOFA. SOFA - Topic Tag: camera calibration. /camera-position; . /feed; ; camera position – SOFA. SOFA - Topic Tag: camera position. /camitk; . /feed; ; CamiTK – SOFA. SOFA - Topic Tag: CamiTK. /can-sofa-cut-the-volume-eg-liver; . /feed; ; Can Sofa cut the volume (eg liver)? – SOFA. SOFA - Topic Tag: Can Sofa cut the volume (eg liver)?. /caribou; . /feed; ; Caribou – SOFA. SOFA - Topic Tag: Caribou. /caribou-plugin; . /feed; ; Caribou Plugin – SOFA. SOFA - Topic Tag: Caribou Plugin. /carving; . /feed; ; carving – SOFA. SOFA - Topic Tag: carving. /carving-a-surface-mesh; . /feed; ; Carving a surface mesh – SOFA. SOFA - Topic Tag: Carving a surface mesh. /catheter; . /feed; ; catheter – SOFA. SOFA - Topic Tag: catheter. /catmullromsplinemapping; . /feed; ; CatmullRomSplineMapping – SOFA. SOFA - Topic Tag: CatmullRomSplineMapping. /cavity; . /feed; ; cavity – SOFA. SOFA - Topic Tag: cavity. /c-controller; . /feed; ; C++ Controller – SOFA. SOFA - Topic Tag: C++ Controller. /cg; . /feed; ; cg – SOFA. SOFA - Topic Tag: cg. /cgal; . /feed; ; CGAL – SOFA. SOFA - Topic Tag: CGAL. /cgal4-7; . /feed; ; CGAL4.7 – SOFA. SOFA - Topic Tag: CGAL4.7. /cgal-configuration; . /feed; ; CGAL Configuration – SOFA. SOFA - Topic Tag: CGAL Configuration. /cgalplugin; . /feed; ; CGALplugin – SOFA. SOFA - Topic Tag: CGALplugin. /cgal-plugin; . /feed; ; CGAL plugin – SOFA. SOFA - Topic Tag: CGAL plugin. /chain; . /fee,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:432350,plugin,plugin,432350,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," . #include <Triangle2EdgeTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Triangle2EdgeTopologicalMapping:. [legend]; Detailed Description; This class, called Triangle2EdgeTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = TriangleSetTopology OUTPUT TOPOLOGY = EdgeSetTopology, as the boundary of the INPUT TOPOLOGY; Triangle2EdgeTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Member Functions;  SOFA_CLASS (Triangle2EdgeTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual void updateTopologicalMappingBottomUp ();  Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : More...;  ; virtual bool propagateFromInputToOutputModel ();  Return true if this mapping is able to propagate topological changes from input to output model. More...;  ; virtual bool propagateFromOutputToInputModel ();  Return true if this mapping is able to propagate topological changes from output to input model. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping.html:1265,inherit,inherited,1265,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_triangle2_edge_topological_mapping.html,1,['inherit'],['inherited']
Modifiability, . /feed; ; Plugin_Multithreading – SOFA. SOFA - Topic Tag: Plugin_Multithreading. /plugin_other; . /feed; ; Plugin_other – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_other. /3; ; SOFA - Topic Tag: Plugin_other. /4; ; SOFA - Topic Tag: Plugin_other. /5; ; SOFA - Topic Tag: Plugin_other. /6; ; SOFA - Topic Tag: Plugin_other. SOFA - Topic Tag: Plugin_other. /plugin_pardiso; . /feed; ; Plugin_Pardiso – SOFA. SOFA - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag: Plugin_SoftRobots. /4; ; SOFA - Topic Tag: Plugin_SoftRobots. /5; ; SOFA - Topic Tag: Plugin_SoftRobots. /6; ; SOFA - Topic Tag: Plugin_SoftRobots. /7; ; SOFA - Topic Tag: Plugin_SoftRobots. SOFA - Topic Tag: Plugin_SoftRobots. /plugin-failed; . /feed; ; plugin failed – SOFA. SOFA - Topic Tag: plugin failed. /pluginloadingfailed; . /feed; ; PluginLoadingfailed – SOFA. SOFA - Topic Tag: PluginLoadingfailed. /plugin-not-found; . /feed; ; Plugin not found – SOFA. SOFA - Topic Tag: Plugin not found. /plugin-price; . /feed; ; Plugin price – SOFA. SOFA - Topic Tag: Plugin price. /plugins; . /feed; ; plugins – SOFA. SOFA - Topic Tag: plugins. /plugins-compiling-issues; . /feed; ; plugins; compiling issues – SOFA. SOFA - Topic Tag: plugins; compiling issues. /pneumatic-actuation; . /feed; ; Pneumatic Actuation – SOFA. SOFA - Topic Tag: Pneumatic Actuation. /pneunet; . /feed; ; pneunet – SOFA. SOFA - Topic Tag: pneunet. /point; . /feed; ; point – SOFA. SOFA - Topic Tag: point. /port; . /feed; ; port – SOFA. SOFA - Topic Tag: port. /position; . /feed; ; position – SOFA. SOFA - Topic Tag: position. /preconditioner; . /feed; ; preconditioner – SOFA. SOFA - Topic Tag: preconditioner. /pressure; . /feed; ; pressure – SOFA. SOFA - Topic Tag: pressure. /prestretch; . /feed; ; prestretch – SOFA. SOFA - Topic Tag: pre,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:464212,plugin,pluginloadingfailed,464212,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['pluginloadingfailed']
Modifiability, . /feed; ; scenegraph events handleEvent engine – SOFA. SOFA - Topic Tag: scenegraph events handleEvent engine. /scene-in-cpp; . /feed; ; scene in cpp – SOFA. SOFA - Topic Tag: scene in cpp. /scenes; . /feed; ; scenes – SOFA. SOFA - Topic Tag: scenes. /scene-xml-pose; . /feed; ; Scene; XML; Pose – SOFA. SOFA - Topic Tag: Scene; XML; Pose. /screenshot; . /feed; ; screenshot – SOFA. SOFA - Topic Tag: screenshot. /screenshots; . /feed; ; screenshots – SOFA. SOFA - Topic Tag: screenshots. /script; . /feed; ; script – SOFA. SOFA - Topic Tag: script. /search-node; . /feed; ; search node – SOFA. SOFA - Topic Tag: search node. /segfault; . /feed; ; segfault – SOFA. SOFA - Topic Tag: segfault. /segmentation-fault; . /feed; ; segmentation fault – SOFA. SOFA - Topic Tag: segmentation fault. /segmentation-fault-11; . /feed; ; segmentation fault 11 – SOFA. SOFA - Topic Tag: segmentation fault 11. /sensable; . /feed; ; Sensable – SOFA. SOFA - Topic Tag: Sensable. /sensable-plugin; . /feed; ; Sensable plugin – SOFA. SOFA - Topic Tag: Sensable plugin. /sensable-sofa-plugin; . /feed; ; sensable sofa plugin – SOFA. SOFA - Topic Tag: sensable sofa plugin. /sensible; . /feed; ; sensible – SOFA. SOFA - Topic Tag: sensible. /sensing; . /feed; ; Sensing – SOFA. SOFA - Topic Tag: Sensing. /separate; . /feed; ; separate – SOFA. SOFA - Topic Tag: separate. /server; . /feed; ; server – SOFA. SOFA - Topic Tag: server. /servo; . /feed; ; Servo – SOFA. SOFA - Topic Tag: Servo. /servoing; . /feed; ; servoing – SOFA. SOFA - Topic Tag: servoing. /setting_up; . /feed; ; Setting_Up – SOFA. SOFA - Topic Tag: Setting_Up. /setting-up; . /feed; ; Setting up – SOFA. SOFA - Topic Tag: Setting up. /shader; . /feed; ; shader – SOFA. SOFA - Topic Tag: shader. /shadow; . /feed; ; shadow – SOFA. SOFA - Topic Tag: shadow. /shadows; . /feed; ; shadows – SOFA. SOFA - Topic Tag: shadows. /showing-indexes-and-vertices-in-run-window; . /feed; ; Showing indexes and vertices in run window – SOFA. SOFA - Topic Tag: Show,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:470842,plugin,plugin,470842,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::select::MeshSplittingEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::select::MeshSplittingEngine< DataTypes >::init ; (; void ; ). inlineoverridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ parse(). template<class DataTypes > . void sofa::component::engine::select::MeshSplittingEngine< DataTypes >::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). inlineoverridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ parseFields(). template<class DataTypes > . void sofa::component::engine::select::MeshSplittingEngine< DataTypes >::parseFields ; (; const std::map< std::string, std::string * > & ; str). inlineoverridevirtual . Assign the field values stored in the given map of name -> value pairs. ; Reimplemented from sofa::core::objectmodel::Base. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::select::MeshSplittingEngine< DataTypes >::reinit ; (; ). inlineoverridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resizeData(). template<class DataTypes > . void sofa::component::engine::select::MeshSplittingEngine< DataTypes >::resizeData ; (; ). inlineprotected . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::select::MeshSplittingEngine< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(MeshSplittingEngine< DataTypes >, DataTypes) ; , . Inherited ;  . ). sofacomponentengineselectMeshSplittingEngine; Generated on Mon Nov 11 2024 02:41:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html:21688,variab,variables,21688,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,1,['variab'],['variables']
Modifiability," . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType > Class Template Reference . #include <DisplacementMatrixEngine.h>. Inheritance diagram for sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >:. [legend]. Public Attributes; Data< VecCoord > d_x0;  Rest position. More...;  ; Data< VecCoord > d_x;  Current position. More...;  ; Data< type::vector< OutputType > > d_displacements;  Displacement transforms with respect to original rigid positions. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< OutputType > inverses;  inverse initial positions More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContaine",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html:1045,inherit,inherited,1045,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,1,['inherit'],['inherited']
Modifiability," . const type::RGBAColor & ; color . ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ drawTriangleStrip(). void sofa::gl::DrawToolGL::drawTriangleStrip ; (; const std::vector< type::Vec3 > & ; points, . const std::vector< type::Vec3 > & ; normal, . const type::RGBAColor & ; color . ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ enableBlending(). void sofa::gl::DrawToolGL::enableBlending ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ enableDepthTest(). void sofa::gl::DrawToolGL::enableDepthTest ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ enableLighting(). void sofa::gl::DrawToolGL::enableLighting ; (; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ enablePolygonOffset(). void sofa::gl::DrawToolGL::enablePolygonOffset ; (; float ; factor, . float ; units . ). overridevirtual . Set the scale and units used to add depth values Parameters. factor: Specifies a scale factor that is used to create a variable depth offset for each polygon. The initial value is 0. ; units: Is multiplied by an implementation-specific value to create a constant depth offset. The initial value is 0. . Implements sofa::helper::visual::DrawTool. ◆ getLightEnabled(). bool sofa::gl::DrawToolGL::getLightEnabled ; (; ). inline . ◆ getPolygonMode(). int sofa::gl::DrawToolGL::getPolygonMode ; (; ). inline . ◆ getWireFrameEnabled(). bool sofa::gl::DrawToolGL::getWireFrameEnabled ; (; ). inline . ◆ init(). void sofa::gl::DrawToolGL::init ; (; void ; ). overridevirtual . Implements sofa::helper::visual::DrawTool. ◆ internalDrawLine(). void sofa::gl::DrawToolGL::internalDrawLine ; (; const type::Vec3 & ; p1, . const type::Vec3 & ; p2, . const type::RGBAColor & ; color . ). protectedvirtual . ◆ internalDrawPoint() [1/2]. void sofa::gl::DrawToolGL::internalDrawPoint ; (; const type::Vec3 & ; p, . const type::RGBAColor & ; c . ). protectedvirtual . ◆ internalDrawPoint() [2/2]. void sofa::gl::DrawToolGL::int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html:30559,variab,variable,30559,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,1,['variab'],['variable']
Modifiability," . sofa::component::engine::transform::InvertTransformMatrixEngine Class Reference . #include <TransformMatrixEngine.h>. Inheritance diagram for sofa::component::engine::transform::InvertTransformMatrixEngine:. [legend]; Detailed Description; This engine inverts the input transform and outputs the resulting transformation matrix. T_output = T_input^-1 . Public Member Functions;  SOFA_CLASS (InvertTransformMatrixEngine, AbstractTransformMatrixEngine);  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:1148,inherit,inherited,1148,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability," . unsigned char flags;  ; static const unsigned char TEST_POTENTIAL_ENERGY = 1;  testing getPotentialEnergy function. The tests will only work with conservative forces (if dissipative forces such as viscosity or damping are computed, the test is wrong) More...;  ; static const unsigned char TEST_ALL = UCHAR_MAX;  testing everything More...;  ;  ForceField_test ();  } More...;  ;  ForceField_test (std::string filename);  ; void run_test (const VecCoord &x, const VecDeriv &v, const VecDeriv &ef, bool initScene=true);  Given positions and velocities, checks that the expected forces are obtained, and that a small change of positions generates the corresponding change of forces. More...;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:3462,inherit,inherited,3462,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,2,['inherit'],['inherited']
Modifiability," . ◆ degree(). template<typename Real , unsigned int N> . int sofa::helper::Monomial_LD< Real, N >::degree. Return the total degree of monomial. . ◆ isnullptr(). template<typename Real , unsigned int N> . bool sofa::helper::Monomial_LD< Real, N >::isnullptr ; (; ); const. inline . ◆ isSamePowers(). template<typename Real , unsigned int N> . bool sofa::helper::Monomial_LD< Real, N >::isSamePowers ; (; const Monomial_LD< Real, N > & ; b); const. ◆ operator!=(). template<typename Real , unsigned int N> . bool sofa::helper::Monomial_LD< Real, N >::operator!= ; (; const Monomial_LD< Real, N > & ; b); const. inline . ◆ operator()() [1/2]. template<typename Real , unsigned int N> . Real sofa::helper::Monomial_LD< Real, N >::operator() ; (; const RNpoint & ; x); const. Evaluating value. . ◆ operator()() [2/2]. template<typename Real , unsigned int N> . Real sofa::helper::Monomial_LD< Real, N >::operator() ; (; const RNpoint & ; x, . unsigned int ; idvar . ); const. Evaluating first partial derivative by idvar-th variable. . ◆ operator*() [1/2]. template<typename Real , unsigned int N> . Monomial_LD<Real,N> sofa::helper::Monomial_LD< Real, N >::operator* ; (; const Monomial_LD< Real, N > & ; a). inline . ◆ operator*() [2/2]. template<typename Real , unsigned int N> . Monomial_LD<Real,N> sofa::helper::Monomial_LD< Real, N >::operator* ; (; const Real & ; alpha). inline . ◆ operator*=() [1/2]. template<typename Real , unsigned int N> . Monomial_LD< Real, N > & sofa::helper::Monomial_LD< Real, N >::operator*= ; (; const Monomial_LD< Real, N > & ; b). ◆ operator*=() [2/2]. template<typename Real , unsigned int N> . Monomial_LD<Real,N>& sofa::helper::Monomial_LD< Real, N >::operator*= ; (; const Real & ; alpha). inline . Mathematical operators. . ◆ operator+() [1/2]. template<typename Real , unsigned int N> . Monomial_LD<Real,N> sofa::helper::Monomial_LD< Real, N >::operator+ ; (; ); const. inline . ◆ operator+() [2/2]. template<typename Real , unsigned int N> . Monomial_LD<Real,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html:5231,variab,variable,5231,api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,1,['variab'],['variable']
Modifiability," . ◆ isPluginUnloaded(). bool sofa::helper::system::PluginManager::isPluginUnloaded ; (; const std::string & ; pluginName); const. ◆ loadPlugin(). auto sofa::helper::system::PluginManager::loadPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7059,plugin,plugin,7059,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['plugin'],['plugin']
Modifiability, /separate; . /feed; ; separate – SOFA. SOFA - Topic Tag: separate. /server; . /feed; ; server – SOFA. SOFA - Topic Tag: server. /servo; . /feed; ; Servo – SOFA. SOFA - Topic Tag: Servo. /servoing; . /feed; ; servoing – SOFA. SOFA - Topic Tag: servoing. /setting_up; . /feed; ; Setting_Up – SOFA. SOFA - Topic Tag: Setting_Up. /setting-up; . /feed; ; Setting up – SOFA. SOFA - Topic Tag: Setting up. /shader; . /feed; ; shader – SOFA. SOFA - Topic Tag: shader. /shadow; . /feed; ; shadow – SOFA. SOFA - Topic Tag: shadow. /shadows; . /feed; ; shadows – SOFA. SOFA - Topic Tag: shadows. /showing-indexes-and-vertices-in-run-window; . /feed; ; Showing indexes and vertices in run window – SOFA. SOFA - Topic Tag: Showing indexes and vertices in run window. /sics-immulator; . /feed; ; SICS immulator – SOFA. SOFA - Topic Tag: SICS immulator. /simulation; . /feed; ; simulation – SOFA. SOFA - Topic Tag: simulation. /simulationgraph-config; . /feed; ; simulationgraph-config – SOFA. SOFA - Topic Tag: simulationgraph-config. /si-unit; . /feed; ; SI Unit – SOFA. SOFA - Topic Tag: SI Unit. /skeleton; . /feed; ; skeleton – SOFA. SOFA - Topic Tag: skeleton. /skeletonplugin-cgalpluging-cmake; . /feed; ; SkeletonPlugin CGALPluging CMake – SOFA. SOFA - Topic Tag: SkeletonPlugin CGALPluging CMake. /slidingactuators; . /feed; ; SlidingActuators – SOFA. SOFA - Topic Tag: SlidingActuators. /slidingconstraint; . /feed; ; SlidingConstraint – SOFA. SOFA - Topic Tag: SlidingConstraint. /slow; . /feed; ; slow – SOFA. SOFA - Topic Tag: slow. /smart-materials; . /feed; ; smart materials – SOFA. SOFA - Topic Tag: smart materials. /sml; . /feed; ; sml – SOFA. SOFA - Topic Tag: sml. /socket; . /feed; ; socket – SOFA. SOFA - Topic Tag: socket. /sofa; . /feed; ; SOFA – SOFA. /page; . /2; ; SOFA - Topic Tag: SOFA. /3; ; SOFA - Topic Tag: SOFA. /4; ; SOFA - Topic Tag: SOFA. SOFA - Topic Tag: SOFA. /sofa_1503; . /feed; ; SOFA_1503 – SOFA. SOFA - Topic Tag: SOFA_1503. /sofa_1509; . /feed; ; SOFA_1509 – SOFA. SO,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:472139,config,config,472139,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['config'],['config']
Modifiability, /sofastereo; . /feed; ; sofastereo – SOFA. SOFA - Topic Tag: sofastereo. /sofa-template-introspection-datatypes; . /feed; ; Sofa template introspection DataTypes – SOFA. SOFA - Topic Tag: Sofa template introspection DataTypes. /sofauserinteraction; . /feed; ; SofaUserInteraction – SOFA. SOFA - Topic Tag: SofaUserInteraction. /sofav-16-08; . /feed; ; SOFAV 16.08 – SOFA. SOFA - Topic Tag: SOFAV 16.08. /sofa-v20-12; . /feed; ; SOFA-v20.12 – SOFA. SOFA - Topic Tag: SOFA-v20.12. /sofa-v20-12-error; . /feed; ; Sofa v20.12 error – SOFA. SOFA - Topic Tag: Sofa v20.12 error. /sofa-versions; . /feed; ; sofa versions – SOFA. SOFA - Topic Tag: sofa versions. /soft; . /feed; ; soft – SOFA. SOFA - Topic Tag: soft. /softrobot; . /feed; ; SoftRobot – SOFA. SOFA - Topic Tag: SoftRobot. /soft-robot-dynamics; . /feed; ; soft robot dynamics – SOFA. SOFA - Topic Tag: soft robot dynamics. /soft-robotics; . /feed; ; soft robotics – SOFA. SOFA - Topic Tag: soft robotics. /softrobot-plugin; . /feed; ; Softrobot plugin – SOFA. SOFA - Topic Tag: Softrobot plugin. /soft-robot-plugin; . /feed; ; Soft robot Plugin – SOFA. SOFA - Topic Tag: Soft robot Plugin. /softrobots; . /feed; ; softrobots – SOFA. /page; . /2; ; SOFA - Topic Tag: softrobots. SOFA - Topic Tag: softrobots. /soft-robots; . /feed; ; Soft Robots – SOFA. SOFA - Topic Tag: Soft Robots. /softrobots-plugin; . /feed; ; SoftRobots Plugin – SOFA. SOFA - Topic Tag: SoftRobots Plugin. /soft-robots-sofa-locomotion; . /feed; ; soft robots sofa locomotion – SOFA. SOFA - Topic Tag: soft robots sofa locomotion. /softrobots-softrobots-inverse; . /feed; ; SoftRobots SoftRobots.Inverse – SOFA. SOFA - Topic Tag: SoftRobots SoftRobots.Inverse. /softrobots-tutorial; . /feed; ; SoftRobots tutorial – SOFA. SOFA - Topic Tag: SoftRobots tutorial. /solver; . /feed; ; Solver – SOFA. SOFA - Topic Tag: Solver. /sparsegridramification; . /feed; ; SparseGridRamification – SOFA. SOFA - Topic Tag: SparseGridRamification. /sparseldlsolver; . /feed; ; SparseLDLSo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:481490,plugin,plugin,481490,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getTransfoFromTfm(). template<class DataTypes > . void sofa::component::engine::transform::TransformPosition< DataTypes >::getTransfoFromTfm. protected . ◆ getTransfoFromTrm(). template<class DataTypes > . void sofa::component::engine::transform::TransformPosition< DataTypes >::getTransfoFromTrm. protected . ◆ getTransfoFromTxt(). template<class DataTypes > . void sofa::component::engine::transform::TransformPosition< DataTypes >::getTransfoFromTxt. protected . ◆ init(). template<class DataTypes > . void sofa::component::engine::transform::TransformPosition< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::transform::TransformPosition< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ selectTransformationMethod(). template<class DataTypes > . void sofa::component::engine::transform::TransformPosition< DataTypes >::selectTransformationMethod. protected . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::transform::TransformPosition< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TransformPosition< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). Enum details. ◆ TransformationMethod. template<class DataTypes > . enum sofa::component::engine::transform::TransformPosition::TransformationMethod. EnumeratorPROJECT_ON_PLANE ; TRANSLATION ; ROTATION ; RANDOM ; SCALE ; SCALE_TRANSLATION ; SCALE_ROTATION_TRANSLATION ; AFFINE . sofacomponentenginetransformTransformPosition; Generated on Mon Nov 11 2024 02:46:04 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:23018,variab,variables,23018,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,1,['variab'],['variables']
Modifiability," ; Implements sofa::simulation::SceneLoader. ◆ doLoadFromMemory(). NodeSPtr sofa::simulation::SceneLoaderXML::doLoadFromMemory ; (; const char * ; filename, . const char * ; data . ). load a scene from memory (typically : an xml into a string) . ◆ getExtensionList(). void sofa::simulation::SceneLoaderXML::getExtensionList ; (; ExtensionList * ; list). overridevirtual . get the list of file extensions ; Implements sofa::simulation::SceneLoader. ◆ getFileTypeDesc(). std::string sofa::simulation::SceneLoaderXML::getFileTypeDesc ; (; ). overridevirtual . get the file type description ; Implements sofa::simulation::SceneLoader. ◆ loadFromMemory(). Node::SPtr sofa::simulation::SceneLoaderXML::loadFromMemory ; (; const char * ; filename, . const char * ; data . ). static . load a scene from memory (typically : an xml into a string) ; Load from a string in memory. . ◆ processXML(). Node::SPtr sofa::simulation::SceneLoaderXML::processXML ; (; xml::BaseElement * ; xml, . const char * ; filename . ). static . generic function to process xml tree (after loading the xml structure) ; Load a scene from a file. . ◆ syntaxForAddingRequiredPlugin(). bool sofa::simulation::SceneLoaderXML::syntaxForAddingRequiredPlugin ; (; const std::string & ; pluginName, . const std::vector< std::string > & ; listComponents, . std::ostream & ; ss, . sofa::simulation::Node * ; nodeWhereAdded . ). overridevirtual . Write into a ostream the syntax to add a RequiredPlugin component in the scene file. The syntax depends on the file format, hence the SceneLoader. The function returns true if the derived SceneLoader implements this function, false otherwise. ; Reimplemented from sofa::simulation::SceneLoader. ◆ write(). void sofa::simulation::SceneLoaderXML::write ; (; sofa::simulation::Node * ; node, . const char * ; filename . ). overridevirtual . write the file ; Reimplemented from sofa::simulation::SceneLoader. sofasimulationSceneLoaderXML; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html:4999,plugin,pluginName,4999,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader_x_m_l.html,1,['plugin'],['pluginName']
Modifiability," ; SOFA - Topic: [SOLVED] Combining SOFA with Unreal Engine. /communicationcontroller-data-exchange-format; ; SOFA - Topic: [SOLVED] CommunicationController data exchange format. /companies-are-looking-for-sofa-skilled-engineers; ; SOFA - Topic: Companies are looking for SOFA-skilled engineers!. /compilation-error-when-sofa_dumo_visitor_info-is-toggled; ; SOFA - Topic: [SOLVED] Compilation error when SOFA_DUMP_VISITOR_INFO is toggled. /compilation-error-while-setvalue-to-d_force-in-linearff; ; SOFA - Topic: [SOLVED] Compilation error while setValue to d_force in linearFF. /compilation-warnings; . /page; . /2; ; SOFA - Topic: [SOLVED] Compilation warnings ""unused typedef"". /7; ; SOFA - Topic: [SOLVED] Compilation warnings ""unused typedef"". SOFA - Topic: [SOLVED] Compilation warnings ""unused typedef"". /compiling_advancedtimer; ; SOFA - Topic: [SOLVED] compiling_AdvancedTimer. /compiling-build-ninja-in-ubuntu; ; SOFA - Topic: [SOLVED] compiling build.ninja in ubuntu. /compiling-sofa-v15-12-leapmotion-plugin; . /feed; ; [SOLVED] Compiling SOFA v15.12 + LeapMotion Plugin – SOFA. SOFA - Topic: [SOLVED] Compiling SOFA v15.12 + LeapMotion Plugin. /components-for-quadratic-meshes; . /feed; ; [SOLVED] Components for quadratic meshes – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Components for quadratic meshes. /6; ; SOFA - Topic: [SOLVED] Components for quadratic meshes. /7; ; SOFA - Topic: [SOLVED] Components for quadratic meshes. SOFA - Topic: [SOLVED] Components for quadratic meshes. /composite_objects; ; SOFA - Topic: [SOLVED] composite_objects. /compound-collision-model-for-rigid-bodies; ; SOFA - Topic: [SOLVED] Compound collision model for rigid bodies. /computationtimes-and-batch; ; SOFA - Topic: [SOLVED] ComputationTimes and batch. /compute-forces-programatically; ; SOFA - Topic: Compute forces programatically. /computing-von-mises-constraints-along-rods; ; SOFA - Topic: Computing Von Mises constraints along rods. /configuration-in-cmake-gui; ; SOFA - Topic: [SOLVED] ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:278696,plugin,plugin,278696,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," ; SOFA - Topic: [SOLVED] Error while building SOFA on Windows 7, QGLViewer/Qt conflict. /error-while-buildin-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while building SOFA in Linux. /error-while-build-sofa-in-linux; ; SOFA - Topic: [SOLVED] Error while build SOFA in Linux. /error-while-compiling-sofa-in-mac-os-yosemitegl-shader-support-requires-glew; ; SOFA - Topic: [SOLVED] Error while compiling SOFA in Mac OS Yosemite:""GL Shader support requires GLEW."". /error-while-compiling-sofa-v2012-with-sofapython-3; ; SOFA - Topic: Error while compiling SOFA v2012 with Sofapython 3. /error-while-compiling-softrobots-and-stilib-plugin; ; SOFA - Topic: [SOLVED] Error while compiling Softrobots and STILIB plugin. /error-while-sofapython3-installation; ; SOFA - Topic: [SOLVED] Error while SofaPython3 installation. /error-while-use-sofa-c-template-in-tutorial; ; SOFA - Topic: Error while use Sofa c++ template in tutorial. /error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile; ; SOFA - Topic: [SOLVED] Error with CImg: plugin with dependency to skeleton.h does not compile. /error-with-global-bounding-box; . /feed; ; [SOLVED] Error with global bounding box – SOFA. SOFA - Topic: [SOLVED] Error with global bounding box. /error-with-plugin-flexible; ; SOFA - Topic: [SOLVED] Error with plugin Flexible. /error-with-plugins-with-sofarosconnector; ; SOFA - Topic: Error with plugins with ""SofaROSConnector"". /error-with-test-scene-required-plugins-error; ; SOFA - Topic: [SOLVED] Error with test scene, Required plugins error. /error-with-tetrahedraltensormassforcefield; ; SOFA - Topic: [SOLVED] error with TetrahedralTensorMassForceField. /estimate-pressure; ; SOFA - Topic: [SOLVED] Estimate Pressure. /estimating-external-force-on-a-vertex; ; SOFA - Topic: Estimating external force on a vertex. /evaluate-forces-whitout-using-visitors; ; SOFA - Topic: [SOLVED] Evaluate forces whitout using visitors. /examples-for-simulating-interacting-models; ; SOFA - Topic: Examples for s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:299009,plugin,plugin-with-dependancy-to-skeleton-h-does-not-compile,299009,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugin', 'plugin-with-dependancy-to-skeleton-h-does-not-compile']"
Modifiability, ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /3; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /7; ; SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. SOFA - Topic: [SOLVED] Is TriangleSetTopologyModifier::removeTrianglesPostProcessing empty ?. /i-want-to-study-all-about-sofa; . /feed; ; [SOLVED] I want to study about SOFA – SOFA. SOFA - Topic: [SOLVED] I want to study about SOFA. /join-our-linkedin-group; ; SOFA - Topic: Join our LinkedIn group!. /join-the-community-at-the-stc5; ; SOFA - Topic: Join the community at the STC#5. /join-the-stc7-on-the-french-riviera; ; SOFA - Topic: Join the STC#7 on the French Riviera. /join-the-stc9-online; ; SOFA - Topic: Join the STC#9 online. /jointspringforcefield-problems; ; SOFA - Topic: JointSpringForceField Problems. /just-build-successfully-in-debug-and-run-runsofa-with-some-plugins-not-found; ; SOFA - Topic: Just build successfully in Debug and run runsofa with some plugins not found. /keyboard-events-in-sofa; . /feed; ; [SOLVED] Keyboard events in SOFA – SOFA. SOFA - Topic: [SOLVED] Keyboard events in SOFA. /kinematic-chain-creation; . /feed; ; [SOLVED] Kinematic chain creation – SOFA. SOFA - Topic: [SOLVED] Kinematic chain creation. /kinematic-constraints-between-rigid-bodies-list-of-available-joints; ; SOFA - Topic: [SOLVED] Kinematic constraints between rigid bodies (list of available joints). /launching-sofa-from-matlab-script; ; SOFA - Topic: Launching SOFA from Matlab script. /leap-motion-and-sensable-phantom-omni; . /feed; ; [SOLVED] Leap Motion and Sensable (Phantom Omni) – SOFA. SOFA - Topic: [SOLVED] Leap Motion and Sensable (Phantom Omni). /libsofahelper-so; ; SOFA - Topic: [SOLVED] libSofaHelper.so. /linearmovementconstraint-on-beam-indices; ; SOFA - Topic: Move a beam node with ‘LinearMovementConstraint’. /linker-errors-while-compiling-v15-12-in-vs-2015-on-windows-8-,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:339774,plugin,plugins-not-found,339774,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugins', 'plugins-not-found']"
Modifiability," ; This small abstract class describes macro into an OpenGL shader (GLSL). It was mainly written for implementing #ifdef macro into shader, and therefore, to have a multi-purpose shader (and not many fragmented shaders). . Public Member Functions;  SOFA_CLASS (OglShaderMacro, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:1237,inherit,inherited,1237,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,3,['inherit'],['inherited']
Modifiability," ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ~MechanicalState () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMechanicalState;  BaseMechanicalState ();  ;  ~BaseMechanicalState () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:22411,inherit,inherited,22411,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,3,['inherit'],['inherited']
Modifiability," <HexahedronSetGeometryAlgorithms.h>. Inheritance diagram for sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an HexahedronSet. . Protected Attributes; bool initializedHexahedronCubatureTables;  ; Data< bool > d_showHexaIndices;  Debug : view Hexa indices. More...;  ; Data< bool > d_drawHexahedra;  if true, draw the Hexahedron in the topology More...;  ; Data< float > d_drawScaleHexahedra;  Scale of the hexahedra (between 0 and 1; if <1.0, it produces gaps between the hexahedra) More...;  ; Data< sofa::type::RGBAColor > d_drawColorHexahedra;  ; NumericalIntegrationDescriptor< Real, 3 > hexahedronNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; Data< bool > showQuadIndices;  Debug : view Quad indices. More...;  ; Data< bool > _drawQuads;  if true, draw the quads in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGB code color used to draw quads. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:1369,inherit,inherited,1369,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['inherit'],['inherited']
Modifiability," <PairInteractionConstraint.h>; Component computing constraints between a pair of simulated body. ; More... Inheritance diagram for sofa::core::behavior::PairInteractionConstraint< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::core::behavior::PairInteractionConstraint< TDataTypes >; Component computing constraints between a pair of simulated body. ; This class define the abstract API common to interaction constraints between a pair of bodies using a given type of DOFs. . Public Attributes; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRAC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html:1411,inherit,inherited,1411,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,1,['inherit'],['inherited']
Modifiability," <TetrahedronBarycentricContactMapper.h>; Mapper for TetrahedronCollisionModel. ; More... Inheritance diagram for sofa::component::collision::response::mapper::ContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::collision::response::mapper::ContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >; Mapper for TetrahedronCollisionModel. . Public Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; sofa::Index addPoint (const Coord &P, sofa::Index index, Real &);  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BarycentricContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Size, sofa::Size);  ;  BarycentricContactMapper ();  ; void setCollisionModel (MCollisionModel *model);  ; void cleanup () override;  ; MMechanicalState * createMapping (const char *name=""contactPoints"") override;  ; void resize (sofa::Size size) override;  ; void update () override;  ; void updateXfree () override;  ; void updateX0 ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; virtual ~BaseContactMapper ();  ; virtual void resize (Size size)=0;  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::collision::response::mapper::BarycentricContactMapper< collision::geometry::TetrahedronCollisionModel, DataTypes >; MCollisionModel * model;  ; MMapping::SPtr mapping;  ; MMapper::SPtr mapper;  ;  Static Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gee043e6c6d31310ac80534810b658f7ea.html:1084,inherit,inherited,1084,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gee043e6c6d31310ac80534810b658f7ea.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1gee043e6c6d31310ac80534810b658f7ea.html,2,['inherit'],['inherited']
Modifiability," = Omega_i x f_rotatedPos : More...;  ; Data< type::vector< unsigned int > > d_nbRef;  jacobian matrix for compliant API More...;  ; Data< type::vector< sofa::type::SVector< unsigned int > > > d_index;  parent indices for each child. More...;  ; Data< type::vector< sofa::type::SVector< InReal > > > d_weight;  influence weights of the Dofs. More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(SkinningMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMapping, TIn, TOut));  ; void setWeights (const type::vector< sofa::type::SVector< InReal > > &weights, const type::vector< sofa::type::SVector< unsigned int > > &indices, const type::vector< unsigned int > &nbrefs);  ; void init () override;  ; void reinit () override;  ; void apply (const sofa::core::MechanicalParams *mparams, OutDataVecCoord &out, const InDataVecCoord &in) override;  ; void applyJ (const sofa::core::MechanicalParams *mparams, OutDataVecDeriv &out, const InDataVecDeriv &in) override;  ; void applyJT (const sofa::core::MechanicalParams *mparams, InDataVecDeriv &out, const OutDataVecDeriv &in) override;  ; void applyJT (const sofa::core::ConstraintParams *cparams, InDataMatrixDeriv &out, const OutDataMatrixDeriv &in) override;  ; const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ; const sofa::linearalgebra::BaseMatrix * getJ () override;  ; void draw (const core::visual::VisualParams *vparams) override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions; void updateWeights ();  ;  SkinningMapping ();  ; virtual ~SkinningMapping ();  . Attribute details. ◆ _J. template<class TIn , class TOut > . SparseJMatrixEigen sofa::component::mapping::linear::SkinningMapping< TIn, TOut >::_J. protected . rotated child coordinates : dp = Omega_i x f_rotatedPos : . ◆ d_index. template<cl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html:3009,inherit,inherited,3009,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_skinning_mapping.html,1,['inherit'],['inherited']
Modifiability," > &, Matrix6 &);  . Constructor details. ◆ ~HyperelasticMaterial(). template<class DataTypes > . virtual sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::~HyperelasticMaterial ; (; ). inlinevirtual . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::StableNeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Ogden< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::Costa< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >, and sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented in sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >, sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >, sofa::component::s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html:2202,config,configuration,2202,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_hyperelastic_material.html,1,['config'],['configuration']
Modifiability," > &tetrahedraIndex, const sofa::type::vector< TetrahedronAncestorElem > &srcElems, const sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~TetrahedraAdded () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getArray () const;  ; size_t getNbAddedTetrahedra () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Tetrahedron > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ ancestorElems. sofa::type::vector< TetrahedronAncestorElem > sofa::core::topology::TetrahedraAdded::ancestorElems. ◆ ancestorsList. sofa::type::vector< sofa::type::vector< Topology::TetrahedronID > > sofa::core::topology::TetrahedraAdded::ancestorsList. ◆ coefs. sofa::type::vector< sofa::type::vector< SReal > > sofa::core::topology::TetrahedraAdded::coefs. ◆ nTetrahedra. size_t sofa::core::topology::TetrahedraAdded::nTetrahedra. ◆ tetrahedronArray. sofa::type::vector< Topology::Tetrahedron > sofa::core::topology::TetrahedraAdded::tetrahedronArray. ◆ tetrahedronIndexArray. sofa::type::vector< Topology::TetrahedronID > sofa::core::topology::TetrahedraAdded::tetrahedronIndexArray. Constructor details. ◆ Tetrahe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html:2498,inherit,inherited,2498,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_added.html,1,['inherit'],['inherited']
Modifiability," > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel1 () const;  Retrieve the associated MechanicalState #1 as a BaseMechanicalState. More...;  ; MechanicalState< DataTypes2 > * getMState2 ();  Retrieve the associated MechanicalState #2. More...;  ; const MechanicalState< DataTypes2 > * getMState2 () const;  Retrieve the associated MechanicalState #2. More...;  ; BaseMechanicalState * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Protected Member Functions;  TriangleBendingSprings ();  ;  ~TriangleBendingSprings ();  ; void addSpring (unsigned, unsigned);  ; void registerTriangle (unsigned, unsigned, unsigned, std::map< IndexPair, unsigned > &);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SpringForceField (SReal _ks=100.0, SReal _kd=5.0);  ;  SpringForceField (MechanicalState *object1, MechanicalState *object2, SReal _ks=100.0, SReal _kd=5.0);  ; virtual std::unique_ptr< SpringForce > computeSpringForce (const VecCoord &p1, const VecDeriv &v1, const VecCoord &p2, const VecDeriv &v2, const Spring &spring);  ; virtual void addSpringForce (Real &potentialEnergy, VecDeriv &f1, const VecCoord &p1, const VecDeriv &v1, VecDeriv &f2, const VecCoord &p2, const VecDeriv &v2, sofa::Index, const Spring &spring);  ; void initializeTopologyHandler (sofa::core::topology::TopologySubsetIndices &indices, core::topology::BaseMeshTopology *topology, sofa::Index mstateId);  ; void updateTopologyIndicesFromSprings ();  ; void updateTopologyIndicesFromSprings_springAdded ();  ; void updateTopologyIndices_springRemoved (unsigned id);  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html:19277,inherit,inherited,19277,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,1,['inherit'],['inherited']
Modifiability," > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ForceFeedback ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:11801,inherit,inherited,11801,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,1,['inherit'],['inherited']
Modifiability," > > _elementMasses;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Real > > _elementTotalMass;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Real > > _particleMasses;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< Coord > > _lumpedMasses;  ; Data< Real > d_density;  density == volumetric mass in english (kg.m-3) More...;  ; Data< bool > d_useLumpedMass;  Does it use lumped masses? More...;  ; core::topology::HexahedronData< sofa::type::vector< ElementMass > > d_elementMasses;  Mass matrices per element (M_i) More...;  ; core::topology::HexahedronData< sofa::type::vector< Real > > d_elementTotalMass;  Total mass per element. More...;  ; core::topology::PointData< sofa::type::vector< Real > > d_particleMasses;  Mass per particle. More...;  ; core::topology::PointData< sofa::type::vector< Coord > > d_lumpedMasses;  Lumped masses. More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:1969,inherit,inherited,1969,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,2,['inherit'],['inherited']
Modifiability," > Class Template Reference . #include <HexahedronFEMForceFieldAndMass.h>. Inheritance diagram for sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; Compute Finite Element forces based on hexahedral elements including continuum mass matrices . Protected Attributes; Data< VecElementMass > d_elementMasses;  Mass matrices per element (M_i) More...;  ; Data< Real > d_density;  density == volumetric mass in english (kg.m-3) More...;  ; Data< bool > d_lumpedMass;  Does it use lumped masses? More...;  ; MassVector _particleMasses;  masses per particle in order to compute gravity More...;  ; type::vector< Coord > _lumpedMasses;  masses per particle computed by lumping mass matrices More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:1312,inherit,inherited,1312,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability," > Class Template Reference . #include <SphereModel.h>. Inheritance diagram for sofa::component::collision::geometry::SphereCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecReal > radius;  ; sofa::core::objectmodel::RenamedData< SReal > defaultRadius;  ; Data< VecReal > d_radius;  Radius of each sphere. More...;  ; Data< SReal > d_defaultRadius;  Default radius. More...;  ; Data< bool > d_showImpostors;  Draw spheres as impostors instead of ""real"" spheres. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; SingleLink< SphereCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Protected Attributes inherited from sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:1343,inherit,inherited,1343,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,1,['inherit'],['inherited']
Modifiability," >:. [legend]; Detailed Description; template<class T>; struct sofa::linearalgebra::testing::TestSparseMatrixProduct< T >; Test the class SparseMatrixProduct The class is designed to use the templates defined in TestSparseMatrixProductTraits The type of matrix can be any of the types supported by SparseMatrixProduct. . Public Member Functions; bool checkMatrix (typename LHSMatrix::Index nbRowsA, typename LHSMatrix::Index nbColsA, typename RHSMatrix::Index nbColsB, Real sparsity);  ;  Public Member Functions inherited from sofa::testing::NumericTest< _Real >;  NumericTest ();  ; template<class Container1 , class Container2 > ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; template<class Container > ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html:1426,inherit,inherited,1426,api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1linearalgebra_1_1testing_1_1_test_sparse_matrix_product.html,1,['inherit'],['inherited']
Modifiability," >::getRotationMatrix ; (; Index ; elemId). ◆ getStrainDisplacements(). template<class DataTypes > . const TriangleFEMForceField< DataTypes >::StrainDisplacement & sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::getStrainDisplacements ; (; Index ; elemId). ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >. ◆ initLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::initLarge. protected . ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::initSmall. protected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setMethod() [1/2]. template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::setMethod ; (; int ; val). ◆ setMethod() [2/2]. template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::setMethod ; (; std::string ; val). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::TriangleFEMForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TriangleFEMForceField< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes) ;  . ). sofacomponentsolidmechanicsfemelasticTriangleFEMForceField; Generated on Mon Nov 11 2024 02:57:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html:36743,variab,variables,36743,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,1,['variab'],['variables']
Modifiability," > d_direction;  normal direction of the plane More...;  ; Data< Real > d_dmin;  Minimum plane distance from the origin. More...;  ; Data< Real > d_dmax;  Maximum plane distance from the origin. More...;  ; SetIndex d_indices;  the set of vertex indices More...;  ; SingleLink< FixedPlaneProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; FixedPlaneProjectiveConstraintInternalData< DataTypes > data;  ; bool m_selectVerticesFromPlanes {false};  whether vertices should be selected from 2 parallel planes More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:1559,inherit,inherited,1559,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; BaseVTKReader * reader;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:4317,inherit,inherited,4317,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::set< Edge > uniqueEdges;  edges without redundancy More...;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:4487,inherit,inherited,4487,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::string textureName;  ; FaceType faceType;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attribu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:5398,inherit,inherited,5398,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:3806,inherit,inherited,3806,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshSTLLoader, sofa::core::loader::MeshLoader);  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:4475,inherit,inherited,4475,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshTrianLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html:5082,inherit,inherited,5082,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (StringMeshCreator, sofa::core::loader::MeshLoader);  ; virtual std::string type ();  ; bool canLoad () override;  ; bool doLoad () override;  create the string More...;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html:4246,inherit,inherited,4246,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,1,['inherit'],['inherited']
Modifiability," > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:17815,inherit,inherited,17815,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,5,['inherit'],['inherited']
Modifiability," > d_writeX0;  flag enabling output of X0 vector More...;  ; Data< bool > d_writeV;  flag enabling output of V vector More...;  ; Data< bool > d_writeF;  flag enabling output of F vector More...;  ; Data< type::vector< double > > d_time;  set time to write outputs (by default export at t=0) More...;  ; Data< double > d_period;  period between outputs More...;  ; Data< type::vector< unsigned int > > d_DOFsX;  set the position DOFs to write More...;  ; Data< type::vector< unsigned int > > d_DOFsV;  set the velocity DOFs to write More...;  ; Data< double > d_stopAt;  stop the simulation when the given threshold is reached More...;  ; Data< double > d_keperiod;  set the period to measure the kinetic energy increase More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::BaseMechanicalState * mmodel;  ; std::ofstream * outfile;  ; unsigned int nextIteration;  ; double lastTime;  ; bool kineticEnergyThresholdReached;  ; double timeToTestEnergyIncrease;  ; double savedKineticEnergy;  ; bool firstExport;  ; bool pe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html:1862,inherit,inherited,1862,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,1,['inherit'],['inherited']
Modifiability," > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (QuatToRigidEngine, sofa::core::DataEngine);  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html:2334,inherit,inherited,2334,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,1,['inherit'],['inherited']
Modifiability," > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (RigidToQuatEngine, sofa::core::DataEngine);  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html:2277,inherit,inherited,2277,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,1,['inherit'],['inherited']
Modifiability," > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html:15134,inherit,inherited,15134,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,4,['inherit'],['inherited']
Modifiability," > inv_indexArray;  . Public Member Functions;  PointsRenumbering ();  ;  PointsRenumbering (const sofa::type::vector< Topology::PointID > &indices, const sofa::type::vector< Topology::PointID > &inv_indices);  ;  ~PointsRenumbering () override;  ; const sofa::type::vector< Topology::PointID > & getIndexArray () const;  ; const sofa::type::vector< Topology::PointID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::PointID> sofa::core::topology::PointsRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::PointID> sofa::core::topology::PointsRenumbering::inv_indexArray. Constructor details. ◆ PointsRenumbering() [1/2]. sofa::core::topology::PointsRenumbering::PointsRenumbering ; (; ). inline . ◆ PointsRenumbering() [2/2]. sofa::core::topology::PointsRenumbering::PointsRenumbering ; (; const sofa::type::vector< Topology::PointID > & ; indices, . const sofa::type::vector< Topology::PointID > & ; inv_indices . ). inline . ◆ ~PointsRenumbering(). sofa::core::topology::PointsRenumbering::~PointsRenumbering ; (; ). override . Function details. ◆ getIndexArray(). const sofa::type::vector<Topology::PointID>& sofa::core::topology::PointsRenumbering::getIndexArray ; (; ); const. inline . ◆ getinv_IndexArray(). const sofa::type::vector<Topology::PointID>& sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_renumbering.html:1536,inherit,inherited,1536,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_renumbering.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_points_renumbering.html,1,['inherit'],['inherited']
Modifiability," > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void buildConstraintMatrix (const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0;  ; virtual void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v);  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html:3312,inherit,inherited,3312,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,1,['inherit'],['inherited']
Modifiability," > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (GenerateRigidMass, core::DataEngine);  ;  GenerateRigidMass ();  ;  ~GenerateRigidMass () override;  ; void init () override;  Initialization method called at graph modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Update the output values. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:2834,inherit,inherited,2834,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['inherit'],['inherited']
Modifiability," > m_pivots;  ; SReal lastUpdatedStep {};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Static Protected Attributes; static constexpr type::fixed_array< bool, coord_total_size > s_defaultActiveDirections = sofa::type::makeHomogeneousArray<bool, coord_total_size>(true);  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RestShapeSpringsForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void bwdInit () override;  BaseObject initialization method. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  Add the forces. More...;  ; void addDForce (const core::Mecha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html:5177,inherit,inherited,5177,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,1,['inherit'],['inherited']
Modifiability," > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mState;  ; VecReal k;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(AngularSpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void bwdInit () override;  BaseObject initialization metho",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html:3395,inherit,inherited,3395,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,3,['inherit'],['inherited']
Modifiability," > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (ROIValueMapper, Inherited);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Real, SReal);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with mu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html:2261,variab,variables,2261,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,1,['variab'],['variables']
Modifiability," API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::gui::common::FixOperation Member List . This is the complete list of members for sofa::gui::common::FixOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::FixOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::FixOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; FixOperation()sofa::gui::common::FixOperationinline; getDescription()sofa::gui::common::FixOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() constsofa::gui::common::FixOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double s)sofa::gui::common::FixOperationinline; settingsofa::gui::common::FixOperationprotected; start()sofa::gui::common::Operationvirtual; wait()sofa::gui::common::Operationinlinevirtual; ~FixOperation() overridesofa::gui::common::FixOperationinline; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html:298,config,configure,298,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability, API: sofa::component::topology::container::constant::SphereQuadTopology Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::constant::SphereQuadTopology Class Reference . #include <SphereQuadTopology.h>. Inheritance diagram for sofa::component::topology::container::constant::SphereQuadTopology:. [legend]. Protected Attributes; sofa::core::objectmodel::RenamedData< Vec3 > center;  ; sofa::core::objectmodel::RenamedData< SReal > radius;  ; Data< Vec3 > d_center;  Center of the sphere. More...;  ; Data< SReal > d_radius;  Radius of the sphere. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::CubeTopology; sofa::core::objectmodel::RenamedData< int > nx;  ; sofa::core::objectmodel::RenamedData< int > ny;  ; sofa::core::objectmodel::RenamedData< int > nz;  ; sofa::core::objectmodel::RenamedData< bool > internalPoints;  ; sofa::core::objectmodel::RenamedData< bool > splitNormals;  ; sofa::core::objectmodel::RenamedData< Vec3 > min;  ; sofa::core::objectmodel::RenamedData< Vec3 > max;  ; Data< int > d_nx;  x grid resolution More...;  ; Data< int > d_ny;  y grid resolution More...;  ; Data< int > d_nz;  z grid resolution More...;  ; Data< bool > d_internalPoints;  include internal points (allow a one-to-one mapping between points from RegularGridTopology and CubeTopology) More...;  ; Data< bool > d_splitNormals;  split corner points to have planar normals More...;  ; Data< Vec3 > d_min;  Min. More...;  ; Data< Vec3 > d_max;  ; Vec3 p0;  Position of point 0. More...;  ; Vec3 dx;  Distance between points in the grid. Must be perpendicular to each other. More...;  ; Vec3 dy;  ; Vec3 dz;  ; SReal inv_dx2;  ; SReal inv_dy2;  ; SReal inv_dz2;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::MeshTopology; Size nbPoints;,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html:769,inherit,inherited,769,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_sphere_quad_topology.html,1,['inherit'],['inherited']
Modifiability," API;  679a9147. Open source framework for multi-physics simuation. Namespaces |; Classes |; Enumerations |; Functions |; Variables . sofa::core::visual Namespace Reference . Namespaces;  visualparams;  . Classes; class  DisplayFlags;  Class which describes the display of components in a hierarchical fashion DisplayFlags are conveyed by the VisualParams, and therefore are accessible in a read only fashion inside a Component draw method. A component can tell if it should draw something on the display by looking at the current state of the displayFlags through the VisualParams parameter. DisplayFlags are embeddable inside a Data and can therefore read/write their state from a stream. More...;  ; class  FlagTreeItem;  ; class  Shader;  A basic interface to define a Shader for different system (OpenGL, DirectX, ...). More...;  ; class  ShaderElement;  A basic interface to define an element to be used with a Shader. More...;  ; struct  tristate;  ; class  VisualLoop;  ; class  VisualManager;  ; class  VisualModel;  An interface which all VisualModel inherit. More...;  ; class  VisualParams;  Class gathering parameters used by visual components and by the draw method of each component. Transmitted by visitors. More...;  ; class  VisualState;  . Enumerations; enum  { API_OpenGL = 0; , API_OGRE = 1; , API_OpenSceneGraph = 2; , API_OpenSG = 3; };  The enumeration used to describe potentially supported graphics API. More...;  . Functions; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const FlagTreeItem &root);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, FlagTreeItem &root);  ; SOFA_CORE_API std::ostream & operator<< (std::ostream &os, const DisplayFlags &flags);  ; SOFA_CORE_API std::istream & operator>> (std::istream &in, DisplayFlags &flags);  ; DisplayFlags merge_displayFlags (const DisplayFlags &previous, const DisplayFlags &current);  ; DisplayFlags difference_displayFlags (const DisplayFlags &previous, const DisplayFlags &current);  ; trist",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html:1120,inherit,inherit,1120,api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1visual.html,1,['inherit'],['inherit']
Modifiability," API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::playback::ReadTopologyModifier Class Reference . #include <ReadTopology.h>. Inheritance diagram for sofa::component::playback::ReadTopologyModifier:. [legend]. Protected Attributes; double time;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  ReadTopologyModifier (const core::ExecParams *params, double _time);  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; double getTime () const;  ; void setTime (double _time);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology_modifier.html:988,inherit,inherited,988,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology_modifier.html,1,['inherit'],['inherited']
Modifiability," API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::core::topology::TrianglesMoved_Adding Class Reference . #include <TopologyChange.h>. Inheritance diagram for sofa::core::topology::TrianglesMoved_Adding:. [legend]; Detailed Description; indicates that some triangles are about to be moved (i.e some/all of their vertices have just been moved) TrianglesMoved_Adding Second part, recompute state of all elements previously removed, with new positions points . Public Attributes; sofa::type::vector< Topology::TriangleID > trianglesAroundVertexMoved;  ; const sofa::type::vector< Topology::Triangle > triangleArray2Moved;  . Public Member Functions;  TrianglesMoved_Adding (const sofa::type::vector< Topology::TriangleID > &triangleShell, const sofa::type::vector< Topology::Triangle > &triangleArray);  ;  ~TrianglesMoved_Adding () override;  ; const sofa::type::vector< Topology::TriangleID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Triangle > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ triangleArray2Moved. const sofa::type::vector< Topology::Triangle > sofa::core::topology::TrianglesMoved_Adding::triangleArray2Moved. ◆ trianglesAroundVertexMoved. sofa::type::vector< Topology::TriangleID > sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___adding.html:1198,inherit,inherited,1198,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___adding.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_moved___adding.html,1,['inherit'],['inherited']
Modifiability," AddSutureOperation()sofa::gui::common::AddSutureOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QAddSutureOperationinlinevirtual; sofa::gui::common::AddSutureOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AddSutureOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; dampingsofa::gui::qt::QAddSutureOperationprotected; defaultPerformerType() overridesofa::gui::common::AddSutureOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDamping() const overridesofa::gui::qt::QAddSutureOperationvirtual; getDescription()sofa::gui::common::AddSutureOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getStiffness() const overridesofa::gui::qt::QAddSutureOperationvirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QAddSutureOperation()sofa::gui::qt::QAddSutureOperation; setDamping(double f)sofa::gui::common::AddSutureOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setStiffness(double f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html:369,config,configure,369,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," AttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::AttachBodyPerformer< DataTypes >; BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *setting) overridesofa::gui::component::performer::AttachBodyPerformer< DataTypes >inlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_sizesofa::gui::component::performer::AttachBodyPer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html:642,config,configure,642,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_attach_body_performer-members.html,1,['config'],['configure']
Modifiability," AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperationinlineprotectedvirtual; setShowFac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html:496,config,configure,496,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::ConstraintAttachOperationinlineprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::ConstraintAttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; setArrowSize(double s)sofa::gui::common::AttachOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s) overridesofa::gui::common::AttachOperat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html:516,config,configure,516,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_constraint_attach_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< T >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseData; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Attribute details. ◆ m_addNewElements. template<class ElementType , class VecT > . bool sofa::core::topology::TopologySubsetData< ElementType, VecT >::m_addNewElements = false. protected . Boolean to allow this TopologySubsetData to add new elements. If true, for every new Element added in the topology container linked by this TopologyData, the index of the new element will be added into this TopologySubsetData. . ◆ m_map2Elements. template<class ElementType , class VecT > . sofa::type::vector<Index> sofa::core::topology::TopologySubsetData< ElementType, VecT >::m_map2Elements. protected . same size as this SubsetData but contains id of element link to each data[] . Constr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:20447,inherit,inherited,20447,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,2,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _abo. template<int size, unsigned int type, class TDataTypes > . GLuint sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >::_abo. protected . ◆ _aboSize. template<int size, unsigned int type, class TDataTypes > . unsigned int sofa::gl::component::shader::OglAttribute< size, type, TDataTypes >::_aboSize. protected . ◆ _index. template<int size, unsigned ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:16667,inherit,inherited,16667,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _changeScale. template<class DataTypes > . Data<bool> sofa::gl::component::engine::TextureInterpolation< DataTypes >::_changeScale. protected . compute texture interpolation on manually scale defined above. . ◆ _inputCoords. template<class DataTypes > . Data<VecCoord3D> sofa::gl::component::engine::TextureInterpolation< DataTypes >::_inputCoords. protected . input coord",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html:16681,inherit,inherited,16681,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _depth. int sofa::gl::component::rendering3d::SlicedVolumetricModel::_depth. protected . ◆ _first. bool sofa::gl::component::rendering3d::SlicedVolumetricModel::_first. protected . ◆ _height. int sofa::gl::component::rendering3d::SlicedVolumetricModel::_height. protected . ◆ _maxBBox. double sofa::gl::component::rendering3d::SlicedVolumetricModel::_maxBBox[3]. protected",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html:15367,inherit,inherited,15367,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _zeroCollision. bool sofa::core::collision::NarrowPhaseDetection::_zeroCollision. protected . ◆ m_outputsMap. DetectionOutputMap sofa::core::collision::NarrowPhaseDetection::m_outputsMap. protected . ◆ m_primitiveTestCount. size_t sofa::core::collision::NarrowPhaseDetection::m_primitiveTestCount. protected . ◆ m_storedOutputsMap. std::map<Instance, DetectionOutputMap> s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html:14952,inherit,inherited,14952,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_narrow_phase_detection.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ broadPhaseDetection. BroadPhaseDetection* sofa::core::collision::Pipeline::broadPhaseDetection. protected . ◆ broadPhaseDetections. sofa::type::vector<BroadPhaseDetection*> sofa::core::collision::Pipeline::broadPhaseDetections. protected . ◆ contactManager. ContactManager* sofa::core::collision::Pipeline::contactManager. protected . ◆ contactManagers. sofa::type::vector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html:14126,inherit,inherited,14126,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ cmPairs. sofa::type::vector< CollisionModelPair > sofa::core::collision::BroadPhaseDetection::cmPairs. protected . Potentially colliding pairs. . ◆ storedCmPairs. std::map<Instance,sofa::type::vector< CollisionModelPair > > sofa::core::collision::BroadPhaseDetection::storedCmPairs. protected . Constructor details. ◆ ~BroadPhaseDetection(). sofa::core::collision::BroadPh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html:15004,inherit,inherited,15004,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. ContactVector sofa::core::collision::ContactManager::contacts. protected . ◆ intersectionMethod. Intersection* sofa::core::collision::ContactManager::intersectionMethod. protected . Current intersection method. . ◆ storedContacts. std::map<Instance,ContactVector> sofa::core::collision::ContactManager::storedContacts. protected . ◆ storedIntersectionMethod. std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html:13937,inherit,inherited,13937,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. std::set<response::contact::BaseRayContact*> sofa::component::collision::geometry::RayCollisionModel::contacts. protected . ◆ d_defaultLength. Data<SReal> sofa::component::collision::geometry::RayCollisionModel::d_defaultLength. protected . The default length for all rays in this collision model. . ◆ defaultLength. sofa::core::objectmodel::RenamedData<SReal> s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:20854,inherit,inherited,20854,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_areJacobiansConstant. template<class TMatrix > . Data<bool> sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >::d_areJacobiansConstant. protected . True if mapping jacobians are considered constant over time. They are computed only the first time. . ◆ m_mappingJacobians. template<class TMatrix > . std::optional<sofa::type::fixed_array<MappingJacobians<TM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html:15865,inherit,inherited,15865,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_frames. template<class DataTypes > . Data<VecCoord> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_frames. protected . Frames at output. . ◆ d_invertNormals. template<class DataTypes > . Data<bool> sofa::component::engine::transform::Vertex2Frame< DataTypes >::d_invertNormals. protected . Swap normals. . ◆ d_normals. template<class DataTypes > . Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html:16750,inherit,inherited,16750,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_handleEventTriggersUpdate. Data< bool > sofa::component::controller::Controller::d_handleEventTriggersUpdate. protected . Event handling frequency controls the controller update frequency. . ◆ handleEventTriggersUpdate. sofa::core::objectmodel::RenamedData< bool > sofa::component::controller::Controller::handleEventTriggersUpdate. protected . Constructor details. ◆ Co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:13843,inherit,inherited,13843,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_inT. Data<type::Matrix4> sofa::component::engine::transform::AbstractTransformMatrixEngine::d_inT. protected . input transformation if any . ◆ d_outT. Data<type::Matrix4> sofa::component::engine::transform::AbstractTransformMatrixEngine::d_outT. protected . output transformation . Constructor details. ◆ AbstractTransformMatrixEngine(). sofa::component::engine::transfo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html:15524,inherit,inherited,15524,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_abstract_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_matrixSize. Data< sofa::type::Vec2u > sofa::core::behavior::BaseMatrixLinearSystem::d_matrixSize. protected . Size of the linear system. . Constructor details. ◆ BaseMatrixLinearSystem(). sofa::core::behavior::BaseMatrixLinearSystem::BaseMatrixLinearSystem ; (; ). protected . Function details. ◆ assembleSystem(). void sofa::core::behavior::BaseMatrixLinearSystem::asse",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html:12981,inherit,inherited,12981,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_rotation. Data<type::Vec3> sofa::component::engine::transform::RotateTransformMatrixEngine::d_rotation. protected . rotation . Constructor details. ◆ RotateTransformMatrixEngine(). sofa::component::engine::transform::RotateTransformMatrixEngine::RotateTransformMatrixEngine ; (; ). protected . ◆ ~RotateTransformMatrixEngine(). sofa::component::engine::transform::Rotate",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html:16198,inherit,inherited,16198,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rotate_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_scale. Data<type::Vec3> sofa::component::engine::transform::ScaleTransformMatrixEngine::d_scale. protected . scaling values . Constructor details. ◆ ScaleTransformMatrixEngine(). sofa::component::engine::transform::ScaleTransformMatrixEngine::ScaleTransformMatrixEngine ; (; ). protected . ◆ ~ScaleTransformMatrixEngine(). sofa::component::engine::transform::ScaleTransf",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html:16225,inherit,inherited,16225,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_scale_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_translation. Data<type::Vec3> sofa::component::engine::transform::TranslateTransformMatrixEngine::d_translation. protected . translation . Constructor details. ◆ TranslateTransformMatrixEngine(). sofa::component::engine::transform::TranslateTransformMatrixEngine::TranslateTransformMatrixEngine ; (; ). protected . ◆ ~TranslateTransformMatrixEngine(). sofa::component::e",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html:16247,inherit,inherited,16247,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ distanceFromMouse. SReal sofa::gui::component::performer::BaseMouseInteractor::distanceFromMouse. protected . ◆ isAttached. bool sofa::gui::component::performer::BaseMouseInteractor::isAttached. protected . ◆ lastPicked. BodyPicked sofa::gui::component::performer::BaseMouseInteractor::lastPicked. protected . ◆ mouseCollision. MouseCollisionModel* sofa::gui::component::p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:13377,inherit,inherited,13377,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ elems. sofa::type::vector<CubeData> sofa::component::collision::geometry::CubeCollisionModel::elems. protected . ◆ parentOf. sofa::type::vector<sofa::Index> sofa::component::collision::geometry::CubeCollisionModel::parentOf. protected . Given the index of a child leaf element, store the index of the parent cube. . Constructor details. ◆ CubeCollisionModel(). sofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:21099,inherit,inherited,21099,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_affineMatrix. template<class DataTypes > . Data<Mat4x4> sofa::component::engine::transform::TransformPosition< DataTypes >::f_affineMatrix. protected . 4x4 affine matrix . ◆ f_drawInput. template<class DataTypes > . Data<bool> sofa::component::engine::transform::TransformPosition< DataTypes >::f_drawInput. protected . Draw input points. . ◆ f_drawOutput. template<clas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:17352,inherit,inherited,17352,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_inputX. template<class DataTypes > . Data<VecCoord> sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::f_inputX. protected . input array of 3d points . ◆ f_outputX. template<class DataTypes > . Data<VecCoord> sofa::component::engine::transform::ProjectiveTransformEngine< DataTypes >::f_outputX. protected . output array of projected 3d points .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html:16034,inherit,inherited,16034,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ f_inputX. template<class DataTypes > . Data<VecCoord> sofa::component::engine::transform::TransformEngine< DataTypes >::f_inputX. protected . input array of 3d points . ◆ f_outputX. template<class DataTypes > . Data<VecCoord> sofa::component::engine::transform::TransformEngine< DataTypes >::f_outputX. protected . output array of 3d points . ◆ inverse. template<class Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html:16179,inherit,inherited,16179,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_engine.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ frozen. bool sofa::core::behavior::LinearSolver::frozen. protected . Constructor details. ◆ LinearSolver(). sofa::core::behavior::LinearSolver::LinearSolver ; (; ). protected . ◆ ~LinearSolver(). sofa::core::behavior::LinearSolver::~LinearSolver ; (; ). overrideprotected . Function details. ◆ addJMInvJt(). virtual bool sofa::core::behavior::LinearSolver::addJMInvJt ; (;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html:15552,inherit,inherited,15552,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ group. Data<int> sofa::core::behavior::BaseProjectiveConstraintSet::group. protected . ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. . Constructor details. ◆ BaseProjectiveConstraintSet(). sofa::core::behavior::BaseProjectiveC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html:15096,inherit,inherited,15096,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ groups. sofa::type::vector<core::objectmodel::BaseContext::SPtr> sofa::core::collision::CollisionGroupManager::groups. protected . integration groups . ◆ storedGroups. std::map<Instance,sofa::type::vector<core::objectmodel::BaseContext::SPtr> > sofa::core::collision::CollisionGroupManager::storedGroups. protected . Constructor details. ◆ ~CollisionGroupManager(). sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:13936,inherit,inherited,13936,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ instance. Instance sofa::core::collision::CollisionAlgorithm::instance. protected . Current collision 'pipeline' instance, allowing to store multiple internal states. . Constructor details. ◆ CollisionAlgorithm(). sofa::core::collision::CollisionAlgorithm::CollisionAlgorithm ; (; ). inlineprotected . Function details. ◆ changeInstance(). virtual void sofa::core::collisi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html:12512,inherit,inherited,12512,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ intersectionMethod. Intersection* sofa::core::collision::Detection::intersectionMethod. protected . Current intersection method. . ◆ storedIntersectionMethod. std::map<Instance,Intersection*> sofa::core::collision::Detection::storedIntersectionMethod. protected . All intersection methods. . Constructor details. ◆ Detection(). sofa::core::collision::Detection::Detection ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection.html:13426,inherit,inherited,13426,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_detection.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ l_constraintCorrections. MultiLink< ConstraintSolverImpl, core::behavior::BaseConstraintCorrection, BaseLink::FLAG_STOREPATH> sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::l_constraintCorrections. protected . Constructor details. ◆ ConstraintSolverImpl(). sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl::ConstraintSolverImpl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:14899,inherit,inherited,14899,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ l_linearSolver. SingleLink<LinearSolverAccessor, LinearSolver, BaseLink::FLAG_STRONGLINK> sofa::core::behavior::LinearSolverAccessor::l_linearSolver. protected . Constructor details. ◆ LinearSolverAccessor(). sofa::core::behavior::LinearSolverAccessor::LinearSolverAccessor ; (; LinearSolver * ; linearSolver = nullptr). explicitprotected . Function details. ◆ init(). voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html:12344,inherit,inherited,12344,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ l_mechanicalStates. MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > sofa::core::behavior::StateAccessor::l_mechanicalStates. protected . List of mechanical states to which this component is associated The list can contain more than one mechanical states. In an interaction force field, for example. . Constructor details. ◆ StateAccessor(). sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html:12859,inherit,inherited,12859,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ list_Out. Data<sofa::type::vector<TriangleID> > sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::list_Out. protected . triangles with at least one null values. . Constructor details. ◆ TriangleSetTopologyModifier(). sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::TriangleSetTopologyModifier ; (; ). inlineprotected .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:27547,inherit,inherited,27547,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::compo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:16574,inherit,inherited,16574,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_topologyContainer. TopologyContainer* sofa::core::topology::TopologyModifier::m_topologyContainer. protected . Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). . Constructor details. ◆ TopologyModifier(). sofa::core::topology::TopologyModifier::TopologyModifier ; (; ). inlineprotected . Constructor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html:13717,inherit,inherited,13717,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ mstate. template<class DataTypes > . SingleLink<SingleStateAccessor<DataTypes>, MechanicalState<DataTypes>, BaseLink::FLAG_STRONGLINK> sofa::core::behavior::SingleStateAccessor< DataTypes >::mstate. protected . Constructor details. ◆ SingleStateAccessor(). template<class DataTypes > . sofa::core::behavior::SingleStateAccessor< DataTypes >::SingleStateAccessor ; (; Mecha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html:13531,inherit,inherited,13531,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ mstate1. template<class DataTypes1 , class DataTypes2 = DataTypes1> . SingleLink<PairStateAccessor<DataTypes1, DataTypes2>, MechanicalState<DataTypes1>, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK> sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >::mstate1. protected . ◆ mstate2. template<class DataTypes1 , class DataTypes2 = DataTypes1> . SingleL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html:14701,inherit,inherited,14701,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ root. sofa::core::objectmodel::BaseNode* sofa::component::sceneutility::PauseAnimation::root. protected . Constructor details. ◆ PauseAnimation(). sofa::component::sceneutility::PauseAnimation::PauseAnimation ; (; ). protected . ◆ ~PauseAnimation(). sofa::component::sceneutility::PauseAnimation::~PauseAnimation ; (; ). overrideprotected . Function details. ◆ init(). voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html:12418,inherit,inherited,12418,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html:13490,inherit,inherited,13490,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html,5,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doUpdate ()=0;  Where you put your engine's impl. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:13187,inherit,inherited,13187,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::behavior::OdeSolver;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:13789,inherit,inherited,13789,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html:11922,inherit,inherited,11922,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglShaderMacro;  OglShaderMacro ();  ;  ~OglShaderMacro () override;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html:12082,inherit,inherited,12082,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  BaseMouseInteractor ();  ;  Protected Member Functions inherited from sofa::core::BehaviorModel;  BehaviorModel ();  ;  ~BehaviorModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:12326,inherit,inherited,12326,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,1,['inherit'],['inherited']
Modifiability," Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_coordinates. template<class TDataTypes > . SetIndex sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::d_coordinates. the coordinates on which to apply velocities . ◆ d_indices. template<class TDataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:18636,inherit,inherited,18636,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,3,['inherit'],['inherited']
Modifiability," Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes > Class Template Reference . #include <FixedPlaneProjectiveConstraint.h>. Inheritance diagram for sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >:. [legend]. Public Attributes; Data< Coord > d_direction;  normal direction of the plane More...;  ; Data< Real > d_dmin;  Minimum plane distance from the origin. More...;  ; Data< Real > d_dmax;  Maximum plane distance from the origin. More...;  ; SetIndex d_indices;  the set of vertex indices More...;  ; SingleLink< FixedPlaneProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:1166,inherit,inherited,1166,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," BaseAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >explicit; clear()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; ConstraintAttachBodyPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::ConstraintAttachBodyPerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; execute()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >virtual; getInteractionObject()sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_flagssofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactionObjectsofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_interactorsofa::gui::component::performer::InteractionPerformer; m_mappersofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >protected; m_mstate1sofa::gui::component::performer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html:552,config,configure,552,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_constraint_attach_body_performer-members.html,1,['config'],['configure']
Modifiability," BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:13712,variab,variables,13712,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,2,['variab'],['variables']
Modifiability," BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:10497,variab,variables,10497,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,6,['variab'],['variables']
Modifiability," BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:7140,variab,variables,7140,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,2,['variab'],['variables']
Modifiability," BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:4846,variab,variables,4846,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,2,['variab'],['variables']
Modifiability," BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an in",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:4335,variab,variables,4335,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,2,['variab'],['variables']
Modifiability," BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ConstantSparsityProjectionMethod, TMatrix), SOFA_TEMPLATE(MatrixProjectionMethod, TMatrix));  ;  ConstantSparsityProjectionMethod ();  ;  ~ConstantSparsityProjectionMethod () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >;  SOFA_CLASS (SOFA_TEMPLATE(MatrixProjectionMethod, TMatrix), SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix));  ;  ~MatrixProjectionMethod () override;  ; void computeMatrixJacobians (const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject);  ;  Public Member Functions inherited from sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix), core::behavior::StateAccessor);  ;  ~BaseMatrixProjectionMethod () override;  ; virtual bool hasPairStates (const PairMechanicalStates &pairStates) const;  ; void setPairStates (const PairMechanicalStates &pairStates);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html:3758,variab,variables,3758,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,1,['variab'],['variables']
Modifiability," BaseData, using the corresponding instance of data_widget_container. ; More... Inheritance diagram for sofa::gui::qt::SimpleDataWidget< T, Container >:. [legend]; Detailed Description; template<class T, class Container = data_widget_container<T>>; class sofa::gui::qt::SimpleDataWidget< T, Container >; This class manages the GUI of a BaseData, using the corresponding instance of data_widget_container. . Protected Attributes; Container container;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< T >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  SimpleDataWidget (QWidget *parent, const char *name, MyTData *d);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void setReadOnly (bool readOnly);  ; virtual void writeToData ();  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< T >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< T > * getData ();  ; const sofa::core::objectmodel::Data< T > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html:1453,config,configure,1453,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_simple_data_widget.html,1,['config'],['configure']
Modifiability," BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMass;  BaseMass ();  ;  ~BaseMass () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:18979,inherit,inherited,18979,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['inherit'],['inherited']
Modifiability," BaseGUI()sofa::gui::common::BaseGUIprotected; BatchGUI()sofa::gui::batch::BatchGUI; canBeDefaultGUI() const overridesofa::gui::batch::BatchGUIinlinevirtual; canExportJson(const std::string &timerOutputStr, const std::string &timerId)sofa::gui::batch::BatchGUIprotectedstatic; centerWindow()sofa::gui::common::BaseGUIinlinevirtual; closeGUI() overridesofa::gui::batch::BatchGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateGUI(const char *name, sofa::simulation::NodeSPtr groot=nullptr, const char *filename=nullptr)sofa::gui::batch::BatchGUIstatic; currentSimulation() overridesofa::gui::batch::BatchGUIvirtual; DEFAULT_NUMBER_OF_ITERATIONSsofa::gui::batch::BatchGUIstatic; exportGnuplot(sofa::simulation::Node *node, std::string gnuplot_directory="""")sofa::gui::common::BaseGUI; exportJson(const std::string &timerOutputStr, int iterationNumber) constsofa::gui::batch::BatchGUIprotected; filenamesofa::gui::batch::BatchGUIprotected; getConfigDirectoryPath()sofa::gui::common::BaseGUIstatic; GetGUIName()sofa::gui::common::BaseGUIinlinestatic; GetProgramName()sofa::gui::common::BaseGUIinlinestatic; getScreenshotDirectoryPath()sofa::gui::common::BaseGUIstatic; getViewer()sofa::gui::common::BaseGUIinlinevirtual; grootsofa::gui::batch::BatchGUIprotected; hideProgressBarsofa::gui::batch::BatchGUIinlineprotectedstatic; initViewer(BaseViewer *)sofa::gui::common::BaseGUIinlinevirtual; m_dumpVisitorStreamsofa::gui::batch::BatchGUIprotected; mainLoop() overridesofa::gui::batch::BatchGUIvirtual; mArgumentParsersofa::gui::common::BaseGUIprotectedstatic; mGuiNamesofa::gui::common::BaseGUIprotectedstatic; mProgramNamesofa::gui::common::BaseGUIprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i-members.html:628,config,configDirectoryPathsofa,628,api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i-members.html,2,['config'],"['configDirectoryPathsofa', 'configureGUI']"
Modifiability," BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow()sofa::gui::common::BaseGUIinlinevirtual; closeGUI()=0sofa::gui::common::BaseGUIpure virtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; currentSimulation()=0sofa::gui::common::BaseGUIpure virtual; exportGnuplot(sofa::simulation::Node *node, std::string gnuplot_directory="""")sofa::gui::common::BaseGUI; getConfigDirectoryPath()sofa::gui::common::BaseGUIstatic; GetGUIName()sofa::gui::common::BaseGUIinlinestatic; GetProgramName()sofa::gui::common::BaseGUIinlinestatic; getScreenshotDirectoryPath()sofa::gui::common::BaseGUIstatic; getViewer()sofa::gui::common::BaseGUIinlinevirtual; initViewer(BaseViewer *)sofa::gui::common::BaseGUIinlinevirtual; mainLoop()=0sofa::gui::common::BaseGUIpure virtual; mArgumentParsersofa::gui::common::BaseGUIprotectedstatic; mGuiNamesofa::gui::common::BaseGUIprotectedstatic; mProgramNamesofa::gui::common::BaseGUIprotectedstatic; redraw()=0sofa::gui::common::BaseGUIpure virtual; registerViewer(BaseViewer *)sofa::gui::common::BaseGUIinlinevirtual; saveScreenshot(const std::string &filename, int compression_level=-1)sofa::gui::common::BaseGUIvirtual; screenshotDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; sendMessage(const std::string &, const std::string &)sofa::gui::common::BaseGUIinlinevirtual; SetArgumentParser(ArgumentParser *parser)sofa::gui::common::BaseGUIinlinestatic; setBackgroundColor(const sofa::type::RGBAColor &)sofa::gui::common::BaseGUIinlinevirtual; setBackgroundImage(const std::string &)sofa::gui::common::BaseGUIinlinevirtual; setConfigDirectoryPath(const std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i-members.html:460,config,configDirectoryPathsofa,460,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i-members.html,2,['config'],"['configDirectoryPathsofa', 'configureGUI']"
Modifiability," BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ExtrudeQuadsAndGenerateHexas ();  ;  ~ExtrudeQuadsAndGenerateHexas () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:14675,inherit,inherited,14675,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['inherit'],['inherited']
Modifiability," BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_gnuplotPath. sofa::core::objectmodel::Data<std::string> sofa::component::setting::SofaDefaultPathSetting::d_gnuplotPath. Path where will be saved the gnuplot files. . ◆ gnuplotPath. sofa::core::objectmodel::RenamedData<std::string> sofa::component::setting::SofaDefaultPathSetting::gnuplotPath. Constructor details. ◆ SofaDefaultPathSetting(). sofa::component::setting::SofaDefaultPathSetting::SofaDefaultPathSetting ; (; ). protected . Default constructor. . Function details. ◆ SOFA_CLASS(). sofa::component::setting::SofaDefaultPathSetting::SOFA_CLASS ; (; SofaDefaultPathSetting ; , . core::objectmodel::ConfigurationSetting ;  . ). Sofa macro to define typedef. . sofacomponentsettingSofaDefaultPathSetting; Generated on Mon Nov 11 2024 02:56:38 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html:13412,inherit,inherited,13412,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,1,['inherit'],['inherited']
Modifiability," BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairInteractionProjectiveConstraintSet (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool ad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html:15482,inherit,inherited,15482,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability," BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:13820,inherit,inherited,13820,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,3,['inherit'],['inherited']
Modifiability," Class Reference . #include <UpdateInternalDataVisitor.h>. Inheritance diagram for sofa::simulation::UpdateInternalDataVisitor:. [legend]; Detailed Description; Triggers the updateInternal() function to update method called when variables (used to compute other internal variables) are modified . Public Member Functions;  UpdateInternalDataVisitor (const core::ExecParams *params);  ; void processUpdateInternalData (simulation::Node *node, sofa::core::objectmodel::BaseObject *baseObj);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html:1140,inherit,inherited,1140,api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_update_internal_data_visitor.html,1,['inherit'],['inherited']
Modifiability," Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; Protected Slots |; List of all members . sofa::gui::qt::QPoissonRatioWidget Class Reference . #include <QDisplayDataWidget.h>. Inheritance diagram for sofa::gui::qt::QPoissonRatioWidget:. [legend]. Protected Attributes; QSlider * slider;  ; QLineEdit * lineEdit;  ;  Protected Attributes inherited from sofa::gui::qt::TDataWidget< double >; MyTData * Tdata;  ;  Protected Attributes inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  QPoissonRatioWidget (QWidget *, const char *, core::objectmodel::Data< double > *);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< double >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< double > * getData ();  ; const sofa::core::objectmodel::Data< double > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html:1138,config,configure,1138,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_poisson_ratio_widget.html,1,['config'],['configure']
Modifiability," Classes; class  Spring;  . Protected Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< Spring > > springs;  ; sofa::core::objectmodel::RenamedData< bool > showLawfulTorsion;  ; sofa::core::objectmodel::RenamedData< bool > showExtraTorsion;  ; SReal m_potentialEnergy;  ; Data< sofa::type::vector< Spring > > d_springs;  the list of the springs More...;  ; VecCoord springRef;  the list of the local referentials of the springs More...;  ; Data< bool > d_showLawfulTorsion;  bool to allow the display of the 2 parts of springs torsions More...;  ; Data< bool > d_showExtraTorsion;  display the illicit part of the joint rotation More...;  ; FrameSpringForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member Functi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:1661,inherit,inherited,1661,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,3,['inherit'],['inherited']
Modifiability," ConstMultiMatrixDerivId id, type::vector< const InDataMatrixDeriv * > &v) const;  ; void getVecOutCoord (const MultiVecCoordId id, type::vector< OutDataVecCoord * > &v) const;  ; void getConstVecOutCoord (const ConstMultiVecCoordId id, type::vector< const OutDataVecCoord * > &v) const;  ; void getVecOutDeriv (const MultiVecDerivId id, type::vector< OutDataVecDeriv * > &v) const;  ; void getConstVecOutDeriv (const ConstMultiVecDerivId id, type::vector< const OutDataVecDeriv * > &v) const;  ; void getMatOutDeriv (const MultiMatrixDerivId id, type::vector< OutDataMatrixDeriv * > &v) const;  ; void getConstMatOutDeriv (const ConstMultiMatrixDerivId id, type::vector< const OutDataMatrixDeriv * > &v) const;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html:22371,inherit,inherited,22371,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,2,['inherit'],['inherited']
Modifiability," DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ProjectiveTransformEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html:2326,variab,variables,2326,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,1,['variab'],['variables']
Modifiability, DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_dataTracker. DataTracker sofa::core::DataTrackerDDGNode::m_dataTracker. protected . Constructor details. ◆ DataTrackerDDGNode(). sofa::core::DataTrackerDDGNode::DataTrackerDDGNode ; (; ). inline . Function details. ◆ addInputs(). void sofa::core::DataTrackerDDGNode::addInputs ; (; std::initializer_list< sofa::core::objectmodel::BaseData * > ; datas). Create a DataCallback object associated with multiple Data fields. . ◆ addOutputs(). void sofa::core::DataTrackerDDGNode::addOutputs ; (; std::initializer_list< sofa::core::objectmodel::BaseData * > ; datas). ◆ cleanDirty(). void sofa::core::DataTrackerDDGNode::cleanDirty ; (; const core::ExecParams * ; params = nullptr). virtual . Set dirty flag to false for the DDGNode and for all the tracked Data . ◆ updateAllInputsIfDirty,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html:2700,inherit,inherited,2700,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,1,['inherit'],['inherited']
Modifiability," Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static bool isPointInAlignedBox (const typename DataTypes::CPos &p, const type::Vec6 &box);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_alignedBoxes. template<class DataTypes > . Data<type::vector<type::Vec6> > sofa::component::engine::select::boxroi::BoxROI< DataTypes >::d_alignedBoxes. List of boxes, each defined by two 3D points : xmin,ymin,zmin, xmax,ymax,zmax. . ◆ d_orientedBoxes. template<class DataTypes > . Data<type::vector<Vec10> > sofa::component::engine::select::boxroi::BoxROI< DataTypes >::d_orientedBoxes. each box is defined using three point coordinates and a dep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html:21992,inherit,inherited,21992,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,1,['inherit'],['inherited']
Modifiability," Data< SeqTriangles > sofa::component::engine::select::MeshBoundaryROI::d_triangles. inputs . Constructor details. ◆ MeshBoundaryROI(). sofa::component::engine::select::MeshBoundaryROI::MeshBoundaryROI ; (; ). protected . ◆ ~MeshBoundaryROI(). sofa::component::engine::select::MeshBoundaryROI::~MeshBoundaryROI ; (; ). inlineoverrideprotected . Function details. ◆ countEdge(). void sofa::component::engine::select::MeshBoundaryROI::countEdge ; (; std::map< PointPair, unsigned int > & ; edgeCount, . PointPair & ; edge . ). static . edge is used as a key to be found in the edgeCount map. If found, its value is incremented. Otherwise, the value is set to 1. . ◆ doUpdate(). void sofa::component::engine::select::MeshBoundaryROI::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). void sofa::component::engine::select::MeshBoundaryROI::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ inROI(). bool sofa::component::engine::select::MeshBoundaryROI::inROI ; (; const PointID & ; index); const. inline . Check if the point with PointID index is part of the indices defined in d_inputROI. Returnstrue if d_inputROI is empty or if index is in d_inputROI, false otherwise. . ◆ reinit(). void sofa::component::engine::select::MeshBoundaryROI::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). sofa::component::engine::select::MeshBoundaryROI::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Inherited ; , . Inherit1 ;  . ). ◆ SOFA_CLASS(). sofa::component::engine::select::MeshBoundaryROI::SOFA_CLASS ; (; MeshBoundaryROI ; , . DataEngine ;  . ). sofacomponentengineselectMeshBoundaryROI; Generated on Mon Nov 11 2024 02:40:41 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:18533,variab,variables,18533,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['variab'],['variables']
Modifiability," Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (EdgeSetTopologyContainer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:3068,inherit,inherited,3068,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshBoundaryROI, DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; bool inROI (const PointID &index) const;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Memb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:2288,variab,variables,2288,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['variab'],['variables']
Modifiability," Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const DataTypes &v);  ; virtual void pushValue ()=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:2767,variab,variable,2767,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,1,['variab'],['variable']
Modifiability," Data<sofa::type::Vec3> sofa::gl::component::rendering3d::ClipPlane::normal. Normal of the clipping plane, pointing toward the clipped region. . ◆ position. Data<sofa::type::Vec3> sofa::gl::component::rendering3d::ClipPlane::position. Point crossed by the clipping plane. . ◆ saveEq. double sofa::gl::component::rendering3d::ClipPlane::saveEq[4]. protected . ◆ wasActive. GLboolean sofa::gl::component::rendering3d::ClipPlane::wasActive. protected . Constructor details. ◆ ClipPlane(). sofa::gl::component::rendering3d::ClipPlane::ClipPlane ; (; ). protected . ◆ ~ClipPlane(). sofa::gl::component::rendering3d::ClipPlane::~ClipPlane ; (; ). overrideprotected . Function details. ◆ bwdDraw(). void sofa::gl::component::rendering3d::ClipPlane::bwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called after objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ checkDataValues(). sofa::core::objectmodel::ComponentState sofa::gl::component::rendering3d::ClipPlane::checkDataValues ; (; ). virtual . ◆ fwdDraw(). void sofa::gl::component::rendering3d::ClipPlane::fwdDraw ; (; core::visual::VisualParams * ; ). overridevirtual . Called before objects in the current branch are displayed. ; Reimplemented from sofa::core::visual::VisualModel. ◆ init(). void sofa::gl::component::rendering3d::ClipPlane::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::gl::component::rendering3d::ClipPlane::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::gl::component::rendering3d::ClipPlane::SOFA_CLASS ; (; ClipPlane ; , . core::visual::VisualModel ;  . ). sofaglcomponentrendering3dClipPlane; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html:17330,variab,variables,17330,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,1,['variab'],['variables']
Modifiability," DataTypes > . sofa::gl::component::engine::TextureInterpolation< DataTypes >::~TextureInterpolation ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resetGraph(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::resetGraph. protected . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::gl::component::engine::TextureInterpolation< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(TextureInterpolation< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). ◆ standardLinearInterpolation(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::standardLinearInterpolation. protected . ◆ updateGraph(). template<class DataTypes > . void sofa::gl::component::engine::TextureInterpolation< DataTypes >::updateGraph. protected . sofaglcomponentengineTextureInterpolation; Generated on Mon Nov 11 2024 03:18:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html:20782,variab,variables,20782,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1engine_1_1_texture_interpolation.html,1,['variab'],['variables']
Modifiability," DataTypes > Class Template Reference . #include <DiagonalVelocityDampingForceField.h>; Apply damping forces to given degrees of freedom. ; More... Inheritance diagram for sofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::mechanicalload::DiagonalVelocityDampingForceField< DataTypes >; Apply damping forces to given degrees of freedom. . Public Attributes; Data< VecDeriv > d_dampingCoefficients;  velocity damping coefficients (by cinematic dof) More...;  ; DeprecatedAndRemoved dampingCoefficients;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DiagonalVelocityDampingForceField, DataT",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html:1302,inherit,inherited,1302,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,1,['inherit'],['inherited']
Modifiability," DataVecDeriv &dx) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const override;  ; void createQuadInformation (unsigned int quadIndex, QuadInformation &, const core::topology::BaseMeshTopology::Quad &t, const sofa::type::vector< unsigned int > &, const sofa::type::vector< SReal > &);  ; Real getPoisson ();  Get/Set methods. More...;  ; void setPoisson (Real val);  ; Real getYoung ();  ; void setYoung (Real val);  ; int getMethod ();  ; void setMethod (int val);  ; void setMethod (const std::string &methodName);  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset);  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html:5176,inherit,inherited,5176,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability," DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Draw the constrained points (= border mesh points) More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const Mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:6840,inherit,inherited,6840,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Draw the constrained points (= border mesh points) More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const Mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:6373,inherit,inherited,6373,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; Need a SparseGridTopology with _sparseGrid->d_nbVirtualFinerLevels >= this->d_nbVirtualFinerLevels; @InProceedings{NPF06, author = ""Nesme, Matthieu and Payan, Yohan and Faure, Fran\c{c}ois"", title = ""Animating Shapes at Arbitrary Resolution with Non-Uniform Stiffness"", booktitle = ""Eurographics Workshop in Virtual Reality Interaction and Physical Simulation (VRIPHYS)"", month = ""nov"", year = ""2006"", organization = ""Eurographics"", address = ""Madrid"", url = ""http://www-evasion.imag.fr/Publications/2006/NPF06"" } . Public Attributes; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:1642,inherit,inherited,1642,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability," Friends |; List of all members . sofa::component::collision::geometry::TetrahedronCollisionModel Class Reference . #include <TetrahedronModel.h>. Inheritance diagram for sofa::component::collision::geometry::TetrahedronCollisionModel:. [legend]. Classes; struct  TetrahedronInfo;  . Public Attributes; SingleLink< TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< TetrahedronInfo > elems;  ; const sofa::core::topology::BaseMeshTopology::SeqTetrahedra * tetra;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * mstate;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; int m_topology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:1198,inherit,inherited,1198,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,1,['inherit'],['inherited']
Modifiability," Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  LineProjectiveConstraint ();  ; virtual ~LineProjectiveConstraint ();  ; void updateJacobian ();  Resize/update Jacobian matrix according to the linked mechanical state and the direction. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:17320,inherit,inherited,17320,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,4,['inherit'],['inherited']
Modifiability," Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  AverageCoord ();  ;  ~AverageCoord () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:13932,inherit,inherited,13932,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['inherit'],['inherited']
Modifiability," Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; void preAssembleSystem (const core::MechanicalParams *) override;  ; virtual void associateLocalMatrixToComponents (const core::MechanicalParams *);  ; virtual void allocateSystem ();  ; virtual void resizeVectors (sofa::Size n);  Set the size of RHS and solution to n. More...;  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, TVector *globalVector);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  BaseMatrixLinearSystem ();  ; virtual void assembleSystem (const core::MechanicalParams *);  ; virtual void postAssembleSystem (const core::MechanicalParams *);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:15525,inherit,inherited,15525,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,4,['inherit'],['inherited']
Modifiability," Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::sceneutility::PauseAnimation; sofa::core::objectmodel::BaseNode * root;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectm",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:11967,inherit,inherited,11967,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,3,['inherit'],['inherited']
Modifiability," Functions |; List of all members . sofa::DataEngine_test< DataEngineType > Struct Template Reference . #include <DataEngineTestCreation.h>; Helper for writing DataEngine tests. ; More... Inheritance diagram for sofa::DataEngine_test< DataEngineType >:. [legend]; Detailed Description; template<typename DataEngineType>; struct sofa::DataEngine_test< DataEngineType >; Helper for writing DataEngine tests. ; AuthorMatthieu Nesme, 2015 . Public Attributes; Engine::SPtr m_engine;  the real tested engine More...;  ; DataEngineType::SPtr m_engineInput;  an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  DataEngine_test ();  ; virtual void init ();  ; void run_basic_test ();  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  . Attribute details. ◆ m_engine. template<typename DataEngineType > . Engine::SPtr sofa::DataEngine_test< DataEngineType >::m_engine. the real tested engine . ◆ m_engineInput. template<typename DataEngineType > . DataEngineType::SPtr sofa::DataEngine_test< DataEngineType >::m_engineInput. an other identical engine, where only inputs are used (not the engine itself). It is an easy way to create all inputs of the right type, to be able to link with them. . Constructor details. ◆ DataEngine_test(). template<typename DataEngineType > . sofa::DataEngine_test< DataEngineType >::DataEngine_test ; (; ). inline . Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html:1200,inherit,inherited,1200,api/master/sofa/html/structsofa_1_1_data_engine__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_data_engine__test.html,1,['inherit'],['inherited']
Modifiability," Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 > Class Template Referenceabstract . #include <MixedInteractionConstraint.h>; Component computing constraints between a pair of simulated body. ; More... Inheritance diagram for sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >:. [legend]; Detailed Description; template<class TDataTypes1, class TDataTypes2>; class sofa::core::behavior::MixedInteractionConstraint< TDataTypes1, TDataTypes2 >; Component computing constraints between a pair of simulated body. ; This class define the abstract API common to interaction constraints between a pair of bodies using a given type of DOFs. . Public Attributes; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Inv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:1184,inherit,inherited,1184,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,1,['inherit'],['inherited']
Modifiability," Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglTexturePointer Class Reference . #include <OglTexturePointer.h>; Defines an uniform sampler (texture) for a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglTexturePointer:. [legend]; Detailed Description; Defines an uniform sampler (texture) for a OglShader. ; This is an abstract class which passes a texture id to an uniform sampler variable defined into the shader and load the image into OpenGL. At the moment, only texture2D is supported. . Protected Attributes; LinkTexture l_oglTexture;  ; Data< unsigned short > textureUnit;  Set the texture unit. More...;  ; Data< bool > enabled;  enabled ? More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  . Public Member Functions;  SOFA_CLASS2 (OglTexturePointer, core::visual::VisualModel, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, durin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:984,inherit,inherited,984,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,2,['inherit'],['inherited']
Modifiability," Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< float > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:2903,variab,variable,2903,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,1,['variab'],['variable']
Modifiability," IDs where to read the free velocity vector. More...;  ; ConstraintParams & setV (ConstMultiVecDerivId v);  ; template<class StateSet > ; ConstraintParams & setV (const StateSet &g, ConstVecDerivId v);  ; ConstraintParams & setJ (MatrixDerivId j);  Set the IDs where to read the constraint jacobian matrix. More...;  ; ConstraintParams & setJ (MultiMatrixDerivId j);  ; template<class StateSet > ; ConstraintParams & setJ (const StateSet &g, MatrixDerivId j);  ; ConstraintParams & setDx (VecDerivId dx);  Set the IDs where to write corrective displacement vector. More...;  ; ConstraintParams & setDx (MultiVecDerivId dx);  ; template<class StateSet > ; ConstraintParams & setDx (const StateSet &g, MultiVecDerivId dx);  ; ConstraintParams & setLambda (VecDerivId lambda);  Set the IDs where to write the constraint force vector. More...;  ; ConstraintParams & setLambda (MultiVecDerivId lambda);  ; template<class StateSet > ; ConstraintParams & setLambda (const StateSet &g, MultiVecDerivId lambda);  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const ConstraintParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html:5364,inherit,inherited,5364,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,1,['inherit'],['inherited']
Modifiability," Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::ofstream file;  ; sofa::type::vector< Real > relMomentToApply;  ; sofa::type::vector< bool > pointActive;  ; sofa::type::vector< Coord > vecFromCenter;  ; sofa::type::vector< Real > distFromCenter;  ; sofa::type::vector< Coord > momentDir;  ; sofa::type::vector< Coord > origVecFromCenter;  ; sofa::type::vector< Coord > origCenter;  ; SReal rotationAngle;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(OscillatingTorsionPressureForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html:4344,inherit,inherited,4344,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,3,['inherit'],['inherited']
Modifiability," Line getLine (LineID i);  ; bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  ; virtual void addEdge (Index a, Index b);  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addQuad (Index a, Index b, Index c, Index d);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ; virtual void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h);  ; virtual bool checkConnexity ();  ; virtual Size getNumberOfConnectedComponent ();  Returns the number of connected component. More...;  ; virtual const sofa::type::vector< Index > getConnectedElement (Index elem);  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  PointSetTopologyContainer (Size nPoints=0);  ;  ~PointSetTopologyContainer () override=default;  ; void setPointTopologyToDirty ();  ; void cleanPointTopologyFromDirty ();  ; const bool & isPointTopologyDirty () const;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyContainer;  TopologyContainer ();  Constructor. More...;  ;  ~TopologyContainer () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:24834,inherit,inherited,24834,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::component::playback::ReadTopology; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  CompareTopology ();  ;  Protected Member Functions inherited from sofa::component::playback::ReadTopology;  ReadTopology ();  ;  ~ReadTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:11244,inherit,inherited,11244,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,2,['inherit'],['inherited']
Modifiability," LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:5910,variab,variables,5910,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['variab'],['variables']
Modifiability," LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (OglShaderDefineMacro, OglShaderMacro);  ;  OglShaderDefineMacro ();  ;  ~OglShaderDefineMacro () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderMacro;  SOFA_CLASS (OglShaderMacro, OglShaderElement);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html:1954,inherit,inherited,1954,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,2,"['inherit', 'variab']","['inherited', 'variable']"
Modifiability," LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MouseInteractor, DataTypes), BaseMouseInteractor);  ;  MouseInteractor ();  ;  ~MouseInteractor () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; core::behavior::BaseMechanicalState * getMouseContainer () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::BaseMouseInteractor;  SOFA_ABSTRACT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:2046,inherit,inherited,2046,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,1,['inherit'],['inherited']
Modifiability," List of all members . sofa::helper::Utils Class Reference . #include <Utils.h>; Contains possibly useful functions, that don't fit anywhere else. ; More...; Detailed Description; Contains possibly useful functions, that don't fit anywhere else. . Static Public Member Functions; static std::wstring widenString (const std::string &s);  Convert a string to a wstring. More...;  ; static std::string narrowString (const std::wstring &ws);  Convert a wstring to a string. More...;  ; static std::string downcaseString (const std::string &s);  Convert a string to lower case. More...;  ; static std::string upcaseString (const std::string &s);  Convert a string to upper case. More...;  ; static const std::string & getExecutablePath ();  Get the path of the executable that is currently running. More...;  ; static const std::string & getExecutableDirectory ();  Get the path to the directory of the executable that is currently running. More...;  ; static const std::string & getUserLocalDirectory ();  Get the path to the current user local config directory. More...;  ; static const std::string & getSofaUserLocalDirectory ();  Get the path to the SOFA directory into the current user local config directory. More...;  ; static const std::string & getSofaPathPrefix ();  Get the path to the ""root"" path of Sofa (i.e. the build directory or the installation prefix). More...;  ; static const std::string getSofaPathTo (const std::string &pathFromBuildDir);  Construct a path based on the build dir path of Sofa. More...;  ; static std::map< std::string, std::string > readBasicIniFile (const std::string &path);  Read a file written in a very basic ini-like format. More...;  . Function details. ◆ downcaseString(). std::string sofa::helper::Utils::downcaseString ; (; const std::string & ; s). static . Convert a string to lower case. . ◆ getExecutableDirectory(). const std::string & sofa::helper::Utils::getExecutableDirectory ; (; ). static . Get the path to the directory of the executable that i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html:1198,config,config,1198,api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_utils.html,1,['config'],['config']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PipelineImpl ();  ;  ~PipelineImpl () override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ; virtual void doCollisionReset ()=0;  Remove collision response from last step. More...;  ; virtual void doCollisionDetection (const sofa::type::vector< core::CollisionModel * > &collisionModels)=0;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; virtual void doCollisionResponse ()=0;  Add collision response in the simulation graph. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:10382,inherit,inherited,10382,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html:12517,inherit,inherited,12517,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12487,inherit,inherited,12487,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html:12574,inherit,inherited,12574,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html:12629,inherit,inherited,12629,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 2, GL_INT, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html:12601,inherit,inherited,12601,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html:12679,inherit,inherited,12679,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html:12629,inherit,inherited,12629,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 3, GL_INT, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html:12601,inherit,inherited,12601,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html:12679,inherit,inherited,12679,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html:12629,inherit,inherited,12629,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 4, GL_INT, s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html:12601,inherit,inherited,12601,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,1,['inherit'],['inherited']
Modifiability," MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html:12679,inherit,inherited,12679,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,1,['inherit'],['inherited']
Modifiability," MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::Name = ""NeoHookean"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . MatrixSym & ; SPKTensorGeneral . ). inlineoverridevirtual . Compute the second Piola-Kirchhoff stress tensor in terms of the right Cauchy-Green deformation tensor ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::NeoHookean< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html:2192,config,configuration,2192,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_neo_hookean.html,1,['config'],['configuration']
Modifiability," Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PrecomputedConstraintCorrection (sofa::core::behavior::MechanicalState< DataTypes > *mm=nullptr);  ; virtual ~PrecomputedConstraintCorrection ();  ; bool loadCompliance (std::string fileName);  Load compliance matrix from memory or external file according to fileName. More...;  ; void saveCompliance (const std::string &fileName);  Save compliance matrix into a file. More...;  ; std::string buildFileName ();  Builds the compliance file name using the SOFA component internal data. More...;  ; void computeDx (Data< VecDeriv > &dx, const Data< VecDeriv > &f, const std::list< int > &activeDofs);  Compute dx correction from motion space force vector. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  ConstraintCorrection (MechanicalState< DataTypes > *ms=nullptr);  Default Constructor. More...;  ;  ~ConstraintCorrection () override=default;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:19534,inherit,inherited,19534,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['inherit'],['inherited']
Modifiability," Member Functions |; List of all members . sofa::component::engine::transform::MapIndices< T > Class Template Reference . #include <MapIndices.h>. Inheritance diagram for sofa::component::engine::transform::MapIndices< T >:. [legend]; Detailed Description; template<class T>; class sofa::component::engine::transform::MapIndices< T >; This class apply a permutation to a set of indices . Public Attributes; core::objectmodel::Data< VecValue > f_in;  input indices More...;  ; core::objectmodel::Data< VecIndex > f_indices;  array containing in ith cell the input index corresponding to the output index i (or reversively if transpose=true) More...;  ; core::objectmodel::Data< VecValue > f_out;  Output indices. More...;  ; core::objectmodel::Data< std::string > f_outStr;  Output indices, converted as a string. More...;  ; core::objectmodel::Data< bool > f_transpose;  Should the transposed mapping be used ? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MapIndices, T), core::DataEngine);  ;  S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:1164,inherit,inherited,1164,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['inherit'],['inherited']
Modifiability," Member Functions |; List of all members . sofa::component::setting::BackgroundSetting Class Reference . #include <BackgroundSetting.h>; Class for the configuration of background settings. ; More... Inheritance diagram for sofa::component::setting::BackgroundSetting:. [legend]; Detailed Description; Class for the configuration of background settings. . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > color;  ; sofa::core::objectmodel::DataFileName image;  Image to be used as background of the viewer. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the background. More...;  ; sofa::core::objectmodel::DataFileName d_image;  Image to be used as background of the viewer. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html:1123,inherit,inherited,1123,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,1,['inherit'],['inherited']
Modifiability," Member Functions;  ConstraintSolverImpl ();  ;  ~ConstraintSolverImpl () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; virtual ConstraintProblem * getConstraintProblem ()=0;  ; virtual void lockConstraintProblem (sofa::core::objectmodel::BaseObject *from, ConstraintProblem *p1, ConstraintProblem *p2=nullptr)=0;  ; void removeConstraintCorrection (core::behavior::BaseConstraintCorrection *s) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintSolver;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; virtual bool prepareStates (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual bool buildSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool solveSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual bool applyCorrection (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void computeResidual (const core::ExecParams *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual MultiVecDerivId getLambda () const;  ; virtual MultiVecDerivId getDx () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to col",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:1912,inherit,inherited,1912,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,2,['inherit'],['inherited']
Modifiability," More...;  ; Data< Real > d_positionFactor;  IN: Factor applied to projection of position. More...;  ; Data< Real > d_velocityFactor;  IN: Factor applied to projection of velocity. More...;  ; Data< Real > d_responseFactor;  IN: Factor applied to projection of force/acceleration. More...;  ; Data< type::vector< Real > > d_constraintFactor;  Vector of factors adapting the application of the constraint per pair of points (0 -> the constraint is released. 1 -> the constraint is fully constrained) More...;  ; type::vector< bool > activeFlags;  ; type::vector< bool > constraintReleased;  ; type::vector< Real > lastDist;  ; type::vector< type::Quat< SReal > > restRotations;  ;  Public Attributes inherited from sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(AttachProjectiveConstraint, DataTypes), ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:3099,inherit,inherited,3099,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Data< SetIndex > d_edgeD2S;  Internal destination -> source topology edges map. More...;  ; Data< SetIndex > d_triangleS2D;  Internal source -> destination topology triangles map. More...;  ; Data< SetIndex > d_triangleD2S;  Internal destination -> source topology triangles map. More...;  ; Data< SetIndex > d_quadS2D;  Internal source -> destination topology quads map. More...;  ; Data< SetIndex > d_quadD2S;  Internal destination -> source topology quads map. More...;  ; Data< SetIndex > d_tetrahedronS2D;  Internal source -> destination topology tetrahedra map. More...;  ; Data< SetIndex > d_tetrahedronD2S;  Internal destination -> source topology tetrahedra map. More...;  ; Data< SetIndex > d_hexahedronS2D;  Internal source -> destination topology hexahedra map. More...;  ; Data< SetIndex > d_hexahedronD2S;  Internal destination -> source topology hexahedra map. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::Componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html:3756,inherit,inherited,3756,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Data< SetIndex > d_tetrahedronD2S;  Internal destination -> source topology tetrahedra map. More...;  ; Data< SetIndex > d_hexahedronS2D;  Internal source -> destination topology hexahedra map. More...;  ; Data< SetIndex > d_hexahedronD2S;  Internal destination -> source topology hexahedra map. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SubsetTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateTopologicalMappingTopDown () overr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html:4334,inherit,inherited,4334,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Context, BaseContext);  ; void copyContext (const Context &c);  Copy the context variables from the given instance. More...;  ; void copySimulationContext (const Context &c);  Copy the context variables of visualization from the given instance. More...;  ; Parameters; bool isActive () const override;  The Context is active. More...;  ; void setActive (bool val) override;  State of the context. More...;  ; bool isSleeping () const override;  The Context is sleeping. More...;  ; bool canChangeSleepingState () const override;  The Context can change its sleeping state. More...;  ; const Vec3 & getGravity () const override;  Gravity in local coordinates. More...;  ; void setGravity (const Vec3 &) override;  Gravity in local coordinates. More...;  ; SReal getDt () const override;  Simulation timestep. More...;  ; SReal getTime () const override;  Simulation time. More...;  ; bool getAnimate () const override;  Animation flag. More...;  ; Parameters Setters; void setDt (SReal dt) override;  Simulation timestep. More...;  ; virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:2019,variab,variables,2019,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,1,['variab'],['variables']
Modifiability," More...;  ; Data< double > d_fieldOfView;  Camera's FOV. More...;  ; Data< double > d_zNear;  Camera's zNear. More...;  ; Data< double > d_zFar;  Camera's zFar. More...;  ; Data< bool > d_computeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; double m_nextStep;  ; double m_angleStep;  ; bool firstIterationforRot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:5534,inherit,inherited,5534,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Data< double > d_fieldOfView;  Camera's FOV. More...;  ; Data< double > d_zNear;  Camera's zNear. More...;  ; Data< double > d_zFar;  Camera's zFar. More...;  ; Data< bool > d_computeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Vec3 sceneCenter;  ; SReal sceneRadius;  ; bool b_setDefaultPara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:2788,inherit,inherited,2788,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Data< double > d_fieldOfView;  Camera's FOV. More...;  ; Data< double > d_zNear;  Camera's zNear. More...;  ; Data< double > d_zFar;  Camera's zFar. More...;  ; Data< bool > d_computeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (InteractiveCamera, BaseCamera);  ;  Public Member Func",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html:3261,inherit,inherited,3261,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Data< double > d_fieldOfView;  Camera's FOV. More...;  ; Data< double > d_zNear;  Camera's zNear. More...;  ; Data< double > d_zFar;  Camera's zFar. More...;  ; Data< bool > d_computeZClip;  Compute Z clip planes (Near and Far) according to the bounding box. More...;  ; Data< type::Vec3 > d_minBBox;  minBBox More...;  ; Data< type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::visual::BaseCamera; type::Vec3 sceneCe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html:16762,inherit,inherited,16762,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< sofa::type::vector< EdgeInformation > > edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ; bool updateMatrix;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  QuadularBendingSprings ();  ;  ~QuadularBendingSprings ();  ; void init () ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html:2961,inherit,inherited,2961,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,3,['inherit'],['inherited']
Modifiability," More...;  ; Data< sofa::type::vector< Spring > > d_springs;  pairs of indices, stiffness, damping, rest length More...;  ; Data< bool > d_showLawfulTorsion;  bool to allow the display of the 2 parts of springs torsions More...;  ; Data< bool > d_showExtraTorsion;  display the illicit part of the joint rotation More...;  ; Data< Real > d_showFactorSize;  modify the size of the debug information of a given factor More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; Real m_lastTime;  ; std::ifstream * m_infile;  ; std::ofstream * m_outfile;  ; JointSpringForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:2423,inherit,inherited,2423,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Index cube (int x, int y, int z) const;  Get Cube index, similar to. More...;  ; Grid_dimension getDimensions () const;  Get the actual dimension of this grid using Enum. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::constant::MeshTopology;  SOFA_CLASS (MeshTopology, core::topology::BaseMeshTopology);  ; Size getNbPoints () const override;  ; void setNbPoints (Size n) override;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; Size getNbEdges () override;  ; Size getNbTriangles () override;  ; Size getNbQuads () override;  ; Size getNbTetrahedra () override;  ; const Edge getEdge (EdgeID i) override;  ; const Triangle getTriangle (TriangleID i) override;  ; const Quad getQuad (QuadID i) override;  ; const Tetra getTetrahedron (TetraID i) override;  ; const Hexa getHexahedron (HexaID i) override;  ; virtual const SeqUV & getUVs ();  ; virtual Size getNbUVs ();  ; virtual const UV getUV (UVID i);  ; void addUV (SReal u, SReal v);  ; SReal getPosX (Index i) const;  ; SReal getPosY (Index i) const;  ; SReal getPosZ (Index i) const;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; void addEdge (Index a, Index b) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; void addQuad (Index a, Index b, Index c, Index d) override;  ; void addTetra (Index a, Index b, Index c, Index d) override;  ; void addHexa (Index a, Index b, Index c, Index d, Index e, Index f, Index g, Index h) override;  ; int getRevision () const override;  get the current revision of this mesh (use to detect changes) More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual bool hasVolume ();  ; virtual bool has",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html:7365,inherit,inherited,7365,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,4,['inherit'],['inherited']
Modifiability," More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionGroupManager, CollisionAlgorithm);  ; virtual void createGroups (objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0;  Create the integration groups. More...;  ; virtual void clearGroups (objectmodel::BaseContext *scene)=0;  Clear the integration groups. More...;  ; virtual const sofa::type::vector< objectmodel::BaseContext::SPtr > & getGroups ();  Get the integration groups. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:2793,inherit,inherited,2793,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['inherit'],['inherited']
Modifiability," More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ SceneLoader(). sofa::core::loader::SceneLoader::SceneLoader ; (; ). protected . Constructor. . ◆ ~SceneLoader(). sofa::core::loader::SceneLoader::~SceneLoader ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ canLoad(). bool sofa::core::loader::SceneLoader::canLoad ; (; ). overridevirtual . Reimplemented from sofa::core::loader::BaseLoader. ◆ parse(). void sofa::core::loader::SceneLoader::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::loader::BaseLoader. ◆ reinit(). void sofa::core::loader::SceneLoader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::loader::SceneLoader::SOFA_ABSTRACT_CLASS ; (; SceneLoader ; , . BaseLoader ;  . ). sofacoreloaderSceneLoader; Generated on Mon Nov 11 2024 03:15:48 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:14401,variab,variables,14401,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,1,['variab'],['variables']
Modifiability," More...;  ; Real m_volScale {};  current tetrahedron volume More...;  ; Real m_volume {};  ; MatrixSym m_SPKTensorGeneral;  volume/ restVolume More...;  ; Matrix3 m_deformationGradient;  deformation gradient = gradPhi More...;  ; Real m_strainEnergy {};  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ()=default;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ m_deformationGradient. template<class DataTypes > . Matrix3 sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation::m_deformationGradient. deformation gradient = gradPhi . ◆ m_fiberDirection. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation::m_fiberDirection. fiber direction in rest configuration . ◆ m_restVolume. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticity",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html:2147,inherit,inherited,2147,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Size getNumberOfConnectedComponent () override;  Returns the number of connected component. More...;  ; const VecTetraID getConnectedElement (TetraID elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; const VecTetraID getElementAroundElement (TetraID elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; const VecTetraID getElementAroundElements (VecTetraID elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; const VecTetraID getOppositeElement (TetraID elemID);  Returns the set of element indices adjacent to a given element with direct link from n-1 order element type (i.e triangle for tetrahedron) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer;  SOFA_CLASS (TriangleSetTopologyContainer, EdgeSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool hasTriangles () const;  ; bool hasEdgesInTriangle () const;  ; bool hasTrianglesAroundVertex () const;  ; bool hasTrianglesAroundEdge () const;  ; bool hasBorderElementLists () const;  ; void createElementsOnBorder ();  : Create element lists which are on topology border: More...;  ; void reOrientateTriangle (TriangleID id) override;  Will change order of vertices in triangle: t[1] <=> t[2]. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:12607,inherit,inherited,12607,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," More...;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Visitor; TagSet subsetsToManage;  list of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  ;  Protected Attributes inherited from sofa::simulation::MechanicalVisitor; const sofa::core::MechanicalParams * mparams;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::BaseMechanicalVisitor; virtual Result processNodeTopDown (simulation::Node *node, VisitorContext *ctx);  ; virtual void processNodeBottomUp (simulation::Node *node, VisitorContext *ctx);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html:10165,inherit,inherited,10165,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_energy_visitor.html,4,['inherit'],['inherited']
Modifiability," More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::haptics::ForceFeedback; Data< bool > d_activate;  boolean to activate or deactivate the forcefeedback More...;  ; Data< int > d_indice;  Tool indice in the OmniDriver. More...;  ; simulation::Node * context;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:10393,inherit,inherited,10393,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,2,['inherit'],['inherited']
Modifiability," More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:37081,inherit,inherited,37081,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,6,['inherit'],['inherited']
Modifiability," More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMass;  BaseMass ();  ;  ~BaseMass () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:19284,inherit,inherited,19284,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['inherit'],['inherited']
Modifiability," More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyMoveSlave (core::objectmodel::BaseObject *previousMaster, core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  . Static Public Member Functions; template<class RealObject > ; static Node::SPtr create (RealObject *, sofa::core::objectmodel::BaseObjectDescription *arg);  ; static Node::SPtr create (const std::string &name);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseContext; static BaseContext * getDefault ();  . Protected Member Functions;  Node (const std::string &name="""");  ; virtual ~Node () override;  ; virtual bool doAddObject (sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd);  Add an object. Detect the implemented interfaces and add the object to the corresponding lists. More...;  ; virtual bool doRemoveObject (sofa::core::objectmodel::BaseObject::SPtr obj);  Remove an object. More...;  ; virtual void doMoveObject (sofa::core::objectmodel::BaseObject::SPtr sobj, Node *prev_parent);  Remove an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseNode;  BaseNode ();  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:27474,inherit,inherited,27474,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,2,['inherit'],['inherited']
Modifiability," More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::linearsystem::TypedMatrix",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:11243,inherit,inherited,11243,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,3,['inherit'],['inherited']
Modifiability," More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html:11387,inherit,inherited,11387,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability," More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolver; bool f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html:12607,inherit,inherited,12607,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,1,['inherit'],['inherited']
Modifiability," More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Singl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html:9517,inherit,inherited,9517,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,12,['inherit'],['inherited']
Modifiability," More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html:11074,inherit,inherited,11074,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,1,['inherit'],['inherited']
Modifiability," More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:12189,inherit,inherited,12189,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,9,['inherit'],['inherited']
Modifiability," More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseMouseInteractor ();  ;  Protected Member Functions inherited from sofa::core::BehaviorModel;  BehaviorModel ();  ;  ~BehaviorModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:10779,inherit,inherited,10779,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,1,['inherit'],['inherited']
Modifiability," More...;  ; void findPairsVolume (collision::geometry::CubeCollisionModel *cm1, collision::geometry::CubeCollisionModel *cm2);  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html:2202,inherit,inherited,2202,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,1,['inherit'],['inherited']
Modifiability," More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Contact > contacts;  ; Real epsilon;  ; bool yetIntegrated;  ; SReal customTolerance;  ; PreviousForcesContainer prevForces;  ; bool * contactsStatus;  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:2451,inherit,inherited,2451,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability," More...;  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const MechanicalParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Setup methods; Called by the OdeSolver from which the mechanical computations originate. They all return a reference to this MechanicalParam instance, to ease chaining multiple setup calls. . bool m_kFactorUsed;  Checks if the stiffness matrix contributions factor has been accessed. More...;  ; MechanicalParams & setDt (SReal v);  Set time step. More...;  ; MechanicalParams & setImplicit (bool v);  Specify if the time integration scheme is implicit. More...;  ; MechanicalParams & setMFactor (SReal v);  Set Mass matrix contributions factor (for implicit schemes) More...;  ; MechanicalParams & setBFactor (SReal v);  Set Damping matrix contributions factor (for implicit schemes) More...;  ; MechanicalParams & setKFactor (SReal v);  Set Stiffness matrix contributions factor (for implicit schemes) More...;  ; MechanicalParams & setSymmetricMatrix (bool b)=delete;  ; Mechanical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:4704,inherit,inherited,4704,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['inherit'],['inherited']
Modifiability," MultiVecDerivId dxId) override;  ; void projectJacobianMatrix (const MechanicalParams *mparams, MultiMatrixDerivId cId) override;  ; void projectVelocity (const MechanicalParams *mparams, MultiVecDerivId vId) override;  ; void projectPosition (const MechanicalParams *mparams, MultiVecCoordId xId) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:10843,inherit,inherited,10843,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," N > &a);  ; Monomial_LD< Real, N > operator- (const Monomial_LD< Real, N > &a);  ; Monomial_LD< Real, N > operator* (const Monomial_LD< Real, N > &a);  ; Real operator() (const RNpoint &x) const;  Evaluating value. More...;  ; Real operator() (const RNpoint &x, unsigned int idvar) const;  Evaluating first partial derivative by idvar-th variable. More...;  ; Monomial_LD< Real, N > d (const unsigned int &ideriv) const;  Evaluating partial derivative hight order by idvar-th variable in ideriv-th order. More...;  ; void writeToStream (std::ostream &ff) const;  ; void readFromStream (std::istream &ff);  . Friends; template<typename FReal , unsigned int FN> ; Monomial_LD< FReal, FN > & operator* (const FReal &alpha, Monomial_LD< FReal, FN > &r);  . Attribute details. ◆ coef. template<typename Real , unsigned int N> . Real sofa::helper::Monomial_LD< Real, N >::coef. ◆ powers. template<typename Real , unsigned int N> . sofa::type::Vec<N,int> sofa::helper::Monomial_LD< Real, N >::powers. ◆ variables. template<typename Real , unsigned int N> . sofa::type::Vec<N,std::string> sofa::helper::Monomial_LD< Real, N >::variables. protected . Constructor details. ◆ Monomial_LD() [1/3]. template<typename Real , unsigned int N> . sofa::helper::Monomial_LD< Real, N >::Monomial_LD. Tools used in FEM computing . ◆ Monomial_LD() [2/3]. template<typename Real , unsigned int N> . sofa::helper::Monomial_LD< Real, N >::Monomial_LD ; (; Real ; m_coef, .  ; ... . ). ◆ Monomial_LD() [3/3]. template<typename Real , unsigned int N> . sofa::helper::Monomial_LD< Real, N >::Monomial_LD ; (; const Monomial_LD< Real, N > & ; a). Function details. ◆ d(). template<typename Real , unsigned int N> . Monomial_LD< Real, N > sofa::helper::Monomial_LD< Real, N >::d ; (; const unsigned int & ; ideriv); const. Evaluating partial derivative hight order by idvar-th variable in ideriv-th order. ; Derivative operator allowing to write p1=p2.d(x); . ◆ degree(). template<typename Real , unsigned int N> . int sofa::helpe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html:3280,variab,variables,3280,api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,1,['variab'],['variables']
Modifiability," Protected Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::QuadSetTopologyContainer Class Reference . #include <QuadSetTopologyContainer.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetTopologyContainer:. [legend]; Detailed Description; Object that stores a set of quads and provides access to each quad and its edges and vertices . Public Attributes; Data< sofa::type::vector< Quad > > d_quad;  provides the set of quads. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::core::objectmodel::RenamedData< bool > m_checkConnexity;  ; Data< sofa::type::vector< Edge > > d_edge;  List of edge indices. More...;  ; Data< bool > d_checkConnexity;  It true, will check the connexity of the mesh. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; Data< InitTypes::VecCoord > d_initPoints;  Initial position of points. More...;  ; Data< bool > d_checkTopology;  Parameter to activate internal topology checks (might slow down the simulation) More...;  ;  Public Attributes inherited from sofa::core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the event",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:1129,inherit,inherited,1129,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," Protected Attributes; InternalData data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularFEMForceFieldOptim, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:4944,inherit,inherited,4944,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['inherit'],['inherited']
Modifiability," Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes > Class Template Reference . #include <UniformLagrangianConstraint.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::UniformLagrangianConstraint< DataTypes >:. [legend]. Public Attributes; sofa::Data< bool > d_iterative;  Iterate over the bilateral constraints, otherwise a block factorisation is computed. More...;  ; sofa::Data< bool > d_constraintRestPos;  if false, constrains the pos to be zero / if true constraint the current position to stay at rest position More...;  ;  Public Attributes inherited from sofa::core::behavior::Constraint< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Inv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html:1127,inherit,inherited,1127,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability," Public Attributes; NodeSequence< Node, true > child;  ; NodeSequence< sofa::core::objectmodel::BaseObject, true > object;  ; NodeSequence< sofa::core::BehaviorModel > behaviorModel;  ; NodeSequence< sofa::core::BaseMapping > mapping;  ; NodeSequence< sofa::core::behavior::OdeSolver > solver;  ; NodeSequence< sofa::core::behavior::ConstraintSolver > constraintSolver;  ; NodeSequence< sofa::core::behavior::BaseLinearSolver > linearSolver;  ; NodeSequence< sofa::core::topology::BaseTopologyObject > topologyObject;  ; NodeSequence< sofa::core::behavior::BaseForceField > forceField;  ; NodeSequence< sofa::core::behavior::BaseInteractionForceField > interactionForceField;  ; NodeSequence< sofa::core::behavior::BaseProjectiveConstraintSet > projectiveConstraintSet;  ; NodeSequence< sofa::core::behavior::BaseConstraintSet > constraintSet;  ; NodeSequence< sofa::core::objectmodel::ContextObject > contextObject;  ; NodeSequence< sofa::core::objectmodel::ConfigurationSetting > configurationSetting;  ; NodeSequence< sofa::core::visual::Shader > shaders;  ; NodeSequence< sofa::core::visual::VisualModel > visualModel;  ; NodeSequence< sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:1647,config,configurationSetting,1647,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['config'],['configurationSetting']
Modifiability," Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::OffSequenceLoader Class Reference . #include <OffSequenceLoader.h>. Inheritance diagram for sofa::component::io::mesh::OffSequenceLoader:. [legend]; Detailed Description; This class load a sequence of .off mesh files, ordered by index in their name . Public Member Functions;  SOFA_CLASS (OffSequenceLoader, MeshOffLoader);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; virtual bool load (const char *filename);  ; void clear ();  ;  Public Member Functions inherited from sofa::component::io::mesh::MeshOffLoader;  SOFA_CLASS (MeshOffLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool load () final;  ; virtual void applyTransformation (sofa::type::Matrix4 const &T);  Apply Homogeneous transformation to the positions. More...;  ; virtual void updateMesh ();  ; virtual void updateElements ();  ; virtual void updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransf",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:956,inherit,inherited,956,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,2,['inherit'],['inherited']
Modifiability," Public Member Functions;  MechanicalIntegrateConstraintsVisitor (const core::ConstraintParams *cparams, double pf, double vf, sofa::core::ConstMultiVecDerivId correction, sofa::core::MultiVecDerivId dx=sofa::core::MultiVecDerivId(sofa::core::VecDerivId::dx()), sofa::core::MultiVecCoordId x=sofa::core::MultiVecCoordId(sofa::core::VecCoordId::position()), sofa::core::MultiVecDerivId v=sofa::core::MultiVecDerivId(sofa::core::VecDerivId::velocity()));  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *ms) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html:1949,inherit,inherited,1949,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  MeshGmsh (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html:472,inherit,inherited,472,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_gmsh.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  MeshOBJ (const std::string &filename);  ; void init (std::string filename);  ;  Public Member Functions inherited from sofa::helper::io::Mesh;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; sofa::type::vector< type::Vec3 > & getVertices ();  ; const sofa::type::vector< type::Vec3 > & getVertices () const;  ; sofa::type::vector< Edge > & getEdges ();  ; const sofa::type::vector< Edge > & getEdges () const;  ; sofa::type::vector< Triangle > & getTriangles ();  ; const sofa::type::vector< Triangle > & getTriangles () const;  ; sofa::type::vector< Quad > & getQuads ();  ; const sofa::type::vector< Quad > & getQuads () const;  ; sofa::type::vector< Tetrahedron > & getTetrahedra ();  ; const sofa::type::vector< Tetrahedron > & getTetrahedra () const;  ; sofa::type::vector< Hexahedron > & getHexahedra ();  ; const sofa::type::vector< Hexahedron > & getHexahedra () const;  ; sofa::type::vector< type::Vec3 > & getTexCoords ();  ; const sofa::type::vector< type::Vec3 > & getTexCoords () const;  ; sofa::type::vector< type::Vec3 > & getNormals ();  ; const sofa::type::vector< type::Vec3 > & getNormals () const;  ; sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets ();  ; const sofa::type::vector< type::vector< type::vector< PointID > > > & getFacets () const;  ; const sofa::type::vector< PrimitiveGroup > & getEdgesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getTrianglesGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getQuadsGroups () const;  ; const sofa::type::vector< PrimitiveGroup > & getPolygonsGroups () const;  ; const sofa::type::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html:467,inherit,inherited,467,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_mesh_o_b_j.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, EigenSolverFactory), SOFA_TEMPLATE(ordering::OrderingMethodAccessor, SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, Matrix, Vector)));  ;  ~EigenDirectSparseSolver () override=default;  ; void init () override;  ; void reinit () override;  ; void solve (Matrix &A, Vector &x, Vector &b) override;  ; void invert (Matrix &A) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_direct_sparse_solver.html:1904,inherit,inherited,1904,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_direct_sparse_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_direct_sparse_solver.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EigenSimplicialLDLT, TBlockType), SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, MainSimplicialLDLTFactory));  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLDLTFactory >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, EigenSolverFactory), SOFA_TEMPLATE(ordering::OrderingMethodAccessor, SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, Matrix, Vector)));  ;  ~EigenDirectSparseSolver () override=default;  ; void init () override;  ; void reinit () override;  ; void solve (Matrix &A, Vector &x, Vector &b) override;  ; void invert (Matrix &A) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >;  SOFA_CLASS (OrderingMethodAccessor, sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t.html:939,inherit,inherited,939,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_d_l_t.html,2,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EigenSimplicialLLT, TBlockType), SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, MainSimplicialLLTFactory));  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainSimplicialLLTFactory >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, EigenSolverFactory), SOFA_TEMPLATE(ordering::OrderingMethodAccessor, SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, Matrix, Vector)));  ;  ~EigenDirectSparseSolver () override=default;  ; void init () override;  ; void reinit () override;  ; void solve (Matrix &A, Vector &x, Vector &b) override;  ; void invert (Matrix &A) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >;  SOFA_CLASS (OrderingMethodAccessor, sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_l_t.html:911,inherit,inherited,911,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_l_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_simplicial_l_l_t.html,2,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EigenSparseLU, TBlockType), SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, MainLUFactory));  ; bool supportNonSymmetricSystem () const override;  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainLUFactory >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, EigenSolverFactory), SOFA_TEMPLATE(ordering::OrderingMethodAccessor, SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, Matrix, Vector)));  ;  ~EigenDirectSparseSolver () override=default;  ; void init () override;  ; void reinit () override;  ; void solve (Matrix &A, Vector &x, Vector &b) override;  ; void invert (Matrix &A) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >;  SOFA_CLASS (OrderingMethodAccessor, sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::Compressed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_sparse_l_u.html:924,inherit,inherited,924,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_sparse_l_u.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_sparse_l_u.html,2,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EigenSparseQR, TBlockType), SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, MainQRFactory));  ; bool supportNonSymmetricSystem () const override;  ;  Public Member Functions inherited from sofa::component::linearsolver::direct::EigenDirectSparseSolver< TBlockType, MainQRFactory >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(EigenDirectSparseSolver, TBlockType, EigenSolverFactory), SOFA_TEMPLATE(ordering::OrderingMethodAccessor, SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, Matrix, Vector)));  ;  ~EigenDirectSparseSolver () override=default;  ; void init () override;  ; void reinit () override;  ; void solve (Matrix &A, Vector &x, Vector &b) override;  ; void invert (Matrix &A) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >::Real > > >;  SOFA_CLASS (OrderingMethodAccessor, sofa::component::linearsolver::MatrixLinearSolver< sofa::linearalgebra::CompressedRowSparseMatrix< TBlockType >, sofa::linearalgebra::FullVector< sofa::linearalgebra::CompressedRowSparseMa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_sparse_q_r.html:913,inherit,inherited,913,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_sparse_q_r.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_eigen_sparse_q_r.html,2,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopology, In, Out), SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, In, Out));  ;  BarycentricMapperTetrahedronSetTopology (core::topology::BaseMeshTopology *fromTopology, core::topology::BaseMeshTopology *_toTopology);  ;  Public Member Functions inherited from sofa::component::mapping::linear::BarycentricMapperTetrahedronSetTopologyRigid< sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal > >;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapperTetrahedronSetTopologyRigid, sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal >), SOFA_TEMPLATE2(TopologyBarycentricMapper, sofa::defaulttype::StdVectorTypes< sofa::type::Vec< 3, TInReal >, sofa::type::Vec< 3, TInReal >, TInReal >, sofa::defaulttype::StdRigidTypes< 3, TOutReal >));  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html:1307,inherit,inherited,1307,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapper_tetrahedron_set_topology_3_018c5b54561c2b3a2f472d358a805328a1.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BlockJacobiPreconditioner, TMatrix, TVector), SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, TMatrix, TVector));  ; void solve (Matrix &M, Vector &x, Vector &b) override;  ; void invert (Matrix &M) override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ;  Public Member Functions inherited from sofa::component::linearsolver::MatrixLinearSolver< TMatrix, TVector >; void resetSystem ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resetSystem ();  ; void resizeSystem (Size n);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void resizeSystem (Size);  ; void setSystemMBKMatrix (const core::MechanicalParams *mparams);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setSystemMBK",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_block_jacobi_preconditioner.html:1596,inherit,inherited,1596,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_block_jacobi_preconditioner.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_block_jacobi_preconditioner.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(PrecomputedLinearSolver, TMatrix, TVector), SOFA_TEMPLATE2(sofa::component::linearsolver::MatrixLinearSolver, TMatrix, TVector));  ;  PrecomputedLinearSolver ();  ; void solve (TMatrix &M, TVector &x, TVector &b) override;  ; void invert (TMatrix &M) override;  ; void setSystemMBKMatrix (const core::MechanicalParams *mparams) override;  ; void loadMatrix (TMatrix &M);  ; void loadMatrixWithCholeskyDecomposition (TMatrix &M);  ; bool addJMInvJt (linearalgebra::BaseMatrix *result, lineara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_precomputed_linear_solver.html:2186,inherit,inherited,2186,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_precomputed_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_precomputed_linear_solver.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE3(SSORPreconditioner, TMatrix, TVector, TThreadManager), SOFA_TEMPLATE3(sofa::component::linearsolver::MatrixLinearSolver, TMatrix, TVector, TThreadManager));  ; void solve (Matrix &M, Vector &x, Vector &b) override;  ; void invert (Matrix &M) override;  ; MatrixInvertData * createInvertData () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; void solve (Matrix &M, Vector &z, Vector &r);  ; void solve (Matrix &M, Vector &z, Vector &r);  ;  Public Member Functions inherited from sofa::component::linearsolver::MatrixLinearSolver< TMatrix, TVector, NoThreadManager >; void resetSystem ();  ; SOFA_COMPONE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_s_s_o_r_preconditioner.html:1862,inherit,inherited,1862,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_s_s_o_r_preconditioner.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_s_s_o_r_preconditioner.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE3(SparseLDLSolverImpl, TMatrix, TVector, TThreadManager),);  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< sofa::component::linearsolver::MatrixLinearSolver< TMatrix, TVector, TThreadManager > >;  SOFA_CLASS (OrderingMethodAccessor, sofa::component::linearsolver::MatrixLinearSolver< TMatrix, TVector, TThreadManager >);  ;  OrderingMethodAccessor ();  ;  ~OrderingMethodAccessor () override=default;  ; void init () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  ;  Public Member Functions inherited from sofa::component::linearsolver:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_sparse_l_d_l_solver_impl.html:1450,inherit,inherited,1450,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_sparse_l_d_l_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_sparse_l_d_l_solver_impl.html,2,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS (SparsityPatternLocalMatrix, SOFA_TEMPLATE2(AssemblingMatrixAccumulator, c, TStrategy));  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, float value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, double value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override;  ; const sofa::type::vector< std::pair< Row, Col > > & getInsertionOrderList () const;  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_matrix.html:1774,inherit,inherited,1774,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_matrix.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS2 (ConstantLocalMappedMatrix, SOFA_TEMPLATE2(ConstantLocalMatrix, linearalgebra::CompressedRowSparseMatrix< TBlockType >, c), SOFA_TEMPLATE2(AssemblingMappedMatrixAccumulator, c, TBlockType));  ;  Public Member Functions inherited from sofa::component::linearsystem::ConstantLocalMatrix< linearalgebra::CompressedRowSparseMatrix< TBlockType >, c >;  SOFA_CLASS (ConstantLocalMatrix, SOFA_TEMPLATE2(AssemblingMatrixAccumulator, c, sofa::core::matrixaccumulator::NoIndexVerification));  ;  Public Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (AssemblingMatrixAccumulator, SOFA_TEMPLATE2(sofa::core::MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification));  ; void clear () override;  ;  Public Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >;  SOFA_CLASS (MatrixAccumulatorIndexChecker, BaseAssemblingMatrixAccumulator< c >);  ; void setIndexCheckerStrategy (std::shared_ptr< matrixaccumulator::IndexVerificationStrategy > strategy) override;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, const float value) override final;  ; void add (const sofa::SignedIndex row, const sofa::SignedIndex col, double value) override final; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html:774,inherit,inherited,774,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_local_mapped_matrix.html,3,['inherit'],['inherited']
Modifiability," Public Member Functions;  SOFA_CLASS2 (SparsityPatternLocalMappedMatrix, SparsityPatternLocalMatrix< c >, SOFA_TEMPLATE2(AssemblingMappedMatrixAccumulator, c, TBlockType));  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, float value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, double value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override;  ;  Public Member Functions inherited from sofa::component::linearsystem::SparsityPatternLocalMatrix< c, TStrategy >;  SOFA_CLASS (SparsityPatternLocalMatrix, SOFA_TEMPLATE2(AssemblingMatrixAccumulator, c, TStrategy));  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, float value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, double value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::Si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html:1310,inherit,inherited,1310,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html,1,['inherit'],['inherited']
Modifiability," Public Member Functions;  TrianglesRenumbering ();  ;  TrianglesRenumbering (const sofa::type::vector< Topology::TriangleID > &indices, const sofa::type::vector< Topology::TriangleID > &inv_indices);  ;  ~TrianglesRenumbering () override;  ; const sofa::type::vector< Topology::TriangleID > & getIndexArray () const;  ; const sofa::type::vector< Topology::TriangleID > & getinv_IndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ indexArray. sofa::type::vector<Topology::TriangleID> sofa::core::topology::TrianglesRenumbering::indexArray. ◆ inv_indexArray. sofa::type::vector<Topology::TriangleID> sofa::core::topology::TrianglesRenumbering::inv_indexArray. Constructor details. ◆ TrianglesRenumbering() [1/2]. sofa::core::topology::TrianglesRenumbering::TrianglesRenumbering ; (; ). inline . ◆ TrianglesRenumbering() [2/2]. sofa::core::topology::TrianglesRenumbering::TrianglesRenumbering ; (; const sofa::type::vector< Topology::TriangleID > & ; indices, . const sofa::type::vector< Topology::TriangleID > & ; inv_indices . ). inline . ◆ ~TrianglesRenumbering(). sofa::core::topology::TrianglesRenumbering::~TrianglesRenumbering ; (; ). override . Function details. ◆ getIndexArray(). const sofa::type::vector<Topology::TriangleID>& sofa::core::topology::TrianglesRenumbering::getIndexArray ; (; ); const. inline . ◆ getinv_IndexArray(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_renumbering.html:1572,inherit,inherited,1572,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_renumbering.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_triangles_renumbering.html,1,['inherit'],['inherited']
Modifiability," RHS of the linear system. More...;  ; virtual TVector * getSolutionVector () const;  Return the solution of the linear system. More...;  ; linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; virtual void resizeSystem (sofa::Size n);  Set the size of the matrix to n x n, and the size of RHS and solution to n. More...;  ; virtual void clearSystem ();  ; virtual void setRHS (core::MultiVecDerivId v);  ; virtual void setSystemSolution (core::MultiVecDerivId v);  ; virtual void dispatchSystemSolution (core::MultiVecDerivId v);  ; virtual void dispatchSystemRHS (core::MultiVecDerivId v);  ; core::objectmodel::BaseContext * getSolveContext ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setRHS (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemRHS (core::MultiVecDerivId v);  ; void setRHS (core::MultiVecDerivId v);  ; void setSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemRHS (core::MultiVecDerivId v);  ;  Public Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  SOFA_ABSTRACT_CLASS (BaseMatrixLinearSystem, core::objectmodel::BaseObject);  ; void buildSystemMatrix (const core::MechanicalParams *mparams);  Construct and assemble the linear system matrix. More...;  ; sofa::type::Vec2u getMatrixSize () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:2445,inherit,inherited,2445,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,5,['inherit'],['inherited']
Modifiability," Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFactory::registerScheduler(; DefaultTaskScheduler::name(),; &DefaultTaskScheduler::create). ◆ DefaultVisualManagerLoopClass. int sofa::simulation::DefaultVisualManagerLoopClass. Initial value:= core::RegisterObject(""The simplest Visual Loop Manager, created by default when user do not put on scene""); .add< DefaultVisualManagerLoop >(). ◆ loaderPHP. const SceneLoader* sofa::simulation::loaderPHP = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderPHP()). ◆ loaderXML. const SceneLoader* sofa::simulation::loaderXML = SceneLoaderFactory::getInstance()->addEntry(new SceneLoaderXML()). ◆ RequiredPluginClass. int sofa::simulation::RequiredPluginClass. Initial value:= core::RegisterObject(""Load the required plugins""); .add< RequiredPlugin >(). sofasimulation; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:11220,plugin,plugins,11220,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,1,['plugin'],['plugins']
Modifiability," Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DynamicSparseGridGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes));  ; int findNearestElementInRestPos (const Coord &pos, type::Vec3 &baryC, Real &distance) const override;  finds a hexahedron, in its rest position, which is nearest to a given point. Computes barycentric coordinates and a distance measure. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:3105,inherit,inherited,3105,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability," Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes));  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; Real computeEdgeLength (const EdgeID i) const;  computes the length of edge no i and returns it More...;  ; void computeEdgeLength (BasicArrayInterface< Real > &ai) const;  computes the edge length of all edges and stores it in the array interface More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html:1850,inherit,inherited,1850,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability," Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes));  ; void computeHexahedronAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; void computeHexahedronRestAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeHexahedronCenter (const HexaID h) const;  ; Coord computeHexahedronRestCenter (const HexaID h) const;  ; void getHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; void getRestHexahe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:2882,inherit,inherited,2882,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability," Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes));  ; void computeQuadAABB (const QuadID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeQuadCenter (const QuadID i) const;  ; void getQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; void getRestQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; Real computeQuadArea (const QuadID i) const;  Computes the area of quad no i and returns it. More...;  ; void computeQuadAre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html:2212,inherit,inherited,2212,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability," Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(TriangleSetGeometryAlgorithms, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeTetrahedronAABB (const TetraID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTetrahedronCent",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:3608,inherit,inherited,3608,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability," Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangleSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes));  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeTr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html:2707,inherit,inherited,2707,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability," Reference . #include <DataTrackerCallback.h>; A DDGNode with trackable input Data (containing a DataTracker) ; More... Inheritance diagram for sofa::core::DataTrackerDDGNode:. [legend]; Detailed Description; A DDGNode with trackable input Data (containing a DataTracker) . Protected Attributes; Tracking Data mechanism; each Data added to the DataTracker is tracked to be able to check if its value changed since their last clean, called by default in DataEngine::cleanDirty(). . DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; virtual void update ()=0;  Update this value. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html:1294,inherit,inherited,1294,api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_tracker_d_d_g_node.html,1,['inherit'],['inherited']
Modifiability," Reference . #include <IdentityContactMapper.h>; Specialization of IdentityContactMapper when mapping to the same DataTypes, as no mapping is required in this case. ; More... Inheritance diagram for sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >:. [legend]; Detailed Description; template<class TCollisionModel>; class sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, typename TCollisionModel::InDataTypes >; Specialization of IdentityContactMapper when mapping to the same DataTypes, as no mapping is required in this case. . Public Attributes; MCollisionModel * model;  . Public Member Functions;  IdentityContactMapper ();  ; void setCollisionModel (MCollisionModel *model);  ; void cleanup ();  ; MMechanicalState * createMapping (const char *=""contactPoints"");  ; void resize (Size);  ; Index addPoint (const Coord &, Index index, Real &);  ; void update ();  ; void updateXfree ();  ; void updateX0 ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >; virtual ~BaseContactMapper ();  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< TCollisionModel::InDataTypes >; static BaseContactMapper< DataTypes > * Create (core::CollisionModel *model, const std::string &name=std::string(""PenalityContactForceField""));  ; static ContactMapper< TCollisionModel, DataTypes > * create (ContactMapper< TCollisionModel, DataTypes > *, core::CollisionModel *arg);  . Attribute details. ◆ model. template<class TCollisionMod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html:1502,inherit,inherited,1502,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper_3_01_t_colda9c4d1594d94204756c696a622b90e7.html,1,['inherit'],['inherited']
Modifiability," Reference . #include <InteractionPerformer.h>. Inheritance diagram for sofa::gui::component::performer::TInteractionPerformer< DataTypes >:. [legend]. Public Member Functions;  TInteractionPerformer (BaseMouseInteractor *i);  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void start ()=0;  ; virtual void execute ()=0;  ; virtual void handleEvent (core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  ;  Static Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::component::performer::InteractionPerformer; BaseMouseInteractor * m_interactor;  ; bool m_freezePerformer;  . Constructor details. ◆ TInteractionPerformer(). template<class DataTypes > . sofa::gui::component::performer::TInteractionPerformer< DataTypes >::TInteractionPerformer ; (; BaseMouseInteractor * ; i). inline . Function details. ◆ create(). template<class DataTypes > . template<class RealObject > . static RealObject* sofa::gui::component::performer::TInteractionPerformer< DataTypes >::create ; (; RealObject * ; , . BaseMouseInteractor * ; interactor . ). inlinestatic . sofaguicomponentperformerTInteractionPerformer; Generated on Mon Nov 11 2024 03:20:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html:1399,inherit,inherited,1399,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_t_interaction_performer.html,2,['inherit'],['inherited']
Modifiability," Reference . #include <VisualVisitor.h>. Inheritance diagram for sofa::simulation::VisualUpdateVisitor:. [legend]. Protected Attributes; core::visual::VisualParams * m_vparams;  ;  Protected Attributes inherited from sofa::simulation::VisualVisitor; core::visual::VisualParams * vparams;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  VisualUpdateVisitor (core::visual::VisualParams *params);  ; virtual void processVisualModel (simulation::Node *, core::visual::VisualModel *vm) override;  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::VisualVisitor;  VisualVisitor (core::visual::VisualParams *params);  ; virtual void processObject (simulation::Node *, core::objectmodel::BaseObject *);  ; const char * getCategoryName () const override;  ; bool treeTraversal (TreeTraversalRepetition &repeat) override;  visual visitor must be executed as a tree, such as forward and backward orders are coherent More...;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html:1097,inherit,inherited,1097,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_update_visitor.html,1,['inherit'],['inherited']
Modifiability," Reference . #include <WriteAccessor.h>. Inheritance diagram for sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >:. [legend]. Public Member Functions;  WriteAccessor (container_type &c);  ;  Public Member Functions inherited from sofa::helper::WriteAccessorVector< VectorLikeType >;  WriteAccessorVector (container_type &container);  ; bool empty () const;  ; Size size () const;  ; void reserve (Size s);  ; reference operator[] (Size pos);  ; const_reference operator[] (Size pos) const;  ; reference front ();  ; const_reference front () const;  ; reference back ();  ; const_reference back () const;  ; const_iterator begin () const;  ; iterator begin ();  ; const_iterator end () const;  ; iterator end ();  ; void clear ();  ; void resize (Size s);  ; iterator insert (const_iterator pos, const VectorLikeType &value);  ; iterator erase (iterator pos);  ; iterator erase (const_iterator pos);  ; void push_back (const value_type &v);  ; reference emplace_back (Args &&... args);  ; void pop_back ();  ;  operator container_type ();  ; container_type * operator-> ();  ; const_container_type * operator-> () const;  ; container_type & operator* ();  ; const_container_type & operator* () const;  ; container_type & wref ();  ;  operator const_container_type () const;  ; const container_type & ref () const;  this one duplicate operator* More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::helper::WriteAccessorVector< VectorLikeType >; container_type * vref;  . Constructor details. ◆ WriteAccessor(). template<class VectorLikeType > . sofa::helper::WriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >::WriteAccessor ; (; container_type & ; c). inline . sofahelperWriteAccessor< VectorLikeType, std::enable_if_t< sofa::type::trait::is_vector< VectorLikeType >::value > >; Generated on Mon Nov 11 2024 03:27:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html:1897,inherit,inherited,1897,api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_write_accessor_3_01_vector_like_type_00_01std_1_1enable__if__t_3_01sofa_6c8aa194fa59fde725aeccee4070f722.html,1,['inherit'],['inherited']
Modifiability," Reimplemented from sofa::core::behavior::BaseForceField. ◆ draw(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getEdgeInfo(). template<class _DataTypes > . sofa::core::topology::EdgeData<type::vector<EdgeSpring> >& sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::getEdgeInfo ; (; ). inlineprotected . ◆ getPotentialEnergy(). template<class DataTypes > . SReal sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::getPotentialEnergy ; (; const core::MechanicalParams * ; mparams, . const DataVecCoord & ; d_x . ); const. overridevirtual . Implements sofa::core::behavior::ForceField< _DataTypes >. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::init ; (; void ; ). overridevirtual . Searches triangle topology and creates the bending springs. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FastTriangularBendingSprings< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class _DataTypes > . sofa::component::solidmechanics::spring::FastTriangularBendingSprings< _DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(FastTriangularBendingSprings< _DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(core::behavior::ForceField, DataTypes) ;  . ). Enum details. ◆ anonymous enum. template<class _DataTypes > . anonymous enum. EnumeratorN . sofacomponentsolidmechanicsspringFastTriangularBendingSprings; Generated on Mon Nov 11 2024 03:03:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html:29022,variab,variables,29022,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,1,['variab'],['variables']
Modifiability," ResultType > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType > Class Template Reference . #include <ParallelSparseMatrixProduct.h>. Inheritance diagram for sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >:. [legend]. Public Attributes; TaskScheduler * taskScheduler { nullptr };  ;  Public Attributes inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; const LhsCleaned * m_lhs { nullptr };  Left side of the product A*B. More...;  ; const RhsCleaned * m_rhs { nullptr };  Right side of the product A*B. More...;  . Public Member Functions; void computeProductFromIntersection () override;  ;  Public Member Functions inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; void computeProduct (bool forceComputeIntersection=false);  ; void computeRegularProduct ();  ; const ResultType & getProductResult () const;  ; void invalidateIntersection ();  ;  SparseMatrixProduct (Lhs *lhs, Rhs *rhs);  ;  SparseMatrixProduct ()=default;  ; virtual ~SparseMatrixProduct ()=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; ProductResult m_productResult;  ; bool m_hasComputedIntersection { false };  Result of LHS * RHS. More...;  ; Intersection m_intersectionAB;  ;  Protected Member Functions inherited from sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >; void computeIntersection ();  . Attribute details. ◆ taskScheduler. template<class Lhs , class Rhs , class ResultType > . TaskScheduler* sofa::simulation::ParallelSparseMatrixProduct< Lhs, Rhs, ResultType >::taskScheduler { nullptr }. Function details. ◆ computeProductFromIntersection(). template<class Lhs , class Rhs , class ResultType > . void sofa::simulation::Par",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html:928,inherit,inherited,928,api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_parallel_sparse_matrix_product.html,1,['inherit'],['inherited']
Modifiability, SOFA - Topic Tag: configurations. /connect; . /feed; ; connect – SOFA. SOFA - Topic Tag: connect. /connect-sofa; . /feed; ; Connect SOFA – SOFA. SOFA - Topic Tag: Connect SOFA. /constraint; . /feed; ; constraint – SOFA. SOFA - Topic Tag: constraint. /constraint-forces; . /feed; ; Constraint Forces – SOFA. SOFA - Topic Tag: Constraint Forces. /constraintresolution-h; . /feed; ; ConstraintResolution.h – SOFA. SOFA - Topic Tag: ConstraintResolution.h. /constraints; . /feed; ; constraints – SOFA. SOFA - Topic Tag: constraints. /constraint-solver; . /feed; ; Constraint Solver – SOFA. SOFA - Topic Tag: Constraint Solver. /contact; . /feed; ; contact – SOFA. SOFA - Topic Tag: contact. /contact-force; . /feed; ; contact force – SOFA. SOFA - Topic Tag: contact force. /contactlistener; . /feed; ; contactlistener – SOFA. SOFA - Topic Tag: contactlistener. /contain; . /feed; ; contain – SOFA. SOFA - Topic Tag: contain. /continuum-robots-beam-adaptater-constraints; . /feed; ; continuum robots; beam adaptater; constraints – SOFA. SOFA - Topic Tag: continuum robots; beam adaptater; constraints. /control; . /feed; ; control – SOFA. SOFA - Topic Tag: control. /controller; . /feed; ; Controller – SOFA. SOFA - Topic Tag: Controller. /control-xml-variables-in-c-or-python; . /feed; ; Control xml variables in C++ or Python. – SOFA. SOFA - Topic Tag: Control xml variables in C++ or Python. /coulomb; . /feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:437483,adapt,adaptater,437483,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['adapt'],['adaptater']
Modifiability," SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /building-sofa-problems; ; SOFA - Topic: [SOLVED] Building SOFA problems. /building-sofa-with-both-plugins-leapmotion-and-sensable-phantom-omni; ; SOFA - Topic: [SOLVED] Building SOFA with both plugins: LeapMotion and Sensable (Phantom Omni). /building-sofa-with-ninja; ; SOFA - Topic: [SOLVED] Building SOFA with ninja. /building-sofa-with-windows10-and-vs2015; . /feed; ; [SOLVED] Building SOFA with Windows10 and VS2015 – SOFA. SOFA - Topic: [SOLVED] Building SOFA with Windows10 and VS2015. /building-stlib-and-integration-with-sofa-in-windows-10; ; SOFA - Topic: Building Stlib and integration with sofa in windows 10. /building-the-tutorials; ; SOFA - Topic: [SOLVED] Building the tutorials. /building-v16-08-cmake-errors; . /feed; ; [SOLVED] Building v16.08, Cmake Errors – SOFA. SOFA - Topic: [SOLVED] Building v16.08, Cmake Errors. /building-v16-08-sofa-errors-in-sensable-plugin; . /feed; ; [SOLVED] Building v16.08 sofa, errors in sensable plugin. – SOFA. SOFA - Topic: [SOLVED] Building v16.08 sofa, errors in sensable plugin. /building-vrpn-plugin-on-linux; . /feed; ; [SOLVED] Building VRPN plugin on linux – SOFA. SOFA - Topic: [SOLVED] Building VRPN plugin on linux. /build-problem-for-advancedfem-plugin; ; SOFA - Topic: [SOLVED] Build problem for AdvancedFEM plugin. /build-problem-for-pardisio-solver-plugin; ; SOFA - Topic: [SOLVED] Build problem for Pardisio solver plugin. /build-sofa; . /page; . /11; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /12; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /3; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /build-with-qt-on-macos; . /page; . /2; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. /7; ; SOFA - Topic: [SOLVED] build with Qt on MacO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:266831,plugin,plugin,266831,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability, SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /depth-of-field; ; SOFA - Topic: Depth Of Field. /detailed-document; ; SOFA - Topic: detailed document. /determine-visibility-of-objects-in-the-scene; ; SOFA - Topic: Determine Visibility of Objects in the Scene. /determining-if-the-include-file-pthread-h-exists-failed; ; SOFA - Topic: [SOLVED] Determining if the include file pthread.h exists failed. /develope-a-new-fem-plugin; . /feed; ; [SOLVED] Develop a new FEM plugin – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. /4; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. SOFA - Topic: [SOLVED] Develop a new FEM plugin. /difference-between-master-and-stable-versions; ; SOFA - Topic: [SOLVED] difference between master and stable versions. /differences-between-animationloops; . /feed; ; [SOLVED] Differences between AnimationLoops – SOFA. SOFA - Topic: [SOLVED] Differences between AnimationLoops. /difficulties-compiling-my-own-sofa-plugins-on-windows; ; SOFA - Topic: [SOLVED] Difficulties compiling my own SOFA plugins on Windows. /difficulty-compiling-applications-tutorials; ; SOFA - Topic: [SOLVED] Difficulty compiling applications/tutorials. /diffussion-for-tetrahedral-mesh; . /feed; ; [SOLVED] Diffusion for tetrahedral mesh – SOFA. SOFA - Topic: [SOLVED] Diffusion for tetrahedral mesh. /discover-the-new-release-v20-12; . /feed; ; Discover the new release v20.12! – SOFA. SOFA - Topic: Discover the new release v20.12!. /discover-the-new-release-v21-06; . /feed; ; Discover the new release v21.06! – SOFA. SOFA - Topic: Discover the new release v21.06!. /dlls-error-when-building-sofa-in-windows10; ; SOFA - Topic: DLLs error when building SOFA in Windows10. /dockerized-sofa-ros-2-sofarosconnector-etc; ; SOFA - Topic: Dockerized Sofa + ROS 2 + SofaROSConnector etc. /document-about-xml-grammar; ; SOFA - Topic: [SOLVED] Document about xml grammar. /documentation-for-attachconstraint; ; SOFA - Topic: [SOLVED] Documentation for attachconstraint?. /doc,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:288335,plugin,plugins-on-windows,288335,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugins', 'plugins-on-windows']"
Modifiability, SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSystems still functioning?. /sensable-plugin; . /feed; ; [SOLVED] Sensable Plugin – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin. /sensable-plugin-cannot-be-added-into-plugin-manager; ; SOFA - Topic: [SOLVED] Sensable plugin cannot be added into plugin manager. /sensable-plugins-example-problems; . /feed; ; [SOLVED] Sensable Plugin Example Problems – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin Example Problems. /sensible-pluginrunning-examples-in-sensible-folder; . /feed; ; [SOLVED] Running examples in sensible folder (Sensible Plugin) – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Running examples in sensible folder (Sensible Plugin). /14; ; SOFA - Topic: [SOLVED] Running examples in sensible folder (Sensible Plugin). /16; ; SOFA - Topic: [SOLVED] Running examples in sensible folder (Sensible Plugin). /5; ; SOFA - Topic: [SOLVED] Running examples in sensible folder (Sensible Plugin). SOFA - Topic: [SOLVED] Running examples in sensible folder (Sensible Plugin). /servo-control-of-a-deformable-object; ; SOFA - Topic: Servo,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:383736,plugin,plugin,383736,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," SOFA API: sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes > Class Template Reference . #include <BarycentricStickContact.h>. Inheritance diagram for sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_keepAlive;  ; Data< bool > d_keepAlive;  set to true to keep this contact alive even after collisions are no longer detected More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; CollisionModel1 * model1;  ; CollisionModel2 * model2;  ; Intersection",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html:944,inherit,inherited,944,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,1,['inherit'],['inherited']
Modifiability," SOFA API: sofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< DataTypes > Class Template Reference . #include <SlidingLagrangianConstraint.h>. Inheritance diagram for sofa::component::constraint::lagrangian::model::SlidingLagrangianConstraint< DataTypes >:. [legend]. Protected Attributes; Data< int > d_m1;  index of the spliding point on the first model More...;  ; Data< int > d_m2a;  index of one end of the sliding axis More...;  ; Data< int > d_m2b;  index of the other end of the sliding axis More...;  ; Data< Deriv > d_force;  force (impulse) used to solve the constraint More...;  ; Real m_dist;  ; Real m_thirdConstraint;  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html:978,inherit,inherited,978,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability," SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::gui::component::FixPickedParticleButtonSetting Class Reference . #include <FixPickedParticleButtonSetting.h>. Inheritance diagram for sofa::gui::component::FixPickedParticleButtonSetting:. [legend]. Public Attributes; Data< SReal > stiffness;  Stiffness of the spring to fix a particule. More...;  ;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::Config",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html:1002,inherit,inherited,1002,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,1,['inherit'],['inherited']
Modifiability, SOFA. SOFA - Topic Tag: SofaPhysicsAPI. /sofa-programming; . /feed; ; Sofa programming – SOFA. SOFA - Topic Tag: Sofa programming. /sofapython; . /feed; ; SofaPython – SOFA. SOFA - Topic Tag: SofaPython. /sofa-python; . /feed; ; SOFA-Python – SOFA. SOFA - Topic Tag: SOFA-Python. /sofapython3; . /feed; ; SofaPython3 – SOFA. /page; . /2; ; SOFA - Topic Tag: SofaPython3. /3; ; SOFA - Topic Tag: SofaPython3. SOFA - Topic Tag: SofaPython3. /sofapython-3; . /feed; ; SofaPython 3 – SOFA. SOFA - Topic Tag: SofaPython 3. /sofapython3-cmake-error; . /feed; ; SofaPython3 CMake Error – SOFA. SOFA - Topic Tag: SofaPython3 CMake Error. /sofapython3-lcpconstraintsolver; . /feed; ; SofaPython3 LCPConstraintSolver – SOFA. SOFA - Topic Tag: SofaPython3 LCPConstraintSolver. /sofapython3-sofaqtquick; . /feed; ; SofaPython3; SofaQtQuick – SOFA. SOFA - Topic Tag: SofaPython3; SofaQtQuick. /sofapython-interactive; . /feed; ; SofaPython interactive – SOFA. SOFA - Topic Tag: SofaPython interactive. /sofa-python-plugin; . /feed; ; SOFA Python Plugin – SOFA. SOFA - Topic Tag: SOFA Python Plugin. /sofapython-screenshot; . /feed; ; SofaPython screenshot – SOFA. SOFA - Topic Tag: SofaPython screenshot. /sofaros; . /feed; ; sofaros – SOFA. SOFA - Topic Tag: sofaros. /sofarosconnector; . /feed; ; SofaROSConnector – SOFA. SOFA - Topic Tag: SofaROSConnector. /sofarosconnector-plugin; . /feed; ; SofaROSconnector Plugin – SOFA. SOFA - Topic Tag: SofaROSconnector Plugin. /sofasimulationtree-dll-is-missing; . /feed; ; SofaSimulationTree.dll is missing – SOFA. SOFA - Topic Tag: SofaSimulationTree.dll is missing. /sofa-soft-robots-mesh; . /feed; ; SOFA Soft Robots Mesh – SOFA. SOFA - Topic Tag: SOFA Soft Robots Mesh. /sofastereo; . /feed; ; sofastereo – SOFA. SOFA - Topic Tag: sofastereo. /sofa-template-introspection-datatypes; . /feed; ; Sofa template introspection DataTypes – SOFA. SOFA - Topic Tag: Sofa template introspection DataTypes. /sofauserinteraction; . /feed; ; SofaUserInteraction – SOFA. SOFA ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:479783,plugin,plugin,479783,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability, SOFA. SOFA - Topic Tag: Unable to determine the path. /unit; . /feed; ; unit – SOFA. SOFA - Topic Tag: unit. /units; . /feed; ; units – SOFA. SOFA - Topic Tag: units. /unit-testing; . /feed; ; unit testing – SOFA. SOFA - Topic Tag: unit testing. /unity3d-digital-trainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-02; . /feed; ; v20.12.02 – SOFA. SOFA - Topic Tag: v20.12.02. /validation; . /feed; ; validation – SOFA. SOFA - Topic Tag: validation. /vasculature; . /feed; ; vasculature – SOFA. SOFA - Topic Tag: vasculature. /vecid; . /feed; ; vecId – SOFA. SOFA - Topic Tag: vecId. /vectordata-data-merge-copy; . /feed; ; vectorData Data merge copy – SOFA. SOFA - Topic Tag: vectorData Data merge copy. /vectorspringforcefield; . /feed; ; VectorSpringForceField – SOFA. SOFA - Topic Tag: VectorSpringForceField. /verification; . /feed; ; verification – SOFA. SOFA - Topic Tag: verification. /vertex; . /feed; ; vertex – SOFA. SOFA - Topic Tag: vertex. /vessel; . /feed; ; vessel – SOFA. SOFA - Topic Tag: vessel. /vessels; . /feed; ; vessels – SOFA. SOFA - Topic Tag: vessels. /video; . /feed; ; video – SOFA. SOFA - Topic Tag: video. /vi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:489655,plugin,plugin,489655,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability, SOFA. SOFA - Topic Tag: contact. /contact-force; . /feed; ; contact force – SOFA. SOFA - Topic Tag: contact force. /contactlistener; . /feed; ; contactlistener – SOFA. SOFA - Topic Tag: contactlistener. /contain; . /feed; ; contain – SOFA. SOFA - Topic Tag: contain. /continuum-robots-beam-adaptater-constraints; . /feed; ; continuum robots; beam adaptater; constraints – SOFA. SOFA - Topic Tag: continuum robots; beam adaptater; constraints. /control; . /feed; ; control – SOFA. SOFA - Topic Tag: control. /controller; . /feed; ; Controller – SOFA. SOFA - Topic Tag: Controller. /control-xml-variables-in-c-or-python; . /feed; ; Control xml variables in C++ or Python. – SOFA. SOFA - Topic Tag: Control xml variables in C++ or Python. /coulomb; . /feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag: Cutting Simulation. /damping; . /feed; ; damping – SOFA. SOFA - Topic Tag: damping. /damping-force-field-integration; . /feed; ; damping force field integration – SOFA. SOFA - Topic Tag: damping force field integration. /damping-gravity-fallspeed-eulerimplicitsolver-constantforcefield; . /feed; ; Damping Gravity fallspeed EulerImplicitSolver ConstantF,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:438135,plugin,plugins,438135,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugins']
Modifiability, SOFAV 16.08 – SOFA. SOFA - Topic Tag: SOFAV 16.08. /sofa-v20-12; . /feed; ; SOFA-v20.12 – SOFA. SOFA - Topic Tag: SOFA-v20.12. /sofa-v20-12-error; . /feed; ; Sofa v20.12 error – SOFA. SOFA - Topic Tag: Sofa v20.12 error. /sofa-versions; . /feed; ; sofa versions – SOFA. SOFA - Topic Tag: sofa versions. /soft; . /feed; ; soft – SOFA. SOFA - Topic Tag: soft. /softrobot; . /feed; ; SoftRobot – SOFA. SOFA - Topic Tag: SoftRobot. /soft-robot-dynamics; . /feed; ; soft robot dynamics – SOFA. SOFA - Topic Tag: soft robot dynamics. /soft-robotics; . /feed; ; soft robotics – SOFA. SOFA - Topic Tag: soft robotics. /softrobot-plugin; . /feed; ; Softrobot plugin – SOFA. SOFA - Topic Tag: Softrobot plugin. /soft-robot-plugin; . /feed; ; Soft robot Plugin – SOFA. SOFA - Topic Tag: Soft robot Plugin. /softrobots; . /feed; ; softrobots – SOFA. /page; . /2; ; SOFA - Topic Tag: softrobots. SOFA - Topic Tag: softrobots. /soft-robots; . /feed; ; Soft Robots – SOFA. SOFA - Topic Tag: Soft Robots. /softrobots-plugin; . /feed; ; SoftRobots Plugin – SOFA. SOFA - Topic Tag: SoftRobots Plugin. /soft-robots-sofa-locomotion; . /feed; ; soft robots sofa locomotion – SOFA. SOFA - Topic Tag: soft robots sofa locomotion. /softrobots-softrobots-inverse; . /feed; ; SoftRobots SoftRobots.Inverse – SOFA. SOFA - Topic Tag: SoftRobots SoftRobots.Inverse. /softrobots-tutorial; . /feed; ; SoftRobots tutorial – SOFA. SOFA - Topic Tag: SoftRobots tutorial. /solver; . /feed; ; Solver – SOFA. SOFA - Topic Tag: Solver. /sparsegridramification; . /feed; ; SparseGridRamification – SOFA. SOFA - Topic Tag: SparseGridRamification. /sparseldlsolver; . /feed; ; SparseLDLSolver – SOFA. SOFA - Topic Tag: SparseLDLSolver. /speech; . /feed; ; speech – SOFA. SOFA - Topic Tag: speech. /speed; . /feed; ; Speed – SOFA. SOFA - Topic Tag: Speed. /sph; . /feed; ; SPH – SOFA. SOFA - Topic Tag: SPH. /spotlight; . /feed; ; Spotlight – SOFA. SOFA - Topic Tag: Spotlight. /spring; . /feed; ; Spring – SOFA. SOFA - Topic Tag: Spring. /s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:481841,plugin,plugin,481841,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," SOFA_COMPONENT_CONSTRAINT_LAGRANGIAN_CORRECTION_API void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void rotateConstraints (bool back);  ; void rotateConstraints (bool back);  ; void rotateResponse ();  ; void rotateResponse ();  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; Deprecated API; void applyContactForce (const linearalgebra::BaseVector *f) override;  ; void resetContactForce () override;  ; Unbuilt constraint system during resolution; void resetForUnbuiltResolution (SReal *f, std::list< unsigned int > &) override;  ; bool hasConstraintNumber (int index) override;  ; void addConstraintDisplacement (SReal *d, int begin, int end) override;  ; void setConstraintDForce (SReal *df, int begin, int end, bool update) override;  ; void getBlockDiagonalCompliance (linearalgebra::BaseMatrix *W, int begin, int end) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(ConstraintCorrection, TDataTypes), BaseConstraintCorrection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void addConstraintSolver (core::behavior::ConstraintSolver *s) override;  ; void removeConstraintSolver (core::behavior::ConstraintSolver *s) override;  ; void computeMotionCorrectionFromLambda (const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) override;  ; void applyMotionCorrection (const core::ConstraintParams *cparams, core::MultiVecCoordId x, core::MultiVecDerivId v, core::MultiVecDerivId dx, core::ConstMultiVecDerivId correction) override;  ; void appl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:7686,inherit,inherited,7686,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['inherit'],['inherited']
Modifiability," Shell Array. More...;  ; void createQuadsAroundEdgeArray ();  Creates the quadsAroundEdge Array. More...;  ; void createQuadsInHexahedronArray ();  Creates the array of quad indices for each hexahedron. More...;  ; void createTetrahedraAroundVertexArray ();  Creates the TetrahedraAroundVertex Array. More...;  ; void createTetrahedraAroundEdgeArray ();  Creates the TetrahedraAroundEdge Array. More...;  ; void createTetrahedraAroundTriangleArray ();  Creates the TetrahedraAroundTriangle Array. More...;  ; void createHexahedraAroundVertexArray ();  Creates the HexahedraAroundVertex Array. More...;  ; void createHexahedraAroundEdgeArray ();  Creates the HexahedraAroundEdge Array. More...;  ; void createHexahedraAroundQuadArray ();  Creates the HexahedraAroundQuad Array. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseMeshTopology;  BaseMeshTopology ();  ;  Protected Member Functions inherited from sofa::core::topology::Topology;  Topology ();  ; virtual ~Topology ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:32668,inherit,inherited,32668,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,30,['inherit'],['inherited']
Modifiability," T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ReadTopology ();  ;  ~ReadTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_filename. sofa::core::objectmodel::DataFileName sofa::component::playback::ReadTopology::d_filename. ◆ d_interval. Data< double > sofa::component::playback::ReadTopology::d_interval. time duration between inputs . ◆ d_loop. Data< bool > sofa::component::playback::ReadTopology::d_loop. set to 'true' to re-read the file when reaching the end . ◆ d_shift. Data< double > sofa::component::playback::ReadTopology::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html:13984,inherit,inherited,13984,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,1,['inherit'],['inherited']
Modifiability," T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html:14067,inherit,inherited,14067,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,3,['inherit'],['inherited']
Modifiability," T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse; static void setContactTags (core::CollisionModel *model1, core::CollisionModel *model2, core::collision::Contact::SPtr contact);  ; static sofa::helper::OptionsGroup initializeResponseOptions (sofa::core::objectmodel::BaseContext *pipeline);  . Attribute details. ◆ d_rules. Data< type::vector<Rule> > sofa::component::collision::response::contact::RuleBasedContactManager::d_rules. ◆ d_variables. Data< std::string > sofa::component::collision::response::contact::RuleBasedContactManager::d_variables. Define a list of variables to be used inside the rules. . ◆ rules. sofa::core::objectmodel::RenamedData< type::vector<Rule> > sofa::component::collision::response::contact::RuleBasedContactManager::rules. ◆ variablesData. std::map<std::string,Data<std::string>* > sofa::component::collision::response::contact::RuleBasedContactManager::variablesData. protected . Constructor details. ◆ RuleBasedContactManager(). sofa::component::collision::response::contact::RuleBasedContactManager::RuleBasedContactManager ; (; ). protected . ◆ ~RuleBasedContactManager(). sofa::component::collision::response::contact::RuleBasedContactManager::~RuleBasedContactManager ; (; ). overrideprotected . Function details. ◆ createVariableData(). void sofa::component::collision::response::contact::RuleBasedContactManager::createVariableData ; (; std::string ; variable). ◆ getContactResponse(). std::string sofa::component::collision::response::contact::RuleBasedContactManager::getContactResponse ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2 . ). overridevirtual . Reimplemented from sofa::component::collision::response::contact::CollisionResponse. ◆ parse(). void sofa::component::collision::response::contact::RuleBasedContactManager::parse ; (; sofa::core::objectmodel::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:18467,variab,variablesData,18467,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,1,['variab'],['variablesData']
Modifiability," TOut >:. [legend]; Detailed Description; template<class TIn, class TOut>; class sofa::component::mapping::linear::IdentityMultiMapping< TIn, TOut >; concatanate several entire mechanical states together . Protected Attributes; type::vector< linearalgebra::BaseMatrix * > baseMatrices;  Jacobian of the mapping, in a vector. More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(IdentityMultiMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMultiMapping, TIn, TOut));  ; void init () override;  ; void apply (const core::MechanicalParams *mparams, const type::vector< OutDataVecCoord * > &dataVecOutPos, const type::vector< const InDataVecCoord * > &dataVecInPos) override;  ; void applyJ (const core::MechanicalParams *mparams, const type::vector< OutDataVecDeriv * > &dataVecOutVel, const type::vector< const InDataVecDeriv * > &dataVecInVel) override;  ; void applyJT (const core::MechanicalParams *mparams, const type::vector< InDataVecDeriv * > &dataVecOutForce, const type::vector< const OutDataVecDeriv * > &dataVecInForce) override;  ; void applyDJT (const core::MechanicalParams *, core::MultiVecDerivId, core::ConstMultiVecDerivId) override;  ; void applyJT (const core::ConstraintParams *cparams, const type::vector< InDataMatrixDeriv * > &dataMatOutConst, const type::vector< const OutDataMatrixDeriv * > &dataMatInConst) override;  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  IdentityMultiMapping ();  ; virtual ~IdentityMultiMapping ();  . Attribute details. ◆ baseMatrices. template<class TIn , class TOut > . type::vector<linearalgebra::BaseMatrix*> sofa::component::mapping::linear::IdentityMultiMapping< TIn, TOut >::baseMatrices. protected . Jacobian of the mapping, in a vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_identity_multi_mapping.html:2026,inherit,inherited,2026,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_identity_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_identity_multi_mapping.html,1,['inherit'],['inherited']
Modifiability," TVecId< vtype, vaccess > & operator= (const TVecId< vtype, vaccess > &other);  ; template<VecAccess vaccess2> ; TVecId< vtype, vaccess > & operator= (const TVecId< vtype, vaccess2 > &other);  ; template<VecAccess vaccess2> ; TVecId< vtype, vaccess > & operator= (const TVecId< V_ALL, vaccess2 > &other);  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator== (const TVecId< vtype2, vaccess2 > &v) const;  ; template<VecType vtype2, VecAccess vaccess2> ; bool operator!= (const TVecId< vtype2, vaccess2 > &v) const;  ; bool isNull () const;  ; std::string getName () const;  ; std::string getGroup () const;  ;  Public Member Functions inherited from sofa::core::BaseVecId; VecType getType () const;  ; unsigned int getIndex () const;  . Static Public Member Functions; static TVecId null ();  . Friends; std::ostream & operator<< (std::ostream &out, const TVecId &v);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::BaseVecId; VecType type;  ; unsigned int index;  ;  Protected Member Functions inherited from sofa::core::BaseVecId;  BaseVecId (VecType t, unsigned int i);  . Constructor details. ◆ TVecId() [1/5]. template<VecType vtype, VecAccess vaccess> . sofa::core::TVecId< vtype, vaccess >::TVecId ; (; ). inline . ◆ TVecId() [2/5]. template<VecType vtype, VecAccess vaccess> . sofa::core::TVecId< vtype, vaccess >::TVecId ; (; unsigned int ; i). inline . ◆ TVecId() [3/5]. template<VecType vtype, VecAccess vaccess> . sofa::core::TVecId< vtype, vaccess >::TVecId ; (; const TVecId< vtype, vaccess > & ; v). inline . Copy constructor. . ◆ TVecId() [4/5]. template<VecType vtype, VecAccess vaccess> . template<VecAccess vaccess2> . sofa::core::TVecId< vtype, vaccess >::TVecId ; (; const TVecId< vtype, vaccess2 > & ; v). inline . Copy from another VecId, possibly with another type of access, with the constraint that the access must be compatible (i.e. cannot create a write-access VecId from a read-only VecId. . ◆ TVecId() [5/5]. template<VecType ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id.html:1921,inherit,inherited,1921,api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_t_vec_id.html,2,['inherit'],['inherited']
Modifiability, Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SOFA - Topic Tag: GCC. /gcc-4-8-5; . /feed; ; Gcc 4.8.5 – SOFA. SOFA - Topic Tag: Gcc 4.8.5. /geomagic; . /feed; ; geomagic – SOFA. SOFA - Topic Tag: geomagic. /geomagic-collision-error; . /feed; ; Geomagic collision error – SOFA. SOFA - Topic Tag: Geomagic collision error. /geomagic-plugin; . /feed; ; Geomagic plugin – SOFA. SOFA - Topic Tag: Geomagic plugin. /geomagic-rare-tool-behaviour; . /feed; ; [Geomagic] Rare tool behaviour – SOFA. SOFA - Topic Tag: [Geomagic] Rare tool behaviour. /geomagic-touch; . /feed; ; Geomagic touch – SOFA. SOFA - Topic Tag: Geomagic touch. /geomagic-touch-haptic-rendering; . /feed; ; Geomagic Touch Haptic Rendering – SOFA. SOFA - Topic Tag: Geomagic Touch Haptic Rendering. /getcontactelements; . /feed; ; getContactElements – SOFA. SOFA - Topic Tag: getContactElements. /getobject; . /feed; ; getObject – SOFA. SOFA - Topic Tag: getObject. /getting-started; . /feed; ; Getting Started – SOFA. SOFA - Topic Tag: Getting Started. /gil; . /feed; ; gil – SOFA. SOFA - Topic Tag: gil. /glew; . /feed; ; glew – SOFA. SOFA - Topic Tag: glew. /glreadpixels; . /feed; ; glReadPixels – SOFA. SOFA - Topic Tag: glReadPixels. /gl-shader; . /feed; ; gl shader – SOFA. SOFA - Topic Tag: gl shader. /glsl-oglmodel; . /feed; ; GLSL OglModel – SOFA. SOFA - To,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:445676,plugin,plugin,445676,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability, Tag: SOFA Soft Robots Mesh. /sofastereo; . /feed; ; sofastereo – SOFA. SOFA - Topic Tag: sofastereo. /sofa-template-introspection-datatypes; . /feed; ; Sofa template introspection DataTypes – SOFA. SOFA - Topic Tag: Sofa template introspection DataTypes. /sofauserinteraction; . /feed; ; SofaUserInteraction – SOFA. SOFA - Topic Tag: SofaUserInteraction. /sofav-16-08; . /feed; ; SOFAV 16.08 – SOFA. SOFA - Topic Tag: SOFAV 16.08. /sofa-v20-12; . /feed; ; SOFA-v20.12 – SOFA. SOFA - Topic Tag: SOFA-v20.12. /sofa-v20-12-error; . /feed; ; Sofa v20.12 error – SOFA. SOFA - Topic Tag: Sofa v20.12 error. /sofa-versions; . /feed; ; sofa versions – SOFA. SOFA - Topic Tag: sofa versions. /soft; . /feed; ; soft – SOFA. SOFA - Topic Tag: soft. /softrobot; . /feed; ; SoftRobot – SOFA. SOFA - Topic Tag: SoftRobot. /soft-robot-dynamics; . /feed; ; soft robot dynamics – SOFA. SOFA - Topic Tag: soft robot dynamics. /soft-robotics; . /feed; ; soft robotics – SOFA. SOFA - Topic Tag: soft robotics. /softrobot-plugin; . /feed; ; Softrobot plugin – SOFA. SOFA - Topic Tag: Softrobot plugin. /soft-robot-plugin; . /feed; ; Soft robot Plugin – SOFA. SOFA - Topic Tag: Soft robot Plugin. /softrobots; . /feed; ; softrobots – SOFA. /page; . /2; ; SOFA - Topic Tag: softrobots. SOFA - Topic Tag: softrobots. /soft-robots; . /feed; ; Soft Robots – SOFA. SOFA - Topic Tag: Soft Robots. /softrobots-plugin; . /feed; ; SoftRobots Plugin – SOFA. SOFA - Topic Tag: SoftRobots Plugin. /soft-robots-sofa-locomotion; . /feed; ; soft robots sofa locomotion – SOFA. SOFA - Topic Tag: soft robots sofa locomotion. /softrobots-softrobots-inverse; . /feed; ; SoftRobots SoftRobots.Inverse – SOFA. SOFA - Topic Tag: SoftRobots SoftRobots.Inverse. /softrobots-tutorial; . /feed; ; SoftRobots tutorial – SOFA. SOFA - Topic Tag: SoftRobots tutorial. /solver; . /feed; ; Solver – SOFA. SOFA - Topic Tag: Solver. /sparsegridramification; . /feed; ; SparseGridRamification – SOFA. SOFA - Topic Tag: SparseGridRamification. /sparseldlsol,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:481461,plugin,plugin,481461,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," Template Reference . #include <SparseMatrixTest.h>. Inheritance diagram for sofa::testing::SparseMatrixTest< TReal >:. [legend]. Static Public Member Functions; template<int EigenSparseMatrixOptions> ; static void generateRandomSparseMatrix (Eigen::SparseMatrix< TReal, EigenSparseMatrixOptions > &eigenMatrix, Eigen::Index nbRows, Eigen::Index nbCols, TReal sparsity);  ; template<class InputIt > ; static void generateFromTriplets (Eigen::SparseMatrix< TReal > &eigenMatrix, InputIt first, InputIt last, Eigen::Index nbRows, Eigen::Index nbCols);  ; template<typename _DstScalar , int _DstOptions, typename _DstStorageIndex , typename _SrcScalar , int _SrcOptions, typename _SrcStorageIndex > ; static void copyFromEigen (Eigen::SparseMatrix< _DstScalar, _DstOptions, _DstStorageIndex > &dst, const Eigen::SparseMatrix< _SrcScalar, _SrcOptions, _SrcStorageIndex > &src);  ; static void copyFromEigen (linearalgebra::BaseMatrix &dst, const Eigen::SparseMatrix< TReal > &src);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ; template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > ; static bool compareEigenSparseMatrix (const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > &A, const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > &B);  ;  Static Public Member Functions inherited from sofa::testing::NumericTest< SReal >; static Real matrixMaxDiff (const Matrix1 &m1, const Matrix2 &m2);  return the maximum difference between corresponding entries, or the infinity if the matrices have different sizes More...;  ; static Real matrixMaxDiff (const sofa::type::Mat< M, N, Real > &m1, const Matrix2 &m2);  Return the maximum difference bet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:1892,inherit,inherited,1892,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,1,['inherit'],['inherited']
Modifiability," Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags > Class Template Reference . #include <Link.h>; Container of vectors of links in the scenegraph, from a given type of object (Owner) to another (Dest) ; More... Inheritance diagram for sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >:. [legend]; Detailed Description; template<class TOwnerType, class TDestType, unsigned TFlags>; class sofa::core::objectmodel::MultiLink< TOwnerType, TDestType, TFlags >; Container of vectors of links in the scenegraph, from a given type of object (Owner) to another (Dest) . Protected Attributes; ValidatorFn m_validator;  ;  Protected Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >; OwnerType * m_owner;  ; Container m_value;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator ren",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html:951,inherit,inherited,951,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,2,['inherit'],['inherited']
Modifiability," This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Static Public Member Functions; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Protected Member Functions; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Attribute details. ◆ group. std::string sofa::core::objectmodel::BaseData::group {""""}. group . ◆ help. std::string sofa::core::objectmodel::BaseData::help {""""}. Help message. . ◆ m_counter. int sofa::core::objectmodel::BaseData::m_counter. Number of changes since creation. . ◆ m_dataFlags. DataFlags sofa::core::objectmodel::BaseData::m_dataFlags. Flags indicating the purpose and behaviour of this Data. . ◆ m_hasDefaultValue. bool sofa::core::objectmodel::BaseData::m_hasDefaultValue = false. True if this Data has a default value. . ◆ m_isSet. bool sofa::core::objectmodel::BaseData::m_isSet. True if this Data is set, i.e. its value is different from the default value. . ◆ m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:8199,inherit,inherited,8199,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['inherit'],['inherited']
Modifiability," Topic: [SOLVED] c++11 flag added to c files compilation. /cable-driven-actuation; ; SOFA - Topic: [SOLVED] Cable-Driven Actuation. /call-for-papers-hmsim-healthcare-and-medical-simulation-barcelona; ; SOFA - Topic: Call for papers – HMSIM: Healthcare and Medical Simulation Barcelona. /calling-header-files-between-sofa-plugins; ; SOFA - Topic: [SOLVED] Calling header files between sofa plugins. /camera-position; ; SOFA - Topic: [SOLVED] Camera position. /cannot-access-private-member-while-building-sofacore; ; SOFA - Topic: [SOLVED] Cannot access private member while building SofaCore. /cannot-animate-geomagic; ; SOFA - Topic: Cannot animate Geomagic. /can-not-build-sofacuda-on-win10-vs2013-cuda8-0; . /feed; ; Can not Build SofaCUDA on win10 VS2013 cuda8.0 – SOFA. SOFA - Topic: Can not Build SofaCUDA on win10 VS2013 cuda8.0. /cannot-build-sofa-sln-with-visual-studio-2019; ; SOFA - Topic: [SOLVED] Cannot build sofa.sln with visual studio 2019. /cannot-compile-sofahapi-plugin; ; SOFA - Topic: [SOLVED] Cannot compile SofaHapi Plugin. /can-not-create-new-from-runsofa-window-filenew; ; SOFA - Topic: [SOLVED] Can not create ""New"" from RunSofa Window> File>New. /cannot-import-sofa-gui-in-python; ; SOFA - Topic: [SOLVED] Cannot import Sofa.Gui in python. /cannot-open-many-files; ; SOFA - Topic: cannot open many files. /can-not-open-the-editor-sofa-binaries-v19-04-on-win-10; ; SOFA - Topic: Can not open the editor Sofa BINARIES (v19.04) on win 10. /can-not-open-the-tutorials; . /feed; ; [SOLVED] Can not open the tutorials – SOFA. SOFA - Topic: [SOLVED] Can not open the tutorials. /cannot-run-the-simulation; . /embed; ; SOFA - Topic: [SOLVED] Cannot run the simulation. SOFA - Topic: [SOLVED] Cannot run the simulation. /cannot-use-add-node; ; SOFA - Topic: [SOLVED] Cannot use ‘Add Node’. /can-sofa-be-called-from-my-system-python-as-part-of-a-larger-tool-chain; ; SOFA - Topic: [SOLVED] Can SOFA be called from my system python as part of a larger tool chain?. /can-sofa-cut-the-vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:268960,plugin,plugin,268960,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability, Topic: [SOLVED] problems with OglShadowShader.scn. /problems-with-softrobots-inverse-plugin; ; SOFA - Topic: [SOLVED] Problems with SoftRobots.Inverse plugin. /problems-with-working-in-windows-in-developing-a-code; . /feed; ; [SOLVED] Problems with working in windows in developing a code – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Problems with working in windows in developing a code. /4; ; SOFA - Topic: [SOLVED] Problems with working in windows in developing a code. SOFA - Topic: [SOLVED] Problems with working in windows in developing a code. /problem-when-running-softrobots-python-script-sofa-v18-12-on-ubuntu-16-04; ; SOFA - Topic: Problem when running SoftRobots python script (SOFA v18.12 on Ubuntu 16.04). /problem-when-running-softrobots-tutorial; ; SOFA - Topic: [SOLVED] Problem when running SoftRobots tutorial. /problem-while-opening-the-sensable-example; ; SOFA - Topic: Problem while opening the sensable example- SOFA crashes while opening example. /problem-while-running-the-sensable-plugin-examples; . /feed; ; [SOLVED] Problem while running the sensable plugin examples – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Problem while running the sensable plugin examples. SOFA - Topic: [SOLVED] Problem while running the sensable plugin examples. /problem-with-articulatedsystemmapping-scn; ; SOFA - Topic: [SOLVED] Problem with ArticulatedSystemMapping.scn. /problem-with-boost-in-cmake; ; SOFA - Topic: [SOLVED] Problem with Boost in CMake. /problem-with-carving-on-rigid-tissues; ; SOFA - Topic: [SOLVED] Problem with carving on rigid tissues. /problem-with-identifying-the-initial-coordination-and-carving; ; SOFA - Topic: [SOLVED] Problem with identifying the initial coordination and carving. /problem-with-import-sofacaribou; ; SOFA - Topic: [SOLVED] Problem with import SofaCaribou. /problem-with-linearmovementconstraint; ; SOFA - Topic: [SOLVED] Problem with LinearMovementConstraint. /problem-with-scene-in-modeler; . /feed; ; [SOLVED] Problem with scene in Modeler ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:368377,plugin,plugin-examples,368377,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-examples']
Modifiability," Transformation > _initialTransformation;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(TetrahedronFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::RotationFinder, DataTypes));  ; Real getRestVolume ();  ; void getRotation (Mat33 &R, Index nodeIdx);  ; void getRotations (VecReal &vecR);  ; void getRotations (linearalgebra::BaseMatrix *rotations, int offset=0) override;  ; const type::vector< Mat33 > & getRotations () override;  ; void setComputeGlobalMatrix (bool val);  ; const Transformation & getActualTetraRotation (Index index);  ; const Transformation & getInitialTetraRotation (Index index);  ; const MaterialStiffness & getMaterialStiffness (TetrahedronID tetraId);  ; const StrainDisplacement & getStrainDisplacement (TetrahedronID tetraId);  ; const type::fixed_array< Coord, 4 > & getRotatedInitialElements (TetrahedronID tetraId);  ; void setM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:9190,inherit,inherited,9190,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability," Triangle/Line; Triangle/Triangle; Sphere/Point; RigidSphere/Point; Line/RigidSphere; Line/Sphere; Triangle/RigidSphere; Triangle/Sphere . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useLineLine;  Line-line collision detection enabled. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:1812,inherit,inherited,1812,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,2,['inherit'],['inherited']
Modifiability," TriangleInformation &triangleInfo);  ; void computeStressPerVertex ();  Method to compute the averageStress per vertex. Call if. More...;  ; virtual void applyStiffness (VecCoord &f, Real h, const VecCoord &x, const Real &kFactor);  f += Kx where K is the stiffness matrix and x a displacement More...;  ; void initSmall (int i, Index &a, Index &b, Index &c);  ; void accumulateForceSmall (VecCoord &f, const VecCoord &p);  ; void applyStiffnessSmall (VecCoord &f, Real h, const VecCoord &x, const Real &kFactor);  ; void initLarge (int i, Index &a, Index &b, Index &c);  ; void accumulateForceLarge (VecCoord &f, const VecCoord &p);  ; void applyStiffnessLarge (VecCoord &f, Real h, const VecCoord &x, const Real &kFactor);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Meth",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:22758,inherit,inherited,22758,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,5,['inherit'],['inherited']
Modifiability," VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader; BaseVTKDataIO * inputPoints;  ; BaseVTKDataIO * inputNormals;  ; BaseVTKDataIO * inputPolygons;  ; BaseVTKDataIO * inputCells;  ; BaseVTKDataIO * inputCellOffsets;  ; BaseVTKDataIO * inputCellTypes;  ; type::vector< BaseVTKDataIO * > inputPointDataVector;  ; type::vector< BaseVTKDataIO * > inputCellDataVector;  ; bool isLittleEndian;  ; int numberOfPoints;  ; int numberOfCells;  ; int numberOfLines;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html:9178,inherit,inherited,9178,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,2,['inherit'],['inherited']
Modifiability," VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  Pre-construction check method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ConstraintCorrection (MechanicalState< DataTypes > *ms=nullptr);  Default Constructor. More...;  ;  ~ConstraintCorrection () override=default;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html:13328,inherit,inherited,13328,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,1,['inherit'],['inherited']
Modifiability," VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_alias. Data<std::string> sofa::component::sceneutility::makealiascomponent::MakeAliasComponent::d_alias. The new alias of the component. . ◆ d_targetcomponent. Data<std::string> sofa::component::sceneutility::makealiascomponent::MakeAliasComponent::d_targetcomponent. The component class for which to create an alias. . Constructor details. ◆ MakeAliasComponent(). sofa::component::sceneutility::makealiascompon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html:12858,inherit,inherited,12858,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,1,['inherit'],['inherited']
Modifiability," VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_alias. Data<std::string> sofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent::d_alias. The alias of the data field. . ◆ d_componentname. Data<std::string> sofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent::d_componentname. The component class for which to create an alias. . ◆ d_dataname. Data<std::string> sofa::component::sceneutility::makedataaliascompon",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html:13040,inherit,inherited,13040,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,1,['inherit'],['inherited']
Modifiability," VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ data. template<class T > . T* sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >::data. Constructor details. ◆ VTKDataIO(). template<class T > . sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >::VTKDataIO ; (; ). inline . ◆ ~VTKDataIO(). template<class T > . sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >::~VTKDataIO ; (; ). inlineoverride . F",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html:12956,inherit,inherited,12956,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,1,['inherit'],['inherited']
Modifiability," VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ ~BaseOrderingMethod(). sofa::core::behavior::BaseOrderingMethod::~BaseOrderingMethod ; (; ). overridedefault . Function details. ◆ computeInverseFromPermutation(). void sofa::core::behavior::BaseOrderingMethod::computeInverseFromPermutation ; (; int ; matrixSize, . const int * ; inPermutation, . int * ; outInversePermutation . ). static . ◆ computePermutation(). virtual void sofa::core::behavior::BaseOrderin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html:12644,inherit,inherited,12644,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,1,['inherit'],['inherited']
Modifiability," Vector &w);  ; void getVectorAngle (Coord p1, Coord p2, unsigned int axis, Vector &w);  ;  Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionForceField, DataTypes), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, DataTypes, DataTypes));  ; void setPathObject1 (const std::string &path);  Set the Object1 path. More...;  ; void setPathObject2 (const std::string &path);  Set the Object2 path. More...;  ; std::string getPathObject1 () const;  Retrieve the Object1 path. More...;  ; std::string getPathObject2 () const;  Retrieve the Object2 path. More...;  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:7086,inherit,inherited,7086,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['inherit'],['inherited']
Modifiability, [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /mapping-between-rigid-and-deformable-objects; ; SOFA - Topic: [SOLVED] Mapping between rigid and deformable objects. /mapping-between-the-haptic-device-and-a-deformable-instrument; ; SOFA - Topic: mapping between the haptic device and a deformable instrument. /mapping-different-meshes; ; SOFA - Topic: [SOLVED] Mapping different meshes. /mapping-from-grid-to-fem-triangle; ; SOFA - Topic: Mapping from Grid to FEM Triangle. /mapping-grid-to-fem; ; SOFA - Topic: [SOLVED] Mapping Grid to FEM. /mapping-issue-between-2-meshes; ; SOFA - Topic: [SOLVED] Mapping issue between 2 meshes. /mapping-of-behavior-model-and-visual-model; ; SOFA - Topic: [SOLVED] Mapping of behavior model and visual model. /mapping-points-on-collision-mesh-to-points-on-visual-mesh; ; SOFA - Topic: Mapping points on collision mesh to points on visual mesh. /mapping-the-omni-phantom-to-multiple-models-using-geomagic-plugin-and-centring; ; SOFA - Topic: [SOLVED] Mapping the omni phantom to multiple models using GeoMagic Plugin and centring. /mass-below-a-multimap; ; SOFA - Topic: [SOLVED] Mass below a multimap. /mass-spring-model; ; SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak whe,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:345930,plugin,plugin-and-centring,345930,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-and-centring']
Modifiability," [SOLVED] extracting the visual mesh and the force applied by mouse. /extraction-of-the-equation-mass-and-stiffness-matrix-of-liver-from-sofa; ; SOFA - Topic: Extraction of the equation , mass and stiffness matrix of liver from SOFA. /extract-stiffness-matrix; ; SOFA - Topic: Extract stiffness matrix. /face-expressions-by-simulating-muscles-under-skin; . /embed; ; SOFA - Topic: Face expressions by simulating muscles under skin. SOFA - Topic: Face expressions by simulating muscles under skin. /failed-to-build-cgal-plugin; ; SOFA - Topic: [SOLVED] Failed to Build CGAL Plugin. /failed-to-build-on-visual-studio-2019; ; SOFA - Topic: [SOLVED] Failed to build on Visual Studio 2019. /failed-to-build-on-windows; ; SOFA - Topic: [SOLVED] Failed to build on Windows. /failed-to-load-plugins-when-debugging; ; SOFA - Topic: [SOLVED] Failed to load plugins when debugging. /failing-to-build-cgal-plugin; ; SOFA - Topic: [SOLVED] Failing to build CGAL plugin. /fail-to-compile-sofacv-plugin; ; SOFA - Topic: [SOLVED] Fail to compile SofaCV plugin. /fea-solver-with-sofa-to-make-von-mises-stress-color-mapping; . /feed; ; [SOLVED] FEA Solver with SOFA to make Von Mises Stress color mapping – SOFA. SOFA - Topic: [SOLVED] FEA Solver with SOFA to make Von Mises Stress color mapping. /fem-simulation-with-sofa-qunatifying-displacments-and-forces; ; SOFA - Topic: [SOLVED] FEM Simulation with SOFA -> Quantifying Displacments and Forces. /fiber-reinforced-soft-robot; ; SOFA - Topic: Fiber Reinforced soft robot. /file-name-in-gmshloader-as-a-variable; ; SOFA - Topic: [SOLVED] file name in GmshLoader as a variable. /find-tetrahedra-by-unique-id; ; SOFA - Topic: [SOLVED] find tetrahedra by unique id. /fish-eye-cameras-and-anatomical-model-in-sofa; ; SOFA - Topic: Fish eye cameras and anatomical model in SOFA. /fixedconstraint-not-fixed; . /feed; ; [SOLVED] FixedConstraint not fixed – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] FixedConstraint not fixed. /5; ; SOFA - Topic: [SOLVED] FixedConstraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:303644,plugin,plugin,303644,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],['plugin']
Modifiability," _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; acceleratedName()sofa::gui::qt::viewer::qgl::QtGLViewerinlinestatic; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent() overridesofa::gui::qt::viewer::qgl::QtGLViewerinlinevirtualslot; captureTimersofa::gui::qt::viewer::SofaViewerprotected; colourPickingRenderCallBacksofa::gui::qt::viewer::SofaViewerprotected; configure(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::viewer::SofaViewervirtual; configureViewerTab(QTabWidget *)sofa::gui::qt::viewer::SofaViewerinlinevirtual; create(QtGLViewer *, sofa::gui::common::BaseViewerArgument &arg)sofa::gui::qt::viewer::qgl::QtGLViewerinlinestatic; currentCamerasofa::gui::common::BaseViewerprotected; CustomPolicySofaViewer()sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >inline; draw() overridesofa::gui::qt::viewer::qgl::QtGLViewerprotected; drawColourPicking(common::ColourPickingVisitor::ColourCode code) overridesofa::gui::qt::viewer::qgl::QtGLViewervirtual; DrawLogo(void)sofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual; drawScene() overridesofa::gui::qt::viewer::qgl::QtGLViewerprotectedvirtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer-members.html:1209,config,configure,1209,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer-members.html,1,['config'],['configure']
Modifiability, _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent() overridesofa::gui::qt::viewer::SofaViewervirtual; captureTimersofa::gui::qt::viewer::SofaViewerprotected; colourPickingRenderCallBacksofa::gui::qt::viewer::SofaViewerprotected; configure(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::viewer::SofaViewervirtual; configureViewerTab(QTabWidget *)sofa::gui::qt::viewer::SofaViewerinlinevirtual; currentCamerasofa::gui::common::BaseViewerprotected; CustomPolicySofaViewer()sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >inline; drawColourPicking(ColourPickingVisitor::ColourCode)sofa::gui::common::BaseViewerinlinevirtual; drawScene(void)=0sofa::gui::common::BaseViewerpure virtual; fitNodeBBox(sofa::core::objectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer-members.html:1189,config,configure,1189,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_custom_policy_sofa_viewer-members.html,2,['config'],"['configure', 'configureViewerTab']"
Modifiability, _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent() overridesofa::gui::qt::viewer::SofaViewervirtual; captureTimersofa::gui::qt::viewer::SofaViewerprotected; colourPickingRenderCallBacksofa::gui::qt::viewer::SofaViewerprotected; configure(sofa::component::setting::ViewerSetting *viewerConf) overridesofa::gui::qt::viewer::SofaViewervirtual; configureViewerTab(QTabWidget *)sofa::gui::qt::viewer::SofaViewerinlinevirtual; currentCamerasofa::gui::common::BaseViewerprotected; drawColourPicking(ColourPickingVisitor::ColourCode)sofa::gui::common::BaseViewerinlinevirtual; drawScene(void)=0sofa::gui::common::BaseViewerpure virtual; fitNodeBBox(sofa::core::objectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui::common::BaseViewer; getQWidget()=0sofa::gui::qt::viewer::SofaViewerpure virtual; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewe,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer-members.html:1115,config,configure,1115,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer-members.html,2,['config'],"['configure', 'configureViewerTab']"
Modifiability," _backgroundsofa::gui::common::BaseViewerprotected; _fullScreensofa::gui::common::BaseViewerprotected; _mouseInteractorMovingsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosXsofa::gui::common::BaseViewerprotected; _mouseInteractorSavedPosYsofa::gui::common::BaseViewerprotected; _navigationModesofa::gui::common::BaseViewerprotected; _screenshotDirectorysofa::gui::common::BaseViewerprotected; _videosofa::gui::common::BaseViewerprotected; ambientColoursofa::gui::common::BaseViewerprotected; backgroundColoursofa::gui::common::BaseViewerprotected; backgroundImageFilesofa::gui::common::BaseViewerprotected; BaseViewer()sofa::gui::common::BaseViewer; captureEvent()sofa::gui::common::BaseViewerinlinevirtual; configure(sofa::component::setting::ViewerSetting *viewerConf)sofa::gui::common::BaseViewervirtual; currentCamerasofa::gui::common::BaseViewerprotected; drawColourPicking(ColourPickingVisitor::ColourCode)sofa::gui::common::BaseViewerinlinevirtual; drawScene(void)=0sofa::gui::common::BaseViewerpure virtual; fitNodeBBox(sofa::core::objectmodel::BaseNode *)sofa::gui::common::BaseViewervirtual; fitObjectBBox(sofa::core::objectmodel::BaseObject *)sofa::gui::common::BaseViewervirtual; getBackgroundImage()sofa::gui::common::BaseViewer; getHeight()=0sofa::gui::common::BaseViewerpure virtual; getPickHandler()sofa::gui::common::BaseViewer; getScene()sofa::gui::common::BaseViewervirtual; getSceneFileName()sofa::gui::common::BaseViewervirtual; getView(sofa::type::Vec3 &pos, sofa::type::Quat< SReal > &ori) constsofa::gui::common::BaseViewervirtual; getWidth()=0sofa::gui::common::BaseViewerpure virtual; grootsofa::gui::common::BaseViewerprotected; initTexturesDonesofa::gui::common::BaseViewerprotected; load(void)sofa::gui::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer-members.html:973,config,configure,973,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_viewer-members.html,1,['config'],['configure']
Modifiability," a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""ArrudaBoyce"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::Name = ""ArrudaBoyce"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the cur",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html:1944,inherit,inherited,1944,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,1,['inherit'],['inherited']
Modifiability," activateNode(sofa::simulation::Node *, bool)sofa::gui::qt::RealGUIvirtualslot; appendToDataLogFile(QString)sofa::gui::qt::RealGUIprotectedslot; backgroundsofa::gui::qt::RealGUIprotected; backgroundImagesofa::gui::qt::RealGUIprotected; BaseGUI()sofa::gui::common::BaseGUIprotected; canBeDefaultGUI() constsofa::gui::common::BaseGUIinlinevirtual; centerWindow() overridesofa::gui::qt::RealGUIvirtual; changeViewer()sofa::gui::qt::RealGUIprotectedvirtualslot; clear()sofa::gui::qt::RealGUIvirtualslot; closeGUI() overridesofa::gui::qt::RealGUIvirtual; configDirectoryPathsofa::gui::common::BaseGUIprotectedstatic; configureGUI(sofa::simulation::NodeSPtr groot)sofa::gui::common::BaseGUIvirtual; CreateApplication(int _argc=0, char **_argv=nullptr)sofa::gui::qt::RealGUIprotectedstatic; createDisplayFlags(Node::SPtr root)sofa::gui::qt::RealGUIprotected; CreateGUI(const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr)sofa::gui::qt::RealGUIstatic; createViewer(const char *_viewerName, bool _updateViewerList=false)sofa::gui::qt::RealGUIvirtual; currentSimulation() overridesofa::gui::qt::RealGUIvirtual; currentTabsofa::gui::qt::RealGUIprotected; currentTabChanged(int index)sofa::gui::qt::RealGUIvirtualslot; displayComputationTime(bool)sofa::gui::qt::RealGUIvirtualslot; displayProflierWindow(bool)sofa::gui::qt::RealGUIvirtualslot; docBrowserVisibilityChanged(bool)sofa::gui::qt::RealGUIprotectedslot; dragEnterEvent(QDragEnterEvent *event) overridesofa::gui::qt::RealGUI; dropEvent(QDropEvent *event) overridesofa::gui::qt::RealGUI; dumpState(bool)sofa::gui::qt::RealGUIvirtualslot; editGnuplotDirectory()sofa::gui::qt::RealGUIvirtualslot; editRecordDirectory()sofa::gui::qt::RealGUIvirtualslot; emitIdle()sofa::gui::qt::RealGU",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html:784,config,configDirectoryPathsofa,784,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i-members.html,2,['config'],"['configDirectoryPathsofa', 'configureGUI']"
Modifiability," addOnPluginCleanupCallbacks(const std::string &key, std::function< void()> callback)sofa::helper::system::PluginManager; addOnPluginLoadedCallback(const std::string &key, std::function< void(const std::string &, const Plugin &)> callback)sofa::helper::system::PluginManager; checkDuplicatedPlugin(const Plugin &plugin, const std::string &pluginPath)sofa::helper::system::PluginManager; cleanup()sofa::helper::system::PluginManager; findPlugin(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, int maxRecursiveDepth=3)sofa::helper::system::PluginManager; getDefaultSuffix()sofa::helper::system::PluginManagerstatic; getEntryFromPlugin(const Plugin *plugin, Entry &entry)sofa::helper::system::PluginManagerinline; getInstance()sofa::helper::system::PluginManagerstatic; getPlugin(const std::string &plugin, const std::string &=getDefaultSuffix(), bool=true)sofa::helper::system::PluginManager; getPluginByName(const std::string &pluginName)sofa::helper::system::PluginManager; getPluginMap()sofa::helper::system::PluginManagerinline; GetPluginNameFromPath(const std::string &pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:572,plugin,plugin,572,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,5,['plugin'],"['plugin', 'pluginName', 'pluginPath']"
Modifiability," advancedOperationssofa::gui::qt::QInciseOperationprotected; advancedOptionssofa::gui::qt::QInciseOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QInciseOperationinlinevirtual; sofa::gui::common::InciseOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishCutsofa::gui::qt::QInciseOperationprotected; finishIncisionsofa::gui::qt::QInciseOperation; getCompleteIncision() overridesofa::gui::qt::QInciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() const overridesofa::gui::qt::QInciseOperationvirtual; getKeepPoint() overridesofa::gui::qt::QInciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() const overridesofa::gui::qt::QInciseOperationvirtual; getSnapingValue() const overridesofa::gui::qt::QInciseOperationvirtual; InciseOperation()sofa::gui::common::InciseOperationinline; incisionMethodChoiceGroupsofa::gui::qt::QInciseOperationprotected; keepPointsofa::gui:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html:415,config,configure,415,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," advancedOptionssofa::gui::qt::QTopologyOperationprotected; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, common::MOUSE_BUTTON b) overridesofa::gui::qt::QTopologyOperationinlinevirtual; sofa::gui::common::TopologyOperation::configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() const overridesofa::gui::qt::QTopologyOperationvirtual; getTopologicalOperation() const overridesofa::gui::qt::QTopologyOperationvirtual; getVolumicMesh() const overridesofa::gui::qt::QTopologyOperationvirtual; mbsettingsofa::gui::common::Operationprotected; meshType1sofa::gui::qt::QTopologyOperationprotected; meshType2sofa::gui::qt::QTopologyOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; operationChoicesofa::gui::qt::QTopologyOperationprotected; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QTopologyOperat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html:361,config,configure,361,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_topology_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," affine transformation (for rigid) More...;  ; Data< Vec3 > d_translation;  Translation Matrix of affine transformation. More...;  ; Data< bool > d_drawConstrainedPoints;  Draw constrained points. More...;  ; VecCoord x0;  initial constrained DOFs position More...;  ; VecCoord xf;  final constrained DOFs position More...;  ; VecCoord meshPointsX0;  initial mesh DOFs position More...;  ; VecCoord meshPointsXf;  final mesh DOFs position More...;  ; SingleLink< AffineMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const auto CoordSize = Coord::total_size;  . Protected Attr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:3027,inherit,inherited,3027,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RuleBasedContactManager ();  ;  ~RuleBasedContactManager () override;  ; std::string replaceVariables (std::string response);  ;  Protected Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse;  CollisionResponse ();  ;  ~CollisionResponse () override=default;  ; void changeInstance (Instance inst) override;  ; void contactCreationError (std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed);  Write messages in stringstream in case a contact failed to be created. More...;  ; void createNewContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  Create contacts if it has not been created before. More...;  ; void removeInactiveContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  ; void setNumberOfContacts () const;  ;  Protected Member Functions inherited from sofa::core::collision::ContactManager;  ContactManager ();  Constructor. More...;  ;  ~ContactManager () override;  Destructor. More...;  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:14108,inherit,inherited,14108,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,1,['inherit'],['inherited']
Modifiability," aliases) More...;  . Public Member Functions;  SOFA_CLASS (TopologicalChangeProcessor, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void readDataFile ();  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void setTime (double time);  ; void processTopologicalChanges ();  ; void processTopologicalChanges (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void updateTriangleIncisionInformation ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html:6807,inherit,inherited,6807,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,1,['inherit'],['inherited']
Modifiability," all members . sofa::gl::component::shader::OglIntVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglIntVariable:. [legend]; Detailed Description; SINGLE INT VARIABLE . Public Member Functions;  SOFA_CLASS (OglIntVariable, OglVariable< int >);  ;  OglIntVariable ();  ; virtual ~OglIntVariable ();  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< int >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const int &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:1255,variab,variable,1255,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,1,['variab'],['variable']
Modifiability," all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  UncoupledConstraintCorrection (sofa::core::behavior::MechanicalState< DataTypes > *mm=nullptr);  ; virtual ~UncoupledConstraintCorrection ();  ; void computeDx (const Data< VecDeriv > &f, VecDeriv &x);  Compute dx correction from motion space force vector. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  ConstraintCorrection (MechanicalState< DataTypes > *ms=nullptr);  Default Constructor. More...;  ;  ~ConstraintCorrection () override=default;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:17423,inherit,inherited,17423,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,2,['inherit'],['inherited']
Modifiability," all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  LinearSolverConstraintCorrection (sofa::core::behavior::MechanicalState< DataTypes > *mm=nullptr);  ;  ~LinearSolverConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  ConstraintCorrection (MechanicalState< DataTypes > *ms=nullptr);  Default Constructor. More...;  ;  ~ConstraintCorrection () override=default;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:13102,inherit,inherited,13102,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,2,['inherit'],['inherited']
Modifiability," an ID for a variable in our shader. More...;  ; GLint GetAttributeVariable (std::string strVariable);  This returns an ID for an attribute variable in our shader. More...;  ; void Release ();  This releases our memory for our shader. More...;  . bool IsReady () const;  ; GLhandleARB GetProgram () const;  ; std::string GetShaderFileName (GLint type) const;  ; std::string GetShaderString (GLint type) const;  ; std::string GetHeader () const;  ; bool IsSet (GLint type) const;  ; GLhandleARB GetShaderID (GLint type) const;  ; std::string GetVertexShaderFileName () const;  ; GLhandleARB GetVertexShaderID () const;  ; std::string GetFragmentShaderFileName () const;  ; GLhandleARB GetFragmentShaderID () const;  . void SetInt (GLint variable, int newValue);  ; void SetFloat (GLint variable, float newValue);  . void SetInt2 (GLint variable, int i1, int i2);  ; void SetInt3 (GLint variable, int i1, int i2, int i3);  ; void SetInt4 (GLint variable, int i1, int i2, int i3, int i4);  ; void SetFloat2 (GLint variable, float v0, float v1);  ; void SetFloat3 (GLint variable, float v0, float v1, float v2);  ; void SetFloat4 (GLint variable, float v0, float v1, float v2, float v3);  . void SetIntVector (GLint variable, GLsizei count, const GLint *value);  ; void SetIntVector2 (GLint variable, GLsizei count, const GLint *value);  ; void SetIntVector3 (GLint variable, GLsizei count, const GLint *value);  ; void SetIntVector4 (GLint variable, GLsizei count, const GLint *value);  ; void SetFloatVector (GLint variable, GLsizei count, const float *value);  ; void SetFloatVector2 (GLint variable, GLsizei count, const float *value);  ; void SetFloatVector3 (GLint variable, GLsizei count, const float *value);  ; void SetFloatVector4 (GLint variable, GLsizei count, const float *value);  . void SetMatrix2 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix3 (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);  ; void SetMatrix4 (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:2935,variab,variable,2935,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,6,['variab'],['variable']
Modifiability," and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html:3477,inherit,inherited,3477,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,26,['inherit'],['inherited']
Modifiability," and receive sensor variables of scene .scn. /control-actuators-and-receive-sensor-variables-of-scene-scn-legged-robot; ; SOFA - Topic: [SOLVED] Control actuators and receive sensor variables of scene .scn Legged Robot. /converting-the-stl-mesh-to-vtk-mesh; ; SOFA - Topic: [SOLVED] Converting the STL mesh to VTK mesh. /could-not-find-git-for-clone-of-sofapython3; ; SOFA - Topic: [SOLVED] could not find git for clone of SofaPython3. /could-not-read-value-for-data-field-position-and-segfault; ; SOFA - Topic: [SOLVED] “Could not read value for data field position” and segfault. /could-sofa-use-full-python-instead-of-being-embedded-in-xml-file-using-component; . /feed; ; [SOLVED] Could sofa use full Python instead of being embedded in XML file using component – SOFA. SOFA - Topic: [SOLVED] Could sofa use full Python instead of being embedded in XML file using component. /could-you-explain-the-difference-between-geomaigc-and-sensible-plugin; . /feed; ; [SOLVED] Could you explain the difference between Geomaigc and sensible plugin? – SOFA. SOFA - Topic: [SOLVED] Could you explain the difference between Geomaigc and sensible plugin?. /counting-number-of-nodes-in-contact; ; SOFA - Topic: [SOLVED] Counting number of nodes in contact. /cpp-controller; ; SOFA - Topic: [SOLVED] Cpp controller. /crashes-after-contact; ; SOFA - Topic: Crashes After Contact. /crash-in-carving-manager-when-using-a-triangular-surface-mesh; ; SOFA - Topic: Crash in Carving Manager when using a triangular surface mesh. /crash-in-collision-response-computation; ; SOFA - Topic: [SOLVED] Crash in collision response computation. /crash-ontetrahedron-cpp-example; ; SOFA - Topic: crash onTetrahedron.cpp example. /create-a-new-component-from-attachconstraint; ; SOFA - Topic: Create a new component from AttachConstraint. /create-a-software-exe-from-sofa; ; SOFA - Topic: Create a software exe from Sofa. /create-my-own-datatypes-for-template-components-in-sofa; ; SOFA - Topic: [SOLVED] Create my own ""DataTypes"" ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:282461,plugin,plugin,282461,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," are store in the array interface. More...;  ; Real computeRestQuadArea (const QuadID i) const;  Computes the initial area of quad no i and returns it. More...;  ; type::Vec< 3, double > computeQuadNormal (const QuadID ind_q) const;  Computes the normal vector of a quad indexed by ind_q (not normed) More...;  ; bool isQuadInPlane (const QuadID ind_q, const PointID ind_p, const type::Vec< 3, Real > &plane_vect) const;  Tests if a quad indexed by ind_q (and incident to the vertex indexed by ind_p) is included or not in the plane defined by (ind_p, plane_vect) More...;  ; bool isPointInQuad (const QuadID ind_q, const sofa::type::Vec< 3, Real > &p) const;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes));  ; Real computeEdgeLength (const EdgeID i) const;  computes the length of edge no i and returns it More...;  ; void computeEdgeLength (BasicArrayInterface< Real > &ai) const;  computes the edge length of all edges and stores it in the array interface More...;  ; Real computeRestEdgeLength (const EdgeID i) const;  computes the initial length of edge no i and returns it More...;  ; Real computeRestSquareEdgeLength (const EdgeID i) const;  computes the initial square length of edge no i and returns it More...;  ; void computeEdgeAABB (const EdgeID i, CPos &minCoord, CPos &maxCoord) const;  ; Coord computeEdgeCenter (const EdgeID i) const;  ; Coord computeEdgeDirection (const EdgeID i) const;  ; Coord computeRestEdgeDirection (const EdgeID i) const;  ; void getEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; void getRestEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; boo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:11870,inherit,inherited,11870,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,3,['inherit'],['inherited']
Modifiability," arrowSizeWidgetsofa::gui::qt::QAttachOperationprotected; AttachOperation(sofa::gui::component::AttachBodyButtonSetting::SPtr s=sofa::core::objectmodel::New< sofa::gui::component::AttachBodyButtonSetting >())sofa::gui::common::AttachOperationinline; buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QAttachOperationvirtual; sofa::gui::common::AttachOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::AttachOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::AttachOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getArrowSize() constsofa::gui::common::AttachOperationinline; getDescription()sofa::gui::common::AttachOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getShowFactorSize() constsofa::gui::common::AttachOperationinline; getStiffness() constsofa::gui::common::AttachOperationinline; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; Q",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html:547,config,configure,547,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_attach_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< TetrahedronInfo > elems;  ; const sofa::core::topology::BaseMeshTopology::SeqTetrahedra * tetra;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * mstate;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; int m_topologyRevision;  internal revision number to check if topology has changed. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal > contactStiffness;  Default contact stiffness. More...;  ; Data< SReal > contactFriction;  Default contact friction (damping) coefficient. More...;  ; Data< SReal > contactRestitution;  Default contact coefficient of restitution. More...;  ; Data< std::string > contactResponse;  ; Data< sofa::type::RGBAColor > color;  color used to display the collision model if requested More...;  ; Data< std::set< int > > group;  ; Size size;  Number of collision elements. More...;  ; Data< Size > d_numberOfContacts;  number of contacts attached to the collision model More...;  ; SingleLink< CollisionModel, CollisionModel, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:2385,inherit,inherited,2385,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,1,['inherit'],['inherited']
Modifiability," be moved (i.e some/all of their vertices have just been moved) TetrahedraMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::TetrahedronID > tetrahedraAroundVertexMoved;  . Public Member Functions;  TetrahedraMoved_Removing (const sofa::type::vector< Topology::TetrahedronID > &tetrahedronShell);  ;  ~TetrahedraMoved_Removing () override;  ; const sofa::type::vector< Topology::TetrahedronID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ tetrahedraAroundVertexMoved. sofa::type::vector< Topology::TetrahedronID > sofa::core::topology::TetrahedraMoved_Removing::tetrahedraAroundVertexMoved. Constructor details. ◆ TetrahedraMoved_Removing(). sofa::core::topology::TetrahedraMoved_Removing::TetrahedraMoved_Removing ; (; const sofa::type::vector< Topology::TetrahedronID > & ; tetrahedronShell). inline . ◆ ~TetrahedraMoved_Removing(). sofa::core::topology::TetrahedraMoved_Removing::~TetrahedraMoved_Removing ; (; ). override . Function details. ◆ getIndexArray(). const sofa::type::vector< Topology::TetrahedronID >& sofa::core::topology::TetrahedraMoved_Removing::getIndexArray ; (; ); const. inline . sofacoretopologyTetrahedraMoved_Removing; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___removing.html:1563,inherit,inherited,1563,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___removing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_tetrahedra_moved___removing.html,1,['inherit'],['inherited']
Modifiability," begining with SOFA. /beginner-question-sofa-scenes-plugins-and-3rd-party-applications; ; SOFA - Topic: [Beginner Question] sofa scenes, plugins and 3rd party applications. /best-practice-for-setting-up-an-animation; ; SOFA - Topic: Best practice for setting up an animation?. /best-way-to-detect-and-quantify-interpenetration; ; SOFA - Topic: Best way to detect and quantify interpenetration. /best-way-to-implement-ligaments-attaching-finger-bones-together; ; SOFA - Topic: Best Way to Implement Ligaments Attaching Finger Bones Together. /bilateralinteractionconstraint-causes-unrealistic-motion; ; SOFA - Topic: BilateralInteractionConstraint causes unrealistic motion. /bilateralinteractionconstraint-reduces-gravity-by-100x; ; SOFA - Topic: [SOLVED] BilateralInteractionConstraint reduces gravity by 100x. /bilateralinteractionconstraint-with-caribou-solver; ; SOFA - Topic: BilateralInteractionConstraint with Caribou Solver. /binaries-generation; ; SOFA - Topic: Binaries generation. /binary-plugins; . /page; . /2; ; SOFA - Topic: [SOLVED] Binary Plugins. /7; ; SOFA - Topic: [SOLVED] Binary Plugins. SOFA - Topic: [SOLVED] Binary Plugins. /binary-release-linux-libs-libicui18n-so-55-missing; ; SOFA - Topic: [SOLVED] Binary release linux libs – libicui18n.so.55 missing. /bindings-python-for-new-data-types; . /feed; ; [SOLVED] Bindings python for new data types – SOFA. SOFA - Topic: [SOLVED] Bindings python for new data types. /biomechanical-modeling-and-surgical-simulation-research-and-development-engineer; . /page; . /4; ; SOFA - Topic: Biomechanical Modeling and Surgical Simulation Research and Development Engineer. SOFA - Topic: Biomechanical Modeling and Surgical Simulation Research and Development Engineer. /blood-flow-through-heart; ; SOFA - Topic: [SOLVED] Blood flow through heart. /boost-assertion-failed; ; SOFA - Topic: [SOLVED] Boost Assertion Failed. /boost-error; . /feed; ; [SOLVED] Boost error – SOFA. SOFA - Topic: [SOLVED] Boost error. /bounding-boxes-in-sofa; . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:261344,plugin,plugins,261344,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugins']
Modifiability," bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DisplacementMatrixEngine, DataTypes), SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4));  ;  DisplacementMatrixEngine ();  DisplacementMatrixEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >;  SOFA_CLASS (SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4), sofa::core::DataEngine);  ;  DisplacementTransformEngine ();  DisplacementTransformEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:2494,variab,variables,2494,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['variab'],['variables']
Modifiability," bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::Constraint< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:17434,inherit,inherited,17434,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability," bool=true);  ; Plugin * getPluginByName (const std::string &pluginName);  ; template<typename Entry > ; bool getEntryFromPlugin (const Plugin *plugin, Entry &entry);  ; void readFromIniFile (const std::string &path);  ; void readFromIniFile (const std::string &path, type::vector< std::string > &listLoadedPlugins);  ; void writeToIniFile (const std::string &path);  ; void addOnPluginLoadedCallback (const std::string &key, std::function< void(const std::string &, const Plugin &)> callback);  ; void addOnPluginCleanupCallbacks (const std::string &key, std::function< void()> callback);  ; void removeOnPluginLoadedCallback (const std::string &key);  ; void removeOnPluginCleanupCallbacks (const std::string &key);  . Static Public Member Functions; static PluginManager & getInstance ();  ; static std::string getDefaultSuffix ();  ; static std::string GetPluginNameFromPath (const std::string &pluginPath);  . Friends; std::ostream & operator<< (std::ostream &os, const PluginManager &pluginManager);  ; std::istream & operator>> (std::istream &in, PluginManager &pluginManager);  . Attribute details. ◆ s_gui_postfix. std::string sofa::helper::system::PluginManager::s_gui_postfix = ""gui"". static . the postfix to gui plugin, default=""gui"" (e.g. myplugin_gui.so) . Function details. ◆ addOnPluginCleanupCallbacks(). void sofa::helper::system::PluginManager::addOnPluginCleanupCallbacks ; (; const std::string & ; key, . std::function< void()> ; callback . ). ◆ addOnPluginLoadedCallback(). void sofa::helper::system::PluginManager::addOnPluginLoadedCallback ; (; const std::string & ; key, . std::function< void(const std::string &, const Plugin &)> ; callback . ). ◆ checkDuplicatedPlugin(). bool sofa::helper::system::PluginManager::checkDuplicatedPlugin ; (; const Plugin & ; plugin, . const std::string & ; pluginPath . ). ◆ cleanup(). void sofa::helper::system::PluginManager::cleanup ; (; ). ◆ findPlugin(). std::string sofa::helper::system::PluginManager::findPlugin ; (; const std::strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:3013,plugin,pluginManager,3013,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,2,['plugin'],['pluginManager']
Modifiability," bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::component::playback::ReadTopology; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  CompareTopology ();  ;  Protected Member Functions inherited from sofa::component::playback::ReadTopology;  ReadTopology ();  ;  ~ReadTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:11876,inherit,inherited,11876,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,1,['inherit'],['inherited']
Modifiability," bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedTranslationProjectiveConstraint ();  ; virtual ~FixedTranslationProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:16655,inherit,inherited,16655,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,4,['inherit'],['inherited']
Modifiability," bool needInit;  . Public Member Functions;  SubsetContactMapper ();  ; void setCollisionModel (MCollisionModel *model);  ; MMechanicalState * createMapping (const char *name=""contactPoints"");  ; void cleanup ();  ; void resize (Size size);  ; Index addPoint (const Coord &P, Index index, Real &);  ; void update ();  ; void updateXfree ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; virtual ~BaseContactMapper ();  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; static BaseContactMapper< DataTypes > * Create (core::CollisionModel *model, const std::string &name=std::string(""PenalityContactForceField""));  ; static ContactMapper< TCollisionModel, DataTypes > * create (ContactMapper< TCollisionModel, DataTypes > *, core::CollisionModel *arg);  . Attribute details. ◆ child. template<class TCollisionModel , class DataTypes > . simulation::Node::SPtr sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >::child. ◆ mapping. template<class TCollisionModel , class DataTypes > . MMapping::SPtr sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >::mapping. ◆ model. template<class TCollisionModel , class DataTypes > . MCollisionModel* sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >::model. ◆ nbp. template<class TCollisionModel , class DataTypes > . Size sofa::component::collision::response::mapper::SubsetContactMapper< TCollisionModel, DataTypes >::nbp. ◆ needInit. template<class TCollisio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_subset_contact_mapper.html:1849,inherit,inherited,1849,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_subset_contact_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_subset_contact_mapper.html,1,['inherit'],['inherited']
Modifiability," box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord m_initialPoints;  ; bool m_updateMatrix;  the initial positions of the points More...;  ; std::unique_ptr< material::HyperelasticMaterial< DataTypes > > m_myMaterial;  the array that describes the complete material energy and its derivatives More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedronHyperelasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void setMaterialName (std::string materialName);  ; void setparameter (const SetParamet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html:4030,inherit,inherited,4030,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,3,['inherit'],['inherited']
Modifiability," box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad. More...;  ; sofa::type::vector< QuadsAroundVertex > m_quadsAroundVertex;  for each vertex provides the set of quads adjacent to that vertex. More...;  ; sofa::type::vector< QuadsAroundEdge > m_quadsAroundEdge;  for each edge provides the set of quads adjacent to that edge. More...;  ; bool m_quadTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:3562,inherit,inherited,3562,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; cptsofa::gui::common::InciseOperationprotected; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::InciseOperationvirtual; endOperation() overridesofa::gui::common::InciseOperationvirtual; execution() overridesofa::gui::common::InciseOperationvirtual; finishIncisionsofa::gui::common::InciseOperationprotected; getCompleteIncision()sofa::gui::common::InciseOperationinlinevirtual; getDescription()sofa::gui::common::InciseOperationinlinestatic; getId()sofa::gui::common::Operationinline; getIncisionMethod() constsofa::gui::common::InciseOperationinlinevirtual; getKeepPoint()sofa::gui::common::InciseOperationinlinevirtual; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getSnapingBorderValue() constsofa::gui::common::InciseOperationinlinevirtual; getSnapingValue() constsofa::gui::common::InciseOperationinlinevirtual; InciseOperation()sofa::gui::common::InciseOperationinline; keepPointsofa::gui::common::InciseOperationprotected; mbsettingsofa::gui::common::Operationprotected; methodsofa::gui::common::InciseOperationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html:304,config,configure,304,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," buttonsofa::gui::common::Operationprotected; configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configure(PickHandler *picker, sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p)sofa::gui::common::Operationvirtual; createPerformer()sofa::gui::common::Operationvirtual; defaultPerformerType()sofa::gui::common::Operationinlinevirtual; end() overridesofa::gui::common::TopologyOperationvirtual; endOperation() overridesofa::gui::common::TopologyOperationvirtual; execution() overridesofa::gui::common::TopologyOperationvirtual; firstClicksofa::gui::common::TopologyOperationprotected; getDescription()sofa::gui::common::TopologyOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; getScale() constsofa::gui::common::TopologyOperationinlinevirtual; getTopologicalOperation() constsofa::gui::common::TopologyOperationinlinevirtual; getVolumicMesh() constsofa::gui::common::TopologyOperationinlinevirtual; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; scalesofa::gui::common::TopologyOperationprotected; setScale(double s)sofa::gui::common::TopologyOperationinline; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; setTopologicalOperation(int m)sofa::gui::common::TopologyOperationinline; setVolumicM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html:308,config,configure,308,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html:3358,inherit,inherited,3358,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,1,['inherit'],['inherited']
Modifiability," called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:2651,inherit,inherited,2651,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['inherit'],['inherited']
Modifiability," called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::LinearSolverAccessor;  LinearSolverAccessor (LinearSolver *linearSolver=nullptr);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ cpt. unsigned int sofa::component::odesolver::backward::NewmarkImplicitSolver::cpt. protected . ◆ d_beta. Data<SReal> sofa::component::odesolver::backward::NewmarkImplicitSolver::d_beta. Newmark scheme beta coefficient. . ◆ d_gamma. Data<SRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:15573,inherit,inherited,15573,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['inherit'],['inherited']
Modifiability," called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::LinearSolverAccessor;  LinearSolverAccessor (LinearSolver *linearSolver=nullptr);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_firstOrder. Data<bool> sofa::component::odesolver::backward::EulerImplicitSolver::d_firstOrder. Use backward Euler scheme for first order ODE system, which means that only the first derivative of the DOFs (state) appears in the equation. Hi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:16308,inherit,inherited,16308,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['inherit'],['inherited']
Modifiability," called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::LinearSolverAccessor;  LinearSolverAccessor (LinearSolver *linearSolver=nullptr);  . Attribute details. ◆ cpt. int sofa::component::odesolver::backward::VariationalSymplecticSolver::cpt. ◆ d_computeHamiltonian. Data<bool> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_computeHamiltonian. Compute hamiltonian. . ◆ d_explicit. Data<bool> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_explicit. Use explicit integration scheme. . ◆ d_fileName. Data<std::string> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_fileName. File name where kinetic and potential energies are saved in a CSV file. . ◆ d_hamiltonianEnergy. Data<SReal> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_hamiltonianEnergy. hamiltonian energy . ◆ d_newtonError. Data<SReal> sofa::component::odesolver::backward::VariationalSymplecticSolver::d_newtonError. Error tolerance for Newton iterations. . ◆ d_newtonSteps. Data<unsigned int> sofa::component::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:16779,inherit,inherited,16779,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,1,['inherit'],['inherited']
Modifiability," called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::LinearSolverAccessor;  LinearSolverAccessor (LinearSolver *linearSolver=nullptr);  . Attribute details. ◆ d_absolute_correction_tolerance_threshold. Data<SReal> sofa::component::odesolver::backward::StaticSolver::d_absolute_correction_tolerance_threshold. protected . Convergence criterion: The newton iterations will stop when the norm |du| is smaller than this threshold. . ◆ d_absolute_residual_tolerance_threshold. Data<SReal> sofa::component::odesolver::backward::StaticSolver::d_absolute_residual_tolerance_threshold. protected . Convergence criterion: The newton iterations will stop when the norm of the residual |R| is smaller than this threshold. Use a negative value to disable this criterion. . ◆ d_newton_iterations. Data<unsigned> sofa::component::odesolver::backward::StaticSolver::d_newton_iterations. protected . Number of newton iterations between each load increments (normally, one load increment per simulation time-step. . ◆ d_relative_correction_tolerance_threshold. Data<SReal> sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:15969,inherit,inherited,15969,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['inherit'],['inherited']
Modifiability," change is disable. More...;  ; void setViewToDirty ();  . Protected Member Functions; void expandPath (const std::string &path);  ; void getExpandedNodes (QTreeWidgetItem *item, std::vector< std::string > &);  ; void collapseNode (QTreeWidgetItem *item);  ; void expandNode (QTreeWidgetItem *item);  ; void transformObject (sofa::simulation::Node *node, double dx, double dy, double dz, double rx, double ry, double rz, double scale)=delete;  ; bool isNodeErasable (core::objectmodel::BaseNode *node);  ; std::list< core::objectmodel::BaseNode * > collectNodesToChange (core::objectmodel::BaseNode *node);  . Signals; void Close ();  ; void Lock (bool);  ; void RequestSaving (sofa::simulation::Node *);  ; void RequestExportOBJ (sofa::simulation::Node *node, bool exportMTL);  ; void RequestActivation (sofa::simulation::Node *, bool);  ; void RequestSleeping (sofa::simulation::Node *, bool);  ; void RootNodeChanged (sofa::simulation::Node *newroot, const char *newpath);  ; void NodeRemoved ();  ; void Updated ();  ; void NodeAdded ();  ; void focusChanged (sofa::core::objectmodel::BaseObject *);  ; void focusChanged (sofa::core::objectmodel::BaseNode *);  ; void dataModified (QString);  ;  Signals inherited from sofa::gui::qt::SofaSceneGraphWidget; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Public Slots; void Export ();  ; void CloseAllDialogs ();  ; void UpdateOpenedDialogs ();  ; void ExpandRootNodeOnly ();  . Protected Slots; void SaveNode ();  ; void exportOBJ ();  ; void collapseNode ();  ; void expandNode ();  ; void modifyUnlock (void *Id);  ; void RemoveNode ();  ; void Modify ();  ; void openInEditor ();  ; void openInstanciation ();  ; void openImplementation ();  ; void copyFilePathToClipBoard ();  ; void DeactivateNode ();  ; void ActivateNode (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:3303,inherit,inherited,3303,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,1,['inherit'],['inherited']
Modifiability," char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DynamicSparseGridTopologyModifier ();  ;  ~DynamicSparseGridTopologyModifier () override;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier;  HexahedronSetTopologyModifier ();  ;  ~HexahedronSetTopologyModifier () override;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; virtual void removeHexahedraWarning (sofa::type::vector< HexahedronID > &hexahedra);  Sends a message to warn that some hexahedra are about to be deleted. More...;  ; void addQuadsProcess (const sofa::type::vector< Quad > &quads) override;  Actually Add some quads to this topology. More...;  ; void rem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:17706,inherit,inherited,17706,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,1,['inherit'],['inherited']
Modifiability," check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_loadedPlugins. sofa::core::objectmodel::Data<type::vector<std::string> > sofa::simulation::RequiredPlugin::d_loadedPlugins. List of the plugins that are have been loaded. . ◆ d_pluginName. sofa::core::objectmodel::Data<type::vector<std::string> > sofa::simulation::RequiredPlugin::d_pluginName. plugin name (or several names if you need to load different plugins or a plugin with several alternate names) . ◆ d_requireAll. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireAll. Display an error message if any plugin names failed to be loaded. . ◆ d_requireOne. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireOne. Display an error message if no plugin names were successfully loaded. . ◆ d_stopAfterFirstNameFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstNameFound. Stop after the first plugin name that is loaded successfully. . ◆ d_stopAfterFirstSuffixFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstSuffixFound. For each plugin name, stop after the first suffix that is loaded successfully. . ◆ d_suffixMap. sofa::core::objectmodel::Data<type::vector<type::fixed_array<std::string,2> > > sofa::simulation::RequiredPlugin::d_suffixMap. standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix . Constructor details. ◆ RequiredPlugin(). sofa::simulation::RequiredPlugin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:14629,plugin,plugin,14629,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['plugin'],['plugin']
Modifiability," class TOut>; class sofa::component::mapping::nonlinear::SquareMapping< TIn, TOut >; x -> x²; AuthorMatthieu Nesme ; Date2016 . Static Public Attributes; static constexpr auto Nin = In::deriv_total_size;  ;  Static Public Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; static constexpr auto Nin;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(SquareMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, false));  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void applyJ (const core::MechanicalParams *mparams, DataVecDeriv_t< Out > &out, const DataVecDeriv_t< In > &in) final;  ; void applyJT (const core::MechanicalParams *mparams, DataVecDeriv_t< In > &out, const DataVecDeriv_t< Out > &in) final;  ; void applyJT (const core::ConstraintParams *cparams, DataMatrixDeriv_t< In > &out, const DataMatrixDeriv_t< Out > &in) final;  ; void applyDJT (const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) final;  Accumulate a change of parent force due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; const linearalgebra::BaseMatrix * getK () final;  ; const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ; void updateK (c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:1384,inherit,inherited,1384,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['inherit'],['inherited']
Modifiability," class sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an TriangleSet. . Protected Attributes; bool initializedCubatureTables;  ; Data< bool > showTriangleIndices;  Debug : view Triangle indices. More...;  ; Data< bool > _draw;  if true, draw the triangles in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGBA code color used to draw triangles. More...;  ; Data< bool > _drawNormals;  if true, draw the triangles in the topology More...;  ; Data< SReal > _drawNormalLength;  Fiber length visualisation. More...;  ; Data< bool > p_recomputeTrianglesOrientation;  if true, will recompute triangles orientation according to normals More...;  ; Data< bool > p_flipNormals;  ; NumericalIntegrationDescriptor< Real, 3 > triangleNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html:1556,inherit,inherited,1556,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,1,['inherit'],['inherited']
Modifiability," clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Protected Attributes inherited from sofa::gui::common::StartNavigationOperation; sofa::gui::component::StartNavigationButtonSetting::SPtr setting;  ;  Protected Attributes inherited from sofa::gui::common::Operation; PickHandler * pickHandle;  ; sofa::component::setting::MouseButtonSetting::SPtr mbsetting;  ; MOUSE_BUTTON button;  ;  Static Public Member Functions inherited from sofa::gui::common::StartNavigationOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::StartNavigationOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  ;  Public Slots inherited from sofa::gui::qt::QMouseOperation; void WidgetDirty (bool);  . Constructor details. ◆ QStartNavigationOperation(). sofa::gui::qt::QStartNavigationOperation::QStartNavigationOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QStartNavigationOperation::configure ; (; common::PickHandler * ; picker, . sofa::component::setting::MouseButtonSetting * ; button . ). overridevirtual . Reimplemented from sofa::gui::common::Operation. sofaguiqtQStartNavigationOperation; Generated on Mon Nov 11 2024 03:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html:1645,inherit,inherited,1645,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation.html,8,"['config', 'inherit']","['configurePerformer', 'inherited']"
Modifiability, communication. /communicationcontroller; . /feed; ; #communicationcontroller – SOFA. SOFA - Topic Tag: #communicationcontroller. /compile; . /feed; ; compile – SOFA. SOFA - Topic Tag: compile. /compliance; . /feed; ; compliance – SOFA. SOFA - Topic Tag: compliance. /compliant; . /feed; ; Compliant – SOFA. SOFA - Topic Tag: Compliant. /complie-softrobots; . /feed; ; Complie SoftRobots – SOFA. SOFA - Topic Tag: Complie SoftRobots. /component; . /feed; ; component – SOFA. SOFA - Topic Tag: component. /component-declaration; . /feed; ; component declaration – SOFA. SOFA - Topic Tag: component declaration. /components; . /feed; ; Components – SOFA. SOFA - Topic Tag: Components. /computation-time; . /feed; ; Computation Time – SOFA. SOFA - Topic Tag: Computation Time. /comp-vtu-precomputedconstraintcorrection-dentistry-tongue; . /feed; ; .comp .vtu PrecomputedConstraintCorrection dentistry tongue – SOFA. SOFA - Topic Tag: .comp .vtu PrecomputedConstraintCorrection dentistry tongue. /configurations; . /feed; ; configurations – SOFA. SOFA - Topic Tag: configurations. /connect; . /feed; ; connect – SOFA. SOFA - Topic Tag: connect. /connect-sofa; . /feed; ; Connect SOFA – SOFA. SOFA - Topic Tag: Connect SOFA. /constraint; . /feed; ; constraint – SOFA. SOFA - Topic Tag: constraint. /constraint-forces; . /feed; ; Constraint Forces – SOFA. SOFA - Topic Tag: Constraint Forces. /constraintresolution-h; . /feed; ; ConstraintResolution.h – SOFA. SOFA - Topic Tag: ConstraintResolution.h. /constraints; . /feed; ; constraints – SOFA. SOFA - Topic Tag: constraints. /constraint-solver; . /feed; ; Constraint Solver – SOFA. SOFA - Topic Tag: Constraint Solver. /contact; . /feed; ; contact – SOFA. SOFA - Topic Tag: contact. /contact-force; . /feed; ; contact force – SOFA. SOFA - Topic Tag: contact force. /contactlistener; . /feed; ; contactlistener – SOFA. SOFA - Topic Tag: contactlistener. /contain; . /feed; ; contain – SOFA. SOFA - Topic Tag: contain. /continuum-robots-beam-adaptater-cons,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:436432,config,configurations,436432,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['config'],['configurations']
Modifiability," configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; Coord typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; execute()sofa::gui::component::performer::FixParticlePerformer< DataTypes >virtual; fixationssofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; FixParticlePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPoints(const BodyPicked &b, type::vector< unsigned int > &points, typename DataTypes::Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >protected; GetFixationPointsOnModelFunction typedefsofa::gui::component::performer::FixParticlePerformer< DataTypes >; getFixationPointsSphere(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getFixationPointsTriangle(sofa::core::sptr< sofa::core::CollisionModel > model, const Index idx, type::vector< Index > &points, Coord &fixPoint)sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; getMapInstance()sofa::gui::component::performer::FixParticlePerformer< DataTypes >inlinestatic; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html:323,config,configure,323,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_fix_particle_performer-members.html,1,['config'],['configure']
Modifiability," configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; cptsofa::gui::component::performer::InciseAlongPathPerformerprotected; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::InteractionPerformerinlinestatic; currentMethodsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; draw(const core::visual::VisualParams *vparams) overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; execute() overridesofa::gui::component::performer::InciseAlongPathPerformervirtual; finishIncisionsofa::gui::component::performer::InciseAlongPathPerformerConfigurationprotected; firstBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; firstIncisionBodysofa::gui::component::performer::InciseAlongPathPerformerprotected; fullcutsofa::gui::component::performer::InciseAlongPathPerformerprotected; getFirstIncisionBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; getLastBodyPicked()sofa::gui::component::performer::InciseAlongPathPerformerinline; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InciseAlongPathPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InciseAlongPathPerformerinline; Index typedefsofa::gui::component::performer::InciseAlongPathPerformer; initialNbPointssofa::gui::component::performer::InciseAlongPathPerformerprotected; initialNbTrianglessofa::gui::component::performer::InciseAlongPathPerformerprotected; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; Inter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html:305,config,configure,305,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer-members.html,1,['config'],['configure']
Modifiability," configure(sofa::component::setting::MouseButtonSetting *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; create(RealObject *, BaseMouseInteractor *interactor)sofa::gui::component::performer::TInteractionPerformer< DataTypes >inlinestatic; createElementList()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; draw(const core::visual::VisualParams *vparams)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; end()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; execute()sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >virtual; firstClicksofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getElementInZone(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; getNeighboorElements(VecIds &elementsToTest)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; handleEvent(core::objectmodel::Event *)sofa::gui::component::performer::InteractionPerformerinlinevirtual; InteractionPerformer(BaseMouseInteractor *i)sofa::gui::component::performer::InteractionPerformerinline; InteractionPerformerFactory typedefsofa::gui::component::performer::InteractionPerformer; m_freezePerformersofa::gui::component::performer::InteractionPerformer; m_interactorsofa::gui::component::performer::InteractionPerformer; pickedsofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >protected; RemovePrimitivePerformer(BaseMouseInteractor *i)sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >; RemovePrimitivePerformerConfigurati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html:331,config,configure,331,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_remove_primitive_performer-members.html,1,['config'],['configure']
Modifiability," connected to an input one (i.e. which can be reached by topological links) More...;  ; const VecTetraID getElementAroundElement (TetraID elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; const VecTetraID getElementAroundElements (VecTetraID elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; const VecTetraID getOppositeElement (TetraID elemID);  Returns the set of element indices adjacent to a given element with direct link from n-1 order element type (i.e triangle for tetrahedron) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyContainer;  SOFA_CLASS (TriangleSetTopologyContainer, EdgeSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; bool hasTriangles () const;  ; bool hasEdgesInTriangle () const;  ; bool hasTrianglesAroundVertex () const;  ; bool hasTrianglesAroundEdge () const;  ; bool hasBorderElementLists () const;  ; void createElementsOnBorder ();  : Create element lists which are on topology border: More...;  ; void reOrientateTriangle (TriangleID id) override;  Will change order of vertices in triangle: t[1] <=> t[2]. More...;  ; sofa::geometry::ElementType getTopologyType () const override;  Returns the type of the topology. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addEdge (Index, Index) override;  ; void addTriangle (Index a, Index b, Index c) override;  ; const SeqTrian",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:12952,variab,variables,12952,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['variab'],['variables']
Modifiability," const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html:4886,variab,variables,4886,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,4,['variab'],['variables']
Modifiability," const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ProjectiveTransformEngine ();  ;  ~ProjectiveTransformEngine () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html:13582,inherit,inherited,13582,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_projective_transform_engine.html,1,['inherit'],['inherited']
Modifiability," const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  CollisionResponse ();  ;  ~CollisionResponse () override=default;  ; void changeInstance (Instance inst) override;  ; void contactCreationError (std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed);  Write messages in stringstream in case a contact failed to be created. More...;  ; void createNewContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  Create contacts if it has not been created before. More...;  ; void removeInactiveContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  ; void setNumberOfContacts () const;  ;  Protected Member Functions inherited from sofa::core::collision::ContactManager;  ContactManager ();  Constructor. More...;  ;  ~ContactManager () override;  Destructor. More...;  ; void changeInstance (Instance inst) over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:13647,inherit,inherited,13647,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['inherit'],['inherited']
Modifiability," const Quat &orientation);  ; virtual void internalUpdate ();  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void computeZ ();  ; virtual bool isStereo ();  ; virtual void setCurrentSide (Side);  ; virtual Side getCurrentSide ();  ; virtual void setStereoEnabled (bool);  ; virtual bool getStereoEnabled ();  ; virtual void setStereoMode (StereoMode);  ; virtual StereoMode getStereoMode ();  ; virtual void setStereoStrategy (StereoStrategy);  ; virtual StereoStrategy getStereoStrategy ();  ; virtual void setStereoShift (double);  ; virtual double getStereoShift ();  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeClippingPlane (const core::visual::VisualParams *vp, double &zNear, double &zFar);  ; virtual void drawCamera (const core::visual::VisualParams *);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html:4858,inherit,inherited,4858,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,1,['inherit'],['inherited']
Modifiability," const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  OglShaderMacro ();  ;  ~OglShaderMacro () override;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:10312,inherit,inherited,10312,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,1,['inherit'],['inherited']
Modifiability," const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMap",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:16650,inherit,inherited,16650,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,1,['inherit'],['inherited']
Modifiability," const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  MultiMapping ();  Constructor. More...;  ;  ~MultiMapping () override;  Destructor. More...;  ; void getVecInCoord (const MultiVecCoordId id, type::vector< InDataVecCoord * > &v) const;  ; void getConstVecInCoord (const ConstMultiVecC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html:16688,inherit,inherited,16688,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,1,['inherit'],['inherited']
Modifiability," const VecElement * _indexedElements;  ; bool needUpdateTopology;  ; TetrahedronFEMForceFieldInternalData< DataTypes > data;  ; Real m_restVolume;  ; sofa::helper::ColorMap * m_VonMisesColorMap;  ; Transformation InvalidTransform;  ; type::fixed_array< Coord, 4 > InvalidCoords;  ; MaterialStiffness InvalidMaterialStiffness;  ; StrainDisplacement InvalidStrainDisplacement;  ; std::vector< sofa::type::Vec3 > m_renderedPoints;  ; std::vector< sofa::type::RGBAColor > m_renderedColors;  ; type::vector< type::fixed_array< Coord, 4 > > _rotatedInitialElements;  The initials positions in its frame. More...;  ; type::vector< Transformation > _initialRotations;  ; type::vector< unsigned int > _rotationIdx;  ; type::vector< Transformation > _initialTransformation;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(TetrahedronFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:8336,inherit,inherited,8336,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,3,['inherit'],['inherited']
Modifiability," const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseLoader ();  ;  ~BaseLoader () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html:10404,inherit,inherited,10404,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,1,['inherit'],['inherited']
Modifiability," const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PipelineImpl ();  ;  ~PipelineImpl () override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ; virtual void doCollisionReset ()=0;  Remove collision response from last step. More...;  ; virtual void doCollisionDetection (const sofa::type::vector< core::CollisionModel * > &collisionModels)=0;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; virtual void doCollisionResponse ()=0;  Add collision response in the simulation graph. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:9870,inherit,inherited,9870,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['inherit'],['inherited']
Modifiability," const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  Vertex2Frame ();  ;  ~Vertex2Frame () override;  ; type::Quat< SReal > computeOrientation (const CPos &xAxis, const CPos &yAxis, const CPos &zAxis);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html:13629,inherit,inherited,13629,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,1,['inherit'],['inherited']
Modifiability," const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:11859,inherit,inherited,11859,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['inherit'],['inherited']
Modifiability," const float MIDDLE_INTERPOLATION [27][8];  ; static const int MIDDLE_AXES [27];  ; static const int FINE_ELEM_IN_COARSE_IN_ASS_FRAME [8][8];  ; static const float RIGID_STIFFNESS [8 *3][8 *3];  ;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >; static const float FINE_TO_COARSE [8][8][8];  ;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronCompositeFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(NonUniformHexahedronFEMForceFieldAndMass, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void findFinestChildren (type::vector< Index > &finestChildren, const Index elementIndice, int level=0);  ; void computeMechanicalMatricesDirectlyFromTheFinestToCoarse (ElementStiffness &K, ElementMass &M, const Index elementIndice);  ; void computeMechanicalMatricesRecursively (ElementStiffness &K, ElementMass &M, const Index elementIndice, int level);  ; void computeMechanicalMatricesRecursivelyWithRamifications (ElementStiffness &K, ElementMass &M, const Index elementIndice, int level);  ; void computeFinalWeights (const Weight &W, const Index coarseElementIndice, const Index elementIndice, int level);  multiply all weights for all levels and go to the finest level to obtain the final weights from the coarsest to the finest directly More...;  ; void computeFinalWeightsRamification (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:6378,variab,variables,6378,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['variab'],['variables']
Modifiability," const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; SReal getPZ (Index i) const override;  Returns the Z coordinate of the ith DOF. More...;  ; void addPoint ();  add one DOF in this topology (simply increment the number of DOF) More...;  ; void addPoints (const Size nPoints);  add a number of DOFs in this topology (simply increase the number of DOF according to this parameter) More...;  ; void removePoint ();  remove one DOF in this topology (simply decrement the number of DOF) More...;  ; void removePoints (const Size nPoints);  remove a number of DOFs in this topology (simply decrease the number of DOF according to this parameter) More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyContainer;  SOFA_CLASS2 (TopologyContainer, BaseTopologyObject, BaseMeshTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; const SeqEdges & getEdges () override;  ; const SeqTriangles & getTriangles () override;  ; const SeqQuads & getQuads () override;  ; const SeqTetrahedra & getTetrahedra () override;  ; const SeqHexahedra & getHexahedra () override;  ; int getRevision () const override;  Get the current revision of this mesh. More...;  ; const std::list< const TopologyChange * > & getChangeList () const;  ; const std::list< const TopologyChange * > & getStateChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataChangeList () const;  ; const Data< std::list< const TopologyChange * > > & getDataStateChangeList () const;  ; virtual void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange to the list. More...;  ; virtual void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:18071,inherit,inherited,18071,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,6,['inherit'],['inherited']
Modifiability," const std::string &path, const BaseLink *link);  . Protected Member Functions;  ContextObject ();  ;  ~ContextObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html:10092,inherit,inherited,10092,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,1,['inherit'],['inherited']
Modifiability," const std::string &path, const BaseLink *link);  . Protected Member Functions;  Vertex2Frame ();  ;  ~Vertex2Frame () override;  ; type::Quat< SReal > computeOrientation (const CPos &xAxis, const CPos &yAxis, const CPos &zAxis);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html:14298,inherit,inherited,14298,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_vertex2_frame.html,1,['inherit'],['inherited']
Modifiability," const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedRotationProjectiveConstraint ();  ;  ~FixedRotationProjectiveConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html:14640,inherit,inherited,14640,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,4,['inherit'],['inherited']
Modifiability," const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  HexahedronSetGeometryAlgorithms ();  ; virtual ~HexahedronSetGeometryAlgorithms ();  ; void defineHexahedronCubaturePoints ();  ; bool mustComputeBBox () const override;  Return true if the visibility parameters are showing the object in any way whatsoever, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >;  QuadSetGeometryAlgorithms ();  ; virtual ~QuadSetGeometryAlgorithms ();  ; bool mustComputeBBox () const override;  Return true if the visibility parameters are showing the object in any way whatsoever, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >;  EdgeSetGeometryAlgorithms ();  ;  ~EdgeSetGeometryAlgorithms () override;  ; void defineEdgeCubaturePoints ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  PointSetGeometryAlgorithms ();  ;  ~PointSetGeometryAlgorithms () override;  ;  Protected Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  GeometryAlgorithms ();  Constructor. More...;  ;  ~GeometryAlgorithms () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:24168,inherit,inherited,24168,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['inherit'],['inherited']
Modifiability," const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergeMeshes ();  ;  ~MergeMeshes () override;  ; void createInputMeshesData (int nb=-1);  ; template<class T > ; void createInputDataVector (unsigned int nb, type::vector< Data< T > * > &vf, std::string name, std::string help);  ; template<class T > ; void deleteInputDataVector (type::vector< Data< T > * > &vf);  ; template<class T > ; void mergeInputDataVector (unsigned int nb, Data< T > &outF, const type::vector< Data< T > * > &inVF, const type::vector< Data< VecCoord > * > &inVFPos);  ; void mergeInputDataVector (unsigned int nb, Data< VecCoord > &outF, const type::vector< Data< VecCoord > * > &inVF);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html:14835,inherit,inherited,14835,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,1,['inherit'],['inherited']
Modifiability," const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; void defineTetrahedronCubaturePoints ();  ;  TriangleSetGeometryAlgorithms ();  ; virtual ~TriangleSetGeometryAlgorithms ();  ; bool mustComputeBBox () const override;  Return true if the visibility parameters are showing the object in any way whatsoever, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >;  EdgeSetGeometryAlgorithms ();  ;  ~EdgeSetGeometryAlgorithms () override;  ; void defineEdgeCubaturePoints ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >;  PointSetGeometryAlgorithms ();  ;  ~PointSetGeometryAlgorithms () override;  ;  Protected Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  GeometryAlgorithms ();  Constructor. More...;  ;  ~GeometryAlgorithms () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html:28319,inherit,inherited,28319,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,3,['inherit'],['inherited']
Modifiability," constraints, such as FixedProjectiveConstraint. More...;  ; static void solveConstraints (sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId acc);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_symplectic. Data<bool> sofa::component::odesolver::forward::EulerExplicitSolver::d_symplectic. If true (default), the velocities are updated before the positions and the method is symplectic, more robust. If false, the positions are updated before the velocities (standard Euler, less robust). . ◆ d_threadSafeVisitor. Data<bool> sofa::component::odesolver::forward::EulerExplicitSolver::d_threadSafeVisitor. If true, do not use realloc and free visitors in fw",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:16153,inherit,inherited,16153,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['inherit'],['inherited']
Modifiability," constsofa::gl::GLSLShaderinline; IsSet(GLint type) constsofa::gl::GLSLShader; LoadTextFile(const std::string &strFile)sofa::gl::GLSLShader; m_filelistenersofa::gl::GLSLShaderprotected; m_hProgramObjectsofa::gl::GLSLShaderprotected; m_hShaderContentssofa::gl::GLSLShaderprotected; m_hShaderssofa::gl::GLSLShaderprotected; Release()sofa::gl::GLSLShader; SetActiveShaderProgram(GLhandleARB s)sofa::gl::GLSLShaderstatic; SetFloat(GLint variable, float newValue)sofa::gl::GLSLShader; SetFloat2(GLint variable, float v0, float v1)sofa::gl::GLSLShader; SetFloat3(GLint variable, float v0, float v1, float v2)sofa::gl::GLSLShader; SetFloat4(GLint variable, float v0, float v1, float v2, float v3)sofa::gl::GLSLShader; SetFloatVector(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector2(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector3(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector4(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFragmentShaderFileName(const std::string &fileName)sofa::gl::GLSLShaderinline; SetFragmentShaderFromString(const std::string &string)sofa::gl::GLSLShaderinline; SetInt(GLint variable, int newValue)sofa::gl::GLSLShader; SetInt2(GLint variable, int i1, int i2)sofa::gl::GLSLShader; SetInt3(GLint variable, int i1, int i2, int i3)sofa::gl::GLSLShader; SetInt4(GLint variable, int i1, int i2, int i3, int i4)sofa::gl::GLSLShader; SetIntVector(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector2(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector3(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector4(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetMatrix2(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix2x3(GLint, GLsizei, GLboolean, const GLfloat *)sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html:2531,variab,variable,2531,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,1,['variab'],['variable']
Modifiability," core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:2821,inherit,inherited,2821,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,3,['inherit'],['inherited']
Modifiability," core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *matrix) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; virtual void projectResponse (const MechanicalParams *mparams, MultiVecDerivId dxId)=0;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const MechanicalParams *, linearalgebra::BaseVector *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void projectResponse (const Mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:6838,inherit,inherited,6838,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," core::MultiVecDerivId dv, core::ConstMultiVecDerivId correction) override;  ; void applyPredictiveConstraintForce (const core::ConstraintParams *cparams, core::MultiVecDerivId f, const linearalgebra::BaseVector *lambda) override;  ; MechanicalState< DataTypes > * getMState () const;  ; void setMState (MechanicalState< DataTypes > *_mstate);  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  SOFA_ABSTRACT_CLASS (BaseConstraintCorrection, objectmodel::BaseObject);  ; virtual bool isActive ();  ; virtual void rebuildSystem (SReal, SReal);  ; virtual void computeResidual (const core::ExecParams *, linearalgebra::BaseVector *);  ; virtual void getComplianceWithConstraintMerge (linearalgebra::BaseMatrix *, std::vector< int > &);  For multigrid approach => constraints are merged. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:9654,inherit,inherited,9654,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['inherit'],['inherited']
Modifiability," creation and modification, during top-down traversal. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; type::Vec6 getMomentum (const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; type::Vec6 getMomentum (const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; Read and write access functions in mass information; virtual const Real & getMassDensity ();  ; virtual const Real & getTotalMass ();  ; virtual void setVertexMass (sofa::type::vector< Real > vertexMass);  ; virtual void setMassDensity (Real massDensityValue);  ; virtual void setTotalMass (Real totalMass);  ; Check and standard initialization ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:10289,variab,variables,10289,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['variab'],['variables']
Modifiability," default value. More...;  ; std::string getValueTypeString () const override;  Get the name of the type of the value held in this Data. More...;  ; void operator= (const T &value);  ; bool copyValueFrom (const Data< T > *data);  ;  Data (const Data &)=delete;  ; Data & operator= (const Data &)=delete;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading strings. More...;  ; bool SOFA_CORE_API read (const std::string &str);  Specialization for reading booleans. More...;  ; bool read (const std::string &str);  Specialization for reading strings. More...;  ; bool read (const std::string &str);  Specialization for reading booleans. More...;  ; Simple edition and retrieval API; virtual T * beginEdit ();  ; virtual T * beginWriteOnly ();  ; virtual void endEdit ();  ; void setValue (const T &value);  ; const T & getValue () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:4554,inherit,inherited,4554,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['inherit'],['inherited']
Modifiability," defining the initialization process of the mass (0 : totalMass, 1 : massDensity, 2 : vertexMass) More...;  ; SingleLink< DiagonalMass< DataTypes, GeometricalTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; SingleLink< DiagonalMass< DataTypes, GeometricalTypes >, sofa::core::behavior::MechanicalState< GeometricalTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_geometryState;  Link to be set to the MechanicalObject associated with the geometry. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:3149,inherit,inherited,3149,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['inherit'],['inherited']
Modifiability," depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyModifier, EdgeSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void addTriangles (const sofa::type::vector< Triangle > &triangles);  add a set of triangles More...;  ; virtual void addTriangles (const sofa::type::vector< Triangle > &triangles, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  add a set of triangles More...;  ; void addTriangleProcess (Triangle t);  Effectively add a triangle to the topology. More...;  ; void removeItems (const sofa::type::vector< TriangleID > &items) override;  Generic method to remove a list of items. More...;  ; virtual void removeTriangles (const sofa::type::vector< TriangleID > &triangleIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints);  Remove a set of triangles. More...;  ; virtual void addRemoveTriangles (const sofa::Size nTri2Add, const sofa::type::vector< Triangle > &triangles2Add, const sofa::type::vector< TriangleID > &tr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:1968,variab,variables,1968,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['variab'],['variables']
Modifiability," description ; Implemented in sofa::simulation::SceneLoaderXML, and sofa::simulation::SceneLoaderPHP. ◆ load(). sofa::simulation::NodeSPtr sofa::simulation::SceneLoader::load ; (; const std::string & ; filename, . bool ; reload = false, . const std::vector< std::string > & ; sceneArgs = std::vector<std::string>(0) . ). load the file . ◆ notifyLoadingSceneAfter(). void sofa::simulation::SceneLoader::notifyLoadingSceneAfter ; (; sofa::simulation::NodeSPtr ; node, . SceneLoader * ; sceneLoader . ). staticprotected . ◆ notifyLoadingSceneBefore(). void sofa::simulation::SceneLoader::notifyLoadingSceneBefore ; (; SceneLoader * ; sceneLoader). staticprotected . ◆ notifyReloadingSceneAfter(). void sofa::simulation::SceneLoader::notifyReloadingSceneAfter ; (; sofa::simulation::NodeSPtr ; node, . SceneLoader * ; sceneLoader . ). staticprotected . ◆ notifyReloadingSceneBefore(). void sofa::simulation::SceneLoader::notifyReloadingSceneBefore ; (; SceneLoader * ; sceneLoader). staticprotected . ◆ removeListener(). void sofa::simulation::SceneLoader::removeListener ; (; Listener * ; l). static . removing a listener . ◆ syntaxForAddingRequiredPlugin(). bool sofa::simulation::SceneLoader::syntaxForAddingRequiredPlugin ; (; const std::string & ; pluginName, . const std::vector< std::string > & ; listComponents, . std::ostream & ; ss, . sofa::simulation::Node * ; nodeWhereAdded . ). virtual . Write into a ostream the syntax to add a RequiredPlugin component in the scene file. The syntax depends on the file format, hence the SceneLoader. The function returns true if the derived SceneLoader implements this function, false otherwise. ; Reimplemented in sofa::simulation::SceneLoaderXML. ◆ write(). virtual void sofa::simulation::SceneLoader::write ; (; sofa::simulation::Node * ; , . const char * ;  . ). inlinevirtual . write scene graph in the file ; Reimplemented in sofa::simulation::SceneLoaderXML. sofasimulationSceneLoader; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html:5526,plugin,pluginName,5526,api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_scene_loader.html,1,['plugin'],['pluginName']
Modifiability," diagram for sofa::component::constraint::lagrangian::model::UnilateralLagrangianConstraint< DataTypes >:. [legend]. Classes; struct  Contact;  . Public Attributes; unsigned int constraintId;  ;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Contact > contacts;  ; Real epsilon;  ; bool yetIntegrated;  ; SReal customTolerance;  ; PreviousForcesContainer prevForces;  ; bool * contactsStatus;  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:1433,inherit,inherited,1433,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability," diagram for sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::TetrahedronHyperelasticityFEMForceField< DataTypes >::TetrahedronRestInformation; data structure stored for each tetrahedron . Public Attributes; Coord m_shapeVector [4];  shape vector at the rest configuration More...;  ; Coord m_fiberDirection;  fiber direction in rest configuration More...;  ; Real m_restVolume {};  rest volume More...;  ; Real m_volScale {};  current tetrahedron volume More...;  ; Real m_volume {};  ; MatrixSym m_SPKTensorGeneral;  volume/ restVolume More...;  ; Matrix3 m_deformationGradient;  deformation gradient = gradPhi More...;  ; Real m_strainEnergy {};  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >; Real trC;  Trace of C = I1. More...;  ; Real J;  ; Real lambda;  ; Real trCsquare;  Trace of C^2 : I2 = (trCSquare - trC^2)/2. More...;  ; bool hasBeenInitialized;  boolean indicating whether the invariants have been computed More...;  ; MatrixSym deformationTensor;  right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ()=default;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ m_deformationGradient. templ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html:1531,inherit,inherited,1531,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_11a43b7aa7f251e640b19f2d5ec26614.html,1,['inherit'],['inherited']
Modifiability," diagram for sofa::simulation::DeactivationVisitor:. [legend]. Protected Attributes; bool active;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DeactivationVisitor (const core::ExecParams *params, bool _active=false);  ; Result processNodeTopDown (simulation::Node *node) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; void processNodeBottomUp (simulation::Node *node) override;  Callback method called after child node have been processed and before going back to the parent node. More...;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ; const char * getCategoryName () const override;  ; const char * getClassName () const override;  ; void setValue (bool _active);  ; bool getValue ();  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t begin (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::V",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html:1266,inherit,inherited,1266,api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_deactivation_visitor.html,1,['inherit'],['inherited']
Modifiability," double > d_showTextScaleFactor;  Scale to apply on the text. More...;  ; Data< bool > d_showGradientMap;  show gradients for each point of the target point set. More...;  ; Data< double > d_showGradientsScaleFactor;  scale for the gradients displayed. More...;  ; Data< Coord > d_offset;  translation offset between the topology and the point set. More...;  ; Data< sofa::helper::OptionsGroup > d_distanceType;  type of distance to compute for inserted frames. More...;  ; Data< bool > d_initTarget;  initialize the target MechanicalObject from the grid. More...;  ; Data< int > d_initTargetStep;  initialize the target MechanicalObject from the grid using this step. More...;  ; Data< std::map< unsigned int, unsigned int > > d_zonesFramePair;  Correspondence between the segmented value and the frames. More...;  ; Data< double > d_harmonicMaxValue;  Max value used to initialize the harmonic distance grid. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; DistancesInternalData< DataTypes > data;  ;  Protected Attributes inhe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:2836,inherit,inherited,2836,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['inherit'],['inherited']
Modifiability," due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html:9038,inherit,inherited,9038,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,2,['inherit'],['inherited']
Modifiability," each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setTopologicalOperation (int m);  ; void setScale (double s);  ; void setVolumicMesh (bool v);  ; virtual int getTopologicalOperation () const;  ; virtual double getScale () const;  ; virtual bool getVolumicMesh () const;  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ firstClick. bool sofa::gui::common::TopologyOperation::firstClick. protected . ◆ scale. double sofa::gui::common::TopologyOperation::scale. protected . ◆ topologicalOperation. int sofa::gui::common::TopologyOperation::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::common::TopologyOperation::volumicMesh. protected . Constructor details. ◆ TopologyOperation(). sofa::gui::common::TopologyOperation::Topolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html:1908,config,configurePerformer,1908,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,1,['config'],['configurePerformer']
Modifiability," even when no collision is present) More...;  ; int beginIntersect (core::CollisionModel *model1, core::CollisionModel *model2, core::collision::DetectionOutputVector *&contacts) override;  ; int intersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, core::collision::DetectionOutputVector *contacts, const core::collision::Intersection *currentIntersection) override;  Compute the intersection between 2 elements. Return the number of contacts written in the contacts vector. More...;  ; int endIntersect (core::CollisionModel *model1, core::CollisionModel *model2, core::collision::DetectionOutputVector *contacts) override;  End intersection tests between two collision models. Return the number of contacts written in the contacts vector. More...;  ; std::string name () const override;  ; bool canIntersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2) override=delete;  ; int intersect (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2, core::collision::DetectionOutputVector *contacts) override=delete;  ;  Public Member Functions inherited from sofa::core::collision::ElementIntersector; virtual ~ElementIntersector ();  . Attribute details. ◆ intersector. core::collision::ElementIntersector* sofa::component::collision::detection::algorithm::MirrorIntersector::intersector { nullptr }. Function details. ◆ beginIntersect(). int sofa::component::collision::detection::algorithm::MirrorIntersector::beginIntersect ; (; core::CollisionModel * ; model1, . core::CollisionModel * ; model2, . core::collision::DetectionOutputVector *& ; contacts . ). inlineoverridevirtual . Begin intersection tests between two collision models. Return the number of contacts written in the contacts vector. If the given contacts vector is nullptr, then this method should allocate it. ; Implements sofa::core::collision::ElementIntersector. ◆ canIntersect() [1/2]. bool sofa::component::collision::detection::algorithm::Mir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html:1949,inherit,inherited,1949,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_mirror_intersector.html,1,['inherit'],['inherited']
Modifiability," events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ active. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >::active. protected . ◆ animationSpeed. template<class TDataTypes > . sofa::core::objectmode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html:19363,inherit,inherited,19363,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,2,['inherit'],['inherited']
Modifiability," events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ constraints. template<class TDataTypes > . sofa::core::objectmodel::RenamedData< type::vector< Oscillator > > sofa::component::constraint::projective::OscillatorProjectiveConstraint< TDataTypes >::constraints. protected . ◆ d_constraints. template<class TDataTyp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:18201,inherit,inherited,18201,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,2,['inherit'],['inherited']
Modifiability," field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergeVectors ();  ;  ~MergeVectors () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html:12844,inherit,inherited,12844,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,1,['inherit'],['inherited']
Modifiability," final positions of the 4 corners) More...;  ; Data< VecCoord > d_cornerPoints;  the coordinates of the corner points More...;  ; Data< bool > d_drawConstrainedPoints;  Draw constrained points. More...;  ; VecCoord x0;  initial constrained DOFs position More...;  ; VecCoord xf;  final constrained DOFs position More...;  ; VecCoord meshPointsX0;  initial mesh DOFs position More...;  ; VecCoord meshPointsXf;  final mesh DOFs position More...;  ; SingleLink< PatchTestMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr unsigned int CoordSize = Coord::total_size;  . Pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:2542,inherit,inherited,2542,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," find the input and output models of this mapping. . ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getDistances(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::getDistances ; (; VVD & ; distances, . VecVecCoord & ; gradients, . const VecCoord & ; goals . ). Get the distance for a point set using the computed map. ; Parameters. distancesdistance for each point of the topology. ; gradientsgradient of the distance for each point in the topology. ; pointthe point from which the distances are computed. . ◆ init(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::analyze::Distances< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(Distances< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). Related details. ◆ DistancesInternalData< DataTypes >. template<class DataTypes > . friend class DistancesInternalData< DataTypes >. friend . sofacomponentengineanalyzeDistances; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:27569,variab,variables,27569,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['variab'],['variables']
Modifiability," findPlugin(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, int maxRecursiveDepth=3)sofa::helper::system::PluginManager; getDefaultSuffix()sofa::helper::system::PluginManagerstatic; getEntryFromPlugin(const Plugin *plugin, Entry &entry)sofa::helper::system::PluginManagerinline; getInstance()sofa::helper::system::PluginManagerstatic; getPlugin(const std::string &plugin, const std::string &=getDefaultSuffix(), bool=true)sofa::helper::system::PluginManager; getPluginByName(const std::string &pluginName)sofa::helper::system::PluginManager; getPluginMap()sofa::helper::system::PluginManagerinline; GetPluginNameFromPath(const std::string &pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:1687,plugin,pluginName,1687,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,1,['plugin'],['pluginName']
Modifiability," float *f);  ; void setMatrix2 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix3 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix4 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix2x3 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix3x2 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix2x4 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix4x2 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix3x4 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; void setMatrix4x3 (const unsigned int index, const char *name, int count, bool transpose, const float *f);  ; GLint getAttribute (const unsigned int index, const char *name);  ; GLint getUniform (const unsigned int index, const char *name);  ; GLint getGeometryInputType (const unsigned int index);  ; void setGeometryInputType (const unsigned int index, GLint v);  ; GLint getGeometryOutputType (const unsigned int index);  ; void setGeometryOutputType (const unsigned int index, GLint v);  ; GLint getGeometryVerticesOut (const unsigned int index);  ; void setGeometryVerticesOut (const unsigned int index, GLint v);  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::Shader;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:5052,inherit,inherited,5052,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,6,['inherit'],['inherited']
Modifiability," for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::linearsystem::DispatchFromGlobalVectorToLocalVectorVisitor Class Reference . #include <DispatchFromGlobalVectorToLocalVectorVisitor.h>. Inheritance diagram for sofa::component::linearsystem::DispatchFromGlobalVectorToLocalVectorVisitor:. [legend]; Detailed Description; Copy the values stored in a global vector to the local vectors stored in teach BaseMechanicalState The copy location is based on a built MappingGraph. . Protected Attributes; sofa::core::MultiVecId m_dst;  The vector id to copy from the global vector. More...;  ; sofa::linearalgebra::BaseVector * m_globalVector { nullptr};  The global vector containing the values to be copied. More...;  ; const MappingGraph & m_mappingGraph;  Structure used to identify where in the global vector the local vectors will be copied from. More...;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  DispatchFromGlobalVectorToLocalVectorVisitor (const core::ExecParams *params, const MappingGraph &mappingGraph, sofa::core::MultiVecId dst, linearalgebra::BaseVector *globalVector);  ; Result fwdMechanicalState (simulation::Node *, core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html:1097,inherit,inherited,1097,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_dispatch_from_global_vector_to_local_vector_visitor.html,1,['inherit'],['inherited']
Modifiability," force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Static Public Member Functions; static std::string GetCustomTemplateName ();  ; static Coord computeTangent (const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3);  Utility method to compute tangent from vertices and texture coordinates. More...;  ; static Coord computeBitangent (const Coord &v1, const Coord &v2, const Coord &v3, const TexCoord &t1, const TexCoord &t2, const TexCoord &t3);  Utility method to compute bitangent from vertices and texture coordinates. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  VisualModelImpl ();  Default constructor. More...;  ;  ~VisualModelImpl () override;  Default destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:23605,inherit,inherited,23605,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['inherit'],['inherited']
Modifiability," format.; See alsoXspLoader for an example of use. . Public Member Functions; virtual ~XspLoaderDataHook ();  Destructor, does nothing special. More...;  ; virtual void finalizeLoading (bool isOk);  Called by the XspLoader when the loading is done. More...;  ; virtual void setNumMasses (size_t);  Called by the XspLoader to specify before loading the number of masses. More...;  ; virtual void setNumSprings (size_t);  Called by the XspLoader to specify before loading the number of springs. More...;  ; virtual void setGravity (SReal, SReal, SReal);  Called by the XspLoader to specify the directional gravity. More...;  ; virtual void setViscosity (SReal);  Called by the XspLoader to specify the viscosity. More...;  ; virtual void addMass (SReal, SReal, SReal, SReal, SReal, SReal, SReal, SReal, bool, bool);  Add a new mass. More...;  ; virtual void addSpring (size_t, size_t, SReal, SReal, SReal);  Add a new spring. More...;  ; virtual void addVectorSpring (size_t m1, size_t m2, SReal ks, SReal kd, SReal initpos, SReal, SReal, SReal);  Add an extended spring. More...;  . Constructor details. ◆ ~XspLoaderDataHook(). sofa::helper::io::XspLoaderDataHook::~XspLoaderDataHook ; (; ). virtual . Destructor, does nothing special. . Function details. ◆ addMass(). virtual void sofa::helper::io::XspLoaderDataHook::addMass ; (; SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . SReal ; , . bool ; , . bool ;  . ). inlinevirtual . Add a new mass. ; Parameters. px,py,pz3D position. ; vx,vz,vz3D velocity. ; mass.; elasticproperty. ; fixedboolean indicates that the mass is ""static"". ; surfaceindicates that the mass is on the surface. . Reimplemented in sofa::component::mass::DiagonalMass< DataTypes, GeometricalTypes >::Loader, sofa::component::mapping::nonlinear::RigidMapping< TIn, TOut >::Loader, and sofa::component::io::mesh::MeshXspLoadDataHook. ◆ addSpring(). virtual void sofa::helper::io::XspLoaderDataHook::addSpring ; (; size_t ; , . size_t ; , . SRea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html:1792,extend,extended,1792,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_xsp_loader_data_hook.html,1,['extend'],['extended']
Modifiability," framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::mapping::Hexa2TetraTopologicalMapping Class Reference . #include <Hexa2TetraTopologicalMapping.h>. Inheritance diagram for sofa::component::topology::mapping::Hexa2TetraTopologicalMapping:. [legend]; Detailed Description; This class, called Hexa2TetraTopologicalMapping, is a specific implementation of the interface TopologicalMapping where :; INPUT TOPOLOGY = HexahedronSetTopology OUTPUT TOPOLOGY = TetrahedronSetTopology; Tetra2TriangleTopologicalMapping class is templated by the pair (INPUT TOPOLOGY, OUTPUT TOPOLOGY) . Public Attributes; sofa::core::objectmodel::RenamedData< bool > swapping;  ; sofa::core::objectmodel::Data< bool > d_swapping;  Boolean enabling to swapp hexa-edges in order to avoid bias effect. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::Componen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html:1049,inherit,inherited,1049,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,1,['inherit'],['inherited']
Modifiability," framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::helper::io::ImageDDS Class Reference . #include <ImageDDS.h>. Inheritance diagram for sofa::helper::io::ImageDDS:. [legend]. Public Member Functions;  ImageDDS ();  ;  ImageDDS (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html:540,inherit,inherited,540,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_image_d_d_s.html,1,['inherit'],['inherited']
Modifiability," from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; void checkLinearSolverSymmetry (const core::MechanicalParams *mparams) const;  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SparseMatrixEigen m_jacobian;  Jacobian of the mapping. More...;  ;  Protected Attributes inherited from sofa::core::Mapping< TIn, TOut >; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output Model, also called child. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::Mapping< TIn, TOut >; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html:21122,inherit,inherited,21122,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,2,['inherit'],['inherited']
Modifiability," from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void step (const core::ExecParams *params, SReal dt)=0;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:6549,inherit,inherited,6549,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['inherit'],['inherited']
Modifiability," from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::topology::TopologicalMapping; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ addedTriangleIndex. sofa::type::vector<Index> sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping::addedTriangleIndex. protected . ◆ d_flipNormals. Data<bool> sofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html:16339,inherit,inherited,16339,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,2,['inherit'],['inherited']
Modifiability," from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::topology::TopologicalMapping; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ copyEdges. Data< bool > sofa::component::mapping::linear::Mesh2PointTopologicalMapping::copyEdges. protected . Activate mapping of input edges into the output topology (requires at leas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html:19664,inherit,inherited,19664,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,2,['inherit'],['inherited']
Modifiability," from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::topology::TopologicalMapping; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_flipNormals. Data<bool> sofa::component::topology::mapping::Hexa2QuadTopologicalMapping::d_flipNormals. protected . Flip Normal ? (Inverse point order when creating triangle) . ◆ flip",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping.html:15735,inherit,inherited,15735,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_quad_topological_mapping.html,2,['inherit'],['inherited']
Modifiability," from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::topology::TopologicalMapping; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_pointMappedFromEdge. Data< type::vector<Index> > sofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMapping::d_pointMappedFromEdge. protected . Each edge of the input t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html:17516,inherit,inherited,17516,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html,2,['inherit'],['inherited']
Modifiability," from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::topology::TopologicalMapping; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ pointMappedFromEdge. std::map<type::fixed_array<sofa::Index,2>, sofa::Index> sofa::component::mapping::linear::SimpleTesselatedHexaTopologicalMapping::pointMappedFromEdge. protected . ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html:16127,inherit,inherited,16127,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,2,['inherit'],['inherited']
Modifiability," from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SubsetTopology ();  ;  ~SubsetTopology () override;  ; bool isPointInROI (const CPos &p, unsigned int idROI);  ; bool isPointInROI (const PointID &pid, unsigned int idROI);  ; bool isEdgeInROI (const Edge &e, unsigned int idROI);  ; bool isTriangleInROI (const Triangle &t, unsigned int idROI);  ; bool isQuadInROI (const Quad &t, unsigned int idROI);  ; bool isTetrahedronInROI (const Tetra &t, unsigned int idROI);  ; bool isHexahedronInROI (const Hexa &t, unsigned int idROI);  ; void findVertexOnBorder (const Triangle &t, unsigned int idROI);  ; void findVertexOnBorder (const Tetra &t, unsigned int idROI);  ; bool isPointChecked (unsigned int id, sofa::type::vector< bool > &pointChecked);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Mem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html:17577,inherit,inherited,17577,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,1,['inherit'],['inherited']
Modifiability, function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor details. ◆ StartNavigationOperation(). sofa::gui::common::StartNavigationOperation::StartNavigationOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::StartNavigationOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::StartNavigationOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::StartNavigationOperation::getDescription ; (; ). inlinestatic . sofaguicommonStartNavigationOperation; Generated on Mon Nov 11 2024 03:19:18 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html:2541,config,configurePerformer,2541,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,2,['config'],['configurePerformer']
Modifiability," gradPhi) More...;  ; EigenMatrix Evect;  ; CoordEigen Evalue;  ; Real logJ;  ; MatrixSym E;  . Public Member Functions;  TetrahedronRestInformation ();  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::StrainInformation< DataTypes >;  StrainInformation ();  ; virtual ~StrainInformation ();  . Friends; std::ostream & operator<< (std::ostream &os, const TetrahedronRestInformation &);  Output stream. More...;  ; std::istream & operator>> (std::istream &in, TetrahedronRestInformation &);  Input stream. More...;  . Attribute details. ◆ dJ. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::dJ[4]. derivatives of J . ◆ fiberDirection. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::fiberDirection. fiber direction in rest configuration . ◆ restVolume. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::restVolume. rest volume . ◆ shapeVector. template<class DataTypes > . Coord sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::shapeVector[4]. shape vector at the rest configuration . ◆ strainEnergy. template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::strainEnergy. deformation gradient = gradPhi ; right Cauchy-Green deformation tensor C (gradPhi^T gradPhi) . ◆ tetraEdges. template<class DataTypes > . float sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >::TetrahedronRestInformation::tetraEdges[6] {}. ◆ tetraIndices. template<class DataTypes > . float sofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html:2824,config,configuration,2824,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_f1b7f2f40a66fe2a9522e50d01e0a4441.html,1,['config'],['configuration']
Modifiability," handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; FixedTranslationProjectiveConstraintInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html:3064,inherit,inherited,3064,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_translation_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< TDataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ cid. template<class DataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:24276,inherit,inherited,24276,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability," hexahedra are about to be moved (i.e some/all of their vertices have just been moved) HexahedraMoved_Removing First part, remove element concerned to force object to recompute global state with current positions . Public Attributes; sofa::type::vector< Topology::HexahedronID > hexahedraAroundVertexMoved;  . Public Member Functions;  HexahedraMoved_Removing (const sofa::type::vector< Topology::HexahedronID > &hexahedronShell);  ;  ~HexahedraMoved_Removing () override;  ; const sofa::type::vector< Topology::HexahedronID > & getIndexArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ hexahedraAroundVertexMoved. sofa::type::vector< Topology::HexahedronID > sofa::core::topology::HexahedraMoved_Removing::hexahedraAroundVertexMoved. Constructor details. ◆ HexahedraMoved_Removing(). sofa::core::topology::HexahedraMoved_Removing::HexahedraMoved_Removing ; (; const sofa::type::vector< Topology::HexahedronID > & ; hexahedronShell). inline . ◆ ~HexahedraMoved_Removing(). sofa::core::topology::HexahedraMoved_Removing::~HexahedraMoved_Removing ; (; ). override . Function details. ◆ getIndexArray(). const sofa::type::vector< Topology::HexahedronID >& sofa::core::topology::HexahedraMoved_Removing::getIndexArray ; (; ); const. inline . sofacoretopologyHexahedraMoved_Removing; Generated on Mon Nov 11 2024 03:16:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___removing.html:1551,inherit,inherited,1551,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___removing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_hexahedra_moved___removing.html,1,['inherit'],['inherited']
Modifiability," if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::PluginManager::pluginIsLoaded ; (; const std::string & ; plugin). ◆ readFromIniFile() [1/2]. void sofa::helper::system::PluginManager::readFromIniFile ; (; const std::string & ; path). ◆ readFromIniFile() [2/2]. void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7516,plugin,plugin,7516,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['plugin'],['plugin']
Modifiability," implemented in children classes. More...;  ; virtual void removeTrianglesPostProcessing (const sofa::type::vector< TriangleID > &edgeToBeRemoved, const sofa::type::vector< TriangleID > &vertexToBeRemoved);  : Postprocessing to apply to topology triangles. Nothing to do in this class. This function should be implemented in children classes. More...;  ; virtual bool addTrianglesPreconditions (const sofa::type::vector< Triangle > &triangles);  Precondition to fulfill before adding triangles. No preconditions are needed in this class. This function should be implemented in children classes. More...;  ; virtual void addTrianglesPostProcessing (const sofa::type::vector< Triangle > &triangles);  : Postprocessing to apply to topology triangles. Nothing to do in this class. This function should be implemented in children classes. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:25422,inherit,inherited,25422,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['inherit'],['inherited']
Modifiability, in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic: SkeletonPlugin: Error in CGAL. /skeletonplugin-install-cmake; ; SOFA - Topic: [SOLVED] CGALPlugin install CMake. /snake0-vtu-not-found-in-modelorderreduction; ; SOFA - Topic: snake0.vtu not found in ModelOrderReduction. /sofa_python-plugin-in-windows; ; SOFA - Topic: [SOLVED] SOFA_Python Plugin in Windows. /sofa_scenecreat; ; SOFA - Topic: [SOLVED] SOFA_SceneCreat. /sofa-20-06-is-only-partly-linked; ; SOFA - Topic: [SOLVED] Sofa 20.06 is only partly linked. /sofa-as-physical-engine-problem; ; SOFA - Topic: [SOLVED] Sofa as physical engine problem. /sofabasetopology-h-no-such-file-or-directory; ; SOFA - Topic: [SOLVED] SofaBaseTopology/*.h: No such file or directory. /sofa-beginning; ; SOFA - Topic: SOFA beginning. /sofa-binaries-v19-06-missing-library-libicui18n-so-55; ; SOFA - Topic: Sofa binaries v19.06 : Missing library libicui18n.so.55. /sofa-binary-with-python-env; ; SOFA - Topic: [SOLVED] Sofa Binary with python env. /sofa-build-error-in-windows-10-x64-vs-2019; ; SOFA - Topic: [SOLVED] Sofa Build Error in Windows 10 x64 VS 2019. /sofa-build-failed-vs2013; . /feed; ; [SOLVED] SOFA build failed VS2013 – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] SOFA build failed VS2013. /11; ; SOFA - Topic: [SOLVED] SOFA build failed VS2013. /3; ; SOFA ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:388186,plugin,plugin-in-windows,388186,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-in-windows']
Modifiability," in which a solver solves. . Public Member Functions;  SolveVisitorTask (sofa::simulation::CpuTask::Status *status, sofa::core::behavior::OdeSolver *odeSolver, const sofa::core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId x, sofa::core::MultiVecDerivId v);  ;  ~SolveVisitorTask () override=default;  ; sofa::simulation::Task::MemoryAlloc run () final;  ;  Public Member Functions inherited from sofa::simulation::CpuTask; Status * getStatus (void) const override final;  ;  CpuTask (Status *status, int scheduledThread=-1);  ; virtual ~CpuTask ()=default;  ;  Public Member Functions inherited from sofa::simulation::Task;  Task (int scheduledThread);  ; virtual ~Task ()=default;  ; int getScheduledThread () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::simulation::Task; int m_id;  ;  Protected Attributes inherited from sofa::simulation::Task; int m_scheduledThread;  ;  Static Public Member Functions inherited from sofa::simulation::Task; static void * operator new (std::size_t sz);  ; static void operator delete (void *ptr);  ; static void operator delete (void *ptr, std::size_t sz);  ; static void * operator new[] (std::size_t sz)=delete;  ; static Task::Allocator * getAllocator ();  ; static void setAllocator (Task::Allocator *allocator);  . Constructor details. ◆ SolveVisitorTask(). sofa::simulation::SolveVisitorTask::SolveVisitorTask ; (; sofa::simulation::CpuTask::Status * ; status, . sofa::core::behavior::OdeSolver * ; odeSolver, . const sofa::core::ExecParams * ; params, . SReal ; dt, . sofa::core::MultiVecCoordId ; x, . sofa::core::MultiVecDerivId ; v . ). inline . ◆ ~SolveVisitorTask(). sofa::simulation::SolveVisitorTask::~SolveVisitorTask ; (; ). overridedefault . Function details. ◆ run(). sofa::simulation::Task::MemoryAlloc sofa::simulation::SolveVisitorTask::run ; (; ). finalvirtual . Implements sofa::simulation::Task. sofasimulationSolveVisitorTask; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html:1256,inherit,inherited,1256,api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_solve_visitor_task.html,3,['inherit'],['inherited']
Modifiability," indices. . ◆ outputPosition. template<class DataTypes > . Data< VecCoord > sofa::component::engine::select::MeshSampler< DataTypes >::outputPosition. Computed sample coordinates. . ◆ position. template<class DataTypes > . Data< VecCoord > sofa::component::engine::select::MeshSampler< DataTypes >::position. Input positions. . Constructor details. ◆ MeshSampler(). template<class DataTypes > . sofa::component::engine::select::MeshSampler< DataTypes >::MeshSampler. ◆ ~MeshSampler(). template<class DataTypes > . sofa::component::engine::select::MeshSampler< DataTypes >::~MeshSampler ; (; ). inlineoverride . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::select::MeshSampler< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::select::MeshSampler< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::select::MeshSampler< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::select::MeshSampler< DataTypes >::reinit ; (; ). inlineoverridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::select::MeshSampler< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(MeshSampler< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentengineselectMeshSampler; Generated on Mon Nov 11 2024 02:40:42 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler.html:19189,variab,variables,19189,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_sampler.html,1,['variab'],['variables']
Modifiability," inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SlicedVolumetricModel, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual bool isTransparent ();  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the boundin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html:2323,inherit,inherited,2323,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,1,['inherit'],['inherited']
Modifiability," inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< LineProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ; SparseMatrix jacobian;  projection matrix in local state More...;  ; SparseMatrix J;  auxiliary variable More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:3046,variab,variable,3046,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['variab'],['variable']
Modifiability," inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShader; std::vector< sofa::gl::GLSLShader * > shaderVector;  OpenGL shader. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:18606,inherit,inherited,18606,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,2,['inherit'],['inherited']
Modifiability," inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; void checkLinearSolverSymmetry (const core::MechanicalParams *mparams) const;  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >; SparseMatrixEigen m_jacobian;  Jacobian of the mapping. More...;  ;  Protected Attributes inherited from sofa::core::Mapping< TIn, TOut >; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output Model, also called child. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-ma",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html:20559,inherit,inherited,20559,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,1,['inherit'],['inherited']
Modifiability," inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DifferenceEngine, TDataType), core::DataEngine);  ;  DifferenceEngine ();  ;  ~DifferenceEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html:2155,variab,variables,2155,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_difference_engine.html,1,['variab'],['variables']
Modifiability," inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  TriangleCollisionModel ();  ; virtual void updateFromTopology ();  ; virtual void updateNormals ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html:21739,inherit,inherited,21739,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_collision_model.html,1,['inherit'],['inherited']
Modifiability," inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  DisplayFlagsDataWidget (QWidget *parent, const char *name, core::objectmodel::Data< DisplayFlags > *data, bool root=false);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< sofa::core::visual::DisplayFlags >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData ();  ; const sofa::core::objectmodel::Data< sofa::core::visual::DisplayFlags > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  . Additional Inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html:1294,inherit,inherited,1294,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_display_flags_data_widget.html,2,['inherit'],['inherited']
Modifiability," inherited from sofa::gui::qt::DataWidget; core::objectmodel::BaseData * baseData;  ; bool dirty;  ; int counter;  ; bool m_isFilled;  tell if DataWidget has been filled from Data true by default More...;  ; bool m_toFill;  bool to warn action is needed to fill Data, false by default More...;  . Public Member Functions;  MaterialDataWidget (QWidget *parent, const char *name, Data< Material > *data);  ; virtual bool createWidgets ();  ; virtual void setDataReadOnly (bool readOnly);  This method is called after createWidgets to configure whether the created widgets should be read-only. More...;  ; virtual unsigned int numColumnWidget ();  Helper method for column. More...;  ;  Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >;  TDataWidget (QWidget *parent, const char *name, MyTData *d);  ; sofa::core::objectmodel::Data< Material > * getData ();  ; const sofa::core::objectmodel::Data< Material > * getData () const;  ; virtual void setData (MyTData *d);  ; virtual void setData (MyData *d);  ;  Public Member Functions inherited from sofa::gui::qt::DataWidget;  DataWidget (QWidget *parent, const char *name, MyData *d);  ;  ~DataWidget () override;  ; virtual void setData (MyData *d);  ; const core::objectmodel::BaseData * getBaseData () const;  BaseData pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< Material >; static RealObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html:1690,inherit,inherited,1690,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_material_data_widget.html,2,['inherit'],['inherited']
Modifiability," initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::component::collision::response::contact::CollisionResponse; static void setContactTags (core::CollisionModel *model1, core::CollisionModel *model2, core::collision::Contact::SPtr contact);  ; static sofa::helper::OptionsGroup initializeResponseOptions (sofa::core::objectmodel::BaseContext *pipeline);  . Attribute details. ◆ d_rules. Data< type::vector<Rule> > sofa::component::collision::response::contact::RuleBasedContactManager::d_rules. ◆ d_variables. Data< std::string > sofa::component::collision::response::contact::RuleBasedContactManager::d_variables. Define a list of variables to be used inside the rules. . ◆ rules. sofa::core::objectmodel::RenamedData< type::vector<Rule> > sofa::component::collision::response::contact::RuleBasedContactManager::rules. ◆ variablesData. std::map<std::string,Data<std::string>* > sofa::component::collision::response::contact::RuleBasedContactManager::variablesData. protected . Constructor details. ◆ RuleBasedContactManager(). sofa::component::collision::res",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:17315,inherit,inherited,17315,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,2,['inherit'],['inherited']
Modifiability," installer for SOFA framework. /cmake-cant-find-boost-library; ; SOFA - Topic: CMake can't find Boost Library. /cmake-could-not-find-cpacknsis; ; SOFA - Topic: [SOLVED] CMake could not find CPackNSIS. /cmake-error; . /feed; ; [SOLVED] cmake error : cannot find Eigen3 – SOFA. SOFA - Topic: [SOLVED] cmake error : cannot find Eigen3. /cmake-error-eigen3_dir-not-found; . /feed; ; [SOLVED] CMake Error, ""Eigen3_DIR"" not found – SOFA. SOFA - Topic: [SOLVED] CMake Error, ""Eigen3_DIR"" not found. /cmake-error-in-building-sofa; . /feed; ; [SOLVED] Cmake error in building SOFA : cannot find Eigen3 – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /4; ; SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. SOFA - Topic: [SOLVED] Cmake error in building SOFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection fo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:275365,config,configuring,275365,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['config'],['configuring']
Modifiability," instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SmoothMeshEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:4081,inherit,inherited,4081,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['inherit'],['inherited']
Modifiability," int idROI);  ; void findVertexOnBorder (const Triangle &t, unsigned int idROI);  ; void findVertexOnBorder (const Tetra &t, unsigned int idROI);  ; bool isPointChecked (unsigned int id, sofa::type::vector< bool > &pointChecked);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html:18246,inherit,inherited,18246,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,1,['inherit'],['inherited']
Modifiability," int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7);  ; virtual type::Vec3 getVoxelSize () const =0;  ; virtual type::vector< unsigned int > getHexaIndicesInGrid () const =0;  ; virtual int getDataSize () const =0;  ; virtual Vec6i getROI () const =0;  ; virtual unsigned char * getData ()=0;  ; virtual unsigned char * getSegmentID ()=0;  ; virtual void createSegmentation3DTexture (unsigned char **textureData, int &width, int &height, int &depth)=0;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool load ()=0;  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html:2931,inherit,inherited,2931,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,1,['inherit'],['inherited']
Modifiability," is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: elements added, removed, fused, renumbered). . Protected Attributes; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains id of element link to each data[] More...;  ; bool m_addNewElements = false;  ;  Protected Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologySubsetData (const typename sofa::core::topology::BaseTopologyData< VecT >::InitData &data);  Default Constructor to init Data. More...;  ; void setMap2Elements (const sofa::type::vector< Index > _map2Elements);  Method to set a vector map to rull this subsetData. Will set. More...;  ; sofa::type::vector< Index > & getMap2Elements ();  Getter of the vector map indices. More...;  ; void supportNewTopologyElements (bool value);  ; bool isNewTopologyElementsSupported () const;  Getter to the option. More...;  ; virtual Index indexOfElement (Index index) const;  ; virtual const type::vector< Index > indicesOfElement (Index index) const;  ; void swap (Index i1, Index i2) override;  Swaps values of this subsetmap at indices i1 and i2. (only if i1 and i2 < subset size()) More...;  ; virtual void add (sofa::Size nbElements, const sofa::type::vector< sofa::type::vector< Index > > &ancestors, cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:1777,inherit,inherited,1777,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,1,['inherit'],['inherited']
Modifiability," is able to propagate topological changes from input to output model. More...;  ; virtual bool propagateFromOutputToInputModel ();  Return true if this mapping is able to propagate topological changes from output to input model. More...;  ; virtual bool isTheOutputTopologySubdividingTheInputOne ();  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; virtual Index getGlobIndex (Index ind);  ; virtual Index getFromIndex (Index ind);  ; void dumpGlob2LocMap ();  ; void dumpLoc2GlobVec ();  ; virtual bool checkTopologies ();  Method to check the topology mapping maps regarding the upper topology. More...;  ; virtual void getFromIndex (type::vector< Index > &, const Index) const;  ; const std::map< Index, sofa::type::vector< Index > > & getIn2OutMap ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html:4589,inherit,inherited,4589,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,2,['inherit'],['inherited']
Modifiability," j) const override;  Read the value of the element at row i, column j (using 0-based indices) More...;  ; void resize (Index nbRow, Index nbCol) override;  Resize the matrix and reset all values to 0. More...;  ; void clear () override;  Reset all values to 0. More...;  ; void set (Index i, Index j, double v) override;  Write the value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, double v) override;  Add v to the existing value of the element at row i, column j (using 0-based indices) More...;  ; void add (Index row, Index col, const type::Mat3x3d &_M) override;  Adding values from a 3x3d matrix. This function may be overload to obtain better performances. More...;  ; void add (Index row, Index col, const type::Mat3x3f &_M) override;  Adding values from a 3x3f matrix. This function may be overload to obtain better performances. More...;  ;  Public Member Functions inherited from sofa::linearalgebra::BaseMatrix;  BaseMatrix ();  ; virtual ~BaseMatrix ();  ; Index rows (void) const;  Number of rows (Eigen-compatible API) More...;  ; Index cols (void) const;  Number of columns (Eigen-compatible API) More...;  ; SReal operator() (Index i, Index j) const;  Read the value of the element at row i, column j (using 0-based indices). Eigen-compatible API. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2d &_M);  Adding values from a 2x2d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat2x2f &_M);  Adding values from a 2x2f matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6d &_M);  Adding values from a 6x6d matrix. This function may be overload to obtain better performances. More...;  ; virtual void add (Index row, Index col, const type::Mat6x6f &_M);  Adding values from a 6x6f matrix. This function may be overload to obtain bet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:2380,inherit,inherited,2380,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['inherit'],['inherited']
Modifiability," keywords = ""surgical simulation physical animation truth cube"", url = ""http://www-evasion.imag.fr/Publications/2005/NMPCPF05"" }; indices ordering (same as in HexahedronSetTopology): Y 7---------6; ^ / /|; |/ Z / |; 3----^----2 |; | / | |; | 4------|--5; | / | /; |/ |/; 0---------1-->X; . Classes; class  HexahedronInformation;  the information stored for each hexahedron More...;  . Public Attributes; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< HexahedronInformation > > hexahedronInfo;  ; Data< std::string > d_method;  ""large"" or ""polar"" displacements More...;  ; core::topology::HexahedronData< sofa::type::vector< HexahedronInformation > > d_hexahedronInfo;  container that stotes all requires information for each hexahedron More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:2074,inherit,inherited,2074,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability," lambda);  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const ConstraintParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Attribute details. ◆ m_constOrder. ConstraintOrder sofa::core::ConstraintParams::m_constOrder. protected . Description of the order of the constraint. . ◆ m_dx. MultiVecDerivId sofa::core::ConstraintParams::m_dx. protected . Ids of constraint correction vector. . ◆ m_j. MultiMatrixDerivId sofa::core::ConstraintParams::m_j. protected . Ids of the constraint jacobian matrix. . ◆ m_lambda. MultiVecDerivId sofa::core::ConstraintParams::m_lambda. protected . Ids of constraint lambda vector. . ◆ m_smoothFactor. double sofa::core::ConstraintParams::m_smoothFactor. protected . Smooth contribution factor (for smooth constraints resolution) . ◆ m_v. ConstMultiVecDerivId sofa::core::ConstraintParams::m_v. protected . Ids of velocity vector. . ◆ m_x. ConstMultiVecCoordId sofa::core::ConstraintParams::m_x. protected . Ids of position vector. . Constructor details. ◆ ConstraintParams()",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html:6260,inherit,inherited,6260,api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_constraint_params.html,1,['inherit'],['inherited']
Modifiability," last attached point free (only used for Rigid DOFs) More...;  ; Data< bool > f_restRotations;  true to use rest rotations local offsets (only used for Rigid DOFs) More...;  ; Data< type::Vec3 > f_lastPos;  position at which the attach constraint should become inactive More...;  ; Data< type::Vec3 > f_lastDir;  direction from lastPos at which the attach coustraint should become inactive More...;  ; Data< bool > f_clamp;  true to clamp particles at lastPos instead of freeing them. More...;  ; Data< Real > f_minDistance;  the constraint become inactive if the distance between the points attached is bigger than minDistance. More...;  ; Data< Real > d_positionFactor;  IN: Factor applied to projection of position. More...;  ; Data< Real > d_velocityFactor;  IN: Factor applied to projection of velocity. More...;  ; Data< Real > d_responseFactor;  IN: Factor applied to projection of force/acceleration. More...;  ; Data< type::vector< Real > > d_constraintFactor;  Vector of factors adapting the application of the constraint per pair of points (0 -> the constraint is released. 1 -> the constraint is fully constrained) More...;  ; type::vector< bool > activeFlags;  ; type::vector< bool > constraintReleased;  ; type::vector< Real > lastDist;  ; type::vector< type::Quat< SReal > > restRotations;  ;  Public Attributes inherited from sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at run",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:2518,adapt,adapting,2518,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,1,['adapt'],['adapting']
Modifiability," level);  ; void computeMechanicalMatricesByCondensation () override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(NonUniformHexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Real integrateMass (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; void addMToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal mFact, unsigned int &offset) override;  ; bool isDiagonal () const override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *) override;  ; void buildMassMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:8458,inherit,inherited,8458,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability," link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseMatrixLinearSystem ();  ; virtual void preAssembleSystem (const core::MechanicalParams *);  ; virtual void assembleSystem (const core::MechanicalParams *);  ; virtual void postAssembleSystem (const core::MechanicalParams *);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=fa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html:10529,inherit,inherited,10529,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,1,['inherit'],['inherited']
Modifiability," liver)?. /caribou; . /feed; ; Caribou – SOFA. SOFA - Topic Tag: Caribou. /caribou-plugin; . /feed; ; Caribou Plugin – SOFA. SOFA - Topic Tag: Caribou Plugin. /carving; . /feed; ; carving – SOFA. SOFA - Topic Tag: carving. /carving-a-surface-mesh; . /feed; ; Carving a surface mesh – SOFA. SOFA - Topic Tag: Carving a surface mesh. /catheter; . /feed; ; catheter – SOFA. SOFA - Topic Tag: catheter. /catmullromsplinemapping; . /feed; ; CatmullRomSplineMapping – SOFA. SOFA - Topic Tag: CatmullRomSplineMapping. /cavity; . /feed; ; cavity – SOFA. SOFA - Topic Tag: cavity. /c-controller; . /feed; ; C++ Controller – SOFA. SOFA - Topic Tag: C++ Controller. /cg; . /feed; ; cg – SOFA. SOFA - Topic Tag: cg. /cgal; . /feed; ; CGAL – SOFA. SOFA - Topic Tag: CGAL. /cgal4-7; . /feed; ; CGAL4.7 – SOFA. SOFA - Topic Tag: CGAL4.7. /cgal-configuration; . /feed; ; CGAL Configuration – SOFA. SOFA - Topic Tag: CGAL Configuration. /cgalplugin; . /feed; ; CGALplugin – SOFA. SOFA - Topic Tag: CGALplugin. /cgal-plugin; . /feed; ; CGAL plugin – SOFA. SOFA - Topic Tag: CGAL plugin. /chain; . /feed; ; chain – SOFA. SOFA - Topic Tag: chain. /change-control-point-indices; . /feed; ; change control point indices – SOFA. SOFA - Topic Tag: change control point indices. /change-texture; . /feed; ; change texture – SOFA. SOFA - Topic Tag: change texture. /clamp; . /feed; ; clamp – SOFA. SOFA - Topic Tag: clamp. /clang; . /feed; ; Clang – SOFA. SOFA - Topic Tag: Clang. /client; . /feed; ; client – SOFA. SOFA - Topic Tag: client. /cloth; . /feed; ; cloth – SOFA. SOFA - Topic Tag: cloth. /cmake; . /feed; ; cmake – SOFA. SOFA - Topic Tag: cmake. /cmake-3-18-5-20-06-01; . /feed; ; Cmake 3.18.5 20.06.01 – SOFA. SOFA - Topic Tag: Cmake 3.18.5 20.06.01. /cmake-3-19-0; . /feed; ; CMake 3.19.0 – SOFA. SOFA - Topic Tag: CMake 3.19.0. /cmake-build-external-dependency; . /feed; ; CMake build ""external dependency"" – SOFA. SOFA - Topic Tag: CMake build ""external dependency"". /cmake-error; . /feed; ; CMake error – SOFA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:433266,plugin,plugin,433266,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," mapping. More...;  ; virtual type::vector< core::BaseState * > getTo () override;  Accessor to the output model of this mapping. More...;  ; void disable () override;  Disable the mapping to get the original coordinates of the mapped model. More...;  ; virtual type::vector< sofa::core::behavior::BaseMechanicalState * > getMechFrom () override;  Get the source (upper) model. More...;  ; virtual type::vector< sofa::core::behavior::BaseMechanicalState * > getMechTo () override;  Get the destination (lower, mapped) model. More...;  ; void apply (const core::MechanicalParams *, core::MultiVecCoordId, core::ConstMultiVecCoordId) override;  ; void applyJ (const core::MechanicalParams *, core::MultiVecDerivId, core::ConstMultiVecDerivId) override;  ; void applyJT (const core::MechanicalParams *, core::MultiVecDerivId, core::ConstMultiVecDerivId) override;  ; void applyDJT (const core::MechanicalParams *, core::MultiVecDerivId, core::ConstMultiVecDerivId) override;  ; void applyJT (const core::ConstraintParams *, core::MultiMatrixDerivId, core::ConstMultiMatrixDerivId) override;  ; void computeAccFromMapping (const core::MechanicalParams *, core::MultiVecDerivId, core::ConstMultiVecDerivId, core::ConstMultiVecDerivId) override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  VoidMapping ();  ;  ~VoidMapping () override;  . Attribute details. ◆ fromModel. In* sofa::component::mapping::linear::VoidMapping::fromModel. protected . ◆ toModel. Out* sofa::component::mapping::linear::VoidMapping::toModel. protected . Constructor details. ◆ VoidMapping(). sofa::component::mapping::linear::VoidMapping::VoidMapping ; (; ). inlineprotected . ◆ ~VoidMapping(). sofa::component::mapping::linear::VoidMapping::~VoidMapping ; (; ). inlineoverrideprotected . Function details. ◆ apply().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_void_mapping.html:1951,inherit,inherited,1951,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_void_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_void_mapping.html,1,['inherit'],['inherited']
Modifiability," measure is a squared distance to the element center. More...;  ; virtual Real computeElementRestDistanceMeasure (const HexaID h, const Coord p) const;  If the point is inside the element in its rest position, the distance measure is < 0. If the point is outside the element in its rest position, the distance measure is a squared distance to the element center. More...;  ; NumericalIntegrationDescriptor< Real, 3 > & getHexahedronNumericalIntegrationDescriptor ();  return a pointer to the container of cubature points More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes));  ; void computeQuadAABB (const QuadID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeQuadCenter (const QuadID i) const;  ; void getQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; void getRestQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; Real computeQuadArea (const QuadID i) const;  Computes the area of quad no i and returns it. More...;  ; void computeQuadArea (BasicArrayInterface< Real > &ai) const;  Computes the quad area of all quads are store in the array interface. More...;  ; Real computeRestQuadArea (const QuadID i) const;  Computes the initial area of quad no i and returns it. More...;  ; type::Vec< 3, double > computeQuadNormal (const QuadID ind_q) const;  Computes the normal vector of a quad indexed by ind_q (not normed) More...;  ; bool isQuadInPlane (const QuadID ind_q, const PointID ind_p, const type::Vec< 3, Real > &plane_vect) const;  Tests if a quad indexed by ind_q (and incident to the vertex indexed by ind_p) is included or not in the plane defined by (ind_p, pla",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:10294,inherit,inherited,10294,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,2,['inherit'],['inherited']
Modifiability," members . sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 > Class Template Referenceabstract . #include <MixedInteractionForceField.h>; Component computing forces between a pair of simulated body. ; More... Inheritance diagram for sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >:. [legend]; Detailed Description; template<class TDataTypes1, class TDataTypes2>; class sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; Component computing forces between a pair of simulated body. ; This class define the abstract API common to interaction force fields between a pair of bodies using a given type of DOFs. . Public Member Functions;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE2(MixedInteractionForceField, TDataTypes1, TDataTypes2), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2));  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector wi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html:1183,inherit,inherited,1183,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,1,['inherit'],['inherited']
Modifiability," mesh); a mesh of the closing (position, and triangles) Authorbenjamin gilles . Public Attributes; Data< SeqPositions > inputPosition;  inputs More...;  ; Data< SeqTriangles > inputTriangles;  input triangles More...;  ; Data< SeqQuads > inputQuads;  input quads More...;  ; Data< SeqPositions > position;  outputs More...;  ; Data< SeqTriangles > triangles;  Triangles of closed mesh. More...;  ; Data< SeqQuads > quads;  Quads of closed mesh (=input quads with current method) More...;  ; Data< VecSeqIndex > indices;  Index lists of the closing parts. More...;  ; Data< SeqPositions > closingPosition;  Vertices of the closing parts. More...;  ; Data< SeqTriangles > closingTriangles;  Triangles of the closing parts. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshClosingEngine, DataTypes), Inherited);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when varia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html:1678,inherit,inherited,1678,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_closing_engine.html,1,['inherit'],['inherited']
Modifiability," method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SingleStateAccessor (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:17203,inherit,inherited,17203,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,2,['inherit'],['inherited']
Modifiability," modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::ConstraintCorrection< TDataTypes >. ◆ init() [2/3]. void sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< sofa::defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::ConstraintCorrection< TDataTypes >. ◆ init() [3/3]. template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ resetContactForce(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< DataTypes >::resetContactForce. overridevirtual . Implements sofa::core::behavior::BaseConstraintCorrection. ◆ resetForUnbuiltResolution(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< DataTypes >::resetForUnbuiltResolution ; (; SReal * ; f, . std::list< unsigned int > & ;  . ). overridevirtual . Reimplemented from sofa::core::behavior::BaseConstraintCorrection. ◆ setConstraintDForce(). template<class DataTypes > . void sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< DataTypes >::setConstraintDForce ; (; SReal * ; df, . int ; begin, . int ; end, . bool ; update . ). overridevirtual . Reimplemented from sofa::core::behavior::BaseConstraintCorrectio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:30007,variab,variables,30007,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['variab'],['variables']
Modifiability," modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  if attributes are not static, update the buffer More...;  ; type::vector< float > * beginEdit ();  ; void endEdit ();  ; const type::vector< float > & getValue () const;  ; void setValue (const type::vector< float > &value);  ; void enable ();  ; void disable ();  ; void bwdDraw (core::visual::VisualParams *) override;  Called after objects in the current branch are displayed. More...;  ; void fwdDraw (core::visual::VisualParams *) override;  Called before objects in the current branch are displayed. More...;  ; void setUsage (unsigned int usage);  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ; int getSESizePerVertex () override;  ; int getSETotalSize () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual mode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html:2110,inherit,inherited,2110,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,1,['inherit'],['inherited']
Modifiability," multi-physics simuation. Public Member Functions |; List of all members . sofa::simulation::NodeSingle< T, duplicate > Class Template Reference . #include <Node.h>. Inheritance diagram for sofa::simulation::NodeSingle< T, duplicate >:. [legend]; Detailed Description; template<class T, bool duplicate = true>; class sofa::simulation::NodeSingle< T, duplicate >; Class to hold 0-or-1 object. Public access is only readonly using an interface similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. UPDATE: it is now an alias for the Link pointer container . Public Member Functions;  NodeSingle (const BaseLink::InitLink< Node > &init);  ; T * operator-> () const;  ; T & operator* () const;  ;  operator T* () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::SingleLink< Node, T, BaseLink::FLAG_DOUBLELINK|(true ? BaseLink::FLAG_DUPLICATE :BaseLink::FLAG_NONE)>;  SingleLink ();  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init);  ;  SingleLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~SingleLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:911,inherit,inherited,911,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,1,['inherit'],['inherited']
Modifiability, multi-physics simuation. Public Member Functions |; Static Public Member Functions |; List of all members . sofa::core::objectmodel::DeprecatedBaseClass Class Reference . #include <BaseClass.h>. Inheritance diagram for sofa::core::objectmodel::DeprecatedBaseClass:. [legend]. Public Member Functions;  DeprecatedBaseClass ();  ; Base * dynamicCast (Base *) const override;  ; bool isInstance (Base *) const override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseClass; bool hasParent (const BaseClass *c) const;  returns true iff c is a parent class of this More...;  ; bool hasParent (const std::string &parentClassName) const;  returns true iff a parent class of this is named parentClassName More...;  ; bool operator== (const BaseClass &c) const;  ; bool operator!= (const BaseClass &c) const;  . Static Public Member Functions; static BaseClass * GetSingleton ();  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseClass; std::string namespaceName;  ; std::string typeName;  ; std::string className;  ; std::string templateName;  ; std::string shortName;  ; type::vector< const BaseClass * > parents;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseClass;  BaseClass ();  ; virtual ~BaseClass ();  . Constructor details. ◆ DeprecatedBaseClass(). sofa::core::objectmodel::DeprecatedBaseClass::DeprecatedBaseClass ; (; ). Function details. ◆ dynamicCast(). Base* sofa::core::objectmodel::DeprecatedBaseClass::dynamicCast ; (; Base * ; ); const. inlineoverridevirtual . Implements sofa::core::objectmodel::BaseClass. ◆ GetSingleton(). BaseClass * sofa::core::objectmodel::DeprecatedBaseClass::GetSingleton ; (; ). static . ◆ isInstance(). bool sofa::core::objectmodel::DeprecatedBaseClass::isInstance ; (; Base * ; ); const. inlineoverridevirtual . Implements sofa::core::objectmodel::BaseClass. sofacoreobjectmodelDeprecatedBaseClass; Generated on Mon Nov 11 2024 03:15:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_deprecated_base_class.html:1072,inherit,inherited,1072,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_deprecated_base_class.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_deprecated_base_class.html,2,['inherit'],['inherited']
Modifiability," nPoints, const bool addDOF=true);  Add a set of points. More...;  ; virtual void addPoints (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Add a set of points. More...;  ; virtual void addPoints (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Add a set of points according to their ancestors topology elements. More...;  ; virtual void removePoints (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Generic method to remove a list of point. More...;  ; void propagateStateChanges () override;  Called by a topology to warn the Mechanical Object component that points have been added or will be removed. More...;  ; void notifyEndingEvent () override;  ;  Public Member Functions inherited from sofa::core::topology::TopologyModifier;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attribu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:8823,inherit,inherited,8823,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,5,['inherit'],['inherited']
Modifiability," names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SparseGridMultipleTopology, SparseGridRamificationTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void buildAsFinest () override;  building from a mesh file More...;  ; void buildFromFiner () override;  building by condensating a finer sparse grid (used if setFinerSparseGrid has initialized _finerSparseGrid before calling init() ) More...;  ; void buildVirtualFinerLevels () override;  building eventual virtual finer levels (cf d_nbVirtualFinerLevels) More...;  ; Index findCube (const type::Vec3 &pos, SReal &fx, SReal &fy, SReal &fz) override;  ; Index findNearestCube (const type::Vec3 &pos, SReal &fx, SReal &fy, SReal &fz) override;  ;  Public Member Functions inherited from sofa::component::topology::container::grid::SparseGridRamificationTopology;  SOFA_CLASS (SparseGridRamificationTopology, SparseGridTopology);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Index findCube (const type::Vec3 &pos, SReal &fx, SReal &fy, SReal &fz) override;  ; Index findNearestCube (const type::Vec3 &pos, SReal &fx, SReal &fy, SReal &fz) override;  ; void findCoarsestParents ();  one per connection, in order to compute findCube by beginning by the finnest and by going up until the coarsest parent More...;  ; void changeIndices (Index oldidx, Index newidx);  when linking similar particules between neighbors, propagate changes to all the sames particles More...;  ; void buildAsFinest () override;  surcharge of functions defined in SparseGridTopology More...;  ; void buildFromFiner () override;  building by condensating a finer sparse grid (used if setFinerSparseGrid has initialized _finerSparseGrid before calli",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:8039,inherit,inherited,8039,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,1,['inherit'],['inherited']
Modifiability," names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; static std::string GetCustomTemplateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; void preAssembleSystem (const core::MechanicalParams *) override;  ; virtual void allocateSystem ();  ; virtual void resizeVectors (sofa::Size n);  Set the size of RHS and solution to n. More...;  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, TVector *globalVector);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ; void copyLocalVectorToGlobalVector (core::MultiVecDerivId v, GraphScatteredVector *globalVector);  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  BaseMatrixLinearSystem ();  ; virtual void postAssembleSystem (const core::MechanicalParams *);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upd",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system.html:14620,inherit,inherited,14620,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_free_system.html,2,['inherit'],['inherited']
Modifiability," need to load different plugins or a plugin with several alternate names) . ◆ d_requireAll. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireAll. Display an error message if any plugin names failed to be loaded. . ◆ d_requireOne. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireOne. Display an error message if no plugin names were successfully loaded. . ◆ d_stopAfterFirstNameFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstNameFound. Stop after the first plugin name that is loaded successfully. . ◆ d_stopAfterFirstSuffixFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstSuffixFound. For each plugin name, stop after the first suffix that is loaded successfully. . ◆ d_suffixMap. sofa::core::objectmodel::Data<type::vector<type::fixed_array<std::string,2> > > sofa::simulation::RequiredPlugin::d_suffixMap. standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix . Constructor details. ◆ RequiredPlugin(). sofa::simulation::RequiredPlugin::RequiredPlugin ; (; ). protected . ◆ ~RequiredPlugin(). sofa::simulation::RequiredPlugin::~RequiredPlugin ; (; ). overrideprotecteddefault . Function details. ◆ loadPlugin(). bool sofa::simulation::RequiredPlugin::loadPlugin ; (; ). load a list of plugins requested in Data . ◆ parse(). void sofa::simulation::RequiredPlugin::parse ; (; sofa::core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::simulation::RequiredPlugin::SOFA_CLASS ; (; RequiredPlugin ; , . core::objectmodel::BaseObject ;  . ). sofasimulationRequiredPlugin; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:15431,plugin,plugin,15431,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability," needs a redraw (ie the camera changed) More...;  . Signals; virtual void redrawn ()=0;  ; virtual void resizeW (int)=0;  ; virtual void resizeH (int)=0;  . Attribute details. ◆ captureTimer. QTimer sofa::gui::qt::viewer::SofaViewer::captureTimer. protected . ◆ colourPickingRenderCallBack. ColourPickingRenderCallBack sofa::gui::qt::viewer::SofaViewer::colourPickingRenderCallBack. protected . ◆ m_backend. std::unique_ptr<EngineBackend> sofa::gui::qt::viewer::SofaViewer::m_backend. protected . ◆ m_isControlPressed. bool sofa::gui::qt::viewer::SofaViewer::m_isControlPressed. protected . Constructor details. ◆ SofaViewer(). sofa::gui::qt::viewer::SofaViewer::SofaViewer ; (; ). ◆ ~SofaViewer(). sofa::gui::qt::viewer::SofaViewer::~SofaViewer ; (; ). override . Function details. ◆ captureEvent(). void sofa::gui::qt::viewer::SofaViewer::captureEvent ; (; ). overridevirtual . Reimplemented from sofa::gui::common::BaseViewer. ◆ configure(). void sofa::gui::qt::viewer::SofaViewer::configure ; (; sofa::component::setting::ViewerSetting * ; viewerConf). overridevirtual . Reimplemented from sofa::gui::common::BaseViewer. ◆ configureViewerTab(). virtual void sofa::gui::qt::viewer::SofaViewer::configureViewerTab ; (; QTabWidget * ; ). inlinevirtual . Optional QTabWidget GUI for a concreate viewer. . ◆ getQWidget(). virtual QWidget* sofa::gui::qt::viewer::SofaViewer::getQWidget ; (; ). pure virtual . Implemented in sofa::gui::qt::viewer::qt::QtViewer, and sofa::gui::qt::viewer::qgl::QtGLViewer. ◆ helpString(). virtual QString sofa::gui::qt::viewer::SofaViewer::helpString ; (; ); const. pure virtual . Implemented in sofa::gui::qt::viewer::qt::QtViewer, and sofa::gui::qt::viewer::qgl::QtGLViewer. ◆ isControlPressed(). bool sofa::gui::qt::viewer::SofaViewer::isControlPressed ; (; ); const. ◆ keyPressEvent(). void sofa::gui::qt::viewer::SofaViewer::keyPressEvent ; (; QKeyEvent * ; e). virtual . Reimplemented in sofa::gui::qt::viewer::qgl::QtGLViewer. ◆ keyReleaseEvent(). void sofa::gui:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html:5459,config,configure,5459,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1_sofa_viewer.html,1,['config'],['configure']
Modifiability," object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html:9789,inherit,inherited,9789,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,1,['inherit'],['inherited']
Modifiability," object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  HausdorffDistance ();  ;  ~HausdorffDistance () override;  ; void handleEvent (core::objectmodel::Event *event) override;  Handle an event. More...;  ; void onBeginAnimationStep (const double);  ; void computeDistances ();  ; Real distance (Coord p, VecCoord S);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html:13781,inherit,inherited,13781,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,1,['inherit'],['inherited']
Modifiability," of all elements of the vector More...;  ; constexpr bool operator== (const Vec &b) const noexcept;  ; constexpr bool operator!= (const Vec &b) const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr const real * data () const noexcept;  ; constexpr iterator begin () noexcept;  ; constexpr const_iterator begin () const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  . Friends; constexpr friend Vec< N, real > operator* (real r, const Vec< N, real > &v) noexcept;  Scalar vector multiplication operator. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::Vec< N, real >; ArrayType elems;  ;  Static Public Attributes inherited from sofa::type::Vec< N, real >; static constexpr sofa::Size static_size;  ; static constexpr Size total_size;  Compile-time constant specifying the number of scalars within this vector (equivalent to static_size and size() method) More...;  ; static constexpr Size spatial_dimensions;  Compile-time constant specifying the number of dimensions of space (equivalent to total_size here) More...;  ;  Static Public Member Functions inherited from sofa::type::Vec< N, real >; static constexpr sofa::Size size ();  . Constructor details. ◆ VecNoInit() [1/3]. template<sofa::Size N, typename real > . constexpr sofa::type::VecNoInit< N, real >::VecNoInit ; (; ). inlineconstexprnoexcept . ◆ VecNoInit() [2/3]. template<sofa::Size N, typename real > . constexpr sofa::type::VecNoInit< N, real >::VecNoInit ; (; const Vec< N, real > & ; v). inlineconstexprnoexcept . ◆ VecNoInit() [3/3]. template<sofa::Size N, typename real > . constexpr sofa::type::VecNoInit< N, real >::VecNoInit ; (; Vec< N, real > && ; v). inlineconstexprnoexcept . Related detai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html:7235,inherit,inherited,7235,api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_vec_no_init.html,2,['inherit'],['inherited']
Modifiability," of the file describing the material parameters for all tetrahedra More...;  ; SingleLink< StandardTetrahedralFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; material::HyperelasticMaterial< DataTypes > * myMaterial;  the array that describes the complete material energy and its derivatives More...;  ; core::topology::TetrahedronData< tetrahedronRestInfoVector > tetrahedronInfo;  Internal tetrahedron data. More...;  ; core::topology::EdgeData< edgeInformationVector > edgeInfo;  Internal edge data. More...;  ; VecCoord myposition;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(StandardTetrahedralFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void setMaterialName (const std::string &name);  ; void setparameter (const type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html:3681,inherit,inherited,3681,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,3,['inherit'],['inherited']
Modifiability," of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; virtual void getConstraintInfo (const ConstraintParams *cParams, VecConstraintBlockInfo &blocks, VecPersistentID &ids, VecConstCoord &positions, VecConstDeriv &directions, VecConstArea &areas);  ; virtual void getConstraintResolution (std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; type::vector< std::string > getIdentifiers ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html:9474,inherit,inherited,9474,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_bilateral_lagrangian_constraint.html,4,['inherit'],['inherited']
Modifiability," of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; DistancesInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(Distances, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:3890,inherit,inherited,3890,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,4,['inherit'],['inherited']
Modifiability," of the penalty force. More...;  ; Data< Real > d_frequency;  frequency of oscillation More...;  ; Data< Real > d_dmin;  Minimum distance from the origin along the normal direction. More...;  ; Data< Real > d_dmax;  Maximum distance from the origin along the normal direction. More...;  ; Data< bool > d_showForces;  draw triangles which have a given pressure More...;  ; SingleLink< OscillatingTorsionPressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::ofstream file;  ; sofa::type::vector< Real > relMomentToApply;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html:2870,inherit,inherited,2870,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability," of the subsets More...;  ; bool canAccessSleepingNode;  Can the visitor access sleeping nodes? More...;  . Public Member Functions;  MechanicalComputeGeometricStiffness (const sofa::core::MechanicalParams *mparams, sofa::core::ConstMultiVecDerivId childForce);  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::MechanicalVisitor;  MechanicalVisitor (const sofa::core::MechanicalParams *m_mparams);  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_geometric_stiffness.html:1397,inherit,inherited,1397,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_geometric_stiffness.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_compute_geometric_stiffness.html,2,['inherit'],['inherited']
Modifiability," on each triangle, for topology modification handling. More...;  ; class  TriangleState;  . Public Attributes; core::topology::TriangleData< VecTriangleInfo > d_triangleInfo;  Internal triangle data (persistent) More...;  ; core::topology::TriangleData< VecTriangleState > d_triangleState;  Internal triangle data (time-dependent) More...;  ; Data< Real > d_damping;  Forcefield intern parameters. More...;  ; Data< Real > d_restScale;  Scale factor applied to rest positions (to simulate pre-stretched materials) More...;  ; Data< bool > d_computePrincipalStress;  Compute principal stress for each triangle. More...;  ; Data< Real > d_stressMaxValue;  Max stress value computed over the triangulation. More...;  ; Data< bool > d_showStressVector;  Display parameters. More...;  ; Data< Real > d_showStressThreshold;  Threshold value to render only stress vectors higher to this threshold. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:2213,inherit,inherited,2213,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['inherit'],['inherited']
Modifiability," operators. More...;  ; Monomial_LD< Real, N > & operator/= (const Real &alpha);  ; Monomial_LD< Real, N > & operator+= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > & operator-= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > & operator*= (const Monomial_LD< Real, N > &b);  ; Monomial_LD< Real, N > operator+ () const;  ; Monomial_LD< Real, N > operator- () const;  ; Monomial_LD< Real, N > operator* (const Real &alpha);  ; Monomial_LD< Real, N > operator/ (const Real &alpha);  ; Monomial_LD< Real, N > operator+ (const Monomial_LD< Real, N > &a);  ; Monomial_LD< Real, N > operator- (const Monomial_LD< Real, N > &a);  ; Monomial_LD< Real, N > operator* (const Monomial_LD< Real, N > &a);  ; Real operator() (const RNpoint &x) const;  Evaluating value. More...;  ; Real operator() (const RNpoint &x, unsigned int idvar) const;  Evaluating first partial derivative by idvar-th variable. More...;  ; Monomial_LD< Real, N > d (const unsigned int &ideriv) const;  Evaluating partial derivative hight order by idvar-th variable in ideriv-th order. More...;  ; void writeToStream (std::ostream &ff) const;  ; void readFromStream (std::istream &ff);  . Friends; template<typename FReal , unsigned int FN> ; Monomial_LD< FReal, FN > & operator* (const FReal &alpha, Monomial_LD< FReal, FN > &r);  . Attribute details. ◆ coef. template<typename Real , unsigned int N> . Real sofa::helper::Monomial_LD< Real, N >::coef. ◆ powers. template<typename Real , unsigned int N> . sofa::type::Vec<N,int> sofa::helper::Monomial_LD< Real, N >::powers. ◆ variables. template<typename Real , unsigned int N> . sofa::type::Vec<N,std::string> sofa::helper::Monomial_LD< Real, N >::variables. protected . Constructor details. ◆ Monomial_LD() [1/3]. template<typename Real , unsigned int N> . sofa::helper::Monomial_LD< Real, N >::Monomial_LD. Tools used in FEM computing . ◆ Monomial_LD() [2/3]. template<typename Real , unsigned int N> . sofa::helper::Monomial_LD< Real, N >::Monomial_LD ; (;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html:2760,variab,variable,2760,api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d.html,1,['variab'],['variable']
Modifiability," option is activated, will give the number of vertices on the border of the ROI (being the n first points of each output Topology). More...;  ; Data< bool > p_localIndices;  If true, will compute local dof indices in topological elements. More...;  ; Data< bool > p_drawROI;  Draw ROI. More...;  ; Data< bool > p_drawPoints;  Draw Points. More...;  ; Data< bool > p_drawEdges;  Draw Edges. More...;  ; Data< bool > p_drawTriangles;  Draw Triangles. More...;  ; Data< bool > p_drawTetrahedra;  Draw Tetrahedra. More...;  ; Data< double > _drawSize;  rendering size for box and topological elements More...;  ; ROIType typeROI;  ; sofa::type::vector< unsigned int > localIndices;  ; sofa::type::vector< unsigned int > listOnBorder;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SubsetTopology, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html:4452,inherit,inherited,4452,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,1,['inherit'],['inherited']
Modifiability," or nullptr if not supported. More...;  ;  Public Member Functions inherited from sofa::core::collision::Intersection;  SOFA_ABSTRACT_CLASS (Intersection, objectmodel::BaseObject);  ; virtual bool isSupported (core::CollisionElementIterator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:11641,inherit,inherited,11641,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['inherit'],['inherited']
Modifiability," override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, double value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, float > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 3, 3, double > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override;  ;  Protected Member Functions inherited from sofa::core::MatrixAccumulatorIndexChecker< BaseAssemblingMatrixAccumulator< c >, sofa::core::matrixaccumulator::NoIndexVerification >; virtual void add (const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, float > &value);  ; virtual void add (const matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 2, 2, double > &value);  ; void indexCheckedAdd (sofa::SignedIndex row, sofa::SignedIndex col, const T &value);  ;  Protected Member Functions inherited from sofa::component::linearsystem::AssemblingMappedMatrixAccumulator< c, TBlockType >;  AssemblingMappedMatrixAccumulator ();  ;  Protected Member Functions inherited from sofa::component::linearsystem::AssemblingMatrixAccumulator< c, TStrategy >; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, float > &value) override;  ; void add (const core::matrixaccumulator::no_check_policy &, sofa::SignedIndex row, sofa::SignedIndex col, const sofa::type::Mat< 6, 6, double > &value) override;  .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html:7814,inherit,inherited,7814,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_sparsity_pattern_local_mapped_matrix.html,2,['inherit'],['inherited']
Modifiability," override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::collision::Pipeline; sofa::type::vector< Intersection * > intersectionMethods;  ; sofa::type::vector< BroadPhaseDetection * > broadPhaseDetections;  ; sofa::type::vector< NarrowPhaseDetection * > narrowPhaseDetections;  ; sofa::type::vector< ContactManager * > contactManagers;  ; sofa::type::vector< CollisionGroupManager * > groupManagers;  ; Intersecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:12836,inherit,inherited,12836,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,1,['inherit'],['inherited']
Modifiability," override;  Helper method for column. More...;  ; unsigned int sizeWidget () override;  Helper method to give a size. More...;  ; bool createWidgets () override;  ;  Public Member Functions inherited from sofa::gui::qt::LinkWidget;  LinkWidget (QWidget *parent, const char *, MyLink *l);  ;  ~LinkWidget () override;  ; virtual void setLink (MyLink *d);  ; const core::objectmodel::BaseLink * getBaseLink () const;  BaseLink pointer accessor function. More...;  ; core::objectmodel::BaseLink * getBaseLink ();  ; void updateVisibility ();  ; bool isDirty ();  . Protected Member Functions; void readFromLink () override;  The implementation of this method tells how the widget reads the value of the link. More...;  ; void writeToLink () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::LinkWidget; static LinkWidget * CreateLinkWidget (const LinkWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::LinkWidget; void WidgetDirty (bool);  ; void LinkOwnerDirty (bool);  ; void LinkBeingChanged ();  ;  Public Slots inherited from sofa::gui::qt::LinkWidget; void updateLinkValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty ();  ; void setWidgetDirty (bool b);  . Attribute details. ◆ innerWidget_. QSimpleEdit sofa::gui::qt::QLinkSimpleEdit::innerWidget_. protected . Constructor details. ◆ QLinkSimpleEdit(). sofa::gui::qt::QLinkSimpleEdit::QLinkSimpleEdit ; (; QWidget * ; parent, . const char * ; name, . core::objectmodel::BaseLink * ; link . ). Function details. ◆ createWidgets(). bool sofa::gui::qt::QLinkSimpleEdit::createWidgets ; (; ). overridevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::LinkWidget. ◆ numColumnWidget(). unsigned int sofa::gui::qt::QLinkSimpleEdit::numColumnWidget ; (; ). inlineoverridevirtual . Helper method for column. ; Reimplemented from sofa::gui::qt::LinkWidget. ◆ readFromLink(). void so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html:1538,inherit,inherited,1538,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_link_simple_edit.html,3,['inherit'],['inherited']
Modifiability," override;  The Context is sleeping. More...;  ; bool canChangeSleepingState () const override;  The Context can change its sleeping state. More...;  ; const Vec3 & getGravity () const override;  Gravity in local coordinates. More...;  ; void setGravity (const Vec3 &) override;  Gravity in local coordinates. More...;  ; SReal getDt () const override;  Simulation timestep. More...;  ; SReal getTime () const override;  Simulation time. More...;  ; bool getAnimate () const override;  Animation flag. More...;  ; void setDt (SReal dt) override;  Simulation timestep. More...;  ; virtual void setTime (SReal t);  Simulation time. More...;  ; void setAnimate (bool val) override;  Animation flag. More...;  ; void setChangeSleepingState (bool val) override;  Sleeping state change of the context. More...;  ; virtual void setDisplayWorldGravity (bool val);  Display flags: Gravity. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseContext;  SOFA_CLASS (BaseContext, Base);  ; ComponentNameHelper & getNameHelper ();  Returns utilitary object to uniquely name objects in the context. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:18816,inherit,inherited,18816,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['inherit'],['inherited']
Modifiability," pointer accessor function. More...;  ; core::objectmodel::BaseData * getBaseData ();  ; void updateVisibility ();  ; bool isDirty ();  ; bool isFilled ();  return if DataWidget as been filled More...;  ; void setFilled (bool value);  method to warn if Data has not been filled at constructor. More...;  ; virtual unsigned int sizeWidget ();  Helper method to give a size. More...;  . Protected Member Functions; virtual void readFromData ();  The implementation of this method tells how the widget reads the value of the data. More...;  ; virtual void writeToData ();  . Protected Slots; void changeMaterial (int);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::qt::TDataWidget< VectorMaterial >; static RealObject * create (RealObject *, CreatorArgument &arg);  ;  Static Public Member Functions inherited from sofa::gui::qt::DataWidget; template<class T > ; static T * create (T *, const CreatorArgument &arg);  ; static DataWidget * CreateDataWidget (const DataWidget::CreatorArgument &dwarg);  ;  Signals inherited from sofa::gui::qt::DataWidget; void WidgetDirty (bool);  ; void DataOwnerDirty (bool);  ; void dataValueChanged (QString dataValueString);  ;  Public Slots inherited from sofa::gui::qt::DataWidget; void updateDataValue ();  ; void updateWidgetValue ();  ; void setWidgetDirty (bool b=true);  ; void fillFromData ();  . Attribute details. ◆ _comboBox. QComboBox* sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_comboBox. protected . ◆ _currentMaterial. core::objectmodel::Data<Material> sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_currentMaterial. protected . ◆ _currentMaterialPos. int sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_currentMaterialPos. protected . ◆ _materialDataWidget. MaterialDataWidget* sofa::gui::qt::materialdatawidget_h::VectorMaterialDataWidget::_materialDataWidget. protected . ◆ _vectorEditedMaterial. VectorMaterial sofa::gui::qt::materialdatawidget_h::Ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html:2859,inherit,inherited,2859,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1materialdatawidget__h_1_1_vector_material_data_widget.html,4,['inherit'],['inherited']
Modifiability," runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SmoothMeshEngine, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void computeB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:2532,inherit,inherited,2532,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,4,['inherit'],['inherited']
Modifiability," should not be called directly. Use the closeGUI() method instead. More...;  . Static Protected Member Functions; static bool canExportJson (const std::string &timerOutputStr, const std::string &timerId);  Return true if the timer output string has a json string and the timer is setup to output json. More...;  . registration of each GUI; static const signed int DEFAULT_NUMBER_OF_ITERATIONS = 1000;  ; static BaseGUI * CreateGUI (const char *name, sofa::simulation::NodeSPtr groot=nullptr, const char *filename=nullptr);  ; static int RegisterGUIParameters (common::ArgumentParser *argumentParser);  ; static void OnNbIterChange (const common::ArgumentParser *, const std::string &strValue);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Attribute details. ◆ DEFAULT_NUMBER_OF_ITERATIONS. constexpr signed int sofa::gui::batch::BatchGUI::DEFAULT_NUMBER_OF_ITERATIONS = 1000. staticconstexpr . ◆ filename. std::string sofa::gui::batch::BatchGUI::filename. protected . ◆ groot. sofa::simulation::NodeSPtr sofa::gui::batch::BatchGUI::groot. protected . ◆ hideProgressBar. bool sofa::gui::batch::BatchGUI::hideProgressBar { false }. inlinestaticprotected . ◆ m_dumpVisitorStream. std::ostringstream sofa::gui::batch::BatchGUI::m_dumpVisitorStream. protected . ◆ nbIter. signed int sofa::gui::batch::BatchGUI::nbIter = BatchGUI::DEFAULT_NUMBER_OF_ITERATIONS. staticprotected . ◆ nbIterInp. std::string sofa::gui::batch::BatchGUI::nbIterIn",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html:4142,inherit,inherited,4142,api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html,1,['inherit'],['inherited']
Modifiability," slices / steps in the extrusion. More...;  ; Data< bool > f_flipNormals;  If true, will inverse point order when creating hexa. More...;  ; Data< VecCoord > f_surfaceVertices;  Position coordinates of the surface. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Quad > > f_surfaceQuads;  Indices of the quads of the surface to extrude. More...;  ; Data< VecCoord > f_extrudedVertices;  Coordinates of the extruded vertices. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Quad > > f_extrudedSurfaceQuads;  List of new surface quads generated during the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Quad > > f_extrudedQuads;  List of all quads generated during the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Hexa > > f_extrudedHexas;  List of hexahedra generated during the extrusion. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeQuadsAndGenerateHexas, DataTypes)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:2150,inherit,inherited,2150,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['inherit'],['inherited']
Modifiability," sofa::Index quadIndex, const SReal *baryCoords);  ; void addPointInTetra (const sofa::Index tetraIndex, const SReal *baryCoords, const sofa::Index pointIndex);  ; void addPointInCube (const sofa::Index cubeIndex, const SReal *baryCoords);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html:4601,inherit,inherited,4601,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,1,['inherit'],['inherited']
Modifiability," sofa::component::collision::geometry::CubeCollisionModel::parentOf. protected . Given the index of a child leaf element, store the index of the parent cube. . Constructor details. ◆ CubeCollisionModel(). sofa::component::collision::geometry::CubeCollisionModel::CubeCollisionModel ; (; ). protected . Function details. ◆ addCube(). Index sofa::component::collision::geometry::CubeCollisionModel::addCube ; (; Cube ; subcellsBegin, . Cube ; subcellsEnd . ). ◆ computeBoundingTree(). void sofa::component::collision::geometry::CubeCollisionModel::computeBoundingTree ; (; int ; maxDepth = 0). overridevirtual . Here we make up the hierarchy (a tree) of bounding boxes which contain final CollisionElements like Spheres or Triangles. The leafs of the tree contain final CollisionElements. This hierarchy is made up from the top to the bottom, i.e., we begin to compute a bounding box containing all CollisionElements, then we divide this big bounding box into two boxes. These new two boxes inherit from the root box and have depth 1. Then we can do the same operation for the new boxes. The division is done only if the box contains more than 4 final CollisionElements and if the depth doesn't exceed the max depth. The division is made along an axis. This axis corresponds to the biggest dimension of the current bounding box. Note : a bounding box is a Cube here. ; Implements sofa::core::CollisionModel. ◆ draw(). void sofa::component::collision::geometry::CubeCollisionModel::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getBoundingTree(). void sofa::component::collision::geometry::CubeCollisionModel::getBoundingTree ; (; sofa::type::vector< std::pair< sofa::type::Vec3, sofa::type::Vec3 > > & ; bounding). inline . ◆ getCubeData(). const CubeData& sofa::component::collision::geometry::CubeCollisionModel::getCubeData ; (; sofa::Index ; index); const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html:22862,inherit,inherit,22862,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube_collision_model.html,1,['inherit'],['inherit']
Modifiability," sofa::component::controller::Controller;  SOFA_CLASS (Controller, core::behavior::BaseController);  ; virtual void onHapticDeviceEvent (core::objectmodel::HapticDeviceEvent *);  HapticDevice event callback. More...;  ; virtual void onKeyPressedEvent (core::objectmodel::KeypressedEvent *);  Xitact event callback. More...;  ; virtual void onKeyReleasedEvent (core::objectmodel::KeyreleasedEvent *);  Key Release event callback. More...;  ; virtual void onJoystickEvent (core::objectmodel::JoystickEvent *);  Joystick event callback. More...;  ; virtual void onEndAnimationStep (const double);  End Animation event callback. More...;  ; virtual void onGUIEvent (core::objectmodel::GUIEvent *);  GUI event callback. More...;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html:2323,inherit,inherited,2323,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,2,['inherit'],['inherited']
Modifiability," sofa::component::playback::ReadState; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  CompareState ();  ;  Protected Member Functions inherited from sofa::component::playback::ReadState;  ReadState ();  ;  ~ReadState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() Mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:12198,inherit,inherited,12198,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,2,['inherit'],['inherited']
Modifiability," sofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent Class Reference . #include <MakeDataAliasComponent.h>; A component to add alias to other components. ; More... Inheritance diagram for sofa::component::sceneutility::makedataaliascomponent::MakeDataAliasComponent:. [legend]; Detailed Description; A component to add alias to other components. ; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected object from this per-file namespace are then imported into their parent namespace. for ease of use . Public Attributes; Data< std::string > d_componentname;  The component class for which to create an alias. More...;  ; Data< std::string > d_dataname;  The data field for which to create an alias. More...;  ; Data< std::string > d_alias;  The alias of the data field. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MakeDataAliasComponent, core::objectmodel::BaseObject)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html:1227,inherit,inherited,1227,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,1,['inherit'],['inherited']
Modifiability," sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const auto CoordSize = Coord::total_size;  . Protected Attributes; std::unique_ptr< AffineMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and al",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:4215,inherit,inherited,4215,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneROI, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html:4080,inherit,inherited,4080,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,1,['inherit'],['inherited']
Modifiability," sofa::core::objectmodel::RenamedData< VecTexCoord > sofa::component::visual::VisualModelImpl::m_vtexcoords. ◆ material. sofa::core::objectmodel::RenamedData< sofa::type::Material > sofa::component::visual::VisualModelImpl::material. ◆ materials. sofa::core::objectmodel::RenamedData< type::vector<sofa::type::Material> > sofa::component::visual::VisualModelImpl::materials. ◆ putOnlyTexCoords. sofa::core::objectmodel::RenamedData<bool> sofa::component::visual::VisualModelImpl::putOnlyTexCoords. ◆ srgbTexturing. sofa::core::objectmodel::RenamedData<bool> sofa::component::visual::VisualModelImpl::srgbTexturing. ◆ texturename. sofa::core::objectmodel::DataFileName sofa::component::visual::VisualModelImpl::texturename. ◆ useTopology. bool sofa::component::visual::VisualModelImpl::useTopology. True if list of d_facets should be taken from the attached topology. . ◆ xforms. sofa::defaulttype::Rigid3fTypes::VecCoord sofa::component::visual::VisualModelImpl::xforms. Temporary added here from RigidState deprecated inheritance. . ◆ xformsModified. bool sofa::component::visual::VisualModelImpl::xformsModified. Constructor details. ◆ VisualModelImpl(). sofa::component::visual::VisualModelImpl::VisualModelImpl ; (; ). protected . Default constructor. . ◆ ~VisualModelImpl(). sofa::component::visual::VisualModelImpl::~VisualModelImpl ; (; ). overrideprotected . Default destructor. . Function details. ◆ applyRotation() [1/2]. void sofa::component::visual::VisualModelImpl::applyRotation ; (; const sofa::type::Quat< SReal > ; ). overridevirtual . Rotate the positions; This method is optional, it is used when the user want to interactively change the position of an object ; Reimplemented from sofa::core::visual::VisualModel. ◆ applyRotation() [2/2]. void sofa::component::visual::VisualModelImpl::applyRotation ; (; const SReal ; rx, . const SReal ; ry, . const SReal ; rz . ). overridevirtual . Apply Rotation from Euler angles (in degree!) ; Reimplemented from sofa::core::visual::VisualMod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:36909,inherit,inheritance,36909,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['inherit'],['inheritance']
Modifiability," sofa::core::objectmodel::RenamedData< bool > active;  ; Data< type::SVector< SkeletonJoint< TDataTypes > > > d_skeletonJoints;  skeleton joints More...;  ; Data< type::SVector< SkeletonBone > > d_skeletonBones;  skeleton bones More...;  ; Data< float > d_animationSpeed;  animation speed More...;  ; Data< bool > d_active;  is the projective constraint activated? More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SkeletalMotionProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void init () override;  Initialization method called at graph creati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html:1587,inherit,inherited,1587,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_skeletal_motion_projective_constraint.html,3,['inherit'],['inherited']
Modifiability," sofa::gl::GLSLShader::SetFragmentShaderFileName ; (; const std::string & ; fileName). inline . ◆ SetFragmentShaderFromString(). void sofa::gl::GLSLShader::SetFragmentShaderFromString ; (; const std::string & ; string). inline . ◆ SetInt(). void sofa::gl::GLSLShader::SetInt ; (; GLint ; variable, . int ; newValue . ). Below are functions to set an integer or a float . ◆ SetInt2(). void sofa::gl::GLSLShader::SetInt2 ; (; GLint ; variable, . int ; i1, . int ; i2 . ). Below are functions to set more than 1 integer or float . ◆ SetInt3(). void sofa::gl::GLSLShader::SetInt3 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3 . ). ◆ SetInt4(). void sofa::gl::GLSLShader::SetInt4 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3, . int ; i4 . ). ◆ SetIntVector(). void sofa::gl::GLSLShader::SetIntVector ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). Below are functions to set a vector of integer or float . ◆ SetIntVector2(). void sofa::gl::GLSLShader::SetIntVector2 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector3(). void sofa::gl::GLSLShader::SetIntVector3 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector4(). void sofa::gl::GLSLShader::SetIntVector4 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetMatrix2(). void sofa::gl::GLSLShader::SetMatrix2 ; (; GLint ; location, . GLsizei ; count, . GLboolean ; transpose, . const GLfloat * ; value . ). Below are functions to set a matrix . ◆ SetMatrix2x3(). void sofa::gl::GLSLShader::SetMatrix2x3 ; (; GLint ; , . GLsizei ; , . GLboolean ; , . const GLfloat * ;  . ). inline . ◆ SetMatrix2x4(). void sofa::gl::GLSLShader::SetMatrix2x4 ; (; GLint ; , . GLsizei ; , . GLboolean ; , . const GLfloat * ;  . ). inline . ◆ SetMatrix3(). void sofa::gl::GLSLShader::SetMatrix3 ; (; GLint ; location, . GLsizei ; count, . GLboolean ; transpose, . const GLfloat * ; value . ). ◆ SetMatrix3x2(). void sofa::gl::GLSLSha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:11039,variab,variable,11039,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,1,['variab'],['variable']
Modifiability," sofa::gl::component::shader::OglShaderMacro Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::gl::component::shader::OglShaderMacro Class Reference . #include <OglShaderMacro.h>; Small class to define macro into an OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglShaderMacro:. [legend]; Detailed Description; Small class to define macro into an OglShader. ; This small abstract class describes macro into an OpenGL shader (GLSL). It was mainly written for implementing #ifdef macro into shader, and therefore, to have a multi-purpose shader (and not many fragmented shaders). . Public Member Functions;  SOFA_CLASS (OglShaderMacro, OglShaderElement);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:1050,variab,variable,1050,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,1,['variab'],['variable']
Modifiability," sofa::gui::qt::QStartNavigationOperation, including all inherited members. buttonsofa::gui::common::Operationprotected; configure(common::PickHandler *picker, sofa::component::setting::MouseButtonSetting *button) overridesofa::gui::qt::QStartNavigationOperationvirtual; sofa::gui::common::StartNavigationOperation::configure(PickHandler *picker, MOUSE_BUTTON b)sofa::gui::common::Operationinlinevirtual; configurePerformer(sofa::gui::component::performer::InteractionPerformer *p) overridesofa::gui::common::StartNavigationOperationprotectedvirtual; createPerformer()sofa::gui::common::Operationvirtual; createWidgetFromData(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::QMouseOperation; defaultPerformerType() overridesofa::gui::common::StartNavigationOperationprotectedvirtual; end()sofa::gui::common::Operationvirtual; endOperation()sofa::gui::common::Operationinlinevirtual; execution()sofa::gui::common::Operationinlinevirtual; getDescription()sofa::gui::common::StartNavigationOperationinlinestatic; getId()sofa::gui::common::Operationinline; getMouseButton() constsofa::gui::common::Operationinline; GetMouseId(unsigned int i)sofa::gui::common::Operationinlinestatic; mbsettingsofa::gui::common::Operationprotected; Operation(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr)sofa::gui::common::Operationinline; performersofa::gui::common::Operation; pickHandlesofa::gui::common::Operationprotected; QStartNavigationOperation()sofa::gui::qt::QStartNavigationOperation; setSetting(sofa::component::setting::MouseButtonSetting *s)sofa::gui::common::Operationinlinevirtual; settingsofa::gui::common::StartNavigationOperationprotected; start()sofa::gui::common::Operationvirtual; StartNavigationOperation()sofa::gui::common::StartNavigationOperationinline; wait()sofa::gui::common::Operationinlinevirtual; WidgetDirty(bool)sofa::gui::qt::QMouseOperationslot; ~Operation()sofa::gui::common::Operationinlinevirtual. Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html:316,config,configure,316,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_start_navigation_operation-members.html,3,['config'],"['configure', 'configurePerformer']"
Modifiability," sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshBoundaryROI, DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; bool inROI (const PointID &index) const;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:2490,inherit,inherited,2490,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['inherit'],['inherited']
Modifiability," sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:13886,inherit,inherited,13886,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,2,['inherit'],['inherited']
Modifiability," sofa::type::vector< Topology::Edge > edgeArray2Moved;  . Public Member Functions;  EdgesMoved_Adding (const sofa::type::vector< Topology::EdgeID > &edgeShell, const sofa::type::vector< Topology::Edge > &edgeArray);  ;  ~EdgesMoved_Adding () override;  ; const sofa::type::vector< Topology::EdgeID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Edge > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ edgeArray2Moved. sofa::type::vector< Topology::Edge > sofa::core::topology::EdgesMoved_Adding::edgeArray2Moved. ◆ edgesAroundVertexMoved. sofa::type::vector< Topology::EdgeID > sofa::core::topology::EdgesMoved_Adding::edgesAroundVertexMoved. Constructor details. ◆ EdgesMoved_Adding(). sofa::core::topology::EdgesMoved_Adding::EdgesMoved_Adding ; (; const sofa::type::vector< Topology::EdgeID > & ; edgeShell, . const sofa::type::vector< Topology::Edge > & ; edgeArray . ). inline . ◆ ~EdgesMoved_Adding(). sofa::core::topology::EdgesMoved_Adding::~EdgesMoved_Adding ; (; ). override . Function details. ◆ getElementArray(). const sofa::type::vector< Topology::Edge >& sofa::core::topology::EdgesMoved_Adding::getElementArray ; (; ); const. inline . ◆ getIndexArray(). const sofa::type::vector< Topology::EdgeID >& sofa::core::topology::EdgesMoved_Adding::getIndexArray ; (; ); const. inline . sofacoretopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___adding.html:1661,inherit,inherited,1661,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___adding.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_moved___adding.html,1,['inherit'],['inherited']
Modifiability," sofa::type::vector< Topology::Quad > quadArray2Moved;  . Public Member Functions;  QuadsMoved_Adding (const sofa::type::vector< Topology::QuadID > &quadShell, const sofa::type::vector< Topology::Quad > &quadArray);  ;  ~QuadsMoved_Adding () override;  ; const sofa::type::vector< Topology::QuadID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Quad > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ quadArray2Moved. const sofa::type::vector< Topology::Quad > sofa::core::topology::QuadsMoved_Adding::quadArray2Moved. ◆ quadsAroundVertexMoved. sofa::type::vector< Topology::QuadID > sofa::core::topology::QuadsMoved_Adding::quadsAroundVertexMoved. Constructor details. ◆ QuadsMoved_Adding(). sofa::core::topology::QuadsMoved_Adding::QuadsMoved_Adding ; (; const sofa::type::vector< Topology::QuadID > & ; quadShell, . const sofa::type::vector< Topology::Quad > & ; quadArray . ). inline . ◆ ~QuadsMoved_Adding(). sofa::core::topology::QuadsMoved_Adding::~QuadsMoved_Adding ; (; ). override . Function details. ◆ getElementArray(). const sofa::type::vector< Topology::Quad >& sofa::core::topology::QuadsMoved_Adding::getElementArray ; (; ); const. inline . ◆ getIndexArray(). const sofa::type::vector< Topology::QuadID >& sofa::core::topology::QuadsMoved_Adding::getIndexArray ; (; ); const. inline . sofacor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html:1664,inherit,inherited,1664,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_quads_moved___adding.html,1,['inherit'],['inherited']
Modifiability," specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void propagateTopologicalEngineChanges ();  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. TODO: temporary duplication of topological events (commented by default) More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this object describes. More...;  ; void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange object to the list of the topology this object describes. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:14941,inherit,inherited,14941,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,2,['inherit'],['inherited']
Modifiability," std::istream & operator>> (std::istream &in, TetrahedronSetTopologyContainer &t);  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:43816,inherit,inherited,43816,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,3,['inherit'],['inherited']
Modifiability," std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has cha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html:11704,inherit,inherited,11704,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,3,['inherit'],['inherited']
Modifiability," std::string &reason) const;  ;  Protected Member Functions inherited from sofa::component::linearsolver::direct::SparseLDLSolverImpl< TMatrix, TVector, NoThreadManager >;  SparseLDLSolverImpl ();  ; void solve_cpu (Real *x, const Real *b, SparseLDLImplInvertData< VecInt, VecReal > *data);  ; void LDL_ordering (int n, int nnz, int *M_colptr, int *M_rowind, Real *M_values, int *perm, int *invperm);  ; void LDL_symbolic (int n, int *M_colptr, int *M_rowind, int *colptr, int *perm, int *invperm, int *Parent);  ; void LDL_numeric (int n, int *M_colptr, int *M_rowind, Real *M_values, int *colptr, int *rowind, Real *values, Real *D, int *perm, int *invperm, int *Parent);  ; void factorize (int n, int *M_colptr, int *M_rowind, Real *M_values, SparseLDLImplInvertData< VecInt, VecReal > *data);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::linearsolver::direct::SparseLDLSolver< TMatrix, TVector, NoThreadManager >; int numStep;  ;  Public Attributes inherited from sofa::component::linearsolver::ordering::OrderingMethodAccessor< TBase >; SingleLink< OrderingMethodAccessor, core::behavior::BaseOrderingMethod, BaseLink::FLAG_STRONGLINK > l_orderingMethod;  . Attribute details. ◆ m_asyncResult. template<class TMatrix , class TVector , class TThreadManager = NoThreadManager> . std::future<void> sofa::component::linearsolver::direct::AsyncSparseLDLSolver< TMatrix, TVector, TThreadManager >::m_asyncResult. protected . Result of the asynchronous task. . ◆ m_asyncThreadInvertData. template<class TMatrix , class TVector , class TThreadManager = NoThreadManager> . InvertData* sofa::component::linearsolver::direct::AsyncSparseLDLSolver< TMatrix, TVector, TThreadManager >::m_asyncThreadInvertData { nullptr }. protected . ◆ m_hasUpdatedMatrix. template<class TMatrix , class TVector , class TThreadManager = NoThreadManager> . bool sofa::component::linearsolver::direct::AsyncSparseLDLSolver< TMatrix, TVector, TThreadManager >::m_hasUpdatedMatrix { false ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html:6517,inherit,inherited,6517,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,2,['inherit'],['inherited']
Modifiability," std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglVariable< float >;  OglVariable ();  ;  ~OglVariable () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html:14694,inherit,inherited,14694,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,4,['inherit'],['inherited']
Modifiability," std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Contact > prevContacts;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes1 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate1;  ; SingleLink< PairStateAccessor< DataTypes1, DataTypes2 >, MechanicalState< DataTypes2 >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > mstate2;  . Public Member F",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:2322,inherit,inherited,2322,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,3,['inherit'],['inherited']
Modifiability," std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad. More...;  ; sofa::type::vector< QuadsAroundVertex > m_quadsAroundVertex;  for each vertex provides the set of quads adjacent to that vertex. More...;  ; sofa::type::vector< QuadsAroundEdge > m_quadsAroundEdge;  for each edge provides the set of quads adjacent to that edge. More...;  ; bool m_quadTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (QuadSetTopologyContainer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:3853,inherit,inherited,3853,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," template<class DATA , class WIDGET > . MyData* sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::m_data. protected . ◆ m_widget. template<class DATA , class WIDGET > . MyWidget* sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::m_widget. protected . Constructor details. ◆ GenericDataWidget(). template<class DATA , class WIDGET > . sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::GenericDataWidget ; (; QWidget * ; parent, . const char * ; name, . MyData * ; d . ). inline . Function details. ◆ create(). template<class DATA , class WIDGET > . template<class RealObject > . static RealObject* sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::create ; (; RealObject * ; , . CreatorArgument & ; arg . ). inlinestatic . ◆ createWidgets(). template<class DATA , class WIDGET > . virtual bool sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::createWidgets ; (; ). inlinevirtual . The implementation of this method holds the widget creation and the signal / slot connections. ; Implements sofa::gui::qt::DataWidget. ◆ readFromData(). template<class DATA , class WIDGET > . virtual void sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::readFromData ; (; ). inlinevirtual . The implementation of this method tells how the widget reads the value of the data. ; Implements sofa::gui::qt::DataWidget. ◆ setDataReadOnly(). template<class DATA , class WIDGET > . virtual void sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::setDataReadOnly ; (; bool ; readOnly). inlinevirtual . This method is called after createWidgets to configure whether the created widgets should be read-only. ; Implements sofa::gui::qt::DataWidget. ◆ writeToData(). template<class DATA , class WIDGET > . virtual void sofa::gui::qt::GenericDataWidget< DATA, WIDGET >::writeToData ; (; ). inlinevirtual . The implementation of this methods needs to tell how the widget can write its value in the data ; Implements sofa::gui::qt::DataWidget. sofaguiqtGenericDataWidget; Generated on Mon Nov 11 2024 03:23:37 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html:4303,config,configure,4303,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_generic_data_widget.html,1,['config'],['configure']
Modifiability," template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlineoverridevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . void sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ getStrainEnergy(). template<class DataTypes > . Real sofa::component::solidmechanics::fem::hyperelastic::material::STVenantKirchhoff< DataTypes >::getStrainEnergy ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ;  . ). inlineoverridevirtual . returns the strain energy of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. sofacomponentsolidmechanicsfemhyperelasticmaterialSTVenantKirchhoff; Generated on Mon Nov 11 2024 03:02:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html:3625,config,configuration,3625,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_s_t_venant_kirchhoff.html,1,['config'],['configuration']
Modifiability," template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; Data< type::Vec< 2, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html:12316,inherit,inherited,12316,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,1,['inherit'],['inherited']
Modifiability," template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; Data< type::Vec< 3, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html:12316,inherit,inherited,12316,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,1,['inherit'],['inherited']
Modifiability," template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:12316,inherit,inherited,12316,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,1,['inherit'],['inherited']
Modifiability," template<class T > ; static std::string templateName (const T *ptr=nullptr);  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionProjectiveConstraintSet< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  AttachProjectiveConstraint ();  ;  AttachProjectiveConstraint (core::behavior::MechanicalState< DataTypes > *mm1, core::behavior::MechanicalState< DataTypes > *mm2);  ;  ~AttachProjectiveConstraint () override;  ; const Real getConstraintFactor (const int index);  ; void doProjectPosition (Coord &x1, Coord &x2, bool freeRotations, unsigned index, Real positionFactor);  ; void doProjectVelocity (Deriv &x1, Deriv &x2, bool freeRotations, unsigned index, Real velocityFactor);  ; void doProjectResponse (Deriv &dx1, Deriv &dx2, bool freeRotations, bool twoway, unsigned index, Real responseFactor);  ; void calcRestRotations ();  ; SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void calcRestRotations ();  ; void doProjectPosition (Coord &x1, Coord &x2, bool freeRotations, unsigned index, Real positionFactor);  ; void doProjectPosition (Coord &x1, Coord &x",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:18610,inherit,inherited,18610,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," than the current node during the top-down traversal or if they are created during the bottom-up traversal. . Classes; struct  StatusStruct;  wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) More...;  . Protected Attributes; LinkParents l_parents;  ;  Protected Attributes inherited from sofa::simulation::Node; bool debug_;  ; bool initialized;  ; std::stack< Visitor * > actionStack;  ; BaseContext * _context;  ; type::vector< MutationListener * > listener;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseContext; ComponentNameHelper m_nameHelper;  . Public Member Functions;  SOFA_CLASS (DAGNode, simulation::Node);  ; virtual Node::SPtr createChild (const std::string &nodeName) override;  Pure Virtual method from Node. More...;  ; void detachFromGraph () override;  Remove the current node from the graph: consists in removing the link to its parent. More...;  ; Parents getParents () const override;  Get a list of parent node. More...;  ; size_t getNbParents () const override;  returns number of parents More...;  ; BaseNode * getFirstParent () const override;  return the first parent (returns nullptr if no parent) More...;  ; bool hasParent (const BaseNode *node) const override;  Test if the given node is a parent of this node. More...;  ; bool hasParent (const BaseContext *context) const;  Test if the given context is a parent of this context. More...;  ; bool hasAncestor (const BaseNode *node) const override;  ; bool hasAncestor (const BaseContext *context) const override; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:1971,inherit,inherited,1971,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['inherit'],['inherited']
Modifiability," that vertex. More...;  ; sofa::type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge. More...;  ; sofa::type::vector< TriangleID > m_trianglesOnBorder;  Set of triangle indices on topology border. More...;  ; sofa::type::vector< EdgeID > m_edgesOnBorder;  Set of edge indices on topology border. More...;  ; sofa::type::vector< PointID > m_pointsOnBorder;  Set of point indices on topology border. More...;  ; bool m_triangleTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (TetrahedronSetTopologyCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:5611,inherit,inherited,5611,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," that vertex. More...;  ; sofa::type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge. More...;  ; sofa::type::vector< TriangleID > m_trianglesOnBorder;  Set of triangle indices on topology border. More...;  ; sofa::type::vector< EdgeID > m_edgesOnBorder;  Set of edge indices on topology border. More...;  ; sofa::type::vector< PointID > m_pointsOnBorder;  Set of point indices on topology border. More...;  ; bool m_triangleTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (TriangleSetTopologyConta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:4357,inherit,inherited,4357,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," the ROI. More...;  ; Data< VecCoord > f_pointsInROI;  Points contained in the ROI. More...;  ; Data< type::vector< Edge > > f_edgesInROI;  Edges contained in the ROI. More...;  ; Data< type::vector< Triangle > > f_trianglesInROI;  Triangles contained in the ROI. More...;  ; Data< type::vector< Tetra > > f_tetrahedraInROI;  Tetrahedra contained in the ROI. More...;  ; Data< bool > p_drawBoxes;  Draw Box(es) More...;  ; Data< bool > p_drawPoints;  Draw Points. More...;  ; Data< bool > p_drawEdges;  Draw Edges. More...;  ; Data< bool > p_drawTriangles;  Draw Triangles. More...;  ; Data< bool > p_drawTetrahedra;  Draw Tetrahedra. More...;  ; Data< float > _drawSize;  rendering size for box and topological elements More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneROI, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variabl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html:2708,inherit,inherited,2708,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,1,['inherit'],['inherited']
Modifiability," the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html:2518,inherit,inherited,2518,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,1,['inherit'],['inherited']
Modifiability," the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html:9402,inherit,inherited,9402,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,1,['inherit'],['inherited']
Modifiability," the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; Matrix operations; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset);  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; template<class IndexArray , class ElementMat > ; void addToMatrix (sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em, SReal scale);  ; virtual void addBToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal bFact, unsigned int &offset);  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addMBKdx (const MechanicalParams *mparams, MultiVecDerivId dfId);  Accumulate the contribution of M, B, and/or K matrices multiplied by the dx vector with the given coefficients. More...;  ; virtual void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual void buildDampingMatrix (DampingMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html:2884,inherit,inherited,2884,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,1,['inherit'],['inherited']
Modifiability," the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::string textureName;  ; FaceType faceType;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (MeshOBJLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ; virtual std::string type ();  ;  Public Member Functions inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:6292,inherit,inherited,6292,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['inherit'],['inherited']
Modifiability," the list of Edge indices around each DOF. More...;  ; bool hasEdges () const;  ; bool hasEdgesAroundVertex () const;  . bool checkConnexity () override;  Checks if the topology has only one connected component. More...;  ; Size getNumberOfConnectedComponent () override;  Returns the number of connected component. More...;  ; const VecEdgeID getConnectedElement (EdgeID elem) override;  Returns the set of element indices connected to an input one (i.e. which can be reached by topological links) More...;  ; const VecEdgeID getElementAroundElement (EdgeID elem) override;  Returns the set of element indices adjacent to a given element (i.e. sharing a link) More...;  ; const VecEdgeID getElementAroundElements (VecEdgeID elems) override;  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  SOFA_CLASS (PointSetTopologyContainer, core::topology::TopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool linkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; bool unlinkTopologyHandlerToData (core::topology::TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType) override;  ; void clear () override;  ; void addPoint (SReal px, SReal py, SReal pz) override;  ; Size getNbPoints () const override;  Returns the number of vertices in this topology. More...;  ; void setNbPoints (Size n) override;  Set the number of vertices in this topology. More...;  ; bool hasPos () const override;  check if vertices in this topology have positions. More...;  ; SReal getPX (Index i) const override;  Returns the X coordinate of the ith DOF. More...;  ; SReal getPY (Index i) const override;  Returns the Y coordinate of the ith DOF. More...;  ; S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:7011,inherit,inherited,7011,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," the mass relative to the DOF at index. More...;  ; void getElementMass (sofa::Index, linearalgebra::BaseMatrix *m) const override;  Get the matrix relative to the DOF at index. More...;  ; bool isDiagonal () const override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const;  ; SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord &x) const;  ; void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void reinit ();  Update method c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:9177,variab,variables,9177,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['variab'],['variables']
Modifiability," the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeEdgesAndGenerateQuads, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html:3273,inherit,inherited,3273,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,1,['inherit'],['inherited']
Modifiability," the same API as sofa::type::vector.Definition: State.h:69; : container of Deriv values with the same API as sofa::type::vector. ; MatrixDeriv ; sofa::core::State::MatrixDerivDataTypes::MatrixDeriv MatrixDerivVector of Jacobians (sparse constraint matrices).Definition: State.h:71; : vector of Jacobians (sparse constraint matrices). . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(State, TDataTypes), BaseState);  ; sofa::type::TBoundingBox< Real > computeBBox () const;  Compute the bounding box independently from the visibility parameters. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ; New vectors access API based on VecId; virtual Data< VecCoord > * write (VecCoordId v)=0;  ; virtual const Data< VecCoord > * read (ConstVecCoordId v) const =0;  ; virtual Data< VecDeriv > * write (VecDerivId v)=0;  ; virtual const Data< VecDeriv > * read (ConstVecDerivId v) const =0;  ; virtual Data< MatrixDeriv > * write (MatrixDerivId v)=0;  ; virtual const Data< MatrixDeriv > * read (ConstMatrixDerivId v) const =0;  ; BaseData vectors access API based on VecId; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html:2877,inherit,inherited,2877,api/master/sofa/html/classsofa_1_1core_1_1_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html,1,['inherit'],['inherited']
Modifiability," the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix4VectorVariable, OglVariable< type::vector< type::Mat4x4f > >);  ;  OglMatrix4VectorVariable ();  ; virtual ~OglMatrix4VectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const type::vector< type::Mat4x4f > &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html:2229,inherit,inherited,2229,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,1,['inherit'],['inherited']
Modifiability," the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(JoinPoints, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html:2097,inherit,inherited,2097,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,1,['inherit'],['inherited']
Modifiability," the system matrix corresponding to . More...;  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:8629,inherit,inherited,8629,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,9,['inherit'],['inherited']
Modifiability," the value at index of data as a string. More...;  ; void setIntegerValue (void *, Index, long long) const override;  Set the value at index of data from an integer value. More...;  ; void setScalarValue (void *, Index, double) const override;  Set the value at index of data from a scalar value. More...;  ; void setTextValue (void *, Index, const std::string &) const override;  Set the value at index of data from a string value. More...;  ; const void * getValuePtr (const void *) const override;  ; void * getValuePtr (void *) const override;  ; const std::type_info * type_info () const override;  Get the type_info for this type. More...;  ;  Public Member Functions inherited from sofa::defaulttype::AbstractTypeInfo; virtual ~AbstractTypeInfo ()=default;  ; const std::string & getCompilationTarget () const;  ; void setCompilationTarget (const std::string &target);  . Protected Member Functions; const TypeInfoId & getBaseTypeId () const override;  ; const TypeInfoId & getValueTypeId () const override;  ;  Protected Member Functions inherited from sofa::defaulttype::AbstractTypeInfo;  AbstractTypeInfo ();  . Constructor details. ◆ NameOnlyTypeInfo(). sofa::defaulttype::NameOnlyTypeInfo::NameOnlyTypeInfo ; (; const std::string & ; name, . const std::string & ;  . ). inline . Function details. ◆ BaseType(). const AbstractTypeInfo* sofa::defaulttype::NameOnlyTypeInfo::BaseType ; (; ); const. inlineoverridevirtual . If the type is a container, returns the TypeInfo for the type of the values inside this container. For example, if the type is fixed_array<fixed_array<int, 2> 3>, it returns the TypeInfo for fixed_array<int, 2>. ; Implements sofa::defaulttype::AbstractTypeInfo. ◆ byteSize(). sofa::Size sofa::defaulttype::NameOnlyTypeInfo::byteSize ; (; ); const. inlineoverridevirtual . The size in bytes of the ValueType For example, the size of a fixed_array<fixed_array<int, 2>, 3>` is 4 on most systems, as it is the byte size of the smallest dimension in the array (int -> 32bi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html:2918,inherit,inherited,2918,api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1defaulttype_1_1_name_only_type_info.html,1,['inherit'],['inherited']
Modifiability," the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; bool checkMultipass (sofa::core::objectmodel::BaseContext *con);  ;  Protected Member Functions inherited from sofa::core::visual::VisualManager;  ~VisualManager () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:14443,inherit,inherited,14443,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,2,['inherit'],['inherited']
Modifiability," the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  UncoupledConstraintCorrection (sofa::core::behavior::MechanicalState< DataTypes > *mm=nullptr);  ; virtual ~UncoupledConstraintCorrection ();  ; void computeDx (const Data< VecDeriv > &f, VecDeriv &x);  Compute dx correction from motion space force vector. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  ConstraintCorrection (MechanicalState< DataTypes > *ms=nullptr);  Default Constructor. More...;  ;  ~ConstraintCorrection () override=default;  Default Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  BaseConstraintCorrection ();  ;  ~BaseConstraintCorrection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:17145,inherit,inherited,17145,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['inherit'],['inherited']
Modifiability," these indices are considered in the second model. More...;  ; Data< Real > f_radius;  Radius to search corresponding fixed point. More...;  ; Data< bool > d_useRestPosition;  If true will use restPosition only at init. More...;  . SetIndex f_indices1;  Indices of the source points on the first model. More...;  ; SetIndex f_indices2;  Indices of the fixed points on the second model. More...;  ; Data< sofa::type::vector< sofa::topology::Edge > > d_edges;  List of edge indices. More...;  ; Data< type::vector< unsigned > > d_indexPairs;  list of couples (parent index + index in the parent) More...;  ; Data< type::vector< Real > > d_distances;  List of distances between pairs of points. More...;  ; Data< bool > d_drawPairs;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(NearestPointROI, DataTypes), sofa::core::DataEngine, SOFA_TEMPLATE2(core::behavior::PairStateAccessor, DataTypes, DataTypes));  ;  NearestPointROI (core::behavior::MechanicalState< DataTypes > *=nullptr, core::behavior::Mechanical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:2140,inherit,inherited,2140,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,1,['inherit'],['inherited']
Modifiability," this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Protected Member Functions inherited from sofa::core::topology::TopologyHandler;  TopologyHandler ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_topologyData. template<class ElementType , class VecT > . t_topologicalData* sofa::core::topology::TopologyDataHandler< ElementType, VecT >::m_topologyData. protected . Apply adding function on moved elements. . Constructor details. ◆ TopologyDataHandler() [1/2]. template<typename ElementType , typename VecT > . sofa::core::topology::TopologyDataHandler< ElementType, VecT >::TopologyDataHandler ; (; t_topologicalData * ; _topologicalData, . sofa::core::topology::BaseMeshTopology * ; _topology, . value_type ; defaultValue = value_type() . ). ◆ TopologyDataHandler() [2/2]. template<typename ElementType , typename VecT > . sofa::core::topology::TopologyDataHandler< ElementType, VecT >::TopologyDataHandler ; (; t_topologica",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html:14974,inherit,inherited,14974,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data_handler.html,2,['inherit'],['inherited']
Modifiability," this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void updatePath ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< std::string >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< std::string >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html:9971,inherit,inherited,9971,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,1,['inherit'],['inherited']
Modifiability," this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:7030,variab,variables,7030,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,1,['variab'],['variables']
Modifiability," this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:4225,variab,variables,4225,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,1,['variab'],['variables']
Modifiability, to Build CGAL Plugin. /failed-to-build-on-visual-studio-2019; ; SOFA - Topic: [SOLVED] Failed to build on Visual Studio 2019. /failed-to-build-on-windows; ; SOFA - Topic: [SOLVED] Failed to build on Windows. /failed-to-load-plugins-when-debugging; ; SOFA - Topic: [SOLVED] Failed to load plugins when debugging. /failing-to-build-cgal-plugin; ; SOFA - Topic: [SOLVED] Failing to build CGAL plugin. /fail-to-compile-sofacv-plugin; ; SOFA - Topic: [SOLVED] Fail to compile SofaCV plugin. /fea-solver-with-sofa-to-make-von-mises-stress-color-mapping; . /feed; ; [SOLVED] FEA Solver with SOFA to make Von Mises Stress color mapping – SOFA. SOFA - Topic: [SOLVED] FEA Solver with SOFA to make Von Mises Stress color mapping. /fem-simulation-with-sofa-qunatifying-displacments-and-forces; ; SOFA - Topic: [SOLVED] FEM Simulation with SOFA -> Quantifying Displacments and Forces. /fiber-reinforced-soft-robot; ; SOFA - Topic: Fiber Reinforced soft robot. /file-name-in-gmshloader-as-a-variable; ; SOFA - Topic: [SOLVED] file name in GmshLoader as a variable. /find-tetrahedra-by-unique-id; ; SOFA - Topic: [SOLVED] find tetrahedra by unique id. /fish-eye-cameras-and-anatomical-model-in-sofa; ; SOFA - Topic: Fish eye cameras and anatomical model in SOFA. /fixedconstraint-not-fixed; . /feed; ; [SOLVED] FixedConstraint not fixed – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] FixedConstraint not fixed. /5; ; SOFA - Topic: [SOLVED] FixedConstraint not fixed. SOFA - Topic: [SOLVED] FixedConstraint not fixed. /fixedconstraint-not-working-with-model-order-reduction; ; SOFA - Topic: FixedConstraint Not working with Model Order Reduction. /fixed-constraints-not-so-fixed-with-genericconstraintsolver; ; SOFA - Topic: [SOLVED] Fixed constraints not so fixed with GenericConstraintSolver. /fixedrotationconstraint-and-linearmovementconstraint-not-working; ; SOFA - Topic: [SOLVED] FixedRotationConstraint and LinearMovementConstraint not working. /fixing-collision-for-a-static-floor; ; SOFA - Topic: [SOLVED,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:304200,variab,variable,304200,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['variab'],['variable']
Modifiability," to a certain type of Element. More...;  ; void removeTopologyHandler (TopologyHandler *_TopologyHandler, sofa::geometry::ElementType elementType);  Remove a TopologyHandler, linked to a certain type of Element. More...;  ; void resetTopologyHandlerList ();  Free each Topology changes in the list and remove them from the list. More...;  ; virtual bool linkTopologyHandlerToData (TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType);  ; virtual bool unlinkTopologyHandlerToData (TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<E",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:23276,inherit,inherited,23276,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['inherit'],['inherited']
Modifiability," to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::string pixmap_filename, QPushButton *b);  ;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions; void init ();  init data member from RealGUI for the viewer initialisation in the GUI More...;  ; void createDisplayFlags (Node::SPtr root);  ; void loadSimulation (bool one_step=false);  ; void eventNewStep ();  ; void eventNewTime ();  ; void keyPressEvent (QKeyEvent *e) override;  ; void startDumpVisitor ();  ; void stopDumpVisitor ();  ; void initViewer (common::BaseViewer *_viewer) override;  init the viewer for the GUI (embedded or not we have to connect some info about viewer in the GUI) More...;  ; virtual int exitApplication (unsi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:4874,inherit,inherited,4874,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,1,['inherit'],['inherited']
Modifiability," to input model. ; Reimplemented in sofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMapping. ◆ setPathInputObject(). void sofa::core::topology::TopologicalMapping::setPathInputObject ; (; const std::string & ; o). inline . Set the path to the objects mapped in the scene graph. . ◆ setPathOutputObject(). void sofa::core::topology::TopologicalMapping::setPathOutputObject ; (; const std::string & ; o). inline . ◆ setTopologies(). void sofa::core::topology::TopologicalMapping::setTopologies ; (; In * ; from, . Out * ; to . ). virtual . Specify the input and output models. . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::topology::TopologicalMapping::SOFA_ABSTRACT_CLASS ; (; TopologicalMapping ; , . objectmodel::BaseObject ;  . ). ◆ updateTopologicalMappingBottomUp(). virtual void sofa::core::topology::TopologicalMapping::updateTopologicalMappingBottomUp ; (; ). inlinevirtual . Method called at each topological changes propagation which comes from the OUTPUT topology to adapt the INPUT topology : ; Reimplemented in sofa::component::mapping::linear::SimpleTesselatedTetraTopologicalMapping. ◆ updateTopologicalMappingTopDown(). virtual void sofa::core::topology::TopologicalMapping::updateTopologicalMappingTopDown ; (; ). pure virtual . Method called at each topological changes propagation which comes from the INPUT topology to adapt the OUTPUT topology : ; Implemented in sofa::component::topology::mapping::Triangle2EdgeTopologicalMapping, sofa::component::topology::mapping::Tetra2TriangleTopologicalMapping, sofa::component::topology::mapping::SubsetTopologicalMapping, sofa::component::topology::mapping::Quad2TriangleTopologicalMapping, sofa::component::topology::mapping::IdentityTopologicalMapping, sofa::component::topology::mapping::Hexa2TetraTopologicalMapping, sofa::component::topology::mapping::Hexa2QuadTopologicalMapping, sofa::component::topology::mapping::Edge2QuadTopologicalMapping, sofa::component::topology::mapping::CenterPointTopologicalMapping, sofa::comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html:23281,adapt,adapt,23281,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,1,['adapt'],['adapt']
Modifiability," to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< CubeCollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ Cube() [1/2]. sofa::component::collision::geometry::Cube::Cube ; (; CubeCollisionModel * ; model = nullptr, . sofa::Index ; index = 0 . ). inline . ◆ Cube() [2/2]. sofa::component::collision::geometry::Cube::Cube ; (; const core::CollisionElementIterator & ; i). inlineexplicit . Function details. ◆ getConeAngle(). SReal sofa::component::collision::geometry::Cube::getConeAngle ; (; ); const. inline . ◆ ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html:3372,inherit,inherited,3372,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_cube.html,1,['inherit'],['inherited']
Modifiability," to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::sceneutility::BaseAddResourceRepository; DataFileName d_repositoryPath;  Path to add to the pool of resources. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html:11199,inherit,inherited,11199,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,2,['inherit'],['inherited']
Modifiability," to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  Stat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html:13756,inherit,inherited,13756,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability," to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >;  PairStateAccessor (MechanicalState< TDataTypes1 > *mm1=nullptr, MechanicalState< TDataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *pt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:20013,inherit,inherited,20013,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,1,['inherit'],['inherited']
Modifiability," to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >;  PairStateAccessor (MechanicalState< TDataTypes1 > *mm1=nullptr, MechanicalState< TDataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Vector operations; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; virtual void addForce (const MechanicalParams *mparams, DataVecDeriv1 &f1, DataVecDeriv2 &f2, const DataVecCoord1 &x1, const DataVecCoord2 &x2, const DataVecDeriv1 &v1, const DataVecDeriv2 &v2)=0;  ; virtual void addDForce (const MechanicalParams *mparams, DataVecDeriv1 &df1, DataVecDeriv2 &df2, const DataVecDeriv1 &dx1, const DataVecDeriv2 &dx2)=0;  ; virtual SReal getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord1 &x1, const DataVecCoord2 &x2) const =0;  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html:14969,inherit,inherited,14969,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,1,['inherit'],['inherited']
Modifiability," track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:11181,inherit,inherited,11181,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,3,['inherit'],['inherited']
Modifiability," track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; class Ray;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html:19648,inherit,inherited,19648,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_ray_collision_model.html,1,['inherit'],['inherited']
Modifiability," triangle. More...;  ; virtual const HexahedraAroundVertex & getHexahedraAroundVertex (PointID i);  Returns the set of hexahedra adjacent to a given vertex. More...;  ; virtual const HexahedraAroundEdge & getHexahedraAroundEdge (EdgeID i);  Returns the set of hexahedra adjacent to a given edge. More...;  ; virtual const VerticesAroundVertex getVerticesAroundVertex (PointID i);  Returns the set of vertices adjacent to a given vertex (i.e. sharing an edge) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  DynamicSparseGridTopologyContainer ();  ;  ~DynamicSparseGridTopologyContainer () override;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  HexahedronSetTopologyContainer ();  ;  ~HexahedronSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; void createQuadSetArray () override;  Creates the QuadSet array. More...;  ; virtual void createHexahedronSetArray ();  Creates the HexahedronSet array. More...;  ; virtual void createEdgesInHexahedronArray ();  Creates the array of edge indices for each hexahedron",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:35753,inherit,inherited,35753,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,1,['inherit'],['inherited']
Modifiability," triangle. More...;  ; virtual const HexahedraAroundVertex & getHexahedraAroundVertex (PointID i);  Returns the set of hexahedra adjacent to a given vertex. More...;  ; virtual const HexahedraAroundEdge & getHexahedraAroundEdge (EdgeID i);  Returns the set of hexahedra adjacent to a given edge. More...;  ; virtual const VerticesAroundVertex getVerticesAroundVertex (PointID i);  Returns the set of vertices adjacent to a given vertex (i.e. sharing an edge) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  HexahedronSetTopologyContainer ();  ;  ~HexahedronSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; void createQuadSetArray () override;  Creates the QuadSet array. More...;  ; virtual void createHexahedronSetArray ();  Creates the HexahedronSet array. More...;  ; virtual void createEdgesInHexahedronArray ();  Creates the array of edge indices for each hexahedron. More...;  ; virtual void createQuadsInHexahedronArray ();  Creates the array of quad indices for each hexahedron. More...;  ; virtual void createHexahedraAroundVertexArray ();  Creates the HexahedraAroundVertex Array",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:36729,inherit,inherited,36729,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," triangle. More...;  ; virtual const HexahedraAroundVertex & getHexahedraAroundVertex (PointID i);  Returns the set of hexahedra adjacent to a given vertex. More...;  ; virtual const HexahedraAroundEdge & getHexahedraAroundEdge (EdgeID i);  Returns the set of hexahedra adjacent to a given edge. More...;  ; virtual const VerticesAroundVertex getVerticesAroundVertex (PointID i);  Returns the set of vertices adjacent to a given vertex (i.e. sharing an edge) More...;  ; virtual const sofa::type::vector< Index > getElementAroundElements (sofa::type::vector< Index > elems);  Returns the set of element indices adjacent to a given list of elements (i.e. sharing a link) More...;  ; const SeqLines & getLines ();  ; Size getNbLines ();  ; Line getLine (LineID i);  ; bool hasPos () const override;  ; SReal getPX (Index) const override;  ; SReal getPY (Index) const override;  ; SReal getPZ (Index) const override;  ; void addLine (Index a, Index b);  ; virtual void addTriangle (Index a, Index b, Index c);  ; virtual void addTetra (Index a, Index b, Index c, Index d);  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Protected Member Functions;  MultilevelHexahedronSetTopologyContainer ();  ;  MultilevelHexahedronSetTopologyContainer (const type::vector< Hexahedron > &hexahedra);  ;  ~MultilevelHexahedronSetTopologyContainer () override;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  HexahedronSetTopologyContainer ();  ;  ~HexahedronSetTopologyContainer () override;  ; void createEdgeSetArray () override;  Creates the EdgeSet array. More...;  ; void createQuadSetArray () override;  Creates the QuadSet array. More...;  ; virtual void createHexahedronSetArray ();  Creates the HexahedronSet array. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:35852,inherit,inherited,35852,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['inherit'],['inherited']
Modifiability," triangles where a pressure is applied (mesh triangles + tessellated quads) More...;  ; Data< Real > d_initialSurfaceArea;  OUT: Initial surface area, as computed from the surface rest position. More...;  ; Data< Real > d_currentSurfaceArea;  OUT: Current surface area, as computed from the last surface position. More...;  ; Data< Real > d_drawForceScale;  DEBUG: scale used to render force vectors. More...;  ; Data< sofa::type::RGBAColor > d_drawForceColor;  DEBUG: color used to render force vectors. More...;  ; Data< Real > d_volumeAfterTC;  OUT: Volume after a topology change. More...;  ; Data< Real > d_surfaceAreaAfterTC;  OUT: Surface area after a topology change. More...;  ; SingleLink< TaitSurfacePressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:4350,inherit,inherited,4350,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability," true (or 1) for fixed, false (or 0) for free. More...;  ; Data< bool > d_projectVelocity;  activate project velocity to maintain a constant velocity More...;  ;  Public Attributes inherited from sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >; SetIndex d_indices;  ; Data< bool > d_fixAll;  filter all the DOF to implement a fixed object More...;  ; Data< bool > d_showObject;  draw or not the fixed constraints More...;  ; Data< SReal > d_drawSize;  Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) More...;  ; Data< bool > d_projectVelocity;  if true, projects not only a constant but a zero velocity More...;  ; SingleLink< FixedProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:1963,inherit,inherited,1963,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['inherit'],['inherited']
Modifiability," true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; OglShader::SPtr m_shaderPostproc;  ; SingleLink< VisualManagerSecondaryPass, OglShader, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_shader;  ;  Protected Attributes inherited from sofa::gl::component::shader::VisualManagerPass; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (VisualManagerSecondaryPass, VisualManagerPass);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawScene (core::visual::VisualParams *vp) overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:2727,inherit,inherited,2727,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,3,['inherit'],['inherited']
Modifiability," true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  . Protected Attributes; sofa::geometry::ElementType m_massTopologyType;  The type of topology to build the mass from the topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:4462,inherit,inherited,4462,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['inherit'],['inherited']
Modifiability," type BaseTopology) ; It first initializes the mesh of the output topology from the mesh of the input topology, and it creates the two Index Maps that maintain the correspondence between the indices of their common elements.; Then, at each propagation of topological changes, it translates the topological change events that are propagated from the INPUT topology into specific actions that call element adding or element removal methods on the OUTPUT topology, and it updates the Index Maps.; So, at each time step, the geometrical and adjacency information are consistent in both topologies. . Public Attributes; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< Index, Index > Glob2LocMap;  ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html:1794,inherit,inherited,1794,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,1,['inherit'],['inherited']
Modifiability," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; BaseVTKReader * r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:4044,inherit,inherited,4044,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,2,['inherit'],['inherited']
Modifiability," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::set< Edge > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:4214,inherit,inherited,4214,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,2,['inherit'],['inherited']
Modifiability," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::string textu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:5125,inherit,inherited,5125,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,2,['inherit'],['inherited']
Modifiability," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Matrix4 d_p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:3533,inherit,inherited,3533,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,2,['inherit'],['inherited']
Modifiability," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:4202,inherit,inherited,4202,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,4,['inherit'],['inherited']
Modifiability," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html:3973,inherit,inherited,3973,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,2,['inherit'],['inherited']
Modifiability," type::vector< PrimitiveGroup > > d_pentahedraGroups;  Groups of Pentahedra. More...;  ; Data< type::vector< PrimitiveGroup > > d_pyramidsGroups;  Groups of Pyramids. More...;  ; Data< bool > d_flipNormals;  Flip Normals. More...;  ; Data< bool > d_triangulate;  Divide all polygons into triangles. More...;  ; Data< bool > d_createSubelements;  Divide all n-D elements into their (n-1)-D boundary elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:17542,inherit,inherited,17542,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,10,['inherit'],['inherited']
Modifiability," type::vector< typename InDOFs::SPtr > inDofs;  mapping input More...;  ; OutDOFs::SPtr outDofs;  mapping output More...;  ; simulation::Node::SPtr root;  Root of the scene graph, created by the constructor an re-used in the tests. More...;  ; simulation::Node::SPtr child;  Child node, created by setupScene. More...;  ; type::vector< simulation::Node::SPtr > parents;  Parent nodes, created by setupScene. More...;  ; simulation::Simulation * simulation;  created by the constructor an re-used in the tests More...;  ; std::pair< Real, Real > deltaRange;  The minimum and maximum magnitudes of the change of each scalar value of the small displacement is deltaRange * numeric_limits<Real>::epsilon. This epsilon is 1.19209e-07 for float and 2.22045e-16 for double. More...;  ; Real errorMax;  The test is successful if the (infinite norm of the) difference is less than maxError * numeric_limits<Real>::epsilon. More...;  ;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  . Public Member Functions;  MultiMapping_test ();  ; void setupScene (int numParents);  ; OutDeriv difference (const OutCoord &c1, const OutCoord &c2);  ; bool runTest (const type::vector< InVecCoord > &parentCoords, const OutVecCoord &expectedChildCoords);  ;  ~MultiMapping_test () override;  ;  Public Member Functions inherited from sofa::testing::BaseSimulationTest;  BaseSimulationTest ();  ; bool importPlugin (const std::string &name);  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Public Member Functions inherited from sofa::testing::NumericTest< _MultiMapping::In::Real >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a fail",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html:1772,inherit,inherited,1772,api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_multi_mapping__test.html,1,['inherit'],['inherited']
Modifiability," uniform variable for a OglShader. ; More... Inheritance diagram for sofa::gl::component::shader::OglVariable< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::gl::component::shader::OglVariable< DataTypes >; Defines an uniform variable for a OglShader. ; This is an abstract class which pass a value to an uniform variable defined into the shader. At the moment, following types are supported :; int, ivec2, ivec3, ivec4;; float, vec2, vec3, vec4;; int[], ivec2[], ivec3[], ivec4[];; float[], vec2[], vec3[], vec4[]; . Public Attributes; Data< DataTypes > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const DataTypes &v);  ; virtual void pushValue ()=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-dow",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:1310,inherit,inherited,1310,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,1,['inherit'],['inherited']
Modifiability," unsigned int sofa::helper::Polynomial_LD< Real, N >::nbOfMonomial. Constructor details. ◆ Polynomial_LD() [1/4]. template<typename Real , unsigned int N> . sofa::helper::Polynomial_LD< Real, N >::Polynomial_LD. Default constructor. . ◆ Polynomial_LD() [2/4]. template<typename Real , unsigned int N> . sofa::helper::Polynomial_LD< Real, N >::Polynomial_LD ; (; const Polynomial_LD< Real, N > & ; a). Copy constructor. . ◆ Polynomial_LD() [3/4]. template<typename Real , unsigned int N> . sofa::helper::Polynomial_LD< Real, N >::Polynomial_LD ; (; const Monomial_LD< Real, N > & ; a). ◆ Polynomial_LD() [4/4]. template<typename Real , unsigned int N> . sofa::helper::Polynomial_LD< Real, N >::Polynomial_LD ; (; const unsigned int ; nbofTerm, .  ; ... . ). setting of Polynomial . Function details. ◆ d(). template<typename Real , unsigned int N> . Polynomial_LD< Real, N > sofa::helper::Polynomial_LD< Real, N >::d ; (; const unsigned int & ; ideriv); const. Evaluating partial derivative hight order by idvar-th variable in ideriv-th order. ; Derivative operator allowing to write p1=p2.d(x); . ◆ degree(). template<typename Real , unsigned int N> . int sofa::helper::Polynomial_LD< Real, N >::degree. ◆ exchangeMonomial(). template<typename Real , unsigned int N> . void sofa::helper::Polynomial_LD< Real, N >::exchangeMonomial ; (; unsigned int ; ithMono, . unsigned int ; jthMono . ). protected . The sort must be done after each constructor and each operation where monomials are inserted. . ◆ getString(). template<typename Real , unsigned int N> . std::string sofa::helper::Polynomial_LD< Real, N >::getString. ◆ operator!=(). template<typename Real , unsigned int N> . bool sofa::helper::Polynomial_LD< Real, N >::operator!= ; (; const Polynomial_LD< Real, N > & ; b); const. inline . ◆ operator()() [1/2]. template<typename Real , unsigned int N> . Real sofa::helper::Polynomial_LD< Real, N >::operator() ; (; const RNpoint & ; x); const. Evaluating. . ◆ operator()() [2/2]. template<typenam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_polynomial___l_d.html:4730,variab,variable,4730,api/master/sofa/html/classsofa_1_1helper_1_1_polynomial___l_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_polynomial___l_d.html,1,['variab'],['variable']
Modifiability," unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; static Object * create (Object *, std::string arg="""");  . Additional Inherited Members;  Static Public Attributes inherited from sofa::helper::io::Image; static const char * strFromDataType [COUNT_OF_DATA_TYPES+1];  ; static const char * strFromChannelFormat [COUNT_OF_CHANNEL_FORMATS+1];  ; static const char * strFromTextureType [TEXTURE_INVALID+1];  ;  Protected Attributes inherited from sofa::helper::io::Image; unsigned char m_bLoaded;  . Constructor details. ◆ STBImage() [1/2]. sofa::helper::io::STBImage::STBImage ; (; ). default . ◆ STBImage() [2/2]. sofa::helper::io::STBImage::STBImage ; (; const std::string & ; filename). inlineexplicit . Function details. ◆ load(). bool sofa::helper::io::STBImage::load ; (; std::string ; filename). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ save(). bool sofa::helper::io::STBImage::save ; (; std::string ; filename, . int ; compression_level = -1 . ). overridevirtual . Reimplemented from sofa::helper::io::Image. ◆ setSTBCreators(). void sofa::helper::io::STBImage::setSTBCreators ; (; ). static . sofahelperioSTBImage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:2243,inherit,inherited,2243,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,2,['inherit'],['inherited']
Modifiability," upper / parent level). The first CollisionModel in this list is the root of the hierarchy and contains only one element. The last CollisionModel contains the leaves of the hierarchy which are the real elements of the object.; Each element inside CollisionModels except for the last one can have a list of children. There are 2 types of child elements: ; internal children: child elements of the same type as their parent (often corresponding to non-final elements) ; external children: child elements of a different type (often corresponding to the final elements) . Public Attributes; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:1732,inherit,inherited,1732,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,1,['inherit'],['inherited']
Modifiability," used in precomputation are modified. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; type::Vec6 getMomentum (const MechanicalParams *mparams, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; SReal getPotentialEnergy (const core::MechanicalParams *mparams, const DataVecCoord &x) const;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams);  Render internal data of this object, for debugging purposes. More...;  ; type::Vec6 getMomentum (const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; type::Vec6 getMomentum (const core::MechanicalParams *, const DataVecCoord &vx, const DataVecDeriv &vv) const;  ; Read and write access functions in mass information; virtual const Real & getMassDensity ();  ; virtual const Real & getTotalMass ();  ; virtual void setVertexMass (sofa::type::vector< Real > vertexMass);  ; virtual void setMassDensity (Real m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:10187,variab,variables,10187,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['variab'],['variables']
Modifiability," uses a factorization which may not be up to date. In practice, the factorization is at least one time step old. Because of this, the solver computes an approximation of the solution, based on an old factorization. It changes the behavior compared to a synchronous version, but it also changes the behavior depending on the duration of the factorization step. It may introduce instabilities. . Protected Attributes; InvertData m_secondInvertData;  ; InvertData * m_mainThreadInvertData { nullptr };  ; InvertData * m_asyncThreadInvertData { nullptr };  ; std::future< void > m_asyncResult;  Result of the asynchronous task. More...;  ; bool waitForAsyncTask { true };  ; std::atomic< bool > newInvertDataReady { false };  ; bool m_hasUpdatedMatrix { false };  ;  Protected Attributes inherited from sofa::component::linearsolver::direct::SparseLDLSolver< TMatrix, TVector, NoThreadManager >; type::vector< sofa::SignedIndex > Jlocal2global;  ; sofa::linearalgebra::FullMatrix< Real > JLinvDinv;  ; sofa::linearalgebra::FullMatrix< Real > JLinv;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real > Mfiltered;  ;  Protected Attributes inherited from sofa::component::linearsolver::direct::SparseLDLSolverImpl< TMatrix, TVector, NoThreadManager >; Data< bool > d_precomputeSymbolicDecomposition;  If true the solver will reuse the precomputed symbolic decomposition. Otherwise it will recompute it at each step. More...;  ; core::objectmodel::lifecycle::DeprecatedData d_applyPermutation;  ; Data< int > d_L_nnz;  Number of non-zero values in the lower triangular matrix of the factorization. The lower, the faster the system is solved. More...;  ; type::vector< Real > Tmp;  ; type::vector< Real > Y;  ; type::vector< int > Lnz;  ; type::vector< int > Flag;  ; type::vector< int > Pattern;  ; type::vector< int > tran_countvec;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE3(AsyncSparseLDLSolver, TMatrix, TVector, TThreadManager), SOFA_TEMPLATE3(SparseLDLSolver, TMatrix, TVector, TThre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html:2043,inherit,inherited,2043,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,2,['inherit'],['inherited']
Modifiability," v1, . float ; v2 . ). ◆ SetFloat4(). void sofa::gl::GLSLShader::SetFloat4 ; (; GLint ; variable, . float ; v0, . float ; v1, . float ; v2, . float ; v3 . ). ◆ SetFloatVector(). void sofa::gl::GLSLShader::SetFloatVector ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector2(). void sofa::gl::GLSLShader::SetFloatVector2 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector3(). void sofa::gl::GLSLShader::SetFloatVector3 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector4(). void sofa::gl::GLSLShader::SetFloatVector4 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFragmentShaderFileName(). void sofa::gl::GLSLShader::SetFragmentShaderFileName ; (; const std::string & ; fileName). inline . ◆ SetFragmentShaderFromString(). void sofa::gl::GLSLShader::SetFragmentShaderFromString ; (; const std::string & ; string). inline . ◆ SetInt(). void sofa::gl::GLSLShader::SetInt ; (; GLint ; variable, . int ; newValue . ). Below are functions to set an integer or a float . ◆ SetInt2(). void sofa::gl::GLSLShader::SetInt2 ; (; GLint ; variable, . int ; i1, . int ; i2 . ). Below are functions to set more than 1 integer or float . ◆ SetInt3(). void sofa::gl::GLSLShader::SetInt3 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3 . ). ◆ SetInt4(). void sofa::gl::GLSLShader::SetInt4 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3, . int ; i4 . ). ◆ SetIntVector(). void sofa::gl::GLSLShader::SetIntVector ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). Below are functions to set a vector of integer or float . ◆ SetIntVector2(). void sofa::gl::GLSLShader::SetIntVector2 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector3(). void sofa::gl::GLSLShader::SetIntVector3 ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; value . ). ◆ SetIntVector4(). void sofa::gl::GLSLShader::SetIntVector4",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:10305,variab,variable,10305,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,1,['variab'],['variable']
Modifiability," value of this node. More...;  . Static Public Member Functions; static constexpr bool isCopyOnWrite ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseData; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Protected Member Functions; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Construction / destruction; static std::string templateName ();  ; BaseData * getNewInstance () override;  ;  Data (const BaseData::BaseInitData &init);  ;  Data (const InitData &init);  ;  Data (const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const char *helpMsg=nullptr, bool isDisplayed=true, bool isReadOnly=false);  ;  Data (const T &value, const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~Data () override;  Destructor. More...;  . Attribute details. ◆ m_counter. template<class T = void*> . int sofa::core::objectmodel::BaseData::m_counter. Number of changes since creation. . ◆ m_defaultValue. template<class T = void*> . T sofa::core::objectmodel::Data< T >::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:10789,inherit,inherited,10789,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['inherit'],['inherited']
Modifiability," variable, float newValue)sofa::gl::GLSLShader; SetFloat2(GLint variable, float v0, float v1)sofa::gl::GLSLShader; SetFloat3(GLint variable, float v0, float v1, float v2)sofa::gl::GLSLShader; SetFloat4(GLint variable, float v0, float v1, float v2, float v3)sofa::gl::GLSLShader; SetFloatVector(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector2(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector3(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector4(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFragmentShaderFileName(const std::string &fileName)sofa::gl::GLSLShaderinline; SetFragmentShaderFromString(const std::string &string)sofa::gl::GLSLShaderinline; SetInt(GLint variable, int newValue)sofa::gl::GLSLShader; SetInt2(GLint variable, int i1, int i2)sofa::gl::GLSLShader; SetInt3(GLint variable, int i1, int i2, int i3)sofa::gl::GLSLShader; SetInt4(GLint variable, int i1, int i2, int i3, int i4)sofa::gl::GLSLShader; SetIntVector(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector2(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector3(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector4(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetMatrix2(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix2x3(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix2x4(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix3(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix3x2(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix3x4(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix4(GLint location, GLsizei count, GLboolean",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html:2963,variab,variable,2963,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,1,['variab'],['variable']
Modifiability," version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1542,inherit,inherited,1542,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['inherit'],['inherited']
Modifiability," virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:2559,variab,variables,2559,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,39,['variab'],['variables']
Modifiability," virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html:6596,variab,variables,6596,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,2,['variab'],['variables']
Modifiability," virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:6632,variab,variables,6632,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,2,['variab'],['variables']
Modifiability," virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  ;  Static Public Member Functions inherited from sofa::gui::common::AddSutureOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  ;  Protected Member Functions inherited from sofa::gui::common::AddSutureOperation; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Attribute details. ◆ damping. QLineEdit* sofa::gui::qt::QAddSutureOperation::damping. protected . ◆ stiffness. QLineEdit* sofa::gui::qt::QAddSutureOperation::stiffness. protected . Constructor details. ◆ QAddSutureOperation(). sofa::gui::qt::QAddSutureOperation::QAddSutureOperation ; (; ). Function details. ◆ configure(). void sofa::gui::qt::QAddSutureOperation::configure ; (; common::PickHandler * ; picker, . common::MOUSE_BUTTON ; b . ). inlineoverridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDamping(). double sofa::gui::qt::QAddSutureOperation::getDamping ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::AddSutureOperation. ◆ getStiffness(). double sofa::gui::qt::QAddSutureOperation::getStiffness ; (; ); const. overridevirtual . Reimplemented from sofa::gui::common::AddSutureOperation. sofaguiqtQAddSutureOperation; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html:2957,config,configure,2957,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_add_suture_operation.html,2,['config'],['configure']
Modifiability," void sofa::gl::GLSLShader::SetActiveShaderProgram ; (; GLhandleARB ; s). static . ◆ SetFloat(). void sofa::gl::GLSLShader::SetFloat ; (; GLint ; variable, . float ; newValue . ). ◆ SetFloat2(). void sofa::gl::GLSLShader::SetFloat2 ; (; GLint ; variable, . float ; v0, . float ; v1 . ). ◆ SetFloat3(). void sofa::gl::GLSLShader::SetFloat3 ; (; GLint ; variable, . float ; v0, . float ; v1, . float ; v2 . ). ◆ SetFloat4(). void sofa::gl::GLSLShader::SetFloat4 ; (; GLint ; variable, . float ; v0, . float ; v1, . float ; v2, . float ; v3 . ). ◆ SetFloatVector(). void sofa::gl::GLSLShader::SetFloatVector ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector2(). void sofa::gl::GLSLShader::SetFloatVector2 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector3(). void sofa::gl::GLSLShader::SetFloatVector3 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFloatVector4(). void sofa::gl::GLSLShader::SetFloatVector4 ; (; GLint ; variable, . GLsizei ; count, . const float * ; value . ). ◆ SetFragmentShaderFileName(). void sofa::gl::GLSLShader::SetFragmentShaderFileName ; (; const std::string & ; fileName). inline . ◆ SetFragmentShaderFromString(). void sofa::gl::GLSLShader::SetFragmentShaderFromString ; (; const std::string & ; string). inline . ◆ SetInt(). void sofa::gl::GLSLShader::SetInt ; (; GLint ; variable, . int ; newValue . ). Below are functions to set an integer or a float . ◆ SetInt2(). void sofa::gl::GLSLShader::SetInt2 ; (; GLint ; variable, . int ; i1, . int ; i2 . ). Below are functions to set more than 1 integer or float . ◆ SetInt3(). void sofa::gl::GLSLShader::SetInt3 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3 . ). ◆ SetInt4(). void sofa::gl::GLSLShader::SetInt4 ; (; GLint ; variable, . int ; i1, . int ; i2, . int ; i3, . int ; i4 . ). ◆ SetIntVector(). void sofa::gl::GLSLShader::SetIntVector ; (; GLint ; variable, . GLsizei ; count, . const GLint * ; valu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:9924,variab,variable,9924,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,1,['variab'],['variable']
Modifiability," void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MeshSplittingEngine ();  ;  ~MeshSplittingEngine () override;  ; void resizeData ();  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html:13800,inherit,inherited,13800,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,1,['inherit'],['inherited']
Modifiability," void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawTransparent (const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Displ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:13126,inherit,inherited,13126,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,3,['inherit'],['inherited']
Modifiability," void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  OrderIndependentTransparencyManager ();  ;  ~OrderIndependentTransparencyManager () override;  ; void drawOpaques (core::visual::VisualParams *vp);  ; void drawTransparents (core::visual::VisualParams *vp, sofa::gl::GLSLShader *oitShader);  ;  Protected Member Functions inherited from sofa::core::visual::VisualManager;  ~VisualManager () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html:13281,inherit,inherited,13281,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,1,['inherit'],['inherited']
Modifiability," void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglIntVariable(). sofa::gl::component::shader::OglIntVariable::OglIntVariable ; (; ). ◆ ~OglIntVariable(). virtual sofa::gl::component::shader::OglIntVariable::~OglIntVariable ; (; ). inlinevirtual . Function details. ◆ pushValue(). void sofa::gl::component::shader::OglIntVariable::pushValue ; (; ). overridevirtual . Implements sofa::gl::component::shader::OglVariable< int >. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglIntVariable::SOFA_CLASS ; (; OglIntVariable ; , . OglVariable< int > ;  . ). sofaglcomponentshaderOglIntVariable; Generated on Mon Nov 11 2024 03:19:11 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:16596,inherit,inherited,16596,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,1,['inherit'],['inherited']
Modifiability," void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Protected Member Functions; void updatePath ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; std::istream & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:10130,inherit,inherited,10130,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,1,['inherit'],['inherited']
Modifiability," void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construct",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:15318,inherit,inherited,15318,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,2,['inherit'],['inherited']
Modifiability," void reset () override=0;  Reset to initial state. More...;  ; virtual void computeCollisionReset ()=0;  Remove collision response from last step. More...;  ; virtual void computeCollisionDetection ()=0;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; virtual void computeCollisionResponse ()=0;  Add collision response in the simulation graph. More...;  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html:2917,inherit,inherited,2917,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,1,['inherit'],['inherited']
Modifiability," void resize (Size size);  ; Index addPoint (const Coord &P, Index index, Real &);  ; void update ();  ; void updateXfree ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< TDataTypes >; virtual ~BaseContactMapper ();  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::collision::response::mapper::RigidContactMapper< collision::geometry::RigidSphereModel, TVec3Types >; MCollisionModel * model;  ; simulation::NodeSPtr child;  ; MMapping::SPtr mapping;  ; MMechanicalState::SPtr outmodel;  ; Size nbp;  ;  Static Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< TDataTypes >; static BaseContactMapper< DataTypes > * Create (core::CollisionModel *model, const std::string &name=std::string(""PenalityContactForceField""));  ; template<class TCollisionModel > ; static ContactMapper< TCollisionModel, DataTypes > * create (ContactMapper< TCollisionModel, DataTypes > *, core::CollisionModel *arg);  ;  Protected Member Functions inherited from sofa::component::collision::response::mapper::RigidContactMapper< collision::geometry::RigidSphereModel, TVec3Types >;  RigidContactMapper ();  . Function details. ◆ addPoint(). template<class TVec3Types > . sofa::Index sofa::component::collision::response::mapper::ContactMapper< collision::geometry::RigidSphereModel, TVec3Types >::addPoint ; (; const typename TVec3Types::Coord & ; P, . sofa::Index ; index, . typename TVec3Types::Real & ; r . ). inline . sofacomponentcollisionresponsemapperContactMapper< collision::geometry::RigidSphereModel, TVec3Types >; Generated on Mon Nov 11 2024 02:34:08 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1ge9afd33a306c10ed2b2f2a46fc688a652.html:1652,inherit,inherited,1652,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1ge9afd33a306c10ed2b2f2a46fc688a652.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_contact_mapper_3_01collision_1_1ge9afd33a306c10ed2b2f2a46fc688a652.html,3,['inherit'],['inherited']
Modifiability," void updateStiffness (const VecCoord &x);  ; void addKToMatrix (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void buildStiffnessMatrix (sofa::core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawPlane (const core::visual::VisualParams *, float size=0.0f);  ; void computeBBox (const core::ExecParams *, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addKToMatrix (sofa::linearalgebra::BaseMatrix *matrix, SReal kFact, unsigned int &offset);  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; virtual void addBToMatrix (sofa::li",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html:5824,inherit,inherited,5824,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,1,['inherit'],['inherited']
Modifiability," void vMultiOp (const ExecParams *params, const VMultiOp &ops);  Perform a sequence of linear vector accumulation operation $r_i = sum_j (v_j*f_{ij})$. More...;  ; virtual SReal vDot (const ExecParams *params, ConstVecId a, ConstVecId b)=0;  Compute the scalar products between two vectors. More...;  ; virtual SReal vSum (const ExecParams *params, ConstVecId a, unsigned l)=0;  Sum of the entries of state vector a at the power of l>0. This is used to compute the l-norm of the vector. More...;  ; virtual SReal vMax (const ExecParams *params, ConstVecId a)=0;  Maximum of the absolute values of the entries of state vector a. This is used to compute the infinite-norm of the vector. More...;  ; virtual Size vSize (const ExecParams *params, ConstVecId v)=0;  Get vector size. More...;  ; virtual void vThreshold (VecId a, SReal threshold)=0;  Apply a threshold (lower bound) to all entries. More...;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:11062,inherit,inherited,11062,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['inherit'],['inherited']
Modifiability," way the FileRepository will not try to look for the file on the hard disk and will directly return then the inherited FileAccess singleton enhanced with the capacity to find ram file will deliver a correct stream to this in-ram virtual file . ◆ vpath. std::vector<std::string> sofa::helper::system::FileRepository::vpath. protected . Vector of paths. . Constructor details. ◆ FileRepository() [1/6]. sofa::helper::system::FileRepository::FileRepository ; (; ). inline . Initialize the set of paths using the environment variable SOFA_DATA_PATH as default. . ◆ FileRepository() [2/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar). inline . Initialize the set of paths using the environment variable specified by the parameter envVar. . ◆ FileRepository() [3/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const char * ; relativePath . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar and the relative path specified by the parameter relativePath. . ◆ FileRepository() [4/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar and the relative paths specified by the parameter paths. . ◆ FileRepository() [5/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const char * ; relativePath, . const fileKeysMap & ; iniFilesAndKeys . ). inline . Initialize the set of paths using the environment variable specified by the parameter envVar, the relative path specified by the parameter relativePath and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ FileRepository() [6/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const std::vector< std::string > & ; paths, . const fileKeysMap ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:4765,variab,variable,4765,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['variab'],['variable']
Modifiability," with nodes per quad. More...;  ; Data< sofa::type::RGBAColor > f_colorNaN;  Color used for NaN values (default=[0.0,0.0,0.0,1.0]) More...;  ; Data< type::Vec2f > d_userRange;  Clamp to this values (if max>min) More...;  ; Data< Real > d_currentMin;  Current min range. More...;  ; Data< Real > d_currentMax;  Current max range. More...;  ; Data< float > d_shininess;  Shininess for rendering point-based data [0,128]. <0 means no specularity. More...;  ; Data< Real > d_transparency;  Add transparency when we draw triangles (this allows to see inside the volume). More...;  ; gl::component::rendering2d::OglColorMap * colorMap;  ; core::State< DataTypes > * state;  ; core::topology::BaseMeshTopology * m_topology;  ; SingleLink< DataDisplay, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Real oldMin;  ; Real oldMax;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_inst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:1911,inherit,inherited,1911,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['inherit'],['inherited']
Modifiability," you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:1544,plugin,plugins,1544,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['plugin'],['plugins']
Modifiability," you put your engine's impl. More...;  ; template<class V > ; void applyIndex (V &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ; void apply (Value &v, const MapIndex &m);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:3628,inherit,inherited,3628,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['inherit'],['inherited']
Modifiability," {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  . Protected Attributes; sofa::geometry::ElementType m_massTopologyType;  The type of topology to build the mass from the topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream > m_gnuplotFileEnergy;  stream to export Kinematic, Potential and Mechanical Energy to gnuplot files More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(DiagonalMass, DataTypes, GeometricalTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; bool load (const char *filename);  ; void clear ();  ; void reinit () override;  Update method called",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:4684,inherit,inherited,4684,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,3,['inherit'],['inherited']
Modifiability," {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:16992,inherit,inherited,16992,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,2,['inherit'],['inherited']
Modifiability," |; List of all members . sofa::component::linearsystem::MatrixProjectionMethod< TMatrix > Class Template Reference . #include <MatrixProjectionMethod.h>. Inheritance diagram for sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >:. [legend]; Detailed Description; template<class TMatrix>; class sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; The component is a @MatrixMapping computing the matrix projection using the Eigen library. . Protected Attributes; Data< bool > d_areJacobiansConstant;  True if mapping jacobians are considered constant over time. They are computed only the first time. More...;  ; std::optional< sofa::type::fixed_array< MappingJacobians< TMatrix >, 2 > > m_mappingJacobians;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MatrixProjectionMethod, TMatrix), SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix));  ;  ~MatrixProjectionMethod () override;  ; void computeMatrixJacobians (const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject);  ;  Public Member Functions inherited from sofa::component::linearsystem::BaseMatrixProjectionMet",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html:1015,inherit,inherited,1015,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_projection_method.html,3,['inherit'],['inherited']
Modifiability," |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::visual::TrailRenderer< DataTypes > Class Template Reference . #include <TrailRenderer.h>. Inheritance diagram for sofa::component::visual::TrailRenderer< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::visual::TrailRenderer< DataTypes >; Render a trail behind particles; It can be used to draw the trajectory of a dof. This component does not support topological changes (point removal or point addition) and list reordering. . Public Attributes; Data< sofa::type::vector< Coord > > d_position;  Position of the particles behind which a trail is rendered. More...;  ; Data< sofa::Size > d_nbSteps;  Number of time steps to use to render the trail. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the trail. More...;  ; Data< float > d_thickness;  Thickness of the trail. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceF",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:1169,inherit,inherited,1169,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,1,['inherit'],['inherited']
Modifiability," |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut > Class Template Reference . #include <VolumeMapping.h>. Inheritance diagram for sofa::component::mapping::nonlinear::VolumeMapping< TIn, TOut >:. [legend]. Public Attributes; SingleLink< VolumeMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html:1188,inherit,inherited,1188,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,1,['inherit'],['inherited']
Modifiability,"  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ isCompliance. objectmodel::lifecycle::DeprecatedData sofa::core::behavior::BaseForceField::isCompliance. Considered as compliance, else considered as stiffness (default to false) . ◆ rayleighStiffness. Data< SReal > sofa::core::behavior::BaseForceField::rayleighStiffness. Rayleigh Damping stiffness matrix coefficient. . Constructor details. ◆ BaseForceField(). sofa::core::behavior::BaseForceField::BaseForceField ; (; ). protected . ◆ ~BaseForceField(). sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:16555,inherit,inherited,16555,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,1,['inherit'],['inherited']
Modifiability,"  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_separateGravity. Data<bool> sofa::core::behavior::BaseMass::m_separateGravity. Member specifying if the gravity is added separately to the DOFs velocities (in solve method), or if is added with the other forces(addForceMethod) . ◆ rayleighMass. Data< SReal > sofa::core::behavior::BaseMass::rayleighMass. Rayleigh Damping mass matrix coefficient. . Constructor details. ◆ BaseMass(). sofa::core::behavior::BaseMass::BaseMass ; (; ). protected . ◆ ~BaseMass(). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html:15293,inherit,inherited,15293,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,1,['inherit'],['inherited']
Modifiability,"  ; Data< Real > d_dmax;  Maximum distance from the origin along the normal direction. More...;  ; Data< bool > d_showForces;  draw triangles which have a given pressure More...;  ; SingleLink< OscillatingTorsionPressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::ofstream file;  ; sofa::type::vector< Real > relMomentToApply;  ; sofa::type::vector< bool > pointActive;  ; sofa::type::vector< Coord > vecFromCenter;  ; sofa::type::vector< Real > distFromCenter;  ; sofa::type::vector< Coord > momentDir;  ; sofa::type::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html:3036,inherit,inherited,3036,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,1,['inherit'],['inherited']
Modifiability,"  ; Data< bool > d_compressible;  Indicates if object compresses without any reaction force. More...;  ; Data< int > d_drawMode;  The way springs will be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring color More...;  ; Data< float > d_showIndicesScale;  Scale for indices display (default=0.02) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecIndex m_firstObjectIndices;  ; VecIndex m_secondObjectIndices;  ; type::vector< JacobianMatrix > m_differential;  ; VecReal m_springLength;  ; VecReal m_strainValue;  ; VecCoord m_weightedCoordinateDifference;  ; type::vector< type::vector< unsigned int > > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html:2415,inherit,inherited,2415,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,1,['inherit'],['inherited']
Modifiability,"  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html:2478,inherit,inherited,2478,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,1,['inherit'],['inherited']
Modifiability,"  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MultiVecDeriv x;  the solution vector is stored for warm-start More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolverAccessor; SingleLink< LinearSolverAccessor, LinearSolver, BaseLink::FLAG_STRONGLINK > l_linearSolver;  . Public Member Functions;  SOFA_CLASS2 (EulerImplicitSolver, sofa::core::behavior::OdeSolver, sofa::core::behavior::LinearSolverAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::Mul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:4024,inherit,inherited,4024,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,2,['inherit'],['inherited']
Modifiability,"  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html:2103,inherit,inherited,2103,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,1,['inherit'],['inherited']
Modifiability,"  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Static Protected Member Functions inherited from sofa::core::loader::BaseLoader; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Constructor details. ◆ MeshXspLoader(). sofa::component::io::mesh::MeshXspLoader::MeshXspLoader ; (; ). protected . Function details. ◆ doClearBuffers(). void sofa::component::io::mesh::MeshXspLoader::doClearBuffers ; (; ). overrideprotectedvirtual . Implements sofa::core::loader::MeshLoader. ◆ doLoad(). bool sofa::component::io::mesh::MeshXspLoader::doLoad ; (; ). overridevirtual . Inherited from MeshLoader. ; Implements sofa::core::loader::MeshLoader. ◆ SOFA_CLASS(). sofa::component::io::mesh::MeshXspLoader::SOFA_CLASS ; (; MeshXspLoader ; , . sofa::core::loader::MeshLoader ;  . ). sofacomponentiomeshMeshXspLoader; Generated on Mon Nov 11 2024 02:46:09 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html:19889,inherit,inherited,19889,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_xsp_loader.html,2,['inherit'],['inherited']
Modifiability,"  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html:14211,inherit,inherited,14211,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,1,['inherit'],['inherited']
Modifiability,"  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< TDataTypes >; AccumulationVecId< TDataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  . Public Member Functions;  SOFA_CLASS (MergeVisualModels, Inherit);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::gl::component::rendering3d::OglModel;  SOFA_CLASS (OglModel, Inherit);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadTexture (const std::string &filename) override;  ; bool loadTextures () override;  ; void initTextures ();  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateBuffers () override;  ; void deleteBuffers () override;  ; void deleteTextures () override;  ; bool hasTransparent () override;  ; bool hasTexture ();  ; bool isUseEdges ();  ; bool isUseTriangles ();  ; bool isUseQuads ();  ; sofa::gl::Texture * getTex () const;  ; GLuint getVbo ();  ; GLuint get",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:8319,variab,variables,8319,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,1,['variab'],['variables']
Modifiability,"  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SpotLight, PositionalLight);  ;  SpotLight ();  ;  ~SpotLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *vparams) override;  Draw the light source from an external point of view. More...;  ; void preDrawShadow (core::visual::VisualParams *vp) override;  ; GLuint getDepthTexture () override;  ; GLuint getColorTexture () override;  ; type::Vec3 getDirection () override;  ; LightType getLightType () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::PositionalLight;  SOFA_CLASS (PositionalLight, Light);  ;  PositionalLight ();  ;  ~PositionalLight () override;  ; const sofa::type::Vec3 getPosition () override;  ;  Public Member Functions inherited from sofa::gl::component::shader::Light;  SOFA_CLASS (Light, core::visual::VisualModel);  ; void setID (const GLint &id);  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *vparams) override;  ; GLfloat getZNear ();  ; GLfloat getZFar ();  ; virtual void postDrawShadow ();  ; virtual GLuint getShadowMapSize ();  ; const GLfloat * getOpenGLProjectionMatrix ();  ; const GLfloat * getOpenGLModelViewMatrix ();  ; virtual unsigned short getShadowTextureUnit ();  ; virtual void setShadowTextureUnit (const unsigned short unit);  ; virtual float getShadowFactor ();  ; virtual float getVSML",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html:4064,inherit,inherited,4064,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,2,['inherit'],['inherited']
Modifiability,"  ; sofa::core::objectmodel::RenamedData< sofa::type::Material > material;  ; sofa::core::objectmodel::RenamedData< bool > putOnlyTexCoords;  ; sofa::core::objectmodel::RenamedData< bool > srgbTexturing;  ; Data< sofa::type::Material > d_material;  ; Data< bool > d_putOnlyTexCoords;  ; Data< bool > d_srgbTexturing;  ; sofa::core::objectmodel::RenamedData< type::vector< sofa::type::Material > > materials;  ; sofa::core::objectmodel::RenamedData< type::vector< FaceGroup > > groups;  ; Data< type::vector< sofa::type::Material > > d_materials;  ; Data< type::vector< FaceGroup > > d_groups;  ; SingleLink< VisualModelImpl, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::defaulttype::Rigid3fTypes::VecCoord xforms;  Temporary added here from RigidState deprecated inheritance. More...;  ; bool xformsModified;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanci",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:5260,inherit,inherited,5260,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['inherit'],['inherited']
Modifiability,"  ; sofa::type::vector< QuadsAroundEdge > m_quadsAroundEdge;  for each edge provides the set of quads adjacent to that edge. More...;  ; bool m_quadTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNumberOfHexahedra () const;  Returns the number of hexahedra in this topology. The difference to getNbHexahedra() is that this method does not generate the hexa array if it do",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:5308,inherit,inherited,5308,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,2,['inherit'],['inherited']
Modifiability,"  ; sofa::type::vector< QuadsAroundEdge > m_quadsAroundEdge;  for each edge provides the set of quads adjacent to that edge. More...;  ; bool m_quadTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  . Public Member Functions;  SOFA_CLASS (QuadSetTopologyContainer, EdgeSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; Size getNumberOfQuads () const;  Returns the number of quads in this topology. The difference to getNbQuads() is that this method does not generate the quad array if it does not exist. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:4082,inherit,inherited,4082,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,2,['inherit'],['inherited']
Modifiability,"  ; sofa::type::vector< QuadsAroundEdge > m_quadsAroundEdge;  for each edge provides the set of quads adjacent to that edge. More...;  ; bool m_quadTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::topology::BaseMeshTopology; sofa::core::objectmodel::DataFileName fileTopology;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Pub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:45922,inherit,inherited,45922,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,4,['inherit'],['inherited']
Modifiability,"  ; std::map< const sofa::core::behavior::BaseMechanicalState *, linearalgebra::BaseMatrix * > mappedMatrices;  ; std::map< const sofa::core::behavior::BaseMechanicalState *, MatrixRef > diagonalStiffnessBloc;  ; std::map< std::pair< const sofa::core::behavior::BaseMechanicalState *, const sofa::core::behavior::BaseMechanicalState * >, InteractionMatrixRef > interactionStiffnessBloc;  ; std::vector< sofa::core::BaseMapping * > mappingList;  . Public Member Functions;  DefaultMultiMatrixAccessor ();  ;  ~DefaultMultiMatrixAccessor () override;  ; virtual void clear ();  ; virtual void setGlobalMatrix (linearalgebra::BaseMatrix *matrix);  ; void addMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; void addMechanicalMapping (sofa::core::BaseMapping *mapping) override;  ; void addMappedMechanicalState (const sofa::core::behavior::BaseMechanicalState *mstate) override;  ; virtual void setupMatrices ();  ; Index getGlobalDimension () const override;  ; int getGlobalOffset (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; MatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; InteractionMatrixRef getMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2) const override;  ; virtual void computeGlobalMatrix ();  ; void setDoPrintInfo (bool value);  ;  Public Member Functions inherited from sofa::core::behavior::MultiMatrixAccessor; virtual ~MultiMatrixAccessor ();  . Static Public Member Functions; static linearalgebra::BaseMatrix * createMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2);  ; static linearalgebra::BaseMatrix * createMatrixImpl (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2, bool doPrintInfo);  . Attribute details. ◆ diagonalStiffnessBloc. std::map<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html:2139,inherit,inherited,2139,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_default_multi_matrix_accessor.html,1,['inherit'],['inherited']
Modifiability,"  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Contact ();  ;  ~Contact () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html:11326,inherit,inherited,11326,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,1,['inherit'],['inherited']
Modifiability,"  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Inv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html:19721,inherit,inherited,19721,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,1,['inherit'],['inherited']
Modifiability,"  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ found. template<class T > . std::vector<T*> sofa::simulation::FindByTypeVisitor< T >::found. The result of the search: contains pointers to all components of the given type found. . Constructor details. ◆ FindByTypeVisitor(). template<class T > . sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html:3517,inherit,inherited,3517,api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_find_by_type_visitor.html,2,['inherit'],['inherited']
Modifiability,"  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ gnuplotDirectory. std::string sofa::simulation::InitGnuplotVisitor::gnuplotDirectory. Constructor details. ◆ InitGnuplotVisitor(). sofa::simulation::InitGnuplotVisitor::InitGnuplotVisitor ; (; const core::ExecParams * ; params, . std::string ; dir . ). ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html:3276,inherit,inherited,3276,api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_init_gnuplot_visitor.html,2,['inherit'],['inherited']
Modifiability,"  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class VisitorType , class VContext , class ObjectType > ; Result runVisitorTask (VisitorType *visitor, VContext *ctx, Result(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; void for_each (Visit *visitor, VContext *ctx, const Container &list, void(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  ; template<class Visit , class VContext , class Container , typename PointedType = typename Container::pointed_type> ; Visitor::Result for_each (Visit *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ maxBBox. SReal sofa::simulation::VisualComputeBBoxVisitor::maxBBox[3]. ◆ minBBox. SReal sofa::simulation::VisualComputeBBoxVisitor::minBBox[3]. Constructor details. ◆ VisualComputeBBoxVisitor(). sofa::simulation::VisualComputeBBoxVisitor::VisualComputeB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html:3572,inherit,inherited,3572,api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visual_compute_b_box_visitor.html,2,['inherit'],['inherited']
Modifiability,"  ; virtual void createContacts (const DetectionOutputMap &outputs)=0;  ; virtual const ContactVector & getContacts ();  ; virtual void removeContacts (const ContactVector &c);  virtual methods used for cleaning the pipeline after a dynamic graph node deletion. More...;  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual std::string getContactResponse (core::CollisionModel *model1, core::CollisionModel *model2)=0;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html:2755,inherit,inherited,2755,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html,1,['inherit'],['inherited']
Modifiability,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:7098,inherit,inherited,7098,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,186,['inherit'],['inherited']
Modifiability,"  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:3853,inherit,inherited,3853,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['inherit'],['inherited']
Modifiability,"  ; void SetShaderFileName (GLint target, const std::string &fileName);  This function loads and returns a text file for our shaders. More...;  ; void SetShaderFromString (GLint target, const std::string &shaderContent);  ; void SetVertexShaderFileName (const std::string &fileName);  ; void SetVertexShaderFromString (const std::string &string);  ; void SetFragmentShaderFileName (const std::string &fileName);  ; void SetFragmentShaderFromString (const std::string &string);  ; std::string GetShaderStageName (GLint target);  ; std::string LoadTextFile (const std::string &strFile);  This loads our text file for each shader and returns it in a string. More...;  ; void InitShaders ();  This function loads a vertex and fragment shader file. More...;  ; void forceReloadShaderFromFile (const std::string &filename);  ; void InitShaders (const std::string &strVertex, const std::string &strFragment);  This loads a vertex and fragment shader. More...;  ; GLint GetVariable (std::string strVariable);  This returns an ID for a variable in our shader. More...;  ; GLint GetAttributeVariable (std::string strVariable);  This returns an ID for an attribute variable in our shader. More...;  ; void Release ();  This releases our memory for our shader. More...;  . bool IsReady () const;  ; GLhandleARB GetProgram () const;  ; std::string GetShaderFileName (GLint type) const;  ; std::string GetShaderString (GLint type) const;  ; std::string GetHeader () const;  ; bool IsSet (GLint type) const;  ; GLhandleARB GetShaderID (GLint type) const;  ; std::string GetVertexShaderFileName () const;  ; GLhandleARB GetVertexShaderID () const;  ; std::string GetFragmentShaderFileName () const;  ; GLhandleARB GetFragmentShaderID () const;  . void SetInt (GLint variable, int newValue);  ; void SetFloat (GLint variable, float newValue);  . void SetInt2 (GLint variable, int i1, int i2);  ; void SetInt3 (GLint variable, int i1, int i2, int i3);  ; void SetInt4 (GLint variable, int i1, int i2, int i3, int i4);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html:2113,variab,variable,2113,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader.html,1,['variab'],['variable']
Modifiability,"  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ExtrudeQuadsAndGenerateHexas ();  ;  ~ExtrudeQuadsAndGenerateHexas () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:14006,inherit,inherited,14006,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['inherit'],['inherited']
Modifiability,"  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:14959,inherit,inherited,14959,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['inherit'],['inherited']
Modifiability,"  ; void checkNewCollisionModels ();  Get the result of the broad phase and check if there are some new collision models that was not yet processed. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:4034,inherit,inherited,4034,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['inherit'],['inherited']
Modifiability,"  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:1954,inherit,inherited,1954,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,7,['inherit'],['inherited']
Modifiability,"  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:3221,inherit,inherited,3221,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,1,['inherit'],['inherited']
Modifiability,"  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _completeTopology. template<class DataTypes > . sofa::core::topology::BaseMeshTopology* sofa::component::mechanicalload::EdgePressureForceField< DataTypes >::_completeTopology {nullptr}. protected . ◆ arrowSizeCoef. t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html:20222,inherit,inherited,20222,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,2,['inherit'],['inherited']
Modifiability,"  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _initialPoints. template<class DataTypes > . VecCoord sofa::component::solidmechanics::tensormass::TetrahedralTensorMassForceField< DataTypes >::_initialPoints. protected . the initial positions of the points . ◆ d_ed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html:19676,inherit,inherited,19676,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_tetrahedral_tensor_mass_force_field.html,2,['inherit'],['inherited']
Modifiability,"  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _initialPoints. template<class DataTypes > . VecCoord sofa::component::solidmechanics::tensormass::TriangularTensorMassForceField< DataTypes >::_initialPoints. protected . the initial positions of the points . ◆ d_edg",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html:19581,inherit,inherited,19581,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1tensormass_1_1_triangular_tensor_mass_force_field.html,2,['inherit'],['inherited']
Modifiability,"  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ _initialPoints. template<class DataTypes > . sofa::core::objectmodel::RenamedData<VecCoord> sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::_initialPoints. protected . ◆ d_d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html:20204,inherit,inherited,20204,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field.html,2,['inherit'],['inherited']
Modifiability,"  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:15683,inherit,inherited,15683,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,11,['inherit'],['inherited']
Modifiability,"  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairInteractionProjectiveConstraintSet (MechanicalState< DataTypes > *mm1=nullptr, MechanicalState< DataTypes > *mm2=nullptr);  ;  ~PairInteractionProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html:15923,inherit,inherited,15923,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,3,['inherit'],['inherited']
Modifiability,"  ;  ~BaseROI () override=default;  ; bool isPointIn (const PointID pid) const;  ; template<typename Element > ; bool isInROI (const Element &e) const;  ; template<typename Element > ; bool isInStrictROI (const Element &e) const;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html:20699,inherit,inherited,20699,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  StartNavigationButtonSetting ();  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html:9440,inherit,inherited,9440,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_start_navigation_button_setting.html,2,['inherit'],['inherited']
Modifiability,"  BaseCollisionElementIterator (Index index, VIterator it, VIterator itend);  ;  BaseCollisionElementIterator (VIterator it, VIterator itend);  ; void next ();  Increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator++ ();  Prefix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator operator++ (int);  Postfix increment this iterator to reference the next element. More...;  ; BaseCollisionElementIterator & operator+= (int n);  ; BaseCollisionElementIterator operator+ (int n) const;  ; Index getIndex () const;  ; const VIterator & getVIterator () const;  Return the current iterator in the vector of indices, in case such a vector is currently used. More...;  ; const VIterator & getVIteratorEnd () const;  Return the end iterator in the vector of indices, in case such a vector is currently used. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::TCollisionElementIterator< CollisionModel >; Model * model;  CollisionModel containing the referenced element. More...;  ;  Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; Index index;  index of the referenced element inside the CollisionModel. More...;  ; VIterator it;  current position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ; VIterator itend;  end position in a vector of indices, in case this iterator traverse a non-contiguous set of indices More...;  ;  Static Protected Attributes inherited from sofa::core::BaseCollisionElementIterator; static std::vector< int > SOFA_CORE_API emptyVector;  empty vector to be able to initialize the iterator to an empty pair More...;  . Constructor details. ◆ CollisionElementIterator() [1/4]. sofa::core::CollisionElementIterator::CollisionElementIterator ; (; CollisionModel * ; model = nullptr, . Index ; index = 0 . ). inline . Constructor. In most cases it will be used by the Coll",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator.html:4163,inherit,inherited,4163,api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_element_iterator.html,1,['inherit'],['inherited']
Modifiability,"  By default, assume that all edges have the same stiffness. More...;  ; Data< SReal > d_viscosity;  By default, assume that all edges have the same viscosity. More...;  ; Data< bool > d_useTopology;  Activate/Deactivate topology mode of the component (springs on each edge) More...;  ; SingleLink< VectorSpringForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; bool useTopology;  true if the springs are",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:2193,inherit,inherited,2193,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['inherit'],['inherited']
Modifiability,"  ConstantForceField ();  ; sofa::core::objectmodel::ComponentState updateFromIndices ();  Functions updating data. More...;  ; sofa::core::objectmodel::ComponentState updateFromForcesVector ();  ; sofa::core::objectmodel::ComponentState updateFromTotalForce ();  ; bool checkForce (const Deriv &force);  Functions checking inputs before update. More...;  ; bool checkForces (const VecDeriv &forces);  ; sofa::core::objectmodel::ComponentState computeForceFromSingleForce (const Deriv singleForce);  Functions computing and updating the constant force vector. More...;  ; sofa::core::objectmodel::ComponentState computeForceFromForcesVector (const VecDeriv &forces);  ; sofa::core::objectmodel::ComponentState computeForceFromTotalForce (const Deriv &totalForce);  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:18164,inherit,inherited,18164,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,4,['inherit'],['inherited']
Modifiability,"  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ CenterPointTopologicalMapping(). sofa::component::topology::mapping::CenterPointTopologicalMapping::CenterPointTopologicalMapping ; (; ). protected . Constructor. . ◆ ~CenterPointTopologicalMapping(). sofa::component::topology::mapping::CenterPointTopologicalMapping::~CenterPointTopologicalMapping ; (; ). inlineoverrideprotected . Destructor. ; Does nothing. . Function details. ◆ getFromIndex(). Index sofa::component::topology::mapping::CenterPointTopologicalMapping::getFromIndex ; (; Index ; ind). inlineoverridevirtual . Reimplemented from sofa::core::topology::TopologicalMapping. ◆ getGlobIndex(). Index sofa::component::topology::mapping::CenterPointTopologicalMapping::getGlobIndex ; (; Index ; ind). inlineoverridevirtual . Reimplemented from sofa::core::topology::TopologicalMapping. ◆ init(). void sofa::component::topology::mapping::CenterPointTopologicalMapping::init ; (; void ; ). overridevirtual . Initializes the target BaseTopology from the source BaseTopology. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::topology::mapping::CenterPointTopologicalMapping::SOFA_CLASS ; (; CenterPointTopologicalMapping ; , . sofa::core::topology::TopologicalMapping ;  . ). ◆ updateTopologicalMappingTopDown(). void sofa::component::topology::mapping::CenterPointTopologicalMapping::updateTopologicalMappingTopDown ; (; ). overridevirtual . Method called at each topological changes propagation which comes from the INPUT topology to adapt the OUTPUT topology : ; Implements sofa::core::topology::TopologicalMapping. sofacomponenttopologymappingCenterPointTopologicalMapping; Generated on Mon Nov 11 2024 03:10:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html:18158,adapt,adapt,18158,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_center_point_topological_mapping.html,1,['adapt'],['adapt']
Modifiability,"  Indices of the tetrahedra not contained in the ROI. More...;  ; Data< SetIndex > d_hexahedronOutIndices;  Indices of the hexahedra not contained in the ROI. More...;  ; Data< bool > d_drawROI;  Draw the ROI. (default = false) More...;  ; Data< bool > d_drawPoints;  Draw Points. (default = false) More...;  ; Data< bool > d_drawEdges;  Draw Edges. (default = false) More...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< OrientedBox > m_orientedBox",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html:5378,inherit,inherited,5378,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"  Indices of the tetrahedra not contained in the ROI. More...;  ; Data< SetIndex > d_hexahedronOutIndices;  Indices of the hexahedra not contained in the ROI. More...;  ; Data< bool > d_drawROI;  Draw the ROI. (default = false) More...;  ; Data< bool > d_drawPoints;  Draw Points. (default = false) More...;  ; Data< bool > d_drawEdges;  Draw Edges. (default = false) More...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseROI, Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html:4856,inherit,inherited,4856,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"  Indices of the tetrahedra not contained in the ROI. More...;  ; Data< SetIndex > d_hexahedronOutIndices;  Indices of the hexahedra not contained in the ROI. More...;  ; Data< bool > d_drawROI;  Draw the ROI. (default = false) More...;  ; Data< bool > d_drawPoints;  Draw Points. (default = false) More...;  ; Data< bool > d_drawEdges;  Draw Edges. (default = false) More...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshROI, Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html:5831,inherit,inherited,5831,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"  Indices of the tetrahedra not contained in the ROI. More...;  ; Data< SetIndex > d_hexahedronOutIndices;  Indices of the hexahedra not contained in the ROI. More...;  ; Data< bool > d_drawROI;  Draw the ROI. (default = false) More...;  ; Data< bool > d_drawPoints;  Draw Points. (default = false) More...;  ; Data< bool > d_drawEdges;  Draw Edges. (default = false) More...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereROI, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html:5938,inherit,inherited,5938,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"  MechanicalEndIntegrationVisitor (const sofa::core::ExecParams *_params, SReal _dt);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *) override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the ConstraintSolver. More...;  ; virtual Result fwdMe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor.html:1572,inherit,inherited,1572,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_end_integration_visitor.html,1,['inherit'],['inherited']
Modifiability,"  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map) override;  Process the BaseMechanicalMapping. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; void getClosestParticle (sofa::core::behavior::BaseMechanicalState *&mstate, sofa::Index &indexCollisionElement, type::Vec3 &point, SReal &rayLength);  get the closest pickable particle More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the Cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_visitor.html:2127,inherit,inherited,2127,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_pick_particles_visitor.html,1,['inherit'],['inherited']
Modifiability,"  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PrimitiveUpdate, sofa::core::DataEngine);  ;  PrimitiveUpdate (MeshTopology *t);  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this no",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:1608,inherit,inherited,1608,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,1,['inherit'],['inherited']
Modifiability,"  Protected Member Functions inherited from sofa::core::visual::Shader;  Shader ();  ;  ~Shader () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglShader; Data< bool > turnOn;  Activates or not the shader. More...;  ; Data< bool > passive;  ; sofa::core::objectmodel::DataFileNameVector vertFilename;  Files where vertex shader is defined. More...;  ; sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:15980,inherit,inherited,15980,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,2,['inherit'],['inherited']
Modifiability,"  Protected Member Functions inherited from sofa::core::visual::Shader;  Shader ();  ;  ~Shader () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:18278,inherit,inherited,18278,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['inherit'],['inherited']
Modifiability,"  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::set< Edge > uniqueEdges;  edges without redundancy More...;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (GridMeshCreator, sofa::core::loader::MeshLoader);  ; virtual std::string type ();  ; bool canLoad () override;  ; bool doLoad () override;  create the grid More...;  ;  Public M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:5399,inherit,inherited,5399,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['inherit'],['inherited']
Modifiability,"  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolver; bool frozen;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html:13595,inherit,inherited,13595,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,3,['inherit'],['inherited']
Modifiability,"  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  FixedProjectiveConstraint ();  ; virtual ~FixedProjectiveConstraint ();  ; void checkIndices ();  Function check values of given indices. More...;  ; void computeBBoxForIndices (const type::vector< Index > &indices);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:17200,inherit,inherited,17200,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,4,['inherit'],['inherited']
Modifiability,"  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  . Protected Member Functions;  BaseInteractionConstraint ();  ;  ~BaseInteractionConstraint () override;  ; virtual type::vector< std::string > getInteractionIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Impl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html:11361,inherit,inherited,11361,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,1,['inherit'],['inherited']
Modifiability,"  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, DataTypes1, DataTypes2), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes1 > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< DataTypes1 > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated Mecha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html:14469,inherit,inherited,14469,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,2,['inherit'],['inherited']
Modifiability,"  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< TDataTypes > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated MechanicalState #",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html:13778,inherit,inherited,13778,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,2,['inherit'],['inherited']
Modifiability,"  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes1, TDataTypes2 >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< TDataTypes1 > * getMState1 ();  Retrieve the associated MechanicalState #1. More...;  ; const MechanicalState< TDataTypes1 > * getMState1 () const;  Retrieve the associated MechanicalState #1. More...;  ; BaseMechanicalState * getMechModel1 ();  Retrieve the associated",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:13886,inherit,inherited,13886,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,1,['inherit'],['inherited']
Modifiability,"  SOFA_CLASS (SimpleTesselatedTetraTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; void updateTopologicalMappingBottomUp () override;  Translates the TopologyChange objects from the target to the source. More...;  ; bool propagateFromInputToOutputModel () override;  Return true if this mapping is able to propagate topological changes from input to output model. More...;  ; bool propagateFromOutputToInputModel () override;  Return true if this mapping is able to propagate topological changes from output to input model. More...;  ; const type::vector< Index > & getPointMappedFromPoint () const;  ; const type::vector< Index > & getPointMappedFromEdge () const;  ; const type::vector< Index > & getPointSource () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologicalMapping;  SOFA_ABSTRACT_CLASS (TopologicalMapping, objectmodel::BaseObject);  ; virtual void setTopologies (In *from, Out *to);  Specify the input and output models. More...;  ; void setPathInputObject (const std::string &o);  Set the path to the objects mapped in the scene graph. More...;  ; void setPathOutputObject (const std::string &o);  ; In * getFrom ();  Accessor to the INPUT topology of the TopologicalMapping : More...;  ; Out * getTo ();  Accessor to the OUTPUT topology of the TopologicalMapping : More...;  ; virtual bool isTheOutputTopologySubdividingTheInputOne ();  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; virtual Index getGlobIndex (Index ind);  ; virtual Index getFromIndex (Index ind);  ; void dumpGlob2LocMap ();  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html:3884,inherit,inherited,3884,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_tetra_topological_mapping.html,1,['inherit'],['inherited']
Modifiability,"  Shortcut for blocCreate(i,j).set(buffer) More...;  ; template<class T > ; void blocAdd (Index i, Index j, const T *buffer);  Shortcut for blocCreate(i,j).add(buffer) More...;  ; virtual ColBlockConstIterator bRowBegin (Index ib) const;  Get the iterator corresponding to the beginning of the given row of blocks. More...;  ; virtual ColBlockConstIterator bRowEnd (Index ib) const;  Get the iterator corresponding to the end of the given row of blocks. More...;  ; virtual std::pair< ColBlockConstIterator, ColBlockConstIterator > bRowRange (Index ib) const;  Get the iterators corresponding to the beginning and end of the given row of blocks. More...;  . Static Public Member Functions; static void split_row_index (Index &index, Index &modulo);  ; static void split_col_index (Index &index, Index &modulo);  ; static const char * Name ();  ;  Static Public Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; static bool sortedFind (const VecIndex &v, Range in, Index val, Index &result);  ; static bool sortedFind (const VecIndex &v, Index val, Index &result);  ; static const char * Name ();  ; static bool check_matrix (Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x);  ; static auto blockMultTranspose (const TBlock &blockA, const TBlock &blockB);  . Protected Member Functions; template<class M > ; void equal (const M &m, bool add=false);  ; template<class M > ; void addEqual (const M &m);  this += m More...;  ;  Protected Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSMechanicalPolicy >; bool registerNewCol (Index &colId, TBlock &bvalue);  Add a new col into matrix. More...;  ; std::pair< Index, Index > registerBtempLine (typename VecIndexedBlock::const_iterator &itbtemp);  Add a complete new line from btemp into matrix. More...;  ; void fullyCompressBtemp ();  Clear matrix and just add btemp array. More...;  ; Block * insertBtemp (const Index",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html:20149,inherit,inherited,20149,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_mechanical.html,1,['inherit'],['inherited']
Modifiability,"  Topology ();  ; virtual ~Topology ();  . Friends; class EdgeSetTopologyModifier;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:31208,inherit,inherited,31208,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,3,['inherit'],['inherited']
Modifiability,"  Topology ();  ; virtual ~Topology ();  . Friends; class QuadSetTopologyModifier;  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTetrahedron = sofa::topology::InvalidTetrahedron;  ; static constexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:35217,inherit,inherited,35217,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,3,['inherit'],['inherited']
Modifiability,"  indices of the DOFs the constraint is applied to More...;  ; Data< type::vector< Real > > d_keyTimes;  the key frames when the motion is defined by the user More...;  ; Data< VecDeriv > d_keyMovements;  the motions corresponding to the key frames More...;  ; Data< bool > d_relativeMovements;  indicates whether movements are relative to the dof or absolute More...;  ; Data< bool > d_showMovement;  ; Real prevT;  the key times surrounding the current simulation time (for interpolation) More...;  ; Real nextT;  ; Deriv prevM;  the motions corresponding to the surrounding key times More...;  ; Deriv nextM;  ; VecCoord x0;  initial constrained DOFs position More...;  ; SingleLink< LinearMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:2208,inherit,inherited,2208,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr auto N = DataTypes::spatial_dimensions;  . Protected Attributes; Data< sofa::type::vector< Contact > > d_contacts;  Vector of contacts. More...;  ; EllipsoidForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EllipsoidForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  SOFA_ELLIPSOIDFORCEFIELD_RENAMEDDATA_DISABLED () DeprecatedAndRemoved center;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html:2530,inherit,inherited,2530,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_ellipsoid_force_field.html,3,['inherit'],['inherited']
Modifiability,"  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MergeVectors, VecT), core::DataEngine);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html:2446,variab,variables,2446,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,1,['variab'],['variables']
Modifiability,"  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Visual3DText, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; void drawTransparent (const core::visual::VisualParams *vparams) override;  Display transparent surfaces. More...;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the boundin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html:2503,inherit,inherited,2503,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual3_d_text.html,1,['inherit'],['inherited']
Modifiability, – SOFA. SOFA - Topic Tag: Constraint Forces. /constraintresolution-h; . /feed; ; ConstraintResolution.h – SOFA. SOFA - Topic Tag: ConstraintResolution.h. /constraints; . /feed; ; constraints – SOFA. SOFA - Topic Tag: constraints. /constraint-solver; . /feed; ; Constraint Solver – SOFA. SOFA - Topic Tag: Constraint Solver. /contact; . /feed; ; contact – SOFA. SOFA - Topic Tag: contact. /contact-force; . /feed; ; contact force – SOFA. SOFA - Topic Tag: contact force. /contactlistener; . /feed; ; contactlistener – SOFA. SOFA - Topic Tag: contactlistener. /contain; . /feed; ; contain – SOFA. SOFA - Topic Tag: contain. /continuum-robots-beam-adaptater-constraints; . /feed; ; continuum robots; beam adaptater; constraints – SOFA. SOFA - Topic Tag: continuum robots; beam adaptater; constraints. /control; . /feed; ; control – SOFA. SOFA - Topic Tag: control. /controller; . /feed; ; Controller – SOFA. SOFA - Topic Tag: Controller. /control-xml-variables-in-c-or-python; . /feed; ; Control xml variables in C++ or Python. – SOFA. SOFA - Topic Tag: Control xml variables in C++ or Python. /coulomb; . /feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:437778,variab,variables,437778,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['variab'],['variables']
Modifiability, – SOFA. SOFA - Topic Tag: sofastereo. /sofa-template-introspection-datatypes; . /feed; ; Sofa template introspection DataTypes – SOFA. SOFA - Topic Tag: Sofa template introspection DataTypes. /sofauserinteraction; . /feed; ; SofaUserInteraction – SOFA. SOFA - Topic Tag: SofaUserInteraction. /sofav-16-08; . /feed; ; SOFAV 16.08 – SOFA. SOFA - Topic Tag: SOFAV 16.08. /sofa-v20-12; . /feed; ; SOFA-v20.12 – SOFA. SOFA - Topic Tag: SOFA-v20.12. /sofa-v20-12-error; . /feed; ; Sofa v20.12 error – SOFA. SOFA - Topic Tag: Sofa v20.12 error. /sofa-versions; . /feed; ; sofa versions – SOFA. SOFA - Topic Tag: sofa versions. /soft; . /feed; ; soft – SOFA. SOFA - Topic Tag: soft. /softrobot; . /feed; ; SoftRobot – SOFA. SOFA - Topic Tag: SoftRobot. /soft-robot-dynamics; . /feed; ; soft robot dynamics – SOFA. SOFA - Topic Tag: soft robot dynamics. /soft-robotics; . /feed; ; soft robotics – SOFA. SOFA - Topic Tag: soft robotics. /softrobot-plugin; . /feed; ; Softrobot plugin – SOFA. SOFA - Topic Tag: Softrobot plugin. /soft-robot-plugin; . /feed; ; Soft robot Plugin – SOFA. SOFA - Topic Tag: Soft robot Plugin. /softrobots; . /feed; ; softrobots – SOFA. /page; . /2; ; SOFA - Topic Tag: softrobots. SOFA - Topic Tag: softrobots. /soft-robots; . /feed; ; Soft Robots – SOFA. SOFA - Topic Tag: Soft Robots. /softrobots-plugin; . /feed; ; SoftRobots Plugin – SOFA. SOFA - Topic Tag: SoftRobots Plugin. /soft-robots-sofa-locomotion; . /feed; ; soft robots sofa locomotion – SOFA. SOFA - Topic Tag: soft robots sofa locomotion. /softrobots-softrobots-inverse; . /feed; ; SoftRobots SoftRobots.Inverse – SOFA. SOFA - Topic Tag: SoftRobots SoftRobots.Inverse. /softrobots-tutorial; . /feed; ; SoftRobots tutorial – SOFA. SOFA - Topic Tag: SoftRobots tutorial. /solver; . /feed; ; Solver – SOFA. SOFA - Topic Tag: Solver. /sparsegridramification; . /feed; ; SparseGridRamification – SOFA. SOFA - Topic Tag: SparseGridRamification. /sparseldlsolver; . /feed; ; SparseLDLSolver – SOFA. SOFA - Topic Tag: Spar,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:481533,plugin,plugin,481533,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability," ◆ getOwnerClass(). virtual const BaseClass* sofa::core::objectmodel::BaseLink::getOwnerClass ; (; ); const. pure virtual . Implemented in sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >, sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >, and sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >. ◆ getPath(). std::string sofa::core::objectmodel::BaseLink::getPath ; (; std::size_t ; index = 0); const. inline . ◆ getSize(). virtual size_t sofa::core::objectmodel::BaseLink::getSize ; (; ); const. pure virtual . Implemented in sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >, sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >, and sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >. ◆ getValueString(). std::string sofa::core::objectmodel::BaseLink::getValueString ; (; ); const. virtual . Print the value of the associated variable. . ◆ getValueTypeString(). std::string sofa::core::objectmodel::BaseLink::getValueTypeString ; (; ); const. virtual . Print the value type of the associated variable. . ◆ isDoubleLink(). bool sofa::core::objectmodel::BaseLink::isDoubleLink ; (; ); const. inline . ◆ isDuplicate(). bool sofa::core::objectmodel::BaseLink::isDuplicate ; (; ); const. inline . ◆ isMultiLink(). bool sofa::core::objectmodel::BaseLink::isMultiLink ; (; ); const. inline . ◆ isPersistent(). bool sofa::core::objectmodel::BaseLink::isPersistent ; (; ); const. inline . ◆ isReadOnly(). bool sofa::core::objectmodel::BaseLink::isReadOnly ; (; ); const. inline . Alias to match BaseData API. . ◆ isStrongLink(). bool sofa::core::objectmodel::BaseLink::isStrongLink ; (; ); const. inline . ◆ parseString(). bool sofa::core::objectmodel::BaseLink::parseString ; (; const std::string & ; text, . std::string * ; path, . std::string * ; data = nullptr . ); const. inline . ◆ ParseString(). bool sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:8017,variab,variable,8017,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['variab'],['variable']
Modifiability,"""type""));  . Attribute details. ◆ canAccessSleepingNode. bool sofa::simulation::Visitor::canAccessSleepingNode. Can the visitor access sleeping nodes? . ◆ params. const sofa::core::ExecParams* sofa::simulation::Visitor::params. protected . ◆ subsetsToManage. TagSet sofa::simulation::Visitor::subsetsToManage. list of the subsets . Constructor details. ◆ Visitor(). sofa::simulation::Visitor::Visitor ; (; const sofa::core::ExecParams * ; params). explicit . ◆ ~Visitor(). sofa::simulation::Visitor::~Visitor ; (; ). virtualdefault . Function details. ◆ addTag(). Visitor& sofa::simulation::Visitor::addTag ; (; Tag ; t). inline . ◆ begin() [1/2]. simulation::Visitor::ctime_t sofa::simulation::Visitor::begin ; (; simulation::Node * ; node, . sofa::core::objectmodel::BaseObject * ; obj, . const std::string & ; typeInfo = std::string(""type"") . ). virtual . Optional helper method to call before handling an object if not using the for_each method. It currently takes care of time logging, but could be extended (step-by-step execution for instance) . ◆ begin() [2/2]. simulation::Visitor::ctime_t sofa::simulation::Visitor::begin ; (; simulation::Visitor::VisitorContext * ; node, . sofa::core::objectmodel::BaseObject * ; obj, . const std::string & ; typeInfo = std::string(""type"") . ). virtual . Optional helper method to call before handling an object if not using the for_each method. It currently takes care of time logging, but could be extended (step-by-step execution for instance) . ◆ childOrderReversed(). virtual bool sofa::simulation::Visitor::childOrderReversed ; (; simulation::Node * ; ). inlinevirtual . Return true to reverse the order of traversal of child nodes. ; Reimplemented in sofa::simulation::mechanicalvisitor::MechanicalAccumulateMatrixDeriv. ◆ debug_write_state_after(). void sofa::simulation::Visitor::debug_write_state_after ; (; sofa::core::objectmodel::BaseObject * ; obj). protected . ◆ debug_write_state_before(). void sofa::simulation::Visitor::debug_write_state_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html:5552,extend,extended,5552,api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_visitor.html,1,['extend'],['extended']
Modifiability,"""type"". More...;  ; virtual void addReplaceAttribute (const std::string &attr, const char *val);  List of parameters to be replaced. More...;  ; virtual BaseElement * findNode (const char *nodeName, bool absolute=false);  Find a node given its name. More...;  ; BaseObjectDescription * find (const char *nodeName, bool absolute=false) override;  Find a node given its name. More...;  ; template<class Sequence > ; void pushObjects (Sequence &result);  Get all objects of a given type. More...;  ; template<class Map > ; void pushNamedObjects (Map &result);  Get all objects of a given type. More...;  ; virtual bool addChild (BaseElement *child);  ; virtual bool removeChild (BaseElement *child);  ; virtual bool initNode ()=0;  ; virtual bool init ();  ; template<class Node > ; child_iterator< Node > begin ();  ; child_iterator< BaseElement > begin ();  ; template<class Node > ; child_iterator< Node > end ();  ; child_iterator< BaseElement > end ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObjectDescription;  BaseObjectDescription (const char *name=nullptr, const char *type=nullptr);  ; virtual ~BaseObjectDescription ();  ; virtual const AttributeMap & getAttributeMap () const;  ; template<class T > ; void getAttributeList (T &container) const;  ; virtual Base * findObject (const char *nodeName);  Find an object given its name (relative to this object) More...;  ; virtual const char * getAttribute (const std::string &attr, const char *defaultVal=nullptr);  Get an attribute given its name (return defaultVal if not present) More...;  ; virtual float getAttributeAsFloat (const std::string &attr, const float defaultVal=0.0);  Docs is in .h. More...;  ; virtual int getAttributeAsInt (const std::string &attr, const int defaultVal=0.0);  Docs is in .h. More...;  ; virtual void setAttribute (const std::string &attr, const std::string &val);  Set an attribute. Override any existing value. More...;  ; virtual std::string getFullName ();  Get the full nam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html:3525,inherit,inherited,3525,api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1xml_1_1_base_element.html,2,['inherit'],['inherited']
Modifiability,"&M, const Index elementIndice, int level);  ; void computeFinalWeights (const Weight &W, const Index coarseElementIndice, const Index elementIndice, int level);  multiply all weights for all levels and go to the finest level to obtain the final weights from the coarsest to the finest directly More...;  ; void computeFinalWeightsRamification (const Weight &W, const Index coarseElementIndice, const Index elementIndice, int level);  ; void computeMechanicalMatricesByCondensation () override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(NonUniformHexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addMDx (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecDeriv &dx, SReal factor) override;  ; void addGravityToV (const core::MechanicalParams *mparams, DataVecDeriv &d_v) override;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &f, const DataVecCoord &x, const DataVecDeriv &v) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(HexahedronFEMForceFieldAndMass, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Mass, DataTypes), SOFA_TEMPLATE(HexahedronFEMForceField, DataTypes));  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; virtual void computeElementMass (ElementMass &Mass, const type::fixed_array< Coord, 8 > &nodes, const Index elementIndice, SReal stiffnessFactor=1.0);  compute the mass matrix of an element More...;  ; Rea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:8033,variab,variables,8033,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['variab'],['variables']
Modifiability,"&ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  ;  ~EdgesAdded () override;  ; size_t getNbAddedEdges () const;  ; const sofa::type::vector< Topology::Edge > & getArray () const;  ; size_t getNbAddedElements () const;  ; const sofa::type::vector< Topology::EdgeID > & getIndexArray () const;  ; const sofa::type::vector< Topology::Edge > & getElementArray () const;  ;  Public Member Functions inherited from sofa::core::topology::TopologyChange; virtual ~TopologyChange ();  ; TopologyChangeType getChangeType () const;  Returns the code of this TopologyChange. More...;  ; virtual bool write (std::ostream &out) const;  ; virtual bool read (std::istream &in);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyChange; TopologyChangeType m_changeType;  A code that tells the nature of the Topology modification event (could be an enum). More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyChange;  TopologyChange (TopologyChangeType changeType=BASE);  . Attribute details. ◆ ancestorElems. sofa::type::vector< EdgeAncestorElem > sofa::core::topology::EdgesAdded::ancestorElems. ◆ ancestorsList. sofa::type::vector< sofa::type::vector< Topology::EdgeID > > sofa::core::topology::EdgesAdded::ancestorsList. ◆ coefs. sofa::type::vector< sofa::type::vector< SReal > > sofa::core::topology::EdgesAdded::coefs. ◆ edgeArray. sofa::type::vector< Topology::Edge > sofa::core::topology::EdgesAdded::edgeArray. ◆ edgeIndexArray. sofa::type::vector< Topology::EdgeID > sofa::core::topology::EdgesAdded::edgeIndexArray. ◆ nEdges. size_t sofa::core::topology::EdgesAdded::nEdges. Constructor details. ◆ EdgesAdded() [1/5]. sofa::core::topology::EdgesAdded::EdgesAdded ; (; const size_t ; nE). inline . ◆ EdgesAdded() [2/5]. sofa::core::topology::EdgesAdded::EdgesAdded ; (; const size_t ; nE, . const sofa::type::vector< Topology::Edge > & ; edgesList, . const sofa::type::vector< Topology::EdgeI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_added.html:2713,inherit,inherited,2713,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_added.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_edges_added.html,1,['inherit'],['inherited']
Modifiability,"&g, ConstVecDerivId v);  ;  Public Member Functions inherited from sofa::core::ExecParams; bool checkValidStorage () const;  ; ExecMode execMode () const;  Mode of execution requested. More...;  ; int threadID () const;  Index of current thread (0 corresponding to the only thread in sequential mode, or first thread in parallel mode) More...;  ; int nbThreads () const;  Number of threads currently known to Sofa. More...;  ;  ExecParams ();  ; void update ();  Make sure this instance is up-to-date relative to the current thread. More...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static VisualParams * defaultInstance ();  Get the default VisualParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Attribute details. ◆ m_cameraType. CameraType sofa::core::visual::VisualParams::m_cameraType. protected . ◆ m_displayFlags. DisplayFlags sofa::core::visual::VisualParams::m_displayFlags. protected . ◆ m_drawTool. helper::visual::DrawTool* sofa::core::visual::VisualParams::m_drawTool. mutableprotected . ◆ m_modelViewMatrix. SReal sofa::core::visual::VisualParams::m_modelViewMatrix[16]. protected . model view matrix. . ◆ m_pass. Pass sofa::core::visual::VisualParams::m_pass. protected . ◆ m_projectionMatrix. SReal sofa::core::visual::VisualParams::m_projectionMatrix[16]. protected . projection matrix. . ◆ m_sceneBoundingBox. sofa::type::BoundingBox sofa::core::visual::VisualParams::m_sceneBoundingBox. protected . ◆ m_supportedAPIs. unsigned int sofa::core::visual::VisualParams::m_supportedAPIs. protected . Mask of supported graphics API. . ◆ m_v. ConstMultiVecDerivId sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html:4858,inherit,inherited,4858,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_params.html,1,['inherit'],['inherited']
Modifiability,"&out, const Mat4x4 &inv, const Coord &x);  ; void mult (defaulttype::Rigid3Types::Coord &out, const defaulttype::Rigid3Types::Coord &inv, const Coord &x);  ; void mult (type::Mat4x4 &out, const type::Mat4x4 &inv, const Coord &x);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:16889,inherit,inherited,16889,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"&path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12247,inherit,inherited,12247,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,1,['inherit'],['inherited']
Modifiability,"&pluginPath)sofa::helper::system::PluginManagerstatic; init()sofa::helper::system::PluginManager; init(const std::string &pluginPath)sofa::helper::system::PluginManager; isPluginLoaded(const std::string &plugin)sofa::helper::system::PluginManager; isPluginUnloaded(const std::string &pluginName) constsofa::helper::system::PluginManager; loadPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByName(const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; loadPluginByPath(const std::string &path, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; operator<<(std::ostream &os, const PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; operator>>(std::istream &in, PluginManager &pluginManager)sofa::helper::system::PluginManagerfriend; pluginIsLoaded(const std::string &plugin)sofa::helper::system::PluginManager; PluginIterator typedefsofa::helper::system::PluginManager; PluginLoadStatus enum namesofa::helper::system::PluginManager; PluginMap typedefsofa::helper::system::PluginManager; readFromIniFile(const std::string &path)sofa::helper::system::PluginManager; readFromIniFile(const std::string &path, type::vector< std::string > &listLoadedPlugins)sofa::helper::system::PluginManager; registerPlugin(const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr)sofa::helper::system::PluginManager; removeOnPluginCleanupCallbacks(const std::string &key)sofa::helper::system::PluginManager; removeOnPluginLoadedCallback(const std::string &key)sofa::helper::system::PluginManager; s_gui_postfixsofa::helper::system::PluginManagerstatic; unloadedPlugins() constsofa::helper::system::PluginManager; u",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html:2396,plugin,pluginManager,2396,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager-members.html,1,['plugin'],['pluginManager']
Modifiability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  JoinPoints ();  ;  ~JoinPoints () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html:13165,inherit,inherited,13165,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,1,['inherit'],['inherited']
Modifiability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MapIndices ();  ;  ~MapIndices () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:13890,inherit,inherited,13890,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['inherit'],['inherited']
Modifiability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static void countEdge (std::map< PointPair, unsigned int > &edgeCount, PointPair &edge);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  MeshBoundaryROI ();  ;  ~MeshBoundaryROI () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:13652,inherit,inherited,13652,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['inherit'],['inherited']
Modifiability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  DirectionProjectiveConstraint ();  ; virtual ~DirectionProjectiveConstraint ();  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:17189,inherit,inherited,17189,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,4,['inherit'],['inherited']
Modifiability,"&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  TrianglePressureForceField ();  ;  ~TrianglePressureForceField () override;  ; void updateTriangleInformation ();  ; void initTriangleInformation ();  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html:17805,inherit,inherited,17805,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,4,['inherit'],['inherited']
Modifiability,"&res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::topology::container::grid::SparseGridRamificationTopology; sofa::core::objectmodel::RenamedData< bool > _finestConnectivity;  ; Data< bool > d_finestConnectivity;  Test for connectivity at the finest level? (more precise but slower by testing all intersections between the model mesh and the faces between boundary cubes) More...;  ; HierarchicalCubeMapRamification _hierarchicalCubeMapRamification;  ;  Public Attributes inherited from sofa::component::topology::container::grid::SparseGridTopology; HierarchicalCubeMap _hierarchicalCubeMap;  ; InverseHierarchicalCubeMap _inverseHierarchicalCubeMap;  ; HierarchicalPointMap _hierarchicalPointMap;  ; InverseHierarchicalPointMap _inverseHierarchicalPointMap;  ; PointMap _pointMap;  a coarse point indice -> corresponding point in finer level More...;  ; PointMap _inversePointMap;  a fine point indice -> corresponding point in coarser level More...;  ; NodeAdjacency _nodeAdjacency;  ; NodeCubesAdjacency _nodeCubesAdjacency;  ; NodeCornersAdjacency _nodeCornersAdjacency;  ; type::vector< SparseGridTopology::SPtr > _virtualFinerLevels;  saving the virtual levels (cf nbVirtualFinerLevels) More...;  ; sofa::core::sptr< RegularGridTopology > _regularGrid;  based on a corresponding RegularGrid More...;  ; type::vector< Index > _indicesOfRegularCubeInSparseGrid;  to redirect an indice of a cube in the regular grid to its indice in the sparse grid More...;  ; type::vector< Index > _indicesOfCubeinRegularGrid;  to redirect an indice of a cube in the sparse grid to its indice in the regular grid More...;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:42957,inherit,inherited,42957,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,1,['inherit'],['inherited']
Modifiability,"&v, Data< VecDeriv > &dx, const Data< VecDeriv > &correction) override;  ; void applyPositionCorrection (const sofa::core::ConstraintParams *cparams, Data< VecCoord > &x, Data< VecDeriv > &dx, const Data< VecDeriv > &correction) override;  ; void applyVelocityCorrection (const sofa::core::ConstraintParams *cparams, Data< VecDeriv > &v, Data< VecDeriv > &dv, const Data< VecDeriv > &correction) override;  ; Deprecated API; void applyContactForce (const linearalgebra::BaseVector *f) override;  ; void resetContactForce () override;  ; Unbuilt constraint system during resolution; bool hasConstraintNumber (int index) override;  ; void resetForUnbuiltResolution (SReal *f, std::list< unsigned int > &) override;  ; void addConstraintDisplacement (SReal *d, int begin, int end) override;  ; void setConstraintDForce (SReal *df, int begin, int end, bool update) override;  ; void getBlockDiagonalCompliance (linearalgebra::BaseMatrix *W, int begin, int end) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(ConstraintCorrection, TDataTypes), BaseConstraintCorrection);  ; void cleanup () override;  ; void addConstraintSolver (core::behavior::ConstraintSolver *s) override;  ; void removeConstraintSolver (core::behavior::ConstraintSolver *s) override;  ; void computeMotionCorrectionFromLambda (const core::ConstraintParams *cparams, core::MultiVecDerivId dx, const linearalgebra::BaseVector *lambda) override;  ; void applyMotionCorrection (const core::ConstraintParams *cparams, core::MultiVecCoordId x, core::MultiVecDerivId v, core::MultiVecDerivId dx, core::ConstMultiVecDerivId correction) override;  ; void applyPositionCorrection (const core::ConstraintParams *cparams, core::MultiVecCoordId x, core::MultiVecDerivId dx, core::ConstMultiVecDerivId correction) override;  ; void applyVelocityCorrection (const core::ConstraintParams *cparams, core::MultiVecDerivId v, core::MultiVecDerivId dv, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:6995,inherit,inherited,6995,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,"& ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::removeConstraint ; (; Index ; index). ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes > . sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PlaneProjectiveConstraint< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes) ;  . ). Enum details. ◆ anonymous enum. template<class DataTypes > . anonymous enum. Enumeratorbsize . Related details. ◆ PlaneProjectiveConstraintInternalData< DataTypes >. template<class DataTypes > . friend clas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:27640,variab,variables,27640,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['variab'],['variables']
Modifiability,"& ; dx . ). overridevirtual . Project dx to constrained space (dx models an acceleration).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectResponse() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::projectVelocity ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; v . ). overridevirtual . Project v to constrained space (v models a velocity).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectVelocity() method. ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ reinit(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::removeConstraint ; (; Index ; index). ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes > . sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(PointProjectiveConstraint< DataTypes >, DataTypes) ; , . SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes) ;  . ). Related details. ◆ PointProjectiveConstraintInternalData< DataTypes >. template<class DataTypes > . friend class PointProjectiveConstraintInternalData< DataTypes >. friend . sofacomponentconstraintprojectiv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:28020,variab,variables,28020,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['variab'],['variables']
Modifiability,"& ; x . ); const. overridevirtual . Implements sofa::core::behavior::ForceField< DataTypes >. ◆ getYoung(). template<class DataTypes > . Real sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::getYoung ; (; ). inline . ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::initSmall ; (; int ; i, . Index & ; a, . Index & ; b, . Index & ; c, . Index & ; d . ). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ setMethod() [1/2]. template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::setMethod ; (; const std::string & ; methodName). ◆ setMethod() [2/2]. template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::setMethod ; (; int ; val). inline . ◆ setPoisson(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::setPoisson ; (; Real ; val). inline . ◆ setYoung(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::setYoung ; (; Real ; val). inline . ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::QuadBendingFEMForceField< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(QuadBendingFEMForceField< DataTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html:32432,variab,variables,32432,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,1,['variab'],['variables']
Modifiability,"& getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  GenericConstraintSolver ();  ;  ~GenericConstraintSolver () override;  ; void clearConstraintProblemLocks ();  ;  SOFA_ATTRIBUTE_DISABLED__GENERICCONSTRAINTSOLVER_CONSTRAINTCORRECTIONS () DeprecatedAndRemoved const raintCorrections;  ; void buildSystem_matrixFree (unsigned int numConstraints);  ; void buildSystem_matrixAssembly (const core::ConstraintParams *cParams);  ;  Protected Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl; void postBuildSystem (const core::ConstraintParams *cParams) override;  ; void postSolveSystem (const core::ConstraintParams *cParams) override;  ; void clearConstraintCorrections ();  ; void resetConstraints (const core::ConstraintParams *cParams);  ; void buildLocalConstraintMatrix (const core::ConstraintParams *cparams, unsigned int &constraintId);  Call the method buildConstraintMatrix on all the BaseConstraintSet. More...;  ; void accumulateMatrixDeriv (const core::ConstraintParams *cparams);  ; unsigned int buildConstraintMatrix (const core::ConstraintParams *cparams);  ; void applyProjectiveConstraintOnConstraintMatrix (const core::ConstraintParams *cparams);  ; void getConstraintViolation (const core::ConstraintParams *cparams, sofa::linearalgebra::BaseVector *v);  ;  Protected Member Functions inherited from sofa::core::behavior::ConstraintSolver;  ConstraintSolver ();  ;  ~ConstraintSolver () override;  ; bool prepareStatesTask ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:16954,inherit,inherited,16954,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['inherit'],['inherited']
Modifiability,"& getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:13066,inherit,inherited,13066,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,8,['inherit'],['inherited']
Modifiability,"'s fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html:3358,inherit,inherited,3358,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,8,['inherit'],['inherited']
Modifiability,"() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::draw ; (; const VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . inherited from the BaseObject interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isPointInPlane(). template<class DataTypes > . bool sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::isPointInPlane ; (; const Coord & ; p); const. protected . ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the component to handle Lagrange Multiplier based constraint ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::projectMatrix ; (; sofa::linearalgebra::BaseMatrix * ; M, . unsigned ; offset . ). overridevirtual . Implement projectMatrix for ass",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:23785,inherit,inherited,23785,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"() const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SimpleTesselatedHexaTopologicalMapping ();  Constructor. More...;  ;  ~SimpleTesselatedHexaTopologicalMapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologicalMapping;  TopologicalMapping ();  ;  ~TopologicalMapping () override;  ; bool checkTopologyInputTypes ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html:13078,inherit,inherited,13078,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,2,['inherit'],['inherited']
Modifiability,"() is false) More...;  ; virtual SReal getContactDistance () const;  Return the contact distance (must return 0 if useProximity() is false) More...;  ; virtual void setAlarmDistance (SReal);  Set the alarm distance (must return 0 if useProximity() is false) More...;  ; virtual void setContactDistance (SReal);  Set the contact distance (must return 0 if useProximity() is false) More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:5819,inherit,inherited,5819,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,2,['inherit'],['inherited']
Modifiability,"() override;  ; QWidget * getQWidget () override;  ; int getWidth () override;  ; int getHeight () override;  ; bool ready () override;  ; void wait () override;  ask the viewer to resume its activity More...;  ; void UpdateOBJ (void);  ; void moveRayPickInteractor (int eventX, int eventY) override;  RayCasting PickHandler. More...;  ; void setCameraMode (core::visual::VisualParams::CameraType mode) override;  ; void screenshot (const std::string &filename, int compression_level=-1) override;  ; QString helpString () const override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::CustomPolicySofaViewer< VisualModelPolicyType >;  CustomPolicySofaViewer ();  ;  ~CustomPolicySofaViewer () override;  ;  Public Member Functions inherited from sofa::gui::qt::viewer::SofaViewer;  SofaViewer ();  ;  ~SofaViewer () override;  ; virtual void removeViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; virtual void configureViewerTab (QTabWidget *);  Optional QTabWidget GUI for a concreate viewer. More...;  ; void captureEvent () override;  ; bool isControlPressed () const;  ; virtual void configure (sofa::component::setting::ViewerSetting *viewerConf) override;  ; const std::string screenshotName () override;  ; void setPrefix (const std::string &prefix, bool prependDirectory=true) override;  ; virtual void setBackgroundImage (std::string imageFileName=std::string(""textures/SOFA_logo.bmp"")) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseViewer;  BaseViewer ();  ; virtual ~BaseViewer ();  ; virtual sofa::simulation::Node * getScene ();  ; virtual const std::string & getSceneFileName ();  ; virtual void setSceneFileName (const std::string &f);  ; virtual void setScene (sofa::simulation::Node::SPtr scene, const char *filename=nullptr, bool=false);  ; virtual bool load (void);  Load the viewer. It's the initialisation. More...;  ; virtual bool unload (void);  unload the viewer without delete More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html:1593,config,configureViewerTab,1593,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,1,['config'],['configureViewerTab']
Modifiability,"() override;  ; void getBBox (Vec3 &minBBox, Vec3 &maxBBox);  ; void generateRandomDirections ();  ; Vec3 generateRandomPoint (const Vec3 &minBBox, const Vec3 &maxBBox);  ; bool isInside (Coord p);  ; bool testDistance (Coord p);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:15519,inherit,inherited,15519,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['inherit'],['inherited']
Modifiability,"() override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html:6266,inherit,inherited,6266,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,1,['inherit'],['inherited']
Modifiability,"() override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html:3872,inherit,inherited,3872,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,1,['inherit'],['inherited']
Modifiability,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ damping. double sofa::gui::common::AddSutureOperation::damping. protected . ◆ stiffness. double sofa::gui::common::AddSutureOperation::stiffness. protected . Constructor details. ◆ AddSutureOperation(). sofa::gui::common::AddSutureOperation::AddSutureOperation ; (; ). inline . ◆ ~AddSutureOperation(). sofa::gui::common::AddSutureOperation::~AddSutureOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::AddSutureOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddSutureOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDamping(). virtual double sofa::gui::common::AddSutureOperation::getDampin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html:2243,inherit,inherited,2243,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_suture_operation.html,1,['inherit'],['inherited']
Modifiability,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AddRecordedCameraButtonSetting::SPtr sofa::gui::common::AddRecordedCameraOperation::setting. protected . Constructor details. ◆ AddRecordedCameraOperation(). sofa::gui::common::AddRecordedCameraOperation::AddRecordedCameraOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::AddRecordedCameraOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AddRecordedCameraOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::AddRecordedCameraOperation::getDescription ; (; ). inlinestatic . sofaguicommonAddRecordedCameraOperation; Gener,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html:2125,inherit,inherited,2125,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_add_recorded_camera_operation.html,1,['inherit'],['inherited']
Modifiability,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::FixPickedParticleButtonSetting::SPtr sofa::gui::common::FixOperation::setting. protected . Constructor details. ◆ FixOperation(). sofa::gui::common::FixOperation::FixOperation ; (; ). inline . ◆ ~FixOperation(). sofa::gui::common::FixOperation::~FixOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::FixOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::FixOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::FixOperation::getDescription ; (; ). inlinestatic . ◆ getStiffness(). virtual double sofa::gui::common::F,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html:2174,inherit,inherited,2174,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_fix_operation.html,1,['inherit'],['inherited']
Modifiability,();  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::StartNavigationButtonSetting::SPtr sofa::gui::common::StartNavigationOperation::setting. protected . Constructor details. ◆ StartNavigationOperation(). sofa::gui::common::StartNavigationOperation::StartNavigationOperation ; (; ). inline . Function details. ◆ configurePerformer(). void sofa::gui::common::StartNavigationOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::StartNavigationOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ getDescription(). static std::string sofa::gui::common::StartNavigationOperation::getDescription ; (; ). inlinestatic . sofaguicommonStartNavigationOperation; Generated on Mon Nov 11,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html:2115,inherit,inherited,2115,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_start_navigation_operation.html,1,['inherit'],['inherited']
Modifiability,"();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<cl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html:11988,inherit,inherited,11988,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,2,['inherit'],['inherited']
Modifiability,"();  ; void init ();  . Variables; int AddFrameButtonSettingClass;  ; int AddRecordedCameraButtonSettingClass;  ; int StartNavigationButtonSettingClass;  ; int AttachBodyButtonSettingClass;  ; int ConstraintAttachButtonSettingClass;  ; int FixPickedParticleButtonSettingClass;  . Function Documentation. ◆ getModuleName(). const char * sofa::gui::component::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::gui::component::getModuleVersion ; (; ). ◆ init(). SOFA_GUI_COMPONENT_API void sofa::gui::component::init ; (; ). ◆ initExternalModule(). void sofa::gui::component::initExternalModule ; (; ). Variable Documentation. ◆ AddFrameButtonSettingClass. int sofa::gui::component::AddFrameButtonSettingClass. Initial value:= core::RegisterObject(""Add a frame to a skinned model""); .add< AddFrameButtonSetting >(); .addAlias(""AddFrameButton""). ◆ AddRecordedCameraButtonSettingClass. int sofa::gui::component::AddRecordedCameraButtonSettingClass. Initial value:= core::RegisterObject(""Save Camera's View Point Button configuration""); .add< AddRecordedCameraButtonSetting >(); .addAlias(""AddRecordedCameraButton""). ◆ AttachBodyButtonSettingClass. int sofa::gui::component::AttachBodyButtonSettingClass. Initial value:= core::RegisterObject(""Attach Body Button configuration""); .add< AttachBodyButtonSetting >(); .addAlias(""AttachBodyButton""). ◆ ConstraintAttachButtonSettingClass. int sofa::gui::component::ConstraintAttachButtonSettingClass. Initial value:= core::RegisterObject(""Attach an object to the mouse using lagrangian multiplier""); .add< ConstraintAttachButtonSetting >(). ◆ FixPickedParticleButtonSettingClass. int sofa::gui::component::FixPickedParticleButtonSettingClass. Initial value:= core::RegisterObject(""Fix a picked particle in space""); .add< FixPickedParticleButtonSetting >(); .addAlias(""FixPickedParticleButton""). ◆ StartNavigationButtonSettingClass. int sofa::gui::component::StartNavigationButtonSettingClass. Initial value:= core::RegisterObject(""Start Navigation Bu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component.html:1708,config,configuration,1708,api/master/sofa/html/namespacesofa_1_1gui_1_1component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gui_1_1component.html,1,['config'],['configuration']
Modifiability,"();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ cubemapFilenameNegX. sofa::core::objectmodel::DataFileName sofa::gl::co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html:17332,inherit,inherited,17332,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,1,['inherit'],['inherited']
Modifiability,"();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ enabled. Data<bool> sofa::gl::component::shader::OglTexturePointer::ena",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:15999,inherit,inherited,15999,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,1,['inherit'],['inherited']
Modifiability,"();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:15669,inherit,inherited,15669,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,1,['inherit'],['inherited']
Modifiability,"();  ;  Protected Member Functions inherited from sofa::component::playback::ReadState;  ReadState ();  ;  ~ReadState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::playback::ReadState; sofa::core::objectmodel::DataFileName d_filename;  ; Data< double > d_interval;  time duration between inputs More...;  ; Data< double > d_shift;  shift between times in the file and times when they will be read More...;  ; Data< bool > d_loop;  set to 'true' to re-read the file when reaching the end More...;  ; Data< double > d_s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:13048,inherit,inherited,13048,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['inherit'],['inherited']
Modifiability,"();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec2f > >; Data< type::vector< type::Vec2f > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html:12671,inherit,inherited,12671,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector2_variable.html,1,['inherit'],['inherited']
Modifiability,"();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec3f > >; Data< type::vector< type::Vec3f > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html:12671,inherit,inherited,12671,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector3_variable.html,1,['inherit'],['inherited']
Modifiability,"();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Vec4f > >; Data< type::vector< type::Vec4f > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html:12671,inherit,inherited,12671,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector4_variable.html,1,['inherit'],['inherited']
Modifiability,"(; core::behavior::MechanicalState< DataTypes > * ; mm1 = nullptr, . core::behavior::MechanicalState< DataTypes > * ; mm2 = nullptr . ). explicit . ◆ ~NearestPointROI(). template<class DataTypes > . sofa::component::engine::select::NearestPointROI< DataTypes >::~NearestPointROI. override . Function details. ◆ computeNearestPointMaps(). template<class DataTypes > . void sofa::component::engine::select::NearestPointROI< DataTypes >::computeNearestPointMaps ; (; const VecCoord & ; x1, . const VecCoord & ; x2 . ). protected . ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::select::NearestPointROI< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::select::NearestPointROI< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::select::NearestPointROI< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::select::NearestPointROI< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS2(). template<class DataTypes > . sofa::component::engine::select::NearestPointROI< DataTypes >::SOFA_CLASS2 ; (; SOFA_TEMPLATE(NearestPointROI< DataTypes >, DataTypes) ; , . sofa::core::DataEngine ; , . SOFA_TEMPLATE2(core::behavior::PairStateAccessor, DataTypes, DataTypes) ;  . ). sofacomponentengineselectNearestPointROI; Generated on Mon Nov 11 2024 02:41:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:23843,variab,variables,23843,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,1,['variab'],['variables']
Modifiability,"(BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Constructor details. ◆ OglFloatVariable(). sofa::gl::component::shader::OglFloatVariable::OglFloatVariable ; (; ). ◆ ~OglFloatVariable(). virtual sofa::gl::component::shader::OglFloatVariable::~OglFloatVariable ; (; ). inlinevirtual . Function details. ◆ pushValue(). void sofa::gl::component::shader::OglFloatVariable::pushValue ; (; ). overridevirtual . Implements sofa::gl::component::shader::OglVariable< float >. ◆ SOFA_CLASS(). sofa::gl::component::shader::OglFloatVariable::SOFA_CLASS ; (; OglFloatVariable ; , . OglVariable< float > ;  . ). sofaglcomponentshaderOglFloatVariable; Generated on Mon Nov 11 2024 03:19:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html:16622,inherit,inherited,16622,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,1,['inherit'],['inherited']
Modifiability,"(BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html:12107,inherit,inherited,12107,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,2,['inherit'],['inherited']
Modifiability,"(ConstantSparsityProjectionMethod, TMatrix), SOFA_TEMPLATE(MatrixProjectionMethod, TMatrix));  ;  ConstantSparsityProjectionMethod ();  ;  ~ConstantSparsityProjectionMethod () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >;  SOFA_CLASS (SOFA_TEMPLATE(MatrixProjectionMethod, TMatrix), SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix));  ;  ~MatrixProjectionMethod () override;  ; void computeMatrixJacobians (const core::MechanicalParams *mparams, const MappingGraph &mappingGraph, TMatrix *matrixToProject);  ;  Public Member Functions inherited from sofa::component::linearsystem::BaseMatrixProjectionMethod< TMatrix >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(BaseMatrixProjectionMethod, TMatrix), core::behavior::StateAccessor);  ;  ~BaseMatrixProjectionMethod () override;  ; virtual bool hasPairStates (const PairMechanicalStates &pairStates) const;  ; void setPairStates (const PairMechanicalStates &pairStates);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=null",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html:3842,inherit,inherited,3842,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,3,['inherit'],['inherited']
Modifiability,"(Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::objectmodel::Context; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sleeping, and thus ignored by visitors. More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  . Protected Attributes; bool debug_;  ; bool initialized;  ; std::stack< Visitor * > actionStack;  ; BaseContext * _context;  ; type::vector< MutationListener * > listener;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseContext; ComponentNameHelper m_nameHelper;  . Public Member Functions;  SOFA_ABSTRACT_CLASS2 (Node, BaseNode, Context);  ; virtual Node::SPtr createChild (const std::string &nodeName)=0;  Create, add, then return the new child of this Node. More...;  ; virtual void removeControllers ();  Remove odesolvers and mastercontroler. More...;  ; Node * getChild (const std::string &name) const;  Find a child node given its name. More...;  ; Node * getTreeNode (const std::string &name) const;  Get a descendant node given it",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:4143,inherit,inherited,4143,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['inherit'],['inherited']
Modifiability,"(LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () const;  Print the value of the associated variable. More...;  ; virtual std::string getValueTypeString () const;  Print the value type of the associated variable. More...;  . Serialization Helper API; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  ; bool parseString (const std::string &text, std::string *path, std::string *data=nullptr) const;  ; Base * getOwner () const;  ; void setOwner (Base *owner);  ; bool add (Base *baseptr, const std::string &path);  Add a new target to the link. More...;  ; bool set (Base *baseptr, size_t index=0);  Change the link's target at the provided index. More...;  ; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:2296,variab,variable,2296,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['variab'],['variable']
Modifiability,"(Model1 *, Model2 *);  ; template<class Model1 , class Model2 > ; sofa::core::collision::TDetectionOutputVector< Model1, Model2 > * getOutputVector (Model1 *, Model2 *, sofa::core::collision::DetectionOutputVector *contacts);  ; int beginIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  ; int endIntersection (sofa::core::CollisionModel *, sofa::core::CollisionModel *, OutputVector *);  . Protected Member Functions;  LocalMinDistance ();  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection;  BaseProximityIntersection ();  ;  ~BaseProximityIntersection () override;  ;  Protected Member Functions inherited from sofa::component::collision::detection::intersection::DiscreteIntersection;  DiscreteIntersection ();  ;  ~DiscreteIntersection () override;  ; template<class SphereType1 , class SphereType2 > ; bool testIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, const SReal alarmDist);  ; template<class SphereType1 , class SphereType2 > ; int computeIntersectionSphere (SphereType1 &sph1, SphereType2 &sph2, DiscreteIntersection::OutputVector *contacts, const SReal alarmDist, const SReal contactDist);  ;  Protected Member Functions inherited from sofa::core::collision::Intersection;  Intersection ();  ;  ~Intersection () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:20694,inherit,inherited,20694,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,4,['inherit'],['inherited']
Modifiability,"(T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  ParabolicProjectiveConstraint (core::behavior::MechanicalState< DataTypes > *mstate=nullptr);  ;  ~ParabolicProjectiveConstraint ();  ; template<class DataDeriv > ; void projectResponseT (DataDeriv &dx, const std::function< void(DataDeriv &, const unsigned int)> &clear);  ;  Protected Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >;  ProjectiveConstraintSet (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  BaseProjectiveConstraintSet ();  ;  ~BaseProjectiveConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:15895,inherit,inherited,15895,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,4,['inherit'],['inherited']
Modifiability,"(T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  VolumeMapping ();  ; void matrixFreeApplyDJT (const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html:20320,inherit,inherited,20320,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,1,['inherit'],['inherited']
Modifiability,"(const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ReadState ();  ;  ~ReadState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_filename. sofa::core::objectmodel::DataFileName sofa::component::playback::ReadState::d_filename. ◆ d_interval. Data< double > sofa::component::playback::ReadState::d_interval. time duration between inputs . ◆ d_loop. Data< bool > sofa::component::playback::ReadState::d_loop. set to 'true' to re-read the file when reaching the end . ◆ d_rotation. Data< type::Vec3 > sofa::component::playback::ReadState::d_rot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:13370,inherit,inherited,13370,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['inherit'],['inherited']
Modifiability,"(const VisualParams *);  Display transparent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  . Protected Member Functions;  OglShader ();  ;  ~OglShader () override;  ;  Protected Member Functions inherited from sofa::core::visual::Shader;  Shader ();  ;  ~Shader () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:17422,inherit,inherited,17422,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['inherit'],['inherited']
Modifiability,"(const core::MechanicalParams *mparams, Real kFactor, Data< VecDeriv_t< In > > &parentForce, const Data< VecDeriv_t< In > > &parentDisplacement, const Data< VecDeriv_t< Out > > &childForce) override;  ; void doUpdateK (const core::MechanicalParams *mparams, const Data< VecDeriv_t< Out > > &childForce, SparseKMatrixEigen &matrix) override;  ; void computeCoordPositionDifference (Direction &r, const InCoord &a, const InCoord &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::Mapping< TIn, TOut >;  Mapping (State< In > *from=nullptr, State< Out > *to=nullptr);  ;  ~Mapping () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::BaseMapping;  BaseMapping ();  Constructor. More...;  ;  ~BaseMapping () override;  Destructor. More...;  ; bool testMechanicalState (BaseState *state);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:21120,inherit,inherited,21120,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['inherit'],['inherited']
Modifiability,"(const sofa::core::ExecParams *params, size_t *result, sofa::core::ConstMultiVecId v);  ; Result fwdMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; virtual bool stopAtMechanicalMapping (simulation::Node *, sofa::core::BaseMapping *map);  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the Cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_size_visitor.html:1496,inherit,inherited,1496,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_size_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_size_visitor.html,1,['inherit'],['inherited']
Modifiability,"(core::MultiVecDerivId v) override;  ; void dispatchSystemSolution (core::MultiVecDerivId v) override;  ; void dispatchSystemRHS (core::MultiVecDerivId v) override;  ;  Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >;  SOFA_CLASS (SOFA_TEMPLATE2(TypedMatrixLinearSystem, TMatrix, TVector), sofa::core::behavior::BaseMatrixLinearSystem);  ; linearalgebra::BaseMatrix * getSystemBaseMatrix () const override;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; core::objectmodel::BaseContext * getSolveContext ();  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setRHS (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void setSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemSolution (core::MultiVecDerivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemRHS (core::MultiVecDerivId v);  ; void setRHS (core::MultiVecDerivId v);  ; void setSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemRHS (core::MultiVecDerivId v);  ;  Public Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  SOFA_ABSTRACT_CLASS (BaseMatrixLinearSystem, core::objectmodel::BaseObject);  ; void buildSystemMatrix (const core::MechanicalParams *mparams);  Construct and assemble the linear system matrix. More...;  ; sofa::type::Vec2u getMatrixSize () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html:5332,inherit,inherited,5332,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,1,['inherit'],['inherited']
Modifiability,"(core::objectmodel::Event *);  ; virtual void draw (const core::visual::VisualParams *);  ; virtual void setPerformerFreeze ();  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  . Static Public Member Functions; template<class RealObject > ; static RealObject * create (RealObject *, BaseMouseInteractor *interactor);  . Attribute details. ◆ m_freezePerformer. bool sofa::gui::component::performer::InteractionPerformer::m_freezePerformer. ◆ m_interactor. BaseMouseInteractor* sofa::gui::component::performer::InteractionPerformer::m_interactor. Constructor details. ◆ InteractionPerformer(). sofa::gui::component::performer::InteractionPerformer::InteractionPerformer ; (; BaseMouseInteractor * ; i). inline . ◆ ~InteractionPerformer(). virtual sofa::gui::component::performer::InteractionPerformer::~InteractionPerformer ; (; ). inlinevirtual . Function details. ◆ configure(). virtual void sofa::gui::component::performer::InteractionPerformer::configure ; (; sofa::component::setting::MouseButtonSetting * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::AttachBodyPerformer< DataTypes >. ◆ create(). template<class RealObject > . static RealObject* sofa::gui::component::performer::InteractionPerformer::create ; (; RealObject * ; , . BaseMouseInteractor * ; interactor . ). inlinestatic . ◆ draw(). virtual void sofa::gui::component::performer::InteractionPerformer::draw ; (; const core::visual::VisualParams * ; ). inlinevirtual . Reimplemented in sofa::gui::component::performer::InciseAlongPathPerformer, sofa::gui::component::performer::RemovePrimitivePerformer< DataTypes >, sofa::gui::component::performer::FixParticlePerformer< DataTypes >, and sofa::gui::component::performer::BaseAttachBodyPerformer< DataTypes >. ◆ execute(). virtual void sofa::gui::component::performer::InteractionPerformer::execute ; (; ). pure virtual . Implemen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html:1820,config,configure,1820,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_interaction_performer.html,1,['config'],['configure']
Modifiability,"(includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:3725,inherit,inherited,3725,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['inherit'],['inherited']
Modifiability,"(includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_dx0. template<class DataTypes > . Data<Vec3R> sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::d_dx0. first derivated control point . ◆ d_dx1. template<class DataTypes > . Data<Vec3R> sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::d_dx1. second derivated control point . ◆ d_indices. template<class DataTypes > . SetIndex sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::d_indices. indices of the DOFs constraints . ◆ d_sx0. template<class DataTypes > . Data<Vec2R> sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::d_sx0. acceleration parameters : the accaleration curve is itself a hermite spline, with first point at (0,0) and second at (1,1) and derivated on this points are : . ◆ d_sx1. templat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:20363,inherit,inherited,20363,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"(includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_fixedDirections. template<class DataTypes > . Data<VecBool> sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::d_fixedDirections. Defines the directions in which the particles are fixed: true (or 1) for fixed, false (or 0) for free. . ◆ d_projectVelocity. template<class DataTypes > . Data<bool> sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::d_projectVelocity. activate project velocity to maintain a constant velocity . Constructor details. ◆ PartialFixedProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >::PartialFixedProjectiveConstraint. protected . ◆ ~PartialFixedProjectiveConstraint(). template<class DataTypes > . sofa::component::constraint::projective::PartialFixedProjectiveConstra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:21107,inherit,inherited,21107,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['inherit'],['inherited']
Modifiability,"(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ cpt. int sofa::gui::common::InciseOperation::cpt. protected . ◆ finishIncision. bool sofa::gui::common::InciseOperation::finishIncision. protected . ◆ keepPoint. bool sofa::gui::common::InciseOperation::keepPoint. protected . ◆ method. int sofa::gui::common::InciseOperation::method. protected . ◆ snapingBorderValue. int sofa::gui::common::InciseOperation::snapingBorderValue. protected . ◆ snapingValue. int sofa::gui::common::InciseOperation::snapingValue. protected . ◆ startPerformer. sofa::gui::component::performer::InteractionPerformer* sofa::gui::common::InciseOperation::startPerformer. protected . Constructor details. ◆ InciseOperation(). sofa::gui::common::InciseOperation::InciseOperation ; (; ). inline . ◆ ~InciseOperation(). sofa::gui::common::InciseOperation::~InciseOperation ; (; ). override . Function details. ◆ end(). void sofa::gui::common::InciseOperation::end ; (; ). ov",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html:2553,inherit,inherited,2553,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_incise_operation.html,1,['inherit'],['inherited']
Modifiability,"(sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, MOUSE_BUTTON b);  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ firstClick. bool sofa::gui::common::TopologyOperation::firstClick. protected . ◆ scale. double sofa::gui::common::TopologyOperation::scale. protected . ◆ topologicalOperation. int sofa::gui::common::TopologyOperation::topologicalOperation. protected . ◆ volumicMesh. bool sofa::gui::common::TopologyOperation::volumicMesh. protected . Constructor details. ◆ TopologyOperation(). sofa::gui::common::TopologyOperation::TopologyOperation ; (; ). inline . ◆ ~TopologyOperation(). sofa::gui::common::TopologyOperation::~TopologyOperation ; (; ). inlineoverride . Function details. ◆ end(). void sofa::gui::common::TopologyOperation::end ; (; ). overridevirtual . Reimplemented from sofa::gui::common::Operation. ◆ endOperation(). void sofa::gui::common::TopologyOperation::endOperation ; (; ). overridevirtual . This function is called after each mouse click. ; Reimplemented from sofa::gui::common::O",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html:2307,inherit,inherited,2307,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_topology_operation.html,1,['inherit'],['inherited']
Modifiability,"(void) const;  Get the device orientation. More...;  ; unsigned char getButtonState () const;  Get the device button state. More...;  ; bool getButton (const int id=0) const;  ; unsigned int getDeviceId () const;  Get the device Id. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Event;  Event ();  ; virtual ~Event ();  ; void setHandled ();  Tag the event as handled, i.e. the event needs not be propagated further. More...;  ; bool isHandled () const;  Returns true of the event has been handled. More...;  ; virtual const char * getClassName () const;  ; virtual size_t getEventTypeIndex () const =0;  . Static Public Member Functions; static const char * GetClassName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Event; static const char * GetClassName ();  ; static size_t getEventTypeCount ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::Event; bool m_handled;  ;  Static Protected Attributes inherited from sofa::core::objectmodel::Event; static size_t s_lastEventTypeIndex = 0;  storing the last given id More...;  . Constructor details. ◆ HapticDeviceEvent(). sofa::core::objectmodel::HapticDeviceEvent::HapticDeviceEvent ; (; const unsigned int ; id, . const sofa::type::Vec3 & ; position, . const sofa::type::Quat< SReal > & ; orientation, . const unsigned char ; button . ). Constructor. . ◆ ~HapticDeviceEvent(). sofa::core::objectmodel::HapticDeviceEvent::~HapticDeviceEvent ; (; ). override . Destructor. . Function details. ◆ getButton(). bool sofa::core::objectmodel::HapticDeviceEvent::getButton ; (; const int ; id = 0); const. inline . ◆ getButtonState(). unsigned char sofa::core::objectmodel::HapticDeviceEvent::getButtonState ; (; ); const. inline . Get the device button state. . ◆ GetClassName(). static const char* sofa::core::objectmodel::HapticDeviceEvent::GetClassName ; (; ). inlinestatic . ◆ getDeviceId(). unsigned int sofa::core::objectmodel::HapticDev",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_haptic_device_event.html:2058,inherit,inherited,2058,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_haptic_device_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_haptic_device_event.html,2,['inherit'],['inherited']
Modifiability,") More...;  . Signals; void redrawn () override;  ; void resizeW (int) override;  ; void resizeH (int) override;  ; void quit ();  ;  Signals inherited from sofa::gui::qt::viewer::SofaViewer; virtual void redrawn ()=0;  ; virtual void resizeW (int)=0;  ; virtual void resizeH (int)=0;  . Public Slots; void resetView () override;  ; void saveView () override;  ; void setSizeW (int) override;  ; void setSizeH (int) override;  ; virtual void getView (type::Vec3 &pos, type::Quat< SReal > &ori) const override;  ; virtual void setView (const type::Vec3 &pos, const type::Quat< SReal > &ori) override;  ; virtual void captureEvent () override;  ; void fitObjectBBox (sofa::core::objectmodel::BaseObject *object) override;  ; void fitNodeBBox (sofa::core::objectmodel::BaseNode *node) override;  . Additional Inherited Members;  Protected Attributes inherited from sofa::gui::qt::viewer::SofaViewer; std::unique_ptr< EngineBackend > m_backend;  ; QTimer captureTimer;  ; bool m_isControlPressed;  ; ColourPickingRenderCallBack colourPickingRenderCallBack;  ;  Protected Attributes inherited from sofa::gui::common::BaseViewer; sofa::simulation::Node::SPtr groot;  the sofa root note of the current scene More...;  ; sofa::component::visual::BaseCamera::SPtr currentCamera;  ; std::string sceneFileName;  ; bool _video;  ; bool m_isVideoButtonPressed;  ; bool m_bShowAxis;  ; bool _fullScreen;  ; int _background;  ; bool initTexturesDone;  ; sofa::type::Vec3 backgroundColour;  ; std::string backgroundImageFile;  ; sofa::type::Vec3 ambientColour;  ; std::unique_ptr< PickHandler > pick;  ; int _navigationMode;  ; bool _mouseInteractorMoving;  ; int _mouseInteractorSavedPosX;  ; int _mouseInteractorSavedPosY;  ; std::string _screenshotDirectory;  . Constructor details. ◆ QtGLViewer(). sofa::gui::qt::viewer::qgl::QtGLViewer::QtGLViewer ; (; QWidget * ; parent, . const char * ; name = """" . ). ◆ ~QtGLViewer(). sofa::gui::qt::viewer::qgl::QtGLViewer::~QtGLViewer ; (; ). override . Function details. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html:5346,inherit,inherited,5346,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1viewer_1_1qgl_1_1_qt_g_l_viewer.html,2,['inherit'],['inherited']
Modifiability,") More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(AreaMapping, TIn, TOut), SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, true));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void apply (const core::MechanicalParams *mparams, DataVecCoord_t< Out > &out, const DataVecCoord_t< In > &in) override;  ; void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices) override;  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, true >;  SOFA_CLASS (SOFA_TEMPLATE3(BaseNonLinearMapping, TIn, TOut, HasStabilizedGeometricStiffness), SOFA_TEMPLATE2(core::Mapping, TIn, TOut));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void applyJ (const core::MechanicalParams *mparams, DataVecDeriv_t< Out > &out, const DataVecDeriv_t< In > &in) final;  ; void applyJT (const core::MechanicalParams *mparams, DataVecDeriv_t< In > &out, const DataVecDeriv_t< Out > &in) final;  ; void applyJT (const core::ConstraintParams *cparams, DataMatrixDeriv_t< In > &out, const DataMatrixDeriv_t< Out > &in) final;  ; void applyDJT (const core::MechanicalParams *mparams, core::MultiVecDerivId parentForceId, core::ConstMultiVecDerivId childForceId) final;  Accumulate a change of parent force due to the change of the mapping, for a constant child force. Null for linear mappings. More...;  ; const linearalgebra::BaseMatrix * getK () final;  ; const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ; void updateK (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html:4538,inherit,inherited,4538,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,1,['inherit'],['inherited']
Modifiability,") More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ value. template<class DataTypes > . Data< DataTypes > sofa::gl::component::shader::OglVariable< DataTypes >::value. Constructor details. ◆ OglVariable(). template<class DataTypes > . sofa::gl::component::shader::OglVariable< DataTypes >::OglVariable ; (; ). inlineprotected . ◆ ~OglVariable(). template<class DataTypes > . sofa::gl::component::shader::OglVariable< DataTypes >::~OglVariable ; (; ). inlineoverrideprotected . Function details. ◆ doInitVisual(). template<class DataTypes > . void sofa::gl::component::shader::OglVariable< DataTypes >::doInitVisual ; (; const core::visual::VisualParams * ; ). inlineoverridevirtual . Reimplemented from sofa::core::visual::VisualModel. ◆ doUpdateVisual(). template<class DataTypes > . void sofa::gl::component::shader::OglVariable< DataTypes >::doUpdateVisual ; (; const core::visual::VisualParams * ; ). inlineove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:16753,inherit,inherited,16753,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,1,['inherit'],['inherited']
Modifiability,") More...;  ; bool m_initialized;  ; MechanicalObjectInternalData< DataTypes > data;  Given the number of a constraint Equation, find the index in the MatrixDeriv C, where the constraint is actually stored. More...;  ; std::ofstream * m_gnuplotFileX;  ; std::ofstream * m_gnuplotFileV;  ; Initial geometric transformations; Data< type::Vec3 > translation;  Translation of the DOFs. More...;  ; Data< type::Vec3 > rotation;  Rotation of the DOFs. More...;  ; Data< type::Vec3 > scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Vec3 > translation2;  Translation of the DOFs, applied after the rest position has been computed. More...;  ; Data< type::Vec3 > rotation2;  Rotation of the DOFs, applied the after the rest position has been computed. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalObject, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::MechanicalState, DataTypes));  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; MechanicalObject & operator= (const MechanicalObject &);  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:5302,inherit,inherited,5302,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,2,['inherit'],['inherited']
Modifiability,") const noexcept;  ; constexpr iterator end () noexcept;  ; constexpr const_iterator end () const noexcept;  ; constexpr const_iterator cend () const noexcept;  ; constexpr reference operator[] (size_type i);  ; constexpr const_reference operator[] (size_type i) const;  ; constexpr Deriv & get () &noexcept;  ; constexpr const Deriv & get () const &noexcept;  ; constexpr Deriv && get () &&noexcept;  ; constexpr const Deriv && get () const &&noexcept;  ; constexpr reference at (size_type i);  ; constexpr const_reference at (size_type i) const;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; void swap (fixed_array< Deriv, N > &y);  ; constexpr const Deriv * data () const noexcept;  ; constexpr const Array & array () const noexcept;  direct access to array More...;  ; constexpr Array & array () noexcept;  direct access to array More...;  ; constexpr fixed_array< Deriv, N > & operator= (const fixed_array< T2, N > &rhs) noexcept;  ; constexpr void assign (const Deriv &value) noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::fixed_array< Deriv, 3 >; Deriv elems [N];  ;  Static Public Member Functions inherited from sofa::type::fixed_array< Deriv, 3 >; static constexpr size_type size () noexcept;  ; static bool empty () noexcept;  ; static constexpr size_type max_size () noexcept;  . Function details. ◆ operator*(). template<class DataTypes > . Deriv sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3::operator* ; (; const Deriv & ; v). inline . ◆ transposeMultiply(). template<class DataTypes > . Deriv sofa::component::solidmechanics::spring::TriangularQuadraticSpringsForceField< DataTypes >::Mat3::transposeMultiply ; (; const Deriv & ; v). inline . sofacomponentsolidmechanicsspringTriangularQuadraticSpringsForceFieldMat3; Generated on Mon Nov 11 2024 03:07:47 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3.html:2200,inherit,inherited,2200,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_quadratic_springs_force_field_1_1_mat3.html,2,['inherit'],['inherited']
Modifiability,") const override;  ; type::Vec6 getMomentum (const MechanicalParams *mparams) const override;  ; virtual type::Vec6 getMomentum (const MechanicalParams *, const DataVecCoord &, const DataVecDeriv &) const;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void addBToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, unsigned int &) override;  ; void addMToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Add Mass contribution to global Matrix assembling. More...;  ; void addMBKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  ;  Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ForceField, DataTypes), BaseForceField, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; virtual void addClambda (const MechanicalParams *mparams, DataVecDeriv &df, const DataVecDeriv &lambda, SReal cFactor);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ; void addKToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addBToMatrix (const MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Compute the system matrix corresponding to . More...;  ; void addToMatrix (sofa::linearalgebra::BaseMatrix *bm, unsigned offset, const IndexArray &nodeIndex, const ElementMat &em,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:8339,inherit,inherited,8339,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,5,['inherit'],['inherited']
Modifiability,") const;  ; template<typename Element > ; bool isInROI (const Element &e) const;  ; template<typename Element > ; bool isInStrictROI (const Element &e) const;  ; virtual bool isQuadInROI (const Quad &q) const;  ; virtual bool isQuadInStrictROI (const Quad &q) const;  ; virtual bool isTetrahedronInROI (const Tetra &t) const;  ; virtual bool isTetrahedronInStrictROI (const Tetra &t) const;  ; virtual bool isHexahedronInROI (const Hexa &t) const;  ; virtual bool isHexahedronInStrictROI (const Hexa &t) const;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html:19625,inherit,inherited,19625,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,1,['inherit'],['inherited']
Modifiability,") const;  ;  Protected Member Functions inherited from sofa::core::behavior::OdeSolver;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static void addSeparateGravity (sofa::simulation::common::MechanicalOperations *mop, SReal dt, core::MultiVecDerivId v);  ; static void computeForce (sofa::simulation::common::MechanicalOperations *mop, core::MultiVecDerivId f);  Assemble the force vector (right-hand side of the equation) More...;  ; static void computeAcceleration (sofa::simulation::common::MechanicalOperations *mop, core::Multi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:13938,inherit,inherited,13938,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['inherit'],['inherited']
Modifiability,") const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  RayTraceNarrowPhase ()=default;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html:11573,inherit,inherited,11573,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,3,['inherit'],['inherited']
Modifiability,") const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  ExtrudeQuadsAndGenerateHexas ();  ;  ~ExtrudeQuadsAndGenerateHexas () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:14322,inherit,inherited,14322,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['inherit'],['inherited']
Modifiability,") const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html:11942,inherit,inherited,11942,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,1,['inherit'],['inherited']
Modifiability,") override;  ; std::pair< core::CollisionModel *, core::CollisionModel * > getCollisionModels () override;  Get the pair of collision models which are in contact. More...;  ; void setDetectionOutputs (OutputVector *outputs) override;  Set the generic description of a contact point. More...;  ; void createResponse (core::objectmodel::BaseContext *group) override;  ; void removeResponse () override;  ; bool keepAlive () override;  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; void setKeepAlive (bool val) override;  Control the keepAlive flag of the contact. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html:3925,inherit,inherited,3925,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,2,['inherit'],['inherited']
Modifiability,") override;  ; virtual void setupMatrices ();  ; Index getGlobalDimension () const override;  ; int getGlobalOffset (const sofa::core::behavior::BaseMechanicalState *mstate) const override;  ; virtual void computeGlobalMatrix ();  ; void setDoPrintInfo (bool value);  ;  Public Member Functions inherited from sofa::core::behavior::MultiMatrixAccessor; virtual ~MultiMatrixAccessor ();  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::DefaultMultiMatrixAccessor; bool m_doPrintInfo {false};  ; linearalgebra::BaseMatrix * globalMatrix {nullptr};  ; Index globalDim {0};  ; std::map< const sofa::core::behavior::BaseMechanicalState *, unsigned int > realStateOffsets;  ; std::map< const sofa::core::behavior::BaseMechanicalState *, linearalgebra::BaseMatrix * > mappedMatrices;  ; std::map< const sofa::core::behavior::BaseMechanicalState *, MatrixRef > diagonalStiffnessBloc;  ; std::map< std::pair< const sofa::core::behavior::BaseMechanicalState *, const sofa::core::behavior::BaseMechanicalState * >, InteractionMatrixRef > interactionStiffnessBloc;  ; std::vector< sofa::core::BaseMapping * > mappingList;  ;  Static Public Member Functions inherited from sofa::core::behavior::DefaultMultiMatrixAccessor; static linearalgebra::BaseMatrix * createMatrix (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2);  ; static linearalgebra::BaseMatrix * createMatrixImpl (const sofa::core::behavior::BaseMechanicalState *mstate1, const sofa::core::behavior::BaseMechanicalState *mstate2, bool doPrintInfo);  . Attribute details. ◆ matrixMap. std::map< sofa::type::fixed_array<const sofa::core::behavior::BaseMechanicalState*, 2>, std::shared_ptr<linearalgebra::BaseMatrix> > sofa::core::behavior::MatrixAccessorCompat::matrixMap. Function details. ◆ getMatrix() [1/2]. MatrixRef sofa::core::behavior::MatrixAccessorCompat::getMatrix ; (; const sofa::core::behavior::BaseMechanicalState * ; mstate)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html:2145,inherit,inherited,2145,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_matrix_accessor_compat.html,2,['inherit'],['inherited']
Modifiability,") override;  ; void drawBoundingBox (const type::Vec3 &min, const type::Vec3 &max, float size=1.0) override;  ; void draw3DText (const type::Vec3 &p, float scale, const type::RGBAColor &color, const char *text) override;  ; virtual void draw3DText_Indices (const std::vector< type::Vec3 > &positions, float scale, const type::RGBAColor &color) override;  ; void clear () override;  ; void setMaterial (const type::RGBAColor &color) override;  ; void resetMaterial (const type::RGBAColor &color) override;  ; void resetMaterial () override;  ; void pushMatrix () override;  ; void popMatrix () override;  ; void multMatrix (float *glTransform) override;  ; void scale (float s) override;  ; void translate (float x, float y, float z) override;  ; void writeOverlayText (int x, int y, unsigned fontSize, const type::RGBAColor &color, const char *text) override;  draw 2D text at position (x,y) from top-left corner More...;  ; void enablePolygonOffset (float factor, float units) override;  ; void disablePolygonOffset () override;  Remove variable depth offset for polygon drawing. More...;  ; void enableBlending () override;  ; void disableBlending () override;  ; void enableLighting () override;  ; void disableLighting () override;  ; void enableDepthTest () override;  ; void disableDepthTest () override;  ; void saveLastState () override;  ; void restoreLastState () override;  ; void readPixels (int x, int y, int w, int h, float *rgb, float *z=nullptr) override;  ; void internalDrawSpheres (const type::vector< type::Vec3 > &centers, const float &radius, const unsigned int rings, const unsigned int sectors);  ; void internalDrawSphere (const type::Vec3 &center, const float &radius, const unsigned int rings, const unsigned int sectors);  ; void setLightingEnabled (bool _isAnabled) override;  ; bool getLightEnabled ();  ; void setPolygonMode (int _mode, bool _wireframe) override;  ; int getPolygonMode ();  ; bool getWireFrameEnabled ();  ;  Public Member Functions inherited from sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html:10161,variab,variable,10161,api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_draw_tool_g_l.html,1,['variab'],['variable']
Modifiability,") to another (Dest) More...;  ; class  AbstractDataLink;  AbstractDataLink is the base class for every link between two data fields The targeted BaseData is called the ""target"", The base object owning the current ""child"" object is the ""owner"" it is possible to store a path in a DataLink, in that case, at each DataLink access the path is resolved to search for a corresponding Data until one is found. Once a Data is set, the path is discarded. More...;  ; class  Aspect;  ; class  AspectPool;  ; class  AspectBuffer;  ; class  Base;  Base class for everything. More...;  ; class  BaseClass;  Class hierarchy reflection base class. More...;  ; class  DeprecatedBaseClass;  ; struct  Parents;  ; struct  TClassParents;  ; struct  TClassParents< void >;  ; struct  TClassParents< Parents< Types... > >;  ; class  TClass;  ; class  HasGetCustomTemplateName;  ; class  HasGetCustomClassName;  ; class  HasName;  ; class  HasDataTypeInfo;  ; class  HasGetDefaultTemplateName;  ; class  HasDeprecatedTemplateName;  ; class  HasDeprecatedShortName;  ; class  HasDeprecatedClassName;  ; class  BaseClassNameHelper;  ; class  BaseContext;  Base class for Context classes, storing shared variables and parameters. More...;  ; class  BaseData;  Abstract base class for Data. More...;  ; class  WriteAccessWithRawPtr;  ; class  BaseLink;  Abstract base class for all links in the scene grapn, independently of their type. More...;  ; class  BaseNode;  Base class for simulation nodes. More...;  ; class  BaseObject;  Base class for simulation components. More...;  ; class  BaseObjectDescription;  Base Interface for classes containing the description of an object, used to construct it. More...;  ; class  ClassInfo;  Meta information class. More...;  ; class  TClassInfo;  ; class  ConfigurationSetting;  Base class for all the configuration settings of SOFA. More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:1597,variab,variables,1597,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['variab'],['variables']
Modifiability,"). inlineoverridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::visual::Shader. ◆ isActive(). bool sofa::gl::component::shader::OglShader::isActive ; (; ). overridevirtual . Tells if it must be activated automatically(value false : the visitor will switch the shader) or manually (value true : useful when another component wants to use it for itself only) ; Implements sofa::core::visual::Shader. ◆ parse(). void sofa::gl::component::shader::OglShader::parse ; (; core::objectmodel::BaseObjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). void sofa::gl::component::shader::OglShader::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::gl::component::shader::OglShader::removeInNode ; (; core::objectmodel::BaseNode * ; ). inlineoverridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::visual::Shader. ◆ setCurrentIndex(). void sofa::gl::component::shader::OglShader::setCurrentIndex ; (; const unsigned int ; index). ◆ setFloat(). void sofa::gl::component::shader::OglShader::setFloat ; (; const unsigned int ; index, . const char * ; name, . float ; f1 . ). ◆ setFloat2(). void sofa::gl::component::shader::OglShader::setFloat2 ; (; const unsigned int ; index, . const char * ; name, . float ; f1, . float ; f2 . ). ◆ setFloat3(). void sofa::gl::component::shader::OglShader::setFloat3 ; (; const unsigned int ; index, . const char *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:23832,variab,variables,23832,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['variab'],['variables']
Modifiability,"). template<class BlockType > . void sofa::component::linearsystem::addToGlobalMatrix ; (; linearalgebra::BaseMatrix * ; globalMatrix, . Eigen::SparseMatrix< BlockType, Eigen::RowMajor > ; JT_K_J, . const type::Vec2u ; positionInGlobalMatrix . ). ◆ computeProjection(). template<class BlockType > . void sofa::component::linearsystem::computeProjection ; (; const Eigen::Map< Eigen::SparseMatrix< BlockType, Eigen::RowMajor > > ; KMap, . const sofa::type::fixed_array< std::shared_ptr< linearalgebra::CompressedRowSparseMatrix< BlockType >>, 2 > ; J, . Eigen::SparseMatrix< BlockType, Eigen::RowMajor > & ; JT_K_J . ). ◆ configureCreatedMatrixComponent(). template<core::matrixaccumulator::Contribution c> . void sofa::component::linearsystem::configureCreatedMatrixComponent ; (; typename BaseAssemblingMatrixAccumulator< c >::SPtr ; mat, . typename BaseAssemblingMatrixAccumulator< c >::ComponentType * ; object, . const SReal ; factor, . bool ; printLog . ). Generic function to configure a local matrix and associate it to a component . ◆ generatePairs(). auto sofa::component::linearsystem::generatePairs ; (; const sofa::type::vector< core::behavior::BaseMechanicalState * > & ; mstates); -> sofa::type::vector<sofa::type::fixed_array<core::behavior::BaseMechanicalState*, 2> >. inline . Generate all possible pairs of Mechanical States from a list of Mechanical States. . ◆ getModuleDescription(). const char * sofa::component::linearsystem::getModuleDescription ; (; ). ◆ getModuleLicense(). const char * sofa::component::linearsystem::getModuleLicense ; (; ). ◆ getModuleName(). const char * sofa::component::linearsystem::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::linearsystem::getModuleVersion ; (; ). ◆ init(). void SOFA_COMPONENT_LINEARSYSTEM_API sofa::component::linearsystem::init ; (; ). ◆ initExternalModule(). void sofa::component::linearsystem::initExternalModule ; (; ). ◆ operator<<(). std::ostream& sofa::component::linearsystem::operator<< ; (; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsystem.html:9308,config,configure,9308,api/master/sofa/html/namespacesofa_1_1component_1_1linearsystem.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1linearsystem.html,1,['config'],['configure']
Modifiability,");  . Protected Member Functions;  TopologicalMapping ();  ;  ~TopologicalMapping () override;  ; bool checkTopologyInputTypes ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ fromModel. SingleLink<TopologicalMapping, In, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::core::topology::TopologicalMapping::fromModel. Input source BaseTopology. . ◆ Glob2LocMap. std::map<Index, Index> sofa::core::topology::TopologicalMapping::Glob2LocMap. protected . ◆ In2OutMap. std::map<Index, sofa::type::vector<Index> > sofa::core::topology::TopologicalMapping::In2OutMap. protected . ◆ Lo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html:15901,inherit,inherited,15901,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,1,['inherit'],['inherited']
Modifiability,");  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:4812,variab,variables,4812,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,2,['variab'],['variables']
Modifiability,");  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:15718,inherit,inherited,15718,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,2,['inherit'],['inherited']
Modifiability,");  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:17030,inherit,inherited,17030,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,4,['inherit'],['inherited']
Modifiability,");  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::Constraint< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedDat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:16536,inherit,inherited,16536,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,4,['inherit'],['inherited']
Modifiability,");  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Attribute details. ◆ affineRatio. template<class DataTypes > . sofa::core::objectmodel::RenamedData<Real> sofa::component::engine::analyze::ShapeMatching< DataTypes >::affineRatio. ◆ cluster. template<class DataTypes > . sofa::core::objectmodel::RenamedData< VVI > sofa::component::engine::analyze::ShapeMatching< DataTypes >::cluster. ◆ d_affineRatio. template<class DataTypes > . Data< Real > sofa::component::engine::analyze::ShapeMatching< DataTypes >::d_affineRatio. Blending between affine and rigid. . ◆ d_cluster. template<class DataTypes > . Data< VVI > sofa::component::engine::analyze::ShapeMatching< DataTypes >::d_cluster. Input clusters. . ◆ d_fixedPosition. template<class DataTypes > . Data< VecCoord > sofa::component::engine::analyze::ShapeMatching< DataTypes >::d_fixedPosition. current (fixed) positi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html:18580,inherit,inherited,18580,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,2,['inherit'],['inherited']
Modifiability,");  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual void buildDampingMatrix (DampingMatrix *matrix);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObjec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:7786,inherit,inherited,7786,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['inherit'],['inherited']
Modifiability,");  ; virtual void end (simulation::Visitor::VisitorContext *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual bool isThreadSafe () const;  Specify whether this visitor can be parallelized. More...;  ; Visitor & setTags (const TagSet &t);  ; Visitor & addTag (Tag t);  ; Visitor & removeTag (Tag t);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; void for_each (VisitorType *visitor, VContext *ctx, const Container &list, void(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  ; template<class VisitorType , class VContext , class Container , typename PointedType > ; Visitor::Result for_each (VisitorType *visitor, VContext *ctx, const Container &list, Visitor::Result(VisitorType::*task)(VContext *, PointedType *), const std::string &typeInfo);  . Additional Inherited Members;  Protected Attributes inherited from sofa::simulation::MechanicalVisitor; const sofa::core::MechanicalParams * mparams;  ;  Protected Attributes inherited from sofa::simulation::BaseMechanicalVisitor; simulation::Node * root;  root node from which the visitor was executed More...;  ; SReal * rootData { nullptr };  data for root node More...;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  ;  Protected Member Functions inherited from sofa::simulation::BaseMechanicalVisitor; virtual Result processNodeTopDown (simulation::Node *node, VisitorContext *ctx);  ; virtual void processNodeBottomUp (simulation::Node *node, VisitorContext *ctx);  ;  Protected Member Functions inherited from sofa::simulation::Visitor; void debug_write_state_before (sofa::core::objectmodel::BaseObject *obj);  ; void debug_write_state_after (sofa::core::objectmodel::BaseObject *obj);  ; template<class VisitorType , class VContext , class ObjectType > ; void runVisitorTask (VisitorType *visitor, VContext *ctx, void(VisitorType::*task)(VContext *, ObjectType *), ObjectType *ptr, con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor.html:10219,inherit,inherited,10219,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_add_m_b_k___to_matrix_visitor.html,8,['inherit'],['inherited']
Modifiability,);  ; virtual void execution ();  This function is called each time the mouse is clicked. More...;  ; virtual void end ();  ; virtual void endOperation ();  This function is called after each mouse click. More...;  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Static Public Member Functions; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Protected Member Functions; void setSetting (sofa::component::setting::MouseButtonSetting *s) override;  ; virtual std::string defaultPerformerType () override;  ; void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::gui::common::Operation; sofa::gui::component::performer::InteractionPerformer * performer;  . Attribute details. ◆ setting. sofa::gui::component::AttachBodyButtonSetting::SPtr sofa::gui::common::AttachOperation::setting. protected . Constructor details. ◆ AttachOperation(). sofa::gui::common::AttachOperation::AttachOperation ; (; sofa::gui::component::AttachBodyButtonSetting::SPtr ; s = sofa::core::objectmodel::New<sofa::gui::component::AttachBodyButtonSetting>()). inline . ◆ ~AttachOperation(). sofa::gui::common::AttachOperation::~AttachOperation ; (; ). inlineoverride . Function details. ◆ configurePerformer(). void sofa::gui::common::AttachOperation::configurePerformer ; (; sofa::gui::component::performer::InteractionPerformer * ; p). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation. ◆ defaultPerformerType(). std::string sofa::gui::common::AttachOperation::defaultPerformerType ; (; ). overrideprotectedvirtual . Reimplemented from sofa::gui::common::Operation.; Reimple,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html:2450,inherit,inherited,2450,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_attach_operation.html,1,['inherit'],['inherited']
Modifiability,");  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html:13619,inherit,inherited,13619,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,1,['inherit'],['inherited']
Modifiability,");  ; void addSymDValue (unsigned int bi, unsigned int bj, const Real b);  ; void addSymDValue (unsigned int bi, unsigned int bj, int &rowId, int &colId, int &rowIdT, int &colIdT, Real b);  ; void transposeFullRows (CompressedRowSparseMatrixGeneric< TBlock2, TPolicy2 > &res) const;  Transpose the matrix into res, works only for 3 array variant (""full rows"") matrices, ie which can be expressed using the rowBegin, colsIndex and colsValue arrays solely. More...;  ; void mul (CompressedRowSparseMatrixGeneric< RB, RP > &res, const CompressedRowSparseMatrixGeneric< MB, MP > &m) const;  ; void mulTranspose (CompressedRowSparseMatrixGeneric< RB, RP > &res, const CompressedRowSparseMatrixGeneric< MB, MP > &m) const;  . Static Public Member Functions; static const char * Name ();  ;  Static Public Member Functions inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; static bool sortedFind (const VecIndex &v, Range in, Index val, Index &result);  ; static bool sortedFind (const VecIndex &v, Index val, Index &result);  ; static const char * Name ();  ; static bool check_matrix (Index nzmax, Index m, Index n, Index *a_p, Index *a_i, Block *a_x);  ; static auto blockMultTranspose (const TBlock &blockA, const TBlock &blockB);  . Friends; std::ostream & operator<< (std::ostream &out, const CompressedRowSparseMatrixConstraint< TBlock, Policy > &sc);  write to an output stream More...;  ; std::istream & operator>> (std::istream &in, CompressedRowSparseMatrixConstraint< TBlock, Policy > &sc);  read from an input stream More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::linearalgebra::CompressedRowSparseMatrixGeneric< TBlock, CRSConstraintPolicy >; Index nBlockRow;  Size. More...;  ; Index nBlockCol;  Mathematical size of the matrix, in blocks. More...;  ; VecIndex rowIndex;  Compressed sparse data structure. More...;  ; VecIndex rowBegin;  column indices of non-empty blocks in each row. The column indices o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html:8408,inherit,inherited,8408,api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1linearalgebra_1_1_compressed_row_sparse_matrix_constraint.html,1,['inherit'],['inherited']
Modifiability,");  ; void setStiffness (Real1 stiff);  ; void setDamping (Real1 damp);  ; void addForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv1 &f1, DataVecDeriv2 &f2, const DataVecCoord1 &x1, const DataVecCoord2 &x2, const DataVecDeriv1 &v1, const DataVecDeriv2 &v2) override;  ; virtual void addForce2 (DataVecDeriv1 &f1, DataVecDeriv2 &f2, const DataVecCoord1 &p1, const DataVecCoord2 &p2, const DataVecDeriv1 &v1, const DataVecDeriv2 &v2);  ; void addDForce (const sofa::core::MechanicalParams *mparams, DataVecDeriv1 &df1, DataVecDeriv2 &df2, const DataVecDeriv1 &dx1, const DataVecDeriv2 &dx2) override;  ; SReal getPotentialEnergy (const sofa::core::MechanicalParams *mparams, const DataVecCoord1 &x1, const DataVecCoord2 &x2) const override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE2(MixedInteractionForceField, TDataTypes1, TDataTypes2), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:5501,variab,variables,5501,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,1,['variab'],['variables']
Modifiability,");  ;  ~InciseOperation () override;  ; void start () override;  ; void execution () override;  This function is called each time the mouse is clicked. More...;  ; void end () override;  ; void endOperation () override;  This function is called after each mouse click. More...;  ; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  ;  Public Member Functions inherited from sofa::gui::common::Operation;  Operation (sofa::component::setting::MouseButtonSetting::SPtr s=nullptr);  ; virtual ~Operation ();  ; virtual void configure (PickHandler *picker, sofa::component::setting::MouseButtonSetting *s);  ; virtual void wait ();  This function is called when shift key is released. More...;  ; virtual void setSetting (sofa::component::setting::MouseButtonSetting *s);  ; virtual std::string defaultPerformerType ();  ; virtual sofa::gui::component::performer::InteractionPerformer * createPerformer ();  ; virtual void configurePerformer (sofa::gui::component::performer::InteractionPerformer *p);  ; MOUSE_BUTTON getMouseButton () const;  ; std::string getId ();  . Public Slots; void setEnableBox (bool i);  ; void setFinishIncision (bool i);  ; void setkeepPoint (bool i);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::gui::common::InciseOperation; static std::string getDescription ();  ;  Static Public Member Functions inherited from sofa::gui::common::Operation; static MOUSE_BUTTON GetMouseId (unsigned int i);  . Attribute details. ◆ advancedOperations. QGroupBox* sofa::gui::qt::QInciseOperation::advancedOperations. protected . ◆ advancedOptions. QGroupBox* sofa::gui::qt::QInciseOperation::advancedOptions. protected . ◆ finishCut. QCheckBox* sofa::gui::qt::QInciseOperation::finishCut. protected . ◆ finishIncision. bool sofa::gui::qt::QInciseOperation::finishIncision. ◆ incisionMethodChoiceGroup. QGroupBox* sofa::gui::qt:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html:2885,config,configurePerformer,2885,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_incise_operation.html,1,['config'],['configurePerformer']
Modifiability,");  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TrailRenderer ();  ; void storeParticlePositions ();  ; void removeFirstElements ();  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  He",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:13613,inherit,inherited,13613,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,2,['inherit'],['inherited']
Modifiability,");  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TriangleModelInRegularGrid ();  ;  ~TriangleModelInRegularGrid ();  ;  Protected Member Functions inherited from sofa::component::collision::geometry::TriangleCollisionModel< sofa::defaulttype::Vec3Types >;  TriangleCollisionModel ();  ; virtual void updateFromTopology ();  ; virtual void updateNormals ();  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html:17693,inherit,inherited,17693,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_triangle_model_in_regular_grid.html,2,['inherit'],['inherited']
Modifiability,");  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  AttachBodyButtonSetting ();  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html:11273,inherit,inherited,11273,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,2,['inherit'],['inherited']
Modifiability,");  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SofaDefaultPathSetting ();  Default constructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html:10673,inherit,inherited,10673,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,1,['inherit'],['inherited']
Modifiability,");  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; LinearSystemData< TMatrix, TVector > m_linearSystem;  ; MappingGraph m_mappingGraph;  Relationships between the mechanical states and their associated components. More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:11409,inherit,inherited,11409,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,3,['inherit'],['inherited']
Modifiability,");  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html:11553,inherit,inherited,11553,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,");  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolver; bool frozen;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html:12773,inherit,inherited,12773,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,1,['inherit'],['inherited']
Modifiability,");  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html:9683,inherit,inherited,9683,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,12,['inherit'],['inherited']
Modifiability,");  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html:11240,inherit,inherited,11240,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,1,['inherit'],['inherited']
Modifiability,");  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr creat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:12355,inherit,inherited,12355,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,9,['inherit'],['inherited']
Modifiability,");  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SingleStateAccessor (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Friends; class PartialLinearMovementProjectiveConstraintInternalData< DataTypes >;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_imposedDisplacmentOnMacroNodes. template<class TDataTypes > . core::objectmodel::Data<type::vector<Real> > sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >::d_imposedDisplacmentOnMacroNodes. and u1 u2 u3 u4 u5 u6 u7 u8 for 3d case ; The imposed displacement on macro nodes . ◆ d_indices. t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:22654,inherit,inherited,22654,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,2,['inherit'],['inherited']
Modifiability,");  Set a MechanicalState to the controller. More...;  ; unsigned int getIndex (void) const;  Return the index of the controlled DOF of the MechanicalState. More...;  ; void setIndex (const unsigned int);  Set the index of the controlled DOF of the MechanicalState. More...;  ; void setMainDirection (const sofa::type::Vec< 3, Real >);  Set the direction of the controlled DOF corresponding to the Mouse vertical axis. More...;  ; const sofa::type::Vec< 3, Real > & getMainDirection () const;  Return the direction of the controlled DOF corresponding to the Mouse vertical axis. More...;  ; void applyController (void);  Apply the controller modifications to the controlled MechanicalState. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::controller::Controller; sofa::core::objectmodel::RenamedData< bool > handleEventTriggersUpdate;  ; Data< bool > d_handleEventTriggersUpdate;  Event handling frequency controls the controller update frequency. More...;  ;  Protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html:14769,inherit,inherited,14769,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,1,['inherit'],['inherited']
Modifiability,"* > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GroupFilterYoungModulus, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html:2686,variab,variables,2686,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,1,['variab'],['variables']
Modifiability,"* > shaders;  Shader to use the element with. More...;  ;  Static Public Member Functions inherited from sofa::gl::component::shader::OglTexture; static void setActiveTexture (unsigned short unit);  Utility function to set current active texture. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::gl::component::shader::OglTexture;  OglTexture ();  ;  ~OglTexture () override;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html:16219,inherit,inherited,16219,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,4,['inherit'],['inherited']
Modifiability,"*&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseLoader ();  ;  ~BaseLoader () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static void skipToEOL (FILE *f);  ; static bool readLine (char *buf, int size, FILE *f);  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html:11127,inherit,inherited,11127,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_base_loader.html,1,['inherit'],['inherited']
Modifiability,"*&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  ReadState ();  ;  ~ReadState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:12647,inherit,inherited,12647,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['inherit'],['inherited']
Modifiability,"*alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CollisionAlgorithm ();  ; virtual void changeInstance (Instance)=0;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *fi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html:10060,inherit,inherited,10060,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,1,['inherit'],['inherited']
Modifiability,"*intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pair< core::CollisionModel *, core::CollisionModel * >, Intersection * > arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::collision::response::contact::BaseRayContact;  BaseRayContact (CollisionModel1 *model1, core::collision::Intersection *instersectionMethod);  ;  ~BaseRayContact () override;  ;  Protected Member Functions inherited from sofa::core::collision::Contact;  Contact ();  ;  ~Contact () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a trac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html:12985,inherit,inherited,12985,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,3,['inherit'],['inherited']
Modifiability,"*link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  SparseGridRamificationTopology (bool _isVirtual=false);  ;  ~SparseGridRamificationTopology () override;  ; bool intersectionSegmentTriangle (type::Vec3 s0, type::Vec3 s1, type::Vec3 t0, type::Vec3 t1, type::Vec3 t2);  ;  Protected Member Functions inherited from sofa::component::topology::container::grid::SparseGridTopology;  SparseGridTopology (bool _isVirtual=false);  ;  SparseGridTopology (type::Vec3i numVertices, type::BoundingBox box, bool _isVirtual=false);  Define using the resolution and the spatial size. The resolution corresponds to the number of points if all the cells were filled. More...;  ; virtual void updateEdges ();  ; virtual void updateQuads ();  ; void launchPropagationFromSeed (const type::Vec3i &point, sofa::core::sptr< RegularGridTopology > regularGrid, type::vector< Type > &regularGrdidTypes, type::vector< bool > &alreadyTested, std::stack< type::Vec3i > &seed) const;  start from a seed cell (i,j,k) the OUTSIDE filling is propagated to neighboor cells until meet a BOUNDARY cell (this function is called from all border cells of the RegularGrid) More...;  ; void propagateFrom (const type::Vec3i &point, sofa::core::sptr< RegularGridTopology > regularGrid, type::vector< Type > &regularGridTypes, type::vec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html:40185,inherit,inherited,40185,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,1,['inherit'],['inherited']
Modifiability,"*link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html:10773,inherit,inherited,10773,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,1,['inherit'],['inherited']
Modifiability,"*link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Distances (sofa::component::topology::container::dynamic::DynamicSparseGridTopologyContainer *hexaTopoContainer, core::behavior::MechanicalState< DataTypes > *targetPointSet);  ;  ~Distances () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:16330,inherit,inherited,16330,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['inherit'],['inherited']
Modifiability,"*link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  Multi2Mapping ();  Constructor. More...;  ;  ~Multi2Mapping () override;  Destructor. More...;  ; void getVecIn1Coord (const MultiVecCoordId id, type::vector< DataVecCoord_t< In1 > * > &v) const;  ; void getConstVecIn1Coord (const ConstMultiVecCoordId id, type::vector< const DataVecCoord_t< In1 >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html:17586,inherit,inherited,17586,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,1,['inherit'],['inherited']
Modifiability,"*link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SphereCollisionModel ();  ;  SphereCollisionModel (core::behavior::MechanicalState< TDataTypes > *_mstate);  ;  Protected Member Functions inherited from sofa::core::CollisionModel;  CollisionModel ();  Constructor. More...;  ;  ~CollisionModel () override;  Destructor. More...;  ;  Protected Mem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:19452,inherit,inherited,19452,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,1,['inherit'],['inherited']
Modifiability,"*link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  TopologicalMapping ();  ;  ~TopologicalMapping () override;  ; bool checkTopologyInputTypes ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal upda",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html:14425,inherit,inherited,14425,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,1,['inherit'],['inherited']
Modifiability,"*mparams, const DataVecCoord1 &x1, const DataVecCoord2 &x2) const override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE2(MixedInteractionForceField, TDataTypes1, TDataTypes2), BaseInteractionForceField, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2));  ; void addForce (const MechanicalParams *mparams, MultiVecDerivId fId) override;  ; void addDForce (const MechanicalParams *mparams, MultiVecDerivId dfId) override;  ; SReal getPotentialEnergy (const MechanicalParams *mparams) const override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionForceField;  SOFA_ABSTRACT_CLASS (BaseInteractionForceField, BaseForceField);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; void addKToMatrix (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Compute the system matrix corresponding to . More...;  ; virtual void initGnuplot (const std::string path);  initialization to export potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (SReal time);  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor)",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:5723,inherit,inherited,5723,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,2,['inherit'],['inherited']
Modifiability,"*name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_input. template<class TDataType > . Data<VecData> sofa::component::engine::analyze::SumEngine< TDataType >::d_input. protected . input vector . ◆ d_output. template<class TDataType > . Data<DataType> sofa::component::engine::analyze::SumEngine< TDataType >::d_output. protected . output sum . Constructor details. ◆ SumEngine(). template<class DataTypes > . sofa::component::engine::analyze::SumEngine< DataTypes >::SumEngine. ◆ ~SumEngine(). template<class TDataType > . sofa::component::engine::analyze::SumEngine< TDataType >::~SumEngine ; (; ). inlineoverride . Function details. ◆ doUpdate(). template<class DataType > . void sofa::component::engine::analyze::SumEngine< DataType >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataType > . void sofa::component::engine::analyze::SumEngine< DataType >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataType > . void sofa::component::engine::analyze::SumEngine< DataType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class TDataType > . sofa::component::engine::analyze::SumEngine< TDataType >::SOFA_CLASS ; (; SOFA_TEMPLATE(SumEngine< TDataType >, TDataType) ; , . core::DataEngine ;  . ). sofacomponentengineanalyzeSumEngine; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html:17448,variab,variables,17448,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_sum_engine.html,1,['variab'],['variables']
Modifiability,"*name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::sceneutility::BaseAddResourceRepository; DataFileName d_repositoryPath;  Path to add to the pool of resources. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::sceneutility::BaseAddResourceRepository; FileRepository * m_repository;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; L",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html:11539,inherit,inherited,11539,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,2,['inherit'],['inherited']
Modifiability,"*name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ contacts. template<class D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:20223,inherit,inherited,20223,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['inherit'],['inherited']
Modifiability,"*name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_compressible. template<c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html:21647,inherit,inherited,21647,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,1,['inherit'],['inherited']
Modifiability,"*node, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is not mapped from the parent level. More...;  ; Result fwdMappedMechanicalState (simulation::Node *node, sofa::core::behavior::BaseMechanicalState *mm) override;  Process the BaseMechanicalState if it is mapped from the parent level. More...;  ; Result fwdInteractionForceField (simulation::Node *node, sofa::core::behavior::BaseInteractionForceField *ff) override;  Process all the InteractionForceField. More...;  ; const char * getClassName () const override;  ; std::string getInfos () const override;  ; bool isThreadSafe () const override;  Specify whether this action can be parallelized. More...;  ;  Public Member Functions inherited from sofa::simulation::BaseMechanicalVisitor;  BaseMechanicalVisitor (const sofa::core::ExecParams *params);  ; virtual bool readNodeData () const =delete;  ; virtual bool writeNodeData () const =delete;  ; virtual void setNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; virtual void addNodeData (simulation::Node *, SReal *, const SReal *)=delete;  ; const char * getCategoryName () const override;  ; Result processNodeTopDown (simulation::Node *node) override;  This method calls the fwd* methods during the forward traversal. You typically do not overload it. More...;  ; virtual Result processNodeTopDown (simulation::Node *node, LocalStorage *stack) override=delete;  ; virtual Result fwdOdeSolver (simulation::Node *, sofa::core::behavior::OdeSolver *);  Process the OdeSolver. More...;  ; virtual Result fwdOdeSolver (VisitorContext *ctx, sofa::core::behavior::OdeSolver *solver);  Process the OdeSolver. More...;  ; virtual Result fwdConstraintSolver (simulation::Node *, sofa::core::behavior::ConstraintSolver *);  Process the ConstraintSolver. More...;  ; virtual Result fwdConstraintSolver (VisitorContext *ctx, sofa::core::behavior::ConstraintSolver *solver);  Process the ConstraintSolver. More...;  ; virtual Result fwdMe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor.html:2161,inherit,inherited,2161,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_v_realloc_visitor.html,1,['inherit'],['inherited']
Modifiability,"* data () const noexcept;  ; constexpr ArrayLineType::iterator begin () noexcept;  ; constexpr ArrayLineType::const_iterator begin () const noexcept;  ; constexpr ArrayLineType::iterator end () noexcept;  ; constexpr ArrayLineType::const_iterator end () const noexcept;  ; constexpr reference front ();  ; constexpr const_reference front () const;  ; constexpr reference back ();  ; constexpr const_reference back () const;  ; constexpr bool operator== (const Mat< L, C, real > &b) const noexcept;  ; constexpr bool operator!= (const Mat< L, C, real > &b) const noexcept;  ; bool isSymmetric () const;  ; bool isDiagonal () const noexcept;  . Additional Inherited Members;  Public Attributes inherited from sofa::type::Mat< L, C, real >; ArrayLineType elems {};  ;  Static Public Attributes inherited from sofa::type::Mat< L, C, real >; static constexpr sofa::Size N = L * C;  ; static constexpr Size nbLines = L;  ; static constexpr Size nbCols = C;  ; static constexpr sofa::Size static_size = L;  ; static constexpr sofa::Size total_size = L;  ;  Static Public Member Functions inherited from sofa::type::Mat< L, C, real >; static constexpr sofa::Size size ();  ; template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> ; static const Mat< L, L, real > & Identity () noexcept;  Returns the identity matrix. More...;  ; template<Size S> ; static bool canSelfTranspose (const Mat< S, S, real > &lhs, const Mat< S, S, real > &rhs) noexcept;  ; template<Size I, Size J> ; static bool canSelfTranspose (const Mat< I, J, real > &, const Mat< J, I, real > &) noexcept;  ; template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> ; static Mat< L, C, real > transformTranslation (const Vec< C-1, real > &t) noexcept;  ; template<sofa::Size NbLine = L, sofa::Size NbColumn = C, typename = std::enable_if_t<NbLine == NbColumn>> ; static Mat< L, C, real > transformScale (real s) noexcept;  ; template<sofa::Siz",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html:10643,inherit,inherited,10643,api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_mat_no_init.html,3,['inherit'],['inherited']
Modifiability,"* m_topology;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FastTriangularBendingSprings, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *mparams, DataVecDeriv &d_f, const DataVecCoord &d_x, const DataVecDeriv &d_v) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void addKToMatrix (sofa::linearalgebra::BaseMatrix *mat, SReal k, unsigned int &offset) override;  ; void buildStiffnessMatrix (core::behavior::StiffnessMatrix *matrix) override;  ; void buildDampingMatrix (core::behavior::DampingMatrix *) final;  ; SReal getPotentialEnergy (const co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html:3981,inherit,inherited,3981,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,1,['inherit'],['inherited']
Modifiability,", . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByName(). auto sofa::helper::system::PluginManager::loadPluginByName ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pluginNameThe filename without extension of the plugin to load ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds, empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string passed as a parameter is a full path ; errlogAn optional stream for error logging. . ◆ loadPluginByPath(). PluginManager::PluginLoadStatus sofa::helper::system::PluginManager::loadPluginByPath ; (; const std::string & ; path, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory. Parameters. pathThe full path of the plugin to load ; errlogAn optional stream for error logging. . ◆ pluginIsLoaded(). bool sofa::helper::system::P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:7347,plugin,pluginName,7347,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['plugin'],['pluginName']
Modifiability,", . sofa::core::MultiVecDerivId ; , . const linearalgebra::BaseVector * ;  . ). overridevirtual . Apply the contactforce dx = Minv * J^t * f and store the result in dx VecId. ; Reimplemented from sofa::core::behavior::LinearSolver. ◆ applySystemSolution(). template<class Matrix , class Vector > . void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::applySystemSolution. Apply the solution of the system to all the objects. . ◆ buildComplianceMatrix(). template<class Matrix , class Vector > . bool sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::buildComplianceMatrix ; (; const core::ConstraintParams * ; cparams, . linearalgebra::BaseMatrix * ; result, . SReal ; fact . ). overridevirtual . Build the jacobian of the constraints using a visitor; Parameters. cparamscontains the MultiMatrixDerivId which allows to retrieve the constraint jacobian to use for each mechanical object. ; resultthe variable where the result will be added ; factintegrator parameter . Returnsfalse if the solver does not support this operation, of it the system matrix is not invertible ; Reimplemented from sofa::core::behavior::LinearSolver. ◆ checkLinearSystem(). template<class Matrix , class Vector > . void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::checkLinearSystem. protectedvirtual . ◆ computeResidual(). template<class Matrix , class Vector > . void sofa::component::linearsolver::MatrixLinearSolver< Matrix, Vector, NoThreadManager >::computeResidual ; (; const core::ExecParams * ; params, . linearalgebra::BaseVector * ; f . ). overridevirtual . Parallelize the computation of the product J*M^{-1}*J^T where M is the matrix of the linear system and J is any matrix with compatible dimensions ; Reimplemented from sofa::core::behavior::LinearSolver. ◆ createDefaultLinearSystem(). template<class Matrix , class Vector > . template<class TLinearSystemType > . void sofa::component::linears",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html:25071,variab,variable,25071,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_matrix_linear_solver_3_01_matrix_00_01_vector_00_01_no_thread_manager_01_4.html,1,['variab'],['variable']
Modifiability,", BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  MixedInteractionConstraint (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~MixedInteractionConstraint () override;  ; virtual type::vector< std::string > getInteractionIdentifiers () override final;  ; virtual type::vector< std::string > getMixedInteractionIdentifiers ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseInteractionConstraint;  BaseInteractionConstraint ();  ;  ~BaseInteractionConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraint;  BaseConstraint ();  ;  ~BaseConstraint () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  BaseConstraintSet ();  ;  ~BaseConstraintSet () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:16843,inherit,inherited,16843,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,4,['inherit'],['inherited']
Modifiability,", Index oldTriangleIndex);  ; void saveIndices ();  ; void inciseWithSavedIndices ();  ; Index findIndexInListOfTime (SReal time);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Attribute details. ◆ d_draw. Data<bool> sofa::component::topology::utility::TopologicalChangeProcessor::d_draw. draw information . ◆ d_edgesToRemove. Data<sofa::type::vector<Index> > sofa::component::topology::utility::TopologicalChangeProcessor::d_edgesToRemove. List of edge IDs to be removed. . ◆ d_epsilonSnapBorder. Data<SReal> sofa::component::topology::utility::TopologicalChangeProcessor::d_epsilonSnapBorder. epsilon snap pat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html:16724,inherit,inherited,16724,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topological_change_processor.html,1,['inherit'],['inherited']
Modifiability,", MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. template<class DataTypes > . constexpr std::string_view sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::Name = ""ArrudaBoyce"". staticconstexpr . Function details. ◆ applyElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::applyElasticityTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . const MatrixSym & ; , . MatrixSym & ;  . ). inlinevirtual . computes the Elasticity Tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ deriveSPKTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::deriveSPKTensor ; (; StrainInformation< DataTypes > * ; , . const MaterialParameters< DataTypes > & ; , . MatrixSym & ;  . ). inlinevirtual . computes the second Piola Kirchhoff stress tensor of the current configuration ; Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >. ◆ ElasticityTensor(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >::ElasticityTensor ; (; StrainInformation< DataTypes > * ; sinfo, . const MaterialParameters< DataTypes > & ; param, . Matrix6 & ; outputTensor . ). inlinevirtual . Reimplemented from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMateri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html:2703,config,configuration,2703,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,1,['config'],['configuration']
Modifiability,", Real > > elemDisplacements;  ; bool updateVonMisesStress;  ; Plasticity such as ""Interactive Virtual Materials"", Muller & Gross, GI 2004; Data< Real > d_plasticMaxThreshold;  ; Data< Real > d_plasticYieldThreshold;  Plastic Yield Threshold (2-norm of the strain) More...;  ; Data< Real > d_plasticCreep;  Plastic Creep Factor * dt [0,1]. Warning this factor depends on dt. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:5882,inherit,inherited,5882,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,", TOut >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< unsigned int > m_nbPointsOnEachCircle;  ; sofa::core::objectmodel::RenamedData< double > m_radius;  ; sofa::core::objectmodel::RenamedData< int > m_peak;  ; Data< unsigned int > d_nbPointsOnEachCircle;  Discretization of created circles. More...;  ; Data< double > d_radius;  Radius of created circles. More...;  ; Data< int > d_peak;  =0 no peak, =1 peak on the first segment =2 peak on the two first segment, =-1 peak on the last segment More...;  . Protected Attributes; OutVecCoord rotatedPoints;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(TubularMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMapping, TIn, TOut));  ; void init () override;  ; void apply (const core::MechanicalParams *mparams, OutDataVecCoord &dOut, const InDataVecCoord &dIn) override;  ; void applyJ (const core::MechanicalParams *mparams, OutDataVecDeriv &dOut, const InDataVecDeriv &dIn) override;  ; void applyJT (const core::MechanicalParams *mparams, InDataVecDeriv &dOut, const OutDataVecDeriv &dIn) override;  ; void applyJT (const core::ConstraintParams *, InDataMatrixDeriv &dOut, const OutDataMatrixDeriv &dIn) override;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  TubularMapping ();  ; virtual ~TubularMapping ();  . Attribute details. ◆ d_nbPointsOnEachCircle. template<class TIn , class TOut > . Data<unsigned int> sofa::component::mapping::linear::TubularMapping< TIn, TOut >::d_nbPointsOnEachCircle. Discretization of created circles. . ◆ d_peak. template<class TIn , class TOut > . Data<int> sofa::component::mapping::linear::TubularMapping< TIn, TOut >::d_peak. =0 no peak, =1 peak on the first segment =2 peak on the two first segment, =-1 peak on the last segment . ◆ d_radius. template<class TIn , class TO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_tubular_mapping.html:1714,inherit,inherited,1714,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_tubular_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_tubular_mapping.html,1,['inherit'],['inherited']
Modifiability,", class TOut>; class sofa::component::mapping::nonlinear::SquareDistanceMapping< TIn, TOut >; Maps point positions to square distances. Type TOut corresponds to a scalar value. The pairs are given in an EdgeSetTopologyContainer in the same node.; In: parent point positions Out: square distance between point pairs, minus a square rest distance.; No restLength (imposed null rest length) for now TODO: compute Jacobians for non null restLength; AuthorMatthieu Nesme . Public Attributes; Data< Real > d_showObjectScale;  Scale for object display. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color for object display. (default=[1.0,1.0,0.0,1.0]) More...;  ; SingleLink< SquareDistanceMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::Compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html:1510,inherit,inherited,1510,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_distance_mapping.html,2,['inherit'],['inherited']
Modifiability,", const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:17493,variab,variables,17493,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,6,['variab'],['variables']
Modifiability,", const BaseLink *link);  . Protected Member Functions;  BaseAddResourceRepository ();  ;  ~BaseAddResourceRepository () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html:11955,inherit,inherited,11955,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,1,['inherit'],['inherited']
Modifiability,", const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static void computeInverseFromPermutation (int matrixSize, const int *inPermutation, int *outInversePermutation);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Singl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html:10244,inherit,inherited,10244,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,1,['inherit'],['inherited']
Modifiability,", const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BaseState ();  ;  ~BaseState () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html:9863,inherit,inherited,9863,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,1,['inherit'],['inherited']
Modifiability,", const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  OdeSolver ();  ;  ~OdeSolver () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:10489,inherit,inherited,10489,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['inherit'],['inherited']
Modifiability,", const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::VisualModel;  VisualModel ();  ;  ~VisualModel () override;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ backfaceWriting. Data<bool> sofa::gl::component::shader::OglShader::backfaceWriting. it enables writing to gl_BackColor inside a GLSL vertex shader . ◆ clampVertexColor. Data<bool> sofa::gl::component::shader::OglShader::clampVertexColor. clamp the vertex color between 0 and 1 . ◆ fragFilename. sofa::core::objectmodel::DataFileNameVector sofa::gl::component::shader::OglShader::fragFilename. Files where fragment shader is defined. . ◆ indexActiveShader. Data<unsigned int> sofa::gl::component::shader::OglShader::indexActiveShader. Set current active shader. . ◆ passive. Data<bool> sofa::gl::component::shader::OglShader::passive. Tells if it must be activated automatically(value false : the visitor will switch the shader) or manually (value true : useful when another component wants to use it for itself only) . ◆ shaderVector. std::vector<sofa::gl::GLSL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:19548,inherit,inherited,19548,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['inherit'],['inherited']
Modifiability,", const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< true >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions;  DistanceMultiMapping ();  ;  ~DistanceMultiMapping () override;  ; void computeCoordPositionDifference (Direction &r, const InCoord &a, const InCoord &b);  r=b-a only for position (eventual rotation, affine transform... remains null) More...;  ;  Protected Member Functions inherited from sofa::core::MultiMapping< TIn, TOut >;  MultiMapping ();  Constructor. More...;  ;  ~MultiMapping () override;  Destructor. More...;  ; void getVecInCoord (const MultiVecCoordId id, type::vector< InDataVecCoord * > &v) const;  ; void getConstVecInCoord (const ConstMultiVecCoordId id, type::vector< const InDataVecCoord * > &v) const;  ; void getVecInDeriv (const MultiVecDerivId id, type::vector< InDataVecDeriv * > &v) const;  ; void getConstVecInDeriv (const ConstMultiVecDerivId id, type::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html:20290,inherit,inherited,20290,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,1,['inherit'],['inherited']
Modifiability,", const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< true >;  NonLinearMappingData ();  ;  NonLinearMappingData ();  . Protected Member Functions;  RigidMapping ();  ; virtual ~RigidMapping ();  ; unsigned int getRigidIndex (unsigned int pointIndex) const;  ; void load (const char *filename);  ; const OutVecCoord & getPoints ();  ; void setJMatrixBlock (sofa::Index outIdx, sofa::Index inIdx);  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_matrixJ instead"") DeprecatedAndRemoved matrixJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_updateJ instead"") DeprecatedAndRemoved updateJ;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobian instead"") DeprecatedAndRemoved eigenJacobian;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_eigenJacobians instead"") DeprecatedAndRemoved eigenJacobians;  used by getJs More...;  ;  SOFA_ATTRIBUTE_DISABLED (""v23.06"", ""v23.12"", ""Use m_geometricStiffnes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:20544,inherit,inherited,20544,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['inherit'],['inherited']
Modifiability,", const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  PairBoxROI ();  ;  ~PairBoxROI () override;  ; bool isPointInBox (const CPos &p, const Vec6 &b);  ; bool isPointInBox (const PointID &pid, const Vec6 &b);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html:14321,inherit,inherited,14321,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,1,['inherit'],['inherited']
Modifiability,", const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  WriteTopology ();  ;  ~WriteTopology () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html:13313,inherit,inherited,13313,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,1,['inherit'],['inherited']
Modifiability,", const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MergeVectors ();  ;  ~MergeVectors () override;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html:13513,inherit,inherited,13513,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,1,['inherit'],['inherited']
Modifiability,", core::MultiVecDerivId f, const linearalgebra::BaseVector *lambda) override;  ; void rebuildSystem (SReal massFactor, SReal forceFactor) override;  ; void applyContactForce (const linearalgebra::BaseVector *f) override;  ; void resetContactForce () override;  ; void computeResidual (const core::ExecParams *params, linearalgebra::BaseVector *lambda) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  SOFA_ABSTRACT_CLASS (BaseConstraintCorrection, objectmodel::BaseObject);  ; virtual bool isActive ();  ; virtual void getComplianceWithConstraintMerge (linearalgebra::BaseMatrix *, std::vector< int > &);  For multigrid approach => constraints are merged. More...;  ; virtual bool hasConstraintNumber (int);  ; virtual void resetForUnbuiltResolution (SReal *, std::list< unsigned int > &);  ; virtual void addConstraintDisplacement (SReal *, int, int);  ; virtual void setConstraintDForce (SReal *, int, int, bool);  ; virtual void getBlockDiagonalCompliance (linearalgebra::BaseMatrix *, int, int);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html:5526,inherit,inherited,5526,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,1,['inherit'],['inherited']
Modifiability,", etc). . Public Attributes; sofa::core::objectmodel::RenamedData< bool > useSphereTriangle;  ; sofa::core::objectmodel::RenamedData< bool > usePointPoint;  ; sofa::core::objectmodel::RenamedData< bool > useSurfaceNormals;  ; sofa::core::objectmodel::RenamedData< bool > useLinePoint;  ; sofa::core::objectmodel::RenamedData< bool > useLineLine;  ; Data< bool > d_useSphereTriangle;  activate Sphere-Triangle intersection tests More...;  ; Data< bool > d_usePointPoint;  activate Point-Point intersection tests More...;  ; Data< bool > d_useSurfaceNormals;  Compute the norms of the Detection Outputs by considering the normals of the surfaces involved. More...;  ; Data< bool > d_useLinePoint;  activate Line-Point intersection tests More...;  ; Data< bool > d_useLineLine;  activate Line-Line intersection tests More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::BaseProximityIntersection; sofa::core::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:2387,inherit,inherited,2387,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,1,['inherit'],['inherited']
Modifiability,", float v1)sofa::gl::GLSLShader; SetFloat3(GLint variable, float v0, float v1, float v2)sofa::gl::GLSLShader; SetFloat4(GLint variable, float v0, float v1, float v2, float v3)sofa::gl::GLSLShader; SetFloatVector(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector2(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector3(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFloatVector4(GLint variable, GLsizei count, const float *value)sofa::gl::GLSLShader; SetFragmentShaderFileName(const std::string &fileName)sofa::gl::GLSLShaderinline; SetFragmentShaderFromString(const std::string &string)sofa::gl::GLSLShaderinline; SetInt(GLint variable, int newValue)sofa::gl::GLSLShader; SetInt2(GLint variable, int i1, int i2)sofa::gl::GLSLShader; SetInt3(GLint variable, int i1, int i2, int i3)sofa::gl::GLSLShader; SetInt4(GLint variable, int i1, int i2, int i3, int i4)sofa::gl::GLSLShader; SetIntVector(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector2(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector3(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetIntVector4(GLint variable, GLsizei count, const GLint *value)sofa::gl::GLSLShader; SetMatrix2(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix2x3(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix2x4(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix3(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix3x2(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix3x4(GLint, GLsizei, GLboolean, const GLfloat *)sofa::gl::GLSLShaderinline; SetMatrix4(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)sofa::gl::GLSLShader; SetMatrix4x2(GLint, GLsizei",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html:3045,variab,variable,3045,api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1_g_l_s_l_shader-members.html,1,['variab'],['variable']
Modifiability,", hideBehavior, showBehaviorModels, hideBehaviorModels, showForceFields, hideForceFields, showInteractionForceFields, hideInteractionForceFields showMapping, hideMapping showMappings, hideMappings showMechanicalMappings, hideMechanicalMappings showCollision, hideCollision showCollisionModels, hideCollisionModels showBoundingCollisionModels, hideBoundingCollisionModels showOptions hideOptions showNormals hideNormals showWireframe hideWireframe . Public Attributes; sofa::core::objectmodel::RenamedData< DisplayFlags > displayFlags;  ; Data< DisplayFlags > d_displayFlags;  Display Flags. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; DisplayFlags backupFlags;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html:1997,inherit,inherited,1997,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,1,['inherit'],['inherited']
Modifiability,", or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::testing::BaseTest; sofa::testing::MessageAsTestFailure m_fatal;  ; sofa::testing::MessageAsTestFailure m_error;  ;  Static Public Attributes inherited from sofa::testing::BaseTest; static int seed = (unsigned int)time(nullptr);  Seed value. More...;  ;  Public Member Functions inherited from sofa::testing::NumericTest< SReal >;  NumericTest ();  ; Real vectorMaxDiff (const Container1 &c1, const Container2 &c2);  Return the maximum difference between two containers. Issues a failure if sizes are different. More...;  ; Real vectorMaxAbs (const Container &c);  Return the maximum absolute value of a container. More...;  ;  Public Member Functions inherited from sofa::testing::BaseTest;  BaseTest ();  Initialize Sofa and the random number generator. More...;  ;  ~BaseTest () override;  ; virtual void onSetUp ();  ; virtual void onTearDown ();  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< SReal >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Function details. ◆ compareEigenSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex > . static bool sofa::testing::SparseMatrixTest< TReal >::compareEigenSparseMatrix ; (; const Eigen::SparseMatrix< _AScalar, _AOptions, _AStorageIndex > & ; A, . const Eigen::SparseMatrix< _BScalar, _BOptions, _BStorageIndex > & ; B . ). inlinestatic . ◆ compareSparseMatrix(). template<typename TReal = SReal> . template<typename _AScalar , int _AOptions, typename _AStorageIndex , typename _BScalar , int _BOptions, typename _BStorageIndex >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html:3684,inherit,inherited,3684,api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1testing_1_1_sparse_matrix_test.html,1,['inherit'],['inherited']
Modifiability,", previous name was ExtensionMapping). AuthorFrancois Faure . Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_computeDistance;  ; sofa::core::objectmodel::RenamedData< type::vector< Real > > f_restLengths;  ; Data< bool > d_computeDistance;  if 'computeDistance = true', then rest length of each element equal 0, otherwise rest length is the initial length of each of them More...;  ; Data< type::vector< Real > > d_restLengths;  Rest lengths of the connections. More...;  ; Data< Real > d_showObjectScale;  Scale for object display. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color for object display. (default=[1.0,1.0,0.0,1.0]) More...;  ; SingleLink< DistanceMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::Compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:2035,inherit,inherited,2035,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,2,['inherit'],['inherited']
Modifiability,", size_t index=0);  Change the link's target at the provided index. More...;  . Protected Member Functions; void added (DestPtr val, std::size_t);  ; void removed (DestPtr val, std::size_t);  ; void changed (DestPtr before, DestPtr val);  ;  Protected Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; DestType * getIndex (std::size_t index) const;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseLink; void updateCounter ();  . Additional Inherited Members;  Static Public Attributes inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >; static constexpr unsigned ActiveFlags;  ; static constexpr bool IsStrongLink;  ; static constexpr bool IsMultiLink;  ; static constexpr bool StorePath;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseLink; static bool ParseString (const std::string &text, std::string *path, std::string *data=nullptr, Base *start=nullptr);  ; static std::string CreateString (const std::string &path, const std::string &data="""");  ; static std::string CreateStringPath (Base *object, Base *from);  ; static std::string CreateStringData (BaseData *data);  ; static std::string CreateString (Base *object, Base *from);  ; static std::string CreateString (BaseData *data, Base *from);  ; static std::string CreateString (Base *object, BaseData *data, Base *from);  . Attribute details. ◆ m_validator. template<class TOwnerType , class TDestType , unsigned TFlags> . ValidatorFn sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >::m_validator. protected . Constructor details. ◆ SingleLink() [1/3]. template<class TOwnerType , class TDestType , unsigned TFlags> . sofa::core::objectmodel::SingleLink< TOwnerType, TDestType, TFlags >::SingleLink ; (; ). inline . ◆ SingleLink() [2/3]. template<class TOwnerType , class TDestType , unsigned TFlags> . sofa::core::objectmodel::Sing",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html:5323,inherit,inherited,5323,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,2,['inherit'],['inherited']
Modifiability,", std::ostream *errlog=nullptr);  ; PluginLoadStatus registerPlugin (const std::string &plugin, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, std::ostream *errlog=nullptr);  Register a plugin. Merely an alias for loadPlugin() More...;  ; const std::unordered_set< std::string > & unloadedPlugins () const;  ; bool isPluginUnloaded (const std::string &pluginName) const;  ; void init ();  ; void init (const std::string &pluginPath);  ; void cleanup ();  ; std::string findPlugin (const std::string &pluginName, const std::string &suffix=getDefaultSuffix(), bool ignoreCase=true, bool recursive=true, int maxRecursiveDepth=3);  ; bool pluginIsLoaded (const std::string &plugin);  ; std::pair< std::string, bool > isPluginLoaded (const std::string &plugin);  ; bool checkDuplicatedPlugin (const Plugin &plugin, const std::string &pluginPath);  ; PluginMap & getPluginMap ();  ; Plugin * getPlugin (const std::string &plugin, const std::string &=getDefaultSuffix(), bool=true);  ; Plugin * getPluginByName (const std::string &pluginName);  ; template<typename Entry > ; bool getEntryFromPlugin (const Plugin *plugin, Entry &entry);  ; void readFromIniFile (const std::string &path);  ; void readFromIniFile (const std::string &path, type::vector< std::string > &listLoadedPlugins);  ; void writeToIniFile (const std::string &path);  ; void addOnPluginLoadedCallback (const std::string &key, std::function< void(const std::string &, const Plugin &)> callback);  ; void addOnPluginCleanupCallbacks (const std::string &key, std::function< void()> callback);  ; void removeOnPluginLoadedCallback (const std::string &key);  ; void removeOnPluginCleanupCallbacks (const std::string &key);  . Static Public Member Functions; static PluginManager & getInstance ();  ; static std::string getDefaultSuffix ();  ; static std::string GetPluginNameFromPath (const std::string &pluginPath);  . Friends; std::ostream & operator<< (std::ostream &os, const PluginManager &plugin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:1412,plugin,pluginName,1412,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,11,['plugin'],"['plugin', 'pluginIsLoaded', 'pluginName', 'pluginPath']"
Modifiability,", unsigned int > > p_screenSize;  Viewport size. More...;  ; Data< type::Vec3f > p_cameraPosition;  Camera's position in eye's space. More...;  ; Data< type::Quat< SReal > > p_cameraOrientation;  Camera's orientation. More...;  ; Data< RigidCoord > p_cameraRigid;  Camera's rigid coord. More...;  ; Data< double > p_zNear;  Camera's ZNear. More...;  ; Data< double > p_zFar;  Camera's ZFar. More...;  ; Data< double > p_fovy;  Field of View (Y axis) More...;  ; Data< bool > p_enabled;  Enable visibility of the viewport. More...;  ; Data< bool > p_advancedRendering;  If true, viewport will be hidden if advancedRendering visual flag is not enabled. More...;  ; Data< bool > p_useFBO;  Use a FBO to render the viewport. More...;  ; Data< bool > p_swapMainView;  Swap this viewport with the main view. More...;  ; Data< bool > p_drawCamera;  Draw a frame representing the camera (see it in main viewport) More...;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html:1528,inherit,inherited,1528,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,1,['inherit'],['inherited']
Modifiability,", unsigned int idvar) constsofa::helper::Monomial_LD< Real, N >; operator*(const Real &alpha)sofa::helper::Monomial_LD< Real, N >inline; operator*(const Monomial_LD< Real, N > &a)sofa::helper::Monomial_LD< Real, N >inline; operator*(const FReal &alpha, Monomial_LD< FReal, FN > &r)sofa::helper::Monomial_LD< Real, N >friend; operator*=(const Real &alpha)sofa::helper::Monomial_LD< Real, N >inline; operator*=(const Monomial_LD< Real, N > &b)sofa::helper::Monomial_LD< Real, N >; operator+() constsofa::helper::Monomial_LD< Real, N >inline; operator+(const Monomial_LD< Real, N > &a)sofa::helper::Monomial_LD< Real, N >inline; operator+=(const Monomial_LD< Real, N > &b)sofa::helper::Monomial_LD< Real, N >; operator-() constsofa::helper::Monomial_LD< Real, N >inline; operator-(const Monomial_LD< Real, N > &a)sofa::helper::Monomial_LD< Real, N >inline; operator-=(const Monomial_LD< Real, N > &b)sofa::helper::Monomial_LD< Real, N >; operator/(const Real &alpha)sofa::helper::Monomial_LD< Real, N >inline; operator/=(const Real &alpha)sofa::helper::Monomial_LD< Real, N >inline; operator=(const Monomial_LD< Real, N > &b)sofa::helper::Monomial_LD< Real, N >; operator==(const Monomial_LD< Real, N > &b) constsofa::helper::Monomial_LD< Real, N >; powerssofa::helper::Monomial_LD< Real, N >; readFromStream(std::istream &ff)sofa::helper::Monomial_LD< Real, N >; RNpoint typedefsofa::helper::Monomial_LD< Real, N >; SetCoef(const Real &m_coef)sofa::helper::Monomial_LD< Real, N >inline; SetPower(int numbervar, int powervalue)sofa::helper::Monomial_LD< Real, N >inline; variablessofa::helper::Monomial_LD< Real, N >protected; writeToStream(std::ostream &ff) constsofa::helper::Monomial_LD< Real, N >; x enum valuesofa::helper::Monomial_LD< Real, N >; xy enum valuesofa::helper::Monomial_LD< Real, N >; y enum valuesofa::helper::Monomial_LD< Real, N >; yz enum valuesofa::helper::Monomial_LD< Real, N >; z enum valuesofa::helper::Monomial_LD< Real, N >; zx enum valuesofa::helper::Monomial_LD< Real, N >.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d-members.html:2526,variab,variablessofa,2526,api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_monomial___l_d-members.html,1,['variab'],['variablessofa']
Modifiability,"- Topic Tag: Caribou. /caribou-plugin; . /feed; ; Caribou Plugin – SOFA. SOFA - Topic Tag: Caribou Plugin. /carving; . /feed; ; carving – SOFA. SOFA - Topic Tag: carving. /carving-a-surface-mesh; . /feed; ; Carving a surface mesh – SOFA. SOFA - Topic Tag: Carving a surface mesh. /catheter; . /feed; ; catheter – SOFA. SOFA - Topic Tag: catheter. /catmullromsplinemapping; . /feed; ; CatmullRomSplineMapping – SOFA. SOFA - Topic Tag: CatmullRomSplineMapping. /cavity; . /feed; ; cavity – SOFA. SOFA - Topic Tag: cavity. /c-controller; . /feed; ; C++ Controller – SOFA. SOFA - Topic Tag: C++ Controller. /cg; . /feed; ; cg – SOFA. SOFA - Topic Tag: cg. /cgal; . /feed; ; CGAL – SOFA. SOFA - Topic Tag: CGAL. /cgal4-7; . /feed; ; CGAL4.7 – SOFA. SOFA - Topic Tag: CGAL4.7. /cgal-configuration; . /feed; ; CGAL Configuration – SOFA. SOFA - Topic Tag: CGAL Configuration. /cgalplugin; . /feed; ; CGALplugin – SOFA. SOFA - Topic Tag: CGALplugin. /cgal-plugin; . /feed; ; CGAL plugin – SOFA. SOFA - Topic Tag: CGAL plugin. /chain; . /feed; ; chain – SOFA. SOFA - Topic Tag: chain. /change-control-point-indices; . /feed; ; change control point indices – SOFA. SOFA - Topic Tag: change control point indices. /change-texture; . /feed; ; change texture – SOFA. SOFA - Topic Tag: change texture. /clamp; . /feed; ; clamp – SOFA. SOFA - Topic Tag: clamp. /clang; . /feed; ; Clang – SOFA. SOFA - Topic Tag: Clang. /client; . /feed; ; client – SOFA. SOFA - Topic Tag: client. /cloth; . /feed; ; cloth – SOFA. SOFA - Topic Tag: cloth. /cmake; . /feed; ; cmake – SOFA. SOFA - Topic Tag: cmake. /cmake-3-18-5-20-06-01; . /feed; ; Cmake 3.18.5 20.06.01 – SOFA. SOFA - Topic Tag: Cmake 3.18.5 20.06.01. /cmake-3-19-0; . /feed; ; CMake 3.19.0 – SOFA. SOFA - Topic Tag: CMake 3.19.0. /cmake-build-external-dependency; . /feed; ; CMake build ""external dependency"" – SOFA. SOFA - Topic Tag: CMake build ""external dependency"". /cmake-error; . /feed; ; CMake error – SOFA. SOFA - Topic Tag: CMake error. /cmake-gui; . /feed;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:433328,plugin,plugin,433328,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,- Topic Tag: Plugin_other. /6; ; SOFA - Topic Tag: Plugin_other. SOFA - Topic Tag: Plugin_other. /plugin_pardiso; . /feed; ; Plugin_Pardiso – SOFA. SOFA - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag: Plugin_SoftRobots. /4; ; SOFA - Topic Tag: Plugin_SoftRobots. /5; ; SOFA - Topic Tag: Plugin_SoftRobots. /6; ; SOFA - Topic Tag: Plugin_SoftRobots. /7; ; SOFA - Topic Tag: Plugin_SoftRobots. SOFA - Topic Tag: Plugin_SoftRobots. /plugin-failed; . /feed; ; plugin failed – SOFA. SOFA - Topic Tag: plugin failed. /pluginloadingfailed; . /feed; ; PluginLoadingfailed – SOFA. SOFA - Topic Tag: PluginLoadingfailed. /plugin-not-found; . /feed; ; Plugin not found – SOFA. SOFA - Topic Tag: Plugin not found. /plugin-price; . /feed; ; Plugin price – SOFA. SOFA - Topic Tag: Plugin price. /plugins; . /feed; ; plugins – SOFA. SOFA - Topic Tag: plugins. /plugins-compiling-issues; . /feed; ; plugins; compiling issues – SOFA. SOFA - Topic Tag: plugins; compiling issues. /pneumatic-actuation; . /feed; ; Pneumatic Actuation – SOFA. SOFA - Topic Tag: Pneumatic Actuation. /pneunet; . /feed; ; pneunet – SOFA. SOFA - Topic Tag: pneunet. /point; . /feed; ; point – SOFA. SOFA - Topic Tag: point. /port; . /feed; ; port – SOFA. SOFA - Topic Tag: port. /position; . /feed; ; position – SOFA. SOFA - Topic Tag: position. /preconditioner; . /feed; ; preconditioner – SOFA. SOFA - Topic Tag: preconditioner. /pressure; . /feed; ; pressure – SOFA. SOFA - Topic Tag: pressure. /prestretch; . /feed; ; prestretch – SOFA. SOFA - Topic Tag: prestretch. /problem-configuring-sofa; . /feed; ; Problem configuring SOFA – SOFA. SOFA - Topic Tag: Problem configuring SOFA. /problem-for-beam-mass-simulation; . /feed; ; Problem for beam-mass simulation. – SOFA. SOFA - Topic Tag: Problem for beam-mass simulation. ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:464482,plugin,plugins,464482,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,- Topic: [SOLVED] Deleting Springs via SofaPython3. /dependency-error-when-loading-softrobots-dll; . /feed; ; Dependency error when loading SoftRobots.dll – SOFA. SOFA - Topic: Dependency error when loading SoftRobots.dll. /deprecated-frame-plugin; . /feed; ; [SOLVED] Deprecated Frame plugin ? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /2; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /depth-of-field; ; SOFA - Topic: Depth Of Field. /detailed-document; ; SOFA - Topic: detailed document. /determine-visibility-of-objects-in-the-scene; ; SOFA - Topic: Determine Visibility of Objects in the Scene. /determining-if-the-include-file-pthread-h-exists-failed; ; SOFA - Topic: [SOLVED] Determining if the include file pthread.h exists failed. /develope-a-new-fem-plugin; . /feed; ; [SOLVED] Develop a new FEM plugin – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. /4; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. SOFA - Topic: [SOLVED] Develop a new FEM plugin. /difference-between-master-and-stable-versions; ; SOFA - Topic: [SOLVED] difference between master and stable versions. /differences-between-animationloops; . /feed; ; [SOLVED] Differences between AnimationLoops – SOFA. SOFA - Topic: [SOLVED] Differences between AnimationLoops. /difficulties-compiling-my-own-sofa-plugins-on-windows; ; SOFA - Topic: [SOLVED] Difficulties compiling my own SOFA plugins on Windows. /difficulty-compiling-applications-tutorials; ; SOFA - Topic: [SOLVED] Difficulty compiling applications/tutorials. /diffussion-for-tetrahedral-mesh; . /feed; ; [SOLVED] Diffusion for tetrahedral mesh – SOFA. SOFA - Topic: [SOLVED] Diffusion for tetrahedral mesh. /discover-the-new-release-v20-12; . /feed; ; Discover the new release v20.12! – SOFA. SOFA - Topic: Discover the new release v20.12!. /discover-the-new-release-v21-06; . /feed; ; Discover the new release v21.06! – SOFA. SOFA - Topic: Discover t,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:287963,plugin,plugin,287963,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,- Topic: [SOLVED] Documents of classes and functions. /does-dir-notfound-bad; ; SOFA - Topic: [SOLVED] does DIR-NOTFOUND bad?. /does-sofa-have-intention-of-developing-mobile-application; . /feed; ; [SOLVED] Does Sofa have intention of developing mobile application? – SOFA. SOFA - Topic: [SOLVED] Does Sofa have intention of developing mobile application?. /doubts-about-how-forcefield-and-mapping-interact; ; SOFA - Topic: Doubts about how ForceField and mapping interact. /doubts-complie-sofarobots-and-sofapython3; ; SOFA - Topic: Doubts: Complie SofaRobots and Sofapython3. /do-you-know-robot-sophia; ; SOFA - Topic: Do you know Robot Sophia?. /dropping-a-cell-into-a-nucleus; ; SOFA - Topic: dropping a cell into a nucleus. /duplicated-components-in-xml-export; ; SOFA - Topic: [SOLVED] Duplicated components in xml export. /during_downloading_sources; ; SOFA - Topic: [SOLVED] during_downloading_sources. /during-installation-of-sofa-in-cmke-gui-i-have-got-following-configuration-error; ; SOFA - Topic: During installation of sofa in Cmke-gui I have got following Configuration error. /easiest-way-from-stl-to-vtk; . /embed; ; SOFA - Topic: [SOLVED] Easiest way from STL to VTK. SOFA - Topic: [SOLVED] Easiest way from STL to VTK. /eigen-cmake-error; ; SOFA - Topic: Eigen CMake Error. /elastic-behaviour-and-tetrahedronfemforcefield; . /feed; ; [SOLVED] Elastic behaviour and TetrahedronFEMForceField – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /3; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /6; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /7; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /9; ; SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. SOFA - Topic: [SOLVED] Elastic behaviour and TetrahedronFEMForceField. /elasticity-measurement; ; SOFA - Topic: Elasticity measurement. /elastoplastic-deformation; ; SOFA - Topic: [SOLVED] ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:290477,config,configuration-error,290477,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['config'],['configuration-error']
Modifiability,"- Topic: [SOLVED] Turning off collisions between a set of objects?. /5; ; SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. SOFA - Topic: [SOLVED] Turning off collisions between a set of objects?. /tutorial-example-firststeps-step3-pyscn; ; SOFA - Topic: Tutorial Example FirstSteps (step3.pyscn). /two-way-force-propagation; ; SOFA - Topic: [SOLVED] Two-way force propagation. /ubuntu-14-04-qtcreator; . /feed; ; [SOLVED] Ubuntu 14.04 + QtCreator – SOFA. SOFA - Topic: [SOLVED] Ubuntu 14.04 + QtCreator. /ubuntu-18-sofa-20-kernel-error; ; SOFA - Topic: [SOLVED] Ubuntu 18 – Sofa 20 – Linking CXX Shared Library Errors. /ubuntu-software-center-to-install-sofa; . /feed; ; [SOLVED] Ubuntu Software Center to install SOFA – SOFA. SOFA - Topic: [SOLVED] Ubuntu Software Center to install SOFA. /udk-comment-sont-leves-les-mappable-keys; ; SOFA - Topic: UDK : Comment sont levés les ""Mappable keys"". /unable-to-assign-rest_position-to-mo-in-sofapython3-plugin-in-debug-mode; ; SOFA - Topic: Unable to assign rest_position to MO in SofaPython3 plugin in Debug mode. /unable-to-build-main-cpp-in-sofaphysicsapi; ; SOFA - Topic: Unable to build main.cpp in SofaPhysicsAPI. /unable-to-build-of-sofaguiglut; ; SOFA - Topic: Unable to build of SofaGuiGlut. /unable-to-create-bilateralinteractionconstraint; ; SOFA - Topic: [SOLVED] Unable to create ‘BilateralInteractionConstraint’. /unable-to-link-qt5-dlls-could-not-find-qt-plugin-platform-windows; ; SOFA - Topic: [SOLVED] Unable to link Qt5 dlls: could not find Qt plugin platform ""windows"". /unable-to-load-mesh; ; SOFA - Topic: [SOLVED] Unable to load mesh. /unable-to-load-py-scene-from-softrobot-plugin; ; SOFA - Topic: [SOLVED] Unable to load .py scene from SoftRobot plugin. /unable-to-make-sofa-17-06-no-target-specified; ; SOFA - Topic: [SOLVED] Unable to make Sofa 17.06: No target specified. /undefined-reference-to-boostprogram_optionsabstrac_variables_mapoperator; ; SOFA - Topic: [SOLVED] undefined reference to 'boost::p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:410274,plugin,plugin-in-debug-mode,410274,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],"['plugin', 'plugin-in-debug-mode']"
Modifiability,- Topic: vertexMass cannot be read using SoftPython. /vertices-from-obj-are-moved; ; SOFA - Topic: [SOLVED] Vertices from .obj are moved. /very-basic-doubts; ; SOFA - Topic: [SOLVED] very basic doubts. /video-recording-issue-wrong-path; ; SOFA - Topic: Video Recording Issue – Wrong Path. /viewall-function; . /feed; ; [SOLVED] viewAll() function – SOFA. /page; . /12; ; SOFA - Topic: [SOLVED] viewAll() function. /3; ; SOFA - Topic: [SOLVED] viewAll() function. SOFA - Topic: [SOLVED] viewAll() function. /view-port-via-hdmi-port; . /feed; ; [SOLVED] View Port via HDMI port – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] View Port via HDMI port. /5; ; SOFA - Topic: [SOLVED] View Port via HDMI port. SOFA - Topic: [SOLVED] View Port via HDMI port. /visualisation-of-2d-scenes-in-sofa; . /feed; ; [SOLVED] Visualisation of 2D scenes in SOFA – SOFA. SOFA - Topic: [SOLVED] Visualisation of 2D scenes in SOFA. /visualization-bug-with-a-softrobots-plugin-example; . /feed; ; [SOLVED] Visualization bug with a SoftRobots plugin example – SOFA. SOFA - Topic: [SOLVED] Visualization bug with a SoftRobots plugin example. /visualizing-diagonalcompliance-compliance-plugin; ; SOFA - Topic: [SOLVED] Visualizing DiagonalCompliance (Compliance Plugin). /visualizing-the-difference-between-two-models-as-a-hot-plot; ; SOFA - Topic: [SOLVED] visualizing the difference between two models as a hot plot. /visual-not-updated-using-python; . /feed; ; Visual not updated using python – SOFA. SOFA - Topic: Visual not updated using python. /visual-not-updating-when-using-with-a-glfw-window-imgui; ; SOFA - Topic: Visual not updating when using with a GLFW window (ImGUI). /visual-problem-tutorial-sofa-v-18-06; ; SOFA - Topic: [SOLVED] Visual Problem Tutorial SOFA v.18.06. /visual-studio-cant-work-with-more-than-260-character-length-variables; ; SOFA - Topic: visual studio cant work with more than 260 character-length variables. /volume-of-element; ; SOFA - Topic: Volume of element. /volumetric-mesh-generation-e,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:417365,plugin,plugin,417365,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"-1 . Public Member Functions;  SOFA_CLASS (InvertTransformMatrixEngine, AbstractTransformMatrixEngine);  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:1497,inherit,inherited,1497,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,"-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MergeROIs, DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input fr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html:2586,inherit,inherited,2586,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,1,['inherit'],['inherited']
Modifiability,"-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(Indices2ValuesMapper, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html:2783,inherit,inherited,2783,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,1,['inherit'],['inherited']
Modifiability,"-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< sofa::type::vector< HexahedronInformation > > hexahedronInfo;  ; Data< std::string > d_method;  ""large"" or ""polar"" displacements More...;  ; core::topology::HexahedronData< sofa::type::vector< HexahedronInformation > > d_hexahedronInfo;  container that stotes all requires information for each hexahedron More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:26811,inherit,inherited,26811,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,2,['inherit'],['inherited']
Modifiability,"-2\beta) a_t ) $ $ ( (1 + h \gamma r_M) M + (h^2 \beta + h \gamma r_K) K ) a_{t+h} = a_t - (r_M M + r_K K) ( h (1-\gamma) a_t ) - K ( h v_t + h^2/2 (1-2\beta) a_t ) $; The current implementation first computes $a_t$ directly (as in the explicit solvers), then solves the previous system to compute $a_{t+dt}$, and finally computes the new position and velocity. . Public Attributes; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass. More...;  ; Data< SReal > d_velocityDamping;  Velocity decay coefficient (no decay if null) More...;  ; Data< SReal > d_gamma;  Newmark scheme gamma coefficient. More...;  ; Data< SReal > d_beta;  Newmark scheme beta coefficient. More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; unsigned int cpt;  ; sofa::core::MultiVecDerivId pID;  ;  Protected At",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:2354,inherit,inherited,2354,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['inherit'],['inherited']
Modifiability,"-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectResponse(). void sofa::component::odesolver::forward::EulerExplicitSolver::projectResponse ; (; sofa::simulation::common::MechanicalOperations * ; mop, . core::MultiVecDerivId ; vecId . ). staticprotected . Apply projective constraints, such as FixedProjectiveConstraint. . ◆ SOFA_CLASS(). sofa::component::odesolver::forward::EulerExplicitSolver::SOFA_CLASS ; (; EulerExplicitSolver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::EulerExplicitSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. ◆ solveConstraints(). void sofa::component::odesolver::forward::EulerExplicitSolver::solveConstraints ; (; sofa::simulation::common::MechanicalOperations * ; mop, . core::MultiVecDerivId ; acc . ). staticprotected . ◆ solveSystem(). void sofa::component::odesolver::forward::EulerExplicitSolver::solveSystem ; (; core::MultiVecDerivId ; solution, . core::MultiVecDerivId ; rhs . ); const. protected . ◆ updateState(). void sofa::component::odesolver::forward::EulerExplicitSolver::updateState ; (; sofa::simulation::common::VectorOperations * ; vop, . sofa::simulation::common::MechanicalOperations * ; mop, . sofa::core::MultiVecCoordId ; xResult, . sofa::core::MultiVecDerivId ; vResult, . const sofa::core::behavior::MultiVecDeriv & ; acc, . SReal ; dt . ); const. protected . Update state variable (new position and velocity) based on the computed acceleration The update takes constraints into account . sofacomponentodesolverforwardEulerExplicitSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:21417,variab,variable,21417,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['variab'],['variable']
Modifiability,-failed-vs2013; . /feed; ; [SOLVED] SOFA build failed VS2013 – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] SOFA build failed VS2013. /11; ; SOFA - Topic: [SOLVED] SOFA build failed VS2013. /3; ; SOFA - Topic: [SOLVED] SOFA build failed VS2013. SOFA - Topic: [SOLVED] SOFA build failed VS2013. /sofa-build-on-macos; ; SOFA - Topic: SOFA build on MacOS. /sofa-build-on-macos-2; ; SOFA - Topic: [SOLVED] SOFA build on MacOS && Fail to build libSofaGuiQt.dylib. /sofa-builds-and-runs-on-windows-subsystem-for-linux-yay; ; SOFA - Topic: SOFA builds and runs on Windows Subsystem for Linux (yay!). /sofa-cannot-be-executed-modelerrunsofa; . /feed; ; [SOLVED] Cannot be executed Modeler&runSofa – SOFA. SOFA - Topic: [SOLVED] Cannot be executed Modeler&runSofa. /sofacarving-and-visual-models; ; SOFA - Topic: [SOLVED] SofaCarving and visual models. /sofacarving-in-details; ; SOFA - Topic: Sofacarving in details?. /sofacarving-plugin; ; SOFA - Topic: SofaCarving Plugin. /sofa-carving-plugin; ; SOFA - Topic: [SOLVED] SOFA Carving Plugin. /sofa-compiler; . /feed; ; [SOLVED] Sofa compiler (VS2013) – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Sofa compiler (VS2013). /2; ; SOFA - Topic: [SOLVED] Sofa compiler (VS2013). /3; ; SOFA - Topic: [SOLVED] Sofa compiler (VS2013). SOFA - Topic: [SOLVED] Sofa compiler (VS2013). /sofa-compiling-problem; ; SOFA - Topic: [SOLVED] SOFA compiling problem. /sofa-crash; . /feed; ; [SOLVED] SOFA CRASH: Modeler exception – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] SOFA CRASH: Modeler exception. /3; ; SOFA - Topic: [SOLVED] SOFA CRASH: Modeler exception. /8; ; SOFA - Topic: [SOLVED] SOFA CRASH: Modeler exception. SOFA - Topic: [SOLVED] SOFA CRASH: Modeler exception. /sofa-crash-2; ; SOFA - Topic: [SOLVED] sofa crash. /sofa-crush-while-loading-large-model-file; ; SOFA - Topic: SOFA crush while loading large model file. /sofacuda-mesh-cutting; ; SOFA - Topic: SofaCUDA mesh cutting.. /sofa-day-2017-registration-open; . /feed; ; SOFA Day 2017: registration op,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:389996,plugin,plugin,389996,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"-read-a-data; ; SOFA - Topic: [SOLVED] Initialize and read a data. /initialize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] installing SOFA on mac OSX – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] installing SOFA on mac OSX. SOFA - Topic: [SOLVED] installing SOFA on mac OSX. /installing-v17-12-from-dmg-package-on-mac-os; ; SOFA - Topic: [SOLVED] Installing v17.12 from DMG package on Mac OS. /install-wants-administrative-privileges; ; SOFA - Topic: [SOLVED] Install wants administrative privileges. /interaction-with-geomagic-touch-using-sofapython3; ; SOFA - Topic: Interaction with Geomagic Touch using SofaPython3. /interactiverecorded-camera; . /feed; ; [SOLVED] Interactive/Recorded Camera – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. /4; ; SOFA - Topic: [SOLVED] Interactive/Recorded Camera. SOFA - Topic: [SOLVED] Interactive/Recorded Camera. /interactive-training-system-for-interventional-electrocardiology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:334690,plugin,plugin,334690,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,-softrobots-inverse-plugin; ; SOFA - Topic: [SOLVED] Problems with SoftRobots.Inverse plugin. /problems-with-working-in-windows-in-developing-a-code; . /feed; ; [SOLVED] Problems with working in windows in developing a code – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Problems with working in windows in developing a code. /4; ; SOFA - Topic: [SOLVED] Problems with working in windows in developing a code. SOFA - Topic: [SOLVED] Problems with working in windows in developing a code. /problem-when-running-softrobots-python-script-sofa-v18-12-on-ubuntu-16-04; ; SOFA - Topic: Problem when running SoftRobots python script (SOFA v18.12 on Ubuntu 16.04). /problem-when-running-softrobots-tutorial; ; SOFA - Topic: [SOLVED] Problem when running SoftRobots tutorial. /problem-while-opening-the-sensable-example; ; SOFA - Topic: Problem while opening the sensable example- SOFA crashes while opening example. /problem-while-running-the-sensable-plugin-examples; . /feed; ; [SOLVED] Problem while running the sensable plugin examples – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Problem while running the sensable plugin examples. SOFA - Topic: [SOLVED] Problem while running the sensable plugin examples. /problem-with-articulatedsystemmapping-scn; ; SOFA - Topic: [SOLVED] Problem with ArticulatedSystemMapping.scn. /problem-with-boost-in-cmake; ; SOFA - Topic: [SOLVED] Problem with Boost in CMake. /problem-with-carving-on-rigid-tissues; ; SOFA - Topic: [SOLVED] Problem with carving on rigid tissues. /problem-with-identifying-the-initial-coordination-and-carving; ; SOFA - Topic: [SOLVED] Problem with identifying the initial coordination and carving. /problem-with-import-sofacaribou; ; SOFA - Topic: [SOLVED] Problem with import SofaCaribou. /problem-with-linearmovementconstraint; ; SOFA - Topic: [SOLVED] Problem with LinearMovementConstraint. /problem-with-scene-in-modeler; . /feed; ; [SOLVED] Problem with scene in Modeler – SOFA. SOFA - Topic: [SOLVED] Problem with scene in Modeler. /pro,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:368449,plugin,plugin,368449,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,"-stl-file-via-rigidobjects; ; SOFA - Topic: [SOLVED] Importing STL file via RigidObjects. /import-or-include-an-xml-file-in-another; ; SOFA - Topic: [SOLVED] import or include an xml file in another. /import-plugin-in-cpp; ; SOFA - Topic: [SOLVED] Import plugin in cpp. /import-urdf-models; ; SOFA - Topic: Import urdf models. /imposing-velocity-and-position; ; SOFA - Topic: Imposing velocity and position. /incise-without-mouse; ; SOFA - Topic: [SOLVED] Incise without mouse. /indices-of-roi-in-python-scene; ; SOFA - Topic: [SOLVED] indices of ROI in python scene. /informations-about-the-calculated-actuation-forces; ; SOFA - Topic: Informations about the calculated actuation forces. /init-and-cleanup-methods-in-simulation-tree; ; SOFA - Topic: [SOLVED] init and cleanup methods in simulation tree. /initialize-and-read-a-data; ; SOFA - Topic: [SOLVED] Initialize and read a data. /initialize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] insta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:333869,plugin,plugins,333869,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['plugin'],['plugins']
Modifiability,". #include <InciseAlongPathPerformer.h>. Inheritance diagram for sofa::gui::component::performer::InciseAlongPathPerformer:. [legend]. Protected Attributes; TopologicalChangeManager topologyChangeManager;  ; BodyPicked startBody;  ; BodyPicked firstBody;  ; BodyPicked secondBody;  ; BodyPicked firstIncisionBody;  ; int cpt;  ; bool fullcut;  ; unsigned int initialNbTriangles;  ; unsigned int initialNbPoints;  ;  Protected Attributes inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; int currentMethod;  ; int snapingBorderValue;  ; int snapingValue;  ; bool finishIncision;  ; bool keepPoint;  . Public Member Functions;  InciseAlongPathPerformer (BaseMouseInteractor *i);  ;  ~InciseAlongPathPerformer () override;  ; void start () override;  ; void execute () override;  ; void draw (const core::visual::VisualParams *vparams) override;  ; BodyPicked & getFirstIncisionBodyPicked ();  ; BodyPicked & getLastBodyPicked ();  ; void setPerformerFreeze () override;  ;  Public Member Functions inherited from sofa::gui::component::performer::InteractionPerformer;  InteractionPerformer (BaseMouseInteractor *i);  ; virtual ~InteractionPerformer ();  ; virtual void configure (sofa::component::setting::MouseButtonSetting *);  ; virtual void handleEvent (core::objectmodel::Event *);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", interactor, m_interactor);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", freezePerformer, m_freezePerformer);  ;  Public Member Functions inherited from sofa::gui::component::performer::InciseAlongPathPerformerConfiguration; void setIncisionMethod (int m);  ; void setSnapingBorderValue (int m);  ; void setSnapingValue (int m);  ; void setCompleteIncision (bool m);  ; void setKeepPoint (bool m);  . Protected Member Functions; void PerformCompleteIncision ();  Incision will be performed between firstIncisionBody (first point clicked) and firstBody (last point clicked in memory) More...;  . Additional Inhe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html:1372,inherit,inherited,1372,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_incise_along_path_performer.html,2,"['config', 'inherit']","['configure', 'inherited']"
Modifiability,". #include <ProjectiveConstraintSet.h>; Component computing constraints within a simulated body. ; More... Inheritance diagram for sofa::core::behavior::ProjectiveConstraintSet< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Component computing constraints within a simulated body. ; This class define the abstract API common to constraints using a given type of DOFs. A ProjectiveConstraintSet computes constraints applied to one simulated body given its current position and velocity. . Public Attributes; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html:1316,inherit,inherited,1316,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,". #include <TopologyBoundingTrasher.h>. Inheritance diagram for sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::utility::TopologyBoundingTrasher< DataTypes >; Read file containing topological modification. Or apply input modifications A timestep has to be established for each modification. . Public Attributes; Data< VecCoord > d_positions;  position coordinates of the topology object to interact with. More...;  ; Data< Vec6 > d_borders;  List of boxes defined by xmin,ymin,zmin, xmax,ymax,zmax. More...;  ; Data< bool > d_drawBox;  Draw bounding box (default = false) More...;  ; SingleLink< TopologyBoundingTrasher, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology::SPtr m_topology;  ; sofa::geometry::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html:1387,inherit,inherited,1387,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,1,['inherit'],['inherited']
Modifiability,". . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::playback::WriteStateActivator Class Reference . #include <WriteState.h>. Inheritance diagram for sofa::component::playback::WriteStateActivator:. [legend]. Protected Attributes; bool state;  ;  Protected Attributes inherited from sofa::simulation::Visitor; const sofa::core::ExecParams * params;  . Public Member Functions;  WriteStateActivator (const core::ExecParams *params, bool active);  ; Result processNodeTopDown (simulation::Node *) override;  Callback method called when descending to a new node. Recursion will stop if this method returns RESULT_PRUNE. More...;  ; bool getState () const;  ; void setState (bool active);  ; const char * getClassName () const override;  ;  Public Member Functions inherited from sofa::simulation::Visitor;  Visitor (const sofa::core::ExecParams *params);  ; virtual ~Visitor ();  ; const sofa::core::ExecParams * execParams () const;  ; virtual void processNodeBottomUp (simulation::Node *);  Callback method called after child node have been processed and before going back to the parent node. More...;  ; virtual bool childOrderReversed (simulation::Node *);  Return true to reverse the order of traversal of child nodes. More...;  ; virtual bool treeTraversal (TreeTraversalRepetition &repeat);  ; virtual const char * getCategoryName () const;  ; virtual std::string getInfos () const;  ; bool testTags (sofa::core::objectmodel::BaseObject *obj);  ; virtual void execute (sofa::core::objectmodel::BaseContext *node, bool precomputedOrder=false);  Alias for context->executeVisitor(this) More...;  ; virtual ctime_t begin (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, const std::string &typeInfo=std::string(""type""));  ; virtual void end (simulation::Node *node, sofa::core::objectmodel::BaseObject *obj, ctime_t t0);  ; virtual ctime_t ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_activator.html:979,inherit,inherited,979,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_activator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state_activator.html,1,['inherit'],['inherited']
Modifiability,". . ◆ f_orientations. template<class DataTypes > . Data<type::vector<Quat> > sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::f_orientations. Orientations (Quaternion) . ◆ f_positions. template<class DataTypes > . Data<type::vector<Vec3 > > sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::f_positions. Positions (Vector of 3) . ◆ f_rigids. template<class DataTypes > . Data<type::vector<RigidVec3> > sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::f_rigids. Rigid (Position + Orientation) . Constructor details. ◆ QuatToRigidEngine(). template<class DataTypes > . sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::QuatToRigidEngine. protected . ◆ ~QuatToRigidEngine(). template<class DataTypes > . sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::~QuatToRigidEngine. overrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit(). template<class DataTypes > . void sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::transform::QuatToRigidEngine< DataTypes >::SOFA_CLASS ; (; QuatToRigidEngine< DataTypes > ; , . sofa::core::DataEngine ;  . ). sofacomponentenginetransformQuatToRigidEngine; Generated on Mon Nov 11 2024 02:44:55 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html:18248,variab,variables,18248,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_quat_to_rigid_engine.html,1,['variab'],['variables']
Modifiability,. /constraint-on-collision-model-points; ; SOFA - Topic: Constraint on collision model points. /constraint-tutorial-scene-crash; . /feed; ; [SOLVED] Constraint Tutorial scene crash – SOFA. SOFA - Topic: [SOLVED] Constraint Tutorial scene crash. /contactlistener-error-on-sofapython3; ; SOFA - Topic: [SOLVED] ContactListener error on SofaPython3. /continuous-collision-detection; ; SOFA - Topic: Continuous collision detection. /continuously-grid-topology; ; SOFA - Topic: [SOLVED] Continuously Grid Topology. /continuous-rotation-of-view-by-mouse-click-and-move; ; SOFA - Topic: [SOLVED] Continuous rotation of view by mouse click and move. /contributing-to-sofa; ; SOFA - Topic: [SOLVED] Contributing to SOFA. /contributor-list-updated; ; SOFA - Topic: Contributor list updated!. /control-actuators-and-receive-sensor-variables-of-scene-scn; ; SOFA - Topic: Control actuators and receive sensor variables of scene .scn. /control-actuators-and-receive-sensor-variables-of-scene-scn-legged-robot; ; SOFA - Topic: [SOLVED] Control actuators and receive sensor variables of scene .scn Legged Robot. /converting-the-stl-mesh-to-vtk-mesh; ; SOFA - Topic: [SOLVED] Converting the STL mesh to VTK mesh. /could-not-find-git-for-clone-of-sofapython3; ; SOFA - Topic: [SOLVED] could not find git for clone of SofaPython3. /could-not-read-value-for-data-field-position-and-segfault; ; SOFA - Topic: [SOLVED] “Could not read value for data field position” and segfault. /could-sofa-use-full-python-instead-of-being-embedded-in-xml-file-using-component; . /feed; ; [SOLVED] Could sofa use full Python instead of being embedded in XML file using component – SOFA. SOFA - Topic: [SOLVED] Could sofa use full Python instead of being embedded in XML file using component. /could-you-explain-the-difference-between-geomaigc-and-sensible-plugin; . /feed; ; [SOLVED] Could you explain the difference between Geomaigc and sensible plugin? – SOFA. SOFA - Topic: [SOLVED] Could you explain the difference between Geomaigc ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:281510,variab,variables-of-scene-scn-legged-robot,281510,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['variab'],"['variables', 'variables-of-scene-scn-legged-robot']"
Modifiability,. /feed; ; Plugin_other – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_other. /3; ; SOFA - Topic Tag: Plugin_other. /4; ; SOFA - Topic Tag: Plugin_other. /5; ; SOFA - Topic Tag: Plugin_other. /6; ; SOFA - Topic Tag: Plugin_other. SOFA - Topic Tag: Plugin_other. /plugin_pardiso; . /feed; ; Plugin_Pardiso – SOFA. SOFA - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag: Plugin_SoftRobots. /4; ; SOFA - Topic Tag: Plugin_SoftRobots. /5; ; SOFA - Topic Tag: Plugin_SoftRobots. /6; ; SOFA - Topic Tag: Plugin_SoftRobots. /7; ; SOFA - Topic Tag: Plugin_SoftRobots. SOFA - Topic Tag: Plugin_SoftRobots. /plugin-failed; . /feed; ; plugin failed – SOFA. SOFA - Topic Tag: plugin failed. /pluginloadingfailed; . /feed; ; PluginLoadingfailed – SOFA. SOFA - Topic Tag: PluginLoadingfailed. /plugin-not-found; . /feed; ; Plugin not found – SOFA. SOFA - Topic Tag: Plugin not found. /plugin-price; . /feed; ; Plugin price – SOFA. SOFA - Topic Tag: Plugin price. /plugins; . /feed; ; plugins – SOFA. SOFA - Topic Tag: plugins. /plugins-compiling-issues; . /feed; ; plugins; compiling issues – SOFA. SOFA - Topic Tag: plugins; compiling issues. /pneumatic-actuation; . /feed; ; Pneumatic Actuation – SOFA. SOFA - Topic Tag: Pneumatic Actuation. /pneunet; . /feed; ; pneunet – SOFA. SOFA - Topic Tag: pneunet. /point; . /feed; ; point – SOFA. SOFA - Topic Tag: point. /port; . /feed; ; port – SOFA. SOFA - Topic Tag: port. /position; . /feed; ; position – SOFA. SOFA - Topic Tag: position. /preconditioner; . /feed; ; preconditioner – SOFA. SOFA - Topic Tag: preconditioner. /pressure; . /feed; ; pressure – SOFA. SOFA - Topic Tag: pressure. /prestretch; . /feed; ; prestretch – SOFA. SOFA - Topic Tag: prestretch. /problem-configuring-sofa; . /feed; ; Problem configuring SOFA – SOFA. SOFA - Topic Tag: P,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:464312,plugin,plugin-not-found,464312,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin-not-found']
Modifiability,". /narrow-phases; ; SOFA - Topic: Narrow phases ?. /natural-vibration-problem-using-a-cantilever-beam; ; SOFA - Topic: Natural vibration problem using a cantilever beam. /navigation-recorded-camera; ; SOFA - Topic: Navigation Recorded Camera. /navigationrecordedcamera-scn-not-working; ; SOFA - Topic: [SOLVED] NavigationRecordedCamera.scn not working ?. /ncremental-iterative-nonlinear-fea-with-deformation-dependent-loads; ; SOFA - Topic: Incremental-Iterative Nonlinear FEA with deformation-dependent loads. /need-help-with-the-rigidify-function-from-stlib-physics-mixedmaterial; ; SOFA - Topic: Need Help With the Rigidify function from stlib.physics.mixedmaterial. /needle-insertion-into-soft-tissue; ; SOFA - Topic: [SOLVED] Needle Insertion into Soft Tissue. /needle-insertion-simulation; ; SOFA - Topic: Needle Insertion Simulation. /needle-insertion-simulation-problem; ; SOFA - Topic: Needle insertion simulation problem. /need-very-old-version-of-sofa-to-use-flexible-plugin; ; SOFA - Topic: [SOLVED] Need (very) old version of SOFA to use ""Flexible"" plugin. /new-api-documentation; ; SOFA - Topic: New API documentation. /new-approaches-to-catheter-navigation-for-interventional-radiology-simulation; ; SOFA - Topic: New approaches to catheter navigation for interventional radiology simulation. /new-build-system; . /page; . /4; ; SOFA - Topic: New build system. SOFA - Topic: New build system. /new-forum-format; . /feed; ; New forum format! – SOFA. SOFA - Topic: New forum format!. /new-mouse-interaction; . /feed; ; [SOLVED] New Mouse Interaction – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] New Mouse Interaction. /4; ; SOFA - Topic: [SOLVED] New Mouse Interaction. SOFA - Topic: [SOLVED] New Mouse Interaction. /newomnidriver-gnode-cannot-access-protected-member; . /embed; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /page; . /3; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /4; ; SOFA - Topic: [SOLVED] NewOmniD",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:353416,flexible,flexible-plugin,353416,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,"['flexible', 'plugin']","['flexible-plugin', 'plugin']"
Modifiability,. /parameter; . /feed; ; parameter – SOFA. SOFA - Topic Tag: parameter. /parameters; . /feed; ; parameters – SOFA. SOFA - Topic Tag: parameters. /paraview; . /feed; ; Paraview – SOFA. SOFA - Topic Tag: Paraview. /partiallinearmovementconstraint; . /feed; ; PartialLinearMovementConstraint – SOFA. SOFA - Topic Tag: PartialLinearMovementConstraint. /path; . /feed; ; path – SOFA. SOFA - Topic Tag: path. /pauseanimation-solver-event; . /feed; ; PauseAnimation; Solver; Event – SOFA. SOFA - Topic Tag: PauseAnimation; Solver; Event. /penetration; . /feed; ; penetration – SOFA. SOFA - Topic Tag: penetration. /persisting-contact; . /feed; ; persisting contact – SOFA. SOFA - Topic Tag: persisting contact. /phantom; . /feed; ; phantom – SOFA. SOFA - Topic Tag: phantom. /physical-acceleration; . /feed; ; physical acceleration – SOFA. SOFA - Topic Tag: physical acceleration. /plastic; . /feed; ; Plastic – SOFA. SOFA - Topic Tag: Plastic. /plots; . /feed; ; plots – SOFA. SOFA - Topic Tag: plots. /plugin; . /feed; ; plugin – SOFA. SOFA - Topic Tag: plugin. /plugin_cuda; . /feed; ; Plugin_CUDA – SOFA. SOFA - Topic Tag: Plugin_CUDA. /plugin_geomagic; . /feed; ; Plugin_Geomagic – SOFA. SOFA - Topic Tag: Plugin_Geomagic. /plugin_image; . /feed; ; Plugin_Image – SOFA. SOFA - Topic Tag: Plugin_Image. /plugin_multithreading; . /feed; ; Plugin_Multithreading – SOFA. SOFA - Topic Tag: Plugin_Multithreading. /plugin_other; . /feed; ; Plugin_other – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_other. /3; ; SOFA - Topic Tag: Plugin_other. /4; ; SOFA - Topic Tag: Plugin_other. /5; ; SOFA - Topic Tag: Plugin_other. /6; ; SOFA - Topic Tag: Plugin_other. SOFA - Topic Tag: Plugin_other. /plugin_pardiso; . /feed; ; Plugin_Pardiso – SOFA. SOFA - Topic Tag: Plugin_Pardiso. /plugin_registration; . /feed; ; Plugin_Registration – SOFA. SOFA - Topic Tag: Plugin_Registration. /plugin_softrobots; . /feed; ; Plugin_SoftRobots – SOFA. /page; . /2; ; SOFA - Topic Tag: Plugin_SoftRobots. /3; ; SOFA - Topic Tag:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:462896,plugin,plugin,462896,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
Modifiability,". Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html:12375,inherit,inherited,12375,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,". Data<unsigned> sofa::component::engine::analyze::AverageCoord< DataTypes >::d_vecId. index of the vector (default value corresponds to core::VecCoordId::position() ) . Constructor details. ◆ AverageCoord(). template<class DataTypes > . sofa::component::engine::analyze::AverageCoord< DataTypes >::AverageCoord. protected . ◆ ~AverageCoord(). template<class DataTypes > . sofa::component::engine::analyze::AverageCoord< DataTypes >::~AverageCoord ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::analyze::AverageCoord< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ handleEvent(). template<class DataTypes > . void sofa::component::engine::analyze::AverageCoord< DataTypes >::handleEvent ; (; core::objectmodel::Event * ; ). overridevirtual . Handle an event. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::engine::analyze::AverageCoord< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ onBeginAnimationStep(). template<class DataTypes > . void sofa::component::engine::analyze::AverageCoord< DataTypes >::onBeginAnimationStep ; (; const double ; dt). ◆ reinit(). template<class DataTypes > . void sofa::component::engine::analyze::AverageCoord< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). template<class DataTypes > . sofa::component::engine::analyze::AverageCoord< DataTypes >::SOFA_CLASS ; (; SOFA_TEMPLATE(AverageCoord< DataTypes >, DataTypes) ; , . core::DataEngine ;  . ). sofacomponentengineanalyzeAverageCoord; Generated on Mon Nov 11 2024 02:38:15 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:19942,variab,variables,19942,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['variab'],['variables']
Modifiability,". More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:2339,inherit,inherited,2339,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['inherit'],['inherited']
Modifiability,". More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecCoord directions;  ; helper::TriangleOctreeRoot trianglesOctree;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(RandomPointDistributionInSurface, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:2836,inherit,inherited,2836,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,4,['inherit'],['inherited']
Modifiability,". More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SelectLabelROI, _T), DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html:2348,variab,variables,2348,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,1,['variab'],['variables']
Modifiability,". More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const DataTypes &v);  ; virtual void pushValue ()=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdateVisual (const core::visual::VisualParams *) override;  ; ShaderElementType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; const core::objectmodel::BaseData * getSEValue () const override;  ; core::objectmodel::BaseData * getSEValue () override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:2538,variab,variables,2538,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,1,['variab'],['variables']
Modifiability,". More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; BaseVTKReader * reader;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (MeshVTKLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init () override;  Initialization method called at graph creation and modificat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:5381,inherit,inherited,5381,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,2,['inherit'],['inherited']
Modifiability,". More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  AddFrameButtonSetting ();  ;  Protected Member Functions inherited from sofa::component::setting::MouseButtonSetting;  MouseButtonSetting ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  ConfigurationSetting ();  Default constructor. More...;  ;  ~ConfigurationSetting () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:9727,inherit,inherited,9727,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,1,['inherit'],['inherited']
Modifiability,. More...;  ; virtual void createEdgesInQuadArray ();  Creates the array of edge indices for each quad. More...;  ; virtual void createQuadsAroundVertexArray ();  Creates the QuadsAroundVertex Array. More...;  ; virtual void createQuadsAroundEdgeArray ();  Creates the quadsAroundEdge Array. More...;  ; void clearQuads ();  ; void clearEdgesInQuad ();  ; void clearQuadsAroundVertex ();  ; void clearQuadsAroundEdge ();  ; virtual QuadsAroundVertex & getQuadsAroundVertexForModification (const PointID vertexIndex);  Returns a non-const list of quad indices around a given DOF for subsequent modification. More...;  ; virtual QuadsAroundEdge & getQuadsAroundEdgeForModification (const EdgeID edgeIndex);  Returns a non-const list of quad indices around a given edge for subsequent modification. More...;  ; void setQuadTopologyToDirty ();  ; void cleanQuadTopologyFromDirty ();  ; const bool & isQuadTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const PointID i);  Returns a non-const list of Edge indices around the ith DOF for subsequent modification. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  PointSetTopologyContainer (Size nPoints=0);  ;  ~PointSetTopologyContainer () override=default;  ; void setPointTopologyToDirty ();  ; void cleanPointTopologyFromDirty ();  ; const bool & isPointTopologyDirty () const;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyContainer;  Topology,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:39250,inherit,inherited,39250,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,4,['inherit'],['inherited']
Modifiability,". More...;  ; virtual void projectVelocity (const MechanicalParams *, DataVecDeriv &v1, DataVecDeriv &v2)=0;  Project v to constrained space (v models a velocity). More...;  ; virtual void projectPosition (const MechanicalParams *, DataVecCoord &x1, DataVecCoord &x2)=0;  Project x to constrained space (x models a position). More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseInteractionProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseInteractionProjectiveConstraintSet, BaseProjectiveConstraintSet);  ; virtual BaseMechanicalState * getMechModel1 ();  ; virtual BaseMechanicalState * getMechModel2 ();  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ; virtual void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html:4200,inherit,inherited,4200,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,1,['inherit'],['inherited']
Modifiability,". More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::haptics::ForceFeedback; Data< bool > d_activate;  boolean to activate or deactivate the forcefeedback More...;  ; Data< int > d_indice;  Tool indice in the OmniDriver. More...;  ; simulation::Node * context;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:9965,inherit,inherited,9965,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,2,['inherit'],['inherited']
Modifiability,". More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TopologyBoundingTrasher ();  ;  ~TopologyBoundingTrasher () override;  ; void filterElementsToRemove ();  ; void removeElements ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html:12423,inherit,inherited,12423,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,1,['inherit'],['inherited']
Modifiability,". More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; bool inROI (const PointID &index) const;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called af",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html:3296,inherit,inherited,3296,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_boundary_r_o_i.html,1,['inherit'],['inherited']
Modifiability,". More...;  ; void setQuadTopologyToDirty ();  ; void cleanQuadTopologyFromDirty ();  ; const bool & isQuadTopologyDirty ();  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer;  EdgeSetTopologyContainer ();  ;  ~EdgeSetTopologyContainer () override;  ; virtual void createEdgesAroundVertexArray ();  Creates the EdgesAroundVertex array. More...;  ; void clearEdges ();  ; void clearEdgesAroundVertex ();  ; void setEdgeTopologyToDirty ();  ; void cleanEdgeTopologyFromDirty ();  ; const bool & isEdgeTopologyDirty ();  ; virtual EdgesAroundVertex & getEdgesAroundVertexForModification (const PointID i);  Returns a non-const list of Edge indices around the ith DOF for subsequent modification. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer;  PointSetTopologyContainer (Size nPoints=0);  ;  ~PointSetTopologyContainer () override=default;  ; void setPointTopologyToDirty ();  ; void cleanPointTopologyFromDirty ();  ; const bool & isPointTopologyDirty () const;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyContainer;  TopologyContainer ();  Constructor. More...;  ;  ~TopologyContainer () override;  Destructor. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:39895,inherit,inherited,39895,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,8,['inherit'],['inherited']
Modifiability,". Open source framework for multi-physics simuation. Classes |; Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes > Class Template Reference . #include <StandardTetrahedralFEMForceField.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::StandardTetrahedralFEMForceField< DataTypes >; Compute Finite Element forces based on tetrahedral elements. . Classes; class  EdgeInformation;  data structure stored for each edge More...;  ; class  TetrahedronRestInformation;  data structure stored for each tetrahedron More...;  . Public Attributes; material::MaterialParameters< DataTypes > globalParameters;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html:1143,inherit,inherited,1143,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,1,['inherit'],['inherited']
Modifiability,". Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes > Class Template Reference . #include <QuadSetGeometryAlgorithms.h>. Inheritance diagram for sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >; A class that provides geometry information on an QuadSet. . Protected Attributes; Data< bool > showQuadIndices;  Debug : view Quad indices. More...;  ; Data< bool > _drawQuads;  if true, draw the quads in the topology More...;  ; Data< sofa::type::RGBAColor > _drawColor;  RGB code color used to draw quads. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >; bool initializedEdgeCubatureTables;  ; Data< bool > showEdgeIndices;  Debug : view Edge indices. More...;  ; Data< bool > d_drawEdges;  if true, draw the edges in the topology. More...;  ; Data< RGBAColor > _drawColor;  ; NumericalIntegrationDescriptor< Real, 1 > edgeNumericalIntegration;  include cubature points More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; sofa::core::State< DataTypes > * object;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; Data< float > d_showIndicesScale;  Debug : scale for view topology indices. More...;  ; Data< bool > d_showPointIndices;  ; Data< std::string > d_tagMechanics;  Tage of the Mechanical State associated with the vertex position. More...;  ; SingleLink< PointSetGeometryAlgorithms< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html:1061,inherit,inherited,1061,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,1,['inherit'],['inherited']
Modifiability,". Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::gl::component::shader::OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:1017,inherit,inherited,1017,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,1,['inherit'],['inherited']
Modifiability,". Open source framework for multi-physics simuation. Static Public Member Functions |; List of all members . sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > > Struct Template Reference . #include <TypeInfo_Vector.h>. Inheritance diagram for sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >:. [legend]. Static Public Member Functions; static sofa::Size size ();  ; static sofa::Size size (const sofa::type::vector< std::string, Alloc > &data);  ; static bool setSize (sofa::type::vector< std::string, Alloc > &data, sofa::Size size);  ; static void setValueString (sofa::type::vector< std::string, Alloc > &data, sofa::Index index, const std::string &value);  ; static void getValueString (const sofa::type::vector< std::string, Alloc > &data, sofa::Index index, std::string &value);  ;  Static Public Member Functions inherited from sofa::defaulttype::VectorTypeInfo< sofa::type::vector< std::string, Alloc > >; static std::string name ();  ; static std::string GetTypeName ();  ; static sofa::Size size ();  ; static sofa::Size size (const DataType &data);  ; static sofa::Size byteSize ();  ; static bool setSize (DataType &data, sofa::Size size);  ; static void getValue (const DataType &data, sofa::Size index, T &value);  ; static void setValue (DataType &data, sofa::Size index, const T &value);  ; static void getValueString (const DataType &data, sofa::Size index, std::string &value);  ; static void setValueString (DataType &data, sofa::Size index, const std::string &value);  ; static const void * getValuePtr (const DataType &data);  ; static void * getValuePtr (DataType &data);  . Function details. ◆ getValueString(). template<class Alloc > . static void sofa::defaulttype::DataTypeInfo< sofa::type::vector< std::string, Alloc > >::getValueString ; (; const sofa::type::vector< std::string, Alloc > & ; data, . sofa::Index ; index, . std::string & ; value . ). inlinestatic . ◆ setSize(). template<class Alloc > . static bool sofa::d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html:1008,inherit,inherited,1008,api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1defaulttype_1_1_data_type_info_3_01sofa_1_1type_1_1vector_3_01std_1_1string_00_01_alloc_01_4_01_4.html,1,['inherit'],['inherited']
Modifiability,". PluginMap& sofa::helper::system::PluginManager::getPluginMap ; (; ). inline . ◆ GetPluginNameFromPath(). std::string sofa::helper::system::PluginManager::GetPluginNameFromPath ; (; const std::string & ; pluginPath). static . ◆ init() [1/2]. void sofa::helper::system::PluginManager::init ; (; void ; ). ◆ init() [2/2]. void sofa::helper::system::PluginManager::init ; (; const std::string & ; pluginPath). ◆ isPluginLoaded(). std::pair< std::string, bool > sofa::helper::system::PluginManager::isPluginLoaded ; (; const std::string & ; plugin). Determine if a plugin name or plugin path is known from the plugin manager (i.e. has been loaded by the plugin manager) with the found path. Parameters. pluginA path to a plugin or a plugin name . ReturnsA pair consisting of the found plugin path (or the plugin path that was last tried) and a bool value set to true if the plugin has been found in the plugin registration map . ◆ isPluginUnloaded(). bool sofa::helper::system::PluginManager::isPluginUnloaded ; (; const std::string & ; pluginName); const. ◆ loadPlugin(). auto sofa::helper::system::PluginManager::loadPlugin ; (; const std::string & ; plugin, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . std::ostream * ; errlog = nullptr . ). Loads a plugin library in process memory and register into the map; if already registered into the map (and therefore loaded in memory), do nothing.; If not registered but loaded in memory, call entrypoints and register into the map; If not registered and not loaded in memory, it will load the plugin in memory, call entrypoints and register into the map Parameters. pluginCan be just the filename of the library to load (without extension) or the full path ; suffixAn optional suffix to apply to the filename. Defaults to ""_d"" with debug builds and is empty otherwise. ; ignoreCaseSpecify if the plugin search should be case-insensitive (activated by default). Not used if the plugin string ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:6188,plugin,pluginName,6188,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['plugin'],['pluginName']
Modifiability,". Protected Attributes; sofa::type::vector< EdgesInTriangle > m_edgesInTriangle;  provides the 3 edges in each triangle. More...;  ; sofa::type::vector< TrianglesAroundVertex > m_trianglesAroundVertex;  for each vertex provides the set of triangles adjacent to that vertex. More...;  ; sofa::type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge. More...;  ; sofa::type::vector< TriangleID > m_trianglesOnBorder;  Set of triangle indices on topology border. More...;  ; sofa::type::vector< EdgeID > m_edgesOnBorder;  Set of edge indices on topology border. More...;  ; sofa::type::vector< PointID > m_pointsOnBorder;  Set of point indices on topology border. More...;  ; bool m_triangleTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyContainer; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:4066,inherit,inherited,4066,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['inherit'],['inherited']
Modifiability,". Public Member Functions |; Static Public Member Functions |; List of all members . sofa::helper::io::STBImage Class Reference . #include <STBImage.h>. Inheritance diagram for sofa::helper::io::STBImage:. [legend]. Public Member Functions;  STBImage ()=default;  ;  STBImage (const std::string &filename);  ; bool load (std::string filename) override;  ; bool save (std::string filename, int compression_level=-1) override;  ;  Public Member Functions inherited from sofa::helper::io::Image;  Image ();  ; virtual ~Image ();  ;  Image (const Image &rhs);  ; Image & operator= (const Image &rhs);  ; unsigned getWidth (unsigned mipmap=0) const;  ; unsigned getHeight (unsigned mipmap=0) const;  ; unsigned getDepth (unsigned mipmap=0) const;  ; unsigned getBytesPerPixel () const;  ; unsigned getBytesPerBlock () const;  ; unsigned getBytesPerChannel () const;  ; unsigned getChannelCount () const;  ; unsigned getMipmapCount () const;  ; unsigned getPixelCount () const;  ; unsigned getLineSize (unsigned mipmap=0) const;  ; unsigned getMipmapSize (unsigned mipmap) const;  ; unsigned getMipmapRangeSize (unsigned firstMipmap, unsigned mipmaps) const;  ; unsigned getImageSize () const;  ; DataType getDataType () const;  ; ChannelFormat getChannelFormat () const;  ; TextureType getTextureType () const;  ; unsigned char * getPixels ();  ; unsigned char * getMipmapPixels (unsigned mipmap);  ; unsigned char * getCubeMipmapPixels (unsigned cubeside, unsigned mipmap);  ; unsigned char * get3DSliceMipmapPixels (unsigned slice, unsigned mipmap);  ; void clear ();  ; void init (unsigned width, unsigned height, unsigned depth, unsigned mipmaps, DataType dataType, ChannelFormat channelFormat);  ; void init (unsigned width, unsigned height, unsigned bpp);  ; bool isLoaded () const;  . Static Public Member Functions; static void setSTBCreators ();  ;  Static Public Member Functions inherited from sofa::helper::io::Image; static Image * Create (std::string filename);  ; template<class Object > ; s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html:582,inherit,inherited,582,api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1io_1_1_s_t_b_image.html,1,['inherit'],['inherited']
Modifiability,". Public Member Functions;  IdentityContactMapper ();  ; void setCollisionModel (MCollisionModel *model);  ; void cleanup ();  ; MMechanicalState * createMapping (const char *name=""contactPoints"");  ; void resize (Size);  ; Index addPoint (const Coord &, Index index, Real &);  ; void update ();  ; void updateXfree ();  ; void updateX0 ();  ;  Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; virtual ~BaseContactMapper ();  ; virtual Index addPoint (const Coord &, Index, Real &);  Adding a point of the global referentiel to the mapping. More...;  ; virtual Index addPointB (const Coord &P, Index elementId, Real &r, const sofa::type::Vec3 &);  ; Index addPointB (const Coord &P, Index elementId, Real &r);  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::component::collision::response::mapper::BaseContactMapper< DataTypes >; static BaseContactMapper< DataTypes > * Create (core::CollisionModel *model, const std::string &name=std::string(""PenalityContactForceField""));  ; static ContactMapper< TCollisionModel, DataTypes > * create (ContactMapper< TCollisionModel, DataTypes > *, core::CollisionModel *arg);  . Attribute details. ◆ mapping. template<class TCollisionModel , class DataTypes > . MMapping::SPtr sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, DataTypes >::mapping. ◆ model. template<class TCollisionModel , class DataTypes > . MCollisionModel* sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, DataTypes >::model. Constructor details. ◆ IdentityContactMapper(). template<class TCollisionModel , class DataTypes > . sofa::component::collision::response::mapper::IdentityContactMapper< TCollisionModel, DataTypes >::IdentityContactMapper ; (; ). inline . Function details. ◆ addPoint(). template<class TCollisionModel , class DataTypes > . Index sofa::component::collision::response::mapper::IdentityCont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper.html:1772,inherit,inherited,1772,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1mapper_1_1_identity_contact_mapper.html,1,['inherit'],['inherited']
Modifiability,". Public Member Functions;  SOFA_CLASS (TranslateTransformMatrixEngine, AbstractTransformMatrixEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine;  SOFA_ABSTRACT_CLASS (AbstractTransformMatrixEngine, core::DataEngine);  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  Create a DataCallback object associated with multiple Data fields. More...;  ; void addOutputs (std::initializer_list< sofa::core::objectmodel::BaseData * > datas);  ; virtual void cleanDirty (const core::ExecParams *params=nullptr);  ; void updateAllInputsIfDirty ();  ;  Public Member Functions inherited from sofa::core::objectmodel::DDGNode;  DDGNode ();  Constructor. More...;  ; virtual ~DDGNode ();  Destructor. Automatically remove remaining links. More...;  ; void addInput (DDGNode *n);  Add a new input to this node. More...;  ; void delInput (DDGNode *n);  Remove an input from this node. More...;  ; void addOutput (DDGNode *n);  Add a new output to this node. More...;  ; void delOutput (DDGNode *n);  Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html:2810,inherit,inherited,2810,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_translate_transform_matrix_engine.html,1,['inherit'],['inherited']
Modifiability,. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SOFA - Topic Tag: GCC. /gcc-4-8-5; . /feed; ; Gcc 4.8.5 – SOFA. SOFA - Topic Tag: Gcc 4.8.5. /geomagic; . /feed; ; geomagic – SOFA. SOFA - Topic Tag: geomagic. /geomagic-collision-error; . /feed; ; Geomagic collision error – SOFA. SOFA - Topic Tag: Geomagic collision error. /geomagic-plugin; . /feed; ; Geomagic plugin – SOFA. SOFA - Topic Tag: Geomagic plugin. /geomagic-rare-tool-behaviour; . /feed; ; [Geomagic] Rare tool behaviour – SOFA. SOFA - Topic Tag: [Geomagic] Rare tool behaviour. /geomagic-touch; . /feed; ; Geomagic touch – SOFA. SOFA - Topic Tag: Geomagic touch. /geomagic-touch-haptic-rendering; . /feed; ; Geomagic Touch Haptic Rendering – SOFA. SOFA - Topic Tag: Geomagic Touch Haptic Rendering. /getcontactelements; . /feed; ; getContactElements – SOFA. SOFA - Topic Tag: getContactElements. /getobject; . /feed; ; getObject – SOFA. SOFA - Topic Tag: getObject. /getting-started; . /feed; ; Getting Started – SOFA. SOFA - Topic Tag: Getting Started. /gil; . /feed; ; gil – SOFA. SOFA - Topic Tag: gil. /glew; . /feed; ; glew – SOFA. SOFA - Topic Tag: glew. /glreadpixels; . /feed; ; glReadPixels – SOFA. SOFA - Topic Tag: glReadPixels. /gl-shader; . /feed; ; gl shader – SOFA. SOFA - Topic Tag: gl shader. /glsl-oglmodel; . /feed; ; GLSL OglModel – SOFA. SOFA - Topic Tag: GLSL OglModel. /glut; . /feed; ; glut – SOFA. SOFA -,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:445746,plugin,plugin,445746,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['plugin'],['plugin']
