quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"Pane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1556,inherit,inherited,1556,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"ParallelTileObject.Status; getStatus(). Get the current status (pending, processing or done). boolean; isComplete(). Returns true if setComplete() has been called. boolean; isProcessing(). Returns true if setIsProcessing(true) has recently been called. void; resolveOverlaps(). Request that the tile object attempts to resolve overlaps with its neighboring tiles. void; setComplete(boolean wasCancelled). Notify the tile that its processing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the object if it is currently being processed. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:2352,inherit,inherited,2352,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,1,['inherit'],['inherited']
Modifiability,"ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8487,plugin,plugins,8487,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"PathExtension); qupath.process.gui.ProcessingExtension.ObjectClassificationCommands; qupath.process.gui.ProcessingExtension.OpenCVCommands; qupath.process.gui.ProcessingExtension.OtherCommands; qupath.process.gui.ProcessingExtension.PixelClassificationCommands; qupath.lib.gui.panes.ProjectBrowser (implements javafx.beans.value.ChangeListener<T>); qupath.process.gui.commands.ml.ProjectClassifierBindings; qupath.lib.gui.commands.ProjectCommands; qupath.lib.gui.dialogs.ProjectDialogs; qupath.lib.projects.ProjectIO; qupath.lib.projects.Projects; qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.scripting.QP. qupath.lib.gui.scripting.QPEx. qupath.QuPath; qupathj.QuPath_Send_Overlay_to_QuPath (implements ij.plugin.PlugIn); qupathj.QuPath_Send_ROI_to_QuPath (implements ij.plugin.PlugIn); qupath.lib.gui.QuPathGUI; qupath.lib.gui.viewer.tools.QuPathPenManager; qupath.lib.gui.localization.QuPathResources; qupath.lib.gui.prefs.QuPathStyleManager; qupath.lib.gui.viewer.QuPathViewer (implements qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener, qupath.lib.gui.images.stores.TileListener<T>). qupath.lib.gui.viewer.QuPathViewerPlus. qupath.lib.objects.classes.Reclassifier; qupath.lib.roi.RectangleROI (implements java.io.Serializable); qupath.lib.gui.images.servers.RenderedImageServer.Builder; qupath.lib.projects.ResourceManager; qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.roi.RoiEditor; qupath.imagej.processing.RoiLabeling; qupath.lib.roi.ROIs; qupath.lib.roi.RoiTools; qupath.lib.analysis.stats.RunningStatistics; qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep (implements qupath.lib.plugins.wor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:30989,plugin,plugin,30989,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugin']
Modifiability,PathObjectConnectionGroup (QuPath 0.5.0); MetadataStore (QuPath 0.5.0); qupath.lib.objects (QuPath 0.5.0); qupath.lib.objects Class Hierarchy (QuPath 0.5.0); PathAnnotationObject (QuPath 0.5.0); PathCellObject (QuPath 0.5.0); PathDetectionObject (QuPath 0.5.0); PathObject (QuPath 0.5.0); PathObjectConnectionGroup (QuPath 0.5.0); PathObjectConnections (QuPath 0.5.0); PathObjectFilter (QuPath 0.5.0); PathObjectPredicates (QuPath 0.5.0); PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (Q,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:28171,plugin,plugins,28171,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"PathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Insert a collection of objects into the hierarchy, firing a change event on completion. insertPixelClassifiersAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPExImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertSelectedObjectsInHierarchy(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Insert the selected objects in the hierarchy, resolving positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:606834,extend,extends,606834,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTool. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers;  ; PathTools. Default PathTool implementations. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelClassificationImageServer. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassificationMeasurementManager. Helper class to compute area-based measurements for regions of interest based on pixel classification. PixelClassificationOverlay. PathOverlay that gives the results of pixel classification. PixelClassifier. Interface defining a pixel classifier. PixelClassifierCommand. Open GUI for the current viewer to train a new pixel classifier. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:41799,plugin,plugin,41799,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2219,inherit,inherited,2219,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['inherit'],['inherited']
Modifiability,"PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names &",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2453,inherit,inherited,2453,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['inherit'],['inherited']
Modifiability,"Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeFeaturesPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:1740,extend,extends,1740,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['extend'],['extends']
Modifiability,"PixelType. Returns true if the type is an unsigned integer representation. isURL() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:637716,plugin,plugins,637716,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"Plugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class FindConvexHullDetectionsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class FindConvexHullDetectionsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to identify/remove detections from the convex hull of all detections.; ; Currently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:1016,inherit,inherited,1016,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['inherit'],['inherited']
Modifiability,"Plugin.LineCap (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.plugins.objects; Enum Class DilateAnnotationPlugin.LineCap. java.lang.Object; java.lang.Enum<DilateAnnotationPlugin.LineCap>; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. All Implemented Interfaces:; Serializable, Comparable<DilateAnnotationPlugin.LineCap>, Constable. Enclosing class:; DilateAnnotationPlugin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.Lin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html:1019,inherit,inherited,1019,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,1,['inherit'],['inherited']
Modifiability,"Plugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are inst",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:1771,plugin,plugins,1771,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"Plugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractTileableDetectionPlugin, DetectCytokeratinCV, PositivePixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1495,extend,extends,1495,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['extend'],['extends']
Modifiability,"Plugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class FillAnnotationHolesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FillAnnotationHolesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:1459,plugin,plugin,1459,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['plugin'],['plugin']
Modifiability,"Point() - Method in class qupath.lib.roi.AreaROI;  ; isPoint() - Method in class qupath.lib.roi.EllipseROI;  ; isPoint() - Method in class qupath.lib.roi.GeometryROI;  ; isPoint() - Method in class qupath.lib.roi.LineROI;  ; isPoint() - Method in class qupath.lib.roi.PointsROI;  ; isPoint() - Method in class qupath.lib.roi.PolygonROI;  ; isPoint() - Method in class qupath.lib.roi.PolylineROI;  ; isPoint() - Method in class qupath.lib.roi.RectangleROI;  ; isPoint() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI represents distinct (unconnected) points. isPositiveClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass has the name ""Positive"". isPositiveOrGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""Positive"", ""1+"", ""2+"" or ""3+"", indicating positive staining. isProcessing() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setIsProcessing(true) has recently been called. isReadOnly() - Method in class qupath.lib.gui.QuPathGUI. Query whether QuPath is in 'read-only' mode. isRecording() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this is currently recording. isRedoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isRedoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'redo' can be applied to the control. isRedoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isResidual() - Method in class qupath.lib.color.StainVector. Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. isResizable() - Method in class qupath.lib.gui.ColorMapCanvas;  ; isRGB() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; isRGB() - Method in interface qupath.lib.images.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:630229,plugin,plugins,630229,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"Prefs. public static enum PathPrefs.AutoUpdateType; extends Enum<PathPrefs.AutoUpdateType>; Options for automatic updating checking of QuPath and/or extensions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1651,inherit,inherited,1651,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,1,['inherit'],['inherited']
Modifiability,"Prefs.DetectionTreeDisplayModes - Enum Class in qupath.lib.gui.prefs. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize - Enum Class in qupath.lib.gui.prefs. Enum to control font size. PathPrefs.ImageTypeSetting - Enum Class in qupath.lib.gui.prefs. Enum defining how setting the image type should be handled for new images. PathROIObject - Class in qupath.lib.objects. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject - Class in qupath.lib.objects. The root object used at the base of a PathObjectHierarchy. PathRootObject() - Constructor for class qupath.lib.objects.PathRootObject;  ; paths(Path...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as path objects. PathTableData<T> - Interface in qupath.lib.gui.measure. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask - Interface in qupath.lib.plugins. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject - Class in qupath.lib.objects. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTileObject() - Constructor for class qupath.lib.objects.PathTileObject. Default constructor. PathTileObject(ROI) - Constructor for class qupath.lib.objects.PathTileObject;  ; PathTool - Interface in qupath.lib.gui.viewer.tools. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers - Class in qupath.lib.gui.viewer.tools.handlers;  ; PathToolEventHandlers() - Constructor for class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; PathTools - Class in qupath.lib.gui.viewer.tools. Default PathTool implementations. PathTools() - Constructor for class qupath.lib.gui.viewer.tools.PathTools;  ; pca(double, boolean) - Method in class qupath.ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:759995,plugin,plugins,759995,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"Preprocessing() - Constructor for class qupath.opencv.ml.objects.features.Preprocessing;  ; Preprocessing.PCAProjector - Class in qupath.opencv.ml.objects.features. Helper class to apply PCA projection. preprocessor(FeaturePreprocessor) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a FeaturePreprocessor to pixels, considering each channel as features. PRETTY_JSON - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request pretty-printing for the JSON. previousSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property storing the previous tool that was selected. PROBABILITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. process(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.Processor. Processing method. PROCESSING - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile currently being processed. ProcessingCV - Class in qupath.opencv.tools. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingCV() - Constructor for class qupath.opencv.tools.ProcessingCV;  ; ProcessingExtension - Class in qupath.process.gui. General-purpose processing and machine learning commands. ProcessingExtension() - Constructor for class qupath.process.gui.ProcessingExtension;  ; ProcessingExtension.ObjectClassificationCommands - Class in qupath.process.gui;  ; ProcessingExtension.OpenCVCommands - Class in qupath.process.gui. Commands based on OpenCV. ProcessingExtension.OtherCommands - Class in qupath.process.gui;  ; ProcessingExtension.PixelClassificationCommands - Class in qupath.process.gui;  ; processObjects(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.lib.experimental.pixels.PixelProcessor. Process objects using t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:782908,plugin,plugins,782908,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry for each of the current images open in QuPath, if available. Parameters:; qupath - ; Returns:; a collection of currently-open project entries. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1819,variab,variable,1819,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,1,['variab'],['variable']
Modifiability,"PropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the property sheet, and ; additional information that should be displayed to the user. Returns:; Since:; v0.5.0. refreshAllEditors; public void refreshAllEditors(); Request that all the property editors ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2527,extend,extends,2527,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['extend'],['extends']
Modifiability,"QP. Set the color deconvolution stains for hte current image data using a (JSON) String representation. setColorDeconvolutionStains(ColorDeconvolutionStains) - Method in class qupath.lib.images.ImageData. Set the color deconvolution stain vectors for the current image type. setColorMap(ColorMaps.ColorMap) - Method in class qupath.lib.gui.ColorMapCanvas. Set the ColorMaps.ColorMap to display to the one with the specified list index. setColorMapper(ColorMaps.ColorMap) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set a new color mapper. setColorModel(ColorModel) - Method in class qupath.lib.gui.images.stores.ColorModelRenderer. Set the color model to use. setColorModel(ColorModel) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Optionally set a custom ColorModel. setColorRGB(Integer) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, use PathObject.setColor(Integer) instead. setComplete(boolean) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the tile that its processing is done. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; setContextMenu(ContextMenu) - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:920435,plugin,plugins,920435,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class GeometryROI. java.lang.Object; qupath.lib.roi.GeometryROI. All Implemented Interfaces:; Serializable, ROI. public class GeometryROI; extends Object; implements Serializable; ROI based on Java Topology Suite Geometry objects.; This gives a very flexible representation (except for a lack of support for ellipses), ; which needs only copy itself to return getGeometry().; Consequently it can be much more performant whenever the underlying Geometry is ; required frequently compared to other ROI types with a new Geometry must be ; constructed and validated. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Create a duplicate of the ROI. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:1013,inherit,inherited,1013,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['inherit'],['inherited']
Modifiability,"QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2382,inherit,inherited,2382,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['inherit'],['inherited']
Modifiability,"QuPathGUI) - Constructor for class qupath.process.gui.commands.ObjectClassifierLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurements - Enum Class in qupath.lib.analysis.features. Requested intensity measurements. ObjectMeasurements.ShapeFeatures - Enum Class in qupath.lib.analysis.features. Standard measurements that may be computed from shapes. ObjectMerger - Class in qupath.lib.objects.utils. Helper class for merging objects using different criteria. ObjectPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; ObjectsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:717953,plugin,plugins,717953,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"RL for the main repo. getUseAlwaysExtensions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:546711,plugin,plugins,546711,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Collection<? extends ROI> rois); Create intersection of multiple ROIs from a collection.; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(ROI.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:6121,extend,extends,6121,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability,"ROI roi). Create an unclassified tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass). Create a tile object. static PathObject; createTileObject(ROI roi,; PathClass pathClass,; MeasurementList measurements). Create a tile object, with a classification and measurements list. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double xCenter,; double yCenter,; double diameter,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an circular ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing). Create a TMA core object with an ellipse ROI. static TMACoreObject; createTMACoreObject(double x,; double y,; double width,; double height,; boolean isMissing,; ImagePlane plane). Create a TMA core object with an ellipse ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjects; public PathObjects(). Method Details. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass,; MeasurementList measurements); Create a classified annotation object with a specified measurement list.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; measurements - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi,; PathClass pathClass); Create a classified annotation object.; ; Annotation objects are used to represent mutable objects, prizing flexibility over efficiency. Parameters:; roi - ; pathClass - ; Returns:. createAnnotationObject; public static PathObject createAnnotationObject(ROI roi); Create an unclassified annotation object.; ; Annotation objects are us",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:3039,inherit,inherited,3039,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['inherit'],['inherited']
Modifiability,"RVIEW;  ; PIXEL_CLASSIFICATION;  ; PLAYBACK_PLAY;  ; POINTS_TOOL;  ; POLYGON_TOOL;  ; POLYLINE_TOOL;  ; RECTANGLE_TOOL;  ; REFRESH;  ; SCREENSHOT;  ; SCRIPT_EDITOR;  ; SELECTION_MODE;  ; SHOW_NAMES;  ; SHOW_SCALEBAR;  ; TABLE;  ; TMA_GRID;  ; TRACKING_RECORD;  ; TRACKING_REWIND;  ; TRACKING_STOP;  ; VIEWER_GRID_1x1;  ; VIEWER_GRID_1x2;  ; VIEWER_GRID_2x1;  ; VIEWER_GRID_2x2;  ; VIEWER_GRID_3x3;  ; WAND_TOOL;  ; WARNING;  ; ZOOM_IN;  ; ZOOM_OUT;  ; ZOOM_TO_FIT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static IconFactory.PathIcons; valueOf(String name). Returns the enum constant of this class with the specified name. static IconFactory.PathIcons[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ACTIVE_SERVER; public static final IconFactory.PathIcons ACTIVE_SERVER. ANNOTATIONS; public static final IconFactory.PathIcons ANNOTATIONS. ANNOTATIONS_FILL; public static final IconFactory.PathIcons ANNOTATIONS_FILL. ARROW_START_TOOL; public static final IconFactory.PathIcons ARROW_START_TOOL. ARROW_END_TOOL; public static final IconFactory.PathIcons ARROW_END_TOOL. ARROW_DOUBLE_TOOL; public static final IconFactory.PathIcons ARROW_DOUBLE_TOOL. BRUSH_TOOL; public static final IconFactory.PathIcons BRUSH_TOOL. CELL_NUCLEI_BOTH; public static final IconFactory.PathIcons CELL_NUCLEI_BOTH. CELL_ONLY; public static final IconFactory.PathIcons CELL_ONLY. CENTROIDS_ONLY; public static final IconFactory.PathIcons CENTROIDS_ONLY. COG; public static final IconFactory.PathIcons COG. CONTRAST; public static final IconFactory.PathIcons CONTRAST. DETECTIONS; public static final IconFactory.PathIcons ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html:2391,inherit,inherited,2391,javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.PathIcons.html,1,['inherit'],['inherited']
Modifiability,"RankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:637997,plugin,plugins,637997,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,Request;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasur,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570713,plugin,plugins,570713,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3644,inherit,inherited,3644,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['inherit'],['inherited']
Modifiability,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:3825,inherit,inherited,3825,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['inherit'],['inherited']
Modifiability,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3574,inherit,inherited,3574,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['inherit'],['inherited']
Modifiability,"Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotate 90 degrees clockwise. ROTATE_180; public static final RotatedImageServer.Rotation ROTATE_180; Rotate 180 degrees. ROTATE_270; public static final RotatedImageServer.Rotation ROTATE_270; Rotate 270 degrees clockwise. Method Details. values; public static RotatedImageServer.Rotation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RotatedImageServer.Rotation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitesp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html:1730,inherit,inherited,1730,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,1,['inherit'],['inherited']
Modifiability,"RunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2044,plugin,plugins,2044,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugins']
Modifiability,"RunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2207,inherit,inherited,2207,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['inherit'],['inherited']
Modifiability,"RunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2047,inherit,inherited,2047,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['inherit'],['inherited']
Modifiability,"S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4280,extend,extends,4280,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"SON. Parameters:; path - ; option - ; additionalOptions - ; Throws:; IOException. exportAllObjectsToGeoJson; public static void exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export all objects (excluding root object) to an output file as GeoJSON. Parameters:; path - ; options - ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; option - ; additionalOptions - ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; options - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; option - ; additionalOptions - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; options - ; Throws:; IOException. importObjectsFromFile; public static boolean importObjectsFromFile(String path); throws FileNotFoundException,; IllegalArgumentException,; IOException,; ClassNotFoundException; Import all PathObjects from the given file. ; IllegalArgumentException is thrown if the file is not compatible. ; FileNotFoundException is thrown if the file is not found. ; IOException is thrown if an error occurs while reading the file. ; C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:92660,extend,extends,92660,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ScaleByMagProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). BrushToolEventHandler - Class in qupath.lib.gui.viewer.tools.handlers. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BrushToolEventHandler() - Constructor for class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; buffer(ROI, double) - Static method in class qupath.lib.roi.RoiTools. Buffer the specified ROI, dilating (or eroding) by the specified distance. BufferedImageOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions, ImageRegion, BufferedImage) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer, BufferedImage) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer, Map<ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer, OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:66235,extend,extends,66235,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protected ReadOnlyObjectProperty<ScriptLanguage> currentLanguageProperty(). Returns:; the currentLanguage property; See Also:. getCurrentLanguage(). currentSyntaxProperty; protected ReadOnlyObjectProperty<ScriptSyntax> currentSyntaxProperty(). Returns:; the currentSyntax property; See Also:. getCurrentSyntax(). getCurrentLanguage; protected ScriptLanguage getCurrentLanguage(); Gets the value of the currentLanguage property. Property description:; Returns:; the value of the currentLanguage property; See Also:. currentLanguageProperty(). getCurrentSyntax; protected ScriptSyntax getCurrentSyntax(); Gets the value of the currentSyntax property. Property description:; Returns:; the value of the currentSyntax property; See Also:. currentSyntaxProperty(). getCurrentScriptTab; protected ScriptTab getCurrentScriptTab(). getCurrentEditorControl; protected ScriptEditorControl<? extends Region> getCurrentEditorControl(). getCurrentConsoleControl; protected ScriptEditorControl<? extends Region> getCurrentConsoleControl(). getSelectedText; protected String getSelectedText(). getCurrentText; protected String getCurrentText(). sendLogToConsoleProperty; protected ObservableBooleanValue sendLogToConsoleProperty(); Boolean property indicating whether the console should display the log, rather than ; directly-printed information. Returns:. getClipboardText; protected static String getClipboardText(boolean escapeCharacters). pasteFromClipboard; protected static boolean pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters). showEditor; public void showEditor(); Description copied from interface: ScriptEditor; Show the script editor. Specified by:; showEditor in interface ScriptEditor. showScript; public void showScript(String name,; String script); Description copied from interface: ScriptEditor; Show the script editor, including a new sc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:10113,extend,extends,10113,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['extend'],['extends']
Modifiability,"ServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? extends ImageServerBuilder<T>> getProviderClass(); Get the class of the associated ImageServerBuilder. Returns:. getBuilders; public List<ImageServerBuilder.ServerBuilder<T>> getBuilders(); Get a list of ServerBuilders, one for each image that can be read bas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:2422,extend,extends,2422,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['extend'],['extends']
Modifiability,"ServerMetadata.ImageResolutionLevel.Builder; addFullResolutionLevel(). Add the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutionLevel>; build(). Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsample; public ImageServerMetadata.ImageResolutionLevel.Builder addLevelByDownsample(double downsample); Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. Parameters:; downsample - ; Returns:. addFullResolutionLevel; public ImageServerMetadata.ImageResolutionLevel.Builder addFullResolutionLevel(); Add the full-resolution image as a level of the pyramid.; It is not required that this form part of the pyramid in cases where this image pyramid might ; be used to provide a smaller overlay of a lar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html:2120,inherit,inherited,2120,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,1,['inherit'],['inherited']
Modifiability,"ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Method Details. getDefaultParameterList; ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList.; ; Each time the method is invoked, a new ParameterList should be created. Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; boolean alwaysPromptForObjects(); If this returns true, then a prompt is requested every",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html:1899,extend,extends,1899,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,1,['extend'],['extends']
Modifiability,"Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:995,plugin,plugin,995,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability,"StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public static StainVector.DefaultStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static StainVector.DefaultStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; Ille",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html:1644,inherit,inherited,1644,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,1,['inherit'],['inherited']
Modifiability,"Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. setFontSize(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the requested font size for the 'Show names' option. setGamma(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the gamma value for this viewer. setGridLines(GridLines) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the GridLines object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.His",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:927624,plugin,plugins,927624,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatch3D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width, height and z-spacing are the same. UNKNOWN - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI status is unclear, e.g. UNKNOWN - Static variable in class qupath.lib.common.Version. Constant representing any unknown version. UNKNOWN_LENGTH - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown dimension length. UNKNOWN_SHAPE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown shape. UNKNOWN_SIZE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown size (i.e. unlimitedDatapoints() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Show all datapoints, without subsampling, even when this may cause performance issues. UNLOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1059031,variab,variable,1059031,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"Step. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:1381,plugin,plugin,1381,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,1,['plugin'],['plugin']
Modifiability,"String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.roi. Class qupath.lib.roi.AreaROI; class AreaROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:10125,plugin,plugins,10125,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the current image. saveDetectionMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the specified image. savedName(StringProperty) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Property to store the saved name; this is useful if the name is required externally. saveImageData(ImageData<T>) - Method in interface qupath.lib.projects.ProjectImageEntry. Save the ImageData for this entry using the default storage location for the project. saveImageMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the current image. saveImageMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the specified image. saveMeasurements(Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the current image for objects of a fixed type. saveMeasurements(ImageData<?>, Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the specified image for objects of a fixed type. savePreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Save the preferences. SaveResourcePaneBuilder<T> - Class in qupath.process.gui.commands.ui. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. SaveResourcePaneBuilder(Class<T>, ObjectExpression<? extends T>) - Constructor for class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Constructor. saveSnapshot(QuPathGUI, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.commands.Commands. Save an image snapshot, prompting the user to select the output file. saveTableModel(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:882079,extend,extends,882079,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2500,inherit,inherited,2500,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['inherit'],['inherited']
Modifiability,"String; getPrompt(). Get some prompt text that may be displayed to a user. Double; getValue(). Get the current set value (may be null). Double; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:2231,inherit,inherited,2231,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,1,['inherit'],['inherited']
Modifiability,Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class MeasurementExporter. java.lang.Object; qupath.lib.gui.tools.MeasurementExporter. public class MeasurementExporter; extends Object; Helper class for exporting the measurements of one or more entries in a project. Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; MeasurementExporter();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; MeasurementExporter; excludeColumns(String... excludeColumns). Specify the columns that will be excluded during the export. void; exportMeasurements(File file). Exports the measurements of one or more entries in the project. void; exportMeasurements(OutputStream stream). Exports the measurements of one or more entries in the project. MeasurementExporter; exportType(Class<? extends PathObject> type). Specify what type of object should be exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:1171,extend,extends,1171,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['extend'],['extends']
Modifiability,"Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class SimplePluginWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:1188,plugin,plugin,1188,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,1,['plugin'],['plugin']
Modifiability,"SupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526744,plugin,plugins,526744,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"T - . All Known Subinterfaces:; PathInteractivePlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractPlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:1388,plugin,plugins,1388,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"T(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isCircle(). Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:3895,inherit,inherited,3895,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['inherit'],['inherited']
Modifiability,"T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. Direct Known Subclasses:; DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1478,inherit,inherited,1478,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,1,['inherit'],['inherited']
Modifiability,"T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2169,inherit,inherited,2169,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['inherit'],['inherited']
Modifiability,"T> server);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:2385,inherit,inherited,2385,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['inherit'],['inherited']
Modifiability,"TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31265,plugin,plugin,31265,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"Tasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:2545,plugin,plugins,2545,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability,"Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:1125,inherit,inherited,1125,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['inherit'],['inherited']
Modifiability,"Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1134,extend,extends,1134,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['extend'],['extends']
Modifiability,"Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2309,inherit,inherited,2309,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['inherit'],['inherited']
Modifiability,"URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:1972,layers,layers,1972,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['layers'],['layers']
Modifiability,"UnsignedIntHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. concatChannels(Collection<ImageServer<BufferedImage>>) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate a collection of additional servers along the 'channels' dimension (iteration order is used). concatChannels(ImageServer<BufferedImage>...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate additional servers along the 'channels' dimension. config(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). config(URI) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). confirmation() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an confirmation alert dialog. constrainCellByNucleusDistance(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. constrainCellByScaledNucleus(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:135072,config,config,135072,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['config']
Modifiability,"UriResource; Wrapper for an OpenCV Net, including essential metadata about how it should be used.; ; The main purpose of this is to support serializing models to JSON... kind of. In truth currently the paths ; to the original model files are serialized, since (to my knowledge) there is no way to save and reload a Net directly. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVDnn.Builder. Helper class to build an OpenCVDnn. static enum ; OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:1576,extend,extends,1576,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['extend'],['extends']
Modifiability,UriUpdater.SingleUriItem;  ; toString() - Method in class qupath.lib.objects.classes.PathClass;  ; toString() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; toString() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent;  ; toString() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy;  ; toString() - Method in class qupath.lib.objects.PathObject;  ; toString() - Method in enum class qupath.lib.objects.PathObjectFilter;  ; toString() - Method in class qupath.lib.objects.PathRootObject;  ; toString() - Method in class qupath.lib.objects.TMACoreObject;  ; toString() - Method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap;  ; toString() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; toString() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; toString() - Method in class qupath.lib.regions.ImagePlane;  ; toString() - Method in class qupath.lib.regions.ImageRegion;  ; toString() - Method in class qupath.lib.regions.Padding;  ; toString() - Method in class qupath.lib.regions.RegionRequest;  ; toString() - Method in class qupath.lib.roi.AreaROI;  ; toString() - Method in class qupath.lib.roi.EllipseROI;  ; toString() - Method in class qupath.lib.roi.GeometryROI;  ; toString() - Method in class qupat,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1041623,plugin,plugins,1041623,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"V (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class WatershedNucleiCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.WatershedNucleiCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedNucleiCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Alternative (incomplete) attempt at nucleus segmentation.; ; It's reasonably fast... but not particularly good. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; WatershedNucleiCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:1008,inherit,inherited,1008,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['inherit'],['inherited']
Modifiability,"Value(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String representation of QuPath's version, if known. getVersion() - Method in class qupath.lib.gui.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548828,plugin,plugins,548828,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"Value(String key). Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). static PathObject; getSelectedObject(). Get the primary selected object within the current PathObjectHierarchy. static Collection<PathObject>; getSelectedObjects(). Get the selected objects within the current PathObjectHierarchy. static ROI; getSelectedROI(). Get the ROI for the primary selected object within the current PathObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21167,extend,extends,21167,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"Viewer viewer). Make a BufferedImage snapshot of the specified viewer. static boolean; openFile(File file). Try to open a file in the native application. static void; paintImage(Canvas canvas,; Image image). Paint an image centered within a canvas, scaled to be as large as possible while maintaining its aspect ratio. static void; paintImage(Canvas canvas,; Image image,; double scale). Paint an image centered within a canvas, scaled by the specified scale factor. static ContextMenu; populateAnnotationsMenu(QuPathGUI qupath,; ContextMenu menu). Populate a ContextMenu with standard options to operate on selected annotation objects. static Menu; populateAnnotationsMenu(QuPathGUI qupath,; Menu menu). Populate a Menu with standard options to operate on selected annotation objects. static boolean; promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5027,plugin,plugin,5027,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['plugin'],['plugin']
Modifiability,"Wrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1687,inherit,inherited,1687,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['inherit'],['inherited']
Modifiability,"Write an image consisting of one or more series to the specified path. static void; writeImage(ImageServer<BufferedImage> server,; String path). Static helper method to write an image using Bio-Formats. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression). Static helper method to write an image using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region). Static helper method to write an image region using Bio-Formats with the specified compression. static void; writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region,; boolean allZ,; boolean allT). Static helper method to write an image using Bio-Formats for a defined region with the specified compression, optionally including all ; z-slices or timepoints. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writeImage; public void writeImage(String path); throws FormatException,; IOException; Write an image consisting of one or more series to the specified path. Parameters:; path - ; Throws:; FormatException; IOException; See Also:. createWriter(Collection); createWriter(OMEPyramidSeries...). createWriter; public static OMEPyramidWriter createWriter(OMEPyramidWriter.OMEPyramidSeries... series); Create a writer capable of writing an image with one or more series. Parameters:; series - ; Returns:. createWriter; public static OMEPyramidWriter createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries> series); Create a writer capable of writing an image with a collection of series. Parameters:; series - ; Returns:. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws FormatException,; IOException; Static helper ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html:3201,inherit,inherited,3201,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,1,['inherit'],['inherited']
Modifiability,"[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:3342,extend,extends,3342,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 entries, normalizing to the specified background value. makeODLUT(double, int) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table, normalizing to the specified background value. makePathInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file or directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:667412,plugin,plugins,667412,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolylineROI - Class in qupath.lib.roi. ROI representing an arbitrary open polyline. populateAnnotationsMenu(QuPathGUI, ContextMenu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a ContextMenu with standard options to operate on selected annotation objects. populateAnnotationsMenu(QuPathGUI, Menu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a Menu with standard options to operate on selected annotation objects. positionCaret(int) - Method in interface qupath.lib.gui.scripting.EditableText. Set the caret position to the specified index. positionCaret(int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; positionCaret(int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; POSITIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'positive'. POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageDat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:773081,variab,variable,773081,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,; Collection<? extends PathObject> targetObjects). Match objects according to their IDs. static PathObject; mergeObjects(Collection<? extends PathObject> pathObjects). Merge objects by calculating the union of their ROIs. static <K> List<PathObject>; mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier). Merge objects that share a property in common. static boolean; mergePointsForAllClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForClass(PathObjectHierarchy hierarchy,; PathClass pathClass). Merge point annotations with the specified PathClass sharing the same ImagePlane, ; creating a single multi-point annotation for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForSelectedObjectClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations,; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static String[]; parseTMALabelString(String lab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:8906,extend,extends,8906,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability,"a PathObject using the default PathObject.toString() method. static ListCell<PathObject>; createListCell(Function<PathObject,String> stringExtractor). Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. static PathObjectLabels.PathObjectMiniPane; createPane(). Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. static PathObjectLabels.PathObjectMiniPane; createPane(Function<PathObject,String> stringExtractor). Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. static TreeCell<PathObject>; createTreeCell(). Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. static TreeCell<PathObject>; createTreeCell(Function<PathObject,String> stringExtractor). Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectLabels; public PathObjectLabels(). Method Details. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(); Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. Returns:. createPane; public static PathObjectLabels.PathObjectMiniPane createPane(Function<PathObject,String> stringExtractor); Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. Parameters:; stringExtractor - ; Returns:. createListCell; public static ListCell<PathObject> createListCell(); Create a ListCell for displaying a PathObject using the default PathObject.toString() method. Returns:. createListCell; public static ListCell<PathObject> createListCell(Function<PathObject,String> stringExtractor); Create a ListCell for displaying a PathObject using a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html:2094,inherit,inherited,2094,javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PathObjectLabels.html,1,['inherit'],['inherited']
Modifiability,"a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Get a map view of this measurements list. asType(ImagePlus, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. asType(ImageProcessor, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. asType(BufferedImage, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert a Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:46748,variab,variable,46748,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default compression type when writing OME-TIFF images. getDefaultQuPathUserDirectory() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDefaultResolutions(ImageData<?>, ClassificationResolution) - Static method in class qupath.process.gui.commands.ml.ClassificationResolution. Get a list of default resolutions to show, derived from PixelCalibration objects. getDefaultRGBChannels() - S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:373208,plugin,plugins,373208,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Get a map view of this measurements list. asType(ImagePlus, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. asType(ImageProcessor, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImageProcessor to a Mat using Groovy's 'as' syntax. asType(BufferedImage, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert a BufferedImage to a Mat, ImageProcessor or ImagePlus ; using Groovy's 'as' syntax. asType(Number, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper function to convert a Number to a Mat or Scalar using ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:46965,variab,variable,46965,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2162,plugin,plugins,2162,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['plugin'],['plugins']
Modifiability,"a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2551,plugin,plugins,2551,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['plugin'],['plugins']
Modifiability,"a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterLi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2242,plugin,plugins,2242,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['plugin'],['plugins']
Modifiability,"a. Get the number of censored events. nChannels() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nChannels() - Method in interface qupath.lib.images.servers.ImageServer. Number of channels (3 for RGB). nChildObjects() - Method in class qupath.lib.objects.PathObject. Total number of child objects. nComponents() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Number of output components. nCores() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; nCores() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Total number of cores in the TMA grid. nDescendants() - Method in class qupath.lib.objects.PathObject. Total number of descendant objects. NEAREST - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Nearest neighbor interpolation. NECROSIS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Necrosis classification. NECROSIS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Necrosis classification. negate() - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate;  ; negative(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Multiply elements of an array by -1. NEGATIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'negative'. NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'negative'. nEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events, either observed or censored. NEVER - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Don't use the system menubar for any windows. NEVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Never display. newBuilde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:708971,variab,variable,708971,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"a<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2463,plugin,plugins,2463,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugins']
Modifiability,"a<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2329,plugin,plugins,2329,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugins']
Modifiability,"a<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3348,plugin,plugins,3348,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugins']
Modifiability,"aScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class CssLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.CssLanguage. public class CssLanguage; extends ScriptLanguage; Class for representing CSS in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CssLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static CssLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. CssLanguage; public CssLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static CssLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html:1062,inherit,inherited,1062,javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/CssLanguage.html,2,['inherit'],['inherited']
Modifiability,"aScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.objects; Class FindConvexHullDetectionsPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class FindConvexHullDetectionsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to identify/remove detections from the convex hull of all detections.; ; Currently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:1048,plugin,plugins,1048,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['plugin'],['plugins']
Modifiability,"able. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:1623,inherit,inherited,1623,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,1,['inherit'],['inherited']
Modifiability,"able> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2228,inherit,inherited,2228,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['inherit'],['inherited']
Modifiability,"able> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2213,inherit,inherited,2213,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['inherit'],['inherited']
Modifiability,"ableGlyph(Glyph, boolean) - Static method in class qupath.lib.gui.tools.GuiTools. Ensure that a Glyph is 'duplicatable', optionally retaining any fill. ensureHandlesUpdated() - Method in class qupath.lib.roi.RoiEditor. In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. ensurePolygonal(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Strip non-polygonal parts from a GeometryCollection (non-recursive). ensureType(PixelType) - Static method in class qupath.opencv.ops.ImageOps.Core. Convert the Mat to match a specified pixel type. entrySet() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap;  ; envelopToRegion(Envelope, int, int) - Static method in class qupath.lib.roi.GeometryTools. Convert an Envelope to an ImageRegion. EOSIN - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. Eosin. EOSIN - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for eosin stain. Eosin_H_E - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. eq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Create a binary image showing where an array has a specific value. eq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Create a binary image showing where two arrays have matching values. equalParameters(ParameterList, ParameterList) - Static method in class qupath.lib.plugins.parameters.ParameterList. Check whether two parameter lists contain the same parameters with the same values (or defaults, if no values are set). equals(Object) - Method in class qupath.lib.common.Version;  ; equa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:280244,variab,variable,280244,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:1976,plugin,plugins,1976,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugins']
Modifiability,"abled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.classes; Enum Class PathClassFactory.StandardPathClasses. java.lang.Object; java.lang.Enum<PathClassFactory.StandardPathClasses>; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. All Implemented Interfaces:; Serializable, Comparable<PathClassFactory.StandardPathClasses>, Constable. Enclosing class:; PathClassFactory. public static enum PathClassFactory.StandardPathClasses; extends Enum<PathClassFactory.StandardPathClasses>; Enum representing standard classifications. Exists mostly to ensure consisting naming (including capitalization). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:1069,extend,extends,1069,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,1,['extend'],['extends']
Modifiability,"abled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1091,inherit,inherited,1091,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,1,['inherit'],['inherited']
Modifiability,"absolute value). structureTensorEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the eigenvalues of the structure tensor (not yet implemented!). SubcellularDetection - Class in qupath.imagej.detect.cells. Experimental plugin to help with the quantification of subcellular structures. SubcellularDetection() - Constructor for class qupath.imagej.detect.cells.SubcellularDetection;  ; Subcommand - Interface in qupath.lib.gui.extensions. A subcommand for the command line interface. submitShortTask(Runnable) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). submitShortTask(Runnable) - Method in class qupath.lib.gui.SharedThreadPoolManager. Submit a short task to a shared thread pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant from all pixels. subtract(Padding) - Method in class qupath.lib.regions.Padding. Add another padding from this one. subtract(ROI, Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Subtract a collection of ROIs from another ROI. subtract(ROI, ROI...) - Static method in class qupath.lib.roi.RoiTools. Subtract one or more ROIs from another ROI. SUBTRACT - Enum constant in enum class qupath.lib.roi.RoiTools.CombineOp. Subtract from first ROI. suggestNeighbor(ParallelTileObject) - Method in class qupath.lib.plugins.ParallelTileObject. Register a neighboring tile, if it intersects with the bounds of this one. sum() - Static method in class qupath.opencv.ops.ImageOps.Channels. Add all channels together, to give",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1001436,variab,variable,1001436,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976836,plugin,plugins,976836,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"aces inherited from interface qupath.lib.images.servers.ImageServerBuilder; ImageServerBuilder.AbstractServerBuilder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:1770,inherit,inherited,1770,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['inherit'],['inherited']
Modifiability,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10829,inherit,inherited,10829,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,2,['inherit'],['inherited']
Modifiability,"ackage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class ImageRegion. java.lang.Object; qupath.lib.regions.ImageRegion. Direct Known Subclasses:; RegionRequest. public class ImageRegion; extends Object; Class for defining an image region.; ; A boundary box is given in pixel coordinates, while z & t values are given as indices. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(int x,; int y,; int z,; int t). Check if this region contains a specified coordinate. static ImageRegion; createInstance(int x,; int y,; int width,; int height,; int z,; int t). Create a region based on its bounding box coordinates, z-slice index and time point index. static ImageRegion; createInstance(Collection<? extends ROI> rois). Create the smallest region that completely contains the specified ROIs. static ImageRegion; createInstance(ROI pathROI). Create the smallest region that completely contains a specified ROI. boolean; equals(Object obj);  ; int; getHeight(). Get the height of the region bounding box. ImagePlane; getImagePlane(). Get the z-slice and time point for this region as an ImagePlane. int; getMaxX(). Get the x coordinate of the bottom right of the region bounding box. int; getMaxY(). Get the y coordinate of the bottom right of the region bounding box. int; getMinX(). Get the x coordinate of the top left of the region bounding box. int; getMinY(). Get the y coordinate of the top left of the region bounding box. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). int; getT(). Get the time point index for the region. int; getWidth(). Get the width of the region bounding box. int; getX(). Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html:1124,extend,extends,1124,javadoc/docs/qupath/lib/regions/ImageRegion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html,1,['extend'],['extends']
Modifiability,actPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6666,plugin,plugins,6666,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"activePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - Constructor for class qupath.lib.plugins.AbstractInteractivePlugin;  ; AbstractObjectClassifier<T> - Class in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; Abstrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:3515,plugin,plugin,3515,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"actly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2357,plugin,plugins,2357,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugins']
Modifiability,"ad at the start. static final PathTool; BRUSH. Brush drawing tool. static final PathTool; ELLIPSE. Ellipse drawing tool. static final PathTool; LINE. Line drawing tool. static final PathTool; LINE_OR_ARROW. Extended PathTool that can switch between drawing lines or arrows. static final PathTool; MOVE. Move tool. static final PathTool; POINTS. Points annotation and counting tool. static final PathTool; POLYGON. Polygon drawing tool (closed). static final PathTool; POLYLINE. Polyline drawing tool (open). static final PathTool; RECTANGLE. Rectangle drawing tool. Constructor Summary; Constructors. Constructor; Description; PathTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathTool; createExtendedTool(PathTool... tools);  ; static PathTool; createTool(EventHandler<MouseEvent> handler,; String name,; Node icon). Create a tool from the specified MouseEvent handler. static <T extends Event>PathTool; createTool(EventType<T> type,; EventHandler<T> handler,; String name,; Node icon). Create a tool from the specified event handler. static PathTool; getTool(String pathToolString). Return the PathTool corresponding to the specified String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MOVE; public static final PathTool MOVE; Move tool. RECTANGLE; public static final PathTool RECTANGLE; Rectangle drawing tool. ELLIPSE; public static final PathTool ELLIPSE; Ellipse drawing tool. LINE; public static final PathTool LINE; Line drawing tool. ARROW_START; public static final PathTool ARROW_START; Arrow drawing tool, with arrowhead at the start. ARROW_END; public static final PathTool ARROW_END; Arrow drawing tool, with arrowhead at the end. ARROW_DOUBLE; public static final PathTool ARROW_DOUBLE; Arrow drawing tool, with arrowhead at both ends. LINE_OR_ARROW; public static final PathTool LINE_OR_ARROW; Extended",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html:1783,extend,extends,1783,javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,1,['extend'],['extends']
Modifiability,"ad. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DnnTools.DNNLayer. Helper class to summarize a DNN layer. Constructor Summary; Constructors. Constructor; Description; DnnTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static Mat; blobFromImage(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:1530,config,configuring,1530,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['config'],['configuring']
Modifiability,adata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericPa,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570468,plugin,plugins,570468,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ade, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27114,plugin,plugin,27114,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,2,['plugin'],['plugin']
Modifiability,"adocViewer. Name of the system property used to set the javadoc path. PROPERTIES - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDeta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:798914,variab,variable,798914,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"age is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769679,plugin,pluginCompleted,769679,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['pluginCompleted']
Modifiability,"age: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject> getTileObjects(); Get a list of the current tile objects. Returns:; Since:; v0.4.0; See Also:. getCurrentHierarchy(). getCellObjects; public static Collection<PathObject> getCellObjects(); Get a list of the current cell objects. Returns:; See Also:. getCurrentHierarchy()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:67564,plugin,plugin,67564,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"age; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1135,inherit,inherited,1135,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['inherit'],['inherited']
Modifiability,age>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.CellCountsCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.WatershedNucleiCV;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This sho,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:372373,plugin,plugins,372373,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"age> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Detail",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:1998,layers,layers,1998,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"ageData). Prompt to add a row to a TMA grid after the row containing the currently-selected object. static boolean; promptToAddRowBeforeSelected(ImageData<?> imageData). Prompt to add a row to a TMA grid before the row containing the currently-selected object. static boolean; promptToCreateTMAGrid(ImageData<?> imageData). Prompt the user to manually create a new TMA grid. static boolean; promptToDeleteTMAGridColumn(ImageData<?> imageData). Prompt to delete a column from a TMA grid. static boolean; promptToDeleteTMAGridRow(ImageData<?> imageData). Prompt to delete a row from a TMA grid. static void; promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Prompt to export summary TMA data for a specific image to a directory. static void; promptToImportTMAData(ImageData<?> imageData). Prompt to import TMA data for the specified image data. static void; promptToRelabelTMAGrid(ImageData<?> imageData). Prompt to relabel the core names within a TMA grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMACommands; public TMACommands(). Method Details. promptToAddNoteToSelectedCores; public static void promptToAddNoteToSelectedCores(ImageData<?> imageData); Prompt to type a node to associate with the selected TMA cores. Parameters:; imageData - . promptToExportTMAData; public static void promptToExportTMAData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Prompt to export summary TMA data for a specific image to a directory. Parameters:; qupath - ; imageData - . installDragAndDropHandler; public static void installDragAndDropHandler(QuPathGUI qupath); Command to install a drag and drop file handler for exported TMA data. Parameters:; qupath - QuPath instance to which the handler should be installed. promptToImportTMAData; public static void promptToImportTMAData(ImageData<?> imageData); Prompt to import TMA data for the specified imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html:2447,inherit,inherited,2447,javadoc/docs/qupath/lib/gui/commands/TMACommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/TMACommands.html,1,['inherit'],['inherited']
Modifiability,"ageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractPlugin. For a specified parent object, generate a task to run. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:27266,plugin,plugins,27266,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String). getImageJInstance; public static ImageJ getImageJInstance(); Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). Returns:; an ImageJ instance, or null if ImageJ could not be started. extractROI; public static PathImage<ImagePlus> extractROI(ImageServer<BufferedImage> server,; ROI pathROI,; RegionRequest request,; boolean setROI); throws IOException; Extract a region of interest from an image as an ImageJ ImagePlus. Parameters:; server - the image; pathROI - ; request - ; setROI - true if a ROI should be converted to the closest matching ImageJ Roi & set on the image, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:3859,plugin,plugins,3859,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['plugin'],['plugins']
Modifiability,"ageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addAllRegions(ImageServer<BufferedImage> server,; int level). Add all regions for a specific level of an ImageServer. void; changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:2501,extend,extends,2501,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['extend'],['extends']
Modifiability,"agePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a single band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate optical density values for the red, green and blue channels, then add these all together. static PathObject; convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsamp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:3531,extend,extends,3531,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['extend'],['extends']
Modifiability,"ageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. ImageJServer; public ImageJServer(URI uri,; String... args); throws IOException; Constructor. Parameters:; uri - URI representing the local file or an ImageJ-compatible URL; args - optional arguments (not currently used); Throws:; IOException. Method Details. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:2578,inherit,inherited,2578,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['inherit'],['inherited']
Modifiability,"ageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for the specified objects. setIntensityClassifications(PathObjectHierarchy, Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the specified hierarchy. setIntensityClassificationsForSelected(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set intensity classifications for all selected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:931027,extend,extends,931027,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"aged, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ImageDisplay>; imageDisplayObjectProperty(). The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:2937,inherit,inherited,2937,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"aged, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSliderPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; disableGammaAdjustmentProperty(). Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustmentProperty(). Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValueProperty(). Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplayProperty(). The image display to which the sliders are applied. DoubleProperty; maxValueProperty(). Value of the maximum slider. DoubleProperty; minValueProperty(). Value of the minimum slider. void; refreshSliders(). Refresh the sliders, to ensure they match with the current channel. void; resetAllSliders(). Reset all sliders to their default values. ObjectProperty<ChannelDisplayInfo>; selectedChannelProperty(). The channel to which the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:3300,inherit,inherited,3300,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"ages. qupath.lib.io - package qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.langua",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814150,plugin,plugins,814150,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ail(). Request a thumbnail for the image. boolean; hasImageData(). Check if this entry has saved ImageData already available. String; putMetadataValue(String key,; String value). Store a metadata value. PathObjectHierarchy; readHierarchy(). Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. ImageData<T>; readImageData(). Read the ImageData associated with this entry, or create a new ImageData if none is currently present. String; removeMetadataValue(String key). Remove a metadata value. void; saveImageData(ImageData<T> imageData). Save the ImageData for this entry using the default storage location for the project. void; setDescription(String description). Set the description. void; setImageName(String name). Set the image name for this project entry. void; setThumbnail(T img). Set a thumbnail for the image. default boolean; updateServerURIs(Map<URI,URI> replacements). Deprecated.; use instead UriResource.updateURIs(Map). Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. getID; String getID(); Get a unique ID to represent this entry. Returns:. setImageName; void setImageName(String name); Set the image name for this project entry. Parameters:; name - . getImageName; String getImageName(); Get a name that may be used for this entry.; ; This may be derived automatically from the server path, or set explicitly to be something else. ; It may also be randomized to support blinded analysis. Returns:; See Also:. getOriginalImageName(); Project.setMaskImageNames(boolean); Project.getMaskImageNames(). getOriginalImageName; String getOriginalImageName(); Get the original image name, without any randomization. Most UI elements should prefer getImageName() to ; ensure that the randomization does its job. Returns:. getEntryPath; Path getEntryPath(); Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system.; ; If not nu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:3212,inherit,inherited,3212,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['inherit'],['inherited']
Modifiability,"ain QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1018237,plugin,plugins,1018237,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ain QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:547103,plugin,plugins,547103,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"aining any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2832,plugin,plugins,2832,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"aining any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescript",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3327,plugin,plugins,3327,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builder - ; Returns:. getProviderClass; public Class<? extends ImageServerBuilder<T>> getProviderClass(); Get the class of the associated ImageServerBuilder. Returns:. getBuilders; public List<ImageServerBuilder.ServerBuilder<T>> getBuilders(); Get a list of ServerBuilders, one for each image that can be read based on the specified URI. ; For a 'simple' file that contains a single image, a singleton list should be returned. Returns:. getSupportLevel; public float getSupportLevel(); Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance.; ; The support level should be a value between 0 and 4. The following is a guide to its interpretation:; ; 4 - 'ideal' support, e.g. the image was written by the library behind the ImageServer; 3 - good support; 2 - unknown support, i.e. worth a try; 1 - partial/poor support, i.e. there are known limitations and all higher-scoring possibilities should be tried first; 0 - no support. The use of f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:3191,extend,extends,3191,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['extend'],['extends']
Modifiability,"al preprocessing ops to apply, before any in the model spec are added; Returns:. buildPatchClassifierParams; public static PatchClassifierParams buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; modelSpec - the model spec to initialize the parameters; preferredTileWidth - preferred tile width, or -1 to automatically determine this; the width will be updated based on the spec; preferredTileHeight - preferred tile height, or -1 to automatically determine this; the height will be updated based on the spec; inputOps - optional additional preprocessing ops to apply, before any in the model spec are added; Returns:. transformsToOp; public static ImageOp transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms); Create an ImageOp that applies the specified transforms sequentially.; ; Important!; This method is experimental and subject to change in future versions.; ; Not all Bioimage Model Zoo transforms are supported ; by QuPath ops, and ops are generally per tile whereas model zoo transforms ; sometimes require global statistics (e.g. for normalization).; ; This method will make an attempt to return a suitable op, but it may ; not be able to incorporate all steps. Parameters:; transforms - ; Returns:. transformToOp; public static ImageOp transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform); Create an ImageOp that applies the specified transforms, if possible.; ; Important!; This method is experimental and subject to change in future versions.; ; Not all Bioimage Model Zoo transforms are supported ; by QuPath ops, and ops are generally per tile whereas model zoo transforms ; s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html:3909,extend,extends,3909,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,1,['extend'],['extends']
Modifiability,"al-purpose processing and machine learning commands. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; ProcessingExtension.ObjectClassificationCommands;  ; static class ; ProcessingExtension.OpenCVCommands. Commands based on OpenCV. class ; ProcessingExtension.OtherCommands;  ; class ; ProcessingExtension.PixelClassificationCommands;  . Constructor Summary; Constructors. Constructor; Description; ProcessingExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:1568,inherit,inherited,1568,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,1,['inherit'],['inherited']
Modifiability,"aleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3352,inherit,inherited,3352,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['inherit'],['inherited']
Modifiability,"alizable, Comparable<PathIO.GeoJsonExportOptions>, Constable. Enclosing class:; PathIO. public static enum PathIO.GeoJsonExportOptions; extends Enum<PathIO.GeoJsonExportOptions>; Options to customize the export of PathObjects as GeoJSON. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXCLUDE_MEASUREMENTS. Optionally exclude measurements from objects. FEATURE_COLLECTION. Request that objects are export as a FeatureCollection. PRETTY_JSON. Request pretty-printing for the JSON. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathIO.GeoJsonExportOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PathIO.GeoJsonExportOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PRETTY_JSON; public static final PathIO.GeoJsonExportOptions PRETTY_JSON; Request pretty-printing for the JSON. This is more readable, but results in larger files. EXCLUDE_MEASUREMENTS; public static final PathIO.GeoJsonExportOptions EXCLUDE_MEASUREMENTS; Optionally exclude measurements from objects. This can reduce the file size substantially if measurements are not needed. FEATURE_COLLECTION; public static final PathIO.GeoJsonExportOptions FEATURE_COLLECTION; Request that objects are export as a FeatureCollection.; If this is not specified, individual objects will be export as Features - in an array if necessary. Method Details. values; public static PathIO.GeoJsonExportOptions[] values(); Returns an array containing the cons",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html:1568,inherit,inherited,1568,javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.GeoJsonExportOptions.html,1,['inherit'],['inherited']
Modifiability,"alizationType. Enclosing class:; LocalNormalization. public static class LocalNormalization.LocalNormalizationType; extends Object; Helper class to store local normalization parameters. Field Summary; Fields. Modifier and Type; Field; Description; final LocalNormalization.SmoothingScale; scale. Smoothing scale for Gaussian subtraction. final LocalNormalization.SmoothingScale; scaleVariance. Smoothing scale for Gaussian-weighted standard deviation estimate. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio). Get an object containing the parameters necessary for normalization. static LocalNormalization.LocalNormalizationType; getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance). Get an object containing the parameters necessary for normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. scale; public final LocalNormalization.SmoothingScale scale; Smoothing scale for Gaussian subtraction. scaleVariance; public final LocalNormalization.SmoothingScale scaleVariance; Smoothing scale for Gaussian-weighted standard deviation estimate. Method Details. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; LocalNormalization.SmoothingScale scaleVariance); Get an object containing the parameters necessary for normalization. Parameters:; scale - Gaussian sigma value used for initial filters (mean subtraction); scaleVariance - sigma value used for variance estimation (may be null to apply subtraction only); Returns:. getInstance; public static LocalNormalization.LocalNormalizationType getInstance(LocalNormalization.SmoothingScale scale,; double varianceScaleRatio); Get an objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html:1492,inherit,inherited,1492,javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.LocalNormalizationType.html,1,['inherit'],['inherited']
Modifiability,"alizationType>; Local normalization type. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN_MEAN_ONLY. Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE. Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. NONE. No local normalization. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LocalNormalization.NormalizationType; valueOf(String name). Returns the enum constant of this class with the specified name. static LocalNormalization.NormalizationType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final LocalNormalization.NormalizationType NONE; No local normalization. GAUSSIAN_MEAN_ONLY; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_ONLY; Subtract Gaussian-filtered image. GAUSSIAN_MEAN_VARIANCE; public static final LocalNormalization.NormalizationType GAUSSIAN_MEAN_VARIANCE; Subtract Gaussian-filtered image, then divide by a weighted estimate of the local standard deviation. Method Details. values; public static LocalNormalization.NormalizationType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LocalNormalization.NormalizationType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html:1818,inherit,inherited,1818,javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.NormalizationType.html,1,['inherit'],['inherited']
Modifiability,"all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects). Get the objects overlapping or close to a specified region. Collection<PathObject>; getObjectsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; getSelectionModel(). Get the selection model, which handles the selection status of objects. Collection<PathObject>; getTileObjects(). Get all tile objects in the hierarchy. TMAGrid; getTMAGrid(). Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. boolean; hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region). Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. boolean; insertPathObject(PathObject pathObject,; boolean fireChangeEvents). Insert an object into the hierarchy. boolean; insertPathObjects(Collection<? extend",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:5674,extend,extends,5674,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"alledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. static void; showMiniViewer(QuPathViewer viewer). Show a mini viewer window associated with a specific viewer. static void; showScriptEditor(QuPathGUI qupath). Show the script editor, or bring the window to the front if it is already open. static void; showScriptInterpreter(QuPathGUI qupath). Show a script interpreter window for a Qupath instance. static void; showTMACoreGridView(QuPathGUI qupath). Show a grid view for TMA core objects. static void; showTMAMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all TMA core objects. static void; showViewTracker(QuPathGUI qupath). Show a dialog to track the viewed region of an image. static void; showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData). Show the QuPath script editor with a script corresponding to the command history of a specified image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Commands; public Commands(). Method Details. insertSelectedObjectsInHierarchy; public static void insertSelectedObjectsInHierarchy(ImageData<?> imageData); Insert the selected objects in the hierarchy, resolving positions accordingly.; ; This causes smaller 'completely-contained' annotations to be positioned below larger containing annotations, ; and detections to be assigned to other annotations based on centroid location. Parameters:; imageData - the image data containing the hierarchy. promptToResolveHierarchy; public static void promptToResolveHierarchy(ImageData<?> imageData); Resolve parent-child relationships within the object hierarchy.; This means that objects will be arranged hierarchically, rather than as a flat list. Parameters:; imageData - the image data to process. createFullImageAnnotation; public static void createFullImageAnnot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:10418,inherit,inherited,10418,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['inherit'],['inherited']
Modifiability,"alse, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth.; ; Warning: This is not thread-safe.; Warning #2: imgOutput should be TYPE_INT_RGB. Parameters:; imgInput - ; imgOutput - ; Returns:. applyTransforms; @Deprecated; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts); Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). Convert an image to RGB by applying the specified ChannelDisplayInfos. Parameters:; imgInput - ; imgOutput - ; selectedChannels - ; useGrayscaleLuts - ; Returns:. applyTransforms; public static BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode); Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. Parameters:; imgInput - the input image to transform; imgOutput - optional output image (must be the same size as the input image, and RGB); selectedChannels - the channels to use; mode - the mode used to determine RGB colors for each channel; Returns:; an RGB image determined by transforming the input image using the specified channels. getTransformedV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:12974,extend,extends,12974,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['extend'],['extends']
Modifiability,alue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify a string representing the axes layout that the model expects as input. lazyInitialize(boolean) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Optionally request lazy initialization. LEGACY_KEY_UNIQUE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Deprecated. legacyPathToURI(String) - Static method in class qupath.lib.images.servers.ImageServerProvider. Method to help with converting legacy image paths to URIs. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify whether the legend should be shown or not. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify whether the legend should be shown or not. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:648518,layers,layers,648518,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,amChart.CountsTransformMode; qupath.lib.gui.charts.HistogramChart.DisplayMode; qupath.lib.gui.tools.IconFactory.PathIcons; qupath.lib.images.ImageData.ImageType; qupath.lib.gui.viewer.ImageInterpolation; qupath.lib.images.servers.ImageServerMetadata.ChannelType; qupath.lib.gui.actions.InfoMessage.MessageType; qupath.opencv.tools.LocalNormalization.NormalizationType; qupath.lib.gui.logging.LogManager.LogLevel; qupath.lib.measurements.MeasurementList.MeasurementListType; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature; qupath.lib.classifiers.Normalization; qupath.lib.analysis.features.ObjectMeasurements.Compartments; qupath.lib.analysis.features.ObjectMeasurements.Measurements; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType; qupath.opencv.dnn.OpenCVDnn.ModelType; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode; qupath.lib.plugins.ParallelTileObject.Status; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses; qupath.lib.io.PathIO.GeoJsonExportOptions; qupath.lib.objects.PathObjectFilter (implements java.util.function.Predicate<T>); qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes; qupath.lib.gui.prefs.PathPrefs.FontSize; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions; qupath.lib.images.servers.PixelType; qupath.lib.gui.prefs.QuPathStyleManager.Fonts; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters (implements qupath.lib.gui.viewer.RegionFilter); qupath.lib.roi.interfaces.ROI.RoiType; qupath.lib.roi.RoiTools.CombineOp; qupath.lib.images.servers.RotatedImageServer.Rotation; qupath.lib.color.StainVector.DefaultStains; qupath.lib.exte,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:45315,plugin,plugins,45315,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ame as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - ; isChanging - . fireObjectClassificationsChangedEvent; public void fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object classifications have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating objects have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating objects have changed, and may still be changing. Parameters:; source - ; pathObjects - ; isChanging - is true, listeners may choose not to respond until an event is fired with isChanging false. fireHierarchyChangedEvent; public void fireHierarchyChangedEvent(Object source,; PathObject pathObject); Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. Parameters:; source - ; pathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:20143,extend,extends,20143,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"ame of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to displa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3632,plugin,plugin,3632,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"ame(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3093,plugin,plugins,3093,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ame(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3588,plugin,plugins,3588,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ames, setChannels, setChannels, setColorDeconvolutionStains, setDefaultImageData, setDefaultProject, setDetectionIntensityClassifications, setDetectionIntensityClassifications, setImageType, setImageType, setIntensityClassifications, setIntensityClassifications, setIntensityClassifications, setIntensityClassificationsForSelected, setPixelSizeMicrons, setPixelSizeMicrons, setPixelSizeMicrons, setSelectedObject, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitAllAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSpecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12000,inherit,inherited,12000,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['inherit'],['inherited']
Modifiability,"an ImageJ overlay to QuPath.; ; Optionally measure the ROIs first, and include the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? exte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:1610,inherit,inherited,1610,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,1,['inherit'],['inherited']
Modifiability,"an; isCircle(). Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4024,inherit,inherited,4024,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['inherit'],['inherited']
Modifiability,"anager. Get the current selected font. fontSizeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; forceOverlayUpdate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Force the overlay displaying detections and annotations to be repainted. formatNumber(double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:313172,variab,variable,313172,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976324,extend,extends,976324,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401223,plugin,plugins,401223,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ances,; e.g. running through a GUI, or from a command line only. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTaskRunner(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collectio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:1718,extend,extends,1718,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['extend'],['extends']
Modifiability,"and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patchWidth - requested patch width; patchHeight - requested patch height; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(ImageOp... preprocessingOps); Define the preprocessing steps from an array.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. preprocessing; public PatchClassifierParams.Builder preprocessing(Collection<? extends ImageOp> preprocessingOps); Define the preprocessing steps from a collection.; Note that any existing preprocessing steps in the builder will ; be replaced by those provided here. Parameters:; preprocessingOps - ; Returns:. prediction; public PatchClassifierParams.Builder prediction(ImageOp predictionOp); Define the prediction image op, to be applied after preprocessing ; and before postprocessing. Parameters:; predictionOp - ; Returns:; See Also:. prediction(DnnModel, Padding, String...). prediction; public PatchClassifierParams.Builder prediction(DnnModel model,; Padding padding,; String... outputNames); Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. Parameters:; model - ; padding - ; outputNames - ; Returns:; See Also:. prediction(ImageOp). postprocessing; public PatchClassifierParams.Builder postprocessing(ImageOp... postprocessingOps); Define the postprocessing steps from an array.; Note that any existing postprocessing steps in the builder",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:6104,extend,extends,6104,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['extend'],['extends']
Modifiability,"and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Descript",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html:2278,inherit,inherited,2278,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.NormalBayesClassifierCV.html,1,['inherit'],['inherited']
Modifiability,"and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:2483,inherit,inherited,2483,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['inherit'],['inherited']
Modifiability,"andardPathClasses; extends Object; Enum representing standard classifications. Exists mostly to ensure consisting naming (including capitalization). Field Summary; Fields. Modifier and Type; Field; Description; static final PathClass; IGNORE. Ignore classification, indicating what should not be further measured (e.g. static final PathClass; IMAGE_ROOT. Root object classification. static final PathClass; IMMUNE_CELLS. Immune cell classification. static final PathClass; NECROSIS. Necrosis classification. static final PathClass; NEGATIVE. General class to represent something 'negative'. static final PathClass; OTHER. Other classification. static final PathClass; POSITIVE. General class to represent something 'positive'. static final PathClass; REGION. Region class. static final PathClass; STROMA. Stroma classification. static final PathClass; TUMOR. Tumor classification. Constructor Summary; Constructors. Constructor; Description; StandardPathClasses();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TUMOR; public static final PathClass TUMOR; Tumor classification. STROMA; public static final PathClass STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClass IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClass IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClass IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClass NECROSIS; Necrosis classification. OTHER; public static final PathClass OTHER; Other classification. REGION; public static final PathClass REGION; Region class. This behaves slightly differently from other classes, e.g. it is not filled in when applied to; annotations. Consequently it is good to heavily annotated regions, or possibly detected tissue ; containing further ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html:1546,inherit,inherited,1546,javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.StandardPathClasses.html,1,['inherit'],['inherited']
Modifiability,"ane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1622,inherit,inherited,1622,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"ane. static List<PathObject>; createAllFullImageAnnotations(boolean setSelected). Create annotation around the full image for the current image, on all z-slices and timepoints. static List<PathObject>; createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected). Create annotation around the full image for the specified image, on all z-slices and timepoints. static void; createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the current image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:10018,extend,extends,10018,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"anguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:799225,variab,variable,799225,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"annel, used in combination with ImageDisplay and ChannelDisplayInfo. Since:; v0.4.0; Author:; Pete Bankhead; See Also:. ImageDisplay; ChannelDisplayInfo. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDisplayMode COLOR; Show using default color LUT (may be composite). INVERTED_COLOR; public static final ChannelDisplayMode INVERTED_COLOR; Show using color LUT with an inverted background. GRAYSCALE; public static final ChannelDisplayMode GRAYSCALE; Show using a grayscale LUT (black to white). INVERTED_GRAYSCALE; public static final ChannelDisplayMode INVERTED_GRAYSCALE; Show using an inverted grayscale LUT (white to black). Method Details. values; public static ChannelDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:1689,inherit,inherited,1689,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,1,['inherit'],['inherited']
Modifiability,"annotation expansion. Constructor Summary; Constructors. Constructor; Description; DilateAnnotationPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteract",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:1966,extend,extends,1966,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['extend'],['extends']
Modifiability,"annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - packag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814459,plugin,plugins,814459,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"another ImagePlane, in the order t, z, c. boolean; equals(Object obj);  ; int; getC(). Get the channel index. static ImagePlane; getDefaultPlane(). Returns an ImagePlane with channel -1, z of 0 and t of 0. static ImagePlane; getPlane(int z,; int t). Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. static ImagePlane; getPlane(ImageRegion region). Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ(). Get the z-slice index. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getC; public int getC(); Get the channel index. This may be -1 to indicate no channel is specified. Returns:. getZ; public int getZ(); Get the z-slice index. Returns:. getT; public int getT(); Get the time point index. Returns:. compareTo; public int compareTo(ImagePlane o); Compare with another ImagePlane, in the order t, z, c. Specified by:; compareTo in interface Comparable<ImagePlane>. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getPlane; public static ImagePlane getPlane(int z,; int t); Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. set to -1). Parameters:; z - ; t - ; Returns:. getDefaultPlane; public static ImagePlane getDefaultPlane(); Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:2077,inherit,inherited,2077,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,1,['inherit'],['inherited']
Modifiability,"any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & opera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2479,plugin,plugins,2479,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['plugin'],['plugins']
Modifiability,"any object is changed. Parameters:; hierarchy - . toggleSelectedObjectsLocked; public static void toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy); Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleObjectsLocked; public static void toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Toggle the 'locked' status of specified objects. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. getAvailableFeatures; public static Set<String> getAvailableFeatures(Collection<? extends PathObject> pathObjects); Get a set containing the names of all measurements found in the measurement lists of a specified object collection. Parameters:; pathObjects - ; Returns:. createClassificationMap; public static Map<PathObject,PathClass> createClassificationMap(Collection<? extends PathObject> pathObjects); Create a mapping between PathObjects and their current PathClasses.; This can be useful to preserve a classification so that it may be reset later.; ; Note: classification probabilities are not retained using this approach. Parameters:; pathObjects - the objects containing classifications; Returns:; a mapping between objects and their current classifications; See Also:. restoreClassificationsFromMap(Map). restoreClassificationsFromMap; public static Collection<PathObject> restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap); Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). Parameters:; classificationMap - the map containing objects and the classifications that should be applied; Returns:; a collection containing all objects with classifications that were changed. This can be used to fire update events.; See Also:. createClassificationMap(Collection). getRepresentedPathCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:52973,extend,extends,52973,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"an debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:4849,plugin,plugins,4849,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugins']
Modifiability,"an keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurement",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60162,extend,extends,60162,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"apable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:2407,inherit,inherited,2407,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['inherit'],['inherited']
Modifiability,"apable of writing pyramidal images. boolean; supportsRGB(). Check if writer can handle RGB (it probably can...). boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageW",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:2401,inherit,inherited,2401,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['inherit'],['inherited']
Modifiability,"ape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request CUDA backend and target, if available, with 16-bit floating point. Returns:. target; public OpenCVDnn.Builder target(int target); Specify the target, e.g. opencv_dnn.DNN_TARGET_CUDA. Parameters:; target - ; Returns:; See Also:. cuda(); opencl(). backend; public OpenCVDnn.Builder ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:3022,config,config,3022,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,2,['config'],['config']
Modifiability,"arallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for multiple objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:28539,plugin,plugins,28539,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"arameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:955555,plugin,plugins,955555,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"arameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<T>; Parameters:; imageData - ; arg - ; Returns:. getLoggableParameters; protected ParameterList getLoggableParameters(ImageData<T> imageData); Get a copy of the current parameter list (with empty parameters removed) suitable for logging.; Subclasses might choose to append extra parameters here, which aren't part of the main list; (e.g. because they shouldn't be included in any automatically created dialog box). Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:4905,plugin,plugin,4905,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,3,"['plugin', 'variab']","['plugin', 'plugins', 'variables']"
Modifiability,"arameters necessary for normalization. getInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get a mapping between objects and instance labels. getInterpolation() - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Get the preferred method of interpolation to use for display. getIntParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a integer parameter value (or its default) for the specified key. getItem() - Method in class qupath.lib.gui.SelectableItem. Get the current item. getItems() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getItems() - Method in interface qupath.lib.gui.measure.PathTableData. Get internal list of the items used to provide measurements. getItems(UriUpdater.UriStatus) - Method in class qupath.lib.io.UriUpdater. Get all items with the specified status, or all items is status is null. getKeyValueParameters(boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameter values. getLabelMap() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get the map of classifications to labels. getLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get an unmodifiable map of classifications and their corresponding labels. getLanguageFromExtension(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). getLanguageFromName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Given a file name, determine the associated language - or null if no suitable (supported) language can be found. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.ri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:419637,plugin,plugins,419637,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"archy). Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations,; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static String[]; parseTMALabelString(String labelString). Parse a string input representing potential TMA core labels. static boolean; relabelTMAGrid(TMAGrid grid,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static Collection<PathObject>; removeOverlaps(Collection<? extends PathObject> pathObjects,; Comparator<PathObject> comparator,; double overlapTolerance). Resolve overlaps, discarding one and keeping the other. static Collection<PathObject>; removeOverlapsByLocation(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away. static Collection<PathObject>; removeOverlapsBySize(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. static Collection<PathObject>; restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap). Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). static PathClass; setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds). Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer). Given a collection of objects, spl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:10665,extend,extends,10665,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"archy. static void; addObjects(Collection<PathObject> pathObjects). Add the specified collection of objects to the current PathObjectHierarchy. static void; addObjects(PathObject[] pathObjects). Add the specified array of objects to the current PathObjectHierarchy. static void; addPixelClassifierMeasurements(String classifierName,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addShapeMeasurements(String... features). Add the specified shape measurements to the current selected objects of the current image. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures). Add shape measurements to the specified objects. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements to the specified objects. static String; buildFilePath(String first,; String... more). Build a file path from multiple components. static String; buildPathInProject(String... more). Build a file or directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified ve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:3171,extend,extends,3171,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"are declared. values() - Static method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.process.gui.WandToolEventHandler.WandType. Returns an array containing the constants of this enum class, in; the order they are declared. variance(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D circular variance filter. VARIANCE - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Variance value. varianceFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. varianceFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D local variance filter to all channels of an image. vConcat(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Vertical concatenation for a Mat. Version - Class in qupath.lib.common. Helper class for working with semantic versioning. VERSION - Static variable in class qupath.lib.scripting.QP. The current QuPath version, parsed according to semantic versioning. VIEW_TRACKER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; viewer - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; viewer - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; viewer - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; viewer(QuPathViewer) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify a viewer. viewer(QuPathViewer) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify a viewer. viewer(QuPathViewer) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify a viewer. VIEWER - Enum constant in enum class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1095708,extend,extends,1095708,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"arentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2032,inherit,inherited,2032,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"arentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2201,plugin,plugins,2201,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['plugin'],['plugins']
Modifiability,"arentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:3442,plugin,plugin,3442,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"arge. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public static Geometry estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale); Estimate a cell boundary using Geometry objects.; This avoids the need to create ROI or PathObject first. Parameters:; geomNucleus - Geometry representing the cell nucleus; distance - distance to expand the nucleus, in pixels; nucleusScale - optional maximum expansion distance defined in terms of scaling the nucleus ROI about its cent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3439,extend,extends,3439,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['extend'],['extends']
Modifiability,array.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method i,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526207,plugin,plugins,526207,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"arts.BarChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.BarChartBuilder; parent(Window parent). Set the parent window. Charts.BarChartBuilder; series(String name,; String[] x,; double[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:2927,extend,extends,2927,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"arts.Charts.ScatterChartBuilder. Create a scatterplot using collections of numeric values, with an associated custom object. series(String, double[], double[], T[]) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot using collections of numeric values, with an associated custom object. series(String, String[], double[]) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using arrays of String values and associated numeric values. series(String, String[], double[], List<T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections of String values and associated numeric values, with an associated custom object. series(String, String[], double[], T[]) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections String values and associated numeric values, with an associated custom object. series(String, Collection<? extends Number>, Collection<? extends Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot using collections of numeric values. series(String, Collection<? extends String>, Collection<T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections of numeric values. series(String, Collection<? extends T>, Function<T, Number>, Function<T, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<? extends T>, Function<T, PathClass>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<XYChart.Data<Number, Number>>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot from existing data plots. series(String, Collection<XYChart.Data<String, Number>>) - Method in class qupath.lib.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:910392,extend,extends,910392,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['extend'],['extends']
Modifiability,"arts.PieChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.PieChartBuilder. Enclosing class:; Charts. public static class Charts.PieChartBuilder; extends Object; Builder for creating pie charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Charts.PieChartBuilder; addSlice(Object name,; Number value). Add a slice to the pie. PieChart; build(). Build a chart according to the specified parameters. Charts.PieChartBuilder; convertToPercentages(boolean doConvert). Request that pie chart values are converted to percentages for tooltips. protected PieChart; createNewChart();  ; Charts.PieChartBuilder; data(Map<?,? extends Number> data). Specify data for the pie chart as a map. protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.PieChartBuilder; getThis();  ; Charts.PieChartBuilder; height(double height). Set the preferred height of the chart. Charts.PieChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.PieChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.PieChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.PieChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.PieChartBuilder; parent(Window parent). Set the parent window. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.PieChartBuilder; siz",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:1380,extend,extends,1380,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,1,['extend'],['extends']
Modifiability,"ary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class JsonLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.JsonLanguage. public class JsonLanguage; extends ScriptLanguage; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of JSON syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; JsonLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static JsonLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. JsonLanguage; public JsonLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static JsonLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html:1186,inherit,inherited,1186,javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/JsonLanguage.html,2,['inherit'],['inherited']
Modifiability,"aryImage; public static ByteProcessor makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence); Make a binary image depicting (hopefully) the TMA cores.; The diameter of each core, in pixels, is used to determine filter sizes:; - for background estimation (morphological opening); - for morphological cleaning of the thresholded image; The threshold itself is computed using the triangle method. Parameters:; ip - - the TMA slide image - this should show cores as dark-on-light (or in colour).; Fluorescence images may be inverted beforehand.; coreDiameterPx - - typical diameter of a TMA core, given in pixels; roi - - optionally null; everything outside the ROI will be set to zero.; isFluorescence - - true if this is a fluorescence image, false if it is brightfield.; Returns:; ByteProcessor with detected regions having values 255, background having the value 0. fitCorePolygonToGrid; public static Polygon fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical); Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid.; Essentially this amounts to sorting the points starting from the top left,; continuing along each row.; In practice the process is more complicated (and less certain to be correct...); because coordinates in the same TMA row cannot be trusted to occur with the same image y coordinate,; similarly coordinates in the same TMA column can have different x coordinates. Parameters:; poly - - The original centroid coordinates; this should have exactly nHorizontal * nVertical points.; coreDiameterPx - - Approximate diameter of one TMA core (used to determine potential variability between core centroids); nHorizontal - - The number of cores in each row; nVertical - - The number of cores in each column; Returns:; A polygon of TMA cores, with the order going from top-left, one row at a time.; If the input polygon has the wrong number of points, null is returned. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:4339,variab,variability,4339,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['variab'],['variability']
Modifiability,"asonably similar ; intensities or textures, which might then be classified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2124,plugin,plugin,2124,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugin']
Modifiability,"ass ImageDisplay. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer; qupath.lib.display.ImageDisplay. All Implemented Interfaces:; ImageRenderer. public class ImageDisplay; extends AbstractImageRenderer; Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings.; ; Warning! This implementation is likely to change in a future version. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; LongProperty; changeTimestamp. Timestamp for the most recent change. ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannel. Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. BooleanProperty; useGrayscaleLut. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; aut",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:1347,inherit,inherited,1347,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['inherit'],['inherited']
Modifiability,"ass OpenSlideLoader. java.lang.Object; qupath.lib.images.servers.openslide.jna.OpenSlideLoader. public class OpenSlideLoader; extends Object; Static helper class to manage loading the OpenSlide library. Constructor Summary; Constructors. Constructor; Description; OpenSlideLoader();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; detectVendor(String path). Try to detect the vendor of the image at the specified path. static String; getLibraryVersion(). Get the version of the OpenSlide library. static boolean; isOpenSlideAvailable(). Query whether OpenSlide has already been loaded. static OpenSlide; openImage(String path). Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata. static boolean; tryToLoad(String... searchPath). Try to load OpenSlide. static boolean; tryToLoadQuietly(String... searchPath). Try to load OpenSlide, but don't throw an exception if it fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:1373,inherit,inherited,1373,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['inherit'],['inherited']
Modifiability,"ass Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; COLOR. Show using default color LUT (may be composite). GRAYSCALE. Show using a grayscale LUT (black to white). INVERTED_COLOR. Show using color LUT with an inverted background. INVERTED_GRAYSCALE. Show using an inverted grayscale LUT (white to black). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; invertColors();  ; static ChannelDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static ChannelDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. COLOR; public static final ChannelDisplayMode COLOR; Show using default color LUT (may be composite). INVERTED_COLOR; public static final ChannelDisplayMode INVERTED_COLOR; Show using color LUT with an inverted background. GRAYSCALE; public static final ChannelDisplayMode GRAYSCALE; Show using a grayscale LUT (black to white). INVERTED_GRAYSCALE; public static final ChannelDisplayMode INVERTED_GRAYSCALE; Show using an inverted grayscale LUT (white to black). Method Details. values; public static ChannelDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ChannelDisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html:1852,inherit,inherited,1852,javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayMode.html,1,['inherit'],['inherited']
Modifiability,"ass Summary; Nested Classes. Modifier and Type; Class; Description; static class ; FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. Constructor Summary; Constructors. Constructor; Description; FeaturePreprocessor();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; apply(Mat mat). Apply preprocessing in-place. void; apply(Mat mat,; boolean channelFeatures). Apply preprocessing in-place. static FeaturePreprocessor.Builder; builder(). Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. boolean; doesFeatureTransform(). Returns true if this preprocessor transforms the features beyond a simple normalization. boolean; doesSomething(). Returns true if this preprocessor has any effect. int; getInputLength(). Get the number of features required of the input. int; getOutputLength(). Get the number of features expected in the output. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. FeaturePreprocessor; public FeaturePreprocessor(). Method Details. apply; public void apply(Mat mat,; boolean channelFeatures); Apply preprocessing in-place. Parameters:; mat - ; channelFeatures - treat each channel as a feature; otherwise, treat each column as a feature. apply; public void apply(Mat mat); Apply preprocessing in-place.; If the Mat has multiple channels, each channel is treated as a feature.; Otherwise, each row is treated as a feature. Parameters:; mat - . doesFeatureTransform; public boolean doesFeatureTransform(); Returns true if this preprocessor transforms the features beyond a simple normalization.; In practice, for the current implementation this means PCA. Returns:. doesSomething; public boolean doesSomething(); Returns true if this preprocessor has any effect. Returns:. getInputLength; public int getInputLength(); Get the number o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html:1620,inherit,inherited,1620,javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/FeaturePreprocessor.html,1,['inherit'],['inherited']
Modifiability,"ass in qupath.lib.extension.svg. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools() - Constructor for class qupath.lib.extension.svg.SvgTools;  ; SvgTools.SvgBuilder - Class in qupath.lib.extension.svg. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType - Enum Class in qupath.lib.extension.svg. Enum defining ways in which raster images may be included in the SVG file. swapNameAndClass(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Swap the name and PathClass of an object. swapRGBOrder(BufferedImage, String) - Static method in class qupath.lib.awt.common.BufferedImageTools. Swap the order of pixels in an RGB image. switchToGrayscaleChannelProperty() - Method in class qupath.lib.display.ImageDisplay. Property indicating which channel should be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.Preferen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1015690,variab,variable,1015690,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ass qupath.lib.gui.scripting.DefaultScriptEditor;  ; COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125848,plugin,plugins,125848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ass qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the name of the command. getTextField(Parameter<?>, int) - Method in class qupath.lib.gui.dialogs.Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:529837,plugin,plugins,529837,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ass:; ColorDeconvolutionStains. public static enum ColorDeconvolutionStains.DefaultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. H_E; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_E; Hematoxylin and eosin. H_DAB; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_DAB; Hematoxylin and DAB. Method Details. values; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html:1793,inherit,inherited,1793,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,1,['inherit'],['inherited']
Modifiability,"assFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; However rather than set this as the object classification, it will be used to set the name and color of the object ; (so as to avoid overriding an existing classification).; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object names based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:8925,extend,extends,8925,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:2109,extend,extends,2109,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,1,['extend'],['extends']
Modifiability,"astHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:4120,inherit,inherited,4120,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"asurement list of the source objects. CHANGE_CLASSIFICATION - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more object classifications. CHANGE_MEASUREMENTS - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more object measurements. CHANGE_OTHER - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more objects that is more complex than the other changes allow for. changed(ObservableValue<? extends QuPathViewer>, QuPathViewer, QuPathViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:90535,extend,extends,90535,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"asurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,; ColorModel colorModel,; boolean cacheAllTiles). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new ImageServer by applying",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:4810,extend,extends,4810,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['extend'],['extends']
Modifiability,"at a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of a prediction) to a list of mats. fromCollection(Collection<String>) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass using all the name elements specified in the collection, ; without providing a default color.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:313525,variab,variable,313525,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"at nucleus segmentation.; ; It's reasonably fast... but not particularly good. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; WatershedNucleiCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:1884,plugin,plugin,1884,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugin']
Modifiability,"ata through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2312,inherit,inherited,2312,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"ata will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3627,plugin,plugins,3627,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugins']
Modifiability,"ata.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. qupath.lib.images.servers.ImageServer.readBufferedImage(RegionRequest). since v0.4.0",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:3828,extend,extends,3828,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,"ata; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveTMAMeasurements; public static void saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save TMA measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save detection measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the current image for objects of a fixed type. Parameters:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:21970,extend,extends,21970,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['extend'],['extends']
Modifiability,"ata<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current project. FLAT - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Flat cap. flatness(double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the flatness for any operation where a PathIterator is required. f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:310244,extend,extends,310244,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ata<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3314,plugin,plugins,3314,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugins']
Modifiability,"ata<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2325,plugin,plugins,2325,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ate a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:2020,layers,layers,2020,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"ate(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; translate(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; translate(int, int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK - Static variable in class qupath.lib.color.ColorToolsAwt. Black, with 50% opacity. TRANSLUCENT_BLACK_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. Black with opacity at 50%. TRANSLUCENT_WHITE - Static variable in class qupath.lib.color.ColorToolsAwt. White, with 50% opacity. TRANSLUCENT_WHITE_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. White with opacity at 50%. TRANSPARENT - Static variable in class qupath.lib.images.servers.ImageChannel. Special color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<? extends PathObject>, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. tryToInterpretMessage(Throwable, int, boolean) - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1054201,variab,variable,1054201,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"atePixelClassificationServer(ImageData<BufferedImage>, PixelClassifier, String, ColorModel, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<PixelClassifier>, StringExpression) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Create a standard button pane for pixel classifiers, to create, measure and classify objects. createPlugin(Class<? extends PathPlugin>) - Method in class qupath.lib.gui.QuPathGUI. Create a plugin from a specified class. createPluginAction(String, Class<? extends PathPlugin>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an action for a plugin to be run through this QuPath instance. createPluginAction(String, PathPlugin<BufferedImage>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action to call the specified plugin for the current image. createPointsEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPointsROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from an array of x and y coordinates. createPointsROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI containing a single point. createPointsROI(List<? extends Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from a list of points. createPointsROI(ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an empty points ROI. createPolygonEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPolygonROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a polygon ROI from an array of x and y coordinates. createPolygonROI(double, double, ImagePlane) - S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:210048,plugin,plugin,210048,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"ated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. File; getFile(). Get the underlying file. String; getFormat(). Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). OMEPyramidStore; getMetadataStore(). Get the MetadataStore, as used by Bio-Formats. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. int; getSeries(). Get the series index, as used by Bio-Formats. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:2742,inherit,inherited,2742,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,1,['inherit'],['inherited']
Modifiability,"ated.; Add a row of nodes. addGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Add a new connections group. addImage(ImageServerBuilder.ServerBuilder<T>) - Method in interface qupath.lib.projects.Project. Add an image for a particular ImageServer. addIntensityMeasurements(ImageServer<BufferedImage>, PathObject, double, Collection<ObjectMeasurements.Measurements>, Collection<ObjectMeasurements.Compartments>) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Measure all channels of an image for one individual object or cell. addIntParameter(String, String, int) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter. addIntParameter(String, String, int, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded int parameter, with optional unit and help text. addIntParameter(String, String, int, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter, with optional unit and help text. addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new DropHandler specifically for JSON elements. addLabel(String, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by classname, where the label represents the integer label used for ; annotations with the given classname. addLabel(String, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by classname, where the label represents the integer label used for ; annotations with the given classname. addLabel(PathClass, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by PathClass, where the label represents the integer label used for ; annotations with the given classification. addLabel(PathClass, int, Integer) - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:17817,plugin,plugins,17817,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.servers; Class RenderedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.gui.images.servers.RenderedImageServer. All Implemented Interfaces:; AutoCloseable, GeneratingImageServer<BufferedImage>, ImageServer<BufferedImage>. public class RenderedImageServer; extends AbstractTileableImageServer; implements GeneratingImageServer<BufferedImage>; An ImageServer that can display a rendered image, with optional overlays.; This is intended for use when exporting 'flattened' RGB images. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). static ImageServer<BufferedImage>; createRenderedServer(QuPathViewer viewer). Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. static ImageServer<BufferedImage>; createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer). Create an ImageServer that converts the image to RGB using the specified ImageRenderer. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:1183,layers,layers,1183,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['layers'],['layers']
Modifiability,"ately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParamete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:4306,plugin,plugin,4306,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['plugin'],['plugin']
Modifiability,ater.UriStatus. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.PathObjectFilter. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.utils.Tiler.TileAlignment. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.plugins.ParallelTileObject.Status. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.roi.interfaces.ROI.RoiType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.roi.RoiTools.CombineOp. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.tools.LocalNormalization.NormalizationType. Returns ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1084271,plugin,plugins,1084271,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class BioFormatsOptionsExtension.BioFormatsPreferences. java.lang.Object; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences. Enclosing class:; BioFormatsOptionsExtension. @PrefCategory(""Prefs.BioFormats""); public static class BioFormatsOptionsExtension.BioFormatsPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final BooleanProperty; enableBioformats;  ; final BooleanProperty; filesOnly;  ; final IntegerProperty; memoizationTimeMillis;  ; final StringProperty; pathMemoization;  ; final StringProperty; skipExtensions;  ; final StringProperty; useExtensions;  ; final BooleanProperty; useParallelization;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. enableBioformats; @BooleanPref(""Prefs.BioFormats.enable""); public final BooleanProperty enableBioformats. filesOnly; @BooleanPref(""Prefs.BioFormats.localOnly""); public final BooleanProperty filesOnly. useParallelization; @BooleanPref(""Prefs.BioFormats.useParallelization""); public final BooleanProperty useParallelization. memoizationTimeMillis; @IntegerPref(""Prefs.BioFormats.memoizationTimeMillis""); public final IntegerProperty memoizationTimeMillis. pathMemoization; @DirectoryPref(""Prefs.BioFormats.pathMemoization""); public final StringProperty pathMemoization. useExtensions; @StringPref(""Prefs.BioFormats.alwaysUseExtensions""); public final StringProperty useExtensions. skipExtensions; @StringPref(""Prefs.BioFormats.skipExtensions""); public final StringProperty skipExtensions. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html:1122,inherit,inherited,1122,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.BioFormatsPreferences.html,1,['inherit'],['inherited']
Modifiability,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1007,variab,variable,1007,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['variab'],['variable']
Modifiability,ath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:28688,plugin,plugins,28688,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"ath. getDefaultStaticImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default static imports that should be included with the script, where possible. getDefaultThumbnail(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDefaultThumbnail(int, int) - Method in interface qupath.lib.images.servers.ImageServer. Get the default thumbnail for a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoom",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:375566,plugin,plugins,375566,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ath... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3465,inherit,inherited,3465,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['inherit'],['inherited']
Modifiability,"ath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String representation of QuPath's version, if known. getVersion() - Method in class qupath.lib.gui.BuildInfo. Get the version, or null if the version is unknown. getVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get the version of the current extension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:549009,plugin,plugins,549009,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath.lib.plugins.parameters, ; qupath.lib.plugins.workflow, ; qupath.lib.projects, ; qupath.lib.regions, ; qupath.lib.roi, ; qupath.lib.roi.interfaces, ; qupath.lib.scripting, ; qupath.lib.scripting.languages, ; qupath.opencv, ; qupath.opencv.dnn, ; qupath.opencv.features, ; qupath.opencv.io, ; qupath.opencv.ml, ; qupath.opencv.ml.objects, ; qupath.opencv.ml.objects.features, ; qupath.opencv.ml.pixel, ; qupath.opencv.ops, ; qupath.opencv.tools, ; qupath.process.gui, ; qupath.process.gui.commands, ; qupath.process.gui.commands.density, ; qupath.process.gui.commands.ml, ; qupath.process.gui.commands.ui, ; qupathj. Class Hierarchy. java.lang.Object. qupath.opencv.dnn.AbstractDnnModel<T> (implements qupath.opencv.dnn.DnnModel). qupath.opencv.dnn.OpenCVDnn (implements qupath.lib.io.UriResource). qupath.lib.gui.images.stores.AbstractImageRenderer (implements qupath.lib.gui.images.stores.ImageRenderer). qupath.lib.display.ImageDisplay. qupath.lib.images.servers.AbstractImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:2429,plugin,plugins,2429,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; BAR - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as bars. barChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.ScatterChartBuilder for generating a custom scatter plot. baseClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:53673,variab,variable,53673,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.BufferedImageOverlay. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, PathOverlay. public class BufferedImageOverlay; extends AbstractImageOverlay; implements ChangeListener<ImageData<BufferedImage>>; An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer.; ; The scaling for the BufferedImage is determined by an associated ImageRegion. Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; BufferedImageOverlay(OverlayOptions options). Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addAllRegions(ImageServer<BufferedImage> server,; int level). Add all regions for a specific level of an ImageServer. void",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:1477,extend,extends,1477,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['extend'],['extends']
Modifiability,ath.lib.images.servers.ImageServerMetadata;  ; toString() - Method in class qupath.lib.images.servers.PixelCalibration;  ; toString() - Method in enum class qupath.lib.images.servers.RotatedImageServer.Rotation;  ; toString() - Method in class qupath.lib.images.servers.TileRequest;  ; toString() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; toString() - Method in class qupath.lib.objects.classes.PathClass;  ; toString() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; toString() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent;  ; toString() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy;  ; toString() - Method in class qupath.lib.objects.PathObject;  ; toString() - Method in enum class qupath.lib.objects.PathObjectFilter;  ; toString() - Method in class qupath.lib.objects.PathRootObject;  ; toString() - Method in class qupath.lib.objects.TMACoreObject;  ; toString() - Method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap;  ; toString() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; toString() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; toString() - Method in class qupath.lib.regions.ImagePlane;  ; toString() - Method in class qupath.lib.regions.ImageRegion;  ; toStri,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1041294,plugin,plugins,1041294,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anyth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:3349,plugin,plugin,3349,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugin']
Modifiability,"ath.lib.roi.GeometryROI (implements java.io.Serializable); qupath.lib.roi.GeometryTools; qupath.lib.roi.GeometryTools.GeometryConverter; qupath.lib.roi.GeometryTools.GeometryConverter.Builder; qupath.lib.gui.extensions.GitHubProject.GitHubRepo; qupath.lib.gui.viewer.GridLines; qupath.opencv.tools.GroovyCV; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.io.GsonTools; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T> (implements com.google.gson.TypeAdapterFactory); qupath.lib.gui.tools.GuiTools; qupath.lib.analysis.features.HaralickFeatureComputer; qupath.lib.analysis.features.HaralickFeatures; qupath.lib.gui.actions.menus.HelpMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.HelpMenuActions.Actions; qupath.lib.analysis.stats.Histogram; qupath.lib.gui.charts.HistogramChart.HistogramData; qupath.lib.gui.charts.HistogramDisplay (implements qupath.lib.plugins.parameters.ParameterChangeListener); qupath.lib.gui.tools.IconFactory; qupath.imagej.gui.IJExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.imagej.gui.IJExtension.IJExtensionCommands; qupath.imagej.tools.IJTools; qupath.lib.images.servers.ImageChannel; qupath.lib.images.ImageData<T> (implements qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.plugins.workflow.WorkflowListener); qupath.lib.gui.panes.ImageDetailsPane (implements javafx.beans.value.ChangeListener<T>, java.beans.PropertyChangeListener); qupath.lib.display.settings.ImageDisplaySettings; qupath.lib.experimental.pixels.ImageJProcessor; qupath.imagej.images.servers.ImageJServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.opencv.ops.ImageOps; qupath.opencv.ops.ImageOps.Channels; qupath.opencv.ops.ImageOps.Core; qupath.opencv.ops.ImageOps.Filters; qupath.opencv.ops.ImageOps.ML; qupath.opencv.ops.ImageOps.Normalize; qupath.opencv.ops.ImageOps.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:16628,plugin,plugins,16628,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ath.lib.scripting.QP. Duplicate the selected annotations in the specified hierarchy. duplicateSelectedObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate the selected objects. dyadicDownsampling() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Downsample by factors of 2. E. EditableText - Interface in qupath.lib.gui.scripting. Interface for objects that manage editable text, including a caret position and selection. EditMenuActions - Class in qupath.lib.gui.actions.menus;  ; EditMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; EditMenuActions.CopyActions - Class in qupath.lib.gui.actions.menus;  ; editSelectedAnnotation(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Prompt to edit the selected annotation by translation and rotation. effectiveNChannels(int) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; ELLIPSE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Ellipse drawing tool. ELLIPSE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ELLIPSE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; EllipseROI - Class in qupath.lib.roi. ROI implementing a circle, or (unrotated) ellipse. EMBED - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Embed the image (as Base64-encoded PNG). embedImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be embedded in any export. empty() - Static method in class qupath.lib.regions.Padding. Get an empty padding object (0 on all sides). EmptyParameter - Class in qupath.lib.plugins.parameters. Parameter that doesn't actually store any value, but might contain some ; useful text (or a title) that may need to be displayed. enableBioformats - Variable in class qupath.lib.images.servers.bioformats.BioFormats",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:276646,variab,variable,276646,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ath.opencv.DetectCytokeratinCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DetectCytokeratinCV; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect tumor regions stained with cytokeratin. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParamet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:1577,plugin,plugin,1577,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugin']
Modifiability,"ath.opencv.DetectCytokeratinCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.WatershedNucleiCV;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default compression type when writing OME-TIFF images. getDefaultQuPathUserDirectory",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:372854,plugin,plugins,372854,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,athObjectComparator (QuPath 0.5.0); DefaultPathObjectConnectionGroup (QuPath 0.5.0); MetadataStore (QuPath 0.5.0); qupath.lib.objects (QuPath 0.5.0); qupath.lib.objects Class Hierarchy (QuPath 0.5.0); PathAnnotationObject (QuPath 0.5.0); PathCellObject (QuPath 0.5.0); PathDetectionObject (QuPath 0.5.0); PathObject (QuPath 0.5.0); PathObjectConnectionGroup (QuPath 0.5.0); PathObjectConnections (QuPath 0.5.0); PathObjectFilter (QuPath 0.5.0); PathObjectPredicates (QuPath 0.5.0); PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:28128,plugin,plugins,28128,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"athObjectPredicate; baseClassification(PathClass... pathClasses). Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. static PathObjectPredicates.PathObjectPredicate; containsClassification(String... names). Predicate that returns true if any component of its classification has any of the specified names. static PathObjectPredicates.PathObjectPredicate; exactClassification(PathClass... pathClasses). Predicate that returns true if a PathObject has at least one of the specified PathClasses. static PathObjectPredicates.PathObjectPredicate; filter(PathObjectFilter filter). Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other predicates. static PathObjectPredicates.PathObjectPredicate; positiveClassification(boolean allowGradedIntensity). Predicate that returns true of an object has a positive classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectPredicates; public PathObjectPredicates(). Method Details. positiveClassification; public static PathObjectPredicates.PathObjectPredicate positiveClassification(boolean allowGradedIntensity); Predicate that returns true of an object has a positive classification. Parameters:; allowGradedIntensity - if true, 1+, 2+ and 3+ are also interpreted as positive; ; otherwise, only a final class component of ""Positive"" returns true.; Returns:; See Also:. PathClassTools.isPositiveClass(PathClass); PathClassTools.isGradedIntensityClass(PathClass); PathClassTools.isPositiveOrGradedIntensityClass(PathClass). filter; public static PathObjectPredicates.PathObjectPredicate filter(PathObjectFilter filter); Wrap a PathObjectFilter as a PathObjectPredicates.PathObjectPredicate so that it can remain JSON-serializable ; when used in combination with other p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html:1991,inherit,inherited,1991,javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.html,1,['inherit'],['inherited']
Modifiability,"athObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a startup script that should be run immediately after QuPath's launch. StatisticsHelper - Class in qupath.lib.analysis.stats. Static methods for computing statistics from images, with or without a corresponding labeled image. StatisticsHelper() - Constructor for class qupath.lib.analysis.stats.StatisticsHelper;  ; statM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:996032,plugin,plugin,996032,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"athObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2143,plugin,plugin,2143,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugin']
Modifiability,"athPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:1729,inherit,inherited,1729,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,1,['inherit'],['inherited']
Modifiability,"athROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathDetectionObject; public PathDetectionObject(); Default constructor. Should not be used directly, instead use PathObjects.createDetectionObject(ROI). PathDetectionObject; protected PathDetectionObject(ROI pathROI,; PathClass pathClass); Create a new PathDetectionObject with a float measurement list. Parameters:; pathROI - ; pathClass - . Method Details. isEditable; public boolean isEditable(); Always returns false - detection objects shouldn't be edited. Overrides:; isEditable in class PathROIObject; Returns:. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Default to a simple, float measurement list. Overrides:; createEmptyMeasurementList in class PathObject; Returns:. getMetadata; public Map<String,String> getMetadata(); Get a map of metadata values.; Note that, for detection objects, this map is unmodifiable to av",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html:2580,inherit,inherited,2580,javadoc/docs/qupath/lib/objects/PathDetectionObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathDetectionObject.html,1,['inherit'],['inherited']
Modifiability,"athROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. suggestNeighbor; public boolean suggestNeighbor(ParallelTileObject pto); Register a neighboring tile, if it intersects with the bounds of this one. Parameters:; pto - ; Returns:. updateStatus; public void updateStatus(ParallelTileObject.Status status); Notify the object if it is currently being processed.; ; This is used to update how it is displayed (here implemented using a classification). Parameters:; status - . getStatus; public ParallelTileObject.Status getStatus(); Get the current status (pending, processing or done). Returns:. isProcessing; public boolean isProcessing(); Returns true if setIsProcessing(true) has recently been called. Returns:. isComplete; public boolean isComplete(); Returns true if setComplete() has been called. Returns:. setComplete; public void setComplete(boolean wasCancelled); Notify the tile that its processing is done.; ; This b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:3207,inherit,inherited,3207,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,1,['inherit'],['inherited']
Modifiability,"atic method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30553,plugin,plugins,30553,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"atic method in class qupath.opencv.tools.GroovyCV. Split channels of an array. splitChannels(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Split channels from a Mat. splitConnectedRegions(SparseImageServer, double, boolean) - Static method in class qupath.lib.images.servers.SparseImageServer. Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. splitDivide(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by dividing corresponding values. splitGeometryByLineStrings(Geometry, Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Split an input polygonal geometry using a collection of split lines. splitLines(String) - Static method in class qupath.lib.common.GeneralTools. Split new lines (in a cross-platform way... splitMerge(Collection<? extends ImageOp>) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMerge(ImageOp...) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMultiply(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. splitNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Get a list containing the names of all constituent parts of a PathClass. SplitProjectTrainingCommand - Class in qupath.process.gui.commands. Divide a project into training, validation and test sets but flagging individual image entries. SplitProjectTrainingCommand(QuPathGUI) - Construct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:990937,extend,extends,990937,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"atic void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to conta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31571,plugin,plugin,31571,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"ation and a scaling factor. PatchClassifierParams.Builder; outputChannelType(ImageServerMetadata.ChannelType channelType). Define the channel type for the output. PatchClassifierParams.Builder; outputClasses(Map<Integer,PathClass> outputClasses). Define the classifications for the output as a map. PatchClassifierParams.Builder; outputClasses(PathClass... outputClasses). Define the classifications for the output as an array. PatchClassifierParams.Builder; outputClassNames(String... outputClasses). Define the classifications for the output as an array of classification names. PatchClassifierParams.Builder; outputClassNames(Map<Integer,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:2666,extend,extends,2666,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['extend'],['extends']
Modifiability,"ation to the output labels. Parameters:; op - ; inputResolution - ; classifications - ; Returns:. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelClassifierMetadata metadata); Convert an ImageDataOp into a simple classifier. Parameters:; op - ; metadata - ; Returns:. createClassifier; public static PixelClassifier createClassifier(OpenCVClassifiers.OpenCVStatModel statModel,; ImageDataOp calculator,; PixelClassifierMetadata metadata,; boolean do8Bit); Create a PixelClassifier based on an OpenCV StatModel and feature calculator. Parameters:; statModel - ; calculator - ; metadata - ; do8Bit - ; Returns:. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to one channel of an image. Parameters:; inputResolution - resolution at which the threshold should be applied; channel - the channel to threshold (zero-based); threshold - the threshold value to apply; below - the classification for pixels below the threshold (must not be null); aboveEquals - the classification for pixels greater than or equal to the threshold (must not be null); Returns:; the pixel classifier. createThresholdClassifier; public static PixelClassifier createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new PixelClassifier that applies a threshold to one or more channels of an image. Parameters:; inputResolution - resolution at which the threshold should be applied; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any channel; aboveEquals - the classification for pixels whose values are greater than or equal to the threshold in all channels; Returns:; the pixel classifier. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:4781,extend,extends,4781,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['extend'],['extends']
Modifiability,"ations to a PathObjectHierarchy. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectHierarchyEvent.HierarchyEventType. Enum representing different ways in which the hierarchy may have been updated. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent; createObjectAddedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectAdded). Create a hierarchy event indicated objects were added. static PathObjectHierarchyEvent; createObjectRemovedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject,; PathObject pathObjectRemoved). Create a hierarchy event indicating objects were removed. static PathObjectHierarchyEvent; createObjectsChangedEvent(Object source,; PathObjectHierarchy hierarchy,; PathObjectHierarchyEvent.HierarchyEventType type,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. static PathObjectHierarchyEvent; createStructureChangeEvent(Object source,; PathObjectHierarchy hierarchy,; PathObject parentObject). Create a hierarchy event indicating that the hierarchy structure has been changed. List<PathObject>; getChangedObjects(). The objects that were affected by whichever changes were made. PathObjectHierarchyEvent.HierarchyEventType; getEventType(). Get the hierarchy event type. PathObjectHierarchy; getHierarchy(). The hierarchy to which this event refers. Object; getSource(). Get the source that triggered the event. PathObject; getStructureChangeBase(). If this is a structure change event, return the base object, i.e. boolean; isAddedOrRemovedEvent(). Returns true if objects have been added or removed from the hierarchy. boolean; isChanging(). Returns true if changes are still being made, so more events w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html:1599,extend,extends,1599,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.html,1,['extend'],['extends']
Modifiability,"ationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31717,plugin,plugin,31717,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"ative"" staining intensity. NAME_OBJECT_ID - Static variable in class qupath.lib.gui.measure.ObservableMeasurementTableData. The name used for the Object ID column. NAME_ONE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""1+"" staining intensity (i.e. NAME_POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Positive"" staining intensity. NAME_THREE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""3+"" staining intensity (i.e. NAME_TWO_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""2+"" staining intensity (i.e. nameObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object names based upon pre-computed clusters. nameObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. nameProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the String property of this ViewTracker. nameProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; nameProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the name of the tool. nanoseconds() - Method in class qupath.lib.common.Timeit. Report timings in nanoseconds. navigationAcceleration - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Apply acceleration/deceleration effects when holding and releasing navigation key. navigationSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationSpeedProperty() - Static method in class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:706725,extend,extends,706725,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"atsOptionsExtension.OmeTiffWriterAction - Class in qupath.lib.images.servers.bioformats;  ; BioFormatsServerBuilder - Class in qupath.lib.images.servers.bioformats. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerBuilder() - Constructor for class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; BioFormatsServerOptions - Class in qupath.lib.images.servers.bioformats. Container for various options that can customize the behavior of the BioFormatsImageServer. BioimageIoTools - Class in qupath.opencv.ml. Helper class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. BioimageIoTools() - Constructor for class qupath.opencv.ml.BioimageIoTools;  ; bitwiseNegate(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise NOT of an array. Black - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. All pixels black. BLACK - Static variable in class qupath.lib.common.ColorTools. Packed int representing black. blankString(String, boolean) - Static method in class qupath.lib.common.GeneralTools. Check if a string is blank, i.e. blobFromImage(Mat) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a single mat. blobFromImages(Collection<Mat>, double, Size, Scalar, boolean, boolean) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. blobFromImages(Mat...) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from one or more mats. blobFromImages(Mat, double, Size, Scalar, boolean, boolean) - Static method in class qupath.opencv.dnn.DnnTools. Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. BlobFunction<T> - Interface in qupath.opencv.dnn. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:58684,variab,variable,58684,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ault minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:445214,extend,extends,445214,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"aunayClusteringPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2122,plugin,plugin,2122,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['plugin'],['plugin']
Modifiability,"ava.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:3378,plugin,plugin,3378,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugin']
Modifiability,"avaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class XmlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.XmlLanguage. public class XmlLanguage; extends ScriptLanguage; Class for representing XML in QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; XmlLanguage(). Constructor for XML Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static XmlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. XmlLanguage; public XmlLanguage(); Constructor for XML Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static XmlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html:1061,inherit,inherited,1061,javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/XmlLanguage.html,2,['inherit'],['inherited']
Modifiability,avafx.application.Application. qupath.lib.gui.QuPathApp; qupath.lib.gui.tma.QuPathTMAViewer. qupath.lib.roi.AreaROI (implements java.io.Serializable); qupath.lib.analysis.stats.ArrayWrappers; qupath.lib.scripting.languages.AutoCompletions; qupath.lib.gui.actions.AutomateActions; qupath.lib.gui.actions.menus.AutomateMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AutomateMenuActions.Actions; qupath.lib.awt.common.AwtTools; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences; qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.OmeTiffWriterAction; qupath.lib.images.servers.bioformats.BioFormatsServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.images.servers.bioformats.BioFormatsServerOptions; qupath.opencv.ml.BioimageIoTools; qupath.lib.plugins.parameters.BooleanParameter; qupath.process.gui.commands.ml.BoundaryStrategy; qupath.lib.gui.commands.BrightnessContrastCommand (implements java.lang.Runnable); qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. qupath.process.gui.WandToolEventHandler. qupath.lib.awt.common.BufferedImageTools; qupath.lib.gui.BuildInfo; qupath.process.gui.commands.CellIntensityClassificationCommand (implements java.lang.Runnable); qupath.lib.objects.CellTools; qupath.lib.display.settings.ChannelColor; qupath.lib.display.settings.ChannelSettings; qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.plugins.parameters.ChoiceParameter<S>; qupath.process.gui.commands.ml.ClassificationResolution; qupath.lib.gui.actions.menus.ClassifyMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.Classif,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:8918,plugin,plugins,8918,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"aved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a nucleus ROI is stored for this cell. hasObjectsForRegion(Class<? extends PathObject>, ImageRegion) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. hasPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the pixel width and height information in microns is known. hasPointROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Returns true if a PathObject has a Point ROI. hasROI() - Method in class qupath.lib.objects.PathObject. Returns true if this object has a ROI. hasROI() - Method in class qupath.lib.roi.RoiEditor. Returns true if this editor currently has a ROI. hasServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if there is currently an ImageServer being displayed in this viewer. hasString(String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasString(String, String) - Static me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:572155,extend,extends,572155,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"avigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSettingsPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onIn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1092,inherit,inherited,1092,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"avior, it is recommended to; use either tab (\t), comma (,) or ; semicolon (;). Parameters:; sep - ; Returns:; this exporter. imageList; public MeasurementExporter imageList(List<ProjectImageEntry<BufferedImage>> imageList); Specify the list of images (ProjectImageEntry) to export. Parameters:; imageList - ; Returns:; this exporter. filter; public MeasurementExporter filter(Predicate<PathObject> filter); Filter the PathObjects before export (objects returning true for the predicate will be exported). Parameters:; filter - ; Returns:; this exporter; Since:; v0.3.2. getImageList; public List<ProjectImageEntry<BufferedImage>> getImageList(); Returns the list of images (ProjectImageEntry). Returns:; imageList. getExcludeColumns; public List<String> getExcludeColumns(); Returns the list of columns to exclude from export. Returns:; list of column names. getIncludeColumns; public List<String> getIncludeColumns(); Returns the list of columns to include in the export. Returns:; list of column names. getSeparator; public String getSeparator(); Returns the separator used in between measurements. Returns:; separator. getType; public Class<? extends PathObject> getType(); Returns the type of path objects used in the export. Returns:; path object. exportMeasurements; public void exportMeasurements(File file); Exports the measurements of one or more entries in the project.; This function first opens all the images in the project to store ; all the column names and values of the measurements.; Then, it loops through the maps containing the values to write; them to the given output file. Parameters:; file - . exportMeasurements; public void exportMeasurements(OutputStream stream); Exports the measurements of one or more entries in the project.; This function first opens all the images in the project to store ; all the column names and values of the measurements.; Then, it loops through the maps containing the values to write; them to the given output stream. Parameters:; stream - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:4439,extend,extends,4439,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['extend'],['extends']
Modifiability,"ay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:954763,plugin,plugins,954763,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ay. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2772,inherit,inherited,2772,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"ay>; imageDisplayProperty(). Property for the image display that should be shown and managed by this pane. boolean; isEmpty(). Query if the table is empty, i.e. void; setHideChannel(ChannelDisplayInfo channel). Request that the specified channel is hidden. void; setShowChannel(ChannelDisplayInfo channel). Request that the specified channel is shown. void; toggleShowHideChannel(ChannelDisplayInfo channel). Toggle the visibility of the specified channel. void; updateTable(). Ensure the table is up-to-date. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPaddin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:4881,inherit,inherited,4881,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"ayTools.Subdivision using the centroid coordinates of ROIs. static DelaunayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static DelaunayTools.Builder; newBuilder(Collection<PathObject> pathObjects). Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. static BiPredicate<PathObject,PathObject>; sameClassificationPredicate(). BiPredicate that returns true for objects that share the same classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DelaunayTools; public DelaunayTools(). Method Details. newBuilder; public static DelaunayTools.Builder newBuilder(Collection<PathObject> pathObjects); Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. Parameters:; pathObjects - ; Returns:. createFromCentroids; public static DelaunayTools.Subdivision createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI); Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs.; ; Note: centroids must be distinct. If multiple objects have identical centroids, one or more objects may be lost ; from the resulting DelaunayTools.Subdivision. Parameters:; pathObjects - collection of objects from which to construct the DelaunayTools.Subdivision; preferNucleusROI - if true, prefer the nucleus ROI when extracting the centroid from a ce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:3230,inherit,inherited,3230,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['inherit'],['inherited']
Modifiability,"b.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel optical densities. redChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). redo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; redo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request redo. redo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; REDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; redoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; redoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'redo' the last 'undone' hierarchy change for the current active viewer. RefineAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. RefineAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; refineAreas(Geometry, double, double) - Static method in class qupath.lib.roi.GeometryTools. Remove small fragments and fill small interior rings within a Geometry. refineColorDeconvolutionStains(int[], ColorDeconvolutionStains, double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Attempt to automatically refine color deconvolution stains based upon pixel values. refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; refineROIByParent(ROI) - Method in class qupath.lib.gui.viewer.tools.handlers.Brush",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:833134,plugin,plugins,833134,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"b.gui.actions.menus.TMAMenuActions.Actions;  ; RESET_PREFERENCES - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjectAndImage() - Static method in class qupath.lib.scripting.QP. Reset the Project and ImageData used for batch processing for the current thread. resetClassifications(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the current hierarchy. resetClassifications(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.process.gui.WandToolEventHandler. Reset the constraining objects. resetCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the custom pixel layer overlay to null. resetDetectionClassifications() - Static method in class qupath.lib.scripting.QP. Reset the P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:861321,extend,extends,861321,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"b.images.servers. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder - Class in qupath.lib.images.servers. Helper class for building a LabeledImageServer. labeledImageSubDir(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a subdirectory within which labeled image tiles should be saved. labeledServer(ImageServer<BufferedImage>) - Method in class qupath.lib.images.writers.TileExporter. Optional server providing image labels. labelImage(ImageProcessor, float, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Create a labelled image from above-threshold pixels for an image. labelImage(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Deprecated.; Use OpenCVTools.label(Mat, Mat, int) instead. labelROIs(ImageProcessor, List<? extends Roi>) - Static method in class qupath.imagej.processing.RoiLabeling. Label ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. labelsToAnnotations(Path, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a labeled image to annotation objects. labelsToAnnotations(Collection<Path>, boolean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert labeled images to annotation objects, determining the region from the filename if possible. labelsToCells(Path, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert a 2-channel labeled image to cell objects. labelsToCells(Collection<Path>, boolean) - Static method in class qupath.lib.analysis.images.ContourTracing. Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. labelsToConnectedROIs(ImageProcessor, int) - Static method in class qupath.imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:644791,extend,extends,644791,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"b.images.servers.ImageServerBuilder<T>; qupath.lib.images.servers.ImageServerBuilder.ServerBuilder<T>; qupath.lib.experimental.pixels.ImageSupplier<S>; qupath.lib.images.writers.ImageWriter<T>; com.sun.jna.Library. qupath.lib.images.servers.openslide.jna.OpenSlideJNA. qupath.lib.experimental.pixels.MaskSupplier<S,T>; qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement<S,T>; qupath.lib.gui.actions.menus.MenuActions; qupath.lib.objects.MetadataStore; qupath.lib.classifiers.object.ObjectClassifier<T>; qupath.lib.plugins.ObjectDetector<T>; qupath.lib.experimental.pixels.OutputHandler<S,T,U>; qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter<S,T,U>; qupath.lib.plugins.parameters.ParameterChangeListener; qupath.lib.plugins.parameters.Parameterizable; qupath.lib.images.PathImage<T>; qupath.lib.objects.PathObjectConnectionGroup; qupath.lib.objects.PathObjectReader; qupath.lib.gui.viewer.overlays.PathOverlay; qupath.lib.plugins.PathPlugin<T>. qupath.lib.plugins.PathInteractivePlugin<T>. qupath.lib.gui.measure.PathTableData<T>; qupath.lib.gui.viewer.tools.PathTool; qupath.lib.classifiers.pixel.PixelClassifier; qupath.lib.geom.Point; java.util.function.Predicate<T>. qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. qupath.opencv.dnn.PredictionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.Au",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:41368,plugin,plugins,41368,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"b.roi.PolygonROI;  ; isArea() - Method in class qupath.lib.roi.PolylineROI;  ; isArea() - Method in class qupath.lib.roi.RectangleROI;  ; isArea() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Returns true if the event should be considered right-censored. isChanged() - Method in class qupath.lib.images.ImageData. Returns true if changes have been recorded since the last time this object was notified that it was saved. isChanging() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if changes are still being made, so more events will be fired. isCircle() - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. isCircle(double, double) - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:615980,plugin,plugin,615980,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"b.scripting.QP. Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258712,variab,variable,258712,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"bclasses:; AbstractTileableDetectionPlugin, DetectCytokeratinCV, PositivePixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1643,extend,extends,1643,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['extend'],['extends']
Modifiability,"belView. Constructor. SMALL - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; SMALL - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; smartEditing - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; smartEditingAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; smartStringComparator() - Static method in class qupath.lib.common.GeneralTools. Comparator for smart String sorting. smartStringSort(Collection<T>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection using the Object.toString() method applied to each element. smartStringSort(Collection<T>, Function<T, String>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection after extracting a String representation of each element. SMOOTHED_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SmoothFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SmoothFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Default constructor. smoothImage(BufferedImage) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). smoothMeasurements(List<PathObject>, List<String>, double, String, boolean, boolean) - Static method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. smoothPoints(List<Point2>) - Static method in class qupath.lib.roi.ShapeSimplifier. Apply a simple 3-point moving average to a list of points. SNAPSHOT_VIE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:983631,plugin,plugins,983631,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"bers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might not appear; to make a difference. If shown through a ParameterPanel (in QuPath's JavaFX GUI) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:3247,plugin,plugins,3247,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['plugin'],['plugins']
Modifiability,"bing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified Reg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:2671,inherit,inherited,2671,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['inherit'],['inherited']
Modifiability,"bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request CUDA backend and target, if available, with 16-bit floating point. Returns:. target; public OpenCVDnn.Builder target(int target); Specify the target,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:2889,config,config,2889,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,2,['config'],['config']
Modifiability,"bject - ; fireUpdate - ; Returns:. addObjectBelowParent; public boolean addObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate); Add path object as descendant of the requested parent. Parameters:; pathObjectParent - ; pathObject - ; fireUpdate - ; Returns:; Since:; v0.4.0 (replaces addPathObjectBelowParent(PathObject, PathObject, boolean). addObjects; public boolean addObjects(Collection<? extends PathObject> pathObjects); Add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:; Since:; v0.4.0; replaces addPathObjects(Collection). addPathObjects; @Deprecated; public boolean addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0; use addObjects(Collection) instead. Legacy method to add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:. clearAll; public void clearAll(); Remove all objects from the hierarchy. getPointObjects; public Collection<PathObject> getPointObjects(Class<? extends PathObject> cls); Get objects that contain Point ROIs. Parameters:; cls - ; Returns:. getCellObjects; public Collection<PathObject> getCellObjects(); Get all cell objects in the hierarchy. Returns:. getTileObjects; public Collection<PathObject> getTileObjects(); Get all tile objects in the hierarchy. Returns:. getDetectionObjects; public Collection<PathObject> getDetectionObjects(); Get all detection objects in the hierarchy (including sub-classes of detections). Returns:. getAnnotationObjects; public Collection<PathObject> getAnnotationObjects(); Get all annotation objects in the hierarchy. Returns:. getObjects; public Collection<PathObject> getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class.; Note that this method returns the root object, unless it has been filtered out. Parameters:; pathObjects - ; cls - ; Returns:. updateOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:15694,extend,extends,15694,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"bject centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionTreeDisplayModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define how detections should be displayed in lists and tree views. detectonStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; detectTMACoresFromBinary(ByteProcessor, double, int, int, Roi) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:258789,variab,variable,258789,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"bject. PixelClassifierMetadata.Builder; classificationLabels(Map<Integer,PathClass> labels). Specify classification labels. PixelClassifierMetadata.Builder; inputPadding(int inputPadding). Amount of padding requested for the left, right, top and bottom of the image tile being classified. PixelClassifierMetadata.Builder; inputResolution(PixelCalibration inputResolution). Pixel size defining the resolution at which the classifier should operate. PixelClassifierMetadata.Builder; inputShape(int width,; int height). Preferred input image width and height. PixelClassifierMetadata.Builder; outputChannels(Collection<ImageChannel> channels). Specify channels for output. PixelClassifierMetadata.Builder; outputChannels(ImageChannel... channels). Specify channels for output. PixelClassifierMetadata.Builder; outputPixelType(PixelType pixelType). Output pixel type. PixelClassifierMetadata.Builder; setChannelType(ImageServerMetadata.ChannelType type). Specify the output channel type. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. build; public PixelClassifierMetadata build(); Build a new PixelClassifierMetadata object. Returns:. inputPadding; public PixelClassifierMetadata.Builder inputPadding(int inputPadding); Amount of padding requested for the left, right, top and bottom of the image tile being classified.; This can be used to reduce boundary artifacts. Parameters:; inputPadding - ; Returns:. setChannelType; public PixelClassifierMetadata.Builder setChannelType(ImageServerMetadata.ChannelType type); Specify the output channel type. Parameters:; type - ; Returns:. inputResolution; public PixelClassifierMetadata.Builder inputResolution(PixelCalibration inputResolution); Pixel size defining the resolution at which the classifier should operate. Parameters:; inputResolution - ; Returns:. inputShape; public PixelClassifierMetadat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html:1905,inherit,inherited,1905,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifierMetadata.Builder.html,1,['inherit'],['inherited']
Modifiability,"bject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects). Get the objects overlapping or close to a specified region. Collection<PathObject>; getObjectsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; getSelectionModel(). Get the selection model, which handles the selection status of objects. Collection<PathObject>; getTileObjects(). Get all tile objects in the hierarchy. TMAGrid; getTMAGrid(). Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. boolean; hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region). Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. boolean; insertPathObject(PathObject pathObject,; boolean fireChangeEvents). Insert an object into the hierarchy. boolean; insertPathObjects(Collection<? extends PathObject> pathObjects). Insert a collection of objects into the hierarchy, firing a change event on completion. boolean; isEmpty(). Check if the hierarchy is empty (i.e. int; n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:5859,extend,extends,5859,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"bject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2949,plugin,plugin,2949,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['plugin'],['plugin']
Modifiability,"bjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; AbstractTileableImageServer - Class in qupath.lib.images.servers. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AbstractTileableImageServer() - Constructor for class qupath.lib.images.servers.AbstractTileableImageServer;  ; accelerator(ObservableValue<KeyCombination>) - Method in class qupath.lib.gui.action",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:3912,plugin,plugins,3912,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"bjectClassifier, DnnObjectClassifier, OpenCVMLClassifier, OpenCVModelObjectClassifier. public interface ObjectClassifier<T>; Interface defining object classifiers, which assign PathClasses to PathObjects. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; PROJECT_LOCATION. Default location to use when storing object classifiers in a project. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:1490,extend,extends,1490,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,1,['extend'],['extends']
Modifiability,"bjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:2862,plugin,pluginClass,2862,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,1,['plugin'],['pluginClass']
Modifiability,"bjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a PathObject. PathObjectPainter. Static methods to assist with painting PathObjects. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of single and multiple PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:41032,plugin,plugin,41032,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"bjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2744,plugin,plugin,2744,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"bjects. static boolean; duplicateSelectedObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Duplicate the selected objects. static Map<String,PathObject>; findByStringID(Collection<String> ids,; Collection<? extends PathObject> pathObjects). Find objects based on a String representation of their IDs. static Map<UUID,PathObject>; findByUUID(Collection<UUID> ids,; Collection<? extends PathObject> pathObjects). Find objects based on their IDs. static List<PathObject>; findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting). Get all the objects with ROIs that are outside the bounds of an image. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. static List<PathObject>; getAncestorList(PathObject pathObject). Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). static TMACoreObject; getAncestorTMACore(PathObject pathObject). Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. static <T extends PathObject>List<T>; getAreaObjects(Collection<T> pathObjects). Get a list of objects with area ROIs from a collection of objects. static Set<String>; getAvailableFeatures(Collection<? extends PathObject> pathObjects). Get a set containing the names of all measurements found in the measurement lists of a specified object collection. static Collection<PathObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:4381,extend,extends,4381,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"bjects.hierarchy.DefaultTMAGrid. All Implemented Interfaces:; Serializable, TMAGrid. public class DefaultTMAGrid; extends Object; implements TMAGrid; Default implementation of a TMAGrid. Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; create(List<TMACoreObject> cores,; int gridWidth). Create a new TMAGrid based on a list of cores and grid width. int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:1411,inherit,inherited,1411,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,1,['inherit'],['inherited']
Modifiability,"bject readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exists.; Partly addresses https://github.com/qupath/qupath/issues/1306 (during standard deserialation,; but not from JSON). Throws:; ObjectStreamException. Serialized Fields. colorRGB; Integer colorRGB. name; String name. parentClass; PathClass parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7536,extend,extends,7536,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"ble); Returns:; output collection of objects, which should have smaller overlapping objects removed. removeOverlapsByLocation; public static Collection<PathObject> removeOverlapsByLocation(Collection<? extends PathObject> pathObjects,; double overlapTolerance); Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away.; Note that this is determined using first the bounding box, then the centroid.; This is a simpler (and faster) criterion than measuring distance to the original from the ROI itself. Parameters:; pathObjects - input object collection, which may contain overlapping objects; overlapTolerance - amount of overlap to permit; recommended value is 0, see removeOverlaps(Collection, Comparator, double); Returns:; output collection of objects, which should have smaller overlapping objects removed. removeOverlaps; public static Collection<PathObject> removeOverlaps(Collection<? extends PathObject> pathObjects,; Comparator<PathObject> comparator,; double overlapTolerance); Resolve overlaps, discarding one and keeping the other.; It assumes that the objects have been sorted so that 'preferred' objects occur first.; ; 'How overlapping' can be controlled by the overlapTolerance, where an overlap will be removed; ; if overlapTolerance > 0 and the area of the intersection between ROIs is < overlapTolerance (an absolute comparison); if overlapTolerance < 0 and the proportion of the smaller ROI intersecting the larger ROI is < -overlapTolerance (a relative comparison); if overlapTolerance == 0 and there is any non-zero area intersection between ROIs; ; For example, overlapTolerance == 10 will require at least 10 pixels between ROIs to intersect to be considered an overlap,; while overlapTolerance == 0.01 will require at least 1% of the area of the smaller ROI to intersect.; ; It is recommended to keep overlapTolerance == 0 in most instances to remove all overlaps.; This is also less computationally ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:47374,extend,extends,47374,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"bleTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<B",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2170,plugin,plugin,2170,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['plugin'],['plugin']
Modifiability,"blic static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:1720,inherit,inherited,1720,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,1,['inherit'],['inherited']
Modifiability,"boolean) instead (for naming consistency). void; clearAll(). Remove all objects from the hierarchy. void; fireHierarchyChangedEvent(Object source). Fire a hierarchy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:4313,extend,extends,4313,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"boolean; isEmptyRegion(RegionRequest request). Test whether a region is empty, i.e. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. default T; readBufferedImage(RegionRequest request). Deprecated.; since v0.4.0. default T; readRegion(double downsample,; int x,; int y,; int width,; int height). Read a 2D(+C) image region from the default ImagePlane (i.e. default T; readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoint. default T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getPath; String getPath(); Get a String path that can uniquely identify this image.; ; For most standard images, this should be a String representation of an absolute URI. ; If multiple images are stored within the same file, then this information should be encoded in the URI.; ; For images that are generated some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching tiles. Returns:. getURIs; Collection<URI> getURIs(); Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see getBuilder(). Returns:. getPreferredDowns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:4933,inherit,inherited,4933,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['inherit'],['inherited']
Modifiability,"boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, reques",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:3384,inherit,inherited,3384,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['inherit'],['inherited']
Modifiability,"boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:2535,inherit,inherited,2535,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['inherit'],['inherited']
Modifiability,"boolean; supportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(ImagePlus imp,; OutputStream stream);  ; void; writeImage(ImagePlus imp,; String pathOutput);  ; void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:2537,inherit,inherited,2537,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['inherit'],['inherited']
Modifiability,"boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3920,variab,variables,3920,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['variab'],['variables']
Modifiability,"brated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2004,inherit,inherited,2004,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['inherit'],['inherited']
Modifiability,"bstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; ParameterList params); Get an appropriate overlap, in pixels, if analysis of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:3002,inherit,inherited,3002,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['inherit'],['inherited']
Modifiability,"bstractDnnModel. Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. getBlobFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getBlobFunction(String) - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. getBlobFunction(String) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getBlue() - Method in class qupath.lib.color.StainVector. Get the blue component of the (normalized) stain vector. getBlue() - Method in class qupath.lib.display.settings.ChannelColor. Get the blue value. getBlueOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getBooleanParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a boolean parameter value (or its default) for the specified key. getBorderColor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the border color set for this viewer. getBoundaryClass(PathClass) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy. Get the classification to be used for the annotation boundary, given the classification of the annotated region. getBoundaryDistance(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Get the Euclidean distance between the boundaries of two ROIs. getBoundaryDistance(ROI, ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. getBoundaryLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get an unmodifiable map of classifications and their corresponding boundary labels, if available. getBoundaryStrategy() - Method in class qupath.process.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:337166,plugin,plugins,337166,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"button pane for pixel classifiers, to create, measure and classify objects. createPlugin(Class<? extends PathPlugin>) - Method in class qupath.lib.gui.QuPathGUI. Create a plugin from a specified class. createPluginAction(String, Class<? extends PathPlugin>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an action for a plugin to be run through this QuPath instance. createPluginAction(String, PathPlugin<BufferedImage>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action to call the specified plugin for the current image. createPointsEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPointsROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from an array of x and y coordinates. createPointsROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI containing a single point. createPointsROI(List<? extends Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from a list of points. createPointsROI(ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an empty points ROI. createPolygonEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPolygonROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a polygon ROI from an array of x and y coordinates. createPolygonROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an empty, closed polygon ROI consisting of a single point. createPolygonROI(List<Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a closed polygon ROI from a list of points. createPolylineEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPolylineROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a polygon RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:210505,extend,extends,210505,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"c <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. static <S,; T,; U> Processor<S,T,U>; wrapInPointerScope(Processor<S,T,U> processor). Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:3360,extend,extends,3360,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"c ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5702,inherit,inherited,5702,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['inherit'],['inherited']
Modifiability,"c class SharedThreadPoolManager; extends Object; implements AutoCloseable; Manager to simplify submitting short tasks in background threads using a shared ExecutorService.; ; This can also create a reusable single-thread ExecutorService using an object as a key. Since:; v0.5.0 (replacing functionality previously in QuPathGUI; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Shutdown any threadpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:1492,inherit,inherited,1492,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,1,['inherit'],['inherited']
Modifiability,"c method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; resolveHierarchy() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Attempt to resolve the parent-child relationships between all objects within the hierarchy. resolveHierarchy() - Static method in class qupath.lib.scripting.QP. Resolve the location of annotations in the current hierarchy by setting parent/child relationships. resolveHierarchy(PathObjectHierarchy) - Static met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:865079,plugin,plugins,865079,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"c methods for use with PathClass objects. PathDetectionObject - Class in qupath.lib.objects. A detection PathObject. PathDetectionObject() - Constructor for class qupath.lib.objects.PathDetectionObject. Default constructor. PathDetectionObject(ROI, PathClass) - Constructor for class qupath.lib.objects.PathDetectionObject. Create a new PathDetectionObject with a float measurement list. PathHierarchyImageServer - Class in qupath.lib.gui.images.servers. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles on request from a PathObjectHierarchy and its detection objects. PathHierarchyImageServer(ImageData<BufferedImage>, OverlayOptions) - Constructor for class qupath.lib.gui.images.servers.PathHierarchyImageServer. Constructor. PathImage<T> - Interface in qupath.lib.images. Interface used when needing to associate pixel data with information regarding the image from which it was obtained. PathInteractivePlugin<T> - Interface in qupath.lib.plugins. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathIO - Class in qupath.lib.io. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions - Enum Class in qupath.lib.io. Options to customize the export of PathObjects as GeoJSON. pathMemoization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; PathObject - Class in qupath.lib.objects. Fundamental object of interest in QuPath. PathObject() - Constructor for class qupath.lib.objects.PathObject. Default constructor. PathObject(MeasurementList) - Constructor for class qupath.lib.objects.PathObject. Create a PathObject with a specific measurement list. PathObjectConnectionGroup - Interface in qupath.lib.objects. Interface defining a basic structure to represent relationships between PathObjects that do not fit with ; the parent-child idea of the PathObjectHierarchy. PathObjectConnections - Class in qupath.lib.objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:753712,plugin,plugins,753712,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"caledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3515,inherit,inherited,3515,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['inherit'],['inherited']
Modifiability,"caledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:3696,inherit,inherited,3696,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['inherit'],['inherited']
Modifiability,"caledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3445,inherit,inherited,3445,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['inherit'],['inherited']
Modifiability,"calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project. getScriptsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where shared script files should be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:505993,plugin,plugins,505993,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:954927,plugin,plugins,954927,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"calization, ; qupath.lib.gui.logging, ; qupath.lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath.lib.plugins.parameters, ; qupath.lib.plugins.workflow, ; qupath.lib.projects, ; qupath.lib.regions, ; qupath.lib.roi, ; qupath.lib.roi.interfaces, ; qupath.lib.scripting, ; qupath.lib.scripting.languages, ; qupath.opencv, ; qupath.opencv.dnn, ; qupath.opencv.features, ; qupath.opencv.io, ; qupath.opencv.ml, ; qupath.opencv.ml.objects, ; qupath.opencv.ml.objects.features, ; qupath.opencv.ml.pixel, ; qupath.opencv.ops, ; qupath.opencv.tools, ; qupath.process.gui, ; qupath.process.gui.commands, ; qupath.process.gui.commands.density, ; qupath.process.gui.commands.ml, ; qupath.process.gui.commands.ui, ; qupathj. Class Hierarchy. java.lang.Object. qupath.opencv.dnn.AbstractDnnModel<T> (implements qupath.opencv.dnn.DnnModel). qupath.opencv.dnn.OpenCVDnn (implements qupath.lib.io.UriResource). qupath.lib.gui.images.stores.AbstractImageRenderer (implements qupath.lib.gui.images.stores.ImageRenderer). qupath.lib.display.ImageDisplay. qupath.lib.images.serve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:2407,plugin,plugins,2407,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (which may or may not be open at the moment). Returns:. setScriptEditor; public void setScript",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27868,plugin,pluginClass,27868,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['plugin'],['pluginClass']
Modifiability,"cated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.Builder downsamples(double... downsamples); Specify downsamples; this is especially important for '",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:2158,layers,layers,2158,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"ce on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singlet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:4767,extend,extends,4767,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['extend'],['extends']
Modifiability,ce(). Serialized Fields. checkValid; boolean checkValid. geometry; Geometry geometry. Class qupath.lib.roi.LineROI; class LineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. x; double x. x2; double x2. y; double y. y2; double y2. Class qupath.lib.roi.PointsROI; class PointsROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. points; List<Point2> points. Class qupath.lib.roi.PolygonROI; class PolygonROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. vertices; qupath.lib.roi.Vertices vertices. Class qupath.lib.roi.PolylineROI; class PolylineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. vertices; qupath.lib.roi.Vertices vertices. Class qupath.lib.roi.RectangleROI; class RectangleROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:13134,extend,extends,13134,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,2,['extend'],['extends']
Modifiability,cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectCl,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526101,plugin,plugins,526101,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; runTasks(Collection<? extends Runnable>) - Method in interface qupath.lib.plugins.TaskRunner. Pass a collection of parallelizable tasks to run. S. sameClassificationPredicate() - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:878679,plugin,plugins,878679,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"cess.gui.commands.ExportTrainingRegionsCommand;  ; run() - Method in class qupath.process.gui.commands.ObjectClassifierCommand;  ; run() - Method in class qupath.process.gui.commands.ObjectClassifierLoadCommand;  ; run() - Method in class qupath.process.gui.commands.PixelClassifierCommand;  ; run() - Method in class qupath.process.gui.commands.SimpleThresholdCommand;  ; run() - Method in class qupath.process.gui.commands.SingleMeasurementClassificationCommand;  ; run() - Method in class qupath.process.gui.commands.SplitProjectTrainingCommand;  ; run() - Method in class qupath.process.gui.commands.ui.LoadResourceCommand;  ; run(String) - Method in class qupathj.QuPath_Send_Overlay_to_QuPath;  ; run(String) - Method in class qupathj.QuPath_Send_ROI_to_QuPath;  ; run(ImageData<?>) - Method in class qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand. Run the command for the specified image data. runDetection(ImageData<T>, ParameterList, ROI) - Method in interface qupath.lib.plugins.ObjectDetector. Detect objects. runGeoJsonExport(QuPathGUI) - Static method in class qupath.lib.gui.commands.ExportObjectsCommand. Run the path object GeoJSON export command. runGeoJsonObjectExport(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to export object(s) to a GeoJSON file. RunningStatistics - Class in qupath.lib.analysis.stats. Helper class for computing basic statistics from values as they are added. RunningStatistics() - Constructor for class qupath.lib.analysis.stats.RunningStatistics. Default constructor. runObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the current ImageData. runObjectClassifier(ImageData, String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the specified ImageData. runObjectImport(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:875264,plugin,plugins,875264,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ch PathObject in a collection, storing the result in an array. double; getMinValue(). Get the minimum of all the values being histogrammed. double; getNormalizedCountsForBin(int ind). Get the normalized histogram count for the specified bin. double; getStdDev(). Get the standard deviation of all the values being histogrammed. double; getSum(). Get the sum of all the values being histogrammed. double; getVariance(). Get the variance of all the values being histogrammed. boolean; isInteger(). Check if the histogram has been generated from integer values only. static Histogram; makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins). Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. int; nBins(). Total number of histogram bins. long; nMissingValues(). Number of NaNs in the input array. long; nValues(). Number of values represented in the histogram (i.e. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Histogram; public Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be computed; nBins - number of histogram bins (will be number of edges - 1); minEdge - the minimum (edge) value to include in the histogram, or Double.NaN (to use the data minimum); maxEdge - the maximum (edge) value to include in the histogram, or Double.NaN (to use the data maximum). Histogram; public Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:3882,inherit,inherited,3882,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html,1,['inherit'],['inherited']
Modifiability,"channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundColor(Color) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify the background label (0 by default). backgroundLabel(int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify the background label (0 by default) and color. badges - Variable in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:51666,plugin,plugins,51666,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:955463,plugin,plugins,955463,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ched,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Number; getMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Number; getMeasurementValue(ROI roi,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. protected int; getPoolSizeProp();  ; static double; getProbabilityThreshold(WritableRaster raster). Get a suitable threshold assuming a raster contains probability values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassificationMeasurementManager; public PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer); Constructor. Parameters:; classifierServer - the server for which measurements will be made. Method Details. getMeasurementValue; @Deprecated; public Number getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(PathObject, String) or getCachedMeasurementValue(PathObject, String) instead. Get the measurement value for this object. Parameters:; pathObject - the PathObject to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(PathObject pathObject,; String name); Get the value of a single measurement for a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:2569,inherit,inherited,2569,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['inherit'],['inherited']
Modifiability,"chedColor(Integer rgb). Get cached color. static Color; getCachedColor(Integer rgb,; boolean hasAlpha). Get cached color, explicitly stating whether alpha should be included or not. static Color; getColorWithOpacity(Color color,; double opacity). Derived a Color from an existing one, setting the alpha component to match the desired opacity. static Color; getColorWithOpacityFX(Integer rgb,; double opacity). Get a Color from a packed RGB value, setting the alpha component to match the desired opacity. static Color; getDisplayedColor(PathObject pathObject). Get a Color appropriate for displaying an object. static Integer; getDisplayedColorARGB(PathObject pathObject). Get the color with which an object should be displayed, as a packaged ARGB integer. static Color; getPathClassColor(PathClass pathClass). Get a Color appropriate for displaying a PathClass. static int; getRGB(Color color). Get a packed int (ARGB) representation of a Color object, omitting the alpha component. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_BLACK_FX; public static final Color TRANSLUCENT_BLACK_FX; Black with opacity at 50%. TRANSLUCENT_WHITE_FX; public static final Color TRANSLUCENT_WHITE_FX; White with opacity at 50%. Constructor Details. ColorToolsFX; public ColorToolsFX(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html:2443,inherit,inherited,2443,javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/ColorToolsFX.html,1,['inherit'],['inherited']
Modifiability,"chtextfx.stylers.ScriptStyler); qupath.lib.io.GsonTools; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T> (implements com.google.gson.TypeAdapterFactory); qupath.lib.gui.tools.GuiTools; qupath.lib.analysis.features.HaralickFeatureComputer; qupath.lib.analysis.features.HaralickFeatures; qupath.lib.gui.actions.menus.HelpMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.HelpMenuActions.Actions; qupath.lib.analysis.stats.Histogram; qupath.lib.gui.charts.HistogramChart.HistogramData; qupath.lib.gui.charts.HistogramDisplay (implements qupath.lib.plugins.parameters.ParameterChangeListener); qupath.lib.gui.tools.IconFactory; qupath.imagej.gui.IJExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.imagej.gui.IJExtension.IJExtensionCommands; qupath.imagej.tools.IJTools; qupath.lib.images.servers.ImageChannel; qupath.lib.images.ImageData<T> (implements qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.plugins.workflow.WorkflowListener); qupath.lib.gui.panes.ImageDetailsPane (implements javafx.beans.value.ChangeListener<T>, java.beans.PropertyChangeListener); qupath.lib.display.settings.ImageDisplaySettings; qupath.lib.experimental.pixels.ImageJProcessor; qupath.imagej.images.servers.ImageJServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.opencv.ops.ImageOps; qupath.opencv.ops.ImageOps.Channels; qupath.opencv.ops.ImageOps.Core; qupath.opencv.ops.ImageOps.Filters; qupath.opencv.ops.ImageOps.ML; qupath.opencv.ops.ImageOps.Normalize; qupath.opencv.ops.ImageOps.PaddedOp (implements qupath.opencv.ops.ImageOp); qupath.opencv.ops.ImageOps.Threshold; qupath.lib.regions.ImagePlane (implements java.lang.Comparable<T>); qupath.lib.regions.ImageRegion. qupath.lib.regions.RegionRequest. qupath.lib.gui.images.stores.ImageRegionStoreFactory; qupath.lib.gui.images.stores.ImageRegionStoreHelpers; qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder<T> (imple",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:17032,plugin,plugins,17032,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"chy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:4463,extend,extends,4463,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"chy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98713,extend,extends,98713,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"chy,; Collection<PathObject> pathObjects,; boolean createNewIDs). Duplicate the specified objects, optionally creating new IDs. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotation objects. static boolean; duplicateSelectedObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Duplicate the selected objects. static Map<String,PathObject>; findByStringID(Collection<String> ids,; Collection<? extends PathObject> pathObjects). Find objects based on a String representation of their IDs. static Map<UUID,PathObject>; findByUUID(Collection<UUID> ids,; Collection<? extends PathObject> pathObjects). Find objects based on their IDs. static List<PathObject>; findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting). Get all the objects with ROIs that are outside the bounds of an image. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. static List<PathObject>; getAncestorList(PathObject pathObject). Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). static TMACoreObject; getAncestorTMACore(PathObject pathObject). Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. static <T extends PathObject>List<T>; getAreaObjects(Collection<T> pathObjects). Get a list of objects with area ROIs from a collection of o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:4163,extend,extends,4163,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"cific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:3159,extend,extends,3159,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['extend'],['extends']
Modifiability,"cific class. getObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the current hierarchy according to a specified predicate. getObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the specified hierarchy according to a specified predicate. getObjectsForLocation(PathObjectHierarchy, double, double, int, int, double) - Static method in class qupath.lib.objects.PathObjectTools. Get a collection of objects that overlap a specified pixel location. getObjectsForRegion(Class<? extends PathObject>, ImageRegion, Collection<PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the objects overlapping or close to a specified region. getObjectsForRegion(ImageRegion) - Method in class qupath.lib.images.servers.LabeledImageServer. Get the objects to be painted that fall within a specified region. getObjectsForROI(Class<? extends PathObject>, ROI) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. getObjectsOfClass(Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get the PathObjects in a collection that are instances of a specified class. getODNormalizedColor(int, double, float, float) - Static method in class qupath.lib.color.ColorTransformer. Create a 'normalized' color for visualization. getOffset(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the offset for the specified feature. getOMEString(ImageServer<?>) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get the String representation understood by OMETiffWriter. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived 1+ classification, indicating weak positivity",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:462767,extend,extends,462767,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"cified path, calling file.mkdirs() if not. static int; nObjects(). Get a count of the total number of objects in the current hierarchy. static boolean; refreshDuplicateIDs(). Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static boolean; refreshDuplicateIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static void; refreshIDs(). Refresh all object IDs for the current hierarchy. static void; refreshIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy. static boolean; relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel the current TMA grid. static boolean; relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static void; removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the current image data. static void; removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the specified hierarchy. static void; removeObject(PathObject pathObject,; boolean keepChildren). Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(PathObject[] pathObjects,; boolean keepChildren). Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static boolean; remove",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:26319,extend,extends,26319,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,cified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526002,plugin,plugins,526002,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1107,extend,extends,1107,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,1,['extend'],['extends']
Modifiability,"ckage qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:1299,extend,extends,1299,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['extend'],['extends']
Modifiability,"ckgroundProperty(). ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannelProperty(). Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. String; toJSON(boolean prettyPrint). Create a JSON representation of the main components of the current display. boolean; updateFromDisplay(ImageDisplay display). Update the current display based upon a different display. boolean; useColorLUTs(). The opposite of useGrayscaleLuts(). BooleanProperty; useGrayscaleLutProperty(). Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. boolean; useGrayscaleLuts(). Get the value of useGrayscaleLutProperty(). boolean; useInvertedBackground(). Get the value of useInvertedBackgroundProperty(). BooleanProperty; useInvertedBackgroundProperty(). Property that specifies whether the background should be inverted (i.e. Methods inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; getUniqueID. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:5735,inherit,inherited,5735,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['inherit'],['inherited']
Modifiability,"class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8947,plugin,plugins,8947,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"class PathCellObject; extends PathDetectionObject; A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus.; ; The primary ROI represents the cell boundary. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathCellObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1594,inherit,inherited,1594,javadoc/docs/qupath/lib/objects/PathCellObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html,1,['inherit'],['inherited']
Modifiability,"class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the overlay options to control display. or(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise OR of two arrays. or(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through OR. orElse(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one, but only call it if this one returns false. Original - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Original image. OTHER - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Other image type, not covered by any of the alternatives above. OTHER - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Other classification. OTHER - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Other classification. OTHER - Static variable in class qupath.lib.scripting.QP. Any other image type (neither brightfield nor fluorescence). OTHER_STRUCTURE_CHANGE - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A more complex structural change was made than simply either adding or removing objects. output(String, long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape as a long array for a single named output. output(String, DnnShape) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single named output. outputChannels(Collection<ImageChannel>) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify channels for output. outputChannels(ImageChannel...) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify channels for output.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:732208,variab,variable,732208,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"class qupath.lib.gui.prefs.PathPrefs. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. gridSpacingX - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; gridSpacingXProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Horizontal spacing between lines for any counting grid. gridSpacingY - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; gridSpacingYProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Vertical spacing between lines for any counting grid. gridStartXProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Starting x coordinate for any counting grid (usually 0). gridStartYProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Starting y coordinate for any counting grid (usually 0). GROOVY - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Groovy. GROOVY - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; GroovyAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Groovy. GroovyAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.GroovyAutoCompletor. Constructor. GroovyCV - Class in qupath.opencv.tools. Category class for enhanced Groovy scripting with OpenCV. GroovyCV() - Constructor for class qupath.opencv.tools.GroovyCV;  ; GroovyLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of the Groovy programming language in QuPath. GroovyLanguage() - Constructor for class qupath.lib.gui.scripting.languages.GroovyLanguage. Constructor for Groovy Language. GroovyStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools - Class in qupath.lib.io. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:562299,variab,variable,562299,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"class qupath.lib.gui.viewer.OverlayOptions. Set the requested font size for the 'Show names' option. setGamma(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the gamma value for this viewer. setGridLines(GridLines) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the GridLines object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:927798,plugin,plugins,927798,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98481,extend,extends,98481,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBooleanProperty readOnlyProperty; Property indicating whether QuPath is in 'read-only' mode. See Also:. isReadOnly(); setReadOnly(boolean); readOnlyProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. getImageData(); imageDataProperty(). project; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty; Read-only property representing the currently-open project. See Also:. getProject(); setProject(Project); projectProperty(). viewer; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty; Prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:10674,inherit,inherited,10674,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['inherit'],['inherited']
Modifiability,"common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. CLASSIFICATION - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a classification, such as in a labelled image. CLASSIFICATION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to ClassificationModel. classificationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify classification labels. classificationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.images.s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99827,plugin,plugins,99827,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) - Method in interface qupath.lib.projects.ResourceManager.Manager. Save a resource within the project. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:799326,variab,variable,799326,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu); Parse annotations relating to an action, updating the properties of the action with an optional base menu. Parameters:; action - the action to update; element - the annotated element (often a Field).; baseMenu - prepended to any ActionMenu actions. This makes it easier to insert items in sub-menus ; without needing to specify the full menu path every time. putActionProperty; public static void putActionProperty(Node node,; org.controlsfx.control.action.Action action); Add an Action to the properties of a Node, so that it may be retrieved later.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6945,config,configured,6945,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['config'],['configured']
Modifiability,"convert the output into annotation objects. createAnnotationOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into annotation objects. createAnnotations(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create annotation objects by tracing contours in a labelled image. createAnnotations(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create annotation objects from a labelled image. createAnnotations(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of PathAnnotationObject tiles from the input. createAnnotationsFromDensityMap(String, Map<Integer, ? extends Number>, String, String...) - Static method in class qupath.lib.scripting.QP. Create annotations from a density map for the current image. createAnnotationsFromDensityMap(ImageData<BufferedImage>, String, Map<Integer, ? extends Number>, String, String...) - Static method in class qupath.lib.scripting.QP. Create annotations from a density map for the specified image. createAnnotationsFromDensityMap(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, Map<Integer, ? extends Number>, String, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.lib.scripting.QP. Create annotations from a density map for the specified image. createAnnotationsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create annotation objects based upon the output of a pixel classifier, applied to selected objects. createAnnotationsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create annotation objects based upon the output of a pixel classifier, applied to selected objects. createAnnotationsFromPixelClassifier(ImageData<BufferedImage>, PixelClassifier, double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:160143,extend,extends,160143,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"convex hull area. int; getT(). Get time point index. double; getX1(). Get the first x co-ordinate (start of the line). double; getX2(). Get the second x co-ordinate (end of the line). double; getY1(). Get the first y co-ordinate (start of the line). double; getY2(). Get the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:3599,inherit,inherited,3599,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['inherit'],['inherited']
Modifiability,"copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject - ; Returns:. countObjectsWithClass; public static int countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass); Count the number of PathObjects in a collection with a specified class or base class. Parameters:; pathObjects - ; pathClass - ; useBaseClass - ; Returns:. getObjectsOfClass; public static List<PathObject> getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> createImageRegionPredicate(ImageRegion region); Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. Parameters:; region - ; Returns:. getLineObjects; public static <T extends PathObject> List<T> getLineObjects(Collection<T> pathObjects); Get a list of objects with line ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getAreaObjects; public static <T extends ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:15685,extend,extends,15685,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"cores); because the downsamples define the resolutions at which these will be rendered. Parameters:; downsamples - ; Returns:. display; @Deprecated; public RenderedImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double opacity); Specify the opacity for overlay layers.; This will be clipped to the range 0 (transparent) and 1 (opaque). Parameters:; opacity - ; Returns:. layers; public RenderedImageServer.Builder layers(PathOverlay... layers); Specify one or more overlay layers. Parameters:; layers - ; Returns:. layers; public RenderedImageServer.Builder layers(Collection<PathOverlay> layers); Specify one or more overlay layers as a collection. Parameters:; layers - ; Returns:. store; public RenderedImageServer.Builder store(DefaultImageRegionStore store); Specify the region store used to paint the underlying image. Parameters:; store - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(Color color); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; color - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(int rgb,; boolean keepAlpha); Specify a base color. This is useful if transparent overlays or render",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:4211,layers,layers,4211,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"crete Methods. Modifier and Type; Method; Description; int; dim(). Number of values used to represent this point. double; distance(double x,; double y). Calculate the distance between this point and a specified x and y location. double; distance(Point p). Calculate the distance to another point, with the same Point.dim(). double; distance(Point2 p). Calculate the distance between this point and another point. double; distanceSq(double x,; double y). Calculate the squared distance between this point and a specified x and y location. double; distanceSq(Point p). Calculate the squared distance to another point, with the same Point.dim(). boolean; equals(Object obj);  ; double; get(int dim). Get the value of the ordinate for the specified dimension. double; getX(). Get the x coordinate of this point. double; getY(). Get the y coordinate of this point. int; hashCode();  ; void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. Point2; public Point2(); Default constructor for a point at location (0,0). Point2; public Point2(double x,; double y); Point constructor. Parameters:; x - ; y - . Method Details. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the dista",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:1824,inherit,inherited,1824,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,1,['inherit'],['inherited']
Modifiability,"cript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_Overlay_to_QuPath. java.lang.Object; qupathj.QuPath_Send_Overlay_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_Overlay_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath.; ; Optionally measure the ROIs first, and include the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:1057,extend,extends,1057,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,1,['extend'],['extends']
Modifiability,"cript. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WorkflowCommandLogView(QuPathGUI qupath). Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow). Construct a view displaying a static workflow (i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; protected BorderPane; createPane();  ; Pane; getPane(). Get the pane to add to a scene. static void; showScript(ScriptEditor scriptEditor,; Workflow workflow). Show a script in the script editor based on the specified workflow. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath); Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. Parameters:; qupath - . WorkflowCommandLogView; public WorkflowCommandLogView(QuPathGUI qupath,; Workflow workflow); Construct a view displaying a static workflow (i.e. not dependent on any particular ImageData). Parameters:; qupath - ; workflow - . Method Details. getPane; public Pane getPane(); Get the pane to add to a scene. Returns:. createPane; protected BorderPane createPane(). showScript; public static void showScript(ScriptEditor scriptEditor,; Workflow workflow); Show a script in the script editor based on the specified workflow. Parameters:; scriptEditor - ; workflow - . workflowUpdated; public void workflowUpdated(Workflow workflow); Description copied fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html:1714,inherit,inherited,1714,javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/WorkflowCommandLogView.html,1,['inherit'],['inherited']
Modifiability,"cripting.QP. Write the output of applying a density map to an image. writeExternal(ObjectOutput) - Method in class qupath.lib.color.ColorDeconvolutionStains;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.color.StainVector;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.geom.Point2;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathCellObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathObjectConnections;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.PathROIObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.objects.TMACoreObject;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; writeExternal(ObjectOutput) - Method in class qupath.lib.plugins.workflow.Workflow;  ; writeImage(ImagePlus, OutputStream) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(ImagePlus, OutputStream) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(ImagePlus, String) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(ImagePlus, String) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(BufferedImage, OutputStream) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(BufferedImage, String) - Method in class qupath.imagej.images.write",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1113210,plugin,plugins,1113210,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"cription is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:381109,plugin,plugins,381109,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"cription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:381285,plugin,plugins,381285,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"cs - Class in qupath.lib.analysis.stats. Helper class for computing basic statistics from values as they are added. RunningStatistics() - Constructor for class qupath.lib.analysis.stats.RunningStatistics. Default constructor. runObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the current ImageData. runObjectClassifier(ImageData, String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the specified ImageData. runObjectImport(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to import object(s) from a file. runPlugin(String, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData. runPlugin(String, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, using a map for arguments. runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData. runPlugin(String, ImageData<?>, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:876614,plugin,plugin,876614,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"ct, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for multiple objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:29495,extend,extends,29495,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ct. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an ImageSupplier that returns an OpenCV Mat. createMatMaskSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a MaskSupplier that returns an OpenCV Mat. createMaximumChannelTransform() - Static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:195100,extend,extends,195100,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ct>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a startup script that should be run immediately after QuPath's launch. StatisticsHelper - Class in qupath.lib.analysis.stats. Static methods for computing statistics from images, with or without a corresponding labeled image. StatisticsHelper() - Constructor for class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:995993,plugin,plugins,995993,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ct>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the specified hierarchy according to a specified predicate. getObjectsForLocation(PathObjectHierarchy, double, double, int, int, double) - Static method in class qupath.lib.objects.PathObjectTools. Get a collection of objects that overlap a specified pixel location. getObjectsForRegion(Class<? extends PathObject>, ImageRegion, Collection<PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the objects overlapping or close to a specified region. getObjectsForRegion(ImageRegion) - Method in class qupath.lib.images.servers.LabeledImageServer. Get the objects to be painted that fall within a specified region. getObjectsForROI(Class<? extends PathObject>, ROI) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. getObjectsOfClass(Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get the PathObjects in a collection that are instances of a specified class. getODNormalizedColor(int, double, float, float) - Static method in class qupath.lib.color.ColorTransformer. Create a 'normalized' color for visualization. getOffset(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the offset for the specified feature. getOMEString(ImageServer<?>) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get the String representation understood by OMETiffWriter. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived 1+ classification, indicating weak positivity. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getOnePlus(PathClass). getOpacity() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:463012,extend,extends,463012,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ctActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjectAndImage() - Static method in class qupath.lib.scripting.QP. Reset the Project and ImageData used for batch processing for the current thread. resetClassifications(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the current hierarchy. resetClassifications(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.process.gui.WandToolEventHandler. Reset the constraining objects. resetCustomPixelLayerOverlay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Reset the custom pixel layer overlay to null. resetDetectionClassifications() - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all detection objects in the current hierarchy. resetGridSize() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; resetImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Remove the image. reset",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:861554,extend,extends,861554,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ctAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33253,extend,extends,33253,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ctClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.OpenCVModelObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class OpenCVModelObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation may change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCod",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:1415,extend,extends,1415,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['extend'],['extends']
Modifiability,"ctClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1587,plugin,plugins,1587,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ctHierarchy. Deprecated.; since v0.4.0; use PathObjectHierarchy.addObject(PathObject) instead (for naming consistency). addPathObject(PathObject) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.addChildObject(PathObject). addPathObjectBelowParent(PathObject, PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0; use PathObjectHierarchy.addObjectBelowParent(PathObject, PathObject, boolean). addPathObjectListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). addPathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. addPathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.addChildObjects(Collection). addPathObjectSelectionListener(PathObjectSelectionListener) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Add listener for selection changes. addPathObjectWithoutUpdate(PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). addPixelClassifierMeasurements(String, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPixelClassifierMeasurements(PixelClassifier, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Add a new property change",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:24400,extend,extends,24400,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ctInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin cou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:1927,plugin,plugin,1927,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['plugin'],['plugin']
Modifiability,"ctProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2626,inherit,inherited,2626,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"cted AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custom function to calculate a location string for the overlay. void; setOpacity(double opacity). Set opacity between 0 (completely transparent) and 1 (completely opaque). void; setPreferredOverlayColor(Color color). Set a preferred overlay color, which the overlay may or may not make use of. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.overlays.PathOverlay; paintOverlay. Constructor Details. AbstractOverlay; protected AbstractOverlay(OverlayOptions options). Method Details. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options, which may influence the display of this overlay. Returns:. getAlphaComposite; protected AlphaComposite getAlphaComposite(). setAlphaComposite; protected void setAlphaComposite(Graphics2D g2d). isVisible; public boolean isVisible(); Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Returns:. setPreferredOverlayColor; public void setPreferredOverlayColor(Color color); Set a preferred overlay color, which the overlay may or may not make use of.; The aim is to provide a means to suggest drawing with a light color on a dark image, ; or a dark color on a light image. Parameters:; color - . getPreferredOverlayColor; public Color getPreferredOverlayColor(); Return the pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:2437,inherit,inherited,2437,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,1,['inherit'],['inherited']
Modifiability,"cted(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:2546,inherit,inherited,2546,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['inherit'],['inherited']
Modifiability,"ction change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableUpdatesProperty(). Constructor Details. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. PathObjectHierarchyView; public PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; qupath - the current QuPath instance; imageDataProperty - the ImageData to display. Method Details. getPane; public Pane getPane(); Get the pane for display. Returns:. disableUpdatesProperty; public BooleanProperty disableUp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:2016,inherit,inherited,2016,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,1,['inherit'],['inherited']
Modifiability,"ction();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2050,plugin,plugin,2050,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['plugin'],['plugin']
Modifiability,"ction<? extends PathObject>> clusters). Assign object classifications based upon pre-computed clusters. static Collection<PathObject>; classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static List<PathObject>; createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI bounds). Create annotations surrounding objects within a specified subdivision based on Voronoi faces. static DelaunayTools.Subdivision; createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI). Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs. static DelaunayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static DelaunayTools.Builder; newBuilder(Collection<PathObject> pathObjects). Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. static BiPredicate<PathObject,PathObject>; sameClassificationPredicate(). BiPredicate that returns true for objects that share the same classification. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DelaunayTools; public DelaunayTools(). Method Details. newBuilder; public static DelaunayTools.Builder newBuilder(Collection<PathObject> pathObjects); Create a new DelaunayTools.Builder to comput",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:2600,extend,extends,2600,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"ctionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionIcon (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMenu (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMethod (impl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:42663,plugin,plugins,42663,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ctionTools. Parse annotations relating to an action, updating the properties of the action. parseAnnotations(Action, AnnotatedElement, String) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action with an optional base menu. parseArgStringValues(String) - Static method in class qupath.lib.common.GeneralTools. Parse the contents of a JSON String. parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.opencv.CellCountsCV;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. parseColorDeconvolutionStainsArg(String) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. parseDisplaySettings(JsonElement) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object, if possible. parseDisplaySettings(Path) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object. parseLayers(Net, int, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Parse the layers for a Net, which allows inspection of names and sizes. parseNumeric(List<String>, boolean) - Static method in class qupath.lib.io.TMAScoreImporter. Parse numeric values from a list of strings. parseObjectsFromGeoJSON(JsonElement) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:748238,plugin,plugin,748238,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"ctions;  ; preferNucleus(boolean) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). preferredTileSize(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the preferred tile height and width. preferReturnToMove() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Returns false. prefHeight(double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; prefHeight(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the preferred height of the dialog pane. Prefs - Class in qupath.lib.common. Core QuPath preferences. Prefs() - Constructor for class qupath.lib.common.Prefs;  ; prefWidth(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the preferred width of the dialog pane. preprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called after parsing the argument String, and immediately before creating & running any generated tasks. preprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; preprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the preprocessing steps from a collection. preprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the preprocessing steps from an array. Preprocessing - Class in qupath.opencv.ml.objects.features. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing() - Constructor for class qupath.opencv.ml.objects.features.Preprocessing;  ; Preprocessing.PCAProjector - Class in qupath.opencv.ml.objects.features. Helper class to apply PCA projection. preprocessor(FeaturePreprocessor) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a FeaturePreprocessor ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:781229,plugin,plugins,781229,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ctly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescrip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2522,inherit,inherited,2522,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['inherit'],['inherited']
Modifiability,"ctly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2362,inherit,inherited,2362,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['inherit'],['inherited']
Modifiability,"ctor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2073,extend,extends,2073,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['extend'],['extends']
Modifiability,"ctor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplica",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:273329,plugin,plugins,273329,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ctors. Constructor; Description; MenuTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<MenuItem>; addMenuItems(List<MenuItem> menuItems,; Object... items). Add menu items to the specified list. static Menu; addMenuItems(Menu menu,; Object... items). Add menu items to an existing menu. static Menu; createMenu(String name,; Object... items). Create a menu, optionally add new menu items with addMenuItems(List, Object...). static List<MenuItem>; getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items). Get a flattened list of all menu items recursively. static List<MenuItem>; getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators). Get a flattened list of all menu items recursively. static Menu; getMenu(List<Menu> menus,; String name,; boolean createMenu). Get a reference to an existing menu, optionally creating a new menu if it is not present. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MenuTools; public MenuTools(). Method Details. createMenu; public static Menu createMenu(String name,; Object... items); Create a menu, optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:1571,inherit,inherited,1571,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html,1,['inherit'],['inherited']
Modifiability,"cts,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that anal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3190,plugin,plugin,3190,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"cts; Class ShapeFeaturesPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class ShapeFeaturesPlugin<T>; extends AbstractInteractivePlugin<T>; Add shape measurements. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeFeaturesPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:1367,plugin,plugin,1367,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"culated per pixel (by value, not absolute value). HESSIAN_EIGENVALUE_MIN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Minimum eigenvalue of the 2x2 or 3x3 Hessian matrix, calculated per pixel (by value, not absolute value). hessianDeterminant(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the determinant of the Hessian matrix per pixel. hessianEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the eigenvalues of the Hessian matrix per pixel. hiddenClassesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; hideIfEmptyProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property controlling whether the chart should be hidden if there is no data. hierarchy(PathObjectHierarchy) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the PathObjectHierarchy. HIERARCHY_COMPARATOR - Static variable in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Comparator to use when looking for a parent annotation in the hierarchy. hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.UndoRedoManager;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in class qupath.lib.images.ImageData;  ; hierarchyChanged(PathObjectHierarchyEvent) - Method in interface qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener. Not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:578112,variab,variable,578112,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"c void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathTileObject; class PathTileObject extends PathDetectionObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.TMACoreObject; class TMACoreObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.objects.classes. Class qupath.lib.objects.classes.PathClass; class PathClass extends Object implements Serializable. serialVersionUID:; 1L. Serialization Methods. readResolve; protected Object readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exists.; Partly addresses https://github.com/qupath/qupath/issues/1306 (during standard deserialation,; but not from JSON). Throws:; ObjectStreamException. Serialized Fields. colorRGB; Integer colorRGB. name; String name. parentClass; PathClass parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:6428,extend,extends,6428,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"d - if true, include extensions for any compressed files that might contain objects (e.g. .zip); Returns:; file extensions for files from which objects can be read.; Since:; v0.4.0; See Also:. readObjects(Path). getObjectFileExtensions; @Deprecated; public static List<String> getObjectFileExtensions(); Deprecated.; use getObjectFileExtensions(boolean) instead. Get a list of known file extensions that may contain objects. Returns:; file extensions for files from which objects can be read.; See Also:. readObjects(Path). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. Parameters:; file - ; pathObjects - ; options - ; Throws:; IOException; See Also:. exportObjectsAsGeoJSON(Path, Collection, GeoJsonExportOptions...). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. Parameters:; path - ; pathObjects - ; options - ; Throws:; IOException. exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. Parameters:; stream - ; pathObjects - ; options - ; Throws:; IOException. unzippedExtensions; public static Set<String> unzippedExtensions(Path path,; String... zipExtensions); throws IOException; Get the extension of a file, or of all entries within a zip file.; This is useful to check the contents of a file before attempting to read any of it,; for example to confirm if the file is likely to contain images or objects.; ; Not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:13920,extend,extends,13920,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['extend'],['extends']
Modifiability,"d ID.; Since:; v0.5.0. createLike; public static PathObject createLike(PathObject pathObject,; ROI roiNew,; ROI roiNucleus); Create a new object with the same type and classification as the input object, but a new ROI and ID.; This version of the method supports cell objects with a nucleus ROI.; ; Note that TMA core objects are not supported. Parameters:; pathObject - the template object; roiNew - the new ROI; roiNucleus - nucleus ROI; only relevant if the template object is a cell; Returns:; a new object with the same type and classification as the input object, but different ROI and ID.; Since:; v0.5.0. lockObjects; public static void lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Set specified objects to be 'locked'. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. unlockObjects; public static void unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Set specified objects to be 'unlocked'. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. lockSelectedObjects; public static void lockSelectedObjects(PathObjectHierarchy hierarchy); Set selected objects to be 'locked', firing an update event if the status of any object is changed. Parameters:; hierarchy - . unlockSelectedObjects; public static void unlockSelectedObjects(PathObjectHierarchy hierarchy); Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleSelectedObjectsLocked; public static void toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy); Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleObjectsLocked; public static void toggleObjectsLocked(PathObjectHierarchy hi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:51360,extend,extends,51360,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"d Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class ShapeFeaturesPlugin<T>; extends AbstractInteractivePlugin<T>; Add shape measurements. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeFeaturesPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:1575,extend,extends,1575,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['extend'],['extends']
Modifiability,"d Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class SmoothFeaturesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function.; ; This effectively adds in some contextual information. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SmoothFeaturesPlugin(). Default constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:1599,plugin,plugin,1599,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"d Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ColorMaps.ColorMap>; colorMapProperty(). Return the ColorMap property of this canvas. ColorMaps.ColorMap; getColorMap(). Return the currently displayed ColorMaps.ColorMap. boolean; isResizable();  ; double; maxHeight(double width);  ; double; maxWidth(double width);  ; double; minHeight(double width);  ; double; minWidth(double width);  ; double; prefHeight(double width);  ; void; resize(double width,; double height);  ; void; setColorMap(ColorMaps.ColorMap ColorMap). Set the ColorMaps.ColorMap to display to the one with the specified list index. void; setTooltipFunction(Function<Double,String> fun). Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. Methods inherited from class javafx.scene.canvas.Canvas; getGraphicsContext2D, getHeight, getWidth, heightProperty, setHeight, setWidth, widthProperty. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBaselineOffset, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClassCssMetaData, getClip, getContentBias, getCssMetaData, getCursor, getDepthTest, getEffect, getEffectiveNodeOrientation, getEventDispatcher, getId, getInitialCursor, getInitialFocusTrave",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3514,inherit,inherited,3514,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['inherit'],['inherited']
Modifiability,"d annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Parameters:; qupath - ; imageData - . showScriptEditor; public static void showScriptEditor(QuPathGUI qupath); Show the script editor, or bring the window to the front if it is already open. Parameters:; qupath - . createMemoryMonitorDialog; public static Stage createMemoryMonitorDialog(QuPathGUI qupath); Create a dialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:25375,extend,extends,25375,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['extend'],['extends']
Modifiability,"d by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3129,inherit,inherited,3129,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['inherit'],['inherited']
Modifiability,"d discarding the object further away. static Collection<PathObject>; removeOverlapsBySize(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. static Collection<PathObject>; restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap). Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). static PathClass; setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds). Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects,; double buffer). Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> pathObjects). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:11578,extend,extends,11578,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"d in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:476278,plugin,plugins,476278,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,d in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify an array of objects to export. PathObjects - Class in qupath.lib.objects. Helper class to create PathObject. PathObjects() - Constructor for class qupath.lib.objects.PathObjects;  ; PathObjectSelectionListener - Interface in qupath.lib.objects.hierarchy.events. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel - Class in qupath.lib.objects.hierarchy.events. Model for handling selection of single and multiple PathObjects. PathObjectSelectionModel() - Constructor for class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel;  ; PathObjectTools - Class in qupath.lib.objects. A collection of static methods to help work with PathObjects. PathObjectTools() - Constructor for class qupath.lib.objects.PathObjectTools;  ; PathOverlay - Interface in qupath.lib.gui.viewer.overlays. Interface defining an overlay to paint on top of a viewer. PathPlugin<T> - Interface in qupath.lib.plugins. Primary interface for defining a 'plugin' command. PathPrefs - Class in qupath.lib.gui.prefs. Central storage of QuPath preferences. PathPrefs() - Constructor for class qupath.lib.gui.prefs.PathPrefs;  ; PathPrefs.AutoUpdateType - Enum Class in qupath.lib.gui.prefs. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes - Enum Class in qupath.lib.gui.prefs. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize - Enum Class in qupath.lib.gui.prefs. Enum to control font size. PathPrefs.ImageTypeSetting - Enum Class in qupath.lib.gui.prefs. Enum defining how setting the image type should be handled for new images. PathROIObject - Class in qupath.lib.objects. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject - Class in qupath.lib.objects. The root object used at the base of a PathObjectHierarchy. PathRootObject() - Constructor for class qupath.lib.objects.P,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:758650,plugin,plugins,758650,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,d in class qupath.lib.gui.viewer.OverlayOptions. Get a property representing the timestamp of the last recorded change for any property. lastValue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify a string representing the axes layout that the model expects as input. lazyInitialize(boolean) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Optionally request lazy initialization. LEGACY_KEY_UNIQUE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Deprecated. legacyPathToURI(String) - Static method in class qupath.lib.images.servers.ImageServerProvider. Method to help with converting legacy image paths to URIs. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify whether the legend should be shown or not. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.PieChartBu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:648357,layers,layers,648357,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"d in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicrons(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get the preferred pixel size that would be used for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:489996,plugin,plugins,489996,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"d in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannelProperty(). getSynchronizeViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Gets the value of the synchronizeVi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526976,plugin,plugins,526976,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"d in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; closeProject(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Close the current project open in the QuPathGUI. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that this viewer is closed. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; closeViewer(QuPathViewer) - Method in class qupath.lib.gui.QuPathGUI. Close the image within a viewer, prompting to save changes if necessary. closing(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological closing filter. closingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply a morphological closing by reconstruction. closingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. CM_GRAYSCALE - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; CM_GRAYSCALE_INVERTED - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; CodeAreaControl - Class in qupath.lib.gui.scripting.richtextfx. Code area control using RichTextFX. COG - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CoherenceFeaturePlugin - Class in qupath.lib.algorithms. Plugin to calculate coherence features for image tiles. CoherenceFeaturePlugin() - Constructor for class qupath.lib.algorithms.CoherenceFeaturePlugin. Default constructor. COLOR - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using default color LUT (may be composite). COLOR_DECONVOLUTION_REFINE - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ColorDeconvMatrix3x3 - Class in qupath.lib.color. Simple class for representing - and inverting a 3x3 matrix. ColorDeconvMatrix3x3(double[][]) - Constructor for class qupath.lib.color.ColorDeconvMatr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:116610,variab,variable,116610,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"d in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compressi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:637806,plugin,plugins,637806,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"d is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype); Register a s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2490,extend,extends,2490,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['extend'],['extends']
Modifiability,"d on image overlays. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. static DoubleProperty; wandSensitivityProperty(). Property representing the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. static DoubleProperty; wandSigmaPixelsProperty(). Property representing the Gaussian sigma value used to smooth the image when applying the wand. static ObjectProperty<WandToolEventHandler.WandType>; wandTypeProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. static BooleanProperty; wandUseOverlaysProperty(). Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. Methods inherited from class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler; createNewROI, getGeometryFactory, getRequestedCursor, isSubtractMode, mouseDragged, mouseEntered, mouseExited, mouseMoved, mousePressed, mouseReleased, preferReturnToMove. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. wandType; public static ObjectProperty<WandToolEventHandler.WandType> wandTypeProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. wandTypeProperty(). wandUseOverlays; public static BooleanProperty wandUseOverlaysProperty; Property specifying whether the wand tool should be influenced by pixel values painted on image overlays. See Also:. getWandUseOverlays(); setWandUseOverlays(boolean); wandUseOverlaysProperty(). wandSigmaPixels; public static DoubleProperty wandSigmaPixelsProperty; Property representing the Gaussian si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html:5151,inherit,inherited,5151,javadoc/docs/qupath/process/gui/WandToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/WandToolEventHandler.html,1,['inherit'],['inherited']
Modifiability,"d on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of pixels. Parameters:; width - ; height - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html:1133,inherit,inherited,1133,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,1,['inherit'],['inherited']
Modifiability,"d shape measurements for multiple objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThres",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30213,plugin,plugins,30213,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"d t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; public static ROI convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi. Parameters:; roi - ImageJ Roi; xOrigin - x-origin, as stored in an ImageJ Calibration object; yOrigin - y-origin, as stored in an ImageJ Calibration object; downsampleFactor - ; plane - plane defining c, z and t indices; Returns:. convertToOpticalDensitySum; public static FloatProcessor convertToOpticalDensitySum(ColorProcessor cp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:25343,extend,extends,25343,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['extend'],['extends']
Modifiability,"d to request these region from an ImageServer. regionToGeometry(ImageRegion) - Static method in class qupath.lib.roi.GeometryTools. Convert an ImageRegion to a rectangular Geometry. registerAlias(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register an alias label for a specified subtype. registerBuilder(DnnModelBuilder) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModelBuilder. registerDataOp(Class<? extends ImageDataOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageDataOp class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModel class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnTools. Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. registerOp(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:840218,extend,extends,840218,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"d to the constructor of this mapper. double; getDisplayMaxValue(). Get the measurement value that maps to the last color in the color mapper. double; getDisplayMinValue(). Get the measurement value that maps to the first color in the color mapper. boolean; getExcludeOutsideRange(). Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. protected double; getUsefulValue(PathObject pathObject,; double nanValue);  ; boolean; isValid(). Query if the mapper is valid. void; setColorMapper(ColorMaps.ColorMap mapper). Set a new color mapper. void; setDisplayMaxValue(double maxValue). Set the measurement value that maps to the last color in the color mapper. void; setDisplayMinValue(double minValue). Set the measurement value that maps to the first color in the color mapper. void; setExcludeOutsideRange(boolean excludeOutsideRange). Specify whether out-of-range values should be excluded. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementMapper; public MeasurementMapper(ColorMaps.ColorMap mapper,; String measurement,; Collection<? extends PathObject> pathObjects); Constructor. Parameters:; mapper - color mapper (lookup table); measurement - the measurement to colorize; pathObjects - an initial collection of objects used to determine display ranges (i.e. find the min/max values of the specified measurement). Method Details. setColorMapper; public void setColorMapper(ColorMaps.ColorMap mapper); Set a new color mapper. Parameters:; mapper - . getExcludeOutsideRange; public boolean getExcludeOutsideRange(); Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. Returns:. setExcludeOutsideRange; public void setExcludeOutsideRange(boolean excludeOutsideRange); Specify whether out-of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html:2563,inherit,inherited,2563,javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementMapper.html,1,['inherit'],['inherited']
Modifiability,"d() - Static method in class qupath.lib.scripting.QP. Remove the TMA grid from the current PathObjectHierarchy. clip(double, double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that clips Mat values to the specified minimum and maximum. clip(Mat, double, double) - Static method in class qupath.opencv.tools.GroovyCV. Clip values of a Mat to be within a specified minimum and maximum. clip255(double) - Static method in class qupath.lib.common.ColorTools. Convert a double value to an int, flooring and clipping to the range 0-255. clipROIsForHierarchy - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; clipROIsForHierarchyProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). clipToAllowed - Variable in class qupath.lib.display.DirectServerChannelInfo;  ; clipToROI(ROI, Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. clipValue(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Clip a value to be within a specific range. clipValue(int, int, int) - Static method in class qupath.lib.common.GeneralTools. Clip a value to be within a specific range. close() - Method in class qupath.imagej.images.servers.ImageJServer;  ; close() - Method in class qupath.lib.gui.ExtensionClassLoader;  ; close() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; close() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; close() - Method in class qupath.lib.gui.SharedThreadPoolManager. Shutdown any threadpools created by this manager. close() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; close() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:113717,extend,extends,113717,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"d(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:103569,extend,extends,103569,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"d, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; The image display to which the sliders are applied. See Also:. imageDisplayProperty(). disableMinMaxAdjustment; public BooleanProperty disableMinMaxAdjustmentProperty; Prevent the min and max sliders from being adjusted. See Also:. disableMinMaxAdjustmentProperty(). disableGammaAdjustment; public BooleanProperty disableGammaAdjustmentProperty; Prevent gamma from being adjusted. See Also:. disableGammaAdjustmentProperty(). selectedChannel; public ObjectProperty<ChannelDisplayInfo> selectedChannelProperty; The channel to which the sliders are applied.; This should be a channel found within #imageDisplayProperty(). See Also:. selectedChannelProperty(). maxValue; public DoubleProperty maxValueProperty; Value of the maximum slider. See Also:. maxValueProperty(). minValue; public DoubleProperty minValueProperty; Value of the minimum slider. See Also:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:12839,inherit,inherited,12839,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"d. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.writers.ome; Class OMEPyramidWriter.OMEPyramidSeries. java.lang.Object; qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Enclosing class:; OMEPyramidWriter. public static class OMEPyramidWriter.OMEPyramidSeries; extends Object; Class representing a single series to write to an OME-TIFF. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; writePyramid(String path). Deprecated.; use writeSeries(String) instead. void; writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series). Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. void; writeSeries(String path). Write an image to the given file. void; writeSeries(IFormatWriter writer,; IMetadata meta,; int series). Append an image as a specific series. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. writePyramid; @Deprecated; public void writePyramid(String path); throws FormatException,; IOException; Deprecated.; use writeSeries(String) instead. Write an OME-TIFF pyramidal image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writeSeries; public void writeSeries(String path); throws FormatException,; IOException; Write an image to the given file. Parameters:; path - file path for output; Throws:; FormatException; IOException. writePyramid; @Deprecated; public void writePyramid(PyramidOMETiffWriter writer,; IMetadata meta,; int series); throws FormatException,; IOException; Deprecated.; use writeSeries(IFormatWriter, IMetadata, int) instead. Append an image as a specific series to a pyramidal OME TIFF. Parameters:; writer - the current writer; it should already be initialized, with metadata and",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html:1207,inherit,inherited,1207,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.OMEPyramidSeries.html,1,['inherit'],['inherited']
Modifiability,"d. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FillAnnotationHolesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathIn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:1832,extend,extends,1832,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['extend'],['extends']
Modifiability,"d. Get a list of known file extensions that may contain objects. Returns:; file extensions for files from which objects can be read.; See Also:. readObjects(Path). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. Parameters:; file - ; pathObjects - ; options - ; Throws:; IOException; See Also:. exportObjectsAsGeoJSON(Path, Collection, GeoJsonExportOptions...). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. Parameters:; path - ; pathObjects - ; options - ; Throws:; IOException. exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. Parameters:; stream - ; pathObjects - ; options - ; Throws:; IOException. unzippedExtensions; public static Set<String> unzippedExtensions(Path path,; String... zipExtensions); throws IOException; Get the extension of a file, or of all entries within a zip file.; This is useful to check the contents of a file before attempting to read any of it,; for example to confirm if the file is likely to contain images or objects.; ; Note that the identification of the zip file is based solely on the file extension, ; but the attempt to extracted zipped entries will fail if the file is not a valid zip file. Parameters:; path - path representing a file or zip file; zipExtensions - optional list of extensions to treat as representing zip files. ; If none are specified, the default is to use '",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:14285,extend,extends,14285,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['extend'],['extends']
Modifiability,"d; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Class ImageOps.ML. java.lang.Object; qupath.opencv.ops.ImageOps.ML. Enclosing class:; ImageOps. public static class ImageOps.ML; extends Object; Machine learning operations. Constructor Summary; Constructors. Constructor; Description; ML();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames). Apply a DnnModel to pixels to generate a prediction. static ImageOp; preprocessor(FeaturePreprocessor preprocessor). Apply a FeaturePreprocessor to pixels, considering each channel as features. static ImageOp; statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities). Apply a StatModel to pixels to generate a prediction. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ML; public ML(). Method Details. statModel; public static ImageOp statModel(OpenCVClassifiers.OpenCVStatModel statModel,; boolean requestProbabilities); Apply a StatModel to pixels to generate a prediction. Parameters:; statModel - ; requestProbabilities - ; Returns:. dnn; public static ImageOp dnn(DnnModel model,; int inputWidth,; int inputHeight,; Padding padding,; String... outputNames); Apply a DnnModel to pixels to generate a prediction. Parameters:; model - ; inputWidth - requested input width; inputHeight - requested input height; padding - amount of padding provided; outputNames - names of model outputs. If empty, the first (and often only) output is used. ; If more than one output is specified, it is assumed that all are the same size ; and they be concatenated along the channels dimension.; Returns:. preprocessor; public static ImageOp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html:1169,inherit,inherited,1169,javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.ML.html,1,['inherit'],['inherited']
Modifiability,"d; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui; Class ProcessingExtension.ObjectClassificationCommands. java.lang.Object; qupath.process.gui.ProcessingExtension.ObjectClassificationCommands. Enclosing class:; ProcessingExtension. @ActionMenu({""Menu.Classify"",""Menu.Classify.ObjectClassification""}); public class ProcessingExtension.ObjectClassificationCommands; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; actionComposite;  ; final org.controlsfx.control.action.Action; actionIntensity;  ; final org.controlsfx.control.action.Action; actionLoadObjectClassifier;  ; final org.controlsfx.control.action.Action; actionMeasurement;  ; final org.controlsfx.control.action.Action; actionObjectClassifier;  ; final org.controlsfx.control.action.Action; SEP;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. actionLoadObjectClassifier; @ActionConfig(""Action.Processing.Classify.loadObjectClassifier""); public final org.controlsfx.control.action.Action actionLoadObjectClassifier. SEP; public final org.controlsfx.control.action.Action SEP. actionObjectClassifier; @ActionAccelerator(""shortcut+shift+d""); @ActionConfig(""Action.Processing.Classify.trainObjectClassifier""); public final org.controlsfx.control.action.Action actionObjectClassifier. actionMeasurement; @ActionConfig(""Action.Processing.Classify.createSingleMeasurementClassifier""); public final org.controlsfx.control.action.Action actionMeasurement. actionComposite; @ActionConfig(""Action.Processing.Classify.createCompositeClassifier""); public final org.controlsfx.control.action.Action actionComposite. actionIntensity; @ActionConfig(""Action.Processing.Classify.setCellIntensityClassifications""); public fin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html:1199,inherit,inherited,1199,javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.ObjectClassificationCommands.html,1,['inherit'],['inherited']
Modifiability,"d; Index; Help. SEARCH. QuPath 0.5.0. Packages. Package; Description; qupath. Package containing the main QuPath launcher. qupath.ext.openslide;  ; qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index.html:1143,plugin,plugins,1143,javadoc/docs/index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index.html,1,['plugin'],['plugins']
Modifiability,"d; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class GroovyLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage; qupath.lib.gui.scripting.languages.GroovyLanguage. All Implemented Interfaces:; ExecutableLanguage. public class GroovyLanguage; extends DefaultScriptLanguage; implements ExecutableLanguage; Class for the representation of the Groovy programming language in QuPath.; ; This class stores the QuPath implementation of Groovy syntaxing and Groovy auto-completion. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; DefaultScriptLanguage.ImportStatementGenerator. Field Summary. Fields inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; JAVA_IMPORTER, PYTHON_IMPORTER. Constructor Summary; Constructors. Constructor; Description; GroovyLanguage(). Constructor for Groovy Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. static GroovyLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.gui.scripting.languages.DefaultScriptLanguage; createContext, execute, getAutoCompletor, getDefaultAutoCompletor, getDefaultScriptName, getImportStatements, getStaticImportStatements, tryToInterpretMessage. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, no",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html:1132,inherit,inherited,1132,javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/GroovyLanguage.html,1,['inherit'],['inherited']
Modifiability,"d; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionControlPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.VBox; qupath.lib.gui.ExtensionControlPane. All Implemented Interfaces:; Styleable, EventTarget. public class ExtensionControlPane; extends VBox; Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. Property Summary. Properties inherited from class javafx.scene.layout.VBox; alignment, fillWidth, spacing. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:1140,inherit,inherited,1140,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['inherit'],['inherited']
Modifiability,"d; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>; getAnnotationObjects(). Get all annotation objects in the hierarchy. Collection<PathObject>; getCellObjects(). Get all cell objects in the hierarchy. Collection<PathObject>; getDetectionObjects(). Get all detection objects in the hierarchy (including sub-classes of detections). List<PathObject>; getFlattenedObjectList(List<PathObject> list). Get a flattened list containing all PathObjects in the hierarchy (including from the root object). Collection<PathObject>; getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects). Get the objects overlapping or close to a specified region. Collection<PathObject>; getObjectsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; getSelectionModel(). Get the selection model, which handles the selection status of objects. Collection<PathObject>; getTileObjects(). Get all tile objects in the hierarchy. TMAGrid; getTMAGrid(). Get the TMAGrid, or null if there is no TMA grid associated wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:5285,extend,extends,5285,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"dException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.images.servers.openslide.jna. Exception Class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException; class OpenSlideDisposedException extends RuntimeException implements Serializable. Package qupath.lib.measurements. Class qupath.lib.measurements.NumericMeasurementList.DoubleList; class DoubleList extends qupath.lib.measurements.NumericMeasurementList.AbstractNumericMeasurementList implements Serializable. serialVersionUID:; 1L. Serialized Fields. values; double[] values. Class qupath.lib.measurements.NumericMeasurementList.FloatList; class FloatList extends qupath.lib.measurements.NumericMeasurementList.AbstractNumericMeasurementList implements Serializable. serialVersionUID:; 1L. Serialized Fields. values; float[] values. Package qupath.lib.objects. Class qupath.lib.objects.DefaultPathObjectConnectionGroup; class DefaultPathObjectConnectionGroup extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathAnnotationObject; class PathAnnotationObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathCellObject; class PathCellObject extends PathDetectionObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:2325,extend,extends,2325,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"dImage>>, PathObjectHierarchyListener; Grid display of objects.; ; Previously this was TMAGridView, but it was generalized for v0.4.0 to support other kinds of object.; ; This requires cores in memory, so does not scale wonderfully... but it can be quite useful for individual slides. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageData<BufferedImage>>; imageData;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectGridView.GridDisplaySize;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:1694,extend,extends,1694,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,1,['extend'],['extends']
Modifiability,"dImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2654,inherit,inherited,2654,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['inherit'],['inherited']
Modifiability,"dImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultPa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2520,inherit,inherited,2520,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['inherit'],['inherited']
Modifiability,"dImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2186,inherit,inherited,2186,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['inherit'],['inherited']
Modifiability,"dObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. Parameters:; pathObject - ; addToSelection - add to the existing selection, rather than allowing only the specified object to be selected; See Also:. setSelectedObject(PathObject). deselectObject; public void deselectObject(PathObject pathObject); Ensure that the specified object is removed from the selection. Parameters:; pathObject - . deselectObjects; public void deselectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are deselected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . selectObjects; public void selectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are selected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . setSelectedObject; public void setSelectedObject(PathObject pathObject); Set the specified object to be selected, deselecting all others. Parameters:; pathObject - . getSelectedObject; public PathObject getSelectedObject(); Get the current primary selected object. Returns:. isSelected; public boolean isSelected(PathObject pathObject); Query whether a specific object is selected. Parameters:; pathObject - ; Returns:. getSelectedROI; public ROI getSelectedROI(); Get the ROI of the selected object, if available, or null. Returns:. clearSelection; public void clearSelection(); Clear selection so that no objects are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:4092,extend,extends,4092,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['extend'],['extends']
Modifiability,"dPathObjectBelowParent; @Deprecated; public boolean addPathObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate); Deprecated.; since v0.4.0; use addObjectBelowParent(PathObject, PathObject, boolean). Legacy method to path object as descendant of the requested parent. Parameters:; pathObjectParent - ; pathObject - ; fireUpdate - ; Returns:. addObjectBelowParent; public boolean addObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate); Add path object as descendant of the requested parent. Parameters:; pathObjectParent - ; pathObject - ; fireUpdate - ; Returns:; Since:; v0.4.0 (replaces addPathObjectBelowParent(PathObject, PathObject, boolean). addObjects; public boolean addObjects(Collection<? extends PathObject> pathObjects); Add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:; Since:; v0.4.0; replaces addPathObjects(Collection). addPathObjects; @Deprecated; public boolean addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0; use addObjects(Collection) instead. Legacy method to add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:. clearAll; public void clearAll(); Remove all objects from the hierarchy. getPointObjects; public Collection<PathObject> getPointObjects(Class<? extends PathObject> cls); Get objects that contain Point ROIs. Parameters:; cls - ; Returns:. getCellObjects; public Collection<PathObject> getCellObjects(); Get all cell objects in the hierarchy. Returns:. getTileObjects; public Collection<PathObject> getTileObjects(); Get all tile objects in the hierarchy. Returns:. getDetectionObjects; public Collection<PathObject> getDetectionObjects(); Get all detection objects in the hierarchy (including sub-classes of detections). Returns:. getAnnotationObjects; public Collection<PathObject> getAnnotationObjects(); Get all annotation objects in the hierarchy. Returns:. getObjects; public Collection<Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:15358,extend,extends,15358,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"dater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, so any existing items in the collection will be removed.; replacements - map used to store any replacements identified by the UriUpdater. Note that any existing contents will be discarded.; Returns:; Throws:; IOException. wrap; public static Uri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3870,extend,extends,3870,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['extend'],['extends']
Modifiability,"ddActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; AddActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; addAllRegions(ImageServer<BufferedImage>, int) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Add all regions for a specific level of an ImageServer. addBooleanParameter(String, String, boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter. addBooleanParameter(String, String, boolean, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter, with help text. addChartExportMenu(XYChart<Number, Number>, ContextMenu) - Static method in class qupath.lib.gui.charts.ChartTools. Add a menu item to a context menu for displaying a chart for export. addChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Add an object to the child list of this object. addChildObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Add a collection of objects to the child list of this object. addChoiceParameter(String, String, S, List<S>) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices. addChoiceParameter(String, String, S, List<S>, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices and help text. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addClusterMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Compute mean measurements fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:13101,extend,extends,13101,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"dded (e.g. to a menu or toolbar). Returns:. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(String text,; Consumer<ActionEvent> handler); Create an ActionTools.ActionBuilder with the specified text and event handler. Parameters:; text - ; handler - ; Returns:; a new ActionTools.ActionBuilder. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(); Create an ActionTools.ActionBuilder with no properties set. Returns:; a new ActionTools.ActionBuilder. actionBuilder; public static ActionTools.ActionBuilder actionBuilder(Consumer<ActionEvent> handler); Create an ActionTools.ActionBuilder with the specified event handler. Parameters:; handler - ; Returns:; a new ActionTools.ActionBuilder. createMenuItem; public static MenuItem createMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action,; ToggleGroup group); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:10543,config,configured,10543,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['config'],['configured']
Modifiability,"deLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:259513,plugin,plugins,259513,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"deType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.extension.svg; Enum Class SvgTools.SvgBuilder.ImageIncludeType. java.lang.Object; java.lang.Enum<SvgTools.SvgBuilder.ImageIncludeType>; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. All Implemented Interfaces:; Serializable, Comparable<SvgTools.SvgBuilder.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1029,extend,extends,1029,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,1,['extend'],['extends']
Modifiability,"ded must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65063,plugin,plugin,65063,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,3,['plugin'],['plugin']
Modifiability,"ded, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:4585,plugin,plugin,4585,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['plugin'],['plugin']
Modifiability,"ded. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TilerPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:1798,plugin,plugins,1798,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugins']
Modifiability,"der initialized with the same properties as an existing builder. static DensityMaps.DensityMapBuilder; builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter). Create a new DensityMaps.DensityMapBuilder to generate a customized density map. static void; findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customize",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:2916,extend,extends,2916,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['extend'],['extends']
Modifiability,"der.FeatureMap (implements java.util.Map<K,V>). qupath.lib.classifiers.object.AbstractObjectClassifier<T> (implements qupath.lib.classifiers.object.ObjectClassifier<T>). qupath.opencv.dnn.DnnObjectClassifier (implements qupath.lib.io.UriResource); qupath.opencv.ml.objects.OpenCVMLClassifier<T>; qupath.opencv.dnn.OpenCVModelObjectClassifier (implements qupath.lib.io.UriResource). qupath.lib.gui.viewer.overlays.AbstractOverlay (implements qupath.lib.gui.viewer.overlays.PathOverlay). qupath.lib.gui.viewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:5801,plugin,plugins,5801,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"der.ImageIncludeType>, Constable. Enclosing class:; SvgTools.SvgBuilder. public static enum SvgTools.SvgBuilder.ImageIncludeType; extends Enum<SvgTools.SvgBuilder.ImageIncludeType>; Enum defining ways in which raster images may be included in the SVG file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EMBED. Embed the image (as Base64-encoded PNG). LINK. Link the image (to a separate PNG). NONE. Do not include images. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static SvgTools.SvgBuilder.ImageIncludeType; valueOf(String name). Returns the enum constant of this class with the specified name. static SvgTools.SvgBuilder.ImageIncludeType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final SvgTools.SvgBuilder.ImageIncludeType NONE; Do not include images. EMBED; public static final SvgTools.SvgBuilder.ImageIncludeType EMBED; Embed the image (as Base64-encoded PNG). LINK; public static final SvgTools.SvgBuilder.ImageIncludeType LINK; Link the image (to a separate PNG). Method Details. values; public static SvgTools.SvgBuilder.ImageIncludeType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SvgTools.SvgBuilder.ImageIncludeType valueOf(String name); Returns the enum constant of this class with the specified name.; The string m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html:1663,inherit,inherited,1663,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.ImageIncludeType.html,1,['inherit'],['inherited']
Modifiability,"der; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion region). Specify the region (in terms of the full resolution image space) for export. SvgTools.SvgBuilder; showSelection(boolean doShow). Request whether selected objects are displayed. SvgTools.SvgBuilder; size(int width,; int height). Export image size. SvgTools.SvgBuilder; width(int width). Export image width. void; writeSVG(File file). Write the SVG image to a file, including any references images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will later be customized. Method Details. imageData; public SvgTools.SvgBuilder imageData(ImageData<BufferedImage> imageData); Specify the ImageData. This is required if the underlying raster image will be included in any export. Parameters:; imageData - ; Returns:; this builder. hierarchy; public SvgTools.SvgBuilder hierarchy(PathObjectHierarchy hierarchy); Specify the PathObjectHierarchy. This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; hierarchy - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(Collection<? extends PathObject> pathObjects); Specify a collection of obje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:3282,inherit,inherited,3282,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['inherit'],['inherited']
Modifiability,"der; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request CUDA backend and target, if available, with 16-bit floating point. Returns:. target; public OpenCVDnn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:2856,config,config,2856,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['config'],['config']
Modifiability,der; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters; qupath.process.gui.commands.density.DensityMapUI; qupath.lib.plugins.DetectionPluginTools; qupath.lib.gui.dialogs.Dialogs; qupath.lib.gui.dialogs.Dialogs.Builder; qupath.lib.display.DirectServerChannelInfo; qupath.lib.display.settings.DisplaySettingUtils; qupath.lib.analysis.DistanceTools; qupath.opencv.dnn.DnnModelParams; qupath.opencv.dnn.DnnModelParams.Builder; qupath.opencv.dnn.DnnModels; qupath.opencv.dnn.DnnShape; qupath.opencv.dnn.DnnTools; qupath.opencv.dnn.DnnTools.DNNLayer; qupath.lib.gui.tools.DocGenerator (implements java.lang.Runnable); qupath.lib.gui.viewer.DragDropImportListener (implements javafx.event.EventHandler<T>); qupath.lib.gui.actions.menus.EditMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.EditMenuActions.Actions; qupath.lib.gui.actions.menus.EditMenuActions.CopyActions; qupath.lib.roi.EllipseROI (implements java.io.Serializable); qupath.lib.plugins.parameters.EmptyParameter; qupath.lib.analysis.algorithms.EstimateStainVectors; qupath.lib.gui.commands.ExportObjectsCommand; qupath.process.gui.commands.ExportTrainingRegionsCommand (implements java.lang.Runnable); qupath.lib.gui.viewer.tools.ExtendedPathTool (implements qupath.lib.gui.viewer.tools.PathTool); qupath.lib.gui.ExtensionManager; qupath.lib.gui.actions.menus.ExtensionsMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions; qupath.lib.io.FeatureCollection; qupath.opencv.ml.objects.features.FeatureExtractors; qupath.opencv.ml.FeaturePreprocessor; qupath.opencv.ml.FeaturePreprocessor.Builder; qupath.lib.gui.FileCopier; qupath.lib.images.servers.FileFormatInfo; qupath.lib.gui.actions.menus.FileMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.FileMenuActions.Actions; qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions; qupath.lib.gui.actions.menu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:14434,plugin,plugins,14434,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"der<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; BioFormatsServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:1898,inherit,inherited,1898,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,1,['inherit'],['inherited']
Modifiability,"derTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126441,plugin,plugins,126441,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"descendants, recursively, optionally assigning; new IDs to the created objects. static void; unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'unlocked'. static void; unlockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. static PathObject; updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject - ; Returns:. countObjectsWithClass; public static int countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass); Count the number of PathObjects in a collection with a specified class or base class. Parameters:; pathObjects - ; pathClass - ; useBaseClass - ; Returns:. getObjectsOfClass; public static List<PathObject> getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:15243,inherit,inherited,15243,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['inherit'],['inherited']
Modifiability,"detections in the current hierarchy. setDetectionIntensityClassifications(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the specified hierarchy. setDisplayMaxValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the last color in the color mapper. setDisplayMinValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:924136,plugin,plugins,924136,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.Line",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:273168,plugin,plugins,273168,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"difier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:1991,inherit,inherited,1991,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,1,['inherit'],['inherited']
Modifiability,"difier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a file. Parameters:; file - ; pathObjects - ; Throws:; IOException. readPointsObjectList; @Deprecated; public static List<PathObject> readPointsObjectList(File file); throws ZipException,; IOException; Deprecated.; Read a list of point annotations from a file. Not recommended for use (will be removed in future releases). Parameters:; file - ; Returns:; Throws:; ZipException; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:2001,extend,extends,2001,javadoc/docs/qupath/lib/io/PointIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html,2,['extend'],['extends']
Modifiability,"ditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class RichScriptEditor. java.lang.Object; qupath.lib.gui.scripting.DefaultScriptEditor; qupath.lib.gui.scripting.richtextfx.RichScriptEditor. All Implemented Interfaces:; ScriptEditor. public class RichScriptEditor; extends DefaultScriptEditor; Rich script editor for QuPath, which can be used for handling different languages.; ; Makes use of RichTextFX, Copyright (c) 2013-2017, Tomas Mikula and contributors (BSD 2-clause license). Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; currentLanguage, currentSyntax, sendLogToConsole. Field Summary. Fields inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; beautifySourceAction, comboPasteEscape, completionCodeCombination, compressSourceAction, copyAction, cutAction, findAction, insertAllDefaultImportAction, insertDetectionMeasurementsAction, insertMuAction, insertObjectClassifiersAction, insertPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewCons",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html:1003,inherit,inherited,1003,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,1,['inherit'],['inherited']
Modifiability,"downsampleXY). Set the pixel calibration, with optional x,y scaling. MultiscaleFeatures.MultiscaleResultsBuilder; retainHessian(boolean retain). Optionally retain the Hessian matrix per pixel. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaX(double sigma). Set all Gaussian sigma values for the horizontal filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaXY(double sigma). Set all Gaussian sigma values (x, y) to the same value. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaY(double sigma). Set all Gaussian sigma values for the vertical filter. MultiscaleFeatures.MultiscaleResultsBuilder; sigmaZ(double sigma). Set all Gaussian sigma values for the z-dimension filter. MultiscaleFeatures.MultiscaleResultsBuilder; structureTensorEigenvalues(boolean calculate). Calculate the eigenvalues of the structure tensor (not yet implemented!). MultiscaleFeatures.MultiscaleResultsBuilder; weightedStdDev(boolean calculate). Calculate a Gaussian-weighted standard deviation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(); Default constructor. MultiscaleResultsBuilder; public MultiscaleResultsBuilder(Collection<MultiscaleFeatures.MultiscaleFeature> features); Constructor prepared to calculate specified features. Parameters:; features - . Method Details. gaussianSmoothed; public MultiscaleFeatures.MultiscaleResultsBuilder gaussianSmoothed(boolean calculate); Calculate the Gaussian-smoothed image. Parameters:; calculate - ; Returns:. paddingXY; public MultiscaleFeatures.MultiscaleResultsBuilder paddingXY(int padding); Specify the number of pixels that the input image is padded (left, right, above, below). ; This padding will be stripped prior to outputting the results. Default is 0. Parameters:; padding - ; Returns:. weightedStdDev; public MultiscaleFeatures.MultiscaleResultsBuilder weightedStdDev(boolean ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:3637,inherit,inherited,3637,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,1,['inherit'],['inherited']
Modifiability,"ds ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay;  ; changeMaxValues(double, double, double) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object with the same StainVectors but new max (background) values. changeName(String) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object with the same StainVectors but a new name. changeStain(StainVector, int) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object, identical to this one but for one StainVector having been changed. changeTimestampProperty() - Method in class qupath.lib.display.ImageDisplay. Timestamp for the most recent change. CHANNEL_ALL_OBJECTS - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Channel name for the channel with all object counts (not always present). CHANNEL_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ChannelColor - Class in qupath.lib.display.settings. A simple class to store the color of an image channel. ChannelColor() - Constructor for class qupath.lib.display.settings.ChannelColor;  ; ChannelDisplayInfo - Interface in qupath.lib.display. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo - Interface in qupath.lib.display. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode - Enum Class in qupath.lib.display. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer - Class in qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:92772,variab,variable,92772,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,ds.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. LAPLACIAN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Laplacian of Gaussian filter. laplacianOfGaussian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the Laplacian of Gaussian image. LARGE - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; LARGE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; lastChangeTimestamp() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get a property representing the timestamp of the last recorded change for any property. lastValue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify a string representing the axes layout that the model expects as input. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:647804,plugin,plugins,647804,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"dsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1909,inherit,inherited,1909,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['inherit'],['inherited']
Modifiability,"dth,; int height,; boolean doCache). Create an empty tile for this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:2963,inherit,inherited,2963,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['inherit'],['inherited']
Modifiability,"duced in v0.4.0 for testing. Returns:; Since:; v0.4.0. createEmptyMeasurementList; protected MeasurementList createEmptyMeasurementList(); Create a new MeasurementList of the preferred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a collection of objects to the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. addPathObjects; @Deprecated; public void addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:10492,extend,extends,10492,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['extend'],['extends']
Modifiability,"dy to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. createTrainData; public TrainData createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Create training data in the format required by this classifier. Parameters:; samples - ; targets - ; weights - optional weights; doMulticlass - ; Returns:; See Also:. OpenCVClassifiers.OpenCVStatModel.train(TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html:2305,inherit,inherited,2305,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.LogisticRegressionClassifier.html,1,['inherit'],['inherited']
Modifiability,"dy to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Returns:; true if interactive classification is supported, false otherwise. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (pseudo-)probabilities can be provided. isTrained; public boolean isTrained(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html:2238,inherit,inherited,2238,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.SVMClassifierCV.html,2,['inherit'],['inherited']
Modifiability,"dy to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. protected void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. supportsProbabilities; public boolean supportsProbabilities(); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... even if it isn't necessarily one. Specified by:; supportsProbabilities in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html:2240,inherit,inherited,2240,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.BoostClassifier.html,3,['inherit'],['inherited']
Modifiability,"d void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:4318,plugin,plugin,4318,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugin']
Modifiability,"d void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:4298,plugin,plugin,4298,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,5,['plugin'],['plugin']
Modifiability,"d writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8769,extend,extends,8769,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"d | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1243,inherit,inherited,1243,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html,1,['inherit'],['inherited']
Modifiability,"e 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:2092,plugin,plugin,2092,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability,"e (0-based index); t - timepoint (0-based index); Since:; v0.4.0; See Also:. selectObjectsByPlane(PathObjectHierarchy, ImagePlane). selectObjectsByPlane; public static void selectObjectsByPlane(ImagePlane plane); Selected objects in the current hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; plane - ; Since:; v0.4.0; See Also:. selectObjectsByPlane(PathObjectHierarchy, ImagePlane). selectObjectsByPlane; public static void selectObjectsByPlane(PathObjectHierarchy hierarchy,; ImagePlane plane); Selected objects in the specified hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; hierarchy - ; plane - ; Since:; v0.4.0. selectObjects; public static void selectObjects(Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects); Set all objects in a collection to be selected, without any being chosen as the main object. Parameters:; pathObjects - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection); Set all objects in a collection to be selected, including a specified main selected object. Parameters:; pathObjects - ; mainSelection - . selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Set one or more objects to be selected within the specified hierarchy. Parameters:; hierarchy - ; pathObjects - . selectObjects; public static void selectObjects(PathObject... pathObjects); Set one or more objects to be selected within the current hierarchy. Parameters:; pathObjects - . getObjects; public static List<PathObject> getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Get a list of all objects in the specified hierarchy according to a specified predicate. Parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:85495,extend,extends,85495,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"e == 0 and there is any non-zero area intersection between ROIs; ; For example, overlapTolerance == 10 will require at least 10 pixels between ROIs to intersect to be considered an overlap,; while overlapTolerance == 0.01 will require at least 1% of the area of the smaller ROI to intersect.; ; It is recommended to keep overlapTolerance == 0 in most instances to remove all overlaps.; This is also less computationally expensive because it means intersection areas do not need to be calculated. Parameters:; pathObjects - input object collection, which may contain overlapping objects; comparator - comparator, which determines which object is retained when overlaps are found.; Considering the collection to be sorted by the comparator, the 'first' object is the one that will be kept.; overlapTolerance - amount of overlap to permit; Returns:; collection of objects, which should have smaller overlapping objects removed. mergeObjects; public static PathObject mergeObjects(Collection<? extends PathObject> pathObjects); Merge objects by calculating the union of their ROIs. Parameters:; pathObjects - a collection of annotations, cells, detections or tiles. Note that all objects must be of the same type.; Returns:; a single object with ROI(s) determined by union. The classification and name will be taken from the first ROI in the collection.; Throws:; IllegalArgumentException - if no objects are provided (either null or empty list). mergeObjects; public static <K> List<PathObject> mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier); Merge objects that share a property in common.; ; Note that objects must all be of the same type (e.g. cells, detections, annotations). Parameters:; pathObjects - ; classifier - function extracting the shared property, e.g. p -> p.getName(); Returns:; a new list of objects generated by merging grouped objects.; See Also:. mergeObjects(Collection). createLike; public static PathObject createLi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:48977,extend,extends,48977,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"e Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Descripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:2132,inherit,inherited,2132,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['inherit'],['inherited']
Modifiability,"e a new builder initialized with the settings from an existing Tiler. List<PathObject>; createAnnotations(ROI parent). Create a list of PathAnnotationObject tiles from the input. List<Geometry>; createGeometries(Geometry parent). Create a list of Geometry tiles from the input. List<PathObject>; createObjects(ROI parent,; Function<ROI,PathObject> creator). Create a list of PathObject tiles from the input. List<ROI>; createROIs(ROI parent). Create a list of ROI tiles from the input. List<PathObject>; createTiles(ROI parent). Create a list of PathTileObject tiles from the input. Tiler.TileAlignment; getAlignment(). Get the tiling alignment. boolean; getCropToParent(). Check if the tiler is set to crop the output to the input parent. boolean; getFilterByCentroid(). Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. int; getTileHeight(). Get the height of output tiles. int; getTileWidth(). Get the width of output tiles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getTileWidth; public int getTileWidth(); Get the width of output tiles. Returns:; the width in pixels. getTileHeight; public int getTileHeight(); Get the height of output tiles. Returns:; the height in pixels. getCropToParent; public boolean getCropToParent(); Check if the tiler is set to crop the output to the input parent. Returns:; whether the tiler is set to crop output to the parent object. getAlignment; public Tiler.TileAlignment getAlignment(); Get the tiling alignment. Returns:; The current setting. getFilterByCentroid; public boolean getFilterByCentroid(); Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Returns:; The current setting. createGeometries; public List<Geometry> createGeometries(Geometry parent); Create a list of Geometry tiles from the input. These may; not all be rectangu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html:2211,inherit,inherited,2211,javadoc/docs/qupath/lib/objects/utils/Tiler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.html,1,['inherit'],['inherited']
Modifiability,"e an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double opacity); Specify the opacity for overlay layers.; This will be clipped to the range 0 (transparent) and 1 (opaque). Parameters:; opacity - ; Returns:. layers; public RenderedImageServer.Builder layers(PathOverlay... layers); Specify one or more overlay layers. Parameters:; layers - ; Returns:. layers; public RenderedImageServer.Builder layers(Collection<PathOverlay> layers); Specify one or more overlay layers as a collection. Parameters:; layers - ; Returns:. store; public RenderedImageServer.Builder store(DefaultImageRegionStore store); Specify the region store used to paint the underlying image. Parameters:; store - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(Color color); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; color - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(int rgb,; boolean keepAlpha); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; rgb - packed (A)RGB version of the color; keepAlpha - true if the packed color contains an alpha value; Returns:. build; public ImageServer<BufferedImage> build(); throws IOException; Create the rendered image server. Returns:; Throws:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:4444,layers,layers,4444,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"e an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static OutputHandler<ImagePlus,ImagePlus,Object>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<ImagePlus>; createImagePlusImageSupplier(). Create an ImageSupplier that returns an ImageJ ImagePlus. static MaskSupplier<ImagePlus,ImagePlus>; createImagePlusMaskSupplier(). Create a MaskSupplier that returns an ImageJ ByteProcessor. static <U> OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U>; createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter for one specify type. static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJProcessor; public ImageJProcessor(). Method Details. createImagePlusImageSupplier; public static ImageSupplier<ImagePlus> createImagePlusImageSupplier(); Create an ImageSupplier that returns an ImageJ ImagePlus. Returns:. createImagePlusMaskSupplier; public static MaskSupplier<ImagePlus,ImagePlus> createImagePlusMaskSupplier(); Create a MaskSupplier that returns an ImageJ ByteProcessor. Returns:. createDetectionOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createAnnotationOutputHandler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:2432,inherit,inherited,2432,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['inherit'],['inherited']
Modifiability,"e an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToObjectConverter). consumeOutput; static <S,; T,; U> OutputHandler<S,T,U> consumeOutput(); Create a basic do-nothing output handler that consumes the output with no changes.; This returns true regardless of input, without doing anything further. Type Parameters:; S - ; T - ; U - ; Returns:. handleOutputMeasurements; static boolean handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output); Handle the output of a pixel processor by adding measurements to the path object. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; PathClass output); Handle the output of a pixel processor by setting a PathClass. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; String output); Handle the output of a pixel processor by setting a PathClass, given by its name. Parameters:; params - ; output - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:6182,extend,extends,6182,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['extend'],['extends']
Modifiability,"e event if the status of any object is changed. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create a transformed version of a PathObject with a new ID. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create a transformed version of a PathObject, optionally with a new ID. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create (optionally) transformed versions of the PathObject and all its descendants, recursively. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create (optionally) transformed versions of the PathObject and all its descendants, recursively, optionally assigning; new IDs to the created objects. static void; unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'unlocked'. static void; unlockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. static PathObject; updatePlane(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane). Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Construct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:14403,extend,extends,14403,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"e for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options). Export specified objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export the selected objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export the selected objects to an output file as GeoJSON. static boolean; fileExists(String path). Query if a file exists. static void; findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map for the current image. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static void; findDensityMapHotspots(Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:15877,extend,extends,15877,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"e minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from whe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:445459,extend,extends,445459,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"e more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2036,plugin,plugins,2036,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugins']
Modifiability,"e number of PathObjects in a collection with a specified class or base class. Parameters:; pathObjects - ; pathClass - ; useBaseClass - ; Returns:. getObjectsOfClass; public static List<PathObject> getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> createImageRegionPredicate(ImageRegion region); Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. Parameters:; region - ; Returns:. getLineObjects; public static <T extends PathObject> List<T> getLineObjects(Collection<T> pathObjects); Get a list of objects with line ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getAreaObjects; public static <T extends PathObject> List<T> getAreaObjects(Collection<T> pathObjects); Get a list of objects with area ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getPointObjects; public static <T extends PathObject> List<T> getPointObjects(Collection<T> pathObjects); Get a list of objects with point ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getFlattenedObjectList; public static List<PathObject> getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent); Get all descendant objects as a flattened list. Parameters:; parentObject - the parent objects whose children and descendants should be added to the list; list - output list, optional; includeParent - if true, parentObject will be included in the output list; Returns:; either list, or a new list created if necessary. countDescendants; public static int countDescendants(PathObject pathObject); Count the descendants of a PathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:16721,extend,extends,16721,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"e of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3758,inherit,inherited,3758,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['inherit'],['inherited']
Modifiability,"e or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; public ObservableList<PathOverlay> getCustomOverlayLayers(); Get direct access to the custom overlay list. Returns:. getGammaOp; public LookupOp getGammaOp(); Get a LookupOp that can perform any requested gamma correction in this viewer.; Note that the gamma is applied to the RGB image (not the original data). Returns:; a gamma op if specified, or null if no gamma adjustment is required (gamma is 1.0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:27051,layers,layers,27051,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['layers'],['layers']
Modifiability,"e results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveDetectionMeasurements; public static void saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns); Save detection measurements for the specified image. Parameters:; imageData - the image data; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the current image for objects of a fixed type. Parameters:; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. saveMeasurements; public static void saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns); Save measurements for the specified image for objects of a fixed type. Parameters:; imageData - the image data; type - the type of objects to measure; path - file path describing where to write the results; includeColumns - specific columns to include, or empty to indicate that all measurements should be exported. getWindow; public static Window getWindow(String title); Access a window currently open within QuPath by its title. Parameters:; title - ; Returns:. copyToClipboard; public static void copyToClipboard(Object o); Try to copy an object to the clipboard.; This will attempt to perform a smart conversion; for example, if a window is provided a snapshot will be taken ; and copied as an image. Parameters:; o - the object to copy. loadDisplaySettings; public static ImageDisplaySettings loadDisplaySettings(String name); Load a display settings object from a file path or from the current project. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:22411,extend,extends,22411,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['extend'],['extends']
Modifiability,"e rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:3132,inherit,inherited,3132,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['inherit'],['inherited']
Modifiability,"e slide image that has been thresholded to give a binary image. detectVendor(String) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to detect the vendor of the image at the specified path. determinant() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:259356,plugin,plugins,259356,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"e specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2562,plugin,plugins,2562,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugins']
Modifiability,"e specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2428,plugin,plugins,2428,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugins']
Modifiability,"e specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31427,plugin,plugin,31427,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"e tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:2891,inherit,inherited,2891,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,1,['inherit'],['inherited']
Modifiability,"e to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:2619,plugin,plugin,2619,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugin']
Modifiability,e() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:452900,plugin,plugins,452900,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"e() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453690,plugin,plugins,453690,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"e() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClustere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453781,plugin,plugins,453781,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"e). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(ImagePlane plane). Copy the selected objects in the current hierarchy to the specified image plane. static List<PathObject>; createAllFullImageAnnotations(boolean setSelected). Create annotation around the full image for the current image, on all z-slices and timepoints. static List<PathObject>; createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected). Create annotation around the full image for the specified image, on all z-slices and timepoints. static void; createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the current image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClass",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:9491,extend,extends,9491,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"e, Serializable. public class PathRootObject; extends PathObject; The root object used at the base of a PathObjectHierarchy.; ; This doesn't have a ROI, and can't have its PathClass set. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathRootObject();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). The root object is never locked. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. String; toString();  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isLocked, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, readExternal, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setLocked, setName, setPathClass, storeMetadataValue, writeExternal. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, noti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html:1496,inherit,inherited,1496,javadoc/docs/qupath/lib/objects/PathRootObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html,1,['inherit'],['inherited']
Modifiability,"e. Constructor. ANNOTATIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ANNOTATIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept annotation objects. ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; ANNOTATIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; annotationStrokeThickness - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; annotationStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing annotation ROIs. ANY_ANNOTATIONS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any annotations. ANY_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:39934,variab,variable,39934,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"e. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid. pyramidalizeTiled(ImageServer<BufferedImage>, int, int, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Python. PYTHON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PYTHON_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Pythonic import statements. PythonAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Python. PythonAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.PythonAutoCompletor. Constructor. PythonStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Python syntax. Q. QP - Class in qupath.lib.scripting. Collection of static methods that are useful for scripting. QP() - Constructor for class qupath.lib.scripting.QP;  ; QPEx - Class in qupath.lib.gui.scripting. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QPEx() - Constructor for class qupath.lib.gui.scripting.QPEx;  ; quickShowImage(String, Roi, ImageProcessor...) - Sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:803061,variab,variable,803061,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"e. resetPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Reset the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864673,plugin,plugins,864673,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"e. setShowTMAGrid(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the TMA grid on the image, if present. setSlidersPosition(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Sets the Z and T sliders' position to allow space for command bar. setSpaceDown(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Notify this viewer that the isSpaceDown status should be changed. setSpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949229,plugin,plugins,949229,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"e... timepoints). Specify the time unit and individual time points. ImageServerMetadata.Builder; width(int width). Specify the full-resolution image width. ImageServerMetadata.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify the spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServerMetadata metadata); Builder for a new ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden.; ; The existing metadata will be duplicated, therefore later changes in one metadata object will not be ; reflected in the other. Parameters:; metadata - . Builder; public Builder(); Minimal builder for a new ImageServerMetadata; further properties must be set. Builder; public Builder(Class<? extends ImageServer<?>> serverClass,; String path,; int width,; int height); Builder for a new ImageServerMetadata; further properties must be set. Parameters:; serverClass - ; path - ; width - ; height - . Method Details. width; public ImageServerMetadata.Builder width(int width); Specify the full-resolution image width. Parameters:; width - ; Returns:. height; public ImageServerMetadata.Builder height(int height); Specify the full-resolution image height. Parameters:; height - ; Returns:. minValue; public ImageServerMetadata.Builder minValue(Number val); Specify the minimum value supported by this image.; If not provided, this will be taken from the PixelType. Parameters:; val - ; Returns:; See Also:. pixelType(PixelType). maxValue; public ImageServerMetadata.Builder maxValue(Number val); Specify the maximum value supported by this image.; If not provided, this will be taken from the PixelType.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Parameters:; val - ; Returns:; See Also:. pixelType(Pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:4104,extend,extends,4104,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,1,['extend'],['extends']
Modifiability,"e.; Other UI controls are provided to enable selection of specific data columns for display in the histogram. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HistogramDisplay(PathTableData<?> model,; boolean showTable). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getNumBins(). Get the requested number of bins used for the histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:1661,inherit,inherited,1661,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,1,['inherit'],['inherited']
Modifiability,"e.CLASSIFICATION. CLASSIFICATION - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a classification, such as in a labelled image. CLASSIFICATION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to ClassificationModel. classificationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify classification labels. classificationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the interpretation of classification labels. classificationLabelsToChannels(Map<Integer, PathClass>, boolean) - Static method in class qupath.lib.images.servers.ServerTools. Create a list of channels from classification labels. ClassificationResolution - Class in qupath.process.gui.commands.ml. Wrapper for a PixelCalibration to be used to define classifier resolution. classifications(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot two measurements against one another for the specified objects. classify(ClassificationModel, PathObject, Mat, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an existing image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, int, int, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. classify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>, String) - Static method in class qupath.opencv.dnn.DnnTools. Apply a classification model to an image patch to classify an object. ClassifyByMeasurementBuilder(String) - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Constructor. classifyCellsBy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:101275,extend,extends,101275,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"e.ObservableMeasurementTableData. Query whether a named measurement returns a String value only. isStructureChangeEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the hierarchy structure has changed, e.g. isSubtractMode(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; isSymmetric() - Method in class qupath.lib.regions.Padding. Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). isThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""3+"", indicating a weakly-positive staining. isTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a TIFF image. isTile() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents an image tile. isTitle - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; isTitle() - Method in class qupath.lib.plugins.parameters.EmptyParameter. Returns true if the parameter should be considered a title. isTMACore() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents a TMA core. isTMADearrayed() - Static method in class qupath.lib.scripting.QP. Returns true if TMA cores are available. isToolSwitchingEnabled() - Method in class qupath.lib.gui.ToolManager. Returns true if the user is able to activate another PathTool, false otherwise. isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; isTrained() - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:634245,plugin,plugins,634245,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,e.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given f,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526316,plugin,plugins,526316,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"e: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:4852,plugin,plugin,4852,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['plugin'],['plugin']
Modifiability,"e; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ViewMenuActions.ZoomActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.ZoomActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; ZOOM_1;  ; final org.controlsfx.control.action.Action; ZOOM_10;  ; final org.controlsfx.control.action.Action; ZOOM_100;  ; final org.controlsfx.control.action.Action; ZOOM_400;  ; final org.controlsfx.control.action.Action; ZOOM_IN;  ; final org.controlsfx.control.action.Action; ZOOM_OUT;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_400; @ActionConfig(""Action.View.Zoom.400""); public final org.controlsfx.control.action.Action ZOOM_400. ZOOM_100; @ActionConfig(""Action.View.Zoom.100""); public final org.controlsfx.control.action.Action ZOOM_100. ZOOM_10; @ActionConfig(""Action.View.Zoom.10""); public final org.controlsfx.control.action.Action ZOOM_10. ZOOM_1; @ActionConfig(""Action.View.Zoom.1""); public final org.controlsfx.control.action.Action ZOOM_1. SEP_3; public final org.controlsfx.control.action.Action SEP_3. ZOOM_IN; @ActionConfig(""Action.View.Zoom.zoomIn""); @ActionIcon(ZOOM_IN); public final org.controlsfx.control.action.Action ZOOM_IN. ZOOM_OUT; @ActionConfig(""Action.View.Zoom.zoomOut""); @ActionIcon(ZOOM_OUT); @ActionAccelerator(""-""); public final org.controlsfx.control.action.Action ZOOM_OUT. ZOOM_TO_FIT; @ActionConfig(""Action.View.Zoom.zoomToFit""); public final org.cont",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html:1122,inherit,inherited,1122,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.ZoomActions.html,1,['inherit'],['inherited']
Modifiability,"e; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1122,inherit,inherited,1122,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,1,['inherit'],['inherited']
Modifiability,"e; String name. parentClass; PathClass parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7877,plugin,plugins,7877,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"e; extends Enum<OMEPyramidWriter.ChannelExportType>; Enum representing different ways in which channels may be written to a file. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OMEPyramidWriter.ChannelExportType DEFAULT; Leave it up to the writer to choose the appropriate method. INTERLEAVED; public static final OMEPyramidWriter.ChannelExportType INTERLEAVED; Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR; public static final OMEPyramidWriter.ChannelExportType PLANAR; Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). IMAGES; public static final OMEPyramidWriter.ChannelExportType IMAGES; Channels are stored as separate images (this is not yet supported!). Method Details. values; public static OMEPyramidWriter.ChannelExportType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html:1785,inherit,inherited,1785,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,1,['inherit'],['inherited']
Modifiability,"e>; Simple command to detect tumor regions stained with cytokeratin. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the tas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:1770,inherit,inherited,1770,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['inherit'],['inherited']
Modifiability,"e>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2431,inherit,inherited,2431,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['inherit'],['inherited']
Modifiability,"e>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2297,inherit,inherited,2297,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['inherit'],['inherited']
Modifiability,"e> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2854,extend,extends,2854,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"e> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3173,inherit,inherited,3173,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['inherit'],['inherited']
Modifiability,"eAlignment;  ; CENTER_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; CENTER_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; centerImage() - Method in class qupath.lib.gui.viewer.QuPathViewer. Center the current image in the viewer, while keeping the same downsample factor. centerROI(ROI) - Method in class qupath.lib.gui.viewer.QuPathViewer. Center the specified ROI in the viewer. centroidDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI centroids within a specified distance. centroids() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI centroids. centroids(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects in pixel units. centroids(Collection<? extends PathObject>, PixelCalibration) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects using a fixed pixel calibration. CENTROIDS - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only detection centroids, not boundaries. CENTROIDS_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; centroidToBoundsDistance2D(Collection<PathObject>, Collection<PathObject>, double, double, String) - Static method in class qupath.lib.analysis.DistanceTools. Calculate the distance between source object centroids and the boundary of specified target objects, adding the result to the measurement list of the source objects. centroidToBoundsDistance2D(Collection<PathObject>, Collection<PathObject>, double, double, String, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Calculate the (optionally signed) distance between source object centroids and the boundary of specified tar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:88178,extend,extends,88178,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"eData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed proce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2624,plugin,plugin,2624,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"eData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Collection<? extends String> x,; Collection<T> y); Create a bar chart using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Map<String,T> data); Create a bar chart using a map of String values and associated numeric values. Parameters:; name - ; data - a map of String values to associated numeric values; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; String[] x,; double[] y); Create a bar chart using arrays of String values and associated numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; T[] extra); Create a bar chart using collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data poin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:5877,extend,extends,5877,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"eData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to export object(s) to a GeoJSON file. RunningStatistics - Class in qupath.lib.analysis.stats. Helper class for computing basic statistics from values as they are added. RunningStatistics() - Constructor for class qupath.lib.analysis.stats.RunningStatistics. Default constructor. runObjectClassifier(String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the current ImageData. runObjectClassifier(ImageData, String...) - Static method in class qupath.lib.scripting.QP. Apply an object classifier to the specified ImageData. runObjectImport(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to import object(s) from a file. runPlugin(String, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData. runPlugin(String, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, using a map for arguments. runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData. runPlugin(String, ImageData<?>, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:876479,plugin,plugin,876479,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"eExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathAnnotationObject; class PathAnnotationObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathCellObject; class PathCellObject extends PathDetectionObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathDetectionObject; class PathDetectionObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObject; class PathObject extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObjectConnections; class PathObjectConnections extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:3564,extend,extends,3564,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"eForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the ne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4273,extend,extends,4273,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['extend'],['extends']
Modifiability,"eListener<ImageData<BufferedImage>>, PropertyChangeListener; A panel used for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<B",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:1607,inherit,inherited,1607,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,1,['inherit'],['inherited']
Modifiability,"eObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearMetadata(). Clear all associated metadata. String; getCaseID(). Get the case ID metadata value. Set<String>; getMetadataKeys(). Get all metadata keys. Map<String,String>; getMetadataMap(). Returns an unmodifiable map containing the metadata. String; getMetadataString(String key). Get a metadata value, cast as a String if possible. Object; getMetadataValue(String key). Get a metadata value of any kind. boolean; isMissing(). Query the 'missing' flag for this core. Object; putMetadataValue(String key,; String value). Store a new metadata value. void; readExternal(ObjectInput in);  ; void; setCaseID(String caseID). Set the case ID metadata value. void; setMissing(boolean missing). Set the missing flag for this core, for example because insufficient tissue is present. String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:2489,inherit,inherited,2489,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['inherit'],['inherited']
Modifiability,"ePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Ad",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1065834,plugin,plugins,1065834,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ePlane) - Method in interface qupath.lib.roi.interfaces.ROI. Create a new ROI defining the same region on a different ImagePlane. updatePlane(ImagePlane) - Method in class qupath.lib.roi.LineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PointsROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolygonROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.PolylineROI;  ; updatePlane(ImagePlane) - Method in class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1065699,plugin,plugins,1065699,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Overrides:; addWorkflowStep in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:5345,plugin,plugin,5345,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,2,['plugin'],['plugin']
Modifiability,"eROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project. getScriptsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where shared script files should be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the secondary object filters. getSelectedObject() - Method in class qupath.lib.gui.viewer.QuP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:506085,plugin,plugins,506085,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"eRoot); Get all the objects in the hierarchy, optionally including the root object. Parameters:; includeRoot - ; Returns:; Since:; v0.4.0. nObjects; public int nObjects(); Number of objects in the hierarchy, excluding the root. Returns:. setHierarchy; public void setHierarchy(PathObjectHierarchy hierarchy); Set the contents of this hierarchy to be the same as that of another hierarchy.; In practice, this means copying the root and TMA grid of the second hierarchy. Parameters:; hierarchy - . getObjectsForROI; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls,; ROI roi); Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. ; This relies on centroids for detections, and a 'covers' rule for others. Parameters:; cls - class of PathObjects (e.g. PathDetectionObject), or null to accept all; roi - ; Returns:. getObjectsForRegion; public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy upd",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:18613,extend,extends,18613,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"eServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:2725,inherit,inherited,2725,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['inherit'],['inherited']
Modifiability,"eServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. Type Parameters:; T - ; Parameters:; providerClass - ; uri - ; args - ; Returns:. getURI; public URI getURI(); Get the URI used by this builder. Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:2274,inherit,inherited,2274,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['inherit'],['inherited']
Modifiability,"eTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . smoothMeasurements; public static void smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames); Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Parameters:; pathObjects - ; measurements - ; fwhmPixels - ; fwhmString - ; withinClass - ; useLegacyNames - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:6042,plugin,plugin,6042,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"eViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createForObservableViewer; public static UndoRedoManager createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty). undoOnce; public boolean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnly",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:3081,inherit,inherited,3081,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['inherit'],['inherited']
Modifiability,"eZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:3420,inherit,inherited,3420,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['inherit'],['inherited']
Modifiability,"ead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCuda(boolean) is used to turn if off. Returns:. setUseCuda; public static void setUseCuda(boolean requestUseCuda); Request that CUDA is used.; This will be ignored if isCudaAvailable() returns false, therefore the main purpose of ; this method is to disable the use of CUDA if it would otherwise be employed. Parameters:; requestUseCuda - . useCuda; public static boolean useCuda(); Returns true if CUDA is available and requested.; Classes that could potentially use CUDA should query this request before attempting to use it. Returns:; true if CUDA should be used, false otherwise. getOutputLayerNames; public static List<String> getOutputLayerNames(Net net); Get the names of all unconnected output layers. Parameters:; net - ; Returns:. getOutputLayers; public static Map<String,DnnShape> getOutputLayers(Net net,; DnnShape... inputShape); Get the names of all unconnected output layers. Parameters:; net - ; inputShape - ; Returns:. parseLayers; public static List<DnnTools.DNNLayer> parseLayers(Net net,; int width,; int height,; int channels,; int batchSize); Parse the layers for a Net, which allows inspection of names and sizes. Parameters:; net - the Net to parse; width - input width; height - input height; channels - input channels; batchSize - input batch size; Returns:. parseStrings; public static List<String> parseStrings(StringVector vector); Extract Strings from a StringVector. Parameters:; vector - ; Returns:. parseShape; public static List<DnnShape> parseShape(MatShapeVector vector); Extract Mat dimensions from a MatShapeVector. Parameters:; vector - ; Returns:. summarize; public static String summarize(Net net,; int ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:6565,layers,layers,6565,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['layers'],['layers']
Modifiability,"ead during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOExcept",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:2748,inherit,inherited,2748,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['inherit'],['inherited']
Modifiability,"ead during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:2264,inherit,inherited,2264,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['inherit'],['inherited']
Modifiability,"ead pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant from all pixels. subtract(Padding) - Method in class qupath.lib.regions.Padding. Add another padding from this one. subtract(ROI, Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Subtract a collection of ROIs from another ROI. subtract(ROI, ROI...) - Static method in class qupath.lib.roi.RoiTools. Subtract one or more ROIs from another ROI. SUBTRACT - Enum constant in enum class qupath.lib.roi.RoiTools.CombineOp. Subtract from first ROI. suggestNeighbor(ParallelTileObject) - Method in class qupath.lib.plugins.ParallelTileObject. Register a neighboring tile, if it intersects with the bounds of this one. sum() - Static method in class qupath.opencv.ops.ImageOps.Channels. Add all channels together, to give a single-channel output. sum(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D circular sum filter. sum(long[]) - Static method in class qupath.lib.common.GeneralTools. Compute the sum of elements in a long array (possibly representing a histogram). sum(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Calculate the sum of all elements in a Mat, ignoring NaNs. sum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the sum of an image, across all pixels (regardless of channels), ignoring NaNs. SUM - Enum constant in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. No normalization; maps provide raw object counts in a defined radius. sumFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1002229,plugin,plugins,1002229,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ead. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; parametersInitialized;  . Constructor Summary; Constructors. Constructor; Description; WatershedCellDetection();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. static boolean; getDebugMode(). Get whether debug mode is on or off. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:2245,plugin,plugin,2245,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugin']
Modifiability,"eally from the cache, but otherwise read it and ; then add it to the cache. Parameters:; tileRequest - ; Returns:; Throws:; IOException. createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). allowSmoothInterpolation; protected boolean allowSmoothInterpolation(); Returns true if this server is permitted to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:5365,extend,extends,5365,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['extend'],['extends']
Modifiability,"ean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:954848,plugin,plugins,954848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"eanParameter(String, String, boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter. addBooleanParameter(String, String, boolean, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter, with help text. addChartExportMenu(XYChart<Number, Number>, ContextMenu) - Static method in class qupath.lib.gui.charts.ChartTools. Add a menu item to a context menu for displaying a chart for export. addChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Add an object to the child list of this object. addChildObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Add a collection of objects to the child list of this object. addChoiceParameter(String, String, S, List<S>) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices. addChoiceParameter(String, String, S, List<S>, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices and help text. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addClusterMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Compute mean measurements from clustering all connected objects. addColorPropertyPreference(IntegerProperty, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addCompletion(AutoCompletions.Completion) - Method in class qupath.lib.gui.scriptin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:13476,plugin,plugins,13476,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"easurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453541,plugin,plugin,453541,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"easurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above the threshold. above(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1385,plugin,plugins,1385,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"easurementValue(ROI roi,; String name,; boolean cachedOnly); Deprecated.; use getMeasurementValue(ROI, String) or getCachedMeasurementValue(ROI, String) instead. Get the measurement value for this ROI. Parameters:; roi - the ROI to measure; name - the measurement name; cachedOnly - if true, return null if the measurement cannot be determined from cached tiles; Returns:. getCachedMeasurementValue; public Number getCachedMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. Parameters:; roi - ; name - ; Returns:; See Also:. getCachedMeasurementValue(ROI, String). getMeasurementValue; public Number getMeasurementValue(ROI roi,; String name); Get the value of a single measurement for a specified ROI, computing it if it is unavailable. Parameters:; roi - ; name - ; Returns:; See Also:. getMeasurementValue(ROI, String). addMeasurements; public boolean addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID); Add measurements to specified objects. Parameters:; objectsToMeasure - the objects to measure.; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise; Since:; v0.5.0. getMeasurementNames; public List<String> getMeasurementNames(); Get the names of all measurements that may be returned. Returns:. calculatePreferredParallelism; protected int calculatePreferredParallelism(); Make a semi-educated guess as to an appropriate number of threads to use.; We lack much information about the image and pixel classifier, so this should be a fairly pessimistic; guess. Returns:. getPoolSizeProp; protected int getPoolSizeProp(). getProbabilityThreshold; public static double getProbabilityThreshold(WritableRaster raster); Get a suitable threshold assuming a raster contains probability values.; This is determined from the TransferType",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:5080,extend,extends,5080,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,1,['extend'],['extends']
Modifiability,"eate an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2535,extend,extends,2535,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['extend'],['extends']
Modifiability,"ecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMASummaryViewer. java.lang.Object; qupath.lib.gui.tma.TMASummaryViewer. @Deprecated; public class TMASummaryViewer; extends Object; Deprecated.; since v0.4.0. Standalone viewer for looking at TMA summary results.; ; Important! This was used a lot when QuPath was released back in 2016,; but has not been properly maintained ever since.; It is now marked as deprecated, and may be removed or replaced in the future. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMASummaryViewer(Stage stage). Deprecated.; Constructor. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Stage; getStage(). Deprecated.; Get the stage for display. void; setInputFile(File file). Deprecated.; Set the input file for the summary viewer. void; setTMAEntriesFromImageData(ImageData<BufferedImage> imageData). Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMASummaryViewer; public TMASummaryViewer(Stage stage); Deprecated.; Constructor. Parameters:; stage - stage that should be used for this TMA summary viewer. If null, a new stage will be created. Method Details. getStage; public Stage getStage(); Deprecated.; Get the stage for display. Returns:. setTMAEntriesFromImageData; public void setTMAEntriesFromImageData(ImageData<BufferedImage> imageData); Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. Parameters:; imageData - . setInputFile; public void setInputFile(File file); Deprecated.; Set the input file for the summary viewer. Parameters:; file - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html:1348,inherit,inherited,1348,javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMASummaryViewer.html,1,['inherit'],['inherited']
Modifiability,"ecelerate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that a viewer decelerate any existing panning smoothly. requestedPixelSize(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a pixel size in calibrated units. requestFocus() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFocus() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the control is focused. requestFocus() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; requestFollowCaret() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; requestFollowCaret() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request that the X and Y scrolls are adjusted to ensure the caret is visible. requestFullUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request a manual update check in a background thread. requestHierarchyUpdate() - Method in class qupath.lib.plugins.AbstractPlugin. Optionally request a hierarchy update after the tasks have run. requestImageTile(ImageServer<BufferedImage>, RegionRequest, Map<RegionRequest, BufferedImage>, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Request an image tile. requestLazyInitialize() - Method in class qupath.opencv.dnn.DnnModelParams. Request that any model is loaded lazily on demand. requestNewHandle(double, double) - Method in class qupath.lib.roi.RoiEditor. Request an updated ROI with a new handle inserted - useful e.g. requestParallelization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if multiple readers may be created for different threads, to enable parallel image reading. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Query whether parent clipping should be applied. requestParentClipping(MouseEvent) - Method in class qupath.lib.gui.viewer.tool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:857648,plugin,plugins,857648,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ecified criteria. List<PathObject>; getFilteredNeighbors(PathObject pathObject,; BiPredicate<PathObject,PathObject> predicate). Get a list of neighbors for a specified object, filtering out objects that do not meet specified criteria. ImagePlane; getImagePlane(). Get the ImagePlane for this subdivision. PathObject; getNearestNeighbor(PathObject pathObject). Get the nearest neighbor for the specified object. PathObject; getNearestNeighbor(PathObject pathObject,; BiPredicate<PathObject,PathObject> predicate). Get the nearest neighbor for the specified object, filtered by a predicate. List<PathObject>; getNeighbors(PathObject pathObject). Get all neighbors for a specified object. Collection<PathObject>; getPathObjects(). Get all the objects associated with this subdivision. Map<PathObject,Geometry>; getVoronoiFaces(). Get a map of Voronoi faces as JTS Geometry objects. Map<PathObject,ROI>; getVoronoiROIs(Geometry clip). Get a map of Voronoi faces, convered to ROI objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImagePlane; public ImagePlane getImagePlane(); Get the ImagePlane for this subdivision.; Because the subdivision is 2D, all object ROIs are expected to belong to the same plane. Returns:. getVoronoiFaces; public Map<PathObject,Geometry> getVoronoiFaces(); Get a map of Voronoi faces as JTS Geometry objects. Returns:; See Also:. getVoronoiROIs(Geometry). getVoronoiROIs; public Map<PathObject,ROI> getVoronoiROIs(Geometry clip); Get a map of Voronoi faces, convered to ROI objects. Parameters:; clip - optional region used to clip the total extent of the ROIs; Returns:; See Also:. getVoronoiFaces(). getPathObjects; public Collection<PathObject> getPathObjects(); Get all the objects associated with this subdivision. Returns:. getNearestNeighbor; public PathObject getNearestNeighbor(PathObject pathObject); Get the nearest neighbor for the specified object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html:2245,inherit,inherited,2245,javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Subdivision.html,1,['inherit'],['inherited']
Modifiability,"ecified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Write a 2D image region using the default writer based on the file path. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.scripting.QP. Write an image region image to the specified path. writePoints(File, Collection<? extends PathObject>) - Static method in class qupath.lib.io.PointIO. Write a list of point annotations to a file. writePoints(OutputStream, Collection<? extends PathObject>) - Static method in class qupath.lib.io.PointIO. Write a list of point annotations to a stream. writePredictionImage(String, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a pixel classifier to the current image image. writePredictionImage(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a pixel classifier to an image. writePyramid(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Deprecated.; use OMEPyramidWriter.OMEPyramidSeries.writeSeries(String) instead. writePyramid(PyramidOMETiffWriter, IMetadata, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Deprecated.; use OMEPyramidWriter.OMEPyramidSeries.writeSeries(IFormatWriter, IMetadata, int) instead. writeRenderedImage(QuPathViewer, String) - Static method in class qupath.lib.gui.scripting.QPEx. Write a rendered image for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1120891,extend,extends,1120891,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ecified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,; Collection<? extends PathObject> targetObjects). Match objects according to their IDs. static PathObject; mergeObjects(Collection<? extends PathObject> pathObjects). Merge objects by calculating the union of their ROIs. static <K> List<PathObject>; mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier). Merge objects that share a property in common. static boolean; mergePointsForAllClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForClass(PathObjectHierarchy hierarchy,; PathClass pathClass). Merge point annotations with the specified PathClass sharing the same ImagePlane, ; creating a single multi-point annotation for all matching points and removing the (previously-separated) annotations. static boolean; mergePo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:8595,extend,extends,8595,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability,"ecifying a classification probability. String; toString();  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isLocked, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, readExternal, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setLocked, setName, setPathClass, storeMetadataValue, writeExternal. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathRootObject; public PathRootObject(). Method Details. isRootObject; public boolean isRootObject(); Description copied from class: PathObject; Returns true if the object is the 'root' of an object hierarchy. Overrides:; isRootObject in class PathObject; Returns:; See Also:. PathObjectHierarchy. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of the object. Specified by:; getPathClass in class PathObject; Returns:. setPathClass; public void setPathClass(PathClass pathClass,; double classProbability); Description copied from class: PathObject; Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Specified by:; setPathClass in class PathObject; Parameters:; pathClass ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html:2418,inherit,inherited,2418,javadoc/docs/qupath/lib/objects/PathRootObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html,1,['inherit'],['inherited']
Modifiability,"ecking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wrapper only supports integer values. isInteractive() - Method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623745,plugin,plugins,623745,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ect Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1483,extend,extends,1483,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['extend'],['extends']
Modifiability,"ect extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8543,extend,extends,8543,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"ect. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurements - ; Returns:. builder; public static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>> builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements); Create a new builder for a PixelProcessor that can make custom measurements for an image object.; The builder is ready to use, but can also be further customized if required (e.g. to set the resolution). Parameters:; measurements - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2963,extend,extends,2963,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,4,['extend'],['extends']
Modifiability,"ect.cells.SubcellularDetection;  ; Subcommand - Interface in qupath.lib.gui.extensions. A subcommand for the command line interface. submitShortTask(Runnable) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). submitShortTask(Runnable) - Method in class qupath.lib.gui.SharedThreadPoolManager. Submit a short task to a shared thread pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant from all pixels. subtract(Padding) - Method in class qupath.lib.regions.Padding. Add another padding from this one. subtract(ROI, Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Subtract a collection of ROIs from another ROI. subtract(ROI, ROI...) - Static method in class qupath.lib.roi.RoiTools. Subtract one or more ROIs from another ROI. SUBTRACT - Enum constant in enum class qupath.lib.roi.RoiTools.CombineOp. Subtract from first ROI. suggestNeighbor(ParallelTileObject) - Method in class qupath.lib.plugins.ParallelTileObject. Register a neighboring tile, if it intersects with the bounds of this one. sum() - Static method in class qupath.opencv.ops.ImageOps.Channels. Add all channels together, to give a single-channel output. sum(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D circular sum filter. sum(long[]) - Static method in class qupath.lib.common.GeneralTools. Compute the sum of elements in a long array (possibly representing a histogram). sum(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Calculate the sum of all elements in a Mat, ignoring NaNs. sum(Mat) - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1001837,extend,extends,1001837,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ect.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. qupath.lib.scr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:11586,plugin,plugins,11586,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['plugin'],['plugins']
Modifiability,"ect> filter). Specify a filter to extract parent objects to define tiles. TileExporter; region(ImageRegion region). Define the region to be processed. TileExporter; region(RegionRequest region). Define the region to be processed, including downsample. TileExporter; requestedPixelSize(double pixelSize). Define resolution as a pixel size in calibrated units. TileExporter; tileSize(int tileSize). Define the tile size in pixel units at the export resolution. TileExporter; tileSize(int tileWidth,; int tileHeight). Define the horizontal and vertical tile size in pixel units at the export resolution. TileExporter; tRange(int minT,; int maxT). Define the range of timepoints to process. TileExporter; useROIBounds(boolean fullROIs). Optionally use the full ROI for parent objects, rather than tileSize(int, int). void; writeTiles(String dirOutput). Export the image tiles to the specified directory. TileExporter; zRange(int minZ,; int maxZ). Define the range of Z-slices to process. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TileExporter; public TileExporter(ImageData<BufferedImage> imageData); Create a builder to export tiles. Parameters:; imageData - . Method Details. parentObjects; public TileExporter parentObjects(Predicate<PathObject> filter); Specify a filter to extract parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; filter - ; Returns:; this exporter; See Also:. parentObjects(Collection); useROIBounds(boolean); includePartialTiles(boolean). parentObjects; public TileExporter parentObjects(Collection<? extends PathObject> parentObjects); Specify parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:3955,inherit,inherited,3955,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['inherit'],['inherited']
Modifiability,"ect> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; selectObjectsByClass(Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClassification(String... pathClassNames). Select objects for the current hierarchy that have one of the specified classifications. static void; selectObjectsByClassification(PathObjectHierarchy hierarchy,; String... pathClassNames). Select objects for the specified hierarchy that have one of the specified classifications. static void; selectObjectsByMeasurement(ImageData<?> imageData,; String command). Deprecated. static void; selectObjectsByPathClass(PathClass... pathClasses). Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. static void; selectObjectsByPathClass(PathObjectHierarchy hierarchy,; PathClass... pathClasses). Select objects for the specified hierarch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:34277,extend,extends,34277,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent). Get all descendant objects as a flattened list. static <T extends PathObject>List<T>; getLineObjects(Collection<T> pathObjects). Get a list of objects with line ROIs from a collection of objects. static ROI; getNucleusOrMainROI(PathObject pathObject). Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. static ROI; getNucleusROI(PathObject pathObject). Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. static Collection<PathObject>; getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:6592,extend,extends,6592,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"ectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:3566,extend,extends,3566,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,1,['extend'],['extends']
Modifiability,"ection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that anal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2772,plugin,plugin,2772,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,1,['plugin'],['plugin']
Modifiability,"ects with a specified original classification in the provided hierarchy. Parameters:; hierarchy - the hierarchy containing the objects; originalClass - the original classification; newClass - the new classification. replaceClassification; public static void replaceClassification(Collection<PathObject> pathObjects,; PathClass originalClass,; PathClass newClass); Apply a new classification to all objects with a specified original classification in an object collection. Parameters:; pathObjects - ; originalClass - ; newClass - . resolveHierarchy; public static void resolveHierarchy(); Resolve the location of annotations in the current hierarchy by setting parent/child relationships. resolveHierarchy; public static void resolveHierarchy(PathObjectHierarchy hierarchy); Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. Parameters:; hierarchy - . insertObjects; public static void insertObjects(Collection<? extends PathObject> pathObjects); Insert objects into the hierarchy, resolving their location and setting parent/child relationships. Parameters:; pathObjects - . insertObjects; public static void insertObjects(PathObject pathObject); Insert object into the hierarchy, resolving its location and setting parent/child relationships. Parameters:; pathObject - . mergePointsForAllClasses; public static boolean mergePointsForAllClasses(); Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations; of the current hierarchy, creating multi-point annotations for all matching points and removing the (previously-separated) annotations. Returns:; true if changes are made to the hierarchy, false otherwise. mergePointsForSelectedObjectClasses; public static boolean mergePointsForSelectedObjectClasses(); Merge point annotations sharing the same PathClass and ImagePlane for the current hierarchy, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:114690,extend,extends,114690,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ects). static final PathClass; ANY_POSITIVE_CLASS. Accept any positive classification, including 1+, 2+, 3+. Constructor Summary; Constructors. Constructor; Description; DensityMapUI();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton). Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). static Pane; createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName). Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ANY_CLASS; public static final PathClass ANY_CLASS; Ignore classification (accept all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:1695,inherit,inherited,1695,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,1,['inherit'],['inherited']
Modifiability,"ects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:2668,extend,extends,2668,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['extend'],['extends']
Modifiability,ects.hierarchy.PathObjectHierarchy;  ; toString() - Method in class qupath.lib.objects.PathObject;  ; toString() - Method in enum class qupath.lib.objects.PathObjectFilter;  ; toString() - Method in class qupath.lib.objects.PathRootObject;  ; toString() - Method in class qupath.lib.objects.TMACoreObject;  ; toString() - Method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap;  ; toString() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; toString() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; toString() - Method in class qupath.lib.regions.ImagePlane;  ; toString() - Method in class qupath.lib.regions.ImageRegion;  ; toString() - Method in class qupath.lib.regions.Padding;  ; toString() - Method in class qupath.lib.regions.RegionRequest;  ; toString() - Method in class qupath.lib.roi.AreaROI;  ; toString() - Method in class qupath.lib.roi.EllipseROI;  ; toString() - Method in class qupath.lib.roi.GeometryROI;  ; toString() - Method in class qupath.lib.roi.LineROI;  ; toString() - Method in class qupath.lib.roi.PolygonROI;  ; toString() - Method in class qupath.lib.roi.PolylineROI;  ; toString() - Method in class qupath.lib.roi.RectangleROI;  ; toString() - Method in class qupath.lib.roi.PointsROI;  ; toString() - Method in class qupath.lib.scripting.lan,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1041936,plugin,plugins,1041936,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ect parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2218,plugin,plugins,2218,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['plugin'],['plugins']
Modifiability,"ed Classes. Modifier and Type; Class; Description; static class ; GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. Constructor Summary; Constructors. Constructor; Description; GsonTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> GsonTools.SubTypeAdapterFactory<T>; createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName). Create a TypeAdapterFactory that is suitable for handling class hierarchies. static GsonBuilder; getDefaultBuilder(). Access the builder used with getInstance(). static Gson; getInstance(). Get default Gson, capable of serializing/deserializing some key QuPath classes. static Gson; getInstance(boolean pretty). Get default Gson, optionally with pretty printing enabled. static List<PathObject>; parseObjectsFromGeoJSON(JsonElement element). Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GsonTools; public GsonTools(). Method Details. getDefaultBuilder; public static GsonBuilder getDefaultBuilder(); Access the builder used with getInstance().; This makes it possible to register new type adapters if required, which will be used by future Gson instances ; returned by this class.; ; Use this with caution! Changes made here impact JSON serialization/deserialization throughout ; the software. Access by be removed or restricted in the future for this reason.; ; To create a derived builder that inherits from the default but does not change it, use GsonBuilder.getInstance().newBuilder(). Returns:. createSubTypeAdapterFactory; public static <T>; GsonTools.SubTypeAdapterFactory<T> createSubTypeAdapterFactory(Class<T> baseType,; String typeFieldName); Create a TypeAdapterFactory that is suitable for handling class hierarchies.; This can be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html:1692,inherit,inherited,1692,javadoc/docs/qupath/lib/io/GsonTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.html,1,['inherit'],['inherited']
Modifiability,"ed ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the arg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:2640,inherit,inherited,2640,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['inherit'],['inherited']
Modifiability,"ed along with ObjectClassifiers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FeatureExtractors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> FeatureExtractor<T>; createMeasurementListFeatureExtractor(List<String> measurements). Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. static <T> FeatureExtractor<T>; createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer). Wrap an existing FeatureExtractor to apply normalization prior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:1564,inherit,inherited,1564,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,1,['inherit'],['inherited']
Modifiability,"ed calibration. convertToIJRoi(ROI, T) - Static method in class qupath.imagej.tools.IJTools. Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. convertToImagePlus(String, ImageServer<BufferedImage>, BufferedImage, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Convert a BufferedImage into a PathImage<ImagePlus>. convertToImagePlus(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. convertToImageProcessor(BufferedImage, int) - Static method in class qupath.imagej.tools.IJTools. Extract pixels as an an ImageProcessor from a single band of a BufferedImage. convertToJson(Map<String, ?>) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a Map to a one-line JSON representation, omitting hidden parameters. convertToJson(ParameterList) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a ParameterList a one-line JSON representation, omitting hidden parameters. convertToObjects(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter. Convert the output of a pixel processor to a list of PathObjects. convertToOpticalDensitySum(ColorProcessor, double, double, double) - Static method in class qupath.imagej.tools.IJTools. Calculate optical density values for the red, green and blue channels, then add these all together. convertToPathObject(Roi, double, double, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi. convertToPathObject(Roi, double, Function<ROI, PathObject>, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Funct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:144014,plugin,plugins,144014,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ed image, on the default (first) z-slice and timepoint. createFullImageAnnotation(ImageData<?>, boolean, int, int) - Static method in class qupath.lib.scripting.QP. Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. createGammaFunction(double, double, double) - Static method in class qupath.lib.color.ColorModelFactory. Create a gamma function between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createGammaFunction(double, PixelType) - Static method in class qupath.lib.color.ColorModelFactory. Create a gamma function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createGeometries(Geometry) - Method in class qupath.lib.objects.utils.Tiler. Create a list of Geometry tiles from the input. createGridView(QuPathGUI, Function<PathObjectHierarchy, Collection<? extends PathObject>>) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for a custom object extractor. createHeadlessTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createHeadlessTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance with the specified number of threads. createHiddenInstance() - Static method in class qupath.lib.gui.QuPathGUI. Create a new QuPath instance that is not visible (i.e. createHistogramData(Histogram, Integer) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createHistogramData(Histogram, Color) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its displ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:181879,extend,extends,181879,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ed internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getParentObjects(Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:474249,plugin,plugins,474249,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ed parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for dis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2260,plugin,plugins,2260,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['plugin'],['plugins']
Modifiability,"ed parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2245,plugin,plugins,2245,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ed plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:878025,plugin,plugins,878025,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ed to each element. smartStringSort(Collection<T>, Function<T, String>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection after extracting a String representation of each element. SMOOTHED_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SmoothFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SmoothFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Default constructor. smoothImage(BufferedImage) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). smoothMeasurements(List<PathObject>, List<String>, double, String, boolean, boolean) - Static method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. smoothPoints(List<Point2>) - Static method in class qupath.lib.roi.ShapeSimplifier. Apply a simple 3-point moving average to a list of points. SNAPSHOT_VIEWER_CONTENT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SNAPSHOT_WINDOW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SNAPSHOT_WINDOW_CONTENT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SOLIDITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Ratio of the area to the convex area. sortNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with name elements sorted alphabetically. sortNames(PathClass, Compa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:984272,plugin,plugins,984272,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ed viewer. X. x - Variable in class qupath.lib.roi.EllipseROI;  ; x - Variable in class qupath.lib.roi.RectangleROI;  ; x2 - Variable in class qupath.lib.roi.EllipseROI;  ; x2 - Variable in class qupath.lib.roi.RectangleROI;  ; xAxisMax(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the upper bound for the x-axis. xAxisMin(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the lower bound for the x-axis. xAxisRange(double, double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the lower and upper bounds for the x-axis. xLabel - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; xLabel - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; xLabel(String) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the x-axis label. xLabel(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the x-axis label. XML - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for XML. XML - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; XmlLanguage - Class in qupath.lib.gui.scripting.languages. Class for representing XML in QuPath. XmlLanguage() - Constructor for class qupath.lib.gui.scripting.languages.XmlLanguage. Constructor for XML Language. XmlStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea for XML. xor(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise XOR of two arrays. Y. y - Variable in class qupath.lib.roi.EllipseROI;  ; y - Variable in class qupath.lib.roi.RectangleROI;  ; y2 - Variable in class qupath.lib.roi.EllipseROI;  ; y2 - Variable in class qupath.lib.roi.RectangleROI;  ; YAML - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for YAML. YAML - Static variable in class qupath.lib.gui.scripting.sy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1124569,variab,variable,1124569,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ed; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1188,extend,extends,1188,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['extend'],['extends']
Modifiability,"edException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws Inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65895,plugin,plugin,65895,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,2,['plugin'],['plugin']
Modifiability,"edImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; shou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:3082,inherit,inherited,3082,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['inherit'],['inherited']
Modifiability,"edImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResour",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109093,plugin,plugins,1109093,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"edPolygonROIs(ImageProcessor ip,; int wandMode); Get filled PolygonRois for connected pixels with the same value in an image.; Because this uses ImageJ's Wand tool, holes will be filled.; ; Note that this command applies any thresholds that were set in the ImageProcessor, returning ; only Rois for values within these limits. Therefore to identify only non-zero pixels in a labelled image; you may need to first call ip.setThreshold(0.5, Double.POSITIVE_INFINITY, ImageProcessor.NO_LUT_UPDATE);. Parameters:; ip - ; wandMode - ; Returns:. wandToRoi; public static PolygonRoi wandToRoi(Wand wand); Convert a traced outline from the ImageJ Wand into a PolygonRoi. Parameters:; wand - ; Returns:. fillHoles; public static void fillHoles(ByteProcessor bp); Fill holes in a binary image.; ; Assumes 255 is foreground, 0 is background.; ; Based on code in ImageJ's Binary class. Parameters:; bp - . labelROIs; public static ImageProcessor labelROIs(ImageProcessor ipLabels,; List<? extends Roi> rois); Label ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. Parameters:; ipLabels - ; rois - ; Returns:. labelImage; public static ImageProcessor labelImage(ImageProcessor ip,; float threshold,; boolean conn8); Create a labelled image from above-threshold pixels for an image. Parameters:; ip - ; threshold - ; conn8 - ; Returns:; labelled image, as a ShortProcessor (if possible) or FloatProcessor (if necessary). removeSmallAreas; public static void removeSmallAreas(ByteProcessor bp,; double minPixels,; boolean conn8); Remove objects having small areas, defined in terms of pixels. Parameters:; bp - ; minPixels - minimum number of pixels in an object that should be kept; conn8 - . removeByAreas; public static int removeByAreas(ByteProcessor bp,; double minPixels,; double maxPixels,; boolean conn8); Remove objects containing < minPixels or > maxPixels. Parameters:; bp - ; minPixels - ; maxPixels - ; conn8 - ; Returns:; the number of connected",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:7400,extend,extends,7400,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,1,['extend'],['extends']
Modifiability,"ee; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1085,extend,extends,1085,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,1,['extend'],['extends']
Modifiability,"eepDisplaySettingsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). KEY_CASE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measurements.MeasurementList. Get all available names as a set. killRunningScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  . L. LAB_DISTANCE - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image converted to CIELAB, Euclidean distance calculated. label(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. label(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. labeledImageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the labelled image, which determi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:642583,variab,variable,642583,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"eferNucleus); BiPredicate that returns true for objects with ROI boundaries within a specified distance. Parameters:; maxDistance - maximum separation between ROI boundaries; preferNucleus - if true, prefer nucleus ROIs for cell objects; Returns:; true for object pairs with close boundaries. createAnnotationsFromSubdivision; public static List<PathObject> createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI bounds); Create annotations surrounding objects within a specified subdivision based on Voronoi faces.; This can be used to create annotations based upon existing detections. Parameters:; subdivision - subdivision representing object relationships; bounds - if provided, clip the annotations to fit within the ROI; Returns:; a list of annotations, one for each classification represented by objects within the subdivision within the bounds. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extend",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:7159,extend,extends,7159,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"eferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126074,plugin,plugins,126074,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"eger,String> outputClasses). Define the classifications for the output as a map with string values. PatchClassifierParams.Builder; patchSize(int patchSize). Define the requested square patch size. PatchClassifierParams.Builder; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3302,extend,extends,3302,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['extend'],['extends']
Modifiability,"egionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCuda(boolean) is used to turn if off. Returns:. setUseCuda; public static void setUseCuda(boolean requestUseCuda); Request that CUDA is used.; This will be ignored if isCudaAvailable() returns false, therefore the main purpose of ; this method is to disable the use of CUDA if it would otherwise be employed. Parameters:; requestUseCuda - . useCuda; public static boolean useCuda(); Returns true if CUDA is available and requested.; Classes that could potentially use CUDA should query this request before attempting to use ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:5404,config,configuring,5404,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['config'],['configuring']
Modifiability,"egions. Parameters:; viewer - ; options - ; regions - . Method Details. addAllRegions; public void addAllRegions(ImageServer<BufferedImage> server,; int level); throws IOException; Add all regions for a specific level of an ImageServer.; Note that this results in all regions being read immediately.; Therefore it should only be used for 'small' images that can be held in main memory. Parameters:; server - the server whose tiles should be drawn on the overlay; level - the level from which to request regions; for the highest available resolution, use 0; Throws:; IOException. setColorModel; public void setColorModel(ColorModel colorModel); Optionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:5883,extend,extends,5883,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['extend'],['extends']
Modifiability,"ehave quite like the built-in JavaFX charts, by presenting the core; data within XYChart.Series objects.; Instead, the data is stored in HistogramChart.HistogramData objects, which are then used to populate the chart.; ; One advantage of this is that it is easier to control the color of each histogram being displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatche",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:1885,inherit,inherited,1885,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"ei,; int bandCells,; int minLabel). Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:5930,inherit,inherited,5930,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['inherit'],['inherited']
Modifiability,"eight,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2185,inherit,inherited,2185,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['inherit'],['inherited']
Modifiability,"el will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:1846,extend,extends,1846,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,2,['extend'],['extends']
Modifiability,"elCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.application.Application. qupath.lib.gui.QuPathApp; qupath.lib.gui.tma.QuPathTMAViewer. qupath.lib.roi.AreaROI (implements java.io.Serializable); qupath.lib.analysis.stats.ArrayWrappers; qupath.lib.scripting.languages.AutoCompletions; qupath.lib.gui.actions.AutomateActions; qupath.lib.gui.actions.menus.AutomateMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:7326,plugin,plugins,7326,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"elType(ImageServerMetadata.ChannelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the interpretation of channels. Charts - Class in qupath.lib.gui.charts. Helper class for generating interactive charts. Charts() - Constructor for class qupath.lib.gui.charts.Charts;  ; Charts.BarChartBuilder - Class in qupath.lib.gui.charts. Builder for creating scatter charts. Charts.PieChartBuilder - Class in qupath.lib.gui.charts. Builder for creating pie charts. Charts.ScatterChartBuilder - Class in qupath.lib.gui.charts. Builder for creating scatter charts. ChartThresholdPane - Class in qupath.lib.gui.charts. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartThresholdPane(XYChart<Number, Number>) - Constructor for class qupath.lib.gui.charts.ChartThresholdPane. Note: xAxis and yAxis must be instances of NumberAxis. ChartTools - Class in qupath.lib.gui.charts. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChartTools() - Constructor for class qupath.lib.gui.charts.ChartTools;  ; CHECK_URIS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; checkExtensions(String, String...) - Static method in class qupath.lib.common.GeneralTools. Check whether a path ends with one of a number of specified extensions (case insensitive). checkForUpdate() - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:97379,adapt,adapting,97379,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['adapt'],['adapting']
Modifiability,"elated buttons ; or menu items.; ; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional strin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26342,extend,extends,26342,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,3,"['extend', 'plugin']","['extends', 'plugin', 'pluginClass']"
Modifiability,"eld Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Seri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:3356,inherit,inheritance,3356,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,1,['inherit'],['inheritance']
Modifiability,"eld | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class SimplePluginWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:1243,extend,extends,1243,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,2,"['extend', 'plugin']","['extends', 'pluginClass']"
Modifiability,"eld | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Parameters:; minAllowed - ; maxAllowed - . setMinDisplay; void setMinDisplay(float minDisplay); Set the min display value for this channel.; Note that it is *strongly* ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:1316,inherit,inherited,1316,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,1,['inherit'],['inherited']
Modifiability,"eld | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1289,plugin,pluginCompleted,1289,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['plugin'],['pluginCompleted']
Modifiability,"elp. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:1157,plugin,plugins,1157,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugins']
Modifiability,"elp. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finaliz",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1151,inherit,inherited,1151,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['inherit'],['inherited']
Modifiability,"em<T>. Type Parameters:; T - . public class SelectableItem<T>; extends Object; Helper class for managing items when only one of them may be selected.; This is similar to a ToggleGroup, but without a dependency on any GUI components. Property Summary; Properties. Type; Property; Description; BooleanProperty; selected. Property representing the item that has been selected (which may or may not be the same as getItem()). Constructor Summary; Constructors. Constructor; Description; SelectableItem(ObjectProperty<T> selected,; T item). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; T; getItem(). Get the current item. boolean; isSelected(). Returns true if the value of the selected property equals getItem(). BooleanProperty; selectedProperty(). Property representing the item that has been selected (which may or may not be the same as getItem()). void; setSelected(boolean selected). Set the item to be selected. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selected; public BooleanProperty selectedProperty; Property representing the item that has been selected (which may or may not be the same as getItem()). See Also:. isSelected(); setSelected(boolean); selectedProperty(). Constructor Details. SelectableItem; public SelectableItem(ObjectProperty<T> selected,; T item); Constructor. Parameters:; selected - the property that identifies which item is currently selected; item - the current item to be wrapped within this class, and which may or may not be selected. Method Details. isSelected; public boolean isSelected(); Returns true if the value of the selected property equals getItem(). Returns:. setSelected; public void setSelected(boolean selected); Set the item to be selected. Parameters:; selected - . selectedProperty; public BooleanProperty selectedProperty(); Property representing the item that has",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html:1415,inherit,inherited,1415,javadoc/docs/qupath/lib/gui/SelectableItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SelectableItem.html,1,['inherit'],['inherited']
Modifiability,"en range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. static DoubleToIntFunction; createLinearFunction(PixelType type). Create a linear function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. static ColorModel; getDummyColorModel(int bpp). Get a dummy ColorModel instance. static IndexColorModel; getIndexedClassificationColorModel(Map<Integer,PathClass> channels). Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. static ColorModel; getProbabilityColorModel32Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. static ColorModel; getProbabilityColorModel8Bit(List<ImageChannel> channels). Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIndexedClassificationColorModel; public static IndexColorModel getIndexedClassificationColorModel(Map<Integer,PathClass> channels); Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. Parameters:; channels - ; Returns:. createIndexedColorModel; public static ColorModel createIndexedColorModel(Map<Integer,Integer> labelColors,; boolean includeAlpha); Create an indexed colormap for a labelled (indexed color) image. Parameters:; labelColors - map with integer labels as keys and packed (A)RGB colors as values.; includeAlpha - if true, allow alpha values to be included in the colormap; Returns:. createIndexedColorModel8bit; public static IndexColorModel createIndexedColorModel8bit(ColorMaps.ColorMap map); Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. Parameters:; map - ; Returns:. cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html:3678,inherit,inherited,3678,javadoc/docs/qupath/lib/color/ColorModelFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModelFactory.html,1,['inherit'],['inherited']
Modifiability,"enCVMLClassifier<T>. Type Parameters:; T - . All Implemented Interfaces:; ObjectClassifier<T>. public class OpenCVMLClassifier<T>; extends AbstractObjectClassifier<T>; An ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. static <T> ObjectClassifier<T>; create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses). Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Map<String,Integer>; getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. String; toString();  . Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:1523,extend,extends,1523,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['extend'],['extends']
Modifiability,"ency with other classes). getPlane(int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. getPlane(ImageRegion) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. getPlane(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, and z and t set from an existing ROI. getPlaneWithChannel(int, int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane, where the channel, z-slice and time point can be specified. getPlaneWithChannel(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel, z and t set from an existing ROI. getPluginClass() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Get the full name of the plugin class. getPointObjects(Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get objects that contain Point ROIs. getPointObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with point ROIs from a collection of objects. getPoolSizeProp() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager;  ; getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:486999,extend,extends,486999,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1764,inherit,inherited,1764,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['inherit'],['inherited']
Modifiability,"ends PathObject>) - Constructor for class qupath.lib.gui.tools.MeasurementMapper. Constructor. measurementMapperProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; MeasurementPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; MeasurementProcessor - Class in qupath.lib.experimental.pixels. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor() - Constructor for class qupath.lib.experimental.pixels.MeasurementProcessor;  ; MeasurementProcessor.CustomMeasurement<S,T> - Interface in qupath.lib.experimental.pixels. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions - Class in qupath.lib.experimental.pixels. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements - Class in qupath.lib.experimental.pixels. Methods to create custom measurements. measurements(Collection<? extends PathObject>, String, String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot two measurements against one another for the specified objects. Measurements() - Constructor for class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements;  ; MeasureMenuActions - Class in qupath.lib.gui.actions.menus;  ; MeasureMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; median(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D median filter. median(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the median pixel value in a Mat, ignoring NaNs. MEDIAN - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Median value. MEDIUM - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; MEDIUM - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; MEMBRANE - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:684612,extend,extends,684612,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1443,inherit,inherited,1443,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"enerate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:55490,plugin,plugin,55490,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"ension for displaying in the main GUI. static Image; getImageJIcon(int width,; int height). Try to read the ImageJ icon from its jar. static ImageJ; getImageJInstance(). Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). static String; getImageJPath(). Get the path for a local ImageJ installation, if set. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. static StringProperty; imageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String). getImageJInstance; public static ImageJ getImageJInstance(); Get an i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:3292,inherit,inherited,3292,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['inherit'],['inherited']
Modifiability,"ensityMaps.DensityMapType. Maps contain at least two channels. percentile(double) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate a percentile. percentile(double, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image, per channel, using low and high percentiles. percentile(double, double, boolean, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the image using low and high percentiles. percentiles(Mat, double...) - Static method in class qupath.opencv.tools.OpenCVTools. Get percentile values for all pixels in a Mat, ignoring NaNs. physicalMemory() - Static method in class qupath.opencv.tools.OpenCVTools. Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class. pieChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.PieChartBuilder for generating a custom pie chart. PIXEL - Static variable in class qupath.lib.images.servers.PixelCalibration. String to represent 'pixel' units. PIXEL_CLASSIFICATION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pixelCalibration(PixelCalibration, double) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Set the pixel calibration, with optional x,y scaling. PixelCalibration - Class in qupath.lib.images.servers. Class used to represent pixel sizes. PixelCalibration.Builder - Class in qupath.lib.images.servers. Builder class for PixelCalibration objects. pixelClassificationFilterRegionProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; PixelClassificationImageServer - Class in qupath.lib.classifiers.pixel. ImageServer that delivers pixels derived from applying a PixelClassifier to another ImageServer. PixelClassificationImageServer(ImageData<BufferedImage>, PixelClassifier) - Constructor for class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:762421,variab,variable,762421,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ent image in the specified viewer. Parameters:; viewer - ; img - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; map - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options); Create an empty overlay without any images to display. Parameters:; options - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img); Create an overlay to display one specified image region. Parameters:; options - ; region - ; img - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions); Create an overlay to display multiple image regions. Parameters:; options - ; regions - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions); Create an overlay to display multiple image regions. Parameters:; viewer - ; options - ; regions - . Method Details. addAllRegions; public void addAllRegions(ImageServer<BufferedImage> server,; int level); throws IOException; Add all regions for a specific level of an ImageServer.; Note that this results in all regions being read immediately.; Therefore it should only be used for 'small' images that can be held in main memory. Parameters:; server - the server whose tiles should be drawn on the overlay; level - the level from which to request regions; for the highest available resolution, use 0; Throws:; IOException. setColorModel; public void setColorModel(ColorModel colorModel); Optionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:4828,extend,extends,4828,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['extend'],['extends']
Modifiability,"ent something 'positive'. PositiveCellDetection - Class in qupath.imagej.detect.cells. Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774185,extend,extends,774185,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ent that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:2054,inherit,inherited,2054,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,1,['inherit'],['inherited']
Modifiability,"ented Interfaces:; HtmlRenderer, ExecutableLanguage. public class MarkdownLanguage; extends ScriptLanguage; implements HtmlRenderer; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html:1519,inherit,inherited,1519,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,1,['inherit'],['inherited']
Modifiability,"ented Interfaces:; Serializable, Comparable<HistogramChart.CountsTransformMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.CountsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1589,inherit,inherited,1589,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['inherit'],['inherited']
Modifiability,"ential metadata about how it should be used.; ; The main purpose of this is to support serializing models to JSON... kind of. In truth currently the paths ; to the original model files are serialized, since (to my knowledge) there is no way to save and reload a Net directly. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVDnn.Builder. Helper class to build an OpenCVDnn. static enum ; OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:1625,extend,extends,1625,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['extend'],['extends']
Modifiability,"ents will be fired. isCircle() - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. isCircle(double, double) - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. isCompatible(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Test if this completion is compatible with the provided text. isCompatible(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Check if an image display is 'compatible' with this one. isCompatibleMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). isComplete() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setComplete() has been called. isCudaAvailable() - Static method in class qupath.opencv.dnn.DnnTools. Query whether CUDA is reported as available by OpenCV. isDAB(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). isDefaultStyle() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Check if the default JavaFX style is used. isDerivedClass() - Method in class qupath.lib.objects.classes.PathClass. Returns true if #getParentClass() != null. isDerivedFrom(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class, or any ancestor class, is equal to the specified parent class. isDetection() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a detection. isDirectory(String) - Static method in class qupath.lib.scripting.QP. Query if a file path corresponds to a directory. isDynamic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:617672,plugin,plugins,617672,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"enuActions.Actions. Enclosing class:; TMAMenuActions. @ActionMenu(""Menu.TMA""); public class TMAMenuActions.Actions; extends Object. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; TMAMenuActions.Actions.AddActions;  ; class ; TMAMenuActions.Actions.RemoveActions;  . Field Summary; Fields. Modifier and Type; Field; Description; final TMAMenuActions.Actions.AddActions; addActions;  ; final org.controlsfx.control.action.Action; CLEAR_CORES;  ; final org.controlsfx.control.action.Action; CONVEX_HULL;  ; final org.controlsfx.control.action.Action; CREATE_MANUAL;  ; final org.controlsfx.control.action.Action; RELABEL;  ; final TMAMenuActions.Actions.RemoveActions; removeActions;  ; final org.controlsfx.control.action.Action; RESET_METADATA;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CREATE_MANUAL; @ActionConfig(""Action.TMA.specifyGrid""); public final org.controlsfx.control.action.Action CREATE_MANUAL. SEP_0; public final org.controlsfx.control.action.Action SEP_0. addActions; @ActionMenu(""Menu.TMA.add""); public final TMAMenuActions.Actions.AddActions addActions. removeActions; @ActionMenu(""Menu.TMA.remove""); public final TMAMenuActions.Actions.RemoveActions removeActions. RELABEL; @ActionConfig(""Action.TMA.relabel""); public final org.controlsfx.control.action.Action RELABEL. RESET_METADATA; @ActionConfig(""Action.TMA.resetMetadata""); public final org.controlsfx.control.action.Action RESET_METADATA. CLEAR_CORES; @ActionConfig(""Action.TMA.deleteGrid""); public final org.controlsfx.control.action.Action CLEAR_CORES. SEP_1; public final org.controlsfx.control.action.Action SEP_1. CONVEX_HULL; @ActionConfig(""Action.TMA.findHull""); publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html:1448,inherit,inherited,1448,javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/TMAMenuActions.Actions.html,1,['inherit'],['inherited']
Modifiability,"eparation and color transforms. qupath.lib.common - package qupath.lib.common. General-purpose helper classes. qupath.lib.display - package qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings - package qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels - package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg - package qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom - package qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui - package qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions - package qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations - package qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus - package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts - package qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:809072,config,configure,809072,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['configure']
Modifiability,"epeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:3050,inherit,inherited,3050,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"eprecated.; since v0.4.0, replaced by PathObject.addChildObjects(Collection). addPathObjectSelectionListener(PathObjectSelectionListener) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Add listener for selection changes. addPathObjectWithoutUpdate(PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). addPixelClassifierMeasurements(String, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPixelClassifierMeasurements(PixelClassifier, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Add a new property change listener. addPropertyPreference(Property<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:25463,extend,extends,25463,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"eprecated.; since v0.4.0; use addObjectBelowParent(PathObject, PathObject, boolean). void; addPathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). boolean; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0; use addObjects(Collection) instead. boolean; addPathObjectWithoutUpdate(PathObject pathObject). Deprecated.; since v0.4.0, use addObject(PathObject, boolean) instead (for naming consistency). void; clearAll(). Remove all objects from the hierarchy. void; fireHierarchyChangedEvent(Object source). Fire a hierarchy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating object measurements have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating objects have changed. void; fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging). Fire a hierarchy update indicating objects have changed, and may still be changing. Collection<PathObject>; getAllObjects(boolean includeRoot). Get all the objects in the hierarchy, optionally including the root object. Collection<PathObject>;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:3781,extend,extends,3781,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"epresent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for the specified objects. setIntensityClassifications(PathObjectHierarchy, Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the specified hierarchy. setIntensityClassificationsForSelected(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set intensity classifications for all selected (detection) objects in the specified hierarchy. setInterpolation(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; setInterpolation(ImageInterpolation) - Method in class qupath.lib.gui.vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:931253,extend,extends,931253,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"epresentation. Constructor Summary; Constructors. Constructor; Description; OpenCVProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<Mat,Mat,Mat>; builder(Processor<Mat,Mat,Mat> processor). Create a PixelProcessor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:1598,extend,extends,1598,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"equest redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3616,inherit,inherited,3616,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['inherit'],['inherited']
Modifiability,"er(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:2626,inherit,inherited,2626,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['inherit'],['inherited']
Modifiability,"er. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2881,extend,extends,2881,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"er. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2732,extend,extends,2732,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"er. Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. scaleVariance - Variable in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Smoothing scale for Gaussian-weighted standard deviation estimate. scatterChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.ScatterChartBuilder for generating a custom scatter plot. SCREENSHOT - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SCRIPT_EDITOR - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_EDITOR - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.AutomateActions;  ; SCRIPT_INTERPRETER - Variable in class qupath.lib.gui.actions.menus.AutomateMenuActions.Actions;  ; ScriptableWorkflowStep - Interface in qupath.lib.plugins.workflow. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes - Class in qupath.lib.scripting. Default attributes that can be set when running scripts. ScriptAttributes() - Constructor for class qupath.lib.scripting.ScriptAttributes;  ; ScriptAutoCompletor - Interface in qupath.lib.scripting.languages. Interface for classes that implement auto-completion (e.g. ScriptEditor - Interface in qupath.lib.gui.scripting. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T> - Interface in qupath.lib.gui.scripting. Basic script editor control using JavaFX. ScriptingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; ScriptLanguage - Class in qupath.lib.scripting.languages. Abstract class to represent languages supported by the script editor. ScriptLanguage(String, String) - Constructor for class qupath.lib.scripting.languages.ScriptLanguage. Default constructor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:887536,plugin,plugins,887536,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"er. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageRegion; getCropRegion(). Get the region being cropped, in terms of the bounding box within the base ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region wit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:2151,inherit,inherited,2151,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['inherit'],['inherited']
Modifiability,"er. Return the time associated with the first recorded frame. getStartX() - Method in class qupath.lib.gui.viewer.GridLines. Starting x coordinate for any counting grid (usually 0). getStartY() - Method in class qupath.lib.gui.viewer.GridLines. Starting y coordinate for any counting grid (usually 0). getStaticImportStatements(Collection<Class<?>>) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get the static import statements as a String, to add at the beginning of the executed script. getStaticImportStatments(Collection<Class<?>>) - Method in interface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getStatistic() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing the value corresponding to a time from KaplanMeierData.getAllTimes(). getStatus() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI status. getStatus() - Method in class qupath.lib.plugins.ParallelTileObject. Get the current status (pending, processing or done). getStdDev() - Method in class qupath.lib.analysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:522020,plugin,plugins,522020,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"er. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:2694,inherit,inherited,2694,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['inherit'],['inherited']
Modifiability,"er.ColorTransformMethod (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorTransformer.ColorTransformMethod. java.lang.Object; java.lang.Enum<ColorTransformer.ColorTransformMethod>; qupath.lib.color.ColorTransformer.ColorTransformMethod. All Implemented Interfaces:; Serializable, Comparable<ColorTransformer.ColorTransformMethod>, Constable. Enclosing class:; ColorTransformer. public static enum ColorTransformer.ColorTransformMethod; extends Enum<ColorTransformer.ColorTransformMethod>; Enum consisting of color transforms that may be applied to RGB images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; Black. All pixels black. Blue. Blue channel only. Blue_chromaticity. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD. Blue channel optical densities. Brightness. Brightness value (from RGB-HSB transform). Brown. Brown value, (blue - (red + green)*0.3f). DAB_H_DAB. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. Eosin_H_E. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. Green. Green channel only. Green_chromaticity. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue. Green value divided by blue value. Green_OD. Green channel optical densities. Hematoxylin_H_DAB. Hematoxylin after color deconvolution with default H-DAB stains. Hematoxylin_H_DAB_",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:1013,extend,extends,1013,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['extend'],['extends']
Modifiability,"er.LogLevel>, Constable. Enclosing class:; LogManager. public static enum LogManager.LogLevel; extends Enum<LogManager.LogLevel>; Available log levels. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1583,inherit,inherited,1583,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['inherit'],['inherited']
Modifiability,"er; patchSize(int patchWidth,; int patchHeight). Define the requested patch size. PatchClassifierParams.Builder; postprocessing(Collection<? extends ImageOp> postprocessingOps). Define the postprocessing steps from a collection. PatchClassifierParams.Builder; postprocessing(ImageOp... postprocessingOps). Define the postprocessing steps from an array. PatchClassifierParams.Builder; prediction(DnnModel model,; Padding padding,; String... outputNames). Define the DNN to be used for prediction, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; prediction(ImageOp predictionOp). Define the prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:3517,inherit,inherited,3517,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['inherit'],['inherited']
Modifiability,"er;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getOutputChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. getOutputChannelType() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested output channel type. getOutputClasses() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the classifications for the output. getOutputLayerNames(Net) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLayers(Net, DnnShape...) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:467176,layers,layers,467176,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"er;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned corr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526430,plugin,plugins,526430,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"er<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9213,extend,extends,9213,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"er>; getInstanceLabels(). Get a mapping between objects and instance labels. Map<PathClass,Integer>; getLabels(). Get an unmodifiable map of classifications and their corresponding labels. List<PathObject>; getObjectsForRegion(ImageRegion region). Get the objects to be painted that fall within a specified region. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. boolean; isEmptyRegion(RegionRequest request). Returns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:3038,inherit,inherited,3038,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['inherit'],['inherited']
Modifiability,"erBuilder.UriImageSupport<T>. java.lang.Object; qupath.lib.images.servers.ImageServerBuilder.UriImageSupport<T>. Type Parameters:; T - . Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.UriImageSupport<T>; extends Object; Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence.; This may be used to select which ImageServerBuilder is used to open the image(s). Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:1377,extend,extends,1377,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['extend'],['extends']
Modifiability,erBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570385,plugin,plugins,570385,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"erChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548656,plugin,plugins,548656,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"erList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2480,plugin,plugins,2480,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['plugin'],['plugins']
Modifiability,"erList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; Li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2891,inherit,inherited,2891,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"erList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Descr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3118,inherit,inherited,3118,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['inherit'],['inherited']
Modifiability,"erList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Opti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2984,inherit,inherited,2984,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['inherit'],['inherited']
Modifiability,"erLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurements - Enum Class in qupath.lib.analysis.features. Requested intensity measurements. ObjectMeasurements.ShapeFeatures - Enum Class in qupath.lib.analysis.features. Standard measurements that may be computed from shapes. ObjectMerger - Class in qupath.lib.objects.utils. Helper class for merging objects using different criteria. ObjectPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; ObjectsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Annotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:718000,plugin,plugins,718000,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"erProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointIO - Class in qupath.lib.io. Helper class for reading/wri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769795,plugin,plugin,769795,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"eractivePlugin() - Constructor for class qupath.lib.plugins.AbstractInteractivePlugin;  ; AbstractObjectClassifier<T> - Class in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; AbstractTileableImageServer - Class in qupath.lib.images.servers. Abstract ImageServer for BufferedImages that internally breaks",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:3679,plugin,plugins,3679,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"erarchy containing the objects to duplicate; pathObjects - objects that should be duplicated; createNewIDs - if true, create new IDs for each copied object; otherwise, retain the same ID.; Returns:; true if the hierarchy is changed, false otherwise; Since:; v0.4.0. removeOverlapsBySize; public static Collection<PathObject> removeOverlapsBySize(Collection<? extends PathObject> pathObjects,; double overlapTolerance); Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. Parameters:; pathObjects - input object collection, which may contain overlapping objects; overlapTolerance - amount of overlap to permit; recommended value is 0, see removeOverlaps(Collection, Comparator, double); Returns:; output collection of objects, which should have smaller overlapping objects removed. removeOverlapsByLocation; public static Collection<PathObject> removeOverlapsByLocation(Collection<? extends PathObject> pathObjects,; double overlapTolerance); Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away.; Note that this is determined using first the bounding box, then the centroid.; This is a simpler (and faster) criterion than measuring distance to the original from the ROI itself. Parameters:; pathObjects - input object collection, which may contain overlapping objects; overlapTolerance - amount of overlap to permit; recommended value is 0, see removeOverlaps(Collection, Comparator, double); Returns:; output collection of objects, which should have smaller overlapping objects removed. removeOverlaps; public static Collection<PathObject> removeOverlaps(Collection<? extends PathObject> pathObjects,; Comparator<PathObject> comparator,; double overlapTolerance); Resolve overlaps, discarding one and keeping the other.; It assumes that the objects have been sorted so that 'preferred' objects occur first.; ; 'How overlapping' can be controlled by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:46610,extend,extends,46610,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"erarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Proj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:309841,extend,extends,309841,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"erarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.lib.objects.PathObject. Remove all stored metadata values. clearOutside(ImageProcessor, Roi) - Static method in class qupath.imagej.processing.RoiLabeling. Clear (i.e. clearPathObjects() - Method in class qupath.lib.objects.Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:110008,extend,extends,110008,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"eredImage> server,; RegionRequest request); throws IOException; Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>.; ; The PathImage element wraps up handy metadata that can be used for translating ROIs. Parameters:; server - ; request - ; Returns:; Throws:; IOException. createPathImage; public static PathImage<ImagePlus> createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request); throws IOException; Create a PathImage from an ImagePlus and region.; If imp is null, it is read from the server. Parameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFactor - ; Returns:; See Also:. convertToIJRoi(ROI, double, double, double). convertToROI; public static ROI convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:23692,extend,extends,23692,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['extend'],['extends']
Modifiability,"eredImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double opacity); Specify the opacity for overlay layers.; This will be clipped to the range 0 (transparent) and 1 (opaque). Parameters:; opacity - ; Returns:. layers; public RenderedImageServer.Builder layers(PathOverlay... layers); Specify one or more overlay layers. Parameters:; layers - ; Returns:. layers; public RenderedImageServer.Builder layers(Collection<PathOverlay> layers); Specify one or more overlay layers as a collection. Parameters:; layers - ; Returns:. store; public RenderedImageServer.Builder store(DefaultImageRegionStore store); Specify the region store used to paint the underlying image. Parameters:; store - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(Color color); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; color - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(int rgb,; boolean keepAlpha); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; rgb - packed (A)RGB version of the color; keepAlpha - true if the packed color contains an alpha value; Returns:. build; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:4321,layers,layers,4321,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"erface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976183,plugin,plugins,976183,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1684,extend,extends,1684,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['extend'],['extends']
Modifiability,"erfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class SplitAnnotationsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:1609,plugin,plugin,1609,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['plugin'],['plugin']
Modifiability,"erfaces; Enum Class ROI.RoiType. java.lang.Object; java.lang.Enum<ROI.RoiType>; qupath.lib.roi.interfaces.ROI.RoiType. All Implemented Interfaces:; Serializable, Comparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ROI.RoiType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html:1376,inherit,inherited,1376,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,1,['inherit'],['inherited']
Modifiability,"erform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; AbstractTileableImageServer - Class in qupath.lib.images.servers. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AbstractTileableImageServer() - Constructor for class qupath.lib.images.servers.AbstractTileableImageServer;  ; accelerator(ObservableValue<KeyCombination>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the accelerator property of the action to an ObservableValue, bidirectionally if possible. accelerator(KeyCombination) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the accelerator property of the action. acceleratorTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getAcceleratorText(). Acti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:4294,plugin,plugin,4294,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"erialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.roi. Class qupath.lib.roi.AreaROI; class AreaROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.EllipseROI; class EllipseROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; Inval",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:10553,plugin,plugins,10553,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"erializable, Comparable<UriUpdater.UriStatus>, Constable. Enclosing class:; UriUpdater<T extends UriResource>. public static enum UriUpdater.UriStatus; extends Enum<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN; public static final UriUpdater.UriStatus UNKNOWN; URI status is unclear, e.g. because it does not refer to a file. Method Details. values; public static UriUpdater.UriStatus[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static UriUpdater.UriStatus valueOf(String name); Returns the enum constant of this class with the spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:1537,inherit,inherited,1537,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,1,['inherit'],['inherited']
Modifiability,"erlay used to show a (counting) grid on top of an image. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:1585,inherit,inherited,1585,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['inherit'],['inherited']
Modifiability,"ernal code. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Pane; build(). Build the pane. SaveResourcePaneBuilder<T>; labelText(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; project(ObjectExpression<Project<BufferedImage>> project). Current project. SaveResourcePaneBuilder<T>; savedName(StringProperty savedName). Property to store the saved name; this is useful if the name is required externally. SaveResourcePaneBuilder<T>; textFieldPrompt(String prompt). Prompt to include beside the resource name text field. SaveResourcePaneBuilder<T>; title(String title). Title to display in any dialogs. SaveResourcePaneBuilder<T>; tooltip(ObservableValue<String> tooltip). Text to include in any tooltip. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SaveResourcePaneBuilder; public SaveResourcePaneBuilder(Class<T> cls,; ObjectExpression<? extends T> resource); Constructor. Parameters:; cls - class of the resource to save, e.g. PixelClassifier; resource - expression containing the results. Method Details. project; public SaveResourcePaneBuilder<T> project(ObjectExpression<Project<BufferedImage>> project); Current project. Parameters:; project - ; Returns:; this builder. labelText; public SaveResourcePaneBuilder<T> labelText(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. textFieldPrompt; public SaveResourcePaneBuilder<T> textFieldPrompt(String prompt); Prompt to include beside the resource name text field. Parameters:; prompt - ; Returns:; this builder. tooltip; public SaveResourcePaneBuilder<T> tooltip(ObservableValue<Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html:1716,inherit,inherited,1716,javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ui/SaveResourcePaneBuilder.html,1,['inherit'],['inherited']
Modifiability,"erred type for this object.; ; This will be called whenever a MeasurementList is requested, if one is not already stored.; ; Subclasses can use this method to create more efficient MeasurementList implementations if required. Returns:. objectCountPostfix; protected String objectCountPostfix(). toString; public String toString(). Overrides:; toString in class Object. addChildObject; public void addChildObject(PathObject pathObject); Add an object to the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. addPathObject; @Deprecated; public void addPathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). Legacy method to add a single child object. Parameters:; pathObject - . addChildObjects; public void addChildObjects(Collection<? extends PathObject> pathObjects); Add a collection of objects to the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. addPathObjects; @Deprecated; public void addPathObjects(Collection<? extends PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). Legacy method to add child objects. Parameters:; pathObjects - . removeChildObject; public void removeChildObject(PathObject pathObject); Remove a single object from the child list of this object. Parameters:; pathObject - ; Since:; v0.4.0. removePathObject; @Deprecated; public void removePathObject(PathObject pathObject); Deprecated.; since v0.4.0, replaced by removeChildObject(PathObject). Legacy method to remove a single child object. Parameters:; pathObject - . removeChildObjects; public void removeChildObjects(Collection<PathObject> pathObjects); Remove multiple objects from the child list of this object. Parameters:; pathObjects - ; Since:; v0.4.0. removePathObjects; @Deprecated; public void removePathObjects(Collection<PathObject> pathObjects); Deprecated.; since v0.4.0, replaced by removeChildObjects(Collection). Legacy method to remove specified child objects. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:10702,extend,extends,10702,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['extend'],['extends']
Modifiability,"ers.ImageServerBuilder.DefaultImageServerBuilder<T>. Type Parameters:; T - . All Implemented Interfaces:; ImageServerBuilder.ServerBuilder<T>. Enclosing interface:; ImageServerBuilder<T>. public static class ImageServerBuilder.DefaultImageServerBuilder<T>; extends ImageServerBuilder.AbstractServerBuilder<T>; Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ImageServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metada",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:1533,extend,extends,1533,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['extend'],['extends']
Modifiability,"ers.ParameterList. Check whether two parameter lists contain the same parameters with the same values (or defaults, if no values are set). equals(Object) - Method in class qupath.lib.common.Version;  ; equals(Object) - Method in class qupath.lib.geom.Point2;  ; equals(Object) - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageChannel;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; equals(Object) - Method in class qupath.lib.images.servers.PixelCalibration;  ; equals(Object) - Method in class qupath.lib.images.servers.TileRequest;  ; equals(Object) - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; equals(Object) - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; equals(Object) - Method in class qupath.lib.regions.ImagePlane;  ; equals(Object) - Method in class qupath.lib.regions.ImageRegion;  ; equals(Object) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:282039,plugin,plugins,282039,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ers.RotatedImageServer. java.util.AbstractMap<K,V> (implements java.util.Map<K,V>). qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (implements java.util.Map<K,V>). qupath.lib.classifiers.object.AbstractObjectClassifier<T> (implements qupath.lib.classifiers.object.ObjectClassifier<T>). qupath.opencv.dnn.DnnObjectClassifier (implements qupath.lib.io.UriResource); qupath.opencv.ml.objects.OpenCVMLClassifier<T>; qupath.opencv.dnn.OpenCVModelObjectClassifier (implements qupath.lib.io.UriResource). qupath.lib.gui.viewer.overlays.AbstractOverlay (implements qupath.lib.gui.viewer.overlays.PathOverlay). qupath.lib.gui.viewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:5657,plugin,plugins,5657,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ers.ome - package qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io - package qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Def",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814084,plugin,plugins,814084,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ers:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). tryToClassify; protected int tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singlet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:5182,extend,extends,5182,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['extend'],['extends']
Modifiability,"ershed transform to the; absolute values of a Difference-of-Gaussians filtered image.; ; This provides tile objects that generally correspond to regions containing reasonably similar ; intensities or textures, which might then be classified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:1959,plugin,plugin,1959,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugin']
Modifiability,"ershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2134,inherit,inherited,2134,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['inherit'],['inherited']
Modifiability,"ersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.objects.classes. Class qupath.lib.objects.classes.PathClass; class PathClass extends Object implements Serializable. serialVersionUID:; 1L. Serialization Methods. readResolve; protected Object readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exists.; Partly addresses https://github.com/qupath/qupath/issues/1306 (during standard deserialation,; but not from JSON). Throws:; ObjectStreamException. Serialized Fields. colorRGB; Integer colorRGB. name; String name. parentClass; PathClass parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> imple",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7043,extend,extends,7043,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"erver implementation used to apply transforms to another ImageServer.; This might be a spatial or pixel intensity transformation, for example.; ; Subclasses may only implement the methods necessary to apply the required transform, ; such as readRegion(RegionRequest) since much of the remaining functionality ; is left up to the AbstractImageServer implementation. Author:; Pete Bankhead. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; TransformingImageServer(ImageServer<T> server);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:1876,inherit,inherited,1876,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['inherit'],['inherited']
Modifiability,"erver(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:3038,extend,extends,3038,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['extend'],['extends']
Modifiability,"erverMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:2504,inherit,inherited,2504,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['inherit'],['inherited']
Modifiability,ervers.ImageServer. Get the default thumbnail for a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoomOut(). getDensityType() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the normalization type of the density map. getDerivedBoundaryStrategy(double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a PathClass derived from,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:375907,plugin,plugins,375907,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"es and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) - Method in interface qupath.lib.projects.ResourceManager.Manager. Save a resource within the project. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair without rotation. put135(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 135 degree rotation. put45(int, int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:799644,variab,variable,799644,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"es colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify objects based on a single measurement. SingleMeasurementClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SingleMeasurementClassificationCommand. Constructor. singleSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if only one object has been selected, accessible by getSelectedObject();. size - Variable in class qupath.lib.analysis.stats.RunningStatistics;  ; size() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Number of entries in the array. size() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of non-NaN values added. size() - Method in interface qupath.lib.measurements.MeasurementList. Returns the number of measurements in the list. size() - Method in class qupath.lib.plugins.workflow.Workflow. Total number of steps in the workflow. size() - Method in class qupath.opencv.dnn.DnnShape. Total number of elements in a blob with this shape; This is the product of the lengths returned by DnnShape.getShape() or DnnShape.UNKNOWN_SHAPE. size(double, double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog height. size(int, int) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Export image size. size(int, int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Input width and height. size(Size) - Method in class qupath.opencv.dnn.OpenCVDnn.B",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:980457,plugin,plugins,980457,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"es of Model supported by OpenCV.; These can be used as a more convenient way to run predictions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OpenCVDnn.ModelType DEFAULT; Default Model class. DETECTION; public static final OpenCVDnn.ModelType DETECTION; Refers to DetectionModel. SEGMENTATION; public static final OpenCVDnn.ModelType SEGMENTATION; Refers to SegmentationModel. CLASSIFICATION; public static final OpenCVDnn.ModelType CLASSIFICATION; Refers to ClassificationModel. KEYPOINTS; public static final OpenCVDnn.ModelType KEYPOINTS; Refers to KeypointsModel. TEXT_RECOGNITION; public static final OpenCVDnn.ModelType TEXT_RECOGNITION; Refers to TextRecognitionModel. TEXT_DETECTION_DB; public static final OpenCVDnn.ModelType TEXT_DETECTION_DB; Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST; public static final OpenCVDnn.ModelType TE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html:1735,inherit,inherited,1735,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,1,['inherit'],['inherited']
Modifiability,"es pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which the op should be applied; tileWidth - the tile width for the server; tileHeight - the tile height of the server; Returns:; the ImageDataServer. buildImageDataOp; public static ImageDataOp buildImageDataOp(ColorTransforms.ColorTransform... inputChannels); Create an ImageDataOp, optionally using a specified array of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. buildImageDataOp; public static ImageDataOp buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels); Create an ImageDataOp, optionally using a specified collection of input channels. Parameters:; inputChannels - array of ColorTransforms.ColorTransform objects used to extract the pixels that will form the channels of the output Mat.; If empty, the original image channels will be used.; Returns:; the ImageDataOp. padAndApply; public static Mat padAndApply(ImageOp op,; Mat mat,; int padType); Apply an op after adding specified padding.; ; This is useful when applying padded ops to Mats directly, rather than via an ImageDataOp.; Because the op will strip off any padding, calling op.apply(mat) directly often results in a smaller ; output than the input image. Using this method instead gives an output image that is the same size as ; the input. Parameters:; op - the op to apply; mat - the image to process; padType - the OpenCV boundary padding type; Returns:; the result of applying the op to the input image; no",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:6010,extend,extends,6010,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['extend'],['extends']
Modifiability,"es. Type; Property; Description; BooleanProperty; disableGammaAdjustment. Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustment. Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValue. Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplay. The image display to which the sliders are applied. DoubleProperty; maxValue. Value of the maximum slider. DoubleProperty; minValue. Value of the minimum slider. ObjectProperty<ChannelDisplayInfo>; selectedChannel. The channel to which the sliders are applied. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:1872,inherit,inherited,1872,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"es.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) - Method in interface qupath.lib.projects.ResourceManager.Manager. Save a resource within the project. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:799427,variab,variable,799427,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,es.servers.PixelCalibration;  ; toString() - Method in enum class qupath.lib.images.servers.RotatedImageServer.Rotation;  ; toString() - Method in class qupath.lib.images.servers.TileRequest;  ; toString() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; toString() - Method in class qupath.lib.objects.classes.PathClass;  ; toString() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; toString() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent;  ; toString() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy;  ; toString() - Method in class qupath.lib.objects.PathObject;  ; toString() - Method in enum class qupath.lib.objects.PathObjectFilter;  ; toString() - Method in class qupath.lib.objects.PathRootObject;  ; toString() - Method in class qupath.lib.objects.TMACoreObject;  ; toString() - Method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap;  ; toString() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; toString() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; toString() - Method in class qupath.lib.regions.ImagePlane;  ; toString() - Method in class qupath.lib.regions.ImageRegion;  ; toString() - Method in class qupath.lib.regions.Padding;  ; toString() - Method in class qupath.l,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1041385,plugin,plugins,1041385,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"es.stores.ImageRenderer; qupath.lib.images.servers.ImageServerBuilder<T>; qupath.lib.images.servers.ImageServerBuilder.ServerBuilder<T>; qupath.lib.experimental.pixels.ImageSupplier<S>; qupath.lib.images.writers.ImageWriter<T>; com.sun.jna.Library. qupath.lib.images.servers.openslide.jna.OpenSlideJNA. qupath.lib.experimental.pixels.MaskSupplier<S,T>; qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement<S,T>; qupath.lib.gui.actions.menus.MenuActions; qupath.lib.objects.MetadataStore; qupath.lib.classifiers.object.ObjectClassifier<T>; qupath.lib.plugins.ObjectDetector<T>; qupath.lib.experimental.pixels.OutputHandler<S,T,U>; qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter<S,T,U>; qupath.lib.plugins.parameters.ParameterChangeListener; qupath.lib.plugins.parameters.Parameterizable; qupath.lib.images.PathImage<T>; qupath.lib.objects.PathObjectConnectionGroup; qupath.lib.objects.PathObjectReader; qupath.lib.gui.viewer.overlays.PathOverlay; qupath.lib.plugins.PathPlugin<T>. qupath.lib.plugins.PathInteractivePlugin<T>. qupath.lib.gui.measure.PathTableData<T>; qupath.lib.gui.viewer.tools.PathTool; qupath.lib.classifiers.pixel.PixelClassifier; qupath.lib.geom.Point; java.util.function.Predicate<T>. qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. qupath.opencv.dnn.PredictionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.Measurem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:41334,plugin,plugins,41334,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"es.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRegionStore - Class in qupath.lib.gui.images.stores. An ImageRegionStore suitable for either Swing or JavaFX",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:242214,variab,variable,242214,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"escription; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2514,extend,extends,2514,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['extend'],['extends']
Modifiability,"esidual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wrapper only supports integer values. isInteractive() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Returns the value of ChartThresholdPane.isInteractiv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623828,plugin,plugins,623828,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"esourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:4350,inherit,inherited,4350,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"ess. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> pathObjects). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. static boolean; standardizeClassifications(Collection<PathObject> pathObjects). Standardize the classifications for a collection of objects. static boolean; standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparator). Standardize the classifications for a collection of objects. static void; swapNameAndClass(PathObject pathObject,; boolean includeColor). Swap the name and PathClass of an object. static void; toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Toggle the 'locked' status of specified objects. static void; toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy). Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create a transformed version of a PathObject with a new ID. static PathObject; transformObject(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs). Create a transformed version of a PathObject, optionally with a new ID. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements). Create (optionally) transformed versions of the PathObject and all its descendants, recursively. static PathObject; transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:13164,extend,extends,13164,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"essing.Watershed; qupath.lib.analysis.algorithms.Watershed; qupath.lib.gui.tools.WebViews; qupath.lib.gui.WelcomeStage; qupath.lib.plugins.workflow.Workflow (implements java.io.Externalizable); qupath.lib.gui.panes.WorkflowCommandLogView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.plugins.workflow.WorkflowListener); qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler (implements qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler); qupath.imagej.images.writers.ZipWriterIJ. Interface Hierarchy. qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction; qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper; java.lang.AutoCloseable. qupath.opencv.dnn.DnnModel; qupath.lib.images.servers.ImageServer<T>. qupath.lib.images.servers.GeneratingImageServer<T>; qupath.opencv.ops.ImageDataServer<T>. qupath.lib.measurements.MeasurementList (also extends java.io.Serializable); qupath.opencv.tools.MultiscaleFeatures.Hessian. qupath.lib.scripting.languages.AutoCompletions.Completion; qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer; java.util.function.BiPredicate<T,U>. qupath.lib.gui.viewer.RegionFilter. qupath.opencv.dnn.BlobFunction<T>; qupath.lib.display.ChannelDisplayInfo. qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo; qupath.lib.display.SingleChannelDisplayInfo. qupath.lib.color.ColorMaps.ColorMap; qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder; qupath.lib.color.ColorModels.ColorModelBuilder; qupath.lib.images.servers.ColorTransforms.ColorTransform; qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator; qupath.opencv.dnn.DnnModelBuilder; qupath.lib.gui.viewer.DragDropImportListener.DropHandler<T>; qupath.lib.gui.scripting.EditableText. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.logging.TextAppendable). java.ut",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:38828,extend,extends,38828,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['extend'],['extends']
Modifiability,"ession. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java. JAVA_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Java-like import statements. JAVA_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that extracts a token used to determine Java completions. JavadocViewer - Class in qupath.lib.gui. Command to show javadocs in a WebView. JPEG - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. JPEG compression (only for single channel or RGB 8-bit images). JpegWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write JPEG images using ImageIO. JpegWriter() - Constructor for class qupath.lib.images.writers.JpegWriter;  ; JSON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for JSON. JSON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; JsonImageServerBuilder - Class in qupath.lib.images.servers. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonImageServerBuilder() - Constructor for class qupath.lib.images.servers.JsonImageServerBuilder;  ; JsonLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of JSON syntax in QuPath. JsonLanguage() - Constructor for class qupath.lib.gui.scripting.languages.JsonLanguage. Constructor for JSON language. jsonRegion(ImageRegion, double, ImageServerBuilder.ServerBuilder<BufferedImage>) - Method in class qupath.lib.images.servers.SparseImageServer.Builder. Add a region based on a JSON representation of an ImageServer. JsonStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on JSON synta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:639808,variab,variable,639808,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"essor. Process objects using the specified TaskRunner. processor(Processor<S, T, U>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the processor. Processor<S,T,U> - Interface in qupath.lib.experimental.pixels. A generic processor designed to work with Parameters and provide an output. project(ObjectExpression<Project<BufferedImage>>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Current project. project(Mat, Mat) - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Apply the projection. Project<T> - Interface in qupath.lib.projects. Data structure to manage images and associated data in QuPath. PROJECT_ADD_IMAGES - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_BASE_DIR - Static variable in class qupath.lib.scripting.QP. Placeholder for the path to the current project. PROJECT_CLOSE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_LOCATION - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Default location to use when storing density maps in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.object.ObjectClassifier. Default location to use when storing object classifiers in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.pixel.PixelClassifier. Default location to use when storing object classifiers in a project. PROJECT_NEW - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_NEW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; projectActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ProjectActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:785090,variab,variable,785090,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2792,plugin,plugins,2792,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugins']
Modifiability,"ested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class Thinning. java.lang.Object; qupath.opencv.tools.Thinning. public class Thinning; extends Object; Implementation of the 3D binary thinning algorithm of; ; Lee et al. ; ""Building skeleton models via 3-D medial surface/axis thinning algorithms."" ; Computer Vision, Graphics, and Image Processing, 56(6):462–478, 1994.; ; ; This is a new implementation, developed with reference to the original paper and ; two other implementations:; ; the ITK version from Hanno Homann (possibly-broken link http://hdl.handle.net/1926/1292); the Skeletonize3D ImageJ plugin by Ignacio Arganda-Carreras. These were mostly used to help debug thorny issues around pixel ordering in the lookup ; tables. This implementation uses a different design with some additional optimizations, ; but should give the same results as ""Skeletonize3D"". Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Thinning();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; thin(Mat mat). Thin the binary image in Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Thinning; public Thinning(). Method Details. thin; public static void thin(Mat mat); Thin the binary image in Mat.; Here, the image is assumed to be 2D or 3D; if 3D, then the z information is found along the ; channels dimension.; ; The thinning is performed in-place.; The image is converted to uint8 if required; non-zero pixels are considered foreground and zero ; pixels background.; ; The resulting image has 0 in the background and retains the original (after conversion to 8-bit); value in the foreground (typically 1 or 255). Parameters:; mat - the image to thin. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html:1439,inherit,inherited,1439,javadoc/docs/qupath/opencv/tools/Thinning.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/Thinning.html,1,['inherit'],['inherited']
Modifiability,"ested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian3D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1249,inherit,inherited,1249,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,1,['inherit'],['inherited']
Modifiability,"esult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that sho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:2328,inherit,inherited,2328,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['inherit'],['inherited']
Modifiability,"et a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteract",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2900,inherit,inherited,2900,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['inherit'],['inherited']
Modifiability,"et(String name). Get value for the measurement with the specified name. String; getMeasurementName(int ind). Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. List<String>; getMeasurementNames(). Get the names of all measurements currently in the list. double; getMeasurementValue(int ind). Deprecated.; since v0.4.0; using get(String) is preferred over using an index. default double; getMeasurementValue(String name). Deprecated.; since v0.4.0; use get(String) instead. default double; getOrDefault(String name,; double defaultValue). Get the specified measurement, or the provided default value if it is not contained in the list. boolean; isEmpty(). Returns true if the list does not contain any measurements. default Set<String>; keySet(). Get all available names as a set. void; put(String name,; double value). Put a measurement value into the list, replacing any previous measurement with the same name. default void; putAll(Map<String,? extends Number> map). Put all the values from the specified map into this list. default void; putAll(MeasurementList list). Put all the values from the specified list into this one. default void; putMeasurement(String name,; double value). Deprecated.; since v0.4.0; replaced by put(String, double). Measurement; putMeasurement(Measurement measurement). Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. default double; remove(String name). Remove a named measurement. void; removeMeasurements(String... measurementNames). Remove all the measurements with the specified names. int; size(). Returns the number of measurements in the list. boolean; supportsDynamicMeasurements(). Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. default double[]; values(). Get all measurement values as a double array. Method Details. addMeasurement; @Deprecated; default boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:3104,extend,extends,3104,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['extend'],['extends']
Modifiability,"et,; float scale,; ColorModel cm). Create a packed RGB pixel value by applying a ColorModel to a (possibly scaled and offset) floating point value. static float; opticalDensitySum(int rgb,; double[] od_lut). Extract optical density sum value from a packed RGB pixel. static float; opticalDensitySum(int rgb,; double[] od_lut_red,; double[] od_lut_green,; double[] od_lut_blue). Extract optical density sum value from a packed RGB pixel. static float; redChromaticity(int rgb). Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). static float; rgbMean(int rgb). Extract mean of RGB values from a packed RGB pixel. static float; saturation(int rgb). Extract saturation value from RGB-to-HSB transform. static void; transformRGB(int[] buf,; int[] bufOutput,; ColorTransformer.ColorTransformMethod method,; float offset,; float scale,; boolean useColorLUT). Apply a specified color transform to a packed (A)RGB array and output another (A)RGB array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransformer; public ColorTransformer(). Method Details. getODNormalizedColor; public static int getODNormalizedColor(int rgb,; double minOD,; float offset,; float scale); Create a 'normalized' color for visualization.; ; This is achieved by converting RGB values to optical densities, putting the RGB ODs into; a 3x1 vector and normalizing this to unit length, then rescaling the result to give an RGB representation.; Because of the somewhat strange rescaling involved, the final RGB values produced should not be over-interpreted -; this is really intended for visualization, such as when interactively looking for regions of single stains; when selecting color deconvolution stain vectors. Parameters:; rgb - original 8-bit RGB values; minOD - the minimum OD; pixels with an OD less than this will be considered unstained, and shown as white; offset",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:5837,inherit,inherited,5837,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['inherit'],['inherited']
Modifiability,"etImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution image. int; getImageY(). Get the y-coordinate of the bounding box for this tile in the full resolution image. int; getLevel(). Get the resolution level. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). RegionRequest; getRegionRequest(). Get the RegionRequest that this tile represents. int; getT(). Get the time point index for this request. int; getTileHeight(). Get the height of the bounding box for this tile at the tile resolution. int; getTileWidth(). Get the width of the bounding box for this tile at the tile resolution. int; getTileX(). Get the x-coordinate of the bounding box for this tile at the tile resolution. int; getTileY(). Get the y-coordinate of the bounding box for this tile at the tile resolution. int; getZ(). Get the z-slice index for this request. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static TileRequest createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion); Create a new tile request for a specified region and resolution level of an image.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead ; to get the tiles that are actually available for an image. Parameters:; server - ; level - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). createInstance; public static TileRequest createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion); Create a new tile request for a specified region, downsample and resolution level.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead.; ; In cases where a new TileRequest is necessary, it is better to use createInstance(ImageServer, int, ImageR",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:3114,inherit,inherited,3114,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['inherit'],['inherited']
Modifiability,"etLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2634,plugin,plugins,2634,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['plugin'],['plugins']
Modifiability,"etNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusOrMainROI(PathObject). getDescendantObjects; public static Collection<PathObject> getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all descendant objects with a specified type. Parameters:; pathObject - ; pathObjects - ; cls - ; Returns:. splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> pathObjects); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. Parameters:; pathObjects - an input collection of objects, containing objects with different ROI types; Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection, Collection). splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects); Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. Parameters:; areaObjects - objects with area ROIs; non-area ROIs will be ignored; lineObjects - objects with line ROIs; area ROIs can still be used, but will be treated as lines; Returns:; a map ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:32565,extend,extends,32565,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"etShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildren, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAcces",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:9543,inherit,inherited,9543,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"etShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestLayout, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:5973,inherit,inherited,5973,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,3,['inherit'],['inherited']
Modifiability,"etShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPrefWidth, setScaleShape, setShape, setSnapToPixel, setWidth, shapeProperty, snappedBottomInset, snappedLeftInset, snappedRightInset, snappedTopInset, snapPosition, snapPositionX, snapPositionY, snapSize, snapSizeX, snapSizeY, snapSpace, snapSpaceX, snapSpaceY, snapToPixelProperty, widthProperty. Methods inherited from class javafx.scene.Parent; getBaselineOffset, getChildrenUnmodifiable, getManagedChildren, getStylesheets, isNeedsLayout, layout, lookup, needsLayoutProperty, queryAccessibleAttribute, requestParentLayout, setNeedsLayout, updateBounds. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBlendMode, get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:4733,inherit,inherited,4733,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,3,['inherit'],['inherited']
Modifiability,"etSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526640,plugin,plugins,526640,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"etURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:3848,extend,extends,3848,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['extend'],['extends']
Modifiability,"etadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.common.BufferedImageTools. Duplicate a BufferedImage. duplicateAllSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate all the selected objects in a hierarchy. duplicateObjects(PathObjectHierarchy, Collection<PathObject>) - Stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:273811,plugin,plugins,273811,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"etadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:242108,variab,variable,242108,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"etail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class OpenCVProcessor. java.lang.Object; qupath.lib.experimental.pixels.OpenCVProcessor. public class OpenCVProcessor; extends Object; Class to generate a PixelProcessor when using OpenCV for the primary image representation. Constructor Summary; Constructors. Constructor; Description; OpenCVProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<Mat,Mat,Mat>; builder(Processor<Mat,Mat,Mat> processor). Create a PixelProcessor.Builder for an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createAnnotationConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:1213,extend,extends,1213,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"etail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class JsonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler. All Implemented Interfaces:; ScriptStyler. public class JsonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on JSON syntax. Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html:1198,inherit,inherited,1198,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,1,['inherit'],['inherited']
Modifiability,"etail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.tools; Class PixelImageIJ. java.lang.Object; qupath.imagej.tools.PixelImageIJ. All Implemented Interfaces:; SimpleImage, SimpleModifiableImage. public class PixelImageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1273,inherit,inherited,1273,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['inherit'],['inherited']
Modifiability,"etails. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:3186,plugin,plugin,3186,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,1,['plugin'],['plugin']
Modifiability,"etect.dearray.TMADearrayer. public class TMADearrayer; extends Object; Static methods used by the TMA dearrayer plugin. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape; detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi). Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image. static Polygon; fitCorePolygonToGrid(Polygon poly,; double coreDiameterPx,; int nHorizontal,; int nVertical). Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. static ByteProcessor; makeBinaryImage(ImageProcessor ip,; double coreDiameterPx,; Roi roi,; boolean isFluorescence). Make a binary image depicting (hopefully) the TMA cores. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMADearrayer; public TMADearrayer(). Method Details. detectTMACoresFromBinary; public static qupath.imagej.detect.dearray.TMADearrayer.TMAGridShape detectTMACoresFromBinary(ByteProcessor bp,; double coreDiameterPx,; int nHorizontal,; int nVertical,; Roi roi); Detect TMA cores from a (low-resolution) whole slide image that has been thresholded to give a binary image.; Cores should be circular and arranged in a grid pattern, although this may be (slightly) rotated; and some cores may be missing (but at least a few should be present in all rows / columns of the grid). Parameters:; bp - - the TMA slide image, after thresholding.; coreDiameterPx - - approximate diameter of a single TMA core, in pixels; nHorizontal - - number of cores per row of the full grid; nVertical - - number of cores per column of the full grid; roi - - optional region of intere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html:1410,inherit,inherited,1410,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayer.html,1,['inherit'],['inherited']
Modifiability,"etection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2258,inherit,inherited,2258,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['inherit'],['inherited']
Modifiability,"etector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2530,inherit,inherited,2530,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['inherit'],['inherited']
Modifiability,"etector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2396,inherit,inherited,2396,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['inherit'],['inherited']
Modifiability,"eterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2448,inherit,inherited,2448,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['inherit'],['inherited']
Modifiability,"eters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcessor. Parameters.Builder<S,T> - Class in qupath.lib.experimental.pixels. Builder class for Parameters. parametersInitialized - Variable in class qupath.imagej.detect.cells.WatershedCellDetection;  ; params - Variable in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parent(Window) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the parent window. parent(PathObject) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Set the parent object. parentObjects(Collection<? extends PathObject>) - Method in class qupath.lib.images.writers.TileExporter. Specify parent objects to define tiles. parentObjects(Predicate<PathObject>) - Method in class qupath.lib.images.writers.TileExporter. Specify a filter to extract parent objects to define tiles. parentProxy(PathObject) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Optionally set a temporary object to use as a parent. parse(byte[][], int, int, int, ColorModel) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser. Creates a BufferedImage from a 2-dimensional byte array. parse(String) - Static method in class qupath.lib.common.Version. Parse a Version object representing a semantic version number from a String. parseAnnotations(Action, AnnotatedElement) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action. parseAnnotations(Action, AnnotatedElement, String) - Static method in class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:746365,extend,extends,746365,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"eters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; Th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3982,variab,variables,3982,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['variab'],['variables']
Modifiability,"ethod Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:2990,extend,extends,2990,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,1,['extend'],['extends']
Modifiability,"ethod in class qupath.lib.analysis.DistanceTools. Calculate the distance between source object centroids and the centroid of specified target objects, adding the result to the measurement list of the source objects. CHANGE_CLASSIFICATION - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more object classifications. CHANGE_MEASUREMENTS - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more object measurements. CHANGE_OTHER - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more objects that is more complex than the other changes allow for. changed(ObservableValue<? extends QuPathViewer>, QuPathViewer, QuPathViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser;  ; chang",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:90354,extend,extends,90354,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ethod in class qupath.lib.gui.SelectableItem. Set the item to be selected. setSelectedObject(PathObject) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Set the specified object to be selected, deselecting all others. setSelectedObject(PathObject) - Static method in class qupath.lib.scripting.QP. Set the selected object for the current PathObjectHierarchy. setSelectedObject(PathObject, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set selected object in the current hierarchy, without centering the viewer. setSelectedObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. setSelectedObjects(Collection<? extends PathObject>, PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Specify a collection of objects to be selected, and which among them should be the primary. setSelectedTool(PathTool) - Method in class qupath.lib.gui.ToolManager. Programmatically select the active PathTool. setServiceLoader(ServiceLoader<ImageServerBuilder>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Replace the default service loader with another. setShowAnnotations(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the annotations on the image. setShowChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is shown. setShowConnections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show connections between objects, if available. setShowDetections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the objects as an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:946078,extend,extends,946078,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ethod in class qupath.lib.objects.utils.Tiler.Builder. Set if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. Filters() - Constructor for class qupath.opencv.ops.ImageOps.Filters;  ; filterSingleZ(List<Mat>, double[], int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. filterZ(List<Mat>, Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Filter filter along entries in the input list. finalize() - Method in class qupath.lib.images.servers.AbstractImageServer. Attempt to close the server. findAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; findByStringID(Collection<String>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on a String representation of their IDs. findByUUID(Collection<UUID>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on their IDs. FindConvexHullDetectionsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to identify/remove detections from the convex hull of all detections. FindConvexHullDetectionsPlugin() - Constructor for class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; findDensityMapHotspots(String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map for the current image. findDensityMapHotspots(ImageData<BufferedImage>, String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDensityMapHotspots(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDirectionalMaxima(ImageProcessor) - Static method in class qupath.imagej.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:305781,extend,extends,305781,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ethod in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453870,plugin,plugins,453870,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PropertiesLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage. public class PropertiesLanguage; extends ScriptLanguage; Class for the representation of properties and config files in QuPath.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PropertiesLanguage(). Constructor for a Java properties as a script editor language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PropertiesLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PropertiesLanguage; public PropertiesLanguage(); Constructor for a Java properties as a script editor language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PropertiesLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html:1282,inherit,inherited,1282,javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,1,['inherit'],['inherited']
Modifiability,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathTileObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathTileObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; ParallelTileObject. public class PathTileObject; extends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html:1183,inherit,inherited,1183,javadoc/docs/qupath/lib/objects/PathTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html,1,['inherit'],['inherited']
Modifiability,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.superpixels; Class DoGSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.DoGSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class DoGSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image.; ; This provides tile objects that generally correspond to regions containing reasonably similar ; intensities or textures, which might then be classified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are insta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:1277,plugin,plugins,1277,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathPlugin<T>. Type Parameters:; T - . All Known Subinterfaces:; PathInteractivePlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractPlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:1297,plugin,plugin,1297,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,1,['plugin'],['plugin']
Modifiability,"ethod. SEARCH. Package qupath.lib.gui.viewer.overlays; Class GridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.GridOverlay. All Implemented Interfaces:; PathOverlay. public class GridOverlay; extends AbstractOverlay; An overlay used to show a (counting) grid on top of an image. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:1302,inherit,inherited,1302,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['inherit'],['inherited']
Modifiability,"ethod. SEARCH. Package qupath.lib.objects; Class PathTileObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathTileObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; ParallelTileObject. public class PathTileObject; extends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataVa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html:1305,inherit,inherited,1305,javadoc/docs/qupath/lib/objects/PathTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html,1,['inherit'],['inherited']
Modifiability,"ethod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractTileableDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; CellCountsCV, DoGSuperpixelsPlugin, SLICSuperpixelsPlugin, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public abstract class AbstractTileableDetectionPlugin<T>; extends AbstractDetectionPlugin<T>; Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps.; ; Particularly useful for tasks such as cell detection. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractTileableDetectionPlugin();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:1231,inherit,inherited,1231,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['inherit'],['inherited']
Modifiability,"ethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(). Get the width of the full-resolution image (level 0). int; getLevelCount(). Get the total number of pyramid levels. long; getLevelHeight(int level). Get the image height at the specified level. long; getLevelWidth(int level). Get the image width at the specified level. Map<String,String>; getProperties(). Get an unmodifiable map of all available properties. void; paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROPERTY_NAME_COMMENT; public static final String PROPERTY_NAME_COMMENT. See Also:. Constant Field Values. PROPERTY_NAME_VENDOR; public static final String PROPERTY_NAME_VENDOR. See Also:. Constant Field Values. PROPERTY_NAME_QUICKHASH1; public static final String PROPERTY_NAME_QUICKHASH1. See Also:. Constant Field Values. PROPERTY_NAME_BACKGROUND_COLOR; public static final String PROPERTY_NAME_BACKGROUND_COLOR. See Also:. Constant Field Values. PROPERTY_NAME_OBJECTIVE_POWER; public static final String PROPERTY_NAME_OBJECTIVE_POWER. See Also:. Constant Field Values. PROPERTY_NAME_MPP_X; public static final String PROPERTY_NAME_MPP_X. See Also:. Constant Field Values. PROPERTY_NAME_MPP_Y; public static final String PROPERTY_NAME_MPP_Y. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_X; public static final String PROPERTY_NAME_BOUNDS_X. See Also:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:2456,inherit,inherited,2456,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,1,['inherit'],['inherited']
Modifiability,"etionTokenizer; SUBSTRING_TOKENIZER. A completion tokenizer that simply takes the first part of the text up to the caret position. Constructor Summary; Constructors. Constructor; Description; AutoCompletions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AutoCompletions.Completion; createJavaCompletion(Class<?> cls). Create a new completion for a class. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Field field). Create a new completion for a field. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; Method method). Create a new completion for a method. static AutoCompletions.Completion; createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText). Create a new completion with fixed display and completion text. static Comparator<AutoCompletions.Completion>; getComparator(). Get a comparator to order completions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SUBSTRING_TOKENIZER; public static final AutoCompletions.CompletionTokenizer SUBSTRING_TOKENIZER; A completion tokenizer that simply takes the first part of the text up to the caret position. JAVA_TOKENIZER; public static final AutoCompletions.CompletionTokenizer JAVA_TOKENIZER; A completion tokenizer that extracts a token used to determine Java completions. Constructor Details. AutoCompletions; public AutoCompletions(). Method Details. getComparator; public static Comparator<AutoCompletions.Completion> getComparator(); Get a comparator to order completions. Returns:. createJavaCompletion; public static AutoCompletions.Completion createJavaCompletion(Class<?> declaringClass,; String displayText,; String completionText); Create a new completion with fixed display and completion text. Parameters:; declaringClass - the declaring class; choose null for st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html:2115,inherit,inherited,2115,javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/languages/AutoCompletions.html,1,['inherit'],['inherited']
Modifiability,"eturn a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to displa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2202,inherit,inherited,2202,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2587,inherit,inherited,2587,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['inherit'],['inherited']
Modifiability,"ew. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener, PathObjectSelectionListener. public class PathObjectHierarchyView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectSelectionListener, PathObjectHierarchyListener; Component for showing a tree-based view of the object hierarchy. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableUpdates. Property that may be used to prevent updates on every hierarchy or selection change event. Constructor Summary; Constructors. Constructor; Description; PathObjectHierarchyView(QuPathGUI qupath). Constructor. PathObjectHierarchyView(QuPathGUI qupath,; ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; disableUpdatesProperty(). Property that may be used to prevent updates on every hierarchy or selection change event. Pane; getPane(). Get the pane for display. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. disableUpdates; public BooleanProperty disableUpdatesProperty; Property that may be used to prevent updates on every hierarchy or selection change event.; This can be used to improve performance by preventing the table being updated even when ; it is not visible to the user. See Also:. disableU",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html:1412,extend,extends,1412,javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PathObjectHierarchyView.html,1,['extend'],['extends']
Modifiability,"ew. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the name of the command. getTextField(Parameter<?>, int) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; getThickStrokeWidth(double) - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the requested stroke thickness to use when drawing ROIs that should be represented with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:530031,plugin,plugins,530031,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addAllRegions(ImageServer<BufferedImage> server,; int level). Add all regions for a specific level of an ImageServer. void; changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; img - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map); Create an overlay to show an image rescaled to overlay the entire c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:3057,inherit,inherited,3057,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['inherit'],['inherited']
Modifiability,"ewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976699,plugin,plugin,976699,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,ewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.g,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6612,plugin,plugins,6612,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ewers. public class MiniViewers; extends Object; Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image.; ; In QuPath <= v0.1.2, this gave a single QuPathViewer that updated its display ; based on a main viewer. Now, it has been rewritten to provide a more efficient paintable ; canvas (not a full QuPathViewer) and is capable of showing separated color channels. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer). Create a MiniViewers.MiniViewerManager associated with a specified viewer. static MiniViewers.MiniViewerManager; createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels). Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewers; public MiniViewers(). Method Details. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer); Create a MiniViewers.MiniViewerManager associated with a specified viewer. Parameters:; viewer - ; Returns:; Since:; v0.4.0. createManager; public static MiniViewers.MiniViewerManager createManager(QuPathViewer viewer,; Collection<? extends ChannelDisplayInfo> channels); Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. Parameters:; viewer - ; channels - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html:1526,extend,extends,1526,javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.html,3,"['extend', 'inherit']","['extends', 'inherited']"
Modifiability,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.completors; Class DefaultAutoCompletor. java.lang.Object; qupath.lib.gui.scripting.completors.DefaultAutoCompletor. All Implemented Interfaces:; ScriptAutoCompletor. Direct Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.Completion... completions). addCompletions; protected void addCompletions(Collection<? extends AutoCompletions.Completion> completions). getCompletions; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html:1178,extend,extends,1178,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,1,['extend'],['extends']
Modifiability,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class BufferedImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.BufferedImageOverlay. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, PathOverlay. public class BufferedImageOverlay; extends AbstractImageOverlay; implements ChangeListener<ImageData<BufferedImage>>; An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer.; ; The scaling for the BufferedImage is determined by an associated ImageRegion. Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; BufferedImageOverlay(OverlayOptions options). Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:1154,inherit,inherited,1154,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['inherit'],['inherited']
Modifiability,"exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<BufferedImage>; Overrides:; getName in class WatershedCellDetection; Returns:. createDetector; protected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2743,plugin,plugins,2743,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['plugin'],['plugins']
Modifiability,"existing parameter object. static PixelClassifier; buildPixelClassifier(PatchClassifierParams params). Build a pixel classifier using these parameters. Padding; getHalo(). Get the 'halo' around the output. List<ColorTransforms.ColorTransform>; getInputChannels(). Get the channels to extract from the image as input to the model. PixelCalibration; getInputResolution(). Get the requested input resolution for the image. ImageServerMetadata.ChannelType; getOutputChannelType(). Get the requested output channel type. Map<Integer,PathClass>; getOutputClasses(). Get the classifications for the output. int; getPatchHeight(). Get the height of a patch, in pixels. int; getPatchWidth(). Get the width of a patch, in pixels. List<ImageOp>; getPostprocessing(). Get any postprocessing steps that should be applied after prediction. ImageOp; getPredictionOp(). Get the image op used for prediction only. List<ImageOp>; getPreprocessing(). Get any preprocessing steps that should be applied. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInputChannels; public List<ColorTransforms.ColorTransform> getInputChannels(); Get the channels to extract from the image as input to the model. Returns:. getPatchWidth; public int getPatchWidth(); Get the width of a patch, in pixels. Returns:. getPatchHeight; public int getPatchHeight(); Get the height of a patch, in pixels. Returns:. getHalo; public Padding getHalo(); Get the 'halo' around the output.; This can be used to determine appropriate padding to ; avoid tile boundary artifacts. ; Can be null or empty. Returns:. getInputResolution; public PixelCalibration getInputResolution(); Get the requested input resolution for the image. Returns:. getOutputChannelType; public ImageServerMetadata.ChannelType getOutputChannelType(); Get the requested output channel type. Returns:. getOutputClasses; public Map<Integer,PathClass> getOutputClasses(); Get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html:2387,inherit,inherited,2387,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.html,1,['inherit'],['inherited']
Modifiability,"ext(String) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the placeholder text to show if no image is available. setPredicate(Predicate<? super PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set a predicate used to filter the rows of the table. setPreferredOverlayColor(Color) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a preferred overlay color, which the overlay may or may not make use of. setProject(Project<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current project for the script. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser. Set the project. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Set the active project, triggering any necessary GUI updates. setProperty(String, Object) - Method in class qupath.lib.images.ImageData. Set a property. setRange(double, double) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the upper and lower bounds. setReaderOptions(Map<String, String>) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set additional arguments that should be passed to readers. setReadOnly(boolean) - Method in class qupath.lib.gui.QuPathGUI. Specify whether QuPath should be in 'read-only' mode. setRecording(boolean) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the recording property of this ViewTracker. setRenderer(ImageRenderer) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the ImageRenderer to be used with this overlay. setRequestedDataFileVersion(int) - Static method in class qupath.lib.io.PathIO. Set the requested version for .qpdata files. setRequestParallelization(boolean) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Optionally enable or disable parallelization when reading images. setResolution(PixelCalibration) - Method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:942812,plugin,plugins,942812,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"extfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:1445,inherit,inherited,1445,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['inherit'],['inherited']
Modifiability,"e qupath.lib.gui.tools; Class IconFactory. java.lang.Object; qupath.lib.gui.tools.IconFactory. public class IconFactory; extends Object; Factory class for creating icons. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; IconFactory.PathIcons. Default icons for QuPath commands. Constructor Summary; Constructors. Constructor; Description; IconFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Image; createIconImage(IconFactory.PathIcons icon,; int size). Create an image from a default icon glyph. static Node; createNode(int width,; int height,; IconFactory.PathIcons type). Create a node from a default icon glyph. static Node; createPathObjectIcon(PathObject pathObject,; int width,; int height). Create an icon depicting a PathObject. static Node; createROIIcon(ROI roi,; int width,; int height,; Color color). Create an icon depicting a ROI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IconFactory; public IconFactory(). Method Details. createPathObjectIcon; public static Node createPathObjectIcon(PathObject pathObject,; int width,; int height); Create an icon depicting a PathObject. Parameters:; pathObject - the region of interest; width - the preferred icon width; height - the preferred icon height; Returns:; a node that may be used as an icon resembling the shapes of an object's ROI(s). createROIIcon; public static Node createROIIcon(ROI roi,; int width,; int height,; Color color); Create an icon depicting a ROI. Parameters:; roi - the region of interest; width - the preferred icon width; height - the preferred icon height; color - the icon (line) color; Returns:; a node that may be used as an icon resembling the shape of the ROI. createNode; public static Node createNode(int width,; int height,; IconFactory.PathIcons type);",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html:1324,inherit,inherited,1324,javadoc/docs/qupath/lib/gui/tools/IconFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/IconFactory.html,1,['inherit'],['inherited']
Modifiability,"e width). Set the preferred width of the chart. Charts.PieChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getThis; protected Charts.PieChartBuilder getThis(). createNewChart; protected PieChart createNewChart(). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. data; public Charts.PieChartBuilder data(Map<?,? extends Number> data); Specify data for the pie chart as a map.; Keys refer to categories, and values are numeric determining the size of the corresponding slice. Parameters:; data - the data map to show; Returns:; this builder. convertToPercentages; public Charts.PieChartBuilder convertToPercentages(boolean doConvert); Request that pie chart values are converted to percentages for tooltips. Parameters:; doConvert - ; Returns:. tooltips; public Charts.PieChartBuilder tooltips(boolean showTooltips); Request tooltips to be shown when the cursor hovers over the pie chart. Parameters:; showTooltips - ; Returns:. addSlice; public Charts.PieChartBuilder addSlice(Object name,; Number value); Add a slice to the pie. Parameters:; name - object the slice represents; value - number that determines the proportion of the pie for the given slice; Returns:; this builder. updateChart; protected void updateChart(PieChart chart); Method that applies properties of this builder to the chart.; Each subclass should call the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html:3903,extend,extends,3903,javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.PieChartBuilder.html,1,['extend'],['extends']
Modifiability,"f the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Specified by:; getTileOverlap in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that are instances of a supported class. Overrides:; getParentObjects in class AbstractDetectionPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:6798,plugin,plugin,6798,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,4,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"f writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:2546,inherit,inherited,2546,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,1,['inherit'],['inherited']
Modifiability,"f writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:2540,inherit,inherited,2540,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,1,['inherit'],['inherited']
Modifiability,fWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-r,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453399,plugin,plugins,453399,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"face FeatureExtractor<T>; Interface for extracting features from PathObjects for the purpose of object classification. Author:; Pete Bankhead; See Also:. ObjectClassifier. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:1468,extend,extends,1468,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,1,['extend'],['extends']
Modifiability,"faces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:1546,inherit,inherited,1546,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,1,['inherit'],['inherited']
Modifiability,"fault it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; resolveHierarchy() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Attempt to resolve the parent-child relationships between all objects within the hierarchy. resolveHierarchy() - Static method in class qupath.lib.scripting.QP. Resolve the location of annotations in the current hierarchy by setting parent/child relationships. resolveHierarchy(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. resolveOverlaps() - Method in class qupath.lib.plugins.ParallelTileObject. Request that the tile object attempts to resolve overlaps with its neighboring tiles. resolvePath(String) - Static method in class qupath.lib.scripting.QP. Resolve a path, replacing any placeholders. ResourceManager - Class in qupath.lib.projects. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager() - Constructor for class qupath.lib.projects.ResourceManager;  ; ResourceManager.Manager<T> - Interface in qupath.lib.projects. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. resourceManagerProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. The resource manager used to handle saving/loading. restoreClassificationsFromMap(Map<PathObject, PathClass>) - Static method in class qupath.lib.objects.PathObjectTools. Reassign classifications to objects, as were previously obtained using PathObjectTools.createClassificationM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:866270,plugin,plugins,866270,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"fault value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. static ImageServerBuilder.ServerBuilder<BufferedImage>; getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; RotatedImageServer.Rotation rotation). Get a ServerBuilder that applies a rotation to another server. RotatedImageServer.Rotation; getRotation(). Get the rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:2535,inherit,inherited,2535,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['inherit'],['inherited']
Modifiability,"faultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:1909,inherit,inherited,1909,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['inherit'],['inherited']
Modifiability,"faultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; runTasks(Collection<? extends Runnable>) - Method in interface qupath.lib.plugins.TaskRunner. Pass a collection of parallelizable tasks to run. S. sameClassificationPredicate() - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects that share the same classification. samplesPerPixel(int[]) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; SANS_SERIF - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Preferred sans-serif font. saturation(int) - Static method in class qupath.lib.color.ColorTransformer. Extract saturation value from RGB-to-HSB transform. Saturation - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Saturation value (from RGB-HSB transform). saturationPercentProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. SAVE_DATA - Variable in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:879456,extend,extends,879456,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"faultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoomOut(). getDensityType() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the normalization type of the density map. getDerivedBoundaryStrategy(double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. getDerivedPathClass(PathClass, Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:375997,plugin,plugins,375997,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"feredImage; makeViewerSnapshot(). Make a BufferedImage snapshot of the current viewer. static BufferedImage; makeViewerSnapshot(QuPathViewer viewer). Make a BufferedImage snapshot of the specified viewer. static boolean; openFile(File file). Try to open a file in the native application. static void; paintImage(Canvas canvas,; Image image). Paint an image centered within a canvas, scaled to be as large as possible while maintaining its aspect ratio. static void; paintImage(Canvas canvas,; Image image,; double scale). Paint an image centered within a canvas, scaled by the specified scale factor. static ContextMenu; populateAnnotationsMenu(QuPathGUI qupath,; ContextMenu menu). Populate a ContextMenu with standard options to operate on selected annotation objects. static Menu; populateAnnotationsMenu(QuPathGUI qupath,; Menu menu). Populate a Menu with standard options to operate on selected annotation objects. static boolean; promptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:4940,extend,extends,4940,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['extend'],['extends']
Modifiability,feredImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.CellCountsCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.WatershedNucleiCV;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.feat,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:372483,plugin,plugins,372483,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"feredImage>, PathPlugin<BufferedImage>. public class CoherenceFeaturePlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin to calculate coherence features for image tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CoherenceFeaturePlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:1628,plugin,plugin,1628,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['plugin'],['plugin']
Modifiability,"feredImage>, UriResource. public class OpenCVModelObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation may change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:1618,extend,extends,1618,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['extend'],['extends']
Modifiability,"feredImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:5264,extend,extends,5264,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['extend'],['extends']
Modifiability,"feredImage> imageData). Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. static void; setDefaultProject(Project<BufferedImage> project). Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:38921,extend,extends,38921,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ferences;  ; TMAScoreImporter - Class in qupath.lib.io. Helper class for importing data in connection with TMA slides. TMAScoreImporter() - Constructor for class qupath.lib.io.TMAScoreImporter;  ; TMASummaryViewer - Class in qupath.lib.gui.tma. Deprecated.; since v0.4.0. TMASummaryViewer(Stage) - Constructor for class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Constructor. toBlob(Mat...) - Method in interface qupath.opencv.dnn.BlobFunction. Convert one or more mats to a blob. toEncodedURI(String) - Static method in class qupath.lib.common.GeneralTools. Try to convert a path to an encoded URI. toFriendlyString() - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Get a friendlier string representation. TOGGLE_SELECTED_OBJECTS_LOCKED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; TOGGLE_SYNCHRONIZE_VIEWERS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; toggleObjectsLocked(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of specified objects. toggleSelectedObjectsLocked(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. toggleShowHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Toggle the visibility of the specified channel. toJSON(boolean) - Method in class qupath.lib.display.ImageDisplay. Create a JSON representation of the main components of the current display. toJTS(AffineTransform) - Static method in class qupath.lib.awt.common.AffineTransforms. Create a Java Topology Suite affine transformation from a Java affine transform. TOOLBAR_ICON_SIZE - Static variable in class qupath.lib.gui.QuPathGUI. Icon size to use in the main QuPath toolbar. ToolManager - Class in qupath.lib.gui. M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1034376,extend,extends,1034376,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"fferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBuffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:4134,extend,extends,4134,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['extend'],['extends']
Modifiability,"fferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:1811,plugin,plugin,1811,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugin']
Modifiability,"fferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. SparseImageServer.SparseImageServerManager; getManager(). Get the manager, which defines from whence the regions originate. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. static List<SparseImageServer>; splitConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:2612,inherit,inherited,2612,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,1,['inherit'],['inherited']
Modifiability,"fferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. See Also:. getRenderer(); setRenderer(ImageRenderer); rendererProperty(). Method Details. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier); Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. Parameters:; options - the options controlling the overlay display; classifier - the classifier; Returns:. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier,; int nThreads); Create an overlay to display the live application of a PixelClassifier to an image. Parameters:; options - the options controlling the overlay display; class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:4472,inherit,inherited,4472,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['inherit'],['inherited']
Modifiability,"fference; public static ROI difference(ROI roi1,; ROI roi2); Compute the difference between two ROIs.; This is equivalent to calling subtract(ROI, ROI...) to subtract roi2 from roi1. Parameters:; roi1 - the main ROI; roi2 - the ROI to subtract; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. symDifference; public static ROI symDifference(ROI roi1,; ROI roi2); Compute the symmetric difference between two ROIs (XOR). Parameters:; roi1 - the first ROI; roi2 - the second ROI; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:8426,extend,extends,8426,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability,"fied threshold. createExtendedTool(PathTool...) - Static method in class qupath.lib.gui.viewer.tools.PathTools;  ; createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Deprecated.; Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. createFloatImage(float[], int, int) - Static method in class qupath.lib.analysis.images.SimpleImages. Create a SimpleImage backed by an existing float array of pixels. createFloatImage(int, int) - Static method in class qupath.lib.analysis.images.SimpleImages. Create a SimpleImage backed by a float array of pixels. createFormatter(int) - Static method in class qupath.lib.common.GeneralTools. Create a new DecimalFormat that may be used to convert a number to have a maximum of nDecimalPlaces; (trailing zeros are not shown). createForObservableViewer(ObservableValue<? extends QuPathViewer>) - Static method in class qupath.lib.gui.UndoRedoManager;  ; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>>) - Static method in class qupath.lib.gui.panes.ServerSelector;  ; createFromCentroids(Collection<PathObject>, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs. createFromGeometryCoordinates(Collection<PathObject>, boolean, double) - Static method in class qupath.lib.analysis.DelaunayTools. Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. createFullImageAnnotation(boolean) - Static method in class qupath.lib.scripting.QP. Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. createFullImageAnnotation(boolean, int, int) - Static method in class qupath.lib.scripting.QP. Create an annotation around the full image for the current image, on the specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:179515,extend,extends,179515,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,field. LAPLACIAN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Laplacian of Gaussian filter. laplacianOfGaussian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the Laplacian of Gaussian image. LARGE - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; LARGE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; lastChangeTimestamp() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get a property representing the timestamp of the last recorded change for any property. lastValue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify a string representing the axes layout that the model expects as input. lazyInitialize(boolean) - Method in class qupath.opencv.dnn.DnnModelParams.Buil,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:647883,plugin,plugins,647883,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"fier and Type; Field; Description; final org.controlsfx.control.action.Action; MULTIVIEW_ADD_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_ADD_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_1x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x1;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_2x2;  ; final org.controlsfx.control.action.Action; MULTIVIEW_GRID_3x3;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_COLUMN;  ; final org.controlsfx.control.action.Action; MULTIVIEW_REMOVE_ROW;  ; final org.controlsfx.control.action.Action; MULTIVIEW_RESET_GRID;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewGridActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_1x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x1. MULTIVIEW_GRID_1x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_1x2. MULTIVIEW_GRID_2x1; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x1. MULTIVIEW_GRID_2x2; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_2x2. MULTIVIEW_GRID_3x3; public final org.controlsfx.control.action.Action MULTIVIEW_GRID_3x3. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_ADD_ROW; @ActionConfig(""Action.View.Multiview.addRow""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_ROW. MULTIVIEW_ADD_COLUMN; @ActionConfig(""Action.View.Multiview.addColumn""); public final org.controlsfx.control.action.Action MULTIVIEW_ADD_COLUMN. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MU",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html:1639,inherit,inherited,1639,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewGridActions.html,1,['inherit'],['inherited']
Modifiability,"fier<BufferedImage>, UriResource. public class DnnObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation is likely to change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toStrin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:1586,extend,extends,1586,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['extend'],['extends']
Modifiability,"float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548568,plugin,plugins,548568,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"flowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570875,plugin,plugins,570875,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"fo>; selectedChannelProperty(). The channel to which the sliders are applied. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:5243,inherit,inherited,5243,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap);  ; ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ColorMaps.ColorMap>; colorMapProperty(). Return the ColorMap property of this canvas. ColorMaps.ColorMap; getColorMap(). Return the currently displayed ColorMaps.ColorMap. boolean; isResizable();  ; double; maxHeight(double width);  ; double; maxWidth(double width);  ; double; minHeight(double width);  ; double; minWidth(double width);  ; double; prefHeight(double width);  ; void; resize(double width,; double height);  ; void; setColorMap(ColorMaps.ColorMap ColorMap). Set the ColorMaps.ColorMap to display ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:2135,inherit,inherited,2135,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['inherit'],['inherited']
Modifiability,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ImageDisplay>; imageDisplayObjectProperty(). The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:2778,inherit,inherited,2778,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSliderPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; disableGammaAdjustmentProperty(). Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustmentProperty(). Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValueProperty(). Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplayProperty(). The image display to which the sliders are applied. DoubleProperty; maxValueProperty(). Value of the maximum slider. DoubleProperty; minValueProperty(). Value of the minimum slider. void; refreshSliders(). Refresh the sliders, to ensure they match with the current channel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:3141,inherit,inherited,3141,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastChannelPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannelProperty(). Get the currently-selected channel. ReadOnlyBooleanProperty; currentChannelVisible(). Read-only property indicating whether the currently-selected channel is visible,; i.e. BooleanProperty; disableToggleMenuItemsProperty(). Property to disable options to toggle the visibility of channels. MultipleSelectionModel<ChannelDisplayInfo>; getSelectionModel(). Get the selection model for the channels. ObjectProperty<ImageDisplay>; imageDisplayProperty(). Property for the image display that should be shown and managed by this pane. boolean; isEmpty(). Query if the table is empty, i.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:3038,inherit,inherited,3038,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignmen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:2891,inherit,inherited,2891,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; ChartThresholdPane(XYChart<Number,Number> chart). Note: xAxis and yAxis must be instances of NumberAxis. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableNumberValue; addThreshold(double x). Add a threshold value. ObservableNumberValue; addThreshold(double x,; Color color). Add a threshold value with its display color. ObservableNumberValue; addThreshold(ObservableNumberValue d). Add a threshold value. void; clearThresholds(). Clear all thresholds. double; getLineWidth(). Get the threshold line width. ObservableList<ObservableNumberValue>; getThresholds(). Get a list of all thresholds. boolean; isInteractive(). Returns the value of isInteractiveProperty(). BooleanProperty; isInteractiveProperty(). Property indicatin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:2608,inherit,inherited,2608,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability,"focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:2475,inherit,inherited,2475,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['inherit'],['inherited']
Modifiability,"for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; detectionTreeDisplayModeProperty(). Define how detections should be displayed in lists and tree views. static BooleanProperty; doCreateLogFilesProperty(). Request a log file to be generated. static BooleanProperty; doubleClickToZoomProperty(). Request that double-clicking the viewer can be used to zoom in. static BooleanProperty; enableFreehandToolsProperty(). Enable polygon/polyline tools to support 'freehand' mode; this means that if the ROI is ; started by dragging, then it will end by lifting the mouse (rather than requiring a double-click). static void; exportPreferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNavigationSpeed(). Get navigation speed scaled as a proportion and forced to be in the range 0-1. static double; getScaledScrollSpeed(). Get scroll speed scaled as a proportion and forced to be in the range 0-1. static String; getSerializationExtension(). File extension used for serialization of ImageData (without the dot). static boolean; getShowAllRGBTransforms(). Request that all available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:15227,config,config,15227,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['config'],['config']
Modifiability,"for the parameter. boolean; isUnbounded(). Returns true if this neither a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:3082,inherit,inherited,3082,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['inherit'],['inherited']
Modifiability,"fx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastChannelPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastChannelPane; extends BorderPane; A pane responsible for the display and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:1455,inherit,inherited,1455,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"fy the x-axis label. XML - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for XML. XML - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; XmlLanguage - Class in qupath.lib.gui.scripting.languages. Class for representing XML in QuPath. XmlLanguage() - Constructor for class qupath.lib.gui.scripting.languages.XmlLanguage. Constructor for XML Language. XmlStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea for XML. xor(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise XOR of two arrays. Y. y - Variable in class qupath.lib.roi.EllipseROI;  ; y - Variable in class qupath.lib.roi.RectangleROI;  ; y2 - Variable in class qupath.lib.roi.EllipseROI;  ; y2 - Variable in class qupath.lib.roi.RectangleROI;  ; YAML - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for YAML. YAML - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; YamlLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of YAML syntax in QuPath. YamlLanguage() - Constructor for class qupath.lib.gui.scripting.languages.YamlLanguage. Constructor for YAML language. YamlStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on YAML syntax. yAxisMax(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the upper bound for the y-axis. yAxisMax(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the upper bound for the y-axis. yAxisMin(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the lower bound for the y-axis. yAxisMin(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the lower bound for the y-axis. yAxisRange(double, double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1125530,variab,variable,1125530,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"g of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isTitle(). Returns true if the parameter should be considered a title. boolean; isValidInput(String value). Always returns false. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void set",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:2199,inherit,inherited,2199,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['inherit'],['inherited']
Modifiability,"g the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Detai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2314,inherit,inherited,2314,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['inherit'],['inherited']
Modifiability,"g the user to update URIs for missing files. PROP_JAVADOC_PATH - Static variable in class qupath.lib.gui.JavadocViewer. Name of the system property used to set the javadoc path. PROPERTIES - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:798806,variab,variable,798806,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"g to a specified predicate. selectObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the specified hierarchy. selectObjects(PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified classifications. selectObjectsByMeasurement(ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Deprecated. selectObjectsByPathClass(PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified PathClass cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:899955,extend,extends,899955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,g() - Method in class qupath.lib.objects.PathRootObject;  ; toString() - Method in class qupath.lib.objects.TMACoreObject;  ; toString() - Method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap;  ; toString() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; toString() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; toString() - Method in class qupath.lib.regions.ImagePlane;  ; toString() - Method in class qupath.lib.regions.ImageRegion;  ; toString() - Method in class qupath.lib.regions.Padding;  ; toString() - Method in class qupath.lib.regions.RegionRequest;  ; toString() - Method in class qupath.lib.roi.AreaROI;  ; toString() - Method in class qupath.lib.roi.EllipseROI;  ; toString() - Method in class qupath.lib.roi.GeometryROI;  ; toString() - Method in class qupath.lib.roi.LineROI;  ; toString() - Method in class qupath.lib.roi.PolygonROI;  ; toString() - Method in class qupath.lib.roi.PolylineROI;  ; toString() - Method in class qupath.lib.roi.RectangleROI;  ; toString() - Method in class qupath.lib.roi.PointsROI;  ; toString() - Method in class qupath.lib.scripting.languages.ScriptLanguage;  ; toString() - Method in class qupath.opencv.dnn.DnnShape;  ; toString() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer;  ; toString() - Method in class,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1042119,plugin,plugins,1042119,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"g). Prompt to save the specified ImageData. static void; promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7089,extend,extends,7089,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['extend'],['extends']
Modifiability,"g, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:3809,extend,extends,3809,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"g. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x locat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:7436,extend,extends,7436,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['extend'],['extends']
Modifiability,"g. builder() - Static method in class qupath.lib.scripting.ScriptParameters. Create a new builder for ScriptParameters. builder() - Static method in class qupath.opencv.dnn.DnnModelParams. Create a new params builder, with default values. builder() - Static method in class qupath.opencv.ml.FeaturePreprocessor. Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. builder() - Static method in class qupath.opencv.ml.PatchClassifierParams. Create a builder to generate new patch classifier params. builder(int) - Static method in class qupath.lib.objects.utils.Tiler. Create a new builder to generate square tiles. builder(int, int) - Static method in class qupath.lib.objects.utils.Tiler. Create a new builder to generate rectangular tiles. builder(String) - Static method in class qupath.opencv.dnn.DnnTools. Initiative building and configuring an OpenCVDnn. builder(String) - Static method in class qupath.opencv.dnn.OpenCVDnn. Create a new builder. builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage, BufferedImage>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a new builder for a PixelProcessor that can make custom measurements for an image object. builder(DensityMaps.DensityMapBuilder) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. builder(Processor<ImagePlus, ImagePlus, Object>) - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a PixelProcessor.Builder for an ImageJ ImagePlus. builder(Processor<Mat, Mat, Mat>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a PixelProcessor.Builder for an OpenCV Mat. builder(PathObjectPredicates.PathObjectPredicate) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Create a new DensityMaps.DensityMapBuilder to generate a customized density map. build",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:73685,extend,extends,73685,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"g.QP. Get the current project. getProject() - Method in class qupath.lib.scripting.ScriptParameters. Get the current project that should be used with the script. getProjectEntry() - Static method in class qupath.lib.scripting.QP. Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. getProjectEntryMetadataValue(String) - Static method in class qupath.lib.scripting.QP. Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.Preferenc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493190,plugin,plugins,493190,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ge: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.plugins. package qupath.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1257,plugin,plugin,1257,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['plugin'],['plugin']
Modifiability,"ge; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to constru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2048,extend,extends,2048,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,1,['extend'],['extends']
Modifiability,"ge; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.utils; Enum Class Tiler.TileAlignment. java.lang.Object; java.lang.Enum<Tiler.TileAlignment>; qupath.lib.objects.utils.Tiler.TileAlignment. All Implemented Interfaces:; Serializable, Comparable<Tiler.TileAlignment>, Constable. Enclosing class:; Tiler. public static enum Tiler.TileAlignment; extends Enum<Tiler.TileAlignment>; Enum representing the possible alignments for tiles.; A tile alignment of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tiler.TileAlignment TOP_CENTER. TOP_RIGHT; public static fin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html:1118,extend,extends,1118,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,1,['extend'],['extends']
Modifiability,"ge>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Defaul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:476599,plugin,plugins,476599,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ge>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.CoherenceFeaturePlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CoherenceFeaturePlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin to calculate coherence features for image tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CoherenceFeaturePlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:1463,plugin,plugin,1463,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['plugin'],['plugin']
Modifiability,"geData for a channel identified by number. static void; setChannelDisplayRange(ImageData<BufferedImage> imageData,; String channelName,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the specified ImageData for a channel identified by name. static void; writeImage(Image image,; String path). Write a JavaFX image to the specified path. static void; writeRenderedImage(QuPathViewer viewer,; String path). Write a rendered image for the current viewer to the specified path. static void; writeRenderedImage(ImageData<BufferedImage> imageData,; String path). Write a rendered image to the specified path. static void; writeRenderedImageRegion(QuPathViewer viewer,; RegionRequest request,; String path). Write a rendered image region for the current viewer to the specified path. static void; writeRenderedImageRegion(ImageData<BufferedImage> imageData,; RegionRequest request,; String path). Write a rendered image region to the specified path. Methods inherited from class qupath.lib.scripting.QP; addObject, addObjects, addObjects, addPixelClassifierMeasurements, addPixelClassifierMeasurements, addShapeMeasurements, addShapeMeasurements, addShapeMeasurements, buildFilePath, buildPathInProject, buildServer, buildServer, buildServer, checkMinVersion, checkVersionRange, classifyDetectionsByCentroid, classifyDetectionsByCentroid, classifySelected, classifySelected, clearAllObjects, clearAllObjects, clearAnnotationMeasurements, clearAnnotationMeasurements, clearAnnotations, clearCellMeasurements, clearCellMeasurements, clearDetectionMeasurements, clearDetectionMeasurements, clearDetections, clearMeasurements, clearMeasurements, clearMeasurements, clearMeasurements, clearMeasurements, clearRootMeasurements, clearRootMeasurements, clearSelectedObjects, clearSelectedObjects, clearTileMeasurements, clearTileMeasurements, clearTMACoreMeasurements, clearTMACoreMeasurements, clearTMAGrid, copySelectedAnnotationsToPlane, copySelectedAnnotationsToPlane, cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:6060,inherit,inherited,6060,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['inherit'],['inherited']
Modifiability,"geData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2394,plugin,plugins,2394,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugins']
Modifiability,"geData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2628,plugin,plugins,2628,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugins']
Modifiability,"geData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:2739,inherit,inherited,2739,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['inherit'],['inherited']
Modifiability,"geData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image na",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:2232,extend,extends,2232,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['extend'],['extends']
Modifiability,"geData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current Project as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. installActions; public void installActions(Collection<? extends org.controlsfx.control.action.Action> actions); Install the specified actions. It is assumed that these have been configured via ActionTools, ; and therefore have sufficient information associated with them (including a menu path). Parameters:; actions - . getCommonActions; public CommonActions getCommonActions(); Get the common actions associated with this QuPath instance. Returns:. getAutomateActions; public AutomateActions getAutomateActions(); Get the automated actions associated with this QuPath instance. Returns:. lookupActionByText; public org.controlsfx.control.action.Action lookupActionByText(String text); Search for an action based upon its text (name) property. Parameters:; text - the text to search for; Returns:; the action, if found, or null otherwise. lookupMenuItem; public MenuItem lookupMenuItem(String menuPath); Search for a menu item based upon its path. Parameters:; menuPath - path to the menu item, in the form ""Main menu>Submenu>Name; Returns:; the menu item corresponding to this path, or null if no menu item is found. getOverlayActions; public OverlayActions getOverlayActions(); Get the actions associated with the vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:34122,config,configured,34122,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['config'],['configured']
Modifiability,"geData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. protected AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custom function to calculate a location string for the overlay. void; setOpacity(double opacity). Set opacity between 0 (completely transparent) and 1 (completely opaque). void; setPreferredOverlayColor(Color color). Set a preferred overlay color, which the overlay may or may not make use of. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.overlays.PathOverlay; paintOverlay. Constructor Details. AbstractOverlay; protected AbstractOverlay(OverlayOptions options). Method Details. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options, which may influence the display of this overlay. Returns:. getAlphaComposite; protected AlphaComposite getAlphaComposite(). setAlphaComposite; protected void setAlphaComposite(Graphics2D g2d). isVisible; public boolean isVisible(); Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Returns:. setPreferredOverlayColor; public void setPreferredOverlayColor(Color color); Set a preferred overlay color, which the overlay may or may not make use of.; The aim is to provide a means to suggest drawing with a light color on a dark image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:2298,inherit,inherited,2298,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,1,['inherit'],['inherited']
Modifiability,"geData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysProm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2726,inherit,inherited,2726,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['inherit'],['inherited']
Modifiability,"geEntry<T>>, boolean) - Method in interface qupath.lib.projects.Project. Remove multiple images from the project, optionally including associated data. removeByAreas(ByteProcessor, double, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects containing < minPixels or > maxPixels. removeChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Remove a single object from the child list of this object. removeChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Remove multiple objects from the child list of this object. removeColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Try to remove the column containing the specified viewer, notifying the user if this isn't possible. REMOVED - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. An object has been removed. removeEmptyParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Remove all empty parameters from this list. removeFileDropHandler(DragDropImportListener.DropHandler<File>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Remove a File DropHandler. removeFragments(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. removeGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Remove a connections group. removeImage(ProjectImageEntry<?>, boolean) - Method in interface qupath.lib.projects.Project. Remove an image from the project, optionally including associated data. removeInteriorRings(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Fill all interior rings for the specified geometry that have an area < a specified threshold. removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:844514,plugin,plugins,844514,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"geServer as is currently open. ReadOnlyObjectProperty<Project<BufferedImage>>; projectProperty(). Read-only property representing the currently-open project. boolean; promptToOpenImageFile(). Show a file chooser to open a new image in the current viewer. boolean; promptToOpenImageFileOrUri(). Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only). ReadOnlyBooleanProperty; readOnlyProperty(). Property indicating whether QuPath is in 'read-only' mode. void; refreshProject(). Refresh the project, updating the display if required. void; refreshTitle(). Refresh the title bar in the main QuPath window. void; requestAutomaticUpdateCheck(). Request an automated update check in a background thread. void; requestFullUpdateCheck(). Request a manual update check in a background thread. boolean; resetAvailablePathClasses(). Populate the availablePathClasses with a default list. boolean; runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive). Run a plugin, interactively (i.e. Object; runScript(File file,; String script). Convenience method to execute a script. void; sendQuitRequest(). Request to quit QuPath. boolean; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:9301,plugin,plugin,9301,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['plugin'],['plugin']
Modifiability,"geServer<T>; buildOriginal();  ; static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. static <T> ImageServerBuilder.ServerBuilder<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. Type Parameters:; T - ; Parameters:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:2157,inherit,inherited,2157,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['inherit'],['inherited']
Modifiability,"general rules for resolving the hierarchy. ; This relies on centroids for detections, and a 'covers' rule for others. Parameters:; cls - class of PathObjects (e.g. PathDetectionObject), or null to accept all; roi - ; Returns:. getObjectsForRegion; public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - ; isChanging - . fireObjectClassificationsChangedEvent; public void fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object classifications have changed. Parameters:; source - ; pathObjects - . fireObjectsChanged",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:19243,extend,extends,19243,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,ges.servers.RotatedImageServer.Rotation;  ; toString() - Method in class qupath.lib.images.servers.TileRequest;  ; toString() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; toString() - Method in class qupath.lib.objects.classes.PathClass;  ; toString() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; toString() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent;  ; toString() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy;  ; toString() - Method in class qupath.lib.objects.PathObject;  ; toString() - Method in enum class qupath.lib.objects.PathObjectFilter;  ; toString() - Method in class qupath.lib.objects.PathRootObject;  ; toString() - Method in class qupath.lib.objects.TMACoreObject;  ; toString() - Method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap;  ; toString() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; toString() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; toString() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; toString() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; toString() - Method in class qupath.lib.regions.ImagePlane;  ; toString() - Method in class qupath.lib.regions.ImageRegion;  ; toString() - Method in class qupath.lib.regions.Padding;  ; toString() - Method in class qupath.lib.regions.RegionRequest;  ; toString() - Method in class qupath.lib.roi.AreaROI,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1041465,plugin,plugins,1041465,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ges.servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:546790,plugin,plugins,546790,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"getClassProbability, getPathClass, getROI, isEditable, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. LEGACY_KEY_UNIQUE_ID; @Deprecated; public static final String LEGACY_KEY_UNIQUE_ID; Deprecated.; The key used before v0.4.0 to represent a unique (usually patient) ID.; This was replaced by #KEY_CASE_ID. See Also:. Constant Field Values. KEY_CASE_ID; public static final String KEY_CASE_ID; Metadata key to store a case identify for the TMA core.; This can be used to group cores that belong to the same case. See Also:. Constant Field Values. KEY_OVERALL_SURVIVAL; public static final String KEY_OVERALL_SURVIVAL; Metadata key for an overall survival (temporal) value. See Also:. Constant Field Values. KEY_RECURRENCE_FREE_SURVIVAL; public static final String KEY_RECURRENCE_FREE_SURVIVAL; Metadata key for an recurrence-free survival (temporal) value. See Also:. Constant Field Values. KEY_OS_CENSORED; public static final String KEY_OS_CENSORED; Metadata key for an over",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:3536,inherit,inherited,3536,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['inherit'],['inherited']
Modifiability,"getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2979,inherit,inherited,2979,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['inherit'],['inherited']
Modifiability,"getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2845,inherit,inherited,2845,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['inherit'],['inherited']
Modifiability,"getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - ; isChanging - . fireObjectClassificationsChangedEvent; public void fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object classifications have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating objects have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:19591,extend,extends,19591,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"getThumbnail, getTPosition, getView, getZoomToFitDownsampleFactor, getZPosition, hasServer, hierarchyChanged, imageDataProperty, imagePointToComponentPoint, isImageDataChanging, isRotated, isShowing, isSpaceDown, paintComponent, paintViewer, removeViewerListener, repaint, repaintTimestamp, requestCancelDirection, requestDecelerate, requestStartMoving, requestStopMoving, requiresTileRegion, resetCustomPixelLayerOverlay, resetImageData, resetMinimumRepaintSpacingMillis, rotationProperty, selectedPathObjectChanged, setActiveTool, setBorderColor, setCenterPixelLocation, setCursor, setCustomPixelLayerOverlay, setDoFasterRepaint, setDownsampleFactor, setDownsampleFactor, setDownsampleFactor, setGamma, setImageData, setMagnification, setMinimumRepaintSpacingMillis, setRotation, setSelectedObject, setSelectedObject, setSpaceDown, setTPosition, setZPosition, tileAvailable, toString, tPositionProperty, updateCursor, zoomIn, zoomIn, zoomOut, zoomOut, zoomToFit, zPositionProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:4011,inherit,inherited,4011,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,1,['inherit'],['inherited']
Modifiability,"ge qupath.lib.gui; Class TaskRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1323,inherit,inherited,1323,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['inherit'],['inherited']
Modifiability,"ggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property,; String name,; Node icon,; KeyCombination accelerator); Create an action with its Action.selectedProperty() bound to a specified property, with optional graphic and accelerator. Parameters:; property - the property to which the selected property of the action should be bound. The binding will be bidirectional if possible.; name - the name of the action (set as the text property); icon - an icon for the icon (set as the graphic property); accelerator - an accelerator for the action; Returns:; a new Action initialized according to the provided parameters. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property); Create an unnamed action with its Action.selectedProperty() bound to a specified property. Parameters:; prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:13180,config,configured,13180,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['config'],['configured']
Modifiability,"ging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1484,plugin,plugin,1484,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['plugin'],['plugin']
Modifiability,"gins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8986,extend,extends,8986,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"gins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput ou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9486,plugin,plugins,9486,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"gion as an ImagePlus, optionally setting ImageJ Rois corresponding to QuPath objects. String; getDescription(). A short description of the extension for displaying in the main GUI. static Image; getImageJIcon(int width,; int height). Try to read the ImageJ icon from its jar. static ImageJ; getImageJInstance(). Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). static String; getImageJPath(). Get the path for a local ImageJ installation, if set. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. static StringProperty; imageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path ha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:3153,inherit,inherited,3153,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['inherit'],['inherited']
Modifiability,"gionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.Sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1026,inherit,inherited,1026,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['inherit'],['inherited']
Modifiability,"gletonPathClass(PathClass). since v0.4.0 in favor of PathClass.getSingleton(PathClass). qupath.lib.objects.classes.PathClassFactory.getThreePlus(PathClass). since v0.4.0, use PathClass.getThreePlus(PathClass). qupath.lib.objects.classes.PathClassFactory.getTwoPlus(PathClass). since v0.4.0, use PathClass.getTwoPlus(PathClass). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObject(PathObject). since v0.4.0; use PathObjectHierarchy.addObject(PathObject) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectBelowParent(PathObject, PathObject, boolean). since v0.4.0; use PathObjectHierarchy.addObjectBelowParent(PathObject, PathObject, boolean). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:9781,extend,extends,9781,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,"global threshold applied to RGB images only.; ; TODO: Provide choice of channels to threshold; TODO: Support 16-bit data. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:1913,extend,extends,1913,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['extend'],['extends']
Modifiability,"gory,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new preference based on a specified Property. Parameters:; prop - ; cls - ; name - ; category - ; description - . addColorPropertyPreference; @Deprecated; public void addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified StringProperty. Parameters:; prop - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from a list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from an optionally searchable list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - ; makeSearchable - make the choice item's editor searchable (useful for long lists). createPropertySheetItem; @Deprecated; public static <T>; org.controlsfx.control.PropertySheet.Item createPropertySheetItem(Property<T> property,; Class<? extends T> cls",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:4779,extend,extends,4779,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['extend'],['extends']
Modifiability,"gui.charts.Charts.ScatterChartBuilder. Create a scatterplot using collections of numeric values, with an associated custom object. series(String, String[], double[]) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using arrays of String values and associated numeric values. series(String, String[], double[], List<T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections of String values and associated numeric values, with an associated custom object. series(String, String[], double[], T[]) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections String values and associated numeric values, with an associated custom object. series(String, Collection<? extends Number>, Collection<? extends Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot using collections of numeric values. series(String, Collection<? extends String>, Collection<T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections of numeric values. series(String, Collection<? extends T>, Function<T, Number>, Function<T, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<? extends T>, Function<T, PathClass>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<XYChart.Data<Number, Number>>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot from existing data plots. series(String, Collection<XYChart.Data<String, Number>>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart from existing data plots. series(String, Map<String, T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:910593,extend,extends,910593,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"gui.commands.PathObjectGridView. All Implemented Interfaces:; EventListener, ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener. public class PathObjectGridView; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PathObjectHierarchyListener; Grid display of objects.; ; Previously this was TMAGridView, but it was generalized for v0.4.0 to support other kinds of object.; ; This requires cores in memory, so does not scale wonderfully... but it can be quite useful for individual slides. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageData<BufferedImage>>; imageData;  . Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathObjectGridView.GridDisplaySize;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; static PathObjectGridView; createAnnotationView(QuPathGUI qupath). Create a grid view for annotations. static PathObjectGridView; createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:1362,extend,extends,1362,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,1,['extend'],['extends']
Modifiability,"gui.dialogs.Dialogs.Builder. Deprecated.;  ; Builder() - Constructor for class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; Builder() - Constructor for class qupath.lib.images.servers.ImageServerMetadata.Builder. Minimal builder for a new ImageServerMetadata; further properties must be set. Builder() - Constructor for class qupath.lib.images.servers.PixelCalibration.Builder. Create a new builder with default (uncalibrated) values. Builder() - Constructor for class qupath.lib.images.servers.SparseImageServer.Builder;  ; Builder() - Constructor for class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Default constructor for a builder with flatness 0.5 and pixel width/height of 1.0. Builder(int, int) - Constructor for class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Builder(Class<? extends ImageServer<?>>, String, int, int) - Constructor for class qupath.lib.images.servers.ImageServerMetadata.Builder. Builder for a new ImageServerMetadata; further properties must be set. Builder(QuPathViewer) - Constructor for class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage>) - Constructor for class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Create a rendered image server for the specified ImageData;. Builder(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.servers.LabeledImageServer.Builder. Create a Builder for a LabeledImageServer for the specified ImageData. Builder(ImageServer<BufferedImage>) - Constructor for class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Constructor. Builder(ImageServerMetadata) - Constructor for class qupath.lib.images.servers.ImageServerMetadata.Builder. Builder for a new ImageServerMetadata object that takes an existing metad",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:76510,extend,extends,76510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"guments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXISTING; public static final PixelClassifierTools.CreateObjectOptions DELETE_EXISTING; Delete existing child objects. SPLIT; public static final PixelClassifierTools.CreateObjectOptions SPLIT; Split connected components. INCLUDE_IGNORED; public static final PixelClassifierTools.CreateObjectOptions INCLUDE_IGNORED; Generate objects for ignored classes (default is not to). SELECT_NEW; public static final PixelClassifierTools.CreateObjectOptions SELECT_NEW; Set the new objects to be selected. Method Details. values; public static PixelClassifierTools.CreateObjectOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PixelClassifierTools.CreateObjectOptions valueOf(String name); Returns the enum constant of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1978,inherit,inherited,1978,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,1,['inherit'],['inherited']
Modifiability,"gy Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:19845,adapt,adapters,19845,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['adapt'],['adapters']
Modifiability,"h.lib.algorithms.IntensityFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractPlugin. For a specified parent object, generate a task to run. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:27746,plugin,plugins,27746,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"h.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. CLASSIFICATION - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a classification, such as in a labelled image. CLASSIFICATION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to ClassificationModel. classificationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Specify classification labels. classificationLabels(Map<Integer, PathClass>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the interpretation of classification labels. classificatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99929,plugin,plugins,99929,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"h.lib.gui.ExtensionControlPane. Create an instance of the ExtensionControlPane UI pane. createInstance() - Static method in class qupath.lib.roi.RoiEditor. Create a new RoiEditor. createInstance(int, int, int, int, int, int) - Static method in class qupath.lib.regions.ImageRegion. Create a region based on its bounding box coordinates, z-slice index and time point index. createInstance(Class<? extends ImageServerBuilder<T>>, float, Collection<ImageServerBuilder.ServerBuilder<T>>) - Static method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. createInstance(Class<? extends ImageServerBuilder<T>>, float, ImageServerBuilder.ServerBuilder<T>) - Static method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. createInstance(Class<? extends ImageServerBuilder<T>>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. createInstance(Class<? extends ImageServerBuilder<T>>, ImageServerMetadata, URI, String...) - Static method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). createInstance(String, double, int, int, int, int) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. createInstance(String, double, int, int, int, int, int, int) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its boun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:187992,extend,extends,187992,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"h.lib.gui.tools. Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PaneTools() - Constructor for class qupath.lib.gui.tools.PaneTools. Deprecated.;  ; parallelize() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Parallelize tile export, if possible. parallelize(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744342,plugin,plugins,744342,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"h.lib.gui.viewer.QuPathViewer;  ; RESET_DETECTION_CLASSIFICATIONS - Variable in class qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions;  ; RESET_METADATA - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RESET_PREFERENCES - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjectAndImage() - Static method in class qupath.lib.scripting.QP. Reset the Project and ImageData used for batch processing for the current thread. resetClassifications(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the current hierarchy. resetClassifications(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.process.gui.WandToolEventHandler. Reset the constraining objects. resetCustomPixelLayerOverlay() - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:861123,extend,extends,861123,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"h.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the Extensio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1340,inherit,inherited,1340,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['inherit'],['inherited']
Modifiability,"h.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2304,plugin,plugin,2304,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"h.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class RefineAnnotationsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RefineAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:1433,plugin,plugin,1433,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['plugin'],['plugin']
Modifiability,"h.lib.roi.PointsROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; translate(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; translate(int, int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK - Static variable in class qupath.lib.color.ColorToolsAwt. Black, with 50% opacity. TRANSLUCENT_BLACK_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. Black with opacity at 50%. TRANSLUCENT_WHITE - Static variable in class qupath.lib.color.ColorToolsAwt. White, with 50% opacity. TRANSLUCENT_WHITE_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. White with opacity at 50%. TRANSPARENT - Static variable in class qupath.lib.images.servers.ImageChannel. Special color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<? extends PathObject>, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix Topolog",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1054096,variab,variable,1054096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"h.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30374,plugin,plugins,30374,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"h.opencv.dnn.OpenCVDnn.Builder. User-friendly name to use with this model. NAME_NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Negative"" staining intensity. NAME_OBJECT_ID - Static variable in class qupath.lib.gui.measure.ObservableMeasurementTableData. The name used for the Object ID column. NAME_ONE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""1+"" staining intensity (i.e. NAME_POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Positive"" staining intensity. NAME_THREE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""3+"" staining intensity (i.e. NAME_TWO_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""2+"" staining intensity (i.e. nameObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object names based upon pre-computed clusters. nameObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. nameProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the String property of this ViewTracker. nameProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; nameProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the name of the tool. nanoseconds() - Method in class qupath.lib.common.Timeit. Report timings in nanoseconds. navigationAcceleration - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Apply acceleration/deceleration effects when h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:706544,extend,extends,706544,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"h.opencv.tools.GroovyCV. Apply a less than or equal to threshold. leq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold between two arrays. levels(Collection<ImageServerMetadata.ImageResolutionLevel>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify resolution levels, where the largest image should come first. levelsFromDownsamples(double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify downsample values for pyramidal levels. LICENSE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; limitDatapoints(int) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Choose the maximum number of supported datapoints. LINE - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a line or polyline. LINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Line drawing tool. LINE_OR_ARROW - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Extended PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:652153,variab,variable,652153,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"hClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java. JAVA_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Java-like import statements. JAVA_TOKENIZER - Static variabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:638217,plugin,plugins,638217,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"hGUI, Writer) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Write a markdown representation of the menus for inclusion in the documentation. MenuTools - Class in qupath.lib.gui.tools. Static methods to help with creating and populating JavaFX menus. MenuTools() - Constructor for class qupath.lib.gui.tools.MenuTools;  ; merge(Collection<? extends PathObject>) - Method in class qupath.lib.objects.utils.ObjectMerger. Calculate the result of applying the merging strategy to the input objects. MERGE_SELECTED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; mergeAnnotations(Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Merge annotations for the current hierarchy. mergeAnnotations(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Merge the specified annotations to create a new annotation containing the union of their ROIs. mergeChannels(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Merge channels from a multichannel Mat. mergeClasses(PathClass, PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Merge two classifications together. mergeObjects(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Merge objects by calculating the union of their ROIs. mergeObjects(Collection<? extends PathObject>, Function<? super PathObject, ? extends K>) - Static method in class qupath.lib.objects.PathObjectTools. Merge objects that share a property in common. mergePointsForAllClasses() - Static method in class qupath.lib.scripting.QP. Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations; of the current hierarchy, creating multi-point annotations for all matching points and removing the (previously-separated) annotations. mergePointsForAllClasses(PathObjectHierarchy) - Static method in class qupath.lib.object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:687839,extend,extends,687839,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"hGUI.projectProperty(). getProject() - Static method in class qupath.lib.scripting.QP. Get the current project. getProject() - Method in class qupath.lib.scripting.ScriptParameters. Get the current project that should be used with the script. getProjectEntry() - Static method in class qupath.lib.scripting.QP. Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. getProjectEntryMetadataValue(String) - Static method in class qupath.lib.scripting.QP. Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493109,plugin,plugins,493109,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"hObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:2262,extend,extends,2262,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['extend'],['extends']
Modifiability,"hObject>; readObjects(Path path). Read a list of PathObject from a file. static List<PathObject>; readObjectsFromGeoJSON(InputStream stream). Read a list of PathObject from an input stream. static String; readSerializedServerPath(File file). Deprecated.; This was useful in QuPath v0.1.2 and earlier, since all information to construct a server was stored within its path. static void; setRequestedDataFileVersion(int version). Set the requested version for .qpdata files. static Set<String>; unzippedExtensions(Path path,; String... zipExtensions). Get the extension of a file, or of all entries within a zip file. static void; writeImageData(File file,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. static void; writeImageData(OutputStream stream,; ImageData<?> imageData). Serialize an ImageData object to an output stream. static void; writeImageData(Path path,; ImageData<?> imageData). Write (binary) file containing ImageData for later use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRequestedDataFileVersion; public static int getRequestedDataFileVersion(); Get the requested version for .qpdata files. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). getCurrentDataFileVersion; public static int getCurrentDataFileVersion(); Get the current preferred data file version. Returns:; See Also:. setRequestedDataFileVersion(int version); getCurrentDataFileVersion(). setRequestedDataFileVersion; public static void setRequestedDataFileVersion(int version); throws IllegalArgumentException; Set the requested version for .qpdata files.; ; ; 1.0 Initial version stored in very early .qpdata files (no longer supported); 2 Switched versions to use integers, added Locale information (used in QuPath v0.1.2); 3 Switched ImageServer paths to be a JSON representation rather than a single path/URL; 4 Added su",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:4361,inherit,inherited,4361,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['inherit'],['inherited']
Modifiability,"hObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2586,inherit,inherited,2586,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['inherit'],['inherited']
Modifiability,"hObjectHierarchyEvent. Create a hierarchy event indicating that the hierarchy structure has been changed. createSubProject(String, Collection<ProjectImageEntry<T>>) - Method in interface qupath.lib.projects.Project. Create a sub-project that provides a view on the specified entries. createSubTypeAdapterFactory(Class<T>, String) - Static method in class qupath.lib.io.GsonTools. Create a TypeAdapterFactory that is suitable for handling class hierarchies. createTaskRunner() - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). createTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createTaskRunner(int) - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the specified number of threads. createTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance with the specified number of threads. createThreadFactory(String, boolean) - Static method in class qupath.lib.common.ThreadTools. Create a named thread factory with Thread.NORM_PRIORITY. createThreadFactory(String, boolean, int) - Static method in class qupath.lib.common.ThreadTools. Create a named thread factory with a specified priority. createThresholdClassifier(PixelCalibration, int, double, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a new PixelClassifier that applies a threshold to one channel of an image. createThresholdClassifier(PixelCalibration, Map<Integer, ? extends Number>, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a new PixelClassifier that applies a threshold to one or more channels of an image. createThresholdServer(ImageServer<BufferedImage>, int, double, PathClass, PathClass) - Static method in class qupath.open",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:227516,plugin,plugins,227516,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"hObjectLabels() - Constructor for class qupath.lib.gui.tools.PathObjectLabels;  ; PathObjectLabels.PathObjectMiniPane - Class in qupath.lib.gui.tools. Manage a small pane that can be used to display a PathObject. PathObjectMiniPane(Function<PathObject, String>) - Constructor for class qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Constructor using a custom string extraction function. PathObjectPainter - Class in qupath.lib.gui.viewer. Static methods to assist with painting PathObjects. PathObjectPredicates - Class in qupath.lib.objects. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates() - Constructor for class qupath.lib.objects.PathObjectPredicates;  ; PathObjectPredicates.PathObjectPredicate - Interface in qupath.lib.objects. A JSON-serializable Predicate for use with PathObjects. PathObjectReader - Interface in qupath.lib.objects. Interface for classes capable of reading PathObjects from some source. pathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify a collection of objects to export. pathObjects(PathObject...) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify an array of objects to export. PathObjects - Class in qupath.lib.objects. Helper class to create PathObject. PathObjects() - Constructor for class qupath.lib.objects.PathObjects;  ; PathObjectSelectionListener - Interface in qupath.lib.objects.hierarchy.events. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel - Class in qupath.lib.objects.hierarchy.events. Model for handling selection of single and multiple PathObjects. PathObjectSelectionModel() - Constructor for class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel;  ; PathObjectTools - Class in qupath.lib.objects. A collection of static methods to help work with PathObjects. PathObjectTools() - Constructor for class qupath.lib.objects.PathObjectTools;  ; PathOverla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:757492,extend,extends,757492,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"hObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(Map<String, ?>, String). use ParameterList.convertToJson(Map) instead. qupath.lib.plugins.parameters.ParameterList.getParameterListJSON(ParameterList, String). use ParameterList.convertToJson(ParameterList) instead. qupath.lib.projects.ProjectImageEntry.getServerURIs(). use instead UriResource.getURIs(). qupath.lib.projects.ProjectImageEntry.updateServerURIs(Map<URI, URI>). use instead UriResource.updateURIs(Map). qupath.lib.regions.ImageRegion.getPlane(). v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). qupath.lib.roi.AreaROI.duplicate(). qupath.lib.roi.EllipseROI.duplicate(). qupath.lib.roi.interfaces.ROI.duplicate(). qupath.lib.roi.LineROI.duplicate(). qupath.lib.roi.PointsROI.duplicate(). qupath.lib.roi.PolygonROI.duplicate(). qupath.lib.roi.PolylineROI.duplicate(). qupath.lib.roi.RectangleROI.duplicate(). qupath.lib.scripting.QP.buildServer(String, Class<T>, String...). In the usua",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:11450,plugin,plugins,11450,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['plugin'],['plugins']
Modifiability,"hObject pathObject). Returns true if the specified PathObject is contained within this group. List<Set<PathObject>>; getConnectedClusters(). Get a list of PathObjects that are connected to each other in this triangulation. Collection<double[]>; getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections). Deprecated. Collection<PathObject>; getConnectedNodes(PathObject pathObject,; Collection<PathObject> list). Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:2277,inherit,inherited,2277,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,1,['inherit'],['inherited']
Modifiability,"hROI - ; cal - ; downsampleFactor - ; Returns:; See Also:. convertToIJRoi(ROI, double, double, double). convertToROI; public static ROI convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:24881,extend,extends,24881,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['extend'],['extends']
Modifiability,"hViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SlideLabelView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay;  ; changeMaxValues(double, double, double) - Method in class qupath.lib.color.ColorDeconvolutionStains. Create a new stains object with the same StainVectors but new",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:91237,extend,extends,91237,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"hat a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask); Check that marker and mask images have the same size, and ensure that marker",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:2391,inherit,inherited,2391,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['inherit'],['inherited']
Modifiability,"hat deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:241877,variab,variable,241877,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"hat the object is editable. isEditable() - Method in class qupath.lib.objects.PathROIObject. Deprecated.; since v0.4.0. isEditable() - Method in class qupath.lib.objects.PathRootObject. The root object is never locked. isEmpty() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Returns true if there are no events included. isEmpty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Query if the table is empty, i.e. isEmpty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the collection of recorded frames is empty. isEmpty() - Method in interface qupath.lib.measurements.MeasurementList. Returns true if the list does not contain any measurements. isEmpty() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Check if the hierarchy is empty (i.e. isEmpty() - Method in class qupath.lib.objects.PathObjectConnections. Returns true if the group is empty. isEmpty() - Method in class qupath.lib.plugins.workflow.Workflow. Returns true if the workflow does not contain any steps. isEmpty() - Method in interface qupath.lib.projects.Project. Test if the project contains any images. isEmpty() - Method in class qupath.lib.regions.Padding. Returns true of the padding is zero. isEmpty() - Method in class qupath.lib.roi.EllipseROI;  ; isEmpty() - Method in class qupath.lib.roi.RectangleROI;  ; isEmpty() - Method in class qupath.lib.roi.AreaROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolygonROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolylineROI. True if the bounding box has zero area. isEmpty() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if the ROI bounds have zero width and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsRO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:619958,plugin,plugins,619958,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"he ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2325,inherit,inherited,2325,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['inherit'],['inherited']
Modifiability,"he ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. renderer; public ObjectProperty<ImageRenderer> rendererProperty; Get the ImageRenderer property used with this overlay. See Also:. getRenderer(); setRenderer(ImageRenderer); rendererProperty(). Method Details. create; public static PixelClassificationOverlay create(OverlayOptions options,; PixelClassifier classifier); Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; threads for classification. Parameters:; options - the options controlling the overlay display; classifier - the classifier; Returns:. create; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:4197,inherit,inherited,4197,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['inherit'],['inherited']
Modifiability,"he URIs within a project, prompting the user to correct any broken links if required. static void; promptToExportImageList(Project<?> project). Prompt to export a text file containing a list of image paths for a project. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. static List<ProjectImageEntry<BufferedImage>>; promptToImportImages(QuPathGUI qupath,; ImageServerBuilder<BufferedImage> builder,; String... defaultPaths). Show prompt for the user to select images to import into the current project in QuPath. static boolean; promptToImportLegacyProject(QuPathGUI qupath). Prompt the user to select a legacy project file, and then import the images into ; the current project. static void; showProjectMetadataEditor(Project<?> project). Show the metadata editor for the specified project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectCommands; public ProjectCommands(). Method Details. promptToCheckURIs; public static boolean promptToCheckURIs(Project<?> project,; boolean onlyIfMissing); throws IOException; Check the URIs within a project, prompting the user to correct any broken links if required. Parameters:; project - the project containing URIs to check; onlyIfMissing - if true, only display a prompt if some links are broken; Returns:; true if the dialog was shown and closed successfully, false if it was cancelled; Throws:; IOException. promptToImportImages; public static List<ProjectImageEntry<BufferedImage>> promptToImportImages(QuPathGUI qupath,; String... defaultPaths); Show prompt for the user to select images to import into the current project in QuPath, choosing a suitable ImageServerBuilder. Parameters:; qupath - the QuPath instance; defaultPaths - image pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html:2209,inherit,inherited,2209,javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ProjectCommands.html,1,['inherit'],['inherited']
Modifiability,"he binary image in Mat. Thinning - Class in qupath.opencv.tools. Implementation of the 3D binary thinning algorithm of; ; Lee et al. Thinning() - Constructor for class qupath.opencv.tools.Thinning;  ; ThreadTools - Class in qupath.lib.common. Create a thread factory that supports adding a prefix to the name and setting daemon status. ThreadTools() - Constructor for class qupath.lib.common.ThreadTools;  ; threshold(double) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the threshold value used for the classification. threshold(double...) - Static method in class qupath.opencv.ops.ImageOps.Threshold. Apply a fixed threshold. threshold(PathObjectHierarchy, ImageServer<BufferedImage>, int, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Threshold a single channel of a density map to generate new annotations. threshold(PathObjectHierarchy, ImageServer<BufferedImage>, Map<Integer, ? extends Number>, String, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Threshold one or more channels of a density map to generate new annotations. Threshold() - Constructor for class qupath.opencv.ops.ImageOps.Threshold;  ; thresholdAbove(ImageProcessor, float) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > threshold. thresholdAboveEquals(ImageProcessor, float) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= threshold. thresholdBelow(ImageProcessor, float) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 < threshold. thresholdBelowEquals(ImageProcessor, float) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1021805,extend,extends,1021805,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"he last time this object was notified that it was saved. boolean; isFluorescence(). Returns true if the image type is set to fluorescence. Object; removeProperty(String key). Remove a specified property. void; removePropertyChangeListener(PropertyChangeListener listener). Remove a property change listener. void; setChanged(boolean isChanged). Set isChanged() status. void; setColorDeconvolutionStains(ColorDeconvolutionStains stains). Set the color deconvolution stain vectors for the current image type. void; setImageType(ImageData.ImageType type). Set the image type. void; setLastSavedPath(String path,; boolean resetChanged). Set the last path used to save this object;. Object; setProperty(String key,; Object value). Set a property. String; toString();  ; void; updateServerMetadata(ImageServerMetadata newMetadata). Update the ImageServer metadata. void; workflowUpdated(Workflow workflow). Called whenever a Workflow has been updated in some way, such as a new step added. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy,; ImageData.ImageType type); Create a new ImageData with a specified object hierarchy and type. Parameters:; server - ; hierarchy - ; type - . ImageData; public ImageData(ImageServer<T> server,; ImageData.ImageType type); Create a new ImageData with a specified type and creating a new object hierarchy. Parameters:; server - ; type - . ImageData; public ImageData(ImageServer<T> server,; PathObjectHierarchy hierarchy); Create a new ImageData with ImageType.UNKNOWN. Parameters:; server - ; hierarchy - . ImageData; public ImageData(ImageServer<T> server); Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. Parameters:; server - . Method Details. getHistoryWorkflow; public Workflow getHistoryWorkflow(); Get a workflow representing a history of the process",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html:4098,inherit,inherited,4098,javadoc/docs/qupath/lib/images/ImageData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/ImageData.html,1,['inherit'],['inherited']
Modifiability,he name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCy,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453237,plugin,plugins,453237,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"he nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. static Collection<PathObject>; getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7080,extend,extends,7080,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"he output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; IllegalArgumentException - if the number of channels in the output would be greater than opencv_core.CV_CN_MAX. isFloat; public static boolean isFloat(Mat mat); Returns true if a Mat is a floating point (rather than int) type. Parameters:; mat - ; Returns:. floor; public static void floor(Mat mat); Floor values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.floor(double) except that non-finite values are left unchanged. Parameters:; mat - . round; public static void round(Mat mat); Round values in a floating point Mat.; Non-floating point Mats are unchanged.; This resembles Math.round(double) except that non-finite values are left unchanged. Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:17030,extend,extends,17030,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['extend'],['extends']
Modifiability,"he specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessible by getSelectedObject();. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectSelectionModel; public PathObjectSelectionModel(). Method Details. setSelectedObjects; public void setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject); Specify a collection of objects to be selected, and which among them should be the primary.; ; Any previous selection is reset. Parameters:; pathObjects - ; primarySelectedObject - . getSelectedObjects; public Set<PathObject> getSelectedObjects(); Get an unmodifiable set containing all the currently-selected objects. Returns:. noSelection; public boolean noSelection(); Returns true if no objects are selected. Returns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. Parameters:; pathObject - ; addToSelection - add to the existing selection, rather than allowing only the specified object to be selected; See Also:. setSelectedObject(PathObject). deselectObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:2839,extend,extends,2839,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['extend'],['extends']
Modifiability,"he system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; void pluginCompleted(String message); Notify the monitor that the plugin has completed its work. This is ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1833,plugin,plugin,1833,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['plugin'],['plugin']
Modifiability,"head. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SplitAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteract",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:1817,extend,extends,1817,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['extend'],['extends']
Modifiability,"height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale Buff",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4082,inherit,inherited,4082,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['inherit'],['inherited']
Modifiability,"hey are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:5033,inherit,inherited,5033,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['inherit'],['inherited']
Modifiability,"hich does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:3238,extend,extends,3238,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,"hin XYChart.Series objects.; Instead, the data is stored in HistogramChart.HistogramData objects, which are then used to populate the chart.; ; One advantage of this is that it is easier to control the color of each histogram being displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMeth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:1962,inherit,inherited,1962,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"hin a viewer, prompting to save changes if necessary. static QuPathGUI; createHiddenInstance(). Create a new QuPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the autom",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2495,plugin,plugin,2495,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['plugin'],['plugin']
Modifiability,"his has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3981,adapt,adapt,3981,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['adapt'],['adapt']
Modifiability,"his should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2461,inherit,inherited,2461,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['inherit'],['inherited']
Modifiability,"his version of QuPath in a publication. static final String; getDocsUrl(). Get the base URL for the QuPath documentation (independent of version). static final String; getGitHubIssuesUrl(). Get a URL pointing to the main GitHub issues page. static final String; getGitHubRepoUrl(). Get a URL pointing to the main QuPath GitHub repo. static final String; getInstallationUrl(). Get a URL pointing to a page that explains how to install this version of QuPath. static final String; getUserForumUrl(). Get a URL pointing to the main QuPath user forum. static final String; getVersionedDocsUrl(). Get the base URL for the QuPath documentation, specifically for this software version. static final String; getVersionedDocsUrl(String relative). Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). static final String; getYouTubeUrl(). Get a URL pointing to the QuPath YouTube channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Urls; public Urls(). Method Details. getDocsUrl; public static final String getDocsUrl(); Get the base URL for the QuPath documentation (independent of version). Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(); Get the base URL for the QuPath documentation, specifically for this software version. Returns:. getVersionedDocsUrl; public static final String getVersionedDocsUrl(String relative); Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). Parameters:; relative - ; Returns:. getCitationUrl; public static final String getCitationUrl(); Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. Returns:. getInstallationUrl; public static final String getInstallationUrl(); G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html:1877,inherit,inherited,1877,javadoc/docs/qupath/lib/gui/Urls.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/Urls.html,1,['inherit'],['inherited']
Modifiability,"hod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<File> files); Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. Parameters:; files - a collection of jar files for installation. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1708,extend,extends,1708,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,1,['extend'],['extends']
Modifiability,"hod in class qupath.lib.gui.scripting.QPEx. Save detection measurements for the specified image. savedName(StringProperty) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Property to store the saved name; this is useful if the name is required externally. saveImageData(ImageData<T>) - Method in interface qupath.lib.projects.ProjectImageEntry. Save the ImageData for this entry using the default storage location for the project. saveImageMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the current image. saveImageMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the specified image. saveMeasurements(Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the current image for objects of a fixed type. saveMeasurements(ImageData<?>, Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the specified image for objects of a fixed type. savePreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Save the preferences. SaveResourcePaneBuilder<T> - Class in qupath.process.gui.commands.ui. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. SaveResourcePaneBuilder(Class<T>, ObjectExpression<? extends T>) - Constructor for class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Constructor. saveSnapshot(QuPathGUI, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.commands.Commands. Save an image snapshot, prompting the user to select the output file. saveTableModel(PathTableData<?>, File, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Save the data from a table to a text file, using the default delimiter f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:882283,extend,extends,882283,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"hod in class qupath.lib.objects.PathObjectTools. Returns true if a PathObject has a Point ROI. hasROI() - Method in class qupath.lib.objects.PathObject. Returns true if this object has a ROI. hasROI() - Method in class qupath.lib.roi.RoiEditor. Returns true if this editor currently has a ROI. hasServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if there is currently an ImageServer being displayed in this viewer. hasString(String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasSuffix() - Method in class qupath.lib.common.Version. Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. hasUnseenErrors() - Method in class qupath.lib.gui.commands.LogViewerCommand. Boolean binding indicating whether there are any unseen errors. hasUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid upper bound. hasZAndT() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker has Z and T information. hasZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the z-spacing is known in microns. hConcat(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Horizontal concatenation for a Mat. headerText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog header text. height - Variable in class qupath.lib.geom.ImmutableDimension. Height of the ImmutableDimension. height - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; height(double) - Method in class qupath.lib.gui.charts.Charts.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:573596,plugin,plugins,573596,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"hod in class qupath.lib.scripting.QP. Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493587,plugin,plugins,493587,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"hod in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Convert a java.awt.Shape to a JTS Geometry. SharedThreadPoolManager - Class in qupath.lib.gui. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. show() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:957275,plugin,plugins,957275,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1538,inherit,inherited,1538,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,2,['inherit'],['inherited']
Modifiability,"hod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class ChartThresholdPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.charts.ChartThresholdPane. All Implemented Interfaces:; Styleable, EventTarget. public class ChartThresholdPane; extends BorderPane; Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. Property Summary; Properties. Type; Property; Description; DoubleProperty; lineWidth. Line width property used for displaying threshold lines. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:1273,inherit,inherited,1273,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability,"hod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExtensions(boolean) instead. static List<String>; getObjectFileExtensions(boolean includeCompressed). Get a list of known file extensions that may contain objects, optionally including compressed files. static int; getRequestedDataFileVersion(). Get the requested version ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:1285,extend,extends,1285,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['extend'],['extends']
Modifiability,"hod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server); Add a region based on an existing ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html:1229,inherit,inherited,1229,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,1,['inherit'],['inherited']
Modifiability,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2053,adapt,adapt,2053,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,1,['adapt'],['adapt']
Modifiability,"hodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:2509,plugin,pluginClass,2509,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,1,['plugin'],['pluginClass']
Modifiability,"hodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are require",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2073,inherit,inherited,2073,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['inherit'],['inherited']
Modifiability,"hodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2058,inherit,inherited,2058,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['inherit'],['inherited']
Modifiability,"hodsConcrete Methods. Modifier and Type; Method; Description; static Pane; createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName). Create a standard button pane for pixel classifiers, to create, measure and classify objects. static ComboBox<RegionFilter>; createRegionFilterCombo(OverlayOptions options). Create a ComboBox that can be used to select the pixel classification region filter. static Pane; createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName). Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. static boolean; promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String classifierName). Prompt the user to create objects directly from the pixels of an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:1732,inherit,inherited,1732,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['inherit'],['inherited']
Modifiability,"hodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. abstract ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2413,plugin,plugins,2413,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['plugin'],['plugins']
Modifiability,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). static ImageServerBuilder.ServerBuilder<BufferedImage>; getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:2128,inherit,inherited,2128,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['inherit'],['inherited']
Modifiability,"hor:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RefineAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathIntera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:1806,extend,extends,1806,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['extend'],['extends']
Modifiability,"hor:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. Constructor Summary; Constructors. Constructor; Description; DilateAnnotationPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:1801,extend,extends,1801,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['extend'],['extends']
Modifiability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2661,inherit,inherited,2661,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['inherit'],['inherited']
Modifiability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2527,inherit,inherited,2527,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['inherit'],['inherited']
Modifiability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & opera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2501,inherit,inherited,2501,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['inherit'],['inherited']
Modifiability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2512,inherit,inherited,2512,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['inherit'],['inherited']
Modifiability,"hould be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Parameters:; model - . getName; public String getName(); Get a user-read",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3365,inherit,inherited,3365,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,1,['inherit'],['inherited']
Modifiability,"hrows IOException. Throws:; IOException. Package qupath.lib.objects.classes. Class qupath.lib.objects.classes.PathClass; class PathClass extends Object implements Serializable. serialVersionUID:; 1L. Serialization Methods. readResolve; protected Object readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exists.; Partly addresses https://github.com/qupath/qupath/issues/1306 (during standard deserialation,; but not from JSON). Throws:; ObjectStreamException. Serialized Fields. colorRGB; Integer colorRGB. name; String name. parentClass; PathClass parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. cho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7295,extend,extends,7295,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"hy to the specified image plane. copyTableContentsToClipboard(PathTableData<?>, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table and copy it to the clipboard. copyToClipboard(Object) - Static method in class qupath.lib.gui.scripting.QPEx. Try to copy an object to the clipboard. Core() - Constructor for class qupath.opencv.ops.ImageOps.Core;  ; countDescendants(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Count the descendants of a PathObject recursively. CountingDialogCommand - Class in qupath.lib.gui.commands. Command to open up a counting panel to aid with creating Point annotations. CountingDialogCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.CountingDialogCommand. Constructor. countMissing() - Method in class qupath.lib.io.UriUpdater. Get a count of the items flagged as missing. countObjectsWithClass(Collection<? extends PathObject>, PathClass, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Count the number of PathObjects in a collection with a specified class or base class. countProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing any count associated with the text (may be null). countReplacements() - Method in class qupath.lib.io.UriUpdater. Get a count of the number of replacements for missing items. countsTransformProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how counts should be transformed before being; shown in the histogram. cpu() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CPU backend and target, if available. create() - Static method in class qupath.lib.gui.SharedThreadPoolManager. Create a new instance. create() - Static method in class qupath.lib.gui.ToolManager. Create a new instance. create(boolean) - Static method in class qupath.lib.gui.tools.WebViews. Create a new WebView. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:151544,extend,extends,151544,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"hyEventType. A change was made to one or more objects that is more complex than the other changes allow for. changed(ObservableValue<? extends QuPathViewer>, QuPathViewer, QuPathViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SlideLabelView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:91057,extend,extends,91057,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"i.commands.display; Class BrightnessContrastChannelPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastChannelPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastChannelPane; extends BorderPane; A pane responsible for the display and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:1357,inherit,inherited,1357,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"i.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a poi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769618,plugin,plugins,769618,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"i.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:241981,variab,variable,241981,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"i.scripting.DefaultScriptEditor;  ; smartEditingAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; smartStringComparator() - Static method in class qupath.lib.common.GeneralTools. Comparator for smart String sorting. smartStringSort(Collection<T>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection using the Object.toString() method applied to each element. smartStringSort(Collection<T>, Function<T, String>) - Static method in class qupath.lib.common.GeneralTools. Smart-sort a collection after extracting a String representation of each element. SMOOTHED_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SmoothFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to supplement the measurements for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function. SmoothFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Default constructor. smoothImage(BufferedImage) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). smoothMeasurements(List<PathObject>, List<String>, double, String, boolean, boolean) - Static method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin. Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. smoothPoints(List<Point2>) - Static method in class qupath.lib.roi.ShapeSimplifier. Apply a simple 3-point moving average to a list of points. SNAPSHOT_VIEWER_CONTENT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SNAPSHOT_WINDOW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; SNAPSHOT_WINDOW_CONTENT - Variable in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:983878,plugin,plugins,983878,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"i.viewer.QuPathViewer. Return to processing all repainting requests. resetPathClass() - Method in class qupath.lib.objects.PathObject. Reset the classification (i.e. resetPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Reset the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864510,plugin,plugins,864510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"iable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassNa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673116,extend,extend,673116,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extend']
Modifiability,"iable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; gridScaleMicronsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. gridSpacingX - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; gridSpacingXProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Horizontal spacing between lines for any counting grid. gridSpacingY - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; gridSpacingYProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Vertical spacing between lines for any counting grid. gridStartXProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Starting x coordinate for any counting grid (usually 0). gridStartYProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Starting y coordinate for any counting grid (usually 0). GROOVY - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Groovy. GROOVY - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; GroovyAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Groovy. GroovyAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.GroovyAutoCompletor. Constructor. GroovyCV - Class in qupath.opencv.tools. Category class for enhanced Groovy scripting with OpenCV. GroovyCV() - Constructor for class qupath.opencv.tools.GroovyCV;  ; GroovyLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of the Groovy programming language in QuPath. GroovyLanguage() - Constructor for class qupath.lib.gui.scripting.languages.GroovyLanguage. Constructor for Groovy Language. GroovyStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools - Class in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:562180,variab,variable,562180,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ialogs; Enum Class Dialogs.DialogButton. java.lang.Object; java.lang.Enum<Dialogs.DialogButton>; qupath.lib.gui.dialogs.Dialogs.DialogButton. All Implemented Interfaces:; Serializable, Comparable<Dialogs.DialogButton>, Constable. Enclosing class:; Dialogs. public static enum Dialogs.DialogButton; extends Enum<Dialogs.DialogButton>; Possible buttons pressed in a yes/no/cancel dialog. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CANCEL. ""Cancel"" option. NO. ""No"" option. YES. ""Yes"" option. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Dialogs.DialogButton; valueOf(String name). Returns the enum constant of this class with the specified name. static Dialogs.DialogButton[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. YES; public static final Dialogs.DialogButton YES; ""Yes"" option. NO; public static final Dialogs.DialogButton NO; ""No"" option. CANCEL; public static final Dialogs.DialogButton CANCEL; ""Cancel"" option. Method Details. values; public static Dialogs.DialogButton[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Dialogs.DialogButton valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html:1383,inherit,inherited,1383,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.DialogButton.html,1,['inherit'],['inherited']
Modifiability,"ib.algorithms.LocalBinaryPatternsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class LocalBinaryPatternsPlugin; extends AbstractInteractivePlugin<BufferedImage>; Calculate local binary pattern features.; ; TODO: This plugin has not been extensively tested and may be of limited use. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatternsPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:1543,plugin,plugin,1543,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['plugin'],['plugin']
Modifiability,"ib.analysis.stats.survival. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData(String) - Constructor for class qupath.lib.analysis.stats.survival.KaplanMeierData. Create a new KaplanMeierData object with the specified display name. KaplanMeierData(String, Collection<KaplanMeierData.KaplanMeierEvent>) - Constructor for class qupath.lib.analysis.stats.survival.KaplanMeierData. Create a new KaplanMeierData object with the specified display name and events. KaplanMeierData.KaplanMeierEvent - Class in qupath.lib.analysis.stats.survival. Simple class to store event time and censored flag. keepDisplaySettings - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; keepDisplaySettingsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). KEY_CASE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:641846,variab,variable,641846,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; runTasks(Collection<? extends Runnable>) - Method in interface qupath.lib.plugins.TaskRunner. Pass a c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:878532,plugin,plugins,878532,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ib.gui.actions.menus.ViewMenuActions.MultiviewGridActions;  . N. name(String) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the image name. name(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a series name. name(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. User-friendly name to use with this model. NAME_NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Negative"" staining intensity. NAME_OBJECT_ID - Static variable in class qupath.lib.gui.measure.ObservableMeasurementTableData. The name used for the Object ID column. NAME_ONE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""1+"" staining intensity (i.e. NAME_POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Positive"" staining intensity. NAME_THREE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""3+"" staining intensity (i.e. NAME_TWO_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""2+"" staining intensity (i.e. nameObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object names based upon pre-computed clusters. nameObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. nameProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the String property of this ViewTracker. nameProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; nameProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the name of the tool. nanose",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:706228,variab,variable,706228,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ib.gui.scripting.richtextfx.CodeAreaControl;  ; selectedTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently selected in the editor control. selectedTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; selectedTool() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; selectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property containing the currently-selected PathTool. SELECTION_MODE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SELECTION_MODE - Variable in class qupath.lib.gui.ToolManager;  ; selectionModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Convert drawing tools to select objects, rather than creating new objects. selectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are selected. selectObjects(Collection<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set all objects in a collection to be selected, without any being chosen as the main object. selectObjects(Collection<? extends PathObject>, PathObject) - Static method in class qupath.lib.scripting.QP. Set all objects in a collection to be selected, including a specified main selected object. selectObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the specified hierarchy. selectObjects(PathObject...) - Static method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:898419,extend,extends,898419,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ib.images.servers.openslide.OpenslideImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getOutputChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. getOutputChannelType() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the requested output channel type. getOutputClasses() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the classifications for the output. getOutputLayerNames(Net) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLayers(Net, DnnShape...) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:467041,layers,layers,467041,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"ib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed. fireHierarchyChangedEvent(Object, PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. fireHierarchyUpdate() - Static method in class qupath.lib.scripting.QP. Trigger an update for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonTo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:309627,extend,extends,309627,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects were removed. createObjects(Raster, int, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from one band of a raster containing integer labels. createObjects(Mat, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.opencv.tools.OpenCVTools. Create objects by tracing contours in a labelled image. createObjects(SimpleImage, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from a labelled image. createObjects(ROI, Function<ROI, PathObject>) - Method in class qupath.lib.objects.utils.Tiler. Create a list of PathObject tiles from the input. createObjectsChangedEvent(Object, PathObjectHierarchy, PathObjectHierarchyEvent.HierarchyEventType, Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. createObjectsFromPixelClassifier(ImageServer<BufferedImage>, Map<Integer, PathClass>, ROI, Function<ROI, ? extends PathObject>, double, double, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects based upon an ImageServer that provides classification or probability output. createObjectsFromPredictions(ImageServer<BufferedImage>, PathObjectHierarchy, Collection<PathObject>, Function<ROI, ? extends PathObject>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. createObjectsFromROIs(ImagePlus, Collection<? extends Roi>, double, boolean, b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:204162,extend,extends,204162,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcessor. Parameters.Builder<S,T> - Class in qupath.lib.experimental.pixels. Builder class for Parameters. parametersInitialized - Variable in class qupath.imagej.detect.cells.WatershedCellDetection;  ; params - Variable in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parent(Window) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the parent window. parent(PathObject) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:745247,plugin,plugins,745247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3051,plugin,plugin,3051,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"ib.plugins.AbstractTaskRunner. All Implemented Interfaces:; TaskRunner. Direct Known Subclasses:; CommandLineTaskRunner, TaskRunnerFX. public abstract class AbstractTaskRunner; extends Object; implements TaskRunner; Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. running through a GUI, or from a command line only. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractTaskRunner(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:1401,plugin,plugin,1401,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['plugin'],['plugin']
Modifiability,ib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java. JAVA_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Java-like import statements. JAVA_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that extracts a token used to determine Java completions. JavadocViewer - Class in qupath.lib.gui. Command to show javadocs in a WebView. JPEG - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. JPEG compression (only for single channel or RGB 8-bit images). JpegWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write JPEG images using ImageIO. JpegWriter() - Constructor for class qupath.lib.images.writers.JpegWriter;  ; JSON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for JSON. JSON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; JsonImageServerBuilder - Class in qupath.lib.images.servers. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonImageServerBuilder() - Constructor for class qupath.lib.images.servers.Js,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:639214,variab,variable,639214,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,ib.roi. Class qupath.lib.roi.AreaROI; class AreaROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.EllipseROI; class EllipseROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.GeometryROI; class GeometryROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. writeReplace; private Object writeReplace(). Serialized Fields. checkValid; boolean checkValid. geometry; Geometry geometry. Class qupath.lib.roi.LineROI; class LineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. x; double x. x2; double x2. y; double y. y2; double y2. Class qupath.lib.roi.PointsROI; class PointsROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. points; List<Point2> points. Class qupath.lib.roi.PolygonROI; class PolygonROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:11952,extend,extends,11952,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"ibrary used (Openslide, Bioformats...). static ImageServerBuilder.ServerBuilder<BufferedImage>; getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may conta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:2606,inherit,inherited,2606,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['inherit'],['inherited']
Modifiability,"ic ImageServer<BufferedImage>; createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer). Create an ImageServer that converts the image to RGB using the specified ImageRenderer. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected boolean; hasAlpha();  ; protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:2752,inherit,inherited,2752,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['inherit'],['inherited']
Modifiability,"ic class ; PreferencePane.ExtensionPreferences;  ; static class ; PreferencePane.GeneralPreferences;  ; static class ; PreferencePane.InputOutputPreferences;  ; static class ; PreferencePane.LocalePreferences;  ; static class ; PreferencePane.MeasurementPreferences;  ; static class ; PreferencePane.ObjectPreferences;  ; static class ; PreferencePane.ScriptingPreferences;  ; static class ; PreferencePane.UndoRedoPreferences;  ; static class ; PreferencePane.ViewerPreferences;  . Constructor Summary; Constructors. Constructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:1787,extend,extends,1787,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['extend'],['extends']
Modifiability,"ic enum ; ParallelTileObject.Status. Current processing status for the tile. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ParallelTileObject.Status; getStatus(). Get the current status (pending, processing or done). boolean; isComplete(). Returns true if setComplete() has been called. boolean; isProcessing(). Returns true if setIsProcessing(true) has recently been called. void; resolveOverlaps(). Request that the tile object attempts to resolve overlaps with its neighboring tiles. void; setComplete(boolean wasCancelled). Notify the tile that its processing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the object if it is currently being processed. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataVa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:2174,inherit,inherited,2174,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,1,['inherit'],['inherited']
Modifiability,"ich the specified measurement has a value above the threshold. above(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above the threshold. aboveEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value above or equal to the threshold. aboveEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value above or equal to the threshold. abs(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the absolute value of all elements in an array. AbstractDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractDetectionPlugin;  ; AbstractDnnModel<T> - Class in qupath.opencv.dnn. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1403,plugin,plugin,1403,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"ichScriptEditorExtension. java.lang.Object; qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension. All Implemented Interfaces:; QuPathExtension. public class RichScriptEditorExtension; extends Object; implements QuPathExtension; QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:1384,inherit,inherited,1384,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,1,['inherit'],['inherited']
Modifiability,"ict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region); Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. Parameters:; cls - ; region - ; Returns:. fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - . fireObjectMeasurementsChangedEvent; public void fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating object measurements have changed. Parameters:; source - ; pathObjects - ; isChanging - . fireObjectClassificationsChangedEvent; public void fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating object classifications have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects); Fire a hierarchy update indicating objects have changed. Parameters:; source - ; pathObjects - . fireObjectsChangedEvent; public void fireObjectsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects,; boolean isChanging); Fire a hierarchy update indicating objects have changed, and may still be changing. Parameters:; source - ; pathObjects - ; isChanging - is true, listeners may choose not to respond until an event",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:19846,extend,extends,19846,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"id(). Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. boolean; hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region). Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. boolean; insertPathObject(PathObject pathObject,; boolean fireChangeEvents). Insert an object into the hierarchy. boolean; insertPathObjects(Collection<? extends PathObject> pathObjects). Insert a collection of objects into the hierarchy, firing a change event on completion. boolean; isEmpty(). Check if the hierarchy is empty (i.e. int; nObjects(). Number of objects in the hierarchy, excluding the root. void; removeListener(PathObjectHierarchyListener listener). Remove a hierarchy change listener. boolean; removeObject(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, firing a remove event. void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove a collection of objects, firing a single 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. boolean; removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, without firing a remove event. void; removePathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). void; resolveHierarchy(). Attempt to resolve the parent-child relationships between all objects within the hierarchy. void; setHierarchy(PathObjectHierarchy hierarchy). Set the contents of this hierarchy to be the same as that of another hierarchy. void; setTMAGrid(TMAGrid tmaGrid). Set the tma grid for this hierarchy. String; toString();  ; void; updateObject(PathObject pathObject,; boolean isChanging). Update an object that is already in the hierarc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:7178,extend,extends,7178,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,1,['extend'],['extends']
Modifiability,"id; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2293,inherit,inherited,2293,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['inherit'],['inherited']
Modifiability,"id; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3524,inherit,inherited,3524,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['inherit'],['inherited']
Modifiability,"id; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3195,inherit,inherited,3195,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['inherit'],['inherited']
Modifiability,"id; writeTiles(String dirOutput). Export the image tiles to the specified directory. TileExporter; zRange(int minZ,; int maxZ). Define the range of Z-slices to process. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TileExporter; public TileExporter(ImageData<BufferedImage> imageData); Create a builder to export tiles. Parameters:; imageData - . Method Details. parentObjects; public TileExporter parentObjects(Predicate<PathObject> filter); Specify a filter to extract parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; filter - ; Returns:; this exporter; See Also:. parentObjects(Collection); useROIBounds(boolean); includePartialTiles(boolean). parentObjects; public TileExporter parentObjects(Collection<? extends PathObject> parentObjects); Specify parent objects to define tiles.; Tiles are either generated based upon the ROI centroid (in which case the specified tile size is respected) ; or the ROI bounding box (with the specified tile size ignored). Parameters:; parentObjects - ; Returns:; this exporter; See Also:. parentObjects(Predicate); useROIBounds(boolean); includePartialTiles(boolean). useROIBounds; public TileExporter useROIBounds(boolean fullROIs); Optionally use the full ROI for parent objects, rather than tileSize(int, int). Parameters:; fullROIs - if true, use the bounding box of the ROI; Returns:; this exporter; See Also:. parentObjects(Collection); parentObjects(Predicate). fullImageTile; public TileExporter fullImageTile(); Specify that a single tile should be generated corresponding to the full image. Returns:; this exporter. tileSize; public TileExporter tileSize(int tileSize); Define the tile size in pixel units at the export resolution. Parameters:; tileSize - ; Returns:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:4772,extend,extends,4772,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['extend'],['extends']
Modifiability,"idDisplaySize>; qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize. All Implemented Interfaces:; Serializable, Comparable<PathObjectGridView.GridDisplaySize>, Constable. Enclosing class:; PathObjectGridView. public static enum PathObjectGridView.GridDisplaySize; extends Enum<PathObjectGridView.GridDisplaySize>. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LARGE;  ; MEDIUM;  ; SMALL;  ; TINY;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getSize();  ; String; toString();  ; static PathObjectGridView.GridDisplaySize; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectGridView.GridDisplaySize[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TINY; public static final PathObjectGridView.GridDisplaySize TINY. SMALL; public static final PathObjectGridView.GridDisplaySize SMALL. MEDIUM; public static final PathObjectGridView.GridDisplaySize MEDIUM. LARGE; public static final PathObjectGridView.GridDisplaySize LARGE. Method Details. values; public static PathObjectGridView.GridDisplaySize[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathObjectGridView.GridDisplaySize valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html:1507,inherit,inherited,1507,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.GridDisplaySize.html,1,['inherit'],['inherited']
Modifiability,"idLayout(). static GridPane; createColumnGrid(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). static GridPane; createColumnGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; where controls have their widths bound to their parent. static GridPane; createRowGrid(Node... nodes). Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). static GridPane; createRowGridControls(Node... nodes). Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. static Collection<Node>; getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive). Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively. static <T extends Node>Collection<T>; getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive). Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. static void; setFillHeight(Boolean doFill,; Node... nodes). Deprecated.; Set the GridPane.setFillHeight(Node, Boolean) property for specified nodes. static void; setFillWidth(Boolean doFill,; Node... nodes). Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. static void; setHGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. static void; setMaxHeight(double height,; Region... regions). Deprecated.; Set the max height property for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:2063,extend,extends,2063,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['extend'],['extends']
Modifiability,"idden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Overrides:; runPlugin in class AbstractPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:5337,plugin,plugin,5337,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['plugin'],['plugin']
Modifiability,"ide of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.BarChartBuilder; parent(Window parent). Set the parent window. Charts.BarChartBuilder; series(String name,; String[] x,; double[] y). Create a bar chart using arrays of String values and associated numeric values. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; List<T> extra). Create a bar chart using collections of String values and associated numeric values, with an associated custom object. <T> Charts.BarChartBuilder; series(String name,; String[] x,; double[] y,; T[] extra). Create a bar chart using collections String values and associated numeric values, with an associated custom object. <T extends Number>Charts.BarChartBuilder; series(String name,; Collection<? extends String> x,; Collection<T> y). Create a bar chart using collections of numeric values. <T> Charts.BarChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun). Plot values extracted from objects within a specified collection. Charts.BarChartBuilder; series(String name,; Collection<XYChart.Data<String,Number>> data). Create a bar chart from existing data plots. <T extends Number>Charts.BarChartBuilder; series(String name,; Map<String,T> data). Create a bar chart using a map of String values and associated numeric values. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.BarChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the cha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:3083,extend,extends,3083,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"ide the bounds of an image. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. static List<PathObject>; getAncestorList(PathObject pathObject). Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). static TMACoreObject; getAncestorTMACore(PathObject pathObject). Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. static <T extends PathObject>List<T>; getAreaObjects(Collection<T> pathObjects). Get a list of objects with area ROIs from a collection of objects. static Set<String>; getAvailableFeatures(Collection<? extends PathObject> pathObjects). Get a set containing the names of all measurements found in the measurement lists of a specified object collection. static Collection<PathObject>; getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all descendant objects with a specified type. static List<PathObject>; getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent). Get all descendant objects as a flattened list. static <T extends PathObject>List<T>; getLineObjects(Collection<T> pathObjects). Get a list of objects with line ROIs from a collection of objects. static ROI; getNucleusOrMainROI(PathObject pathObject). Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. static ROI; getNucleusROI(PathObject pathObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:5043,extend,extends,5043,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:2219,extend,extends,2219,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,4,"['extend', 'inherit']","['extends', 'inherited']"
Modifiability,"ids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeaturesPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2017,plugin,plugin,2017,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"ied plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read-only' mode. Returns:; See Also:. isReadOnly(); setReadOnly(boolean). setReadOnly; public void setReadOnly(boolean readOnly); Specify whether QuPath should be in 'read-only' mode. Parameters:; readOnly - ; See Also:. isReadOnly(). getScriptEditor; public ScriptEditor getScriptEditor(); Get a reference to the current ScriptEditor (wh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27781,extend,extends,27781,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,3,"['extend', 'plugin']","['extends', 'plugin', 'pluginClass']"
Modifiability,"ield Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2067,plugin,plugins,2067,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['plugin'],['plugins']
Modifiability,"ield; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PropertiesLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage. public class PropertiesLanguage; extends ScriptLanguage; Class for the representation of properties and config files in QuPath.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PropertiesLanguage(). Constructor for a Java properties as a script editor language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PropertiesLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PropertiesLanguage; public PropertiesLanguage(); Constructor for a Java properties as a script editor language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PropertiesLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; au",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html:1172,inherit,inherited,1172,javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PropertiesLanguage.html,1,['inherit'],['inherited']
Modifiability,"ield; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat mat). Prediction function that takes a single input and gives a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default input layer name. This should be used when the input layer name is known or ; unimportant (e.g. the common case of a single input). See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default output layer name. This should be used when the output layer name is known or ; unimportant (e.g. the common case of a single output). See Also:. Constant Field Values. Method Details. predict; Map<String,Mat> predict(Map<String,Mat> blobs); Prediction function that can take multiple inputs. Parameters:; blobs - ; Returns:. predict; default Mat predict(Mat mat); Prediction function that takes a single input and gives a single output. Parameters:; mat - ; Returns:. batchPredict; default List<Mat> batchPredict(List<? extends Mat> mats); Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs.; Each input is expected to have a single output. Parameters:; mats - ; Returns:. close; default void close(); throws Exception; Close this model if it will not be needed again.; Subclasses that require cleanup may override this.; The default implementation does nothing. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:3110,extend,extends,3110,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,1,['extend'],['extends']
Modifiability,"ier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2105,plugin,plugins,2105,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,1,['plugin'],['plugins']
Modifiability,"ier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2090,plugin,plugins,2090,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ier and Type; Method; Description; static ImageServer<BufferedImage>; createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels). Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> chann",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:2145,inherit,inherited,2145,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['inherit'],['inherited']
Modifiability,"ier(PathObject, PathClass, boolean, double) - Constructor for class qupath.lib.objects.classes.Reclassifier. Helper class to store an object prior to reclassifying it, including a classification probability. recomputeBounds() - Method in class qupath.lib.roi.PointsROI;  ; recordingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the recording property of this ViewTracker. RECTANGLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Rectangle drawing tool. RECTANGLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; RECTANGLE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; RectangleROI - Class in qupath.lib.roi. ROI representing a square or rectangle (unrotated). red(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit red value from a packed RGB value. Red - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel only. RED - Static variable in class qupath.lib.common.ColorTools. Packed int representing red. RED - Static variable in class qupath.lib.images.servers.ImageChannel. Default red channel for RGB images. Red_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel optical densities. redChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). redo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; redo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request redo. redo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; REDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; redoAction - Variable in class qupath.lib.gu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:831898,variab,variable,831898,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7974,extend,extends,7974,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"ierarchy. Get all tile objects in the hierarchy. getTileObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current tile objects. getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV. Returns zero - indicating no overlap... getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getTileOverlap(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:534214,plugin,plugins,534214,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Num",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7993,plugin,plugins,7993,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"ierarchy hierarchy,; double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSpecifiedAreasByLines; public static boolean splitSpecifiedAreasByLines(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects,; double thickness,; boolean removeLines); Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; pathObjects - the objects to split; usually annotations, but they may be any object except for TMA cores; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). duplicateSelectedAnnotations; public static boolean duplicateSelectedAnnotations(); Duplicate the selected annotations in the current hierarchy. Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:121726,extend,extends,121726,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"iew(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor). Create a grid view for a custom object extractor. static PathObjectGridView; createTmaCoreView(QuPathGUI qupath). Create a grid view for TMA core objects. Stage; getStage(). Get the stage used to show the grid view. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. ObjectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:2648,extend,extends,2648,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,1,['extend'],['extends']
Modifiability,"iewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the fol",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:259845,variab,variable,259845,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"iewing tiles are cached, this makes it possible to find out; what the tile boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space).; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - The ImageServer from which the tiles would be requested; clipShape - The requested shape, defined in the full-resolution image space; downsampleFactor - The downsampleFactor determining the resolution at which tiles should be requested; zPosition - The zPosition from which to request tiles; tPosi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:1672,inherit,inherited,1672,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,1,['inherit'],['inherited']
Modifiability,"ified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; selectObjectsByClass(Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<?",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33420,extend,extends,33420,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:2075,inherit,inherited,2075,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['inherit'],['inherited']
Modifiability,"ified. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DoGSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2167,extend,extends,2167,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['extend'],['extends']
Modifiability,"ifiers.OpenCVStatModel for a specific class of StatModel. createStringMeasurement(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Deprecated. createStructureChangeEvent(Object, PathObjectHierarchy, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating that the hierarchy structure has been changed. createSubProject(String, Collection<ProjectImageEntry<T>>) - Method in interface qupath.lib.projects.Project. Create a sub-project that provides a view on the specified entries. createSubTypeAdapterFactory(Class<T>, String) - Static method in class qupath.lib.io.GsonTools. Create a TypeAdapterFactory that is suitable for handling class hierarchies. createTaskRunner() - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). createTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createTaskRunner(int) - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the specified number of threads. createTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance with the specified number of threads. createThreadFactory(String, boolean) - Static method in class qupath.lib.common.ThreadTools. Create a named thread factory with Thread.NORM_PRIORITY. createThreadFactory(String, boolean, int) - Static method in class qupath.lib.common.ThreadTools. Create a named thread factory with a specified priority. createThresholdClassifier(PixelCalibration, int, double, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a new PixelClassifier that applies a threshold to one channel of an image. createThresholdClassifier(PixelCalibration, Map<Integer, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:227197,plugin,plugins,227197,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105037,extend,extends,105037,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred width of the chart. Charts.ScatterChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.ScatterChartBuilder; xAxisMax(double upperBound). Set the upper bound for the x-axis. Charts.ScatterChartBuilder; xAxisMin(double lowerBound). Set the lower bound for the x-axis. Charts.ScatterChartBuilder; xAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the x-axis. Charts.ScatterChartBuilder; xLabel(String label). Specify the x-axis label. Charts.ScatterChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.ScatterChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.ScatterChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.ScatterChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. limitDatapoints; public Charts.ScatterChartBuilder limitDatapoints(int max); Choose the maximum number of supported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:5482,inherit,inherited,5482,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['inherit'],['inherited']
Modifiability,"ify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. classifyDetectionsByCentroid(String) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(PixelClassifier) - Static method in class qupath.lib.scripting.QP. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. classifyDetectionsByCentroid(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. ClassifyMenuActions - Class in qupath.lib.gui.actions.menus;  ; ClassifyMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; classifyObjects(ImageData<BufferedImage>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; classifyObjects(ImageData<T>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:103424,extend,extends,103424,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcessor. Parameters.Builder<S,T> - Class in qupath.lib.experimental.pixels. Builder class for Parameters. parametersInitialized - Variable in class qupath.imagej.detect.cells.WatershedCellDetection;  ; params - Variable in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parent(Window) - Method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744938,plugin,plugins,744938,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ify the image name. ImageServerMetadata.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel sizes, in microns. ImageServerMetadata.Builder; pixelType(PixelType pixelType). Specify the bit-depth of the image. ImageServerMetadata.Builder; preferredTileSize(int tileWidth,; int tileHeight). Specify the preferred tile height and width. ImageServerMetadata.Builder; rgb(boolean isRGB). Specify that the image stores pixels in (A)RGB form. ImageServerMetadata.Builder; sizeT(int sizeT). Specify the number of time points. ImageServerMetadata.Builder; sizeZ(int sizeZ). Specify the number of z-slices. ImageServerMetadata.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify the time unit and individual time points. ImageServerMetadata.Builder; width(int width). Specify the full-resolution image width. ImageServerMetadata.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify the spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServerMetadata metadata); Builder for a new ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden.; ; The existing metadata will be duplicated, therefore later changes in one metadata object will not be ; reflected in the other. Parameters:; metadata - . Builder; public Builder(); Minimal builder for a new ImageServerMetadata; further properties must be set. Builder; public Builder(Class<? extends ImageServer<?>> serverClass,; String path,; int width,; int height); Builder for a new ImageServerMetadata; further properties must be set. Parameters:; serverClass - ; path - ; width - ; height - . Method Details. width; public ImageServerMetadata.Builder width(int width); Specify the full-resolution image width. Parameters:; width - ; Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:3445,inherit,inherited,3445,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,1,['inherit'],['inherited']
Modifiability,"ify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; img - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; map - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options); Create an empty overlay without any images to display. Parameters:; options - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img); Create an overlay to display one specified image region. Parameters:; options - ; region - ; img - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions); Create an overlay to display multiple image regions. Parameters:; options - ; regions - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions); Create an overlay to display multiple image regions. Parameters:; viewer - ; options - ; regions - . Method Details. addAllRegions; public void addAllRegions(ImageServer<BufferedImage> server,; int level); throws IOException; Add all regions for a specific level of an ImageServer.; Note that this results in all regions being read immediately.; Therefore it should only be used for 'small' images that can be held in main memory. Parameters:; server - the server whose tiles should be drawn on the overlay; level - the level from which to request regions; for the highest available resolution, use 0; Throws:; IOException. setColorModel; public void setColorModel(ColorModel colorModel); Optionally set a custom ColorModel.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:4590,extend,extends,4590,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['extend'],['extends']
Modifiability,"igation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorDeconvolutionStains.DefaultColorDeconvolutionStains. java.lang.Object; java.lang.Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. All Implemented Interfaces:; Serializable, Comparable<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>, Constable. Enclosing class:; ColorDeconvolutionStains. public static enum ColorDeconvolutionStains.DefaultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. H_E; public static final ColorDeconvolutionStains.DefaultColorDeconvolutio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html:1129,inherit,inherited,1129,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,1,['inherit'],['inherited']
Modifiability,"ighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3459,plugin,plugin,3459,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"ij.plugin.PlugIn); qupath.lib.gui.QuPathGUI; qupath.lib.gui.viewer.tools.QuPathPenManager; qupath.lib.gui.localization.QuPathResources; qupath.lib.gui.prefs.QuPathStyleManager; qupath.lib.gui.viewer.QuPathViewer (implements qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener, qupath.lib.gui.images.stores.TileListener<T>). qupath.lib.gui.viewer.QuPathViewerPlus. qupath.lib.objects.classes.Reclassifier; qupath.lib.roi.RectangleROI (implements java.io.Serializable); qupath.lib.gui.images.servers.RenderedImageServer.Builder; qupath.lib.projects.ResourceManager; qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.roi.RoiEditor; qupath.imagej.processing.RoiLabeling; qupath.lib.roi.ROIs; qupath.lib.roi.RoiTools; qupath.lib.analysis.stats.RunningStatistics; qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep (implements qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.process.gui.commands.ui.SaveResourcePaneBuilder<T>; qupath.lib.scripting.ScriptAttributes; qupath.lib.scripting.languages.ScriptLanguage. qupath.lib.gui.scripting.languages.CssLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage (implements qupath.lib.scripting.languages.ExecutableLanguage). qupath.lib.gui.scripting.languages.GroovyLanguage (implements qupath.lib.scripting.languages.ExecutableLanguage). qupath.lib.gui.scripting.languages.JsonLanguage; qupath.lib.gui.scripting.languages.MarkdownLanguage (implements qupath.lib.gui.scripting.languages.HtmlRenderer); qupath.lib.gui.scripting.languages.PlainLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage; qupath.lib.gui.scripting.languages.XmlLanguage; qupath.lib.gui.scripting.languages.YamlLanguage. qupath.lib.gui.scripting.languages.ScriptLanguageProvider; qupath.lib.scripting.ScriptParameters; qupath.lib.scripting.ScriptParameters.Builder; qupath.lib.gui.scripting",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:31982,plugin,plugins,31982,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ilableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusOrMainROI(PathObject). getDescendantObjects; public static Collection<PathObject> getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all descendant objects with a specified type. Parameters:; pathObject - ; pathObjects - ; cls - ; Returns:. splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> pathObjects); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. Parameters:; pathObjects - an input collection of objects, containing objects with different ROI types; Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection, Collection). splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects); Given a co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:32330,extend,extends,32330,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"ild a PixelClassifier for a density map using the current parameters and the specified ImageData. DensityMaps.DensityMapParameters; buildParameters(). Build a DensityMaps.DensityMapParameters object containing the main density map parameters. ImageServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData). Build an ImageServer representing this density map. DensityMaps.DensityMapBuilder; colorModel(ColorModels.ColorModelBuilder colorModelBuilder). Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData). DensityMaps.DensityMapBuilder; pixelSize(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:2001,inherit,inherited,2001,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,1,['inherit'],['inherited']
Modifiability,"ilder. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(Path path); throws IOException; Load a DensityMaps.DensityMapBuilder from the specified path. Parameters:; path - ; Returns:; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold a single channel of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; channel - channel to threshold; this is also used to determine the class name for the created annotations; threshold - threshold value; options - additional objects when creating the annotations; Returns:; true if changes were made, false otherwise; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold one or more channels of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; thresholds - map between channel numbers and thresholds; pathClassName - name of the classification to apply to the generated annotations; options - additional options to customize how annotations are created; Returns:; true if changes were made, false otherwise; Throws:; IOException. findHotspots; public static void findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; hierarchy - hierarchy used to obtain selected objects and add h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:5338,extend,extends,5338,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['extend'],['extends']
Modifiability,"ilders). protected ColorModel; getColorModel();  ; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:2145,inherit,inherited,2145,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['inherit'],['inherited']
Modifiability,"ileAlignment>; Enum representing the possible alignments for tiles.; A tile alignment of TOP_LEFT indicates that tiling should begin at the top left bounding box,; and if cropping is required then this will occur at the right and bottom.; An alignment of CENTER indicates that tiles may be cropped on all sides. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOTTOM_CENTER;  ; BOTTOM_LEFT;  ; BOTTOM_RIGHT;  ; CENTER;  ; CENTER_LEFT;  ; CENTER_RIGHT;  ; TOP_CENTER;  ; TOP_LEFT;  ; TOP_RIGHT;  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Tiler.TileAlignment; valueOf(String name). Returns the enum constant of this class with the specified name. static Tiler.TileAlignment[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TOP_LEFT; public static final Tiler.TileAlignment TOP_LEFT. TOP_CENTER; public static final Tiler.TileAlignment TOP_CENTER. TOP_RIGHT; public static final Tiler.TileAlignment TOP_RIGHT. CENTER_LEFT; public static final Tiler.TileAlignment CENTER_LEFT. CENTER; public static final Tiler.TileAlignment CENTER. CENTER_RIGHT; public static final Tiler.TileAlignment CENTER_RIGHT. BOTTOM_LEFT; public static final Tiler.TileAlignment BOTTOM_LEFT. BOTTOM_CENTER; public static final Tiler.TileAlignment BOTTOM_CENTER. BOTTOM_RIGHT; public static final Tiler.TileAlignment BOTTOM_RIGHT. Method Details. values; public static Tiler.TileAlignment[] values(); Returns an array containing the constants of this enum class, in; the order they are de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html:1697,inherit,inherited,1697,javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/Tiler.TileAlignment.html,1,['inherit'],['inherited']
Modifiability,"ileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected int getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Specified by:; getTileOverlap in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:5792,plugin,plugin,5792,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,2,['plugin'],['plugin']
Modifiability,"ilerPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:1889,plugin,plugins,1889,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugins']
Modifiability,"ill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageRenderer that controls conversion to RGB. rendererProperty() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageRenderer property used with this overlay. reorderRGB(String) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rearrange the channel order of an RGB image. repaint() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer is repainted. repaintAllViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Request tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:852613,plugin,plugins,852613,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"illHeight(Node, Boolean) property for specified nodes. setFillWidth(Boolean, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. setFontSize(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the requested font size for the 'Show names' option. setGamma(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the gamma value for this viewer. setGridLines(GridLines) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the GridLines object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:927536,plugin,plugins,927536,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"image server to swap the red and blue channels of an RGB image. RearrangeRGBImageServer(ImageServer<BufferedImage>, String) - Constructor for class qupath.lib.images.servers.RearrangeRGBImageServer;  ; RECENT_COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; Reclassifier - Class in qupath.lib.objects.classes. Helper class when classifying PathObjects. Reclassifier(PathObject, PathClass, boolean) - Constructor for class qupath.lib.objects.classes.Reclassifier. Helper class to store an object prior to reclassifying it. Reclassifier(PathObject, PathClass, boolean, double) - Constructor for class qupath.lib.objects.classes.Reclassifier. Helper class to store an object prior to reclassifying it, including a classification probability. recomputeBounds() - Method in class qupath.lib.roi.PointsROI;  ; recordingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the recording property of this ViewTracker. RECTANGLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Rectangle drawing tool. RECTANGLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; RECTANGLE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; RectangleROI - Class in qupath.lib.roi. ROI representing a square or rectangle (unrotated). red(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit red value from a packed RGB value. Red - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel only. RED - Static variable in class qupath.lib.common.ColorTools. Packed int representing red. RED - Static variable in class qupath.lib.images.servers.ImageChannel. Default red channel for RGB images. Red_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMeth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:831329,variab,variable,831329,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2239,plugin,plugins,2239,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,1,['plugin'],['plugins']
Modifiability,"imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2079,plugin,plugins,2079,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['plugin'],['plugins']
Modifiability,"images.servers.ServerTools. Get the default shortened server name given the server's path. getDefaultStaticImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default static imports that should be included with the script, where possible. getDefaultThumbnail(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDefaultThumbnail(int, int) - Method in interface qupath.lib.images.servers.ImageServer. Get the default thumbnail for a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:375480,plugin,plugins,375480,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"imating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Add measurements to specified objects. addMeasurements(Collection<? extends PathObject>, PixelClassificationMeasurementManager, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to specified objects from a PixelClassificationMeasurementManager. addMeasurementsToSelectedObjects(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to selected objects based upon the output of a PixelClassifier. addMenuItems(List<MenuItem>, Object...) - Static method in class qupath.lib.gui.tools.MenuTools. Add menu items to the specified list. addMenuItems(Menu, Object...) - Static method in class qupath.lib.gui.tools.MenuTools. Add menu items to an existing menu. addNewScript(String, ScriptLanguage, boolean) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Create a new script in the specified language. addNodeMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Add Delaunay measurements to each pathObject. addNoise(Mat, double, double) -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:20884,extend,extends,20884,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453600,plugin,plugins,453600,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a nucleus ROI is stored for this cell. hasObjectsForRegion(Class<? extends PathObject>, ImageRegion) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. hasPixelSizeMicrons() - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:571444,plugin,plugins,571444,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"in class qupath.opencv.CellCountsCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.WatershedNucleiCV;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyram",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:372743,plugin,plugins,372743,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.PathObjectFilter. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.utils.Tiler.TileAlignment. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.plugins.ParallelTileObject.Status. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.roi.interfaces.ROI.RoiType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.roi.RoiTools.CombineOp. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.tools.LocalNormalization.NormalizationType. Returns an array containing the constants of this enum class, i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1093700,plugin,plugins,1093700,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"in is a residual. boolean; isH_E(). Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. static boolean; isHematoxylin(StainVector stain). Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). static ColorDeconvolutionStains; makeDefaultColorDeconvolutionStains(ColorDeconvolutionStains.DefaultColorDeconvolutionStains stains). Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). static ColorDeconvolutionStains; parseColorDeconvolutionStainsArg(String s). Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. static double[]; parseStainValues(Locale locale,; String s). Parses 3 values, suitable for use as a stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HEMATOXYLIN; public static final String HEMATOXYLIN; Default name (and spelling) for hematoxylin stain. See Also:. Constant Field Values. EOSIN; public static final String EOSIN; Default name for eosin stain. See Also:. Constant Field Values. DAB; public static final String DAB; Default name for DAB stain. See Also:. Constant Field Values. Constructor Details. ColorDeconvolutionStains; public ColorDeconvolutionStains(String name,; StainVector stain1,; StainVector stain2,; StainVector stain3,; double maxRed,; double maxGreen,; double maxBlue); Constructor for ColorDeconvolutionStains with three stain vectors. Parameters:; name - ; stain1 - ; stain2 - ; stain3 - ; maxRed - background (white) value for red channel; maxGreen - background (white) value for green channel; maxBlue - background (white) value for blue channel. ColorDeconvolutionStains; public ColorDecon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:4827,inherit,inherited,4827,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['inherit'],['inherited']
Modifiability,"in the current hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; plane - ; Since:; v0.4.0; See Also:. selectObjectsByPlane(PathObjectHierarchy, ImagePlane). selectObjectsByPlane; public static void selectObjectsByPlane(PathObjectHierarchy hierarchy,; ImagePlane plane); Selected objects in the specified hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; hierarchy - ; plane - ; Since:; v0.4.0. selectObjects; public static void selectObjects(Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects); Set all objects in a collection to be selected, without any being chosen as the main object. Parameters:; pathObjects - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection); Set all objects in a collection to be selected, including a specified main selected object. Parameters:; pathObjects - ; mainSelection - . selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Set one or more objects to be selected within the specified hierarchy. Parameters:; hierarchy - ; pathObjects - . selectObjects; public static void selectObjects(PathObject... pathObjects); Set one or more objects to be selected within the current hierarchy. Parameters:; pathObjects - . getObjects; public static List<PathObject> getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Get a list of all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - ; Returns:. selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the specified hierarc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:85712,extend,extends,85712,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"in. For a specified parent object, generate a task to run. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for multiple objects. addShapeMeasurements(Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:28282,plugin,plugins,28282,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"in; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTask",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:4538,extend,extends,4538,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['extend'],['extends']
Modifiability,"in<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public Positive",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:1823,inherit,inherited,1823,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['inherit'],['inherited']
Modifiability,"in<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and confi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:1296,plugin,plugin,1296,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"in<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.app",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6927,plugin,plugins,6927,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"in<T>; Simple plugin to create square tiles, which may later have measurements added. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TilerPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:1739,plugin,plugin,1739,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugin']
Modifiability,"ineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Specified by:; updateProgress in interface SimpleProgressMonitor; Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; public void pluginCompleted(String message); Description copied from interface: SimpleProgressMonitor; Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Specified by:; pluginCompleted in interface SimpleProgressMonitor; Parameters:; message - message to show upon completion. cancelled; public boolean cancelled(); Description copied from interface: SimpleProgressMonitor; Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. Specified by:; cancelled in interface SimpleProgressMonitor; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:3020,plugin,pluginCompleted,3020,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,5,['plugin'],"['plugin', 'pluginCompleted']"
Modifiability,"ines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. SplitAnnotationsByLineCommand - Class in qupath.lib.gui.commands.objects. Command to split annotations using lines. SplitAnnotationsByLineCommand() - Constructor for class qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand;  ; SplitAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. SplitAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; splitAreasByBufferedLines(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. splitAreasByBufferedLines(Collection<? extends PathObject>, Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. splitAreasByLines(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. splitAreasByLines(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. splitAreaToPolygons(Area, int, int, int) - Static method in class qupath.lib.roi.RoiTools. Split Area into PolygonROIs for the exterior and the holes. splitChannels(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Split channels o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:988988,extend,extends,988988,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['extend'],['extends']
Modifiability,"ing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Tile processing complete. Method Details. values; public static ParallelTileObject.Status[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ParallelTileObject.Status valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html:1636,inherit,inherited,1636,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,1,['inherit'],['inherited']
Modifiability,"ing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitAllAnnotationAreasByLines(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitAllAnnotationAreasByLines(PathObjectHierarchy, double, boolean) - Static method in class qupath.lib.scripting.QP. Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. SplitAnnotationsByLineCommand - Class in qupath.lib.gui.commands.objects. Command to split annotations using lines. SplitAnnotationsByLineCommand() - Constructor for class qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand;  ; SplitAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. SplitAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; splitAreasByBufferedLines(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. splitAreasByBufferedLines(Collection<? extends PathObject>, Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. splitAreasByLines(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:988434,plugin,plugins,988434,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ing that the object is part of a hierarchy with a root). static TMACoreObject; getAncestorTMACore(PathObject pathObject). Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. static <T extends PathObject>List<T>; getAreaObjects(Collection<T> pathObjects). Get a list of objects with area ROIs from a collection of objects. static Set<String>; getAvailableFeatures(Collection<? extends PathObject> pathObjects). Get a set containing the names of all measurements found in the measurement lists of a specified object collection. static Collection<PathObject>; getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all descendant objects with a specified type. static List<PathObject>; getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent). Get all descendant objects as a flattened list. static <T extends PathObject>List<T>; getLineObjects(Collection<T> pathObjects). Get a list of objects with line ROIs from a collection of objects. static ROI; getNucleusOrMainROI(PathObject pathObject). Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. static ROI; getNucleusROI(PathObject pathObject). Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. static Collection<PathObject>; getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:5762,extend,extends,5762,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"ing the merging strategy to the input objects. MERGE_SELECTED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; mergeAnnotations(Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Merge annotations for the current hierarchy. mergeAnnotations(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Merge the specified annotations to create a new annotation containing the union of their ROIs. mergeChannels(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Merge channels from a multichannel Mat. mergeClasses(PathClass, PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Merge two classifications together. mergeObjects(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Merge objects by calculating the union of their ROIs. mergeObjects(Collection<? extends PathObject>, Function<? super PathObject, ? extends K>) - Static method in class qupath.lib.objects.PathObjectTools. Merge objects that share a property in common. mergePointsForAllClasses() - Static method in class qupath.lib.scripting.QP. Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations; of the current hierarchy, creating multi-point annotations for all matching points and removing the (previously-separated) annotations. mergePointsForAllClasses(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Merge point annotations sharing the same PathClass and ImagePlane, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. mergePointsForClass(PathObjectHierarchy, PathClass) - Static method in class qupath.lib.objects.PathObjectTools. Merge point annotations with the specified PathClass sharing the same ImagePlane, ; creating a single multi-point annotation for all matching points and rem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:688283,extend,extends,688283,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['extend'],['extends']
Modifiability,"ing, boolean, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter, with help text. addChartExportMenu(XYChart<Number, Number>, ContextMenu) - Static method in class qupath.lib.gui.charts.ChartTools. Add a menu item to a context menu for displaying a chart for export. addChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Add an object to the child list of this object. addChildObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Add a collection of objects to the child list of this object. addChoiceParameter(String, String, S, List<S>) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices. addChoiceParameter(String, String, S, List<S>, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices and help text. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addClusterMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Compute mean measurements from clustering all connected objects. addColorPropertyPreference(IntegerProperty, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addCompletion(AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(Collection<? extends AutoCompletions.Completion>) - Method in class qupath.lib.gui.scripting.completors.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:13641,extend,extends,13641,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ing.QP. Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitAllAnnotationAreasByLines(PathObjectHierarchy, double, boolean) - Static method in class qupath.lib.scripting.QP. Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. SplitAnnotationsByLineCommand - Class in qupath.lib.gui.commands.objects. Command to split annotations using lines. SplitAnnotationsByLineCommand() - Constructor for class qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand;  ; SplitAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. SplitAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; splitAreasByBufferedLines(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. splitAreasByBufferedLines(Collection<? extends PathObject>, Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. splitAreasByLines(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. splitAreasByLines(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:988673,extend,extends,988673,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ing> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9598,plugin,plugins,9598,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"ing imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:2012,inherit,inherited,2012,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['inherit'],['inherited']
Modifiability,"ing label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""data.op."" and include ""ext"" if the op is added via an extension. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""data.op."" a warning will be logged. buildServer; public static ImageDataServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution); Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp.; ; Warning! Because ImageData are mutable, this can potentially result in inconsistencies if a change is made that impacts ; the behavior of the op while tiles are still being requested. Parameters:; imageData - the ImageData to wrap; dataOp - the op performing pixel transformations; resolution - the resolution at which th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:3679,extend,extends,3679,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,1,['extend'],['extends']
Modifiability,"inks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class PositiveCellDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellDetection; qupath.imagej.detect.cells.PositiveCellDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:1092,inherit,inherited,1092,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['inherit'],['inherited']
Modifiability,"inning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:637913,plugin,plugins,637913,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"inputResolution,; Map<Integer,PathClass> classifications). Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one channel of an image. static PixelClassifier; createThresholdClassifier(PixelCalibration inputResolution,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals). Create a new PixelClassifier that applies a threshold to one or more channels of an image. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for PixelClassifier objects. static PixelClassifier; readClassifier(Path path). Read a standard pixel classifier from a file. static void; writeClassifier(PixelClassifier classifier,; Path path). Write a pixel classifier to a file. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifiers; public PixelClassifiers(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for PixelClassifier objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. readClassifier; public static PixelClassifier readClassifier(Path path); throws IOException; Read a standard pixel classifier from a file. Parameters:; path - the file containing the classifier; Returns:; Throws:; IOException. writeClassifier; public static void writeClassifier(PixelClassifier classifier,; Path path); throws IOException; Write a pixel classifier to a file. Parameters:; classifier - ; path - ; Throws:; IOException. createClassifier; public static PixelClassifier createClassifier(ImageDataOp op,; PixelCalibration inputResolution",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html:2214,inherit,inherited,2214,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifiers.html,1,['inherit'],['inherited']
Modifiability,"ins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcessor. Parameters.Builder<S,T> - Class in qupath.lib.experimental.pixels. Builder class for Parameters. parametersInitialized - Variable in class qupath.imagej.detect.cells.WatershedCellDetection;  ; params - Variable in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parent(Window) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:745076,plugin,plugins,745076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:1926,plugin,plugins,1926,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugins']
Modifiability,ins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java. JAVA_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Java-like import statements. JAVA_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that extracts a token used to determine Java completions. JavadocViewer - Class in qupath.lib.gui. Command to show javadocs in a WebView. JPEG - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. JPEG compression (only for single channel or RGB 8-bit images). JpegWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write JPEG images using ImageIO. JpegWriter() - Constructor for class qupath.lib.images.writers.JpegWriter;  ; JSON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for JSON. JSON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; JsonImageServerBuilder - Class in qupath.lib.images.servers. ImageServerBuilder that con,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:639085,variab,variable,639085,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getToolBar; public ToolBar getToolBar(); Get the main toolbar. Returns:. getUndoRedoManager; public UndoRedoManager getUndoRedoManager(); Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. Returns:. isReadOnly; public boolean isReadOnly(); Query whether QuPath is in 'read-only' mode. This suppresses dialogs that ask about saving changes. Returns:; See Also:. setReadOnly(boolean). readOnlyProperty; public ReadOnlyBooleanProperty readOnlyProperty(); Property indicating whether QuPath is in 'read",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:27328,plugin,plugin,27328,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,4,['plugin'],['plugin']
Modifiability,"int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673330,extend,extend,673330,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extend']
Modifiability,"int) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; PaneTools - Class in qupath.lib.gui.tools. Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PaneTools() - Constructor for class qupath.lib.gui.tools.PaneTools. Deprecated.;  ; parallelize() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Parallelize tile export, if possible. parallelize(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744254,plugin,plugins,744254,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is specified. getName() - Method in class qupath.openc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453501,plugin,plugins,453501,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB value from specified input values, clipping to the range 0-255. static int; packRGB(int r,; int g,; int b). Make a packed RGB value from specified input values. static int; red(int rgb). Extract the 8-bit red value from a packed RGB value. static int[]; unpackARGB(int rgb). Unpack a packed ARGB int into red, green and blue values, ; returning the result as a 4-element int array. static int[]; unpackARGB(int rgb,; int[] array). Unpack a packed ARGB int into red, green and blue values, ; into a 4-element int array. static int[]; unpackRGB(int rgb). Unpack a packed (A)RGB int into red, green and blue values, ; returning the result as a 3-element int array. static int[]; unpackRGB(int rgb,; int[] array). Unpack a packed (A)RGB int into red, green and blue values, ; into a 3-element int array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. WHITE; public static final Integer WHITE; Packed int representing white. BLACK; public static final Integer BLACK; Packed int representing black. RED; public static final Integer RED; Packed int representing red. GREEN; public static final Integer GREEN; Packed int representing green. BLUE; public static final Integer BLUE; Packed int representing blue. MAGENTA; public static final Integer MAGENTA; Packed int representing magenta. CYAN; public static final Integer CYAN; Packed int representing cyan. YELLOW; public static final Integer YELLOW; Packed int representing yellow. MASK_ALPHA; public static final Integer MASK_ALPHA; Mask for use when extracting the alpha component from a packed ARGB int value. MASK_RED; public static final Integer MASK_RED; Mask for use when extracting the red component from a packed (A)RGB int value. MASK_GREEN; public stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:3826,inherit,inherited,3826,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['inherit'],['inherited']
Modifiability,"int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:2953,layers,layers,2953,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['layers'],['layers']
Modifiability,"ion() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.openc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:380655,plugin,plugins,380655,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ion). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:2301,adapt,adapt,2301,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['adapt'],['adapt']
Modifiability,"ion, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:3825,plugin,plugin,3825,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugin']
Modifiability,"ion, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equivalent to this one with the updated t value. RegionRequest; updateZ(int z). Create a RegionRequest equivalent to this one with the updated z value. Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:4283,inherit,inherited,4283,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['inherit'],['inherited']
Modifiability,"ion. Parse a Version object representing a semantic version number from a String. parseAnnotations(Action, AnnotatedElement) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action. parseAnnotations(Action, AnnotatedElement, String) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action with an optional base menu. parseArgStringValues(String) - Static method in class qupath.lib.common.GeneralTools. Parse the contents of a JSON String. parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.opencv.CellCountsCV;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. parseColorDeconvolutionStainsArg(String) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. parseDisplaySettings(JsonElement) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object, if possible. parseDisplaySettings(Path) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object. parseLayers(Net, int, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Parse the layers for a Net, which allows inspection of names and sizes. parseNumeric(List<String>, bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:748014,plugin,plugins,748014,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ion.getImagePlane() instead (changed for better consistency with other classes). getPlane(int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. getPlane(ImageRegion) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. getPlane(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, and z and t set from an existing ROI. getPlaneWithChannel(int, int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane, where the channel, z-slice and time point can be specified. getPlaneWithChannel(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel, z and t set from an existing ROI. getPluginClass() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Get the full name of the plugin class. getPointObjects(Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get objects that contain Point ROIs. getPointObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with point ROIs from a collection of objects. getPoolSizeProp() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager;  ; getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:486961,plugin,plugin,486961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"ion; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObject; class PathObject extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObjectConnections; class PathObjectConnections extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathROIObject; class PathROIObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathRootObject; class PathRootObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathTileObject; class PathTileObject extends PathDetectionObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundExceptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:4772,extend,extends,4772,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"ion; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MATCH_VIEWER_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; TOGGLE_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_1x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x1;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_2x2;  ; final org.controlsfx.control.action.Action; VIEWER_GRID_3x3;  ; final org.controlsfx.control.action.Action; ZOOM_TO_FIT;  . Constructor Summary; Constructors. Constructor; Description; ViewerActions(ViewerManager viewerManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:1813,inherit,inherited,1813,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,1,['inherit'],['inherited']
Modifiability,"ion; runProjectScriptAction;  ; protected org.controlsfx.control.action.Action; runProjectScriptNoSaveAction;  ; protected org.controlsfx.control.action.Action; runScriptAction;  ; protected org.controlsfx.control.action.Action; runSelectedAction;  ; protected BooleanProperty; smartEditing;  ; protected org.controlsfx.control.action.Action; smartEditingAction;  ; protected org.controlsfx.control.action.Action; undoAction;  . Constructor Summary; Constructors. Constructor; Description; DefaultScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addNewScript(String script,; ScriptLanguage language,; boolean doSelect). Create a new script in the specified language. protected ReadOnlyObjectProperty<ScriptLanguage>; currentLanguageProperty();  ; protected ReadOnlyObjectProperty<ScriptSyntax>; currentSyntaxProperty();  ; protected static String; getClipboardText(boolean escapeCharacters);  ; protected ScriptEditorControl<? extends Region>; getCurrentConsoleControl();  ; protected ScriptEditorControl<? extends Region>; getCurrentEditorControl();  ; protected ScriptLanguage; getCurrentLanguage(). Gets the value of the currentLanguage property. protected ScriptTab; getCurrentScriptTab();  ; protected ScriptSyntax; getCurrentSyntax(). Gets the value of the currentSyntax property. protected String; getCurrentText();  ; protected ScriptEditorControl<?>; getNewConsole();  ; protected ScriptEditorControl<?>; getNewEditor();  ; protected String; getSelectedText();  ; Stage; getStage(). Get the stage for this script editor. protected static boolean; pasteFromClipboard(ScriptEditorControl<?> control,; boolean escapeCharacters);  ; protected void; promptToSetFontSize(). Update the font size for the script editor and console. ObservableValue<Boolean>; scriptRunning(). Observable value indicating whether a script is currently running or not. protected ObservableBooleanValue; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:3534,extend,extends,3534,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,2,['extend'],['extends']
Modifiability,"ion<PathObject> pathObjects); Add the specified collection of objects to the current PathObjectHierarchy.; ; This will trigger a hierarchy changed event. Parameters:; pathObjects - . removeObject; public static void removeObject(PathObject pathObject,; boolean keepChildren); Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObject - ; keepChildren - . removeObjects; public static void removeObjects(PathObject[] pathObjects,; boolean keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:59585,extend,extends,59585,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3142,inherit,inherited,3142,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['inherit'],['inherited']
Modifiability,"ions.ExportImageActions;  ; exportJson(boolean) - Method in class qupath.lib.images.writers.TileExporter. Optionally export a JSON file that includes label information and image/label pairs, where available. exportMeasurements(File) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportMeasurements(OutputStream) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportObjectsAsGeoJSON(File, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. exportObjectsAsGeoJSON(OutputStream, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. exportObjectsAsGeoJSON(Path, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. ExportObjectsCommand - Class in qupath.lib.gui.commands. Command to export object(s) in GeoJSON format to an output file. exportObjectsToGeoJson(Collection<? extends PathObject>, String, String, String...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportObjectsToGeoJson(Collection<? extends PathObject>, String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportPreferences(OutputStream) - Static method in class qupath.lib.gui.prefs.PathPrefs. Export preferences to a stream. exportSelectedObjectsToGeoJson(String, String, String...) - Static method in class qupath.lib.scripting.QP. Export the selected objects to an output file as GeoJS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:290213,extend,extends,290213,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ionsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1780,inherit,inherited,1780,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['inherit'],['inherited']
Modifiability,"ion region). Crop an specified region based on a bounding box. TransformedServerBuilder; deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers). Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. TransformedServerBuilder; extractChannels(int... channels). Extract specified channels for an image. TransformedServerBuilder; extractChannels(String... names). Extract specified channels for an image. TransformedServerBuilder; maxChannelProject(). Perform a maximum projection of the channels. TransformedServerBuilder; minChannelProject(). Perform a minimum projection of the channels. TransformedServerBuilder; reorderRGB(String order). Rearrange the channel order of an RGB image. TransformedServerBuilder; rotate(RotatedImageServer.Rotation rotation). Rotate the image, using an increment of 90 degrees. TransformedServerBuilder; transform(AffineTransform transform). Apply an AffineTransform to the server. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TransformedServerBuilder; public TransformedServerBuilder(ImageServer<BufferedImage> baseServer); Create a transformed ImageServer. Parameters:; baseServer - the initial server that will be transformed. Method Details. crop; public TransformedServerBuilder crop(ImageRegion region); Crop an specified region based on a bounding box. Parameters:; region - ; Returns:. transform; public TransformedServerBuilder transform(AffineTransform transform); Apply an AffineTransform to the server. ; Note that the transform must be invertible, otherwise and IllegalArgumentException will be thrown. Parameters:; transform - ; Returns:. deconvolveStains; public TransformedServerBuilder deconvolveStains(ColorDeconvolutionStains stains,; int... stainNumbers); Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html:2600,inherit,inherited,2600,javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformedServerBuilder.html,1,['inherit'],['inherited']
Modifiability,"ipting.richtextfx.stylers. Styling to apply to a CodeArea, based on Markdown syntax. markerOpacity - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.Pix",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672233,variab,variable,672233,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ipting.richtextfx.stylers; Class MarkdownStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. All Implemented Interfaces:; ScriptStyler. public class MarkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Specified by:; getBaseStyle in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be us",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html:1344,inherit,inherited,1344,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,1,['inherit'],['inherited']
Modifiability,"iption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2616,inherit,inherited,2616,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['inherit'],['inherited']
Modifiability,"iption of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3174,plugin,plugins,3174,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugins']
Modifiability,"iption; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TUMOR; public static final PathClassFactory.StandardPathClasses TUMOR; Tumor classification. STROMA; public static final PathClassFactory.StandardPathClasses STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClassFactory.StandardPathClasses IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClassFactory.StandardPathClasses IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClassFactory.StandardPathClasses IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClassFactory.StandardPathClasses NECROSIS; Necrosis classification. OTHER; public static final PathClassFactory.StandardPathClasses OTHER; Other classification. REGION; public static final PathClassFactory.StandardPathClasses REGION; Region class. This behaves slightly differently",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:2138,inherit,inherited,2138,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,1,['inherit'],['inherited']
Modifiability,"iption; RefineAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:1916,plugin,plugin,1916,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,1,['plugin'],['plugin']
